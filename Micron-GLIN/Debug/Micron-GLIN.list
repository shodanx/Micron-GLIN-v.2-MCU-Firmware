
Micron-GLIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f940  08000140  08000140  00010140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001184  0800fa80  0800fa80  0001fa80  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010c04  08010c04  00030510  2**0
                  CONTENTS
  4 .ARM          00000008  08010c04  08010c04  00020c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010c0c  08010c0c  00030510  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010c0c  08010c0c  00020c0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010c10  08010c10  00020c10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000510  20000000  08010c14  00030000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .bss          00000f30  20000510  08011124  00030510  2**2
                  ALLOC
 10 ._user_heap_stack 00001c00  20001440  08011124  00031440  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00030510  2**0
                  CONTENTS, READONLY
 12 .debug_info   000085e2  00000000  00000000  00030539  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ba4  00000000  00000000  00038b1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005e0  00000000  00000000  0003a6c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004e8  00000000  00000000  0003aca0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016841  00000000  00000000  0003b188  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000096ba  00000000  00000000  000519c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083da0  00000000  00000000  0005b083  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000dee23  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002e9c  00000000  00000000  000dee74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000510 	.word	0x20000510
 800015c:	00000000 	.word	0x00000000
 8000160:	0800fa5c 	.word	0x0800fa5c

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000514 	.word	0x20000514
 800017c:	0800fa5c 	.word	0x0800fa5c

08000180 <strcmp>:
 8000180:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000184:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000188:	2a01      	cmp	r2, #1
 800018a:	bf28      	it	cs
 800018c:	429a      	cmpcs	r2, r3
 800018e:	d0f7      	beq.n	8000180 <strcmp>
 8000190:	1ad0      	subs	r0, r2, r3
 8000192:	4770      	bx	lr

08000194 <strlen>:
 8000194:	4603      	mov	r3, r0
 8000196:	f813 2b01 	ldrb.w	r2, [r3], #1
 800019a:	2a00      	cmp	r2, #0
 800019c:	d1fb      	bne.n	8000196 <strlen+0x2>
 800019e:	1a18      	subs	r0, r3, r0
 80001a0:	3801      	subs	r0, #1
 80001a2:	4770      	bx	lr

080001a4 <__aeabi_drsub>:
 80001a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001a8:	e002      	b.n	80001b0 <__adddf3>
 80001aa:	bf00      	nop

080001ac <__aeabi_dsub>:
 80001ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001b0 <__adddf3>:
 80001b0:	b530      	push	{r4, r5, lr}
 80001b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ba:	ea94 0f05 	teq	r4, r5
 80001be:	bf08      	it	eq
 80001c0:	ea90 0f02 	teqeq	r0, r2
 80001c4:	bf1f      	itttt	ne
 80001c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001d6:	f000 80e2 	beq.w	800039e <__adddf3+0x1ee>
 80001da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001e2:	bfb8      	it	lt
 80001e4:	426d      	neglt	r5, r5
 80001e6:	dd0c      	ble.n	8000202 <__adddf3+0x52>
 80001e8:	442c      	add	r4, r5
 80001ea:	ea80 0202 	eor.w	r2, r0, r2
 80001ee:	ea81 0303 	eor.w	r3, r1, r3
 80001f2:	ea82 0000 	eor.w	r0, r2, r0
 80001f6:	ea83 0101 	eor.w	r1, r3, r1
 80001fa:	ea80 0202 	eor.w	r2, r0, r2
 80001fe:	ea81 0303 	eor.w	r3, r1, r3
 8000202:	2d36      	cmp	r5, #54	; 0x36
 8000204:	bf88      	it	hi
 8000206:	bd30      	pophi	{r4, r5, pc}
 8000208:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800020c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000210:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000214:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x70>
 800021a:	4240      	negs	r0, r0
 800021c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000220:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000224:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000228:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800022c:	d002      	beq.n	8000234 <__adddf3+0x84>
 800022e:	4252      	negs	r2, r2
 8000230:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000234:	ea94 0f05 	teq	r4, r5
 8000238:	f000 80a7 	beq.w	800038a <__adddf3+0x1da>
 800023c:	f1a4 0401 	sub.w	r4, r4, #1
 8000240:	f1d5 0e20 	rsbs	lr, r5, #32
 8000244:	db0d      	blt.n	8000262 <__adddf3+0xb2>
 8000246:	fa02 fc0e 	lsl.w	ip, r2, lr
 800024a:	fa22 f205 	lsr.w	r2, r2, r5
 800024e:	1880      	adds	r0, r0, r2
 8000250:	f141 0100 	adc.w	r1, r1, #0
 8000254:	fa03 f20e 	lsl.w	r2, r3, lr
 8000258:	1880      	adds	r0, r0, r2
 800025a:	fa43 f305 	asr.w	r3, r3, r5
 800025e:	4159      	adcs	r1, r3
 8000260:	e00e      	b.n	8000280 <__adddf3+0xd0>
 8000262:	f1a5 0520 	sub.w	r5, r5, #32
 8000266:	f10e 0e20 	add.w	lr, lr, #32
 800026a:	2a01      	cmp	r2, #1
 800026c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000270:	bf28      	it	cs
 8000272:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000276:	fa43 f305 	asr.w	r3, r3, r5
 800027a:	18c0      	adds	r0, r0, r3
 800027c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000280:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000284:	d507      	bpl.n	8000296 <__adddf3+0xe6>
 8000286:	f04f 0e00 	mov.w	lr, #0
 800028a:	f1dc 0c00 	rsbs	ip, ip, #0
 800028e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000292:	eb6e 0101 	sbc.w	r1, lr, r1
 8000296:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800029a:	d31b      	bcc.n	80002d4 <__adddf3+0x124>
 800029c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002a0:	d30c      	bcc.n	80002bc <__adddf3+0x10c>
 80002a2:	0849      	lsrs	r1, r1, #1
 80002a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80002a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002ac:	f104 0401 	add.w	r4, r4, #1
 80002b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002b8:	f080 809a 	bcs.w	80003f0 <__adddf3+0x240>
 80002bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002c0:	bf08      	it	eq
 80002c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002c6:	f150 0000 	adcs.w	r0, r0, #0
 80002ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ce:	ea41 0105 	orr.w	r1, r1, r5
 80002d2:	bd30      	pop	{r4, r5, pc}
 80002d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002d8:	4140      	adcs	r0, r0
 80002da:	eb41 0101 	adc.w	r1, r1, r1
 80002de:	3c01      	subs	r4, #1
 80002e0:	bf28      	it	cs
 80002e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002e6:	d2e9      	bcs.n	80002bc <__adddf3+0x10c>
 80002e8:	f091 0f00 	teq	r1, #0
 80002ec:	bf04      	itt	eq
 80002ee:	4601      	moveq	r1, r0
 80002f0:	2000      	moveq	r0, #0
 80002f2:	fab1 f381 	clz	r3, r1
 80002f6:	bf08      	it	eq
 80002f8:	3320      	addeq	r3, #32
 80002fa:	f1a3 030b 	sub.w	r3, r3, #11
 80002fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000302:	da0c      	bge.n	800031e <__adddf3+0x16e>
 8000304:	320c      	adds	r2, #12
 8000306:	dd08      	ble.n	800031a <__adddf3+0x16a>
 8000308:	f102 0c14 	add.w	ip, r2, #20
 800030c:	f1c2 020c 	rsb	r2, r2, #12
 8000310:	fa01 f00c 	lsl.w	r0, r1, ip
 8000314:	fa21 f102 	lsr.w	r1, r1, r2
 8000318:	e00c      	b.n	8000334 <__adddf3+0x184>
 800031a:	f102 0214 	add.w	r2, r2, #20
 800031e:	bfd8      	it	le
 8000320:	f1c2 0c20 	rsble	ip, r2, #32
 8000324:	fa01 f102 	lsl.w	r1, r1, r2
 8000328:	fa20 fc0c 	lsr.w	ip, r0, ip
 800032c:	bfdc      	itt	le
 800032e:	ea41 010c 	orrle.w	r1, r1, ip
 8000332:	4090      	lslle	r0, r2
 8000334:	1ae4      	subs	r4, r4, r3
 8000336:	bfa2      	ittt	ge
 8000338:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800033c:	4329      	orrge	r1, r5
 800033e:	bd30      	popge	{r4, r5, pc}
 8000340:	ea6f 0404 	mvn.w	r4, r4
 8000344:	3c1f      	subs	r4, #31
 8000346:	da1c      	bge.n	8000382 <__adddf3+0x1d2>
 8000348:	340c      	adds	r4, #12
 800034a:	dc0e      	bgt.n	800036a <__adddf3+0x1ba>
 800034c:	f104 0414 	add.w	r4, r4, #20
 8000350:	f1c4 0220 	rsb	r2, r4, #32
 8000354:	fa20 f004 	lsr.w	r0, r0, r4
 8000358:	fa01 f302 	lsl.w	r3, r1, r2
 800035c:	ea40 0003 	orr.w	r0, r0, r3
 8000360:	fa21 f304 	lsr.w	r3, r1, r4
 8000364:	ea45 0103 	orr.w	r1, r5, r3
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	f1c4 040c 	rsb	r4, r4, #12
 800036e:	f1c4 0220 	rsb	r2, r4, #32
 8000372:	fa20 f002 	lsr.w	r0, r0, r2
 8000376:	fa01 f304 	lsl.w	r3, r1, r4
 800037a:	ea40 0003 	orr.w	r0, r0, r3
 800037e:	4629      	mov	r1, r5
 8000380:	bd30      	pop	{r4, r5, pc}
 8000382:	fa21 f004 	lsr.w	r0, r1, r4
 8000386:	4629      	mov	r1, r5
 8000388:	bd30      	pop	{r4, r5, pc}
 800038a:	f094 0f00 	teq	r4, #0
 800038e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000392:	bf06      	itte	eq
 8000394:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000398:	3401      	addeq	r4, #1
 800039a:	3d01      	subne	r5, #1
 800039c:	e74e      	b.n	800023c <__adddf3+0x8c>
 800039e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003a2:	bf18      	it	ne
 80003a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003a8:	d029      	beq.n	80003fe <__adddf3+0x24e>
 80003aa:	ea94 0f05 	teq	r4, r5
 80003ae:	bf08      	it	eq
 80003b0:	ea90 0f02 	teqeq	r0, r2
 80003b4:	d005      	beq.n	80003c2 <__adddf3+0x212>
 80003b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ba:	bf04      	itt	eq
 80003bc:	4619      	moveq	r1, r3
 80003be:	4610      	moveq	r0, r2
 80003c0:	bd30      	pop	{r4, r5, pc}
 80003c2:	ea91 0f03 	teq	r1, r3
 80003c6:	bf1e      	ittt	ne
 80003c8:	2100      	movne	r1, #0
 80003ca:	2000      	movne	r0, #0
 80003cc:	bd30      	popne	{r4, r5, pc}
 80003ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003d2:	d105      	bne.n	80003e0 <__adddf3+0x230>
 80003d4:	0040      	lsls	r0, r0, #1
 80003d6:	4149      	adcs	r1, r1
 80003d8:	bf28      	it	cs
 80003da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003e4:	bf3c      	itt	cc
 80003e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003ea:	bd30      	popcc	{r4, r5, pc}
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003f8:	f04f 0000 	mov.w	r0, #0
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000402:	bf1a      	itte	ne
 8000404:	4619      	movne	r1, r3
 8000406:	4610      	movne	r0, r2
 8000408:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800040c:	bf1c      	itt	ne
 800040e:	460b      	movne	r3, r1
 8000410:	4602      	movne	r2, r0
 8000412:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000416:	bf06      	itte	eq
 8000418:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800041c:	ea91 0f03 	teqeq	r1, r3
 8000420:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	bf00      	nop

08000428 <__aeabi_ui2d>:
 8000428:	f090 0f00 	teq	r0, #0
 800042c:	bf04      	itt	eq
 800042e:	2100      	moveq	r1, #0
 8000430:	4770      	bxeq	lr
 8000432:	b530      	push	{r4, r5, lr}
 8000434:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000438:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800043c:	f04f 0500 	mov.w	r5, #0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e750      	b.n	80002e8 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_i2d>:
 8000448:	f090 0f00 	teq	r0, #0
 800044c:	bf04      	itt	eq
 800044e:	2100      	moveq	r1, #0
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000458:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800045c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000460:	bf48      	it	mi
 8000462:	4240      	negmi	r0, r0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e73e      	b.n	80002e8 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_f2d>:
 800046c:	0042      	lsls	r2, r0, #1
 800046e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000472:	ea4f 0131 	mov.w	r1, r1, rrx
 8000476:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800047a:	bf1f      	itttt	ne
 800047c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000480:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000484:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000488:	4770      	bxne	lr
 800048a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800048e:	bf08      	it	eq
 8000490:	4770      	bxeq	lr
 8000492:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000496:	bf04      	itt	eq
 8000498:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800049c:	4770      	bxeq	lr
 800049e:	b530      	push	{r4, r5, lr}
 80004a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004ac:	e71c      	b.n	80002e8 <__adddf3+0x138>
 80004ae:	bf00      	nop

080004b0 <__aeabi_ul2d>:
 80004b0:	ea50 0201 	orrs.w	r2, r0, r1
 80004b4:	bf08      	it	eq
 80004b6:	4770      	bxeq	lr
 80004b8:	b530      	push	{r4, r5, lr}
 80004ba:	f04f 0500 	mov.w	r5, #0
 80004be:	e00a      	b.n	80004d6 <__aeabi_l2d+0x16>

080004c0 <__aeabi_l2d>:
 80004c0:	ea50 0201 	orrs.w	r2, r0, r1
 80004c4:	bf08      	it	eq
 80004c6:	4770      	bxeq	lr
 80004c8:	b530      	push	{r4, r5, lr}
 80004ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004ce:	d502      	bpl.n	80004d6 <__aeabi_l2d+0x16>
 80004d0:	4240      	negs	r0, r0
 80004d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004e2:	f43f aed8 	beq.w	8000296 <__adddf3+0xe6>
 80004e6:	f04f 0203 	mov.w	r2, #3
 80004ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ee:	bf18      	it	ne
 80004f0:	3203      	addne	r2, #3
 80004f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004f6:	bf18      	it	ne
 80004f8:	3203      	addne	r2, #3
 80004fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004fe:	f1c2 0320 	rsb	r3, r2, #32
 8000502:	fa00 fc03 	lsl.w	ip, r0, r3
 8000506:	fa20 f002 	lsr.w	r0, r0, r2
 800050a:	fa01 fe03 	lsl.w	lr, r1, r3
 800050e:	ea40 000e 	orr.w	r0, r0, lr
 8000512:	fa21 f102 	lsr.w	r1, r1, r2
 8000516:	4414      	add	r4, r2
 8000518:	e6bd      	b.n	8000296 <__adddf3+0xe6>
 800051a:	bf00      	nop

0800051c <__aeabi_dmul>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000522:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000526:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800052a:	bf1d      	ittte	ne
 800052c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000530:	ea94 0f0c 	teqne	r4, ip
 8000534:	ea95 0f0c 	teqne	r5, ip
 8000538:	f000 f8de 	bleq	80006f8 <__aeabi_dmul+0x1dc>
 800053c:	442c      	add	r4, r5
 800053e:	ea81 0603 	eor.w	r6, r1, r3
 8000542:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000546:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800054a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800054e:	bf18      	it	ne
 8000550:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000554:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000558:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800055c:	d038      	beq.n	80005d0 <__aeabi_dmul+0xb4>
 800055e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000562:	f04f 0500 	mov.w	r5, #0
 8000566:	fbe1 e502 	umlal	lr, r5, r1, r2
 800056a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800056e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000572:	f04f 0600 	mov.w	r6, #0
 8000576:	fbe1 5603 	umlal	r5, r6, r1, r3
 800057a:	f09c 0f00 	teq	ip, #0
 800057e:	bf18      	it	ne
 8000580:	f04e 0e01 	orrne.w	lr, lr, #1
 8000584:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000588:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800058c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000590:	d204      	bcs.n	800059c <__aeabi_dmul+0x80>
 8000592:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000596:	416d      	adcs	r5, r5
 8000598:	eb46 0606 	adc.w	r6, r6, r6
 800059c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005b0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005b4:	bf88      	it	hi
 80005b6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ba:	d81e      	bhi.n	80005fa <__aeabi_dmul+0xde>
 80005bc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005c0:	bf08      	it	eq
 80005c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005c6:	f150 0000 	adcs.w	r0, r0, #0
 80005ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ce:	bd70      	pop	{r4, r5, r6, pc}
 80005d0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005d4:	ea46 0101 	orr.w	r1, r6, r1
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	ea81 0103 	eor.w	r1, r1, r3
 80005e0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005e4:	bfc2      	ittt	gt
 80005e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ee:	bd70      	popgt	{r4, r5, r6, pc}
 80005f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005f4:	f04f 0e00 	mov.w	lr, #0
 80005f8:	3c01      	subs	r4, #1
 80005fa:	f300 80ab 	bgt.w	8000754 <__aeabi_dmul+0x238>
 80005fe:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000602:	bfde      	ittt	le
 8000604:	2000      	movle	r0, #0
 8000606:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800060a:	bd70      	pople	{r4, r5, r6, pc}
 800060c:	f1c4 0400 	rsb	r4, r4, #0
 8000610:	3c20      	subs	r4, #32
 8000612:	da35      	bge.n	8000680 <__aeabi_dmul+0x164>
 8000614:	340c      	adds	r4, #12
 8000616:	dc1b      	bgt.n	8000650 <__aeabi_dmul+0x134>
 8000618:	f104 0414 	add.w	r4, r4, #20
 800061c:	f1c4 0520 	rsb	r5, r4, #32
 8000620:	fa00 f305 	lsl.w	r3, r0, r5
 8000624:	fa20 f004 	lsr.w	r0, r0, r4
 8000628:	fa01 f205 	lsl.w	r2, r1, r5
 800062c:	ea40 0002 	orr.w	r0, r0, r2
 8000630:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000634:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	fa21 f604 	lsr.w	r6, r1, r4
 8000640:	eb42 0106 	adc.w	r1, r2, r6
 8000644:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000648:	bf08      	it	eq
 800064a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f1c4 040c 	rsb	r4, r4, #12
 8000654:	f1c4 0520 	rsb	r5, r4, #32
 8000658:	fa00 f304 	lsl.w	r3, r0, r4
 800065c:	fa20 f005 	lsr.w	r0, r0, r5
 8000660:	fa01 f204 	lsl.w	r2, r1, r4
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	f141 0100 	adc.w	r1, r1, #0
 8000674:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000678:	bf08      	it	eq
 800067a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067e:	bd70      	pop	{r4, r5, r6, pc}
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f205 	lsl.w	r2, r0, r5
 8000688:	ea4e 0e02 	orr.w	lr, lr, r2
 800068c:	fa20 f304 	lsr.w	r3, r0, r4
 8000690:	fa01 f205 	lsl.w	r2, r1, r5
 8000694:	ea43 0302 	orr.w	r3, r3, r2
 8000698:	fa21 f004 	lsr.w	r0, r1, r4
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	fa21 f204 	lsr.w	r2, r1, r4
 80006a4:	ea20 0002 	bic.w	r0, r0, r2
 80006a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006b0:	bf08      	it	eq
 80006b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b6:	bd70      	pop	{r4, r5, r6, pc}
 80006b8:	f094 0f00 	teq	r4, #0
 80006bc:	d10f      	bne.n	80006de <__aeabi_dmul+0x1c2>
 80006be:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006c2:	0040      	lsls	r0, r0, #1
 80006c4:	eb41 0101 	adc.w	r1, r1, r1
 80006c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006cc:	bf08      	it	eq
 80006ce:	3c01      	subeq	r4, #1
 80006d0:	d0f7      	beq.n	80006c2 <__aeabi_dmul+0x1a6>
 80006d2:	ea41 0106 	orr.w	r1, r1, r6
 80006d6:	f095 0f00 	teq	r5, #0
 80006da:	bf18      	it	ne
 80006dc:	4770      	bxne	lr
 80006de:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006e2:	0052      	lsls	r2, r2, #1
 80006e4:	eb43 0303 	adc.w	r3, r3, r3
 80006e8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006ec:	bf08      	it	eq
 80006ee:	3d01      	subeq	r5, #1
 80006f0:	d0f7      	beq.n	80006e2 <__aeabi_dmul+0x1c6>
 80006f2:	ea43 0306 	orr.w	r3, r3, r6
 80006f6:	4770      	bx	lr
 80006f8:	ea94 0f0c 	teq	r4, ip
 80006fc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000700:	bf18      	it	ne
 8000702:	ea95 0f0c 	teqne	r5, ip
 8000706:	d00c      	beq.n	8000722 <__aeabi_dmul+0x206>
 8000708:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800070c:	bf18      	it	ne
 800070e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000712:	d1d1      	bne.n	80006b8 <__aeabi_dmul+0x19c>
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000726:	bf06      	itte	eq
 8000728:	4610      	moveq	r0, r2
 800072a:	4619      	moveq	r1, r3
 800072c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000730:	d019      	beq.n	8000766 <__aeabi_dmul+0x24a>
 8000732:	ea94 0f0c 	teq	r4, ip
 8000736:	d102      	bne.n	800073e <__aeabi_dmul+0x222>
 8000738:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800073c:	d113      	bne.n	8000766 <__aeabi_dmul+0x24a>
 800073e:	ea95 0f0c 	teq	r5, ip
 8000742:	d105      	bne.n	8000750 <__aeabi_dmul+0x234>
 8000744:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000748:	bf1c      	itt	ne
 800074a:	4610      	movne	r0, r2
 800074c:	4619      	movne	r1, r3
 800074e:	d10a      	bne.n	8000766 <__aeabi_dmul+0x24a>
 8000750:	ea81 0103 	eor.w	r1, r1, r3
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800075c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800076a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800076e:	bd70      	pop	{r4, r5, r6, pc}

08000770 <__aeabi_ddiv>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8a7 	bleq	80008de <__aeabi_ddiv+0x16e>
 8000790:	eba4 0405 	sub.w	r4, r4, r5
 8000794:	ea81 0e03 	eor.w	lr, r1, r3
 8000798:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800079c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007a0:	f000 8088 	beq.w	80008b4 <__aeabi_ddiv+0x144>
 80007a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007a8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007c4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007c8:	429d      	cmp	r5, r3
 80007ca:	bf08      	it	eq
 80007cc:	4296      	cmpeq	r6, r2
 80007ce:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007d2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007d6:	d202      	bcs.n	80007de <__aeabi_ddiv+0x6e>
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	1ab6      	subs	r6, r6, r2
 80007e0:	eb65 0503 	sbc.w	r5, r5, r3
 80007e4:	085b      	lsrs	r3, r3, #1
 80007e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ee:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fa:	bf22      	ittt	cs
 80007fc:	1ab6      	subcs	r6, r6, r2
 80007fe:	4675      	movcs	r5, lr
 8000800:	ea40 000c 	orrcs.w	r0, r0, ip
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	ebb6 0e02 	subs.w	lr, r6, r2
 800080e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000812:	bf22      	ittt	cs
 8000814:	1ab6      	subcs	r6, r6, r2
 8000816:	4675      	movcs	r5, lr
 8000818:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800081c:	085b      	lsrs	r3, r3, #1
 800081e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000822:	ebb6 0e02 	subs.w	lr, r6, r2
 8000826:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082a:	bf22      	ittt	cs
 800082c:	1ab6      	subcs	r6, r6, r2
 800082e:	4675      	movcs	r5, lr
 8000830:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000834:	085b      	lsrs	r3, r3, #1
 8000836:	ea4f 0232 	mov.w	r2, r2, rrx
 800083a:	ebb6 0e02 	subs.w	lr, r6, r2
 800083e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000842:	bf22      	ittt	cs
 8000844:	1ab6      	subcs	r6, r6, r2
 8000846:	4675      	movcs	r5, lr
 8000848:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800084c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000850:	d018      	beq.n	8000884 <__aeabi_ddiv+0x114>
 8000852:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000856:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800085a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800085e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000862:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000866:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800086a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800086e:	d1c0      	bne.n	80007f2 <__aeabi_ddiv+0x82>
 8000870:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000874:	d10b      	bne.n	800088e <__aeabi_ddiv+0x11e>
 8000876:	ea41 0100 	orr.w	r1, r1, r0
 800087a:	f04f 0000 	mov.w	r0, #0
 800087e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000882:	e7b6      	b.n	80007f2 <__aeabi_ddiv+0x82>
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf04      	itt	eq
 800088a:	4301      	orreq	r1, r0
 800088c:	2000      	moveq	r0, #0
 800088e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000892:	bf88      	it	hi
 8000894:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000898:	f63f aeaf 	bhi.w	80005fa <__aeabi_dmul+0xde>
 800089c:	ebb5 0c03 	subs.w	ip, r5, r3
 80008a0:	bf04      	itt	eq
 80008a2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008aa:	f150 0000 	adcs.w	r0, r0, #0
 80008ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008c0:	bfc2      	ittt	gt
 80008c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ca:	bd70      	popgt	{r4, r5, r6, pc}
 80008cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008d0:	f04f 0e00 	mov.w	lr, #0
 80008d4:	3c01      	subs	r4, #1
 80008d6:	e690      	b.n	80005fa <__aeabi_dmul+0xde>
 80008d8:	ea45 0e06 	orr.w	lr, r5, r6
 80008dc:	e68d      	b.n	80005fa <__aeabi_dmul+0xde>
 80008de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008e2:	ea94 0f0c 	teq	r4, ip
 80008e6:	bf08      	it	eq
 80008e8:	ea95 0f0c 	teqeq	r5, ip
 80008ec:	f43f af3b 	beq.w	8000766 <__aeabi_dmul+0x24a>
 80008f0:	ea94 0f0c 	teq	r4, ip
 80008f4:	d10a      	bne.n	800090c <__aeabi_ddiv+0x19c>
 80008f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008fa:	f47f af34 	bne.w	8000766 <__aeabi_dmul+0x24a>
 80008fe:	ea95 0f0c 	teq	r5, ip
 8000902:	f47f af25 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000906:	4610      	mov	r0, r2
 8000908:	4619      	mov	r1, r3
 800090a:	e72c      	b.n	8000766 <__aeabi_dmul+0x24a>
 800090c:	ea95 0f0c 	teq	r5, ip
 8000910:	d106      	bne.n	8000920 <__aeabi_ddiv+0x1b0>
 8000912:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000916:	f43f aefd 	beq.w	8000714 <__aeabi_dmul+0x1f8>
 800091a:	4610      	mov	r0, r2
 800091c:	4619      	mov	r1, r3
 800091e:	e722      	b.n	8000766 <__aeabi_dmul+0x24a>
 8000920:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000924:	bf18      	it	ne
 8000926:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800092a:	f47f aec5 	bne.w	80006b8 <__aeabi_dmul+0x19c>
 800092e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000932:	f47f af0d 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000936:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800093a:	f47f aeeb 	bne.w	8000714 <__aeabi_dmul+0x1f8>
 800093e:	e712      	b.n	8000766 <__aeabi_dmul+0x24a>

08000940 <__gedf2>:
 8000940:	f04f 3cff 	mov.w	ip, #4294967295
 8000944:	e006      	b.n	8000954 <__cmpdf2+0x4>
 8000946:	bf00      	nop

08000948 <__ledf2>:
 8000948:	f04f 0c01 	mov.w	ip, #1
 800094c:	e002      	b.n	8000954 <__cmpdf2+0x4>
 800094e:	bf00      	nop

08000950 <__cmpdf2>:
 8000950:	f04f 0c01 	mov.w	ip, #1
 8000954:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	bf18      	it	ne
 8000966:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800096a:	d01b      	beq.n	80009a4 <__cmpdf2+0x54>
 800096c:	b001      	add	sp, #4
 800096e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000972:	bf0c      	ite	eq
 8000974:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000978:	ea91 0f03 	teqne	r1, r3
 800097c:	bf02      	ittt	eq
 800097e:	ea90 0f02 	teqeq	r0, r2
 8000982:	2000      	moveq	r0, #0
 8000984:	4770      	bxeq	lr
 8000986:	f110 0f00 	cmn.w	r0, #0
 800098a:	ea91 0f03 	teq	r1, r3
 800098e:	bf58      	it	pl
 8000990:	4299      	cmppl	r1, r3
 8000992:	bf08      	it	eq
 8000994:	4290      	cmpeq	r0, r2
 8000996:	bf2c      	ite	cs
 8000998:	17d8      	asrcs	r0, r3, #31
 800099a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800099e:	f040 0001 	orr.w	r0, r0, #1
 80009a2:	4770      	bx	lr
 80009a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ac:	d102      	bne.n	80009b4 <__cmpdf2+0x64>
 80009ae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009b2:	d107      	bne.n	80009c4 <__cmpdf2+0x74>
 80009b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009bc:	d1d6      	bne.n	800096c <__cmpdf2+0x1c>
 80009be:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009c2:	d0d3      	beq.n	800096c <__cmpdf2+0x1c>
 80009c4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_cdrcmple>:
 80009cc:	4684      	mov	ip, r0
 80009ce:	4610      	mov	r0, r2
 80009d0:	4662      	mov	r2, ip
 80009d2:	468c      	mov	ip, r1
 80009d4:	4619      	mov	r1, r3
 80009d6:	4663      	mov	r3, ip
 80009d8:	e000      	b.n	80009dc <__aeabi_cdcmpeq>
 80009da:	bf00      	nop

080009dc <__aeabi_cdcmpeq>:
 80009dc:	b501      	push	{r0, lr}
 80009de:	f7ff ffb7 	bl	8000950 <__cmpdf2>
 80009e2:	2800      	cmp	r0, #0
 80009e4:	bf48      	it	mi
 80009e6:	f110 0f00 	cmnmi.w	r0, #0
 80009ea:	bd01      	pop	{r0, pc}

080009ec <__aeabi_dcmpeq>:
 80009ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f0:	f7ff fff4 	bl	80009dc <__aeabi_cdcmpeq>
 80009f4:	bf0c      	ite	eq
 80009f6:	2001      	moveq	r0, #1
 80009f8:	2000      	movne	r0, #0
 80009fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fe:	bf00      	nop

08000a00 <__aeabi_dcmplt>:
 8000a00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a04:	f7ff ffea 	bl	80009dc <__aeabi_cdcmpeq>
 8000a08:	bf34      	ite	cc
 8000a0a:	2001      	movcc	r0, #1
 8000a0c:	2000      	movcs	r0, #0
 8000a0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a12:	bf00      	nop

08000a14 <__aeabi_dcmple>:
 8000a14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a18:	f7ff ffe0 	bl	80009dc <__aeabi_cdcmpeq>
 8000a1c:	bf94      	ite	ls
 8000a1e:	2001      	movls	r0, #1
 8000a20:	2000      	movhi	r0, #0
 8000a22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a26:	bf00      	nop

08000a28 <__aeabi_dcmpge>:
 8000a28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a2c:	f7ff ffce 	bl	80009cc <__aeabi_cdrcmple>
 8000a30:	bf94      	ite	ls
 8000a32:	2001      	movls	r0, #1
 8000a34:	2000      	movhi	r0, #0
 8000a36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dcmpgt>:
 8000a3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a40:	f7ff ffc4 	bl	80009cc <__aeabi_cdrcmple>
 8000a44:	bf34      	ite	cc
 8000a46:	2001      	movcc	r0, #1
 8000a48:	2000      	movcs	r0, #0
 8000a4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4e:	bf00      	nop

08000a50 <__aeabi_dcmpun>:
 8000a50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d102      	bne.n	8000a60 <__aeabi_dcmpun+0x10>
 8000a5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a5e:	d10a      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d102      	bne.n	8000a70 <__aeabi_dcmpun+0x20>
 8000a6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a6e:	d102      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a70:	f04f 0000 	mov.w	r0, #0
 8000a74:	4770      	bx	lr
 8000a76:	f04f 0001 	mov.w	r0, #1
 8000a7a:	4770      	bx	lr

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2uiz>:
 8000acc:	004a      	lsls	r2, r1, #1
 8000ace:	d211      	bcs.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ad4:	d211      	bcs.n	8000afa <__aeabi_d2uiz+0x2e>
 8000ad6:	d50d      	bpl.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000adc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ae0:	d40e      	bmi.n	8000b00 <__aeabi_d2uiz+0x34>
 8000ae2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aee:	fa23 f002 	lsr.w	r0, r3, r2
 8000af2:	4770      	bx	lr
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000afe:	d102      	bne.n	8000b06 <__aeabi_d2uiz+0x3a>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	4770      	bx	lr
 8000b06:	f04f 0000 	mov.w	r0, #0
 8000b0a:	4770      	bx	lr

08000b0c <__aeabi_d2f>:
 8000b0c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b10:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b14:	bf24      	itt	cs
 8000b16:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b1a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b1e:	d90d      	bls.n	8000b3c <__aeabi_d2f+0x30>
 8000b20:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b24:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b28:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b2c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b30:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b34:	bf08      	it	eq
 8000b36:	f020 0001 	biceq.w	r0, r0, #1
 8000b3a:	4770      	bx	lr
 8000b3c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b40:	d121      	bne.n	8000b86 <__aeabi_d2f+0x7a>
 8000b42:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b46:	bfbc      	itt	lt
 8000b48:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b4c:	4770      	bxlt	lr
 8000b4e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b52:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b56:	f1c2 0218 	rsb	r2, r2, #24
 8000b5a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b5e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b62:	fa20 f002 	lsr.w	r0, r0, r2
 8000b66:	bf18      	it	ne
 8000b68:	f040 0001 	orrne.w	r0, r0, #1
 8000b6c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b70:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b74:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b78:	ea40 000c 	orr.w	r0, r0, ip
 8000b7c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b84:	e7cc      	b.n	8000b20 <__aeabi_d2f+0x14>
 8000b86:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b8a:	d107      	bne.n	8000b9c <__aeabi_d2f+0x90>
 8000b8c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b90:	bf1e      	ittt	ne
 8000b92:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b96:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b9a:	4770      	bxne	lr
 8000b9c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ba4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <__aeabi_frsub>:
 8000bac:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bb0:	e002      	b.n	8000bb8 <__addsf3>
 8000bb2:	bf00      	nop

08000bb4 <__aeabi_fsub>:
 8000bb4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000bb8 <__addsf3>:
 8000bb8:	0042      	lsls	r2, r0, #1
 8000bba:	bf1f      	itttt	ne
 8000bbc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bc0:	ea92 0f03 	teqne	r2, r3
 8000bc4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bc8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bcc:	d06a      	beq.n	8000ca4 <__addsf3+0xec>
 8000bce:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bd2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bd6:	bfc1      	itttt	gt
 8000bd8:	18d2      	addgt	r2, r2, r3
 8000bda:	4041      	eorgt	r1, r0
 8000bdc:	4048      	eorgt	r0, r1
 8000bde:	4041      	eorgt	r1, r0
 8000be0:	bfb8      	it	lt
 8000be2:	425b      	neglt	r3, r3
 8000be4:	2b19      	cmp	r3, #25
 8000be6:	bf88      	it	hi
 8000be8:	4770      	bxhi	lr
 8000bea:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bf6:	bf18      	it	ne
 8000bf8:	4240      	negne	r0, r0
 8000bfa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bfe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c02:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c06:	bf18      	it	ne
 8000c08:	4249      	negne	r1, r1
 8000c0a:	ea92 0f03 	teq	r2, r3
 8000c0e:	d03f      	beq.n	8000c90 <__addsf3+0xd8>
 8000c10:	f1a2 0201 	sub.w	r2, r2, #1
 8000c14:	fa41 fc03 	asr.w	ip, r1, r3
 8000c18:	eb10 000c 	adds.w	r0, r0, ip
 8000c1c:	f1c3 0320 	rsb	r3, r3, #32
 8000c20:	fa01 f103 	lsl.w	r1, r1, r3
 8000c24:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c28:	d502      	bpl.n	8000c30 <__addsf3+0x78>
 8000c2a:	4249      	negs	r1, r1
 8000c2c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c30:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c34:	d313      	bcc.n	8000c5e <__addsf3+0xa6>
 8000c36:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c3a:	d306      	bcc.n	8000c4a <__addsf3+0x92>
 8000c3c:	0840      	lsrs	r0, r0, #1
 8000c3e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c42:	f102 0201 	add.w	r2, r2, #1
 8000c46:	2afe      	cmp	r2, #254	; 0xfe
 8000c48:	d251      	bcs.n	8000cee <__addsf3+0x136>
 8000c4a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c4e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c52:	bf08      	it	eq
 8000c54:	f020 0001 	biceq.w	r0, r0, #1
 8000c58:	ea40 0003 	orr.w	r0, r0, r3
 8000c5c:	4770      	bx	lr
 8000c5e:	0049      	lsls	r1, r1, #1
 8000c60:	eb40 0000 	adc.w	r0, r0, r0
 8000c64:	3a01      	subs	r2, #1
 8000c66:	bf28      	it	cs
 8000c68:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c6c:	d2ed      	bcs.n	8000c4a <__addsf3+0x92>
 8000c6e:	fab0 fc80 	clz	ip, r0
 8000c72:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c76:	ebb2 020c 	subs.w	r2, r2, ip
 8000c7a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c7e:	bfaa      	itet	ge
 8000c80:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c84:	4252      	neglt	r2, r2
 8000c86:	4318      	orrge	r0, r3
 8000c88:	bfbc      	itt	lt
 8000c8a:	40d0      	lsrlt	r0, r2
 8000c8c:	4318      	orrlt	r0, r3
 8000c8e:	4770      	bx	lr
 8000c90:	f092 0f00 	teq	r2, #0
 8000c94:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c98:	bf06      	itte	eq
 8000c9a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c9e:	3201      	addeq	r2, #1
 8000ca0:	3b01      	subne	r3, #1
 8000ca2:	e7b5      	b.n	8000c10 <__addsf3+0x58>
 8000ca4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ca8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cac:	bf18      	it	ne
 8000cae:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb2:	d021      	beq.n	8000cf8 <__addsf3+0x140>
 8000cb4:	ea92 0f03 	teq	r2, r3
 8000cb8:	d004      	beq.n	8000cc4 <__addsf3+0x10c>
 8000cba:	f092 0f00 	teq	r2, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	4608      	moveq	r0, r1
 8000cc2:	4770      	bx	lr
 8000cc4:	ea90 0f01 	teq	r0, r1
 8000cc8:	bf1c      	itt	ne
 8000cca:	2000      	movne	r0, #0
 8000ccc:	4770      	bxne	lr
 8000cce:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cd2:	d104      	bne.n	8000cde <__addsf3+0x126>
 8000cd4:	0040      	lsls	r0, r0, #1
 8000cd6:	bf28      	it	cs
 8000cd8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cdc:	4770      	bx	lr
 8000cde:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ce2:	bf3c      	itt	cc
 8000ce4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ce8:	4770      	bxcc	lr
 8000cea:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cee:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cf2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cf6:	4770      	bx	lr
 8000cf8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cfc:	bf16      	itet	ne
 8000cfe:	4608      	movne	r0, r1
 8000d00:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d04:	4601      	movne	r1, r0
 8000d06:	0242      	lsls	r2, r0, #9
 8000d08:	bf06      	itte	eq
 8000d0a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d0e:	ea90 0f01 	teqeq	r0, r1
 8000d12:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d16:	4770      	bx	lr

08000d18 <__aeabi_ui2f>:
 8000d18:	f04f 0300 	mov.w	r3, #0
 8000d1c:	e004      	b.n	8000d28 <__aeabi_i2f+0x8>
 8000d1e:	bf00      	nop

08000d20 <__aeabi_i2f>:
 8000d20:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d24:	bf48      	it	mi
 8000d26:	4240      	negmi	r0, r0
 8000d28:	ea5f 0c00 	movs.w	ip, r0
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d34:	4601      	mov	r1, r0
 8000d36:	f04f 0000 	mov.w	r0, #0
 8000d3a:	e01c      	b.n	8000d76 <__aeabi_l2f+0x2a>

08000d3c <__aeabi_ul2f>:
 8000d3c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d40:	bf08      	it	eq
 8000d42:	4770      	bxeq	lr
 8000d44:	f04f 0300 	mov.w	r3, #0
 8000d48:	e00a      	b.n	8000d60 <__aeabi_l2f+0x14>
 8000d4a:	bf00      	nop

08000d4c <__aeabi_l2f>:
 8000d4c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d50:	bf08      	it	eq
 8000d52:	4770      	bxeq	lr
 8000d54:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__aeabi_l2f+0x14>
 8000d5a:	4240      	negs	r0, r0
 8000d5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d60:	ea5f 0c01 	movs.w	ip, r1
 8000d64:	bf02      	ittt	eq
 8000d66:	4684      	moveq	ip, r0
 8000d68:	4601      	moveq	r1, r0
 8000d6a:	2000      	moveq	r0, #0
 8000d6c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d70:	bf08      	it	eq
 8000d72:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d76:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d7a:	fabc f28c 	clz	r2, ip
 8000d7e:	3a08      	subs	r2, #8
 8000d80:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d84:	db10      	blt.n	8000da8 <__aeabi_l2f+0x5c>
 8000d86:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8a:	4463      	add	r3, ip
 8000d8c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d90:	f1c2 0220 	rsb	r2, r2, #32
 8000d94:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d98:	fa20 f202 	lsr.w	r2, r0, r2
 8000d9c:	eb43 0002 	adc.w	r0, r3, r2
 8000da0:	bf08      	it	eq
 8000da2:	f020 0001 	biceq.w	r0, r0, #1
 8000da6:	4770      	bx	lr
 8000da8:	f102 0220 	add.w	r2, r2, #32
 8000dac:	fa01 fc02 	lsl.w	ip, r1, r2
 8000db0:	f1c2 0220 	rsb	r2, r2, #32
 8000db4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000db8:	fa21 f202 	lsr.w	r2, r1, r2
 8000dbc:	eb43 0002 	adc.w	r0, r3, r2
 8000dc0:	bf08      	it	eq
 8000dc2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dc6:	4770      	bx	lr

08000dc8 <__aeabi_fmul>:
 8000dc8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000dcc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dd0:	bf1e      	ittt	ne
 8000dd2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dd6:	ea92 0f0c 	teqne	r2, ip
 8000dda:	ea93 0f0c 	teqne	r3, ip
 8000dde:	d06f      	beq.n	8000ec0 <__aeabi_fmul+0xf8>
 8000de0:	441a      	add	r2, r3
 8000de2:	ea80 0c01 	eor.w	ip, r0, r1
 8000de6:	0240      	lsls	r0, r0, #9
 8000de8:	bf18      	it	ne
 8000dea:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dee:	d01e      	beq.n	8000e2e <__aeabi_fmul+0x66>
 8000df0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000df4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000df8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dfc:	fba0 3101 	umull	r3, r1, r0, r1
 8000e00:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e04:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e08:	bf3e      	ittt	cc
 8000e0a:	0049      	lslcc	r1, r1, #1
 8000e0c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e10:	005b      	lslcc	r3, r3, #1
 8000e12:	ea40 0001 	orr.w	r0, r0, r1
 8000e16:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e1a:	2afd      	cmp	r2, #253	; 0xfd
 8000e1c:	d81d      	bhi.n	8000e5a <__aeabi_fmul+0x92>
 8000e1e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e22:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e26:	bf08      	it	eq
 8000e28:	f020 0001 	biceq.w	r0, r0, #1
 8000e2c:	4770      	bx	lr
 8000e2e:	f090 0f00 	teq	r0, #0
 8000e32:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e36:	bf08      	it	eq
 8000e38:	0249      	lsleq	r1, r1, #9
 8000e3a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e3e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e42:	3a7f      	subs	r2, #127	; 0x7f
 8000e44:	bfc2      	ittt	gt
 8000e46:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e4a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e4e:	4770      	bxgt	lr
 8000e50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e54:	f04f 0300 	mov.w	r3, #0
 8000e58:	3a01      	subs	r2, #1
 8000e5a:	dc5d      	bgt.n	8000f18 <__aeabi_fmul+0x150>
 8000e5c:	f112 0f19 	cmn.w	r2, #25
 8000e60:	bfdc      	itt	le
 8000e62:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e66:	4770      	bxle	lr
 8000e68:	f1c2 0200 	rsb	r2, r2, #0
 8000e6c:	0041      	lsls	r1, r0, #1
 8000e6e:	fa21 f102 	lsr.w	r1, r1, r2
 8000e72:	f1c2 0220 	rsb	r2, r2, #32
 8000e76:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e7a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e7e:	f140 0000 	adc.w	r0, r0, #0
 8000e82:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e86:	bf08      	it	eq
 8000e88:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e8c:	4770      	bx	lr
 8000e8e:	f092 0f00 	teq	r2, #0
 8000e92:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e96:	bf02      	ittt	eq
 8000e98:	0040      	lsleq	r0, r0, #1
 8000e9a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e9e:	3a01      	subeq	r2, #1
 8000ea0:	d0f9      	beq.n	8000e96 <__aeabi_fmul+0xce>
 8000ea2:	ea40 000c 	orr.w	r0, r0, ip
 8000ea6:	f093 0f00 	teq	r3, #0
 8000eaa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eae:	bf02      	ittt	eq
 8000eb0:	0049      	lsleq	r1, r1, #1
 8000eb2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000eb6:	3b01      	subeq	r3, #1
 8000eb8:	d0f9      	beq.n	8000eae <__aeabi_fmul+0xe6>
 8000eba:	ea41 010c 	orr.w	r1, r1, ip
 8000ebe:	e78f      	b.n	8000de0 <__aeabi_fmul+0x18>
 8000ec0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ec4:	ea92 0f0c 	teq	r2, ip
 8000ec8:	bf18      	it	ne
 8000eca:	ea93 0f0c 	teqne	r3, ip
 8000ece:	d00a      	beq.n	8000ee6 <__aeabi_fmul+0x11e>
 8000ed0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000ed4:	bf18      	it	ne
 8000ed6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eda:	d1d8      	bne.n	8000e8e <__aeabi_fmul+0xc6>
 8000edc:	ea80 0001 	eor.w	r0, r0, r1
 8000ee0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ee4:	4770      	bx	lr
 8000ee6:	f090 0f00 	teq	r0, #0
 8000eea:	bf17      	itett	ne
 8000eec:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ef0:	4608      	moveq	r0, r1
 8000ef2:	f091 0f00 	teqne	r1, #0
 8000ef6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000efa:	d014      	beq.n	8000f26 <__aeabi_fmul+0x15e>
 8000efc:	ea92 0f0c 	teq	r2, ip
 8000f00:	d101      	bne.n	8000f06 <__aeabi_fmul+0x13e>
 8000f02:	0242      	lsls	r2, r0, #9
 8000f04:	d10f      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f06:	ea93 0f0c 	teq	r3, ip
 8000f0a:	d103      	bne.n	8000f14 <__aeabi_fmul+0x14c>
 8000f0c:	024b      	lsls	r3, r1, #9
 8000f0e:	bf18      	it	ne
 8000f10:	4608      	movne	r0, r1
 8000f12:	d108      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f14:	ea80 0001 	eor.w	r0, r0, r1
 8000f18:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f24:	4770      	bx	lr
 8000f26:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f2a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f2e:	4770      	bx	lr

08000f30 <__aeabi_fdiv>:
 8000f30:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f34:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f38:	bf1e      	ittt	ne
 8000f3a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f3e:	ea92 0f0c 	teqne	r2, ip
 8000f42:	ea93 0f0c 	teqne	r3, ip
 8000f46:	d069      	beq.n	800101c <__aeabi_fdiv+0xec>
 8000f48:	eba2 0203 	sub.w	r2, r2, r3
 8000f4c:	ea80 0c01 	eor.w	ip, r0, r1
 8000f50:	0249      	lsls	r1, r1, #9
 8000f52:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f56:	d037      	beq.n	8000fc8 <__aeabi_fdiv+0x98>
 8000f58:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f5c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f60:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f64:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f68:	428b      	cmp	r3, r1
 8000f6a:	bf38      	it	cc
 8000f6c:	005b      	lslcc	r3, r3, #1
 8000f6e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f72:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f76:	428b      	cmp	r3, r1
 8000f78:	bf24      	itt	cs
 8000f7a:	1a5b      	subcs	r3, r3, r1
 8000f7c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f80:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f84:	bf24      	itt	cs
 8000f86:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f8a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f8e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f92:	bf24      	itt	cs
 8000f94:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f9c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fa0:	bf24      	itt	cs
 8000fa2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fa6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000faa:	011b      	lsls	r3, r3, #4
 8000fac:	bf18      	it	ne
 8000fae:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fb2:	d1e0      	bne.n	8000f76 <__aeabi_fdiv+0x46>
 8000fb4:	2afd      	cmp	r2, #253	; 0xfd
 8000fb6:	f63f af50 	bhi.w	8000e5a <__aeabi_fmul+0x92>
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fc0:	bf08      	it	eq
 8000fc2:	f020 0001 	biceq.w	r0, r0, #1
 8000fc6:	4770      	bx	lr
 8000fc8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fcc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fd0:	327f      	adds	r2, #127	; 0x7f
 8000fd2:	bfc2      	ittt	gt
 8000fd4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fd8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fdc:	4770      	bxgt	lr
 8000fde:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fe2:	f04f 0300 	mov.w	r3, #0
 8000fe6:	3a01      	subs	r2, #1
 8000fe8:	e737      	b.n	8000e5a <__aeabi_fmul+0x92>
 8000fea:	f092 0f00 	teq	r2, #0
 8000fee:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ff2:	bf02      	ittt	eq
 8000ff4:	0040      	lsleq	r0, r0, #1
 8000ff6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ffa:	3a01      	subeq	r2, #1
 8000ffc:	d0f9      	beq.n	8000ff2 <__aeabi_fdiv+0xc2>
 8000ffe:	ea40 000c 	orr.w	r0, r0, ip
 8001002:	f093 0f00 	teq	r3, #0
 8001006:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800100a:	bf02      	ittt	eq
 800100c:	0049      	lsleq	r1, r1, #1
 800100e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001012:	3b01      	subeq	r3, #1
 8001014:	d0f9      	beq.n	800100a <__aeabi_fdiv+0xda>
 8001016:	ea41 010c 	orr.w	r1, r1, ip
 800101a:	e795      	b.n	8000f48 <__aeabi_fdiv+0x18>
 800101c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001020:	ea92 0f0c 	teq	r2, ip
 8001024:	d108      	bne.n	8001038 <__aeabi_fdiv+0x108>
 8001026:	0242      	lsls	r2, r0, #9
 8001028:	f47f af7d 	bne.w	8000f26 <__aeabi_fmul+0x15e>
 800102c:	ea93 0f0c 	teq	r3, ip
 8001030:	f47f af70 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 8001034:	4608      	mov	r0, r1
 8001036:	e776      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001038:	ea93 0f0c 	teq	r3, ip
 800103c:	d104      	bne.n	8001048 <__aeabi_fdiv+0x118>
 800103e:	024b      	lsls	r3, r1, #9
 8001040:	f43f af4c 	beq.w	8000edc <__aeabi_fmul+0x114>
 8001044:	4608      	mov	r0, r1
 8001046:	e76e      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001048:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800104c:	bf18      	it	ne
 800104e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001052:	d1ca      	bne.n	8000fea <__aeabi_fdiv+0xba>
 8001054:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001058:	f47f af5c 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 800105c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001060:	f47f af3c 	bne.w	8000edc <__aeabi_fmul+0x114>
 8001064:	e75f      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001066:	bf00      	nop

08001068 <__gesf2>:
 8001068:	f04f 3cff 	mov.w	ip, #4294967295
 800106c:	e006      	b.n	800107c <__cmpsf2+0x4>
 800106e:	bf00      	nop

08001070 <__lesf2>:
 8001070:	f04f 0c01 	mov.w	ip, #1
 8001074:	e002      	b.n	800107c <__cmpsf2+0x4>
 8001076:	bf00      	nop

08001078 <__cmpsf2>:
 8001078:	f04f 0c01 	mov.w	ip, #1
 800107c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8001080:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001084:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001088:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800108c:	bf18      	it	ne
 800108e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8001092:	d011      	beq.n	80010b8 <__cmpsf2+0x40>
 8001094:	b001      	add	sp, #4
 8001096:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800109a:	bf18      	it	ne
 800109c:	ea90 0f01 	teqne	r0, r1
 80010a0:	bf58      	it	pl
 80010a2:	ebb2 0003 	subspl.w	r0, r2, r3
 80010a6:	bf88      	it	hi
 80010a8:	17c8      	asrhi	r0, r1, #31
 80010aa:	bf38      	it	cc
 80010ac:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010b0:	bf18      	it	ne
 80010b2:	f040 0001 	orrne.w	r0, r0, #1
 80010b6:	4770      	bx	lr
 80010b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010bc:	d102      	bne.n	80010c4 <__cmpsf2+0x4c>
 80010be:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010c2:	d105      	bne.n	80010d0 <__cmpsf2+0x58>
 80010c4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010c8:	d1e4      	bne.n	8001094 <__cmpsf2+0x1c>
 80010ca:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ce:	d0e1      	beq.n	8001094 <__cmpsf2+0x1c>
 80010d0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <__aeabi_cfrcmple>:
 80010d8:	4684      	mov	ip, r0
 80010da:	4608      	mov	r0, r1
 80010dc:	4661      	mov	r1, ip
 80010de:	e7ff      	b.n	80010e0 <__aeabi_cfcmpeq>

080010e0 <__aeabi_cfcmpeq>:
 80010e0:	b50f      	push	{r0, r1, r2, r3, lr}
 80010e2:	f7ff ffc9 	bl	8001078 <__cmpsf2>
 80010e6:	2800      	cmp	r0, #0
 80010e8:	bf48      	it	mi
 80010ea:	f110 0f00 	cmnmi.w	r0, #0
 80010ee:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010f0 <__aeabi_fcmpeq>:
 80010f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f4:	f7ff fff4 	bl	80010e0 <__aeabi_cfcmpeq>
 80010f8:	bf0c      	ite	eq
 80010fa:	2001      	moveq	r0, #1
 80010fc:	2000      	movne	r0, #0
 80010fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8001102:	bf00      	nop

08001104 <__aeabi_fcmplt>:
 8001104:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001108:	f7ff ffea 	bl	80010e0 <__aeabi_cfcmpeq>
 800110c:	bf34      	ite	cc
 800110e:	2001      	movcc	r0, #1
 8001110:	2000      	movcs	r0, #0
 8001112:	f85d fb08 	ldr.w	pc, [sp], #8
 8001116:	bf00      	nop

08001118 <__aeabi_fcmple>:
 8001118:	f84d ed08 	str.w	lr, [sp, #-8]!
 800111c:	f7ff ffe0 	bl	80010e0 <__aeabi_cfcmpeq>
 8001120:	bf94      	ite	ls
 8001122:	2001      	movls	r0, #1
 8001124:	2000      	movhi	r0, #0
 8001126:	f85d fb08 	ldr.w	pc, [sp], #8
 800112a:	bf00      	nop

0800112c <__aeabi_fcmpge>:
 800112c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001130:	f7ff ffd2 	bl	80010d8 <__aeabi_cfrcmple>
 8001134:	bf94      	ite	ls
 8001136:	2001      	movls	r0, #1
 8001138:	2000      	movhi	r0, #0
 800113a:	f85d fb08 	ldr.w	pc, [sp], #8
 800113e:	bf00      	nop

08001140 <__aeabi_fcmpgt>:
 8001140:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001144:	f7ff ffc8 	bl	80010d8 <__aeabi_cfrcmple>
 8001148:	bf34      	ite	cc
 800114a:	2001      	movcc	r0, #1
 800114c:	2000      	movcs	r0, #0
 800114e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001152:	bf00      	nop

08001154 <__aeabi_f2uiz>:
 8001154:	0042      	lsls	r2, r0, #1
 8001156:	d20e      	bcs.n	8001176 <__aeabi_f2uiz+0x22>
 8001158:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800115c:	d30b      	bcc.n	8001176 <__aeabi_f2uiz+0x22>
 800115e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001162:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001166:	d409      	bmi.n	800117c <__aeabi_f2uiz+0x28>
 8001168:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800116c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001170:	fa23 f002 	lsr.w	r0, r3, r2
 8001174:	4770      	bx	lr
 8001176:	f04f 0000 	mov.w	r0, #0
 800117a:	4770      	bx	lr
 800117c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001180:	d101      	bne.n	8001186 <__aeabi_f2uiz+0x32>
 8001182:	0242      	lsls	r2, r0, #9
 8001184:	d102      	bne.n	800118c <__aeabi_f2uiz+0x38>
 8001186:	f04f 30ff 	mov.w	r0, #4294967295
 800118a:	4770      	bx	lr
 800118c:	f04f 0000 	mov.w	r0, #0
 8001190:	4770      	bx	lr
 8001192:	bf00      	nop

08001194 <__aeabi_uldivmod>:
 8001194:	b953      	cbnz	r3, 80011ac <__aeabi_uldivmod+0x18>
 8001196:	b94a      	cbnz	r2, 80011ac <__aeabi_uldivmod+0x18>
 8001198:	2900      	cmp	r1, #0
 800119a:	bf08      	it	eq
 800119c:	2800      	cmpeq	r0, #0
 800119e:	bf1c      	itt	ne
 80011a0:	f04f 31ff 	movne.w	r1, #4294967295
 80011a4:	f04f 30ff 	movne.w	r0, #4294967295
 80011a8:	f000 b9ae 	b.w	8001508 <__aeabi_idiv0>
 80011ac:	f1ad 0c08 	sub.w	ip, sp, #8
 80011b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80011b4:	f000 f83e 	bl	8001234 <__udivmoddi4>
 80011b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80011bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80011c0:	b004      	add	sp, #16
 80011c2:	4770      	bx	lr

080011c4 <__aeabi_d2lz>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4605      	mov	r5, r0
 80011c8:	460c      	mov	r4, r1
 80011ca:	2200      	movs	r2, #0
 80011cc:	2300      	movs	r3, #0
 80011ce:	4628      	mov	r0, r5
 80011d0:	4621      	mov	r1, r4
 80011d2:	f7ff fc15 	bl	8000a00 <__aeabi_dcmplt>
 80011d6:	b928      	cbnz	r0, 80011e4 <__aeabi_d2lz+0x20>
 80011d8:	4628      	mov	r0, r5
 80011da:	4621      	mov	r1, r4
 80011dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011e0:	f000 b80a 	b.w	80011f8 <__aeabi_d2ulz>
 80011e4:	4628      	mov	r0, r5
 80011e6:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 80011ea:	f000 f805 	bl	80011f8 <__aeabi_d2ulz>
 80011ee:	4240      	negs	r0, r0
 80011f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011f4:	bd38      	pop	{r3, r4, r5, pc}
 80011f6:	bf00      	nop

080011f8 <__aeabi_d2ulz>:
 80011f8:	b5d0      	push	{r4, r6, r7, lr}
 80011fa:	2200      	movs	r2, #0
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <__aeabi_d2ulz+0x34>)
 80011fe:	4606      	mov	r6, r0
 8001200:	460f      	mov	r7, r1
 8001202:	f7ff f98b 	bl	800051c <__aeabi_dmul>
 8001206:	f7ff fc61 	bl	8000acc <__aeabi_d2uiz>
 800120a:	4604      	mov	r4, r0
 800120c:	f7ff f90c 	bl	8000428 <__aeabi_ui2d>
 8001210:	2200      	movs	r2, #0
 8001212:	4b07      	ldr	r3, [pc, #28]	; (8001230 <__aeabi_d2ulz+0x38>)
 8001214:	f7ff f982 	bl	800051c <__aeabi_dmul>
 8001218:	4602      	mov	r2, r0
 800121a:	460b      	mov	r3, r1
 800121c:	4630      	mov	r0, r6
 800121e:	4639      	mov	r1, r7
 8001220:	f7fe ffc4 	bl	80001ac <__aeabi_dsub>
 8001224:	f7ff fc52 	bl	8000acc <__aeabi_d2uiz>
 8001228:	4621      	mov	r1, r4
 800122a:	bdd0      	pop	{r4, r6, r7, pc}
 800122c:	3df00000 	.word	0x3df00000
 8001230:	41f00000 	.word	0x41f00000

08001234 <__udivmoddi4>:
 8001234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001238:	9e08      	ldr	r6, [sp, #32]
 800123a:	460d      	mov	r5, r1
 800123c:	4604      	mov	r4, r0
 800123e:	4688      	mov	r8, r1
 8001240:	2b00      	cmp	r3, #0
 8001242:	d14d      	bne.n	80012e0 <__udivmoddi4+0xac>
 8001244:	428a      	cmp	r2, r1
 8001246:	4694      	mov	ip, r2
 8001248:	d968      	bls.n	800131c <__udivmoddi4+0xe8>
 800124a:	fab2 f282 	clz	r2, r2
 800124e:	b152      	cbz	r2, 8001266 <__udivmoddi4+0x32>
 8001250:	fa01 f302 	lsl.w	r3, r1, r2
 8001254:	f1c2 0120 	rsb	r1, r2, #32
 8001258:	fa20 f101 	lsr.w	r1, r0, r1
 800125c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001260:	ea41 0803 	orr.w	r8, r1, r3
 8001264:	4094      	lsls	r4, r2
 8001266:	ea4f 411c 	mov.w	r1, ip, lsr #16
 800126a:	fbb8 f7f1 	udiv	r7, r8, r1
 800126e:	fa1f fe8c 	uxth.w	lr, ip
 8001272:	fb01 8817 	mls	r8, r1, r7, r8
 8001276:	fb07 f00e 	mul.w	r0, r7, lr
 800127a:	0c23      	lsrs	r3, r4, #16
 800127c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8001280:	4298      	cmp	r0, r3
 8001282:	d90a      	bls.n	800129a <__udivmoddi4+0x66>
 8001284:	eb1c 0303 	adds.w	r3, ip, r3
 8001288:	f107 35ff 	add.w	r5, r7, #4294967295
 800128c:	f080 811e 	bcs.w	80014cc <__udivmoddi4+0x298>
 8001290:	4298      	cmp	r0, r3
 8001292:	f240 811b 	bls.w	80014cc <__udivmoddi4+0x298>
 8001296:	3f02      	subs	r7, #2
 8001298:	4463      	add	r3, ip
 800129a:	1a1b      	subs	r3, r3, r0
 800129c:	fbb3 f0f1 	udiv	r0, r3, r1
 80012a0:	fb01 3310 	mls	r3, r1, r0, r3
 80012a4:	fb00 fe0e 	mul.w	lr, r0, lr
 80012a8:	b2a4      	uxth	r4, r4
 80012aa:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80012ae:	45a6      	cmp	lr, r4
 80012b0:	d90a      	bls.n	80012c8 <__udivmoddi4+0x94>
 80012b2:	eb1c 0404 	adds.w	r4, ip, r4
 80012b6:	f100 33ff 	add.w	r3, r0, #4294967295
 80012ba:	f080 8109 	bcs.w	80014d0 <__udivmoddi4+0x29c>
 80012be:	45a6      	cmp	lr, r4
 80012c0:	f240 8106 	bls.w	80014d0 <__udivmoddi4+0x29c>
 80012c4:	4464      	add	r4, ip
 80012c6:	3802      	subs	r0, #2
 80012c8:	2100      	movs	r1, #0
 80012ca:	eba4 040e 	sub.w	r4, r4, lr
 80012ce:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80012d2:	b11e      	cbz	r6, 80012dc <__udivmoddi4+0xa8>
 80012d4:	2300      	movs	r3, #0
 80012d6:	40d4      	lsrs	r4, r2
 80012d8:	e9c6 4300 	strd	r4, r3, [r6]
 80012dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012e0:	428b      	cmp	r3, r1
 80012e2:	d908      	bls.n	80012f6 <__udivmoddi4+0xc2>
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	f000 80ee 	beq.w	80014c6 <__udivmoddi4+0x292>
 80012ea:	2100      	movs	r1, #0
 80012ec:	e9c6 0500 	strd	r0, r5, [r6]
 80012f0:	4608      	mov	r0, r1
 80012f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012f6:	fab3 f183 	clz	r1, r3
 80012fa:	2900      	cmp	r1, #0
 80012fc:	d14a      	bne.n	8001394 <__udivmoddi4+0x160>
 80012fe:	42ab      	cmp	r3, r5
 8001300:	d302      	bcc.n	8001308 <__udivmoddi4+0xd4>
 8001302:	4282      	cmp	r2, r0
 8001304:	f200 80fc 	bhi.w	8001500 <__udivmoddi4+0x2cc>
 8001308:	1a84      	subs	r4, r0, r2
 800130a:	eb65 0303 	sbc.w	r3, r5, r3
 800130e:	2001      	movs	r0, #1
 8001310:	4698      	mov	r8, r3
 8001312:	2e00      	cmp	r6, #0
 8001314:	d0e2      	beq.n	80012dc <__udivmoddi4+0xa8>
 8001316:	e9c6 4800 	strd	r4, r8, [r6]
 800131a:	e7df      	b.n	80012dc <__udivmoddi4+0xa8>
 800131c:	b902      	cbnz	r2, 8001320 <__udivmoddi4+0xec>
 800131e:	deff      	udf	#255	; 0xff
 8001320:	fab2 f282 	clz	r2, r2
 8001324:	2a00      	cmp	r2, #0
 8001326:	f040 8091 	bne.w	800144c <__udivmoddi4+0x218>
 800132a:	eba1 000c 	sub.w	r0, r1, ip
 800132e:	2101      	movs	r1, #1
 8001330:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001334:	fa1f fe8c 	uxth.w	lr, ip
 8001338:	fbb0 f3f7 	udiv	r3, r0, r7
 800133c:	fb07 0013 	mls	r0, r7, r3, r0
 8001340:	0c25      	lsrs	r5, r4, #16
 8001342:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8001346:	fb0e f003 	mul.w	r0, lr, r3
 800134a:	42a8      	cmp	r0, r5
 800134c:	d908      	bls.n	8001360 <__udivmoddi4+0x12c>
 800134e:	eb1c 0505 	adds.w	r5, ip, r5
 8001352:	f103 38ff 	add.w	r8, r3, #4294967295
 8001356:	d202      	bcs.n	800135e <__udivmoddi4+0x12a>
 8001358:	42a8      	cmp	r0, r5
 800135a:	f200 80ce 	bhi.w	80014fa <__udivmoddi4+0x2c6>
 800135e:	4643      	mov	r3, r8
 8001360:	1a2d      	subs	r5, r5, r0
 8001362:	fbb5 f0f7 	udiv	r0, r5, r7
 8001366:	fb07 5510 	mls	r5, r7, r0, r5
 800136a:	fb0e fe00 	mul.w	lr, lr, r0
 800136e:	b2a4      	uxth	r4, r4
 8001370:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8001374:	45a6      	cmp	lr, r4
 8001376:	d908      	bls.n	800138a <__udivmoddi4+0x156>
 8001378:	eb1c 0404 	adds.w	r4, ip, r4
 800137c:	f100 35ff 	add.w	r5, r0, #4294967295
 8001380:	d202      	bcs.n	8001388 <__udivmoddi4+0x154>
 8001382:	45a6      	cmp	lr, r4
 8001384:	f200 80b6 	bhi.w	80014f4 <__udivmoddi4+0x2c0>
 8001388:	4628      	mov	r0, r5
 800138a:	eba4 040e 	sub.w	r4, r4, lr
 800138e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001392:	e79e      	b.n	80012d2 <__udivmoddi4+0x9e>
 8001394:	f1c1 0720 	rsb	r7, r1, #32
 8001398:	408b      	lsls	r3, r1
 800139a:	fa22 fc07 	lsr.w	ip, r2, r7
 800139e:	ea4c 0c03 	orr.w	ip, ip, r3
 80013a2:	fa25 fa07 	lsr.w	sl, r5, r7
 80013a6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80013aa:	fbba f8f9 	udiv	r8, sl, r9
 80013ae:	fa20 f307 	lsr.w	r3, r0, r7
 80013b2:	fb09 aa18 	mls	sl, r9, r8, sl
 80013b6:	408d      	lsls	r5, r1
 80013b8:	fa1f fe8c 	uxth.w	lr, ip
 80013bc:	431d      	orrs	r5, r3
 80013be:	fa00 f301 	lsl.w	r3, r0, r1
 80013c2:	fb08 f00e 	mul.w	r0, r8, lr
 80013c6:	0c2c      	lsrs	r4, r5, #16
 80013c8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80013cc:	42a0      	cmp	r0, r4
 80013ce:	fa02 f201 	lsl.w	r2, r2, r1
 80013d2:	d90b      	bls.n	80013ec <__udivmoddi4+0x1b8>
 80013d4:	eb1c 0404 	adds.w	r4, ip, r4
 80013d8:	f108 3aff 	add.w	sl, r8, #4294967295
 80013dc:	f080 8088 	bcs.w	80014f0 <__udivmoddi4+0x2bc>
 80013e0:	42a0      	cmp	r0, r4
 80013e2:	f240 8085 	bls.w	80014f0 <__udivmoddi4+0x2bc>
 80013e6:	f1a8 0802 	sub.w	r8, r8, #2
 80013ea:	4464      	add	r4, ip
 80013ec:	1a24      	subs	r4, r4, r0
 80013ee:	fbb4 f0f9 	udiv	r0, r4, r9
 80013f2:	fb09 4410 	mls	r4, r9, r0, r4
 80013f6:	fb00 fe0e 	mul.w	lr, r0, lr
 80013fa:	b2ad      	uxth	r5, r5
 80013fc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001400:	45a6      	cmp	lr, r4
 8001402:	d908      	bls.n	8001416 <__udivmoddi4+0x1e2>
 8001404:	eb1c 0404 	adds.w	r4, ip, r4
 8001408:	f100 35ff 	add.w	r5, r0, #4294967295
 800140c:	d26c      	bcs.n	80014e8 <__udivmoddi4+0x2b4>
 800140e:	45a6      	cmp	lr, r4
 8001410:	d96a      	bls.n	80014e8 <__udivmoddi4+0x2b4>
 8001412:	3802      	subs	r0, #2
 8001414:	4464      	add	r4, ip
 8001416:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800141a:	fba0 9502 	umull	r9, r5, r0, r2
 800141e:	eba4 040e 	sub.w	r4, r4, lr
 8001422:	42ac      	cmp	r4, r5
 8001424:	46c8      	mov	r8, r9
 8001426:	46ae      	mov	lr, r5
 8001428:	d356      	bcc.n	80014d8 <__udivmoddi4+0x2a4>
 800142a:	d053      	beq.n	80014d4 <__udivmoddi4+0x2a0>
 800142c:	2e00      	cmp	r6, #0
 800142e:	d069      	beq.n	8001504 <__udivmoddi4+0x2d0>
 8001430:	ebb3 0208 	subs.w	r2, r3, r8
 8001434:	eb64 040e 	sbc.w	r4, r4, lr
 8001438:	fa22 f301 	lsr.w	r3, r2, r1
 800143c:	fa04 f707 	lsl.w	r7, r4, r7
 8001440:	431f      	orrs	r7, r3
 8001442:	40cc      	lsrs	r4, r1
 8001444:	e9c6 7400 	strd	r7, r4, [r6]
 8001448:	2100      	movs	r1, #0
 800144a:	e747      	b.n	80012dc <__udivmoddi4+0xa8>
 800144c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001450:	f1c2 0120 	rsb	r1, r2, #32
 8001454:	fa25 f301 	lsr.w	r3, r5, r1
 8001458:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800145c:	fa20 f101 	lsr.w	r1, r0, r1
 8001460:	4095      	lsls	r5, r2
 8001462:	430d      	orrs	r5, r1
 8001464:	fbb3 f1f7 	udiv	r1, r3, r7
 8001468:	fb07 3311 	mls	r3, r7, r1, r3
 800146c:	fa1f fe8c 	uxth.w	lr, ip
 8001470:	0c28      	lsrs	r0, r5, #16
 8001472:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001476:	fb01 f30e 	mul.w	r3, r1, lr
 800147a:	4283      	cmp	r3, r0
 800147c:	fa04 f402 	lsl.w	r4, r4, r2
 8001480:	d908      	bls.n	8001494 <__udivmoddi4+0x260>
 8001482:	eb1c 0000 	adds.w	r0, ip, r0
 8001486:	f101 38ff 	add.w	r8, r1, #4294967295
 800148a:	d22f      	bcs.n	80014ec <__udivmoddi4+0x2b8>
 800148c:	4283      	cmp	r3, r0
 800148e:	d92d      	bls.n	80014ec <__udivmoddi4+0x2b8>
 8001490:	3902      	subs	r1, #2
 8001492:	4460      	add	r0, ip
 8001494:	1ac0      	subs	r0, r0, r3
 8001496:	fbb0 f3f7 	udiv	r3, r0, r7
 800149a:	fb07 0013 	mls	r0, r7, r3, r0
 800149e:	b2ad      	uxth	r5, r5
 80014a0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80014a4:	fb03 f00e 	mul.w	r0, r3, lr
 80014a8:	42a8      	cmp	r0, r5
 80014aa:	d908      	bls.n	80014be <__udivmoddi4+0x28a>
 80014ac:	eb1c 0505 	adds.w	r5, ip, r5
 80014b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80014b4:	d216      	bcs.n	80014e4 <__udivmoddi4+0x2b0>
 80014b6:	42a8      	cmp	r0, r5
 80014b8:	d914      	bls.n	80014e4 <__udivmoddi4+0x2b0>
 80014ba:	3b02      	subs	r3, #2
 80014bc:	4465      	add	r5, ip
 80014be:	1a28      	subs	r0, r5, r0
 80014c0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80014c4:	e738      	b.n	8001338 <__udivmoddi4+0x104>
 80014c6:	4631      	mov	r1, r6
 80014c8:	4630      	mov	r0, r6
 80014ca:	e707      	b.n	80012dc <__udivmoddi4+0xa8>
 80014cc:	462f      	mov	r7, r5
 80014ce:	e6e4      	b.n	800129a <__udivmoddi4+0x66>
 80014d0:	4618      	mov	r0, r3
 80014d2:	e6f9      	b.n	80012c8 <__udivmoddi4+0x94>
 80014d4:	454b      	cmp	r3, r9
 80014d6:	d2a9      	bcs.n	800142c <__udivmoddi4+0x1f8>
 80014d8:	ebb9 0802 	subs.w	r8, r9, r2
 80014dc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80014e0:	3801      	subs	r0, #1
 80014e2:	e7a3      	b.n	800142c <__udivmoddi4+0x1f8>
 80014e4:	4643      	mov	r3, r8
 80014e6:	e7ea      	b.n	80014be <__udivmoddi4+0x28a>
 80014e8:	4628      	mov	r0, r5
 80014ea:	e794      	b.n	8001416 <__udivmoddi4+0x1e2>
 80014ec:	4641      	mov	r1, r8
 80014ee:	e7d1      	b.n	8001494 <__udivmoddi4+0x260>
 80014f0:	46d0      	mov	r8, sl
 80014f2:	e77b      	b.n	80013ec <__udivmoddi4+0x1b8>
 80014f4:	4464      	add	r4, ip
 80014f6:	3802      	subs	r0, #2
 80014f8:	e747      	b.n	800138a <__udivmoddi4+0x156>
 80014fa:	3b02      	subs	r3, #2
 80014fc:	4465      	add	r5, ip
 80014fe:	e72f      	b.n	8001360 <__udivmoddi4+0x12c>
 8001500:	4608      	mov	r0, r1
 8001502:	e706      	b.n	8001312 <__udivmoddi4+0xde>
 8001504:	4631      	mov	r1, r6
 8001506:	e6e9      	b.n	80012dc <__udivmoddi4+0xa8>

08001508 <__aeabi_idiv0>:
 8001508:	4770      	bx	lr
 800150a:	bf00      	nop

0800150c <__circ_gbuf_pop>:
#include <string.h>

#include <circular_buffer.h>

int __circ_gbuf_pop(circ_gbuf_t *circ_buf, void *elem, int read_only)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b086      	sub	sp, #24
 8001510:	af00      	add	r7, sp, #0
 8001512:	60f8      	str	r0, [r7, #12]
 8001514:	60b9      	str	r1, [r7, #8]
 8001516:	607a      	str	r2, [r7, #4]
	int total;
	char *tail;

	total = circ_buf->push_count - circ_buf->pop_count;
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	889b      	ldrh	r3, [r3, #4]
 800151c:	461a      	mov	r2, r3
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	88db      	ldrh	r3, [r3, #6]
 8001522:	1ad3      	subs	r3, r2, r3
 8001524:	617b      	str	r3, [r7, #20]
	if (total < 0)
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	2b00      	cmp	r3, #0
 800152a:	da05      	bge.n	8001538 <__circ_gbuf_pop+0x2c>
		total += (2 * circ_buf->size);
 800152c:	68fb      	ldr	r3, [r7, #12]
 800152e:	891b      	ldrh	r3, [r3, #8]
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	697a      	ldr	r2, [r7, #20]
 8001534:	4413      	add	r3, r2
 8001536:	617b      	str	r3, [r7, #20]

	if (total == 0)
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	2b00      	cmp	r3, #0
 800153c:	d102      	bne.n	8001544 <__circ_gbuf_pop+0x38>
		return -1; // Empty
 800153e:	f04f 33ff 	mov.w	r3, #4294967295
 8001542:	e031      	b.n	80015a8 <__circ_gbuf_pop+0x9c>

	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	6819      	ldr	r1, [r3, #0]
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	88db      	ldrh	r3, [r3, #6]
 800154c:	68fa      	ldr	r2, [r7, #12]
 800154e:	8912      	ldrh	r2, [r2, #8]
 8001550:	fbb3 f0f2 	udiv	r0, r3, r2
 8001554:	fb00 f202 	mul.w	r2, r0, r2
 8001558:	1a9b      	subs	r3, r3, r2
 800155a:	b29b      	uxth	r3, r3
 800155c:	461a      	mov	r2, r3
			* circ_buf->element_size);
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	895b      	ldrh	r3, [r3, #10]
 8001562:	fb02 f303 	mul.w	r3, r2, r3
	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001566:	440b      	add	r3, r1
 8001568:	613b      	str	r3, [r7, #16]

	if (elem)
 800156a:	68bb      	ldr	r3, [r7, #8]
 800156c:	2b00      	cmp	r3, #0
 800156e:	d006      	beq.n	800157e <__circ_gbuf_pop+0x72>
		memcpy(elem, tail, circ_buf->element_size);
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	895b      	ldrh	r3, [r3, #10]
 8001574:	461a      	mov	r2, r3
 8001576:	6939      	ldr	r1, [r7, #16]
 8001578:	68b8      	ldr	r0, [r7, #8]
 800157a:	f009 fa03 	bl	800a984 <memcpy>

	if (!read_only) {
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	2b00      	cmp	r3, #0
 8001582:	d110      	bne.n	80015a6 <__circ_gbuf_pop+0x9a>
#ifdef CRICBUF_CLEAN_ON_POP
		memset(tail, 0, circ_buf->element_size);
#endif
		circ_buf->pop_count++;
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	88db      	ldrh	r3, [r3, #6]
 8001588:	3301      	adds	r3, #1
 800158a:	b29a      	uxth	r2, r3
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	80da      	strh	r2, [r3, #6]
		if (circ_buf->pop_count >= (2*circ_buf->size))
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	88db      	ldrh	r3, [r3, #6]
 8001594:	461a      	mov	r2, r3
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	891b      	ldrh	r3, [r3, #8]
 800159a:	005b      	lsls	r3, r3, #1
 800159c:	429a      	cmp	r2, r3
 800159e:	db02      	blt.n	80015a6 <__circ_gbuf_pop+0x9a>
			circ_buf->pop_count = 0;
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	2200      	movs	r2, #0
 80015a4:	80da      	strh	r2, [r3, #6]
	}
	return 0;
 80015a6:	2300      	movs	r3, #0
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3718      	adds	r7, #24
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <__circ_gbuf_push>:

int __circ_gbuf_push(circ_gbuf_t *circ_buf, void *elem)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b084      	sub	sp, #16
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	6039      	str	r1, [r7, #0]
	int total;
	char *head;

	total = circ_buf->push_count - circ_buf->pop_count;
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	889b      	ldrh	r3, [r3, #4]
 80015be:	461a      	mov	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	88db      	ldrh	r3, [r3, #6]
 80015c4:	1ad3      	subs	r3, r2, r3
 80015c6:	60fb      	str	r3, [r7, #12]
	if (total < 0)
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	da05      	bge.n	80015da <__circ_gbuf_push+0x2a>
		total += (2 * circ_buf->size);
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	891b      	ldrh	r3, [r3, #8]
 80015d2:	005b      	lsls	r3, r3, #1
 80015d4:	68fa      	ldr	r2, [r7, #12]
 80015d6:	4413      	add	r3, r2
 80015d8:	60fb      	str	r3, [r7, #12]

	if (total >=  circ_buf->size)
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	891b      	ldrh	r3, [r3, #8]
 80015de:	461a      	mov	r2, r3
 80015e0:	68fb      	ldr	r3, [r7, #12]
 80015e2:	4293      	cmp	r3, r2
 80015e4:	db02      	blt.n	80015ec <__circ_gbuf_push+0x3c>
		return -1; // Full
 80015e6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ea:	e02b      	b.n	8001644 <__circ_gbuf_push+0x94>

	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	6819      	ldr	r1, [r3, #0]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	889b      	ldrh	r3, [r3, #4]
 80015f4:	687a      	ldr	r2, [r7, #4]
 80015f6:	8912      	ldrh	r2, [r2, #8]
 80015f8:	fbb3 f0f2 	udiv	r0, r3, r2
 80015fc:	fb00 f202 	mul.w	r2, r0, r2
 8001600:	1a9b      	subs	r3, r3, r2
 8001602:	b29b      	uxth	r3, r3
 8001604:	461a      	mov	r2, r3
			* circ_buf->element_size );
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	895b      	ldrh	r3, [r3, #10]
 800160a:	fb02 f303 	mul.w	r3, r2, r3
	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 800160e:	440b      	add	r3, r1
 8001610:	60bb      	str	r3, [r7, #8]
	memcpy(head, elem, circ_buf->element_size);
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	895b      	ldrh	r3, [r3, #10]
 8001616:	461a      	mov	r2, r3
 8001618:	6839      	ldr	r1, [r7, #0]
 800161a:	68b8      	ldr	r0, [r7, #8]
 800161c:	f009 f9b2 	bl	800a984 <memcpy>
	circ_buf->push_count++;
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	889b      	ldrh	r3, [r3, #4]
 8001624:	3301      	adds	r3, #1
 8001626:	b29a      	uxth	r2, r3
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	809a      	strh	r2, [r3, #4]
	if (circ_buf->push_count >= (2*circ_buf->size))
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	889b      	ldrh	r3, [r3, #4]
 8001630:	461a      	mov	r2, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	891b      	ldrh	r3, [r3, #8]
 8001636:	005b      	lsls	r3, r3, #1
 8001638:	429a      	cmp	r2, r3
 800163a:	db02      	blt.n	8001642 <__circ_gbuf_push+0x92>
		circ_buf->push_count = 0;
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	2200      	movs	r2, #0
 8001640:	809a      	strh	r2, [r3, #4]
	return 0;
 8001642:	2300      	movs	r3, #0
}
 8001644:	4618      	mov	r0, r3
 8001646:	3710      	adds	r7, #16
 8001648:	46bd      	mov	sp, r7
 800164a:	bd80      	pop	{r7, pc}

0800164c <Relay_control>:
extern uint16_t DAC_tx_tmp_buffer[2];
extern float DDS_FTW;


//==============================================================================================
void Relay_control(uint8_t relay,uint8_t state){
 800164c:	b580      	push	{r7, lr}
 800164e:	b084      	sub	sp, #16
 8001650:	af00      	add	r7, sp, #0
 8001652:	4603      	mov	r3, r0
 8001654:	460a      	mov	r2, r1
 8001656:	71fb      	strb	r3, [r7, #7]
 8001658:	4613      	mov	r3, r2
 800165a:	71bb      	strb	r3, [r7, #6]
	int Relay_address=0;
 800165c:	2300      	movs	r3, #0
 800165e:	60fb      	str	r3, [r7, #12]
	if(relay>3 || state>1) return;
 8001660:	79fb      	ldrb	r3, [r7, #7]
 8001662:	2b03      	cmp	r3, #3
 8001664:	f200 80a3 	bhi.w	80017ae <Relay_control+0x162>
 8001668:	79bb      	ldrb	r3, [r7, #6]
 800166a:	2b01      	cmp	r3, #1
 800166c:	f200 809f 	bhi.w	80017ae <Relay_control+0x162>

	if(relay==0x00 && state==0x00)
 8001670:	79fb      	ldrb	r3, [r7, #7]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d141      	bne.n	80016fa <Relay_control+0xae>
 8001676:	79bb      	ldrb	r3, [r7, #6]
 8001678:	2b00      	cmp	r3, #0
 800167a:	d13e      	bne.n	80016fa <Relay_control+0xae>
	{
		while(Relay_address<=0x5) // Set all OUTx to zero
 800167c:	e039      	b.n	80016f2 <Relay_control+0xa6>
		{
			HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 800167e:	68fb      	ldr	r3, [r7, #12]
 8001680:	b2db      	uxtb	r3, r3
 8001682:	f003 0301 	and.w	r3, r3, #1
 8001686:	b2db      	uxtb	r3, r3
 8001688:	461a      	mov	r2, r3
 800168a:	2102      	movs	r1, #2
 800168c:	484a      	ldr	r0, [pc, #296]	; (80017b8 <Relay_control+0x16c>)
 800168e:	f004 fa63 	bl	8005b58 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001692:	68fb      	ldr	r3, [r7, #12]
 8001694:	105b      	asrs	r3, r3, #1
 8001696:	b2db      	uxtb	r3, r3
 8001698:	f003 0301 	and.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	461a      	mov	r2, r3
 80016a0:	2104      	movs	r1, #4
 80016a2:	4845      	ldr	r0, [pc, #276]	; (80017b8 <Relay_control+0x16c>)
 80016a4:	f004 fa58 	bl	8005b58 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	109b      	asrs	r3, r3, #2
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	f003 0301 	and.w	r3, r3, #1
 80016b2:	b2db      	uxtb	r3, r3
 80016b4:	461a      	mov	r2, r3
 80016b6:	2108      	movs	r1, #8
 80016b8:	483f      	ldr	r0, [pc, #252]	; (80017b8 <Relay_control+0x16c>)
 80016ba:	f004 fa4d 	bl	8005b58 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 0); // LVL 0
 80016be:	2200      	movs	r2, #0
 80016c0:	2101      	movs	r1, #1
 80016c2:	483d      	ldr	r0, [pc, #244]	; (80017b8 <Relay_control+0x16c>)
 80016c4:	f004 fa48 	bl	8005b58 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 80016c8:	2200      	movs	r2, #0
 80016ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016ce:	483b      	ldr	r0, [pc, #236]	; (80017bc <Relay_control+0x170>)
 80016d0:	f004 fa42 	bl	8005b58 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016d4:	2001      	movs	r0, #1
 80016d6:	f003 feef 	bl	80054b8 <HAL_Delay>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1);
 80016da:	2201      	movs	r2, #1
 80016dc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016e0:	4836      	ldr	r0, [pc, #216]	; (80017bc <Relay_control+0x170>)
 80016e2:	f004 fa39 	bl	8005b58 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016e6:	2001      	movs	r0, #1
 80016e8:	f003 fee6 	bl	80054b8 <HAL_Delay>
			Relay_address++;
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	3301      	adds	r3, #1
 80016f0:	60fb      	str	r3, [r7, #12]
		while(Relay_address<=0x5) // Set all OUTx to zero
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	2b05      	cmp	r3, #5
 80016f6:	ddc2      	ble.n	800167e <Relay_control+0x32>
		}
		return;
 80016f8:	e05a      	b.n	80017b0 <Relay_control+0x164>
	}


	switch (relay)
 80016fa:	79fb      	ldrb	r3, [r7, #7]
 80016fc:	2b03      	cmp	r3, #3
 80016fe:	d006      	beq.n	800170e <Relay_control+0xc2>
 8001700:	2b03      	cmp	r3, #3
 8001702:	dc1f      	bgt.n	8001744 <Relay_control+0xf8>
 8001704:	2b01      	cmp	r3, #1
 8001706:	d014      	beq.n	8001732 <Relay_control+0xe6>
 8001708:	2b02      	cmp	r3, #2
 800170a:	d009      	beq.n	8001720 <Relay_control+0xd4>
 800170c:	e01a      	b.n	8001744 <Relay_control+0xf8>
	{
	case 3:
		if (state==1){
 800170e:	79bb      	ldrb	r3, [r7, #6]
 8001710:	2b01      	cmp	r3, #1
 8001712:	d102      	bne.n	800171a <Relay_control+0xce>
			Relay_address=0x5; //OUT6
 8001714:	2305      	movs	r3, #5
 8001716:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x4; //OUT5
		} break;
 8001718:	e014      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x4; //OUT5
 800171a:	2304      	movs	r3, #4
 800171c:	60fb      	str	r3, [r7, #12]
		} break;
 800171e:	e011      	b.n	8001744 <Relay_control+0xf8>
	case 2:
		if (state==1){
 8001720:	79bb      	ldrb	r3, [r7, #6]
 8001722:	2b01      	cmp	r3, #1
 8001724:	d102      	bne.n	800172c <Relay_control+0xe0>
			Relay_address=0x3; //OUT4
 8001726:	2303      	movs	r3, #3
 8001728:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x2; //OUT3
		} break;
 800172a:	e00b      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x2; //OUT3
 800172c:	2302      	movs	r3, #2
 800172e:	60fb      	str	r3, [r7, #12]
		} break;
 8001730:	e008      	b.n	8001744 <Relay_control+0xf8>
	case 1:
		if (state==1){
 8001732:	79bb      	ldrb	r3, [r7, #6]
 8001734:	2b01      	cmp	r3, #1
 8001736:	d102      	bne.n	800173e <Relay_control+0xf2>
			Relay_address=0x1; //OUT2
 8001738:	2301      	movs	r3, #1
 800173a:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x0; //OUT1
		} break;
 800173c:	e001      	b.n	8001742 <Relay_control+0xf6>
			Relay_address=0x0; //OUT1
 800173e:	2300      	movs	r3, #0
 8001740:	60fb      	str	r3, [r7, #12]
		} break;
 8001742:	bf00      	nop
	}

	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	b2db      	uxtb	r3, r3
 8001748:	f003 0301 	and.w	r3, r3, #1
 800174c:	b2db      	uxtb	r3, r3
 800174e:	461a      	mov	r2, r3
 8001750:	2102      	movs	r1, #2
 8001752:	4819      	ldr	r0, [pc, #100]	; (80017b8 <Relay_control+0x16c>)
 8001754:	f004 fa00 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	105b      	asrs	r3, r3, #1
 800175c:	b2db      	uxtb	r3, r3
 800175e:	f003 0301 	and.w	r3, r3, #1
 8001762:	b2db      	uxtb	r3, r3
 8001764:	461a      	mov	r2, r3
 8001766:	2104      	movs	r1, #4
 8001768:	4813      	ldr	r0, [pc, #76]	; (80017b8 <Relay_control+0x16c>)
 800176a:	f004 f9f5 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	109b      	asrs	r3, r3, #2
 8001772:	b2db      	uxtb	r3, r3
 8001774:	f003 0301 	and.w	r3, r3, #1
 8001778:	b2db      	uxtb	r3, r3
 800177a:	461a      	mov	r2, r3
 800177c:	2108      	movs	r1, #8
 800177e:	480e      	ldr	r0, [pc, #56]	; (80017b8 <Relay_control+0x16c>)
 8001780:	f004 f9ea 	bl	8005b58 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 1); // LVL 1
 8001784:	2201      	movs	r2, #1
 8001786:	2101      	movs	r1, #1
 8001788:	480b      	ldr	r0, [pc, #44]	; (80017b8 <Relay_control+0x16c>)
 800178a:	f004 f9e5 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 800178e:	2200      	movs	r2, #0
 8001790:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001794:	4809      	ldr	r0, [pc, #36]	; (80017bc <Relay_control+0x170>)
 8001796:	f004 f9df 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_Delay(1); // wait 1ms
 800179a:	2001      	movs	r0, #1
 800179c:	f003 fe8c 	bl	80054b8 <HAL_Delay>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1); // End strobe
 80017a0:	2201      	movs	r2, #1
 80017a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80017a6:	4805      	ldr	r0, [pc, #20]	; (80017bc <Relay_control+0x170>)
 80017a8:	f004 f9d6 	bl	8005b58 <HAL_GPIO_WritePin>
 80017ac:	e000      	b.n	80017b0 <Relay_control+0x164>
	if(relay>3 || state>1) return;
 80017ae:	bf00      	nop
}
 80017b0:	3710      	adds	r7, #16
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020800 	.word	0x40020800

080017c0 <CPLD_control>:
//==============================================================================================



//==============================================================================================
void CPLD_control(FunctionalState state){
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	4603      	mov	r3, r0
 80017c8:	71fb      	strb	r3, [r7, #7]
	uint8_t send_word=0x00;
 80017ca:	2300      	movs	r3, #0
 80017cc:	75fb      	strb	r3, [r7, #23]

	// Calculate CPLD divider to expand DDS FTW to 0.1 ppm
	float dds_tmp_calc=DDS_clock_frequecny;
 80017ce:	4b3f      	ldr	r3, [pc, #252]	; (80018cc <CPLD_control+0x10c>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc/=(float)0xFFFFFFFF; // 10MHz / 2^32 = 0.0023283 Hz DDS FTW resolution
 80017d4:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 80017d8:	68f8      	ldr	r0, [r7, #12]
 80017da:	f7ff fba9 	bl	8000f30 <__aeabi_fdiv>
 80017de:	4603      	mov	r3, r0
 80017e0:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc=dds_tmp_calc/(DDS_target_frequecny/(float)1E7); // 0.0023283 Hz / (74.898214 Hz / 1E7) = 310.86 minimum CPLD divider
 80017e2:	4b3b      	ldr	r3, [pc, #236]	; (80018d0 <CPLD_control+0x110>)
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	493b      	ldr	r1, [pc, #236]	; (80018d4 <CPLD_control+0x114>)
 80017e8:	4618      	mov	r0, r3
 80017ea:	f7ff fba1 	bl	8000f30 <__aeabi_fdiv>
 80017ee:	4603      	mov	r3, r0
 80017f0:	4619      	mov	r1, r3
 80017f2:	68f8      	ldr	r0, [r7, #12]
 80017f4:	f7ff fb9c 	bl	8000f30 <__aeabi_fdiv>
 80017f8:	4603      	mov	r3, r0
 80017fa:	60fb      	str	r3, [r7, #12]

	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 80017fc:	2301      	movs	r3, #1
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	e017      	b.n	8001832 <CPLD_control+0x72>
	{
		if(((1<<i)+1) > dds_tmp_calc)
 8001802:	2201      	movs	r2, #1
 8001804:	693b      	ldr	r3, [r7, #16]
 8001806:	fa02 f303 	lsl.w	r3, r2, r3
 800180a:	3301      	adds	r3, #1
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fa87 	bl	8000d20 <__aeabi_i2f>
 8001812:	4603      	mov	r3, r0
 8001814:	4619      	mov	r1, r3
 8001816:	68f8      	ldr	r0, [r7, #12]
 8001818:	f7ff fc74 	bl	8001104 <__aeabi_fcmplt>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d004      	beq.n	800182c <CPLD_control+0x6c>
		{
			CPLD_WORD=i;
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	b2da      	uxtb	r2, r3
 8001826:	4b2c      	ldr	r3, [pc, #176]	; (80018d8 <CPLD_control+0x118>)
 8001828:	701a      	strb	r2, [r3, #0]
			break;
 800182a:	e005      	b.n	8001838 <CPLD_control+0x78>
	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 800182c:	693b      	ldr	r3, [r7, #16]
 800182e:	3301      	adds	r3, #1
 8001830:	613b      	str	r3, [r7, #16]
 8001832:	693b      	ldr	r3, [r7, #16]
 8001834:	2b0e      	cmp	r3, #14
 8001836:	dde4      	ble.n	8001802 <CPLD_control+0x42>
		}
	}

	if(state==CPLD_ON_STATE)send_word=CPLD_WORD;
 8001838:	79fb      	ldrb	r3, [r7, #7]
 800183a:	2b01      	cmp	r3, #1
 800183c:	d102      	bne.n	8001844 <CPLD_control+0x84>
 800183e:	4b26      	ldr	r3, [pc, #152]	; (80018d8 <CPLD_control+0x118>)
 8001840:	781b      	ldrb	r3, [r3, #0]
 8001842:	75fb      	strb	r3, [r7, #23]
	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin,  send_word & 0x1     );
 8001844:	7dfb      	ldrb	r3, [r7, #23]
 8001846:	f003 0301 	and.w	r3, r3, #1
 800184a:	b2db      	uxtb	r3, r3
 800184c:	461a      	mov	r2, r3
 800184e:	2101      	movs	r1, #1
 8001850:	4822      	ldr	r0, [pc, #136]	; (80018dc <CPLD_control+0x11c>)
 8001852:	f004 f981 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin, (send_word & 0x2) >>1);
 8001856:	7dfb      	ldrb	r3, [r7, #23]
 8001858:	105b      	asrs	r3, r3, #1
 800185a:	b2db      	uxtb	r3, r3
 800185c:	f003 0301 	and.w	r3, r3, #1
 8001860:	b2db      	uxtb	r3, r3
 8001862:	461a      	mov	r2, r3
 8001864:	2102      	movs	r1, #2
 8001866:	481d      	ldr	r0, [pc, #116]	; (80018dc <CPLD_control+0x11c>)
 8001868:	f004 f976 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (send_word & 0x4) >>2);
 800186c:	7dfb      	ldrb	r3, [r7, #23]
 800186e:	109b      	asrs	r3, r3, #2
 8001870:	b2db      	uxtb	r3, r3
 8001872:	f003 0301 	and.w	r3, r3, #1
 8001876:	b2db      	uxtb	r3, r3
 8001878:	461a      	mov	r2, r3
 800187a:	2104      	movs	r1, #4
 800187c:	4817      	ldr	r0, [pc, #92]	; (80018dc <CPLD_control+0x11c>)
 800187e:	f004 f96b 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (send_word & 0x8) >>3);
 8001882:	7dfb      	ldrb	r3, [r7, #23]
 8001884:	10db      	asrs	r3, r3, #3
 8001886:	b2db      	uxtb	r3, r3
 8001888:	f003 0301 	and.w	r3, r3, #1
 800188c:	b2db      	uxtb	r3, r3
 800188e:	461a      	mov	r2, r3
 8001890:	2108      	movs	r1, #8
 8001892:	4812      	ldr	r0, [pc, #72]	; (80018dc <CPLD_control+0x11c>)
 8001894:	f004 f960 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_SET); // Send strobe
 8001898:	2201      	movs	r2, #1
 800189a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800189e:	4810      	ldr	r0, [pc, #64]	; (80018e0 <CPLD_control+0x120>)
 80018a0:	f004 f95a 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80018a4:	2200      	movs	r2, #0
 80018a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80018aa:	480d      	ldr	r0, [pc, #52]	; (80018e0 <CPLD_control+0x120>)
 80018ac:	f004 f954 	bl	8005b58 <HAL_GPIO_WritePin>

	if(state==CPLD_OFF_STATE)
 80018b0:	79fb      	ldrb	r3, [r7, #7]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d103      	bne.n	80018be <CPLD_control+0xfe>
	{
		cfg.LDACMODE=0;
 80018b6:	4b0b      	ldr	r3, [pc, #44]	; (80018e4 <CPLD_control+0x124>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	709a      	strb	r2, [r3, #2]
	}
	else
	{
		cfg.LDACMODE=1;
	}
}
 80018bc:	e002      	b.n	80018c4 <CPLD_control+0x104>
		cfg.LDACMODE=1;
 80018be:	4b09      	ldr	r3, [pc, #36]	; (80018e4 <CPLD_control+0x124>)
 80018c0:	2201      	movs	r2, #1
 80018c2:	709a      	strb	r2, [r3, #2]
}
 80018c4:	bf00      	nop
 80018c6:	3718      	adds	r7, #24
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}
 80018cc:	20000018 	.word	0x20000018
 80018d0:	20000740 	.word	0x20000740
 80018d4:	4b189680 	.word	0x4b189680
 80018d8:	2000073a 	.word	0x2000073a
 80018dc:	40020000 	.word	0x40020000
 80018e0:	40020800 	.word	0x40020800
 80018e4:	20000730 	.word	0x20000730

080018e8 <DAC_Write>:



//==============================================================================================
void DAC_Write(uint32_t value)
{
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b082      	sub	sp, #8
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	6078      	str	r0, [r7, #4]
	DAC_tx_buffer=0x01000000; // Write DAC-DATA
 80018f0:	4b18      	ldr	r3, [pc, #96]	; (8001954 <DAC_Write+0x6c>)
 80018f2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80018f6:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(value & 0xFFFFF)<<4;
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	011b      	lsls	r3, r3, #4
 80018fc:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001900:	f023 030f 	bic.w	r3, r3, #15
 8001904:	4a13      	ldr	r2, [pc, #76]	; (8001954 <DAC_Write+0x6c>)
 8001906:	6812      	ldr	r2, [r2, #0]
 8001908:	4413      	add	r3, r2
 800190a:	4a12      	ldr	r2, [pc, #72]	; (8001954 <DAC_Write+0x6c>)
 800190c:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 800190e:	4b11      	ldr	r3, [pc, #68]	; (8001954 <DAC_Write+0x6c>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	0c1b      	lsrs	r3, r3, #16
 8001914:	b29a      	uxth	r2, r3
 8001916:	4b10      	ldr	r3, [pc, #64]	; (8001958 <DAC_Write+0x70>)
 8001918:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 800191a:	4b0e      	ldr	r3, [pc, #56]	; (8001954 <DAC_Write+0x6c>)
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	b29a      	uxth	r2, r3
 8001920:	4b0d      	ldr	r3, [pc, #52]	; (8001958 <DAC_Write+0x70>)
 8001922:	805a      	strh	r2, [r3, #2]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001924:	2200      	movs	r2, #0
 8001926:	2110      	movs	r1, #16
 8001928:	480c      	ldr	r0, [pc, #48]	; (800195c <DAC_Write+0x74>)
 800192a:	f004 f915 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 800192e:	2302      	movs	r3, #2
 8001930:	2202      	movs	r2, #2
 8001932:	4909      	ldr	r1, [pc, #36]	; (8001958 <DAC_Write+0x70>)
 8001934:	480a      	ldr	r0, [pc, #40]	; (8001960 <DAC_Write+0x78>)
 8001936:	f006 f993 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 800193a:	2201      	movs	r2, #1
 800193c:	2110      	movs	r1, #16
 800193e:	4807      	ldr	r0, [pc, #28]	; (800195c <DAC_Write+0x74>)
 8001940:	f004 f90a 	bl	8005b58 <HAL_GPIO_WritePin>
	DAC_code=value;
 8001944:	4a07      	ldr	r2, [pc, #28]	; (8001964 <DAC_Write+0x7c>)
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	6013      	str	r3, [r2, #0]
}
 800194a:	bf00      	nop
 800194c:	3708      	adds	r7, #8
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	20000728 	.word	0x20000728
 8001958:	2000072c 	.word	0x2000072c
 800195c:	40020000 	.word	0x40020000
 8001960:	2000076c 	.word	0x2000076c
 8001964:	20000760 	.word	0x20000760

08001968 <DAC_SendInit>:
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
}

//==============================================================================================
void DAC_SendInit(void)
{
 8001968:	b580      	push	{r7, lr}
 800196a:	af00      	add	r7, sp, #0

	DAC_tx_buffer=0x02000000; // Write CONFIG1
 800196c:	4b3d      	ldr	r3, [pc, #244]	; (8001a64 <DAC_SendInit+0xfc>)
 800196e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001972:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(cfg.PDN & 0x01)<<4;
 8001974:	4b3c      	ldr	r3, [pc, #240]	; (8001a68 <DAC_SendInit+0x100>)
 8001976:	7a1b      	ldrb	r3, [r3, #8]
 8001978:	011b      	lsls	r3, r3, #4
 800197a:	f003 0210 	and.w	r2, r3, #16
 800197e:	4b39      	ldr	r3, [pc, #228]	; (8001a64 <DAC_SendInit+0xfc>)
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	4413      	add	r3, r2
 8001984:	4a37      	ldr	r2, [pc, #220]	; (8001a64 <DAC_SendInit+0xfc>)
 8001986:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.VREFVAL & 0x06)<<6;
 8001988:	4b37      	ldr	r3, [pc, #220]	; (8001a68 <DAC_SendInit+0x100>)
 800198a:	79db      	ldrb	r3, [r3, #7]
 800198c:	019b      	lsls	r3, r3, #6
 800198e:	f403 72c0 	and.w	r2, r3, #384	; 0x180
 8001992:	4b34      	ldr	r3, [pc, #208]	; (8001a64 <DAC_SendInit+0xfc>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	4413      	add	r3, r2
 8001998:	4a32      	ldr	r2, [pc, #200]	; (8001a64 <DAC_SendInit+0xfc>)
 800199a:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSET & 0x01)<<10;
 800199c:	4b32      	ldr	r3, [pc, #200]	; (8001a68 <DAC_SendInit+0x100>)
 800199e:	799b      	ldrb	r3, [r3, #6]
 80019a0:	029b      	lsls	r3, r3, #10
 80019a2:	f403 6280 	and.w	r2, r3, #1024	; 0x400
 80019a6:	4b2f      	ldr	r3, [pc, #188]	; (8001a64 <DAC_SendInit+0xfc>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	4413      	add	r3, r2
 80019ac:	4a2d      	ldr	r2, [pc, #180]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ae:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.DSDO & 0x01)<<11;
 80019b0:	4b2d      	ldr	r3, [pc, #180]	; (8001a68 <DAC_SendInit+0x100>)
 80019b2:	795b      	ldrb	r3, [r3, #5]
 80019b4:	02db      	lsls	r3, r3, #11
 80019b6:	f403 6200 	and.w	r2, r3, #2048	; 0x800
 80019ba:	4b2a      	ldr	r3, [pc, #168]	; (8001a64 <DAC_SendInit+0xfc>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	4413      	add	r3, r2
 80019c0:	4a28      	ldr	r2, [pc, #160]	; (8001a64 <DAC_SendInit+0xfc>)
 80019c2:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.ENALMP & 0x01)<<12;
 80019c4:	4b28      	ldr	r3, [pc, #160]	; (8001a68 <DAC_SendInit+0x100>)
 80019c6:	791b      	ldrb	r3, [r3, #4]
 80019c8:	031b      	lsls	r3, r3, #12
 80019ca:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 80019ce:	4b25      	ldr	r3, [pc, #148]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	4413      	add	r3, r2
 80019d4:	4a23      	ldr	r2, [pc, #140]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d6:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSDO & 0x01)<<13;
 80019d8:	4b23      	ldr	r3, [pc, #140]	; (8001a68 <DAC_SendInit+0x100>)
 80019da:	78db      	ldrb	r3, [r3, #3]
 80019dc:	035b      	lsls	r3, r3, #13
 80019de:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80019e2:	4b20      	ldr	r3, [pc, #128]	; (8001a64 <DAC_SendInit+0xfc>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	4413      	add	r3, r2
 80019e8:	4a1e      	ldr	r2, [pc, #120]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ea:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.LDACMODE & 0x01)<<14;
 80019ec:	4b1e      	ldr	r3, [pc, #120]	; (8001a68 <DAC_SendInit+0x100>)
 80019ee:	789b      	ldrb	r3, [r3, #2]
 80019f0:	039b      	lsls	r3, r3, #14
 80019f2:	f403 4280 	and.w	r2, r3, #16384	; 0x4000
 80019f6:	4b1b      	ldr	r3, [pc, #108]	; (8001a64 <DAC_SendInit+0xfc>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	4413      	add	r3, r2
 80019fc:	4a19      	ldr	r2, [pc, #100]	; (8001a64 <DAC_SendInit+0xfc>)
 80019fe:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.TNH_MASK & 0x03)<<18;
 8001a00:	4b19      	ldr	r3, [pc, #100]	; (8001a68 <DAC_SendInit+0x100>)
 8001a02:	785b      	ldrb	r3, [r3, #1]
 8001a04:	049b      	lsls	r3, r3, #18
 8001a06:	f403 2240 	and.w	r2, r3, #786432	; 0xc0000
 8001a0a:	4b16      	ldr	r3, [pc, #88]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	4413      	add	r3, r2
 8001a10:	4a14      	ldr	r2, [pc, #80]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a12:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.EN_TMP_CAL & 0x01)<<23;
 8001a14:	4b14      	ldr	r3, [pc, #80]	; (8001a68 <DAC_SendInit+0x100>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	05db      	lsls	r3, r3, #23
 8001a1a:	f403 0200 	and.w	r2, r3, #8388608	; 0x800000
 8001a1e:	4b11      	ldr	r3, [pc, #68]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	4413      	add	r3, r2
 8001a24:	4a0f      	ldr	r2, [pc, #60]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a26:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a28:	4b0e      	ldr	r3, [pc, #56]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	0c1b      	lsrs	r3, r3, #16
 8001a2e:	b29a      	uxth	r2, r3
 8001a30:	4b0e      	ldr	r3, [pc, #56]	; (8001a6c <DAC_SendInit+0x104>)
 8001a32:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	b29a      	uxth	r2, r3
 8001a3a:	4b0c      	ldr	r3, [pc, #48]	; (8001a6c <DAC_SendInit+0x104>)
 8001a3c:	805a      	strh	r2, [r3, #2]


	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001a3e:	2200      	movs	r2, #0
 8001a40:	2110      	movs	r1, #16
 8001a42:	480b      	ldr	r0, [pc, #44]	; (8001a70 <DAC_SendInit+0x108>)
 8001a44:	f004 f888 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,5);
 8001a48:	2305      	movs	r3, #5
 8001a4a:	2202      	movs	r2, #2
 8001a4c:	4907      	ldr	r1, [pc, #28]	; (8001a6c <DAC_SendInit+0x104>)
 8001a4e:	4809      	ldr	r0, [pc, #36]	; (8001a74 <DAC_SendInit+0x10c>)
 8001a50:	f006 f906 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001a54:	2201      	movs	r2, #1
 8001a56:	2110      	movs	r1, #16
 8001a58:	4805      	ldr	r0, [pc, #20]	; (8001a70 <DAC_SendInit+0x108>)
 8001a5a:	f004 f87d 	bl	8005b58 <HAL_GPIO_WritePin>

}
 8001a5e:	bf00      	nop
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	bf00      	nop
 8001a64:	20000728 	.word	0x20000728
 8001a68:	20000730 	.word	0x20000730
 8001a6c:	2000072c 	.word	0x2000072c
 8001a70:	40020000 	.word	0x40020000
 8001a74:	2000076c 	.word	0x2000076c

08001a78 <DAC_TEMP_CAL>:

//==============================================================================================
void DAC_TEMP_CAL(void)
{
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b086      	sub	sp, #24
 8001a7c:	af00      	add	r7, sp, #0
	uint32_t DAC_tx_buffer;
	uint16_t DAC_tx_tmp_buffer[2];

	uint16_t spi_receive[2]={0x0,0x0},DAC_tx_tmp_buffer2[2],ALM=0;
 8001a7e:	2300      	movs	r3, #0
 8001a80:	813b      	strh	r3, [r7, #8]
 8001a82:	2300      	movs	r3, #0
 8001a84:	817b      	strh	r3, [r7, #10]
 8001a86:	2300      	movs	r3, #0
 8001a88:	82fb      	strh	r3, [r7, #22]

	//CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal

	cfg.EN_TMP_CAL=1;
 8001a8a:	4b2f      	ldr	r3, [pc, #188]	; (8001b48 <DAC_TEMP_CAL+0xd0>)
 8001a8c:	2201      	movs	r2, #1
 8001a8e:	701a      	strb	r2, [r3, #0]
	DAC_SendInit();
 8001a90:	f7ff ff6a 	bl	8001968 <DAC_SendInit>

	DAC_tx_buffer=0x04000100; // Write TRIGGER RCLTMP
 8001a94:	4b2d      	ldr	r3, [pc, #180]	; (8001b4c <DAC_TEMP_CAL+0xd4>)
 8001a96:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	0c1b      	lsrs	r3, r3, #16
 8001a9c:	b29b      	uxth	r3, r3
 8001a9e:	81bb      	strh	r3, [r7, #12]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001aa0:	693b      	ldr	r3, [r7, #16]
 8001aa2:	b29b      	uxth	r3, r3
 8001aa4:	81fb      	strh	r3, [r7, #14]

	DAC_tx_buffer=0x85000000; // read status register
 8001aa6:	f04f 4305 	mov.w	r3, #2231369728	; 0x85000000
 8001aaa:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer2[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001aac:	693b      	ldr	r3, [r7, #16]
 8001aae:	0c1b      	lsrs	r3, r3, #16
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	80bb      	strh	r3, [r7, #4]
	DAC_tx_tmp_buffer2[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001ab4:	693b      	ldr	r3, [r7, #16]
 8001ab6:	b29b      	uxth	r3, r3
 8001ab8:	80fb      	strh	r3, [r7, #6]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001aba:	2200      	movs	r2, #0
 8001abc:	2110      	movs	r1, #16
 8001abe:	4824      	ldr	r0, [pc, #144]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ac0:	f004 f84a 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 8001ac4:	f107 010c 	add.w	r1, r7, #12
 8001ac8:	2302      	movs	r3, #2
 8001aca:	2202      	movs	r2, #2
 8001acc:	4821      	ldr	r0, [pc, #132]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001ace:	f006 f8c7 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	2110      	movs	r1, #16
 8001ad6:	481e      	ldr	r0, [pc, #120]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ad8:	f004 f83e 	bl	8005b58 <HAL_GPIO_WritePin>

	do{ // Check complete flag
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001adc:	2200      	movs	r2, #0
 8001ade:	2110      	movs	r1, #16
 8001ae0:	481b      	ldr	r0, [pc, #108]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ae2:	f004 f839 	bl	8005b58 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer2,2,2);
 8001ae6:	1d39      	adds	r1, r7, #4
 8001ae8:	2302      	movs	r3, #2
 8001aea:	2202      	movs	r2, #2
 8001aec:	4819      	ldr	r0, [pc, #100]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001aee:	f006 f8b7 	bl	8007c60 <HAL_SPI_Transmit>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001af2:	2201      	movs	r2, #1
 8001af4:	2110      	movs	r1, #16
 8001af6:	4816      	ldr	r0, [pc, #88]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001af8:	f004 f82e 	bl	8005b58 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001afc:	2200      	movs	r2, #0
 8001afe:	2110      	movs	r1, #16
 8001b00:	4813      	ldr	r0, [pc, #76]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b02:	f004 f829 	bl	8005b58 <HAL_GPIO_WritePin>
		HAL_SPI_Receive(&hspi1,(uint8_t *)spi_receive, 2, 2);
 8001b06:	f107 0108 	add.w	r1, r7, #8
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	2202      	movs	r2, #2
 8001b0e:	4811      	ldr	r0, [pc, #68]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001b10:	f006 fb4a 	bl	80081a8 <HAL_SPI_Receive>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001b14:	2201      	movs	r2, #1
 8001b16:	2110      	movs	r1, #16
 8001b18:	480d      	ldr	r0, [pc, #52]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b1a:	f004 f81d 	bl	8005b58 <HAL_GPIO_WritePin>
		ALM=(spi_receive[1] & 0x1000) >> 12;
 8001b1e:	897b      	ldrh	r3, [r7, #10]
 8001b20:	131b      	asrs	r3, r3, #12
 8001b22:	b29b      	uxth	r3, r3
 8001b24:	f003 0301 	and.w	r3, r3, #1
 8001b28:	82fb      	strh	r3, [r7, #22]
		if(ALM!=1)HAL_Delay(10);
 8001b2a:	8afb      	ldrh	r3, [r7, #22]
 8001b2c:	2b01      	cmp	r3, #1
 8001b2e:	d002      	beq.n	8001b36 <DAC_TEMP_CAL+0xbe>
 8001b30:	200a      	movs	r0, #10
 8001b32:	f003 fcc1 	bl	80054b8 <HAL_Delay>
	}while(ALM!=1);
 8001b36:	8afb      	ldrh	r3, [r7, #22]
 8001b38:	2b01      	cmp	r3, #1
 8001b3a:	d1cf      	bne.n	8001adc <DAC_TEMP_CAL+0x64>
}
 8001b3c:	bf00      	nop
 8001b3e:	bf00      	nop
 8001b40:	3718      	adds	r7, #24
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20000730 	.word	0x20000730
 8001b4c:	04000100 	.word	0x04000100
 8001b50:	40020000 	.word	0x40020000
 8001b54:	2000076c 	.word	0x2000076c

08001b58 <DDS_Calculation>:

void DDS_Calculation(void)
{
 8001b58:	b590      	push	{r4, r7, lr}
 8001b5a:	b087      	sub	sp, #28
 8001b5c:	af00      	add	r7, sp, #0
	float hw_limit=1000; // 1kHz hardware optimized limit
 8001b5e:	4b87      	ldr	r3, [pc, #540]	; (8001d7c <DDS_Calculation+0x224>)
 8001b60:	613b      	str	r3, [r7, #16]
	float dac_counts=DAC_CODE_TOP-1;
 8001b62:	4b87      	ldr	r3, [pc, #540]	; (8001d80 <DDS_Calculation+0x228>)
 8001b64:	60fb      	str	r3, [r7, #12]
	float corr_coeff;
	float dac_tmp=DAC_code;
 8001b66:	4b87      	ldr	r3, [pc, #540]	; (8001d84 <DDS_Calculation+0x22c>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f7ff f8d4 	bl	8000d18 <__aeabi_ui2f>
 8001b70:	4603      	mov	r3, r0
 8001b72:	60bb      	str	r3, [r7, #8]
	float second_left;
	uint32_t codes_left=0;
 8001b74:	2300      	movs	r3, #0
 8001b76:	617b      	str	r3, [r7, #20]

	// Linearity correction
	corr_coeff=corr_coeff_1*dac_tmp*dac_tmp;
 8001b78:	4b83      	ldr	r3, [pc, #524]	; (8001d88 <DDS_Calculation+0x230>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	68b9      	ldr	r1, [r7, #8]
 8001b7e:	4618      	mov	r0, r3
 8001b80:	f7ff f922 	bl	8000dc8 <__aeabi_fmul>
 8001b84:	4603      	mov	r3, r0
 8001b86:	4619      	mov	r1, r3
 8001b88:	68b8      	ldr	r0, [r7, #8]
 8001b8a:	f7ff f91d 	bl	8000dc8 <__aeabi_fmul>
 8001b8e:	4603      	mov	r3, r0
 8001b90:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_2*dac_tmp;
 8001b92:	4b7e      	ldr	r3, [pc, #504]	; (8001d8c <DDS_Calculation+0x234>)
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	68b9      	ldr	r1, [r7, #8]
 8001b98:	4618      	mov	r0, r3
 8001b9a:	f7ff f915 	bl	8000dc8 <__aeabi_fmul>
 8001b9e:	4603      	mov	r3, r0
 8001ba0:	4619      	mov	r1, r3
 8001ba2:	6878      	ldr	r0, [r7, #4]
 8001ba4:	f7ff f808 	bl	8000bb8 <__addsf3>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_3;
 8001bac:	4b78      	ldr	r3, [pc, #480]	; (8001d90 <DDS_Calculation+0x238>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	4619      	mov	r1, r3
 8001bb2:	6878      	ldr	r0, [r7, #4]
 8001bb4:	f7ff f800 	bl	8000bb8 <__addsf3>
 8001bb8:	4603      	mov	r3, r0
 8001bba:	607b      	str	r3, [r7, #4]

	DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed); // 1048575 / (14V / 0.01V/s) = 74.898214 Hz
 8001bbc:	4b75      	ldr	r3, [pc, #468]	; (8001d94 <DDS_Calculation+0x23c>)
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a75      	ldr	r2, [pc, #468]	; (8001d98 <DDS_Calculation+0x240>)
 8001bc2:	6812      	ldr	r2, [r2, #0]
 8001bc4:	4611      	mov	r1, r2
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f7ff f9b2 	bl	8000f30 <__aeabi_fdiv>
 8001bcc:	4603      	mov	r3, r0
 8001bce:	4619      	mov	r1, r3
 8001bd0:	68f8      	ldr	r0, [r7, #12]
 8001bd2:	f7ff f9ad 	bl	8000f30 <__aeabi_fdiv>
 8001bd6:	4603      	mov	r3, r0
 8001bd8:	461a      	mov	r2, r3
 8001bda:	4b70      	ldr	r3, [pc, #448]	; (8001d9c <DDS_Calculation+0x244>)
 8001bdc:	601a      	str	r2, [r3, #0]

	if(DDS_target_frequecny>hw_limit)
 8001bde:	4b6f      	ldr	r3, [pc, #444]	; (8001d9c <DDS_Calculation+0x244>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	4619      	mov	r1, r3
 8001be4:	6938      	ldr	r0, [r7, #16]
 8001be6:	f7ff fa8d 	bl	8001104 <__aeabi_fcmplt>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d02e      	beq.n	8001c4e <DDS_Calculation+0xf6>
	{
		DDS_target_multipiller=DDS_target_frequecny/hw_limit;
 8001bf0:	4b6a      	ldr	r3, [pc, #424]	; (8001d9c <DDS_Calculation+0x244>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	6939      	ldr	r1, [r7, #16]
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	f7ff f99a 	bl	8000f30 <__aeabi_fdiv>
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	4618      	mov	r0, r3
 8001c00:	f7ff faa8 	bl	8001154 <__aeabi_f2uiz>
 8001c04:	4603      	mov	r3, r0
 8001c06:	4a66      	ldr	r2, [pc, #408]	; (8001da0 <DDS_Calculation+0x248>)
 8001c08:	6013      	str	r3, [r2, #0]
		DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed);
 8001c0a:	4b62      	ldr	r3, [pc, #392]	; (8001d94 <DDS_Calculation+0x23c>)
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	4a62      	ldr	r2, [pc, #392]	; (8001d98 <DDS_Calculation+0x240>)
 8001c10:	6812      	ldr	r2, [r2, #0]
 8001c12:	4611      	mov	r1, r2
 8001c14:	4618      	mov	r0, r3
 8001c16:	f7ff f98b 	bl	8000f30 <__aeabi_fdiv>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	4619      	mov	r1, r3
 8001c1e:	68f8      	ldr	r0, [r7, #12]
 8001c20:	f7ff f986 	bl	8000f30 <__aeabi_fdiv>
 8001c24:	4603      	mov	r3, r0
 8001c26:	461a      	mov	r2, r3
 8001c28:	4b5c      	ldr	r3, [pc, #368]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2a:	601a      	str	r2, [r3, #0]
		DDS_target_frequecny/=(float)DDS_target_multipiller;
 8001c2c:	4b5b      	ldr	r3, [pc, #364]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2e:	681c      	ldr	r4, [r3, #0]
 8001c30:	4b5b      	ldr	r3, [pc, #364]	; (8001da0 <DDS_Calculation+0x248>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff f86f 	bl	8000d18 <__aeabi_ui2f>
 8001c3a:	4603      	mov	r3, r0
 8001c3c:	4619      	mov	r1, r3
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f7ff f976 	bl	8000f30 <__aeabi_fdiv>
 8001c44:	4603      	mov	r3, r0
 8001c46:	461a      	mov	r2, r3
 8001c48:	4b54      	ldr	r3, [pc, #336]	; (8001d9c <DDS_Calculation+0x244>)
 8001c4a:	601a      	str	r2, [r3, #0]
 8001c4c:	e002      	b.n	8001c54 <DDS_Calculation+0xfc>
	} else DDS_target_multipiller = 1;
 8001c4e:	4b54      	ldr	r3, [pc, #336]	; (8001da0 <DDS_Calculation+0x248>)
 8001c50:	2201      	movs	r2, #1
 8001c52:	601a      	str	r2, [r3, #0]

	DDS_FTW=(((DDS_target_frequecny/corr_coeff)*((1<<CPLD_WORD)+1))/DDS_clock_frequecny)*(float)0xFFFFFFFF;
 8001c54:	4b51      	ldr	r3, [pc, #324]	; (8001d9c <DDS_Calculation+0x244>)
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	6879      	ldr	r1, [r7, #4]
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	f7ff f968 	bl	8000f30 <__aeabi_fdiv>
 8001c60:	4603      	mov	r3, r0
 8001c62:	461c      	mov	r4, r3
 8001c64:	4b4f      	ldr	r3, [pc, #316]	; (8001da4 <DDS_Calculation+0x24c>)
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	461a      	mov	r2, r3
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	4093      	lsls	r3, r2
 8001c6e:	3301      	adds	r3, #1
 8001c70:	4618      	mov	r0, r3
 8001c72:	f7ff f855 	bl	8000d20 <__aeabi_i2f>
 8001c76:	4603      	mov	r3, r0
 8001c78:	4619      	mov	r1, r3
 8001c7a:	4620      	mov	r0, r4
 8001c7c:	f7ff f8a4 	bl	8000dc8 <__aeabi_fmul>
 8001c80:	4603      	mov	r3, r0
 8001c82:	461a      	mov	r2, r3
 8001c84:	4b48      	ldr	r3, [pc, #288]	; (8001da8 <DDS_Calculation+0x250>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	4619      	mov	r1, r3
 8001c8a:	4610      	mov	r0, r2
 8001c8c:	f7ff f950 	bl	8000f30 <__aeabi_fdiv>
 8001c90:	4603      	mov	r3, r0
 8001c92:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 8001c96:	4618      	mov	r0, r3
 8001c98:	f7ff f896 	bl	8000dc8 <__aeabi_fmul>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	461a      	mov	r2, r3
 8001ca0:	4b42      	ldr	r3, [pc, #264]	; (8001dac <DDS_Calculation+0x254>)
 8001ca2:	601a      	str	r2, [r3, #0]

	switch(DAC_code_direction)
 8001ca4:	4b42      	ldr	r3, [pc, #264]	; (8001db0 <DDS_Calculation+0x258>)
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	2b02      	cmp	r3, #2
 8001caa:	d011      	beq.n	8001cd0 <DDS_Calculation+0x178>
 8001cac:	2b02      	cmp	r3, #2
 8001cae:	dc1f      	bgt.n	8001cf0 <DDS_Calculation+0x198>
 8001cb0:	2b00      	cmp	r3, #0
 8001cb2:	d009      	beq.n	8001cc8 <DDS_Calculation+0x170>
 8001cb4:	2b01      	cmp	r3, #1
 8001cb6:	d11b      	bne.n	8001cf0 <DDS_Calculation+0x198>
	{
	//----------------------------------------------------------//
	case DIRECTION_UP_STATE:
		codes_left=0xFFFFF-DAC_code;
 8001cb8:	4b32      	ldr	r3, [pc, #200]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001cc0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001cc4:	617b      	str	r3, [r7, #20]
		break;
 8001cc6:	e013      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_DOWN_STATE:
		codes_left=DAC_code;
 8001cc8:	4b2e      	ldr	r3, [pc, #184]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	617b      	str	r3, [r7, #20]
		break;
 8001cce:	e00f      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_CYCLE_STATE:
		if(DAC_code_direction_for_cycle_mode == 1)
 8001cd0:	4b38      	ldr	r3, [pc, #224]	; (8001db4 <DDS_Calculation+0x25c>)
 8001cd2:	781b      	ldrb	r3, [r3, #0]
 8001cd4:	2b01      	cmp	r3, #1
 8001cd6:	d107      	bne.n	8001ce8 <DDS_Calculation+0x190>
		{
			codes_left=0xFFFFF-DAC_code;
 8001cd8:	4b2a      	ldr	r3, [pc, #168]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001ce0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001ce4:	617b      	str	r3, [r7, #20]
		}
		else
		{
			codes_left=DAC_code;
		}
		break;
 8001ce6:	e002      	b.n	8001cee <DDS_Calculation+0x196>
			codes_left=DAC_code;
 8001ce8:	4b26      	ldr	r3, [pc, #152]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	617b      	str	r3, [r7, #20]
		break;
 8001cee:	bf00      	nop
	}

	second_left=codes_left/DDS_target_multipiller/DDS_target_frequecny;
 8001cf0:	4b2b      	ldr	r3, [pc, #172]	; (8001da0 <DDS_Calculation+0x248>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	697a      	ldr	r2, [r7, #20]
 8001cf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	f7ff f80c 	bl	8000d18 <__aeabi_ui2f>
 8001d00:	4602      	mov	r2, r0
 8001d02:	4b26      	ldr	r3, [pc, #152]	; (8001d9c <DDS_Calculation+0x244>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	4619      	mov	r1, r3
 8001d08:	4610      	mov	r0, r2
 8001d0a:	f7ff f911 	bl	8000f30 <__aeabi_fdiv>
 8001d0e:	4603      	mov	r3, r0
 8001d10:	603b      	str	r3, [r7, #0]
	eta_second=(uint32_t)second_left % 60;
 8001d12:	6838      	ldr	r0, [r7, #0]
 8001d14:	f7ff fa1e 	bl	8001154 <__aeabi_f2uiz>
 8001d18:	4601      	mov	r1, r0
 8001d1a:	4b27      	ldr	r3, [pc, #156]	; (8001db8 <DDS_Calculation+0x260>)
 8001d1c:	fba3 2301 	umull	r2, r3, r3, r1
 8001d20:	095a      	lsrs	r2, r3, #5
 8001d22:	4613      	mov	r3, r2
 8001d24:	011b      	lsls	r3, r3, #4
 8001d26:	1a9b      	subs	r3, r3, r2
 8001d28:	009b      	lsls	r3, r3, #2
 8001d2a:	1aca      	subs	r2, r1, r3
 8001d2c:	b2d2      	uxtb	r2, r2
 8001d2e:	4b23      	ldr	r3, [pc, #140]	; (8001dbc <DDS_Calculation+0x264>)
 8001d30:	701a      	strb	r2, [r3, #0]
	eta_minute=(uint32_t)(second_left / 60) % 60;
 8001d32:	4923      	ldr	r1, [pc, #140]	; (8001dc0 <DDS_Calculation+0x268>)
 8001d34:	6838      	ldr	r0, [r7, #0]
 8001d36:	f7ff f8fb 	bl	8000f30 <__aeabi_fdiv>
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	4618      	mov	r0, r3
 8001d3e:	f7ff fa09 	bl	8001154 <__aeabi_f2uiz>
 8001d42:	4601      	mov	r1, r0
 8001d44:	4b1c      	ldr	r3, [pc, #112]	; (8001db8 <DDS_Calculation+0x260>)
 8001d46:	fba3 2301 	umull	r2, r3, r3, r1
 8001d4a:	095a      	lsrs	r2, r3, #5
 8001d4c:	4613      	mov	r3, r2
 8001d4e:	011b      	lsls	r3, r3, #4
 8001d50:	1a9b      	subs	r3, r3, r2
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	1aca      	subs	r2, r1, r3
 8001d56:	b2d2      	uxtb	r2, r2
 8001d58:	4b1a      	ldr	r3, [pc, #104]	; (8001dc4 <DDS_Calculation+0x26c>)
 8001d5a:	701a      	strb	r2, [r3, #0]
	eta_hours=(uint32_t) second_left / 3600;
 8001d5c:	6838      	ldr	r0, [r7, #0]
 8001d5e:	f7ff f9f9 	bl	8001154 <__aeabi_f2uiz>
 8001d62:	4603      	mov	r3, r0
 8001d64:	4a18      	ldr	r2, [pc, #96]	; (8001dc8 <DDS_Calculation+0x270>)
 8001d66:	fba2 2303 	umull	r2, r3, r2, r3
 8001d6a:	0adb      	lsrs	r3, r3, #11
 8001d6c:	b2da      	uxtb	r2, r3
 8001d6e:	4b17      	ldr	r3, [pc, #92]	; (8001dcc <DDS_Calculation+0x274>)
 8001d70:	701a      	strb	r2, [r3, #0]
}
 8001d72:	bf00      	nop
 8001d74:	371c      	adds	r7, #28
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd90      	pop	{r4, r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	447a0000 	.word	0x447a0000
 8001d80:	497fffe0 	.word	0x497fffe0
 8001d84:	20000760 	.word	0x20000760
 8001d88:	2000052c 	.word	0x2000052c
 8001d8c:	20000530 	.word	0x20000530
 8001d90:	20000534 	.word	0x20000534
 8001d94:	20000750 	.word	0x20000750
 8001d98:	20000744 	.word	0x20000744
 8001d9c:	20000740 	.word	0x20000740
 8001da0:	20000014 	.word	0x20000014
 8001da4:	2000073a 	.word	0x2000073a
 8001da8:	20000018 	.word	0x20000018
 8001dac:	2000073c 	.word	0x2000073c
 8001db0:	20000764 	.word	0x20000764
 8001db4:	20000765 	.word	0x20000765
 8001db8:	88888889 	.word	0x88888889
 8001dbc:	20000702 	.word	0x20000702
 8001dc0:	42700000 	.word	0x42700000
 8001dc4:	20000701 	.word	0x20000701
 8001dc8:	91a2b3c5 	.word	0x91a2b3c5
 8001dcc:	20000700 	.word	0x20000700

08001dd0 <DDS_Init>:

//==============================================================================================
void DDS_Init(void)
{
 8001dd0:	b590      	push	{r4, r7, lr}
 8001dd2:	b083      	sub	sp, #12
 8001dd4:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];
	DDS_Calculation();
 8001dd6:	f7ff febf 	bl	8001b58 <DDS_Calculation>

	HAL_Delay(100);
 8001dda:	2064      	movs	r0, #100	; 0x64
 8001ddc:	f003 fb6c 	bl	80054b8 <HAL_Delay>

	//CONTROL REGISTER WRITE SLEEP =1 ,	RESET = 1,	CLR = 1
	DDS_tx_buffer[0]=0xC000; // Control DDS (D15=1, D14=1)
 8001de0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001de4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=0x7 << 11; //  SLEEP = 1 , RESET = 1,	CLR = 1
 8001de6:	88bb      	ldrh	r3, [r7, #4]
 8001de8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8001dec:	b29b      	uxth	r3, r3
 8001dee:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001df0:	2200      	movs	r2, #0
 8001df2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001df6:	4861      	ldr	r0, [pc, #388]	; (8001f7c <DDS_Init+0x1ac>)
 8001df8:	f003 feae 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001dfc:	1d39      	adds	r1, r7, #4
 8001dfe:	2305      	movs	r3, #5
 8001e00:	2201      	movs	r2, #1
 8001e02:	485f      	ldr	r0, [pc, #380]	; (8001f80 <DDS_Init+0x1b0>)
 8001e04:	f005 ff2c 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e08:	2201      	movs	r2, #1
 8001e0a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e0e:	485b      	ldr	r0, [pc, #364]	; (8001f7c <DDS_Init+0x1ac>)
 8001e10:	f003 fea2 	bl	8005b58 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001e14:	2064      	movs	r0, #100	; 0x64
 8001e16:	f003 fb4f 	bl	80054b8 <HAL_Delay>
	//DO NOT !!! SET SYNC AND/OR SELSRC TO 1

	//WRITE INITIAL DATA

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001e1a:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001e1e:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001e20:	88bc      	ldrh	r4, [r7, #4]
 8001e22:	4b58      	ldr	r3, [pc, #352]	; (8001f84 <DDS_Init+0x1b4>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	4618      	mov	r0, r3
 8001e28:	f7ff f994 	bl	8001154 <__aeabi_f2uiz>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	0e1b      	lsrs	r3, r3, #24
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	4423      	add	r3, r4
 8001e34:	b29b      	uxth	r3, r3
 8001e36:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e38:	2200      	movs	r2, #0
 8001e3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e3e:	484f      	ldr	r0, [pc, #316]	; (8001f7c <DDS_Init+0x1ac>)
 8001e40:	f003 fe8a 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e44:	1d39      	adds	r1, r7, #4
 8001e46:	2305      	movs	r3, #5
 8001e48:	2201      	movs	r2, #1
 8001e4a:	484d      	ldr	r0, [pc, #308]	; (8001f80 <DDS_Init+0x1b0>)
 8001e4c:	f005 ff08 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e50:	2201      	movs	r2, #1
 8001e52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e56:	4849      	ldr	r0, [pc, #292]	; (8001f7c <DDS_Init+0x1ac>)
 8001e58:	f003 fe7e 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001e5c:	2032      	movs	r0, #50	; 0x32
 8001e5e:	f003 fb2b 	bl	80054b8 <HAL_Delay>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001e62:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001e66:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001e68:	88bc      	ldrh	r4, [r7, #4]
 8001e6a:	4b46      	ldr	r3, [pc, #280]	; (8001f84 <DDS_Init+0x1b4>)
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f7ff f970 	bl	8001154 <__aeabi_f2uiz>
 8001e74:	4603      	mov	r3, r0
 8001e76:	0c1b      	lsrs	r3, r3, #16
 8001e78:	b29b      	uxth	r3, r3
 8001e7a:	b2db      	uxtb	r3, r3
 8001e7c:	b29b      	uxth	r3, r3
 8001e7e:	4423      	add	r3, r4
 8001e80:	b29b      	uxth	r3, r3
 8001e82:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e84:	2200      	movs	r2, #0
 8001e86:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e8a:	483c      	ldr	r0, [pc, #240]	; (8001f7c <DDS_Init+0x1ac>)
 8001e8c:	f003 fe64 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e90:	1d39      	adds	r1, r7, #4
 8001e92:	2305      	movs	r3, #5
 8001e94:	2201      	movs	r2, #1
 8001e96:	483a      	ldr	r0, [pc, #232]	; (8001f80 <DDS_Init+0x1b0>)
 8001e98:	f005 fee2 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e9c:	2201      	movs	r2, #1
 8001e9e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ea2:	4836      	ldr	r0, [pc, #216]	; (8001f7c <DDS_Init+0x1ac>)
 8001ea4:	f003 fe58 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ea8:	2032      	movs	r0, #50	; 0x32
 8001eaa:	f003 fb05 	bl	80054b8 <HAL_Delay>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8001eae:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 8001eb2:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 8001eb4:	88bc      	ldrh	r4, [r7, #4]
 8001eb6:	4b33      	ldr	r3, [pc, #204]	; (8001f84 <DDS_Init+0x1b4>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f7ff f94a 	bl	8001154 <__aeabi_f2uiz>
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	0a1b      	lsrs	r3, r3, #8
 8001ec4:	b29b      	uxth	r3, r3
 8001ec6:	b2db      	uxtb	r3, r3
 8001ec8:	b29b      	uxth	r3, r3
 8001eca:	4423      	add	r3, r4
 8001ecc:	b29b      	uxth	r3, r3
 8001ece:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ed6:	4829      	ldr	r0, [pc, #164]	; (8001f7c <DDS_Init+0x1ac>)
 8001ed8:	f003 fe3e 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001edc:	1d39      	adds	r1, r7, #4
 8001ede:	2305      	movs	r3, #5
 8001ee0:	2201      	movs	r2, #1
 8001ee2:	4827      	ldr	r0, [pc, #156]	; (8001f80 <DDS_Init+0x1b0>)
 8001ee4:	f005 febc 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001ee8:	2201      	movs	r2, #1
 8001eea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001eee:	4823      	ldr	r0, [pc, #140]	; (8001f7c <DDS_Init+0x1ac>)
 8001ef0:	f003 fe32 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ef4:	2032      	movs	r0, #50	; 0x32
 8001ef6:	f003 fadf 	bl	80054b8 <HAL_Delay>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 8001efa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001efe:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8001f00:	88bc      	ldrh	r4, [r7, #4]
 8001f02:	4b20      	ldr	r3, [pc, #128]	; (8001f84 <DDS_Init+0x1b4>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4618      	mov	r0, r3
 8001f08:	f7ff f924 	bl	8001154 <__aeabi_f2uiz>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	b29b      	uxth	r3, r3
 8001f10:	b2db      	uxtb	r3, r3
 8001f12:	b29b      	uxth	r3, r3
 8001f14:	4423      	add	r3, r4
 8001f16:	b29b      	uxth	r3, r3
 8001f18:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f20:	4816      	ldr	r0, [pc, #88]	; (8001f7c <DDS_Init+0x1ac>)
 8001f22:	f003 fe19 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f26:	1d39      	adds	r1, r7, #4
 8001f28:	2305      	movs	r3, #5
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	4814      	ldr	r0, [pc, #80]	; (8001f80 <DDS_Init+0x1b0>)
 8001f2e:	f005 fe97 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f32:	2201      	movs	r2, #1
 8001f34:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f38:	4810      	ldr	r0, [pc, #64]	; (8001f7c <DDS_Init+0x1ac>)
 8001f3a:	f003 fe0d 	bl	8005b58 <HAL_GPIO_WritePin>


	HAL_Delay(100);
 8001f3e:	2064      	movs	r0, #100	; 0x64
 8001f40:	f003 faba 	bl	80054b8 <HAL_Delay>

	// CONTROL REGISTER WRITE, 	SLEEP = 0,	RESET = 0, CLR = 0

	// Control DDS (D15=1, D14=1)
	DDS_tx_buffer[0]=0xC000; // Exit DAC from Sleep+Reset mode
 8001f44:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001f48:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f50:	480a      	ldr	r0, [pc, #40]	; (8001f7c <DDS_Init+0x1ac>)
 8001f52:	f003 fe01 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f56:	1d39      	adds	r1, r7, #4
 8001f58:	2305      	movs	r3, #5
 8001f5a:	2201      	movs	r2, #1
 8001f5c:	4808      	ldr	r0, [pc, #32]	; (8001f80 <DDS_Init+0x1b0>)
 8001f5e:	f005 fe7f 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f62:	2201      	movs	r2, #1
 8001f64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f68:	4804      	ldr	r0, [pc, #16]	; (8001f7c <DDS_Init+0x1ac>)
 8001f6a:	f003 fdf5 	bl	8005b58 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001f6e:	2064      	movs	r0, #100	; 0x64
 8001f70:	f003 faa2 	bl	80054b8 <HAL_Delay>

}
 8001f74:	bf00      	nop
 8001f76:	370c      	adds	r7, #12
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bd90      	pop	{r4, r7, pc}
 8001f7c:	40020400 	.word	0x40020400
 8001f80:	200007c4 	.word	0x200007c4
 8001f84:	2000073c 	.word	0x2000073c

08001f88 <DDS_Update>:

//==============================================================================================
void DDS_Update(void)
{
 8001f88:	b590      	push	{r4, r7, lr}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001f8e:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001f92:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001f94:	88bc      	ldrh	r4, [r7, #4]
 8001f96:	4b44      	ldr	r3, [pc, #272]	; (80020a8 <DDS_Update+0x120>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f7ff f8da 	bl	8001154 <__aeabi_f2uiz>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	0e1b      	lsrs	r3, r3, #24
 8001fa4:	b29b      	uxth	r3, r3
 8001fa6:	4423      	add	r3, r4
 8001fa8:	b29b      	uxth	r3, r3
 8001faa:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001fac:	2200      	movs	r2, #0
 8001fae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fb2:	483e      	ldr	r0, [pc, #248]	; (80020ac <DDS_Update+0x124>)
 8001fb4:	f003 fdd0 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001fb8:	1d39      	adds	r1, r7, #4
 8001fba:	2305      	movs	r3, #5
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	483c      	ldr	r0, [pc, #240]	; (80020b0 <DDS_Update+0x128>)
 8001fc0:	f005 fe4e 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001fc4:	2201      	movs	r2, #1
 8001fc6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fca:	4838      	ldr	r0, [pc, #224]	; (80020ac <DDS_Update+0x124>)
 8001fcc:	f003 fdc4 	bl	8005b58 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001fd0:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001fd4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001fd6:	88bc      	ldrh	r4, [r7, #4]
 8001fd8:	4b33      	ldr	r3, [pc, #204]	; (80020a8 <DDS_Update+0x120>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4618      	mov	r0, r3
 8001fde:	f7ff f8b9 	bl	8001154 <__aeabi_f2uiz>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	0c1b      	lsrs	r3, r3, #16
 8001fe6:	b29b      	uxth	r3, r3
 8001fe8:	b2db      	uxtb	r3, r3
 8001fea:	b29b      	uxth	r3, r3
 8001fec:	4423      	add	r3, r4
 8001fee:	b29b      	uxth	r3, r3
 8001ff0:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ff8:	482c      	ldr	r0, [pc, #176]	; (80020ac <DDS_Update+0x124>)
 8001ffa:	f003 fdad 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001ffe:	1d39      	adds	r1, r7, #4
 8002000:	2305      	movs	r3, #5
 8002002:	2201      	movs	r2, #1
 8002004:	482a      	ldr	r0, [pc, #168]	; (80020b0 <DDS_Update+0x128>)
 8002006:	f005 fe2b 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 800200a:	2201      	movs	r2, #1
 800200c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002010:	4826      	ldr	r0, [pc, #152]	; (80020ac <DDS_Update+0x124>)
 8002012:	f003 fda1 	bl	8005b58 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8002016:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 800201a:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 800201c:	88bc      	ldrh	r4, [r7, #4]
 800201e:	4b22      	ldr	r3, [pc, #136]	; (80020a8 <DDS_Update+0x120>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	4618      	mov	r0, r3
 8002024:	f7ff f896 	bl	8001154 <__aeabi_f2uiz>
 8002028:	4603      	mov	r3, r0
 800202a:	0a1b      	lsrs	r3, r3, #8
 800202c:	b29b      	uxth	r3, r3
 800202e:	b2db      	uxtb	r3, r3
 8002030:	b29b      	uxth	r3, r3
 8002032:	4423      	add	r3, r4
 8002034:	b29b      	uxth	r3, r3
 8002036:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8002038:	2200      	movs	r2, #0
 800203a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800203e:	481b      	ldr	r0, [pc, #108]	; (80020ac <DDS_Update+0x124>)
 8002040:	f003 fd8a 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002044:	1d39      	adds	r1, r7, #4
 8002046:	2305      	movs	r3, #5
 8002048:	2201      	movs	r2, #1
 800204a:	4819      	ldr	r0, [pc, #100]	; (80020b0 <DDS_Update+0x128>)
 800204c:	f005 fe08 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002050:	2201      	movs	r2, #1
 8002052:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002056:	4815      	ldr	r0, [pc, #84]	; (80020ac <DDS_Update+0x124>)
 8002058:	f003 fd7e 	bl	8005b58 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 800205c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002060:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8002062:	88bc      	ldrh	r4, [r7, #4]
 8002064:	4b10      	ldr	r3, [pc, #64]	; (80020a8 <DDS_Update+0x120>)
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	4618      	mov	r0, r3
 800206a:	f7ff f873 	bl	8001154 <__aeabi_f2uiz>
 800206e:	4603      	mov	r3, r0
 8002070:	b29b      	uxth	r3, r3
 8002072:	b2db      	uxtb	r3, r3
 8002074:	b29b      	uxth	r3, r3
 8002076:	4423      	add	r3, r4
 8002078:	b29b      	uxth	r3, r3
 800207a:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 800207c:	2200      	movs	r2, #0
 800207e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002082:	480a      	ldr	r0, [pc, #40]	; (80020ac <DDS_Update+0x124>)
 8002084:	f003 fd68 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002088:	1d39      	adds	r1, r7, #4
 800208a:	2305      	movs	r3, #5
 800208c:	2201      	movs	r2, #1
 800208e:	4808      	ldr	r0, [pc, #32]	; (80020b0 <DDS_Update+0x128>)
 8002090:	f005 fde6 	bl	8007c60 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002094:	2201      	movs	r2, #1
 8002096:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800209a:	4804      	ldr	r0, [pc, #16]	; (80020ac <DDS_Update+0x124>)
 800209c:	f003 fd5c 	bl	8005b58 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
	 */
}
 80020a0:	bf00      	nop
 80020a2:	370c      	adds	r7, #12
 80020a4:	46bd      	mov	sp, r7
 80020a6:	bd90      	pop	{r4, r7, pc}
 80020a8:	2000073c 	.word	0x2000073c
 80020ac:	40020400 	.word	0x40020400
 80020b0:	200007c4 	.word	0x200007c4

080020b4 <LcdSend>:
extern FunctionalState Display_need_wakeup;
extern FunctionalState Display_status;
extern FunctionalState Need_update_Display;

void LcdSend(uint8_t data, uint8_t cmd) //Sends data to display controller
{
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b084      	sub	sp, #16
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	460a      	mov	r2, r1
 80020be:	71fb      	strb	r3, [r7, #7]
 80020c0:	4613      	mov	r3, r2
 80020c2:	71bb      	strb	r3, [r7, #6]
	uint8_t sdata = 0;
 80020c4:	2300      	movs	r3, #0
 80020c6:	73fb      	strb	r3, [r7, #15]

	lcd44780_RW_0;
 80020c8:	2200      	movs	r2, #0
 80020ca:	2102      	movs	r1, #2
 80020cc:	4811      	ldr	r0, [pc, #68]	; (8002114 <LcdSend+0x60>)
 80020ce:	f003 fd43 	bl	8005b58 <HAL_GPIO_WritePin>

	sdata = data;
 80020d2:	79fb      	ldrb	r3, [r7, #7]
 80020d4:	73fb      	strb	r3, [r7, #15]
	if(cmd == lcd_CMD)
 80020d6:	79bb      	ldrb	r3, [r7, #6]
 80020d8:	2b01      	cmp	r3, #1
 80020da:	d105      	bne.n	80020e8 <LcdSend+0x34>
	{
		lcd44780_RS_0;
 80020dc:	2201      	movs	r2, #1
 80020de:	2101      	movs	r1, #1
 80020e0:	480c      	ldr	r0, [pc, #48]	; (8002114 <LcdSend+0x60>)
 80020e2:	f003 fd39 	bl	8005b58 <HAL_GPIO_WritePin>
 80020e6:	e004      	b.n	80020f2 <LcdSend+0x3e>
	}                             //идентефикатор кода
	else
	{
		lcd44780_RS_1;
 80020e8:	2200      	movs	r2, #0
 80020ea:	2101      	movs	r1, #1
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LcdSend+0x60>)
 80020ee:	f003 fd33 	bl	8005b58 <HAL_GPIO_WritePin>
	}                             //идентефикатор данных
	send_data(sdata);
 80020f2:	7bfb      	ldrb	r3, [r7, #15]
 80020f4:	4618      	mov	r0, r3
 80020f6:	f000 f983 	bl	8002400 <send_data>

	if(cmd == lcd_CMD)while(check_busy_flag());
 80020fa:	79bb      	ldrb	r3, [r7, #6]
 80020fc:	2b01      	cmp	r3, #1
 80020fe:	d105      	bne.n	800210c <LcdSend+0x58>
 8002100:	bf00      	nop
 8002102:	f000 f9bd 	bl	8002480 <check_busy_flag>
 8002106:	4603      	mov	r3, r0
 8002108:	2b00      	cmp	r3, #0
 800210a:	d1fa      	bne.n	8002102 <LcdSend+0x4e>
}
 800210c:	bf00      	nop
 800210e:	3710      	adds	r7, #16
 8002110:	46bd      	mov	sp, r7
 8002112:	bd80      	pop	{r7, pc}
 8002114:	40020400 	.word	0x40020400

08002118 <LcdUpdate>:

void LcdUpdate(void)            //Copies the LCD cache into the device RAM
{
 8002118:	b580      	push	{r7, lr}
 800211a:	b082      	sub	sp, #8
 800211c:	af00      	add	r7, sp, #0
	int i = 0, j = 0;
 800211e:	2300      	movs	r3, #0
 8002120:	607b      	str	r3, [r7, #4]
 8002122:	2300      	movs	r3, #0
 8002124:	603b      	str	r3, [r7, #0]

	Need_update_Display=0;
 8002126:	4b17      	ldr	r3, [pc, #92]	; (8002184 <LcdUpdate+0x6c>)
 8002128:	2200      	movs	r2, #0
 800212a:	701a      	strb	r2, [r3, #0]
	LcdSend(HD44780_SET_CGRAM_ADD, lcd_CMD);//Позицианируем курсор на начало координат
 800212c:	2101      	movs	r1, #1
 800212e:	2040      	movs	r0, #64	; 0x40
 8002130:	f7ff ffc0 	bl	80020b4 <LcdSend>
	LcdSend(HD44780_SET_DDRAM_ADD, lcd_CMD);
 8002134:	2101      	movs	r1, #1
 8002136:	2080      	movs	r0, #128	; 0x80
 8002138:	f7ff ffbc 	bl	80020b4 <LcdSend>

	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800213c:	2300      	movs	r3, #0
 800213e:	607b      	str	r3, [r7, #4]
 8002140:	e017      	b.n	8002172 <LcdUpdate+0x5a>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002142:	2300      	movs	r3, #0
 8002144:	603b      	str	r3, [r7, #0]
 8002146:	e00e      	b.n	8002166 <LcdUpdate+0x4e>
		{
			LcdSend(LcdCache[((i * LCD_X_RES) + j)], lcd_DATA);       //вычисляем адрес в фрейм буфере, и данные от туда грузим в дисплей.
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2264      	movs	r2, #100	; 0x64
 800214c:	fb03 f202 	mul.w	r2, r3, r2
 8002150:	683b      	ldr	r3, [r7, #0]
 8002152:	4413      	add	r3, r2
 8002154:	4a0c      	ldr	r2, [pc, #48]	; (8002188 <LcdUpdate+0x70>)
 8002156:	5cd3      	ldrb	r3, [r2, r3]
 8002158:	2102      	movs	r1, #2
 800215a:	4618      	mov	r0, r3
 800215c:	f7ff ffaa 	bl	80020b4 <LcdSend>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002160:	683b      	ldr	r3, [r7, #0]
 8002162:	3301      	adds	r3, #1
 8002164:	603b      	str	r3, [r7, #0]
 8002166:	683b      	ldr	r3, [r7, #0]
 8002168:	2b63      	cmp	r3, #99	; 0x63
 800216a:	dded      	ble.n	8002148 <LcdUpdate+0x30>
	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	3301      	adds	r3, #1
 8002170:	607b      	str	r3, [r7, #4]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	2b01      	cmp	r3, #1
 8002176:	dde4      	ble.n	8002142 <LcdUpdate+0x2a>
		}
}
 8002178:	bf00      	nop
 800217a:	bf00      	nop
 800217c:	3708      	adds	r7, #8
 800217e:	46bd      	mov	sp, r7
 8002180:	bd80      	pop	{r7, pc}
 8002182:	bf00      	nop
 8002184:	20000767 	.word	0x20000767
 8002188:	20000554 	.word	0x20000554

0800218c <LcdClear_massive>:
	LcdUpdate();
}


void LcdClear_massive(void)     //Clears the display
{
 800218c:	b480      	push	{r7}
 800218e:	b083      	sub	sp, #12
 8002190:	af00      	add	r7, sp, #0
	int i = 0;
 8002192:	2300      	movs	r3, #0
 8002194:	607b      	str	r3, [r7, #4]

	for (i = 0; i < LCD_CACHSIZE; i++)
 8002196:	2300      	movs	r3, #0
 8002198:	607b      	str	r3, [r7, #4]
 800219a:	e007      	b.n	80021ac <LcdClear_massive+0x20>
		LcdCache[i] = 0;            //забиваем всю память 0
 800219c:	4a08      	ldr	r2, [pc, #32]	; (80021c0 <LcdClear_massive+0x34>)
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	4413      	add	r3, r2
 80021a2:	2200      	movs	r2, #0
 80021a4:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < LCD_CACHSIZE; i++)
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	3301      	adds	r3, #1
 80021aa:	607b      	str	r3, [r7, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	2bc7      	cmp	r3, #199	; 0xc7
 80021b0:	ddf4      	ble.n	800219c <LcdClear_massive+0x10>
}
 80021b2:	bf00      	nop
 80021b4:	bf00      	nop
 80021b6:	370c      	adds	r7, #12
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bc80      	pop	{r7}
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	20000554 	.word	0x20000554

080021c4 <LcdGotoXYFont>:
	}
}


void LcdGotoXYFont(unsigned char x, unsigned char y)    //Sets cursor location to xy location. Range: 1,1 .. 14,6
{
 80021c4:	b480      	push	{r7}
 80021c6:	b083      	sub	sp, #12
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	4603      	mov	r3, r0
 80021cc:	460a      	mov	r2, r1
 80021ce:	71fb      	strb	r3, [r7, #7]
 80021d0:	4613      	mov	r3, r2
 80021d2:	71bb      	strb	r3, [r7, #6]
	LcdCacheIdx = ((int) (y) - 1) * Cntr_X_RES + ((int) (x) - 1) * Cntr_Y_RES;
 80021d4:	79bb      	ldrb	r3, [r7, #6]
 80021d6:	3b01      	subs	r3, #1
 80021d8:	2264      	movs	r2, #100	; 0x64
 80021da:	fb03 f202 	mul.w	r2, r3, r2
 80021de:	79fb      	ldrb	r3, [r7, #7]
 80021e0:	3b01      	subs	r3, #1
 80021e2:	011b      	lsls	r3, r3, #4
 80021e4:	4413      	add	r3, r2
 80021e6:	461a      	mov	r2, r3
 80021e8:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <LcdGotoXYFont+0x34>)
 80021ea:	601a      	str	r2, [r3, #0]
}
 80021ec:	bf00      	nop
 80021ee:	370c      	adds	r7, #12
 80021f0:	46bd      	mov	sp, r7
 80021f2:	bc80      	pop	{r7}
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop
 80021f8:	2000061c 	.word	0x2000061c

080021fc <clean_lcd_buf>:

void clean_lcd_buf(void)        //очистка текстового буфера
{
 80021fc:	b480      	push	{r7}
 80021fe:	b083      	sub	sp, #12
 8002200:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 8002202:	2300      	movs	r3, #0
 8002204:	71fb      	strb	r3, [r7, #7]

	for (i = 0; i < 20; i++)
 8002206:	2300      	movs	r3, #0
 8002208:	71fb      	strb	r3, [r7, #7]
 800220a:	e006      	b.n	800221a <clean_lcd_buf+0x1e>
		lcd_buf[i] = 0;
 800220c:	79fb      	ldrb	r3, [r7, #7]
 800220e:	4a07      	ldr	r2, [pc, #28]	; (800222c <clean_lcd_buf+0x30>)
 8002210:	2100      	movs	r1, #0
 8002212:	54d1      	strb	r1, [r2, r3]
	for (i = 0; i < 20; i++)
 8002214:	79fb      	ldrb	r3, [r7, #7]
 8002216:	3301      	adds	r3, #1
 8002218:	71fb      	strb	r3, [r7, #7]
 800221a:	79fb      	ldrb	r3, [r7, #7]
 800221c:	2b13      	cmp	r3, #19
 800221e:	d9f5      	bls.n	800220c <clean_lcd_buf+0x10>
}
 8002220:	bf00      	nop
 8002222:	bf00      	nop
 8002224:	370c      	adds	r7, #12
 8002226:	46bd      	mov	sp, r7
 8002228:	bc80      	pop	{r7}
 800222a:	4770      	bx	lr
 800222c:	20000540 	.word	0x20000540

08002230 <LcdChr>:

void LcdChr(int ch)             //Displays a character at current cursor location and increment cursor location
{
 8002230:	b480      	push	{r7}
 8002232:	b085      	sub	sp, #20
 8002234:	af00      	add	r7, sp, #0
 8002236:	6078      	str	r0, [r7, #4]
	char i = 0;
 8002238:	2300      	movs	r3, #0
 800223a:	73fb      	strb	r3, [r7, #15]
	if(ch > 0x7f)
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	2b7f      	cmp	r3, #127	; 0x7f
 8002240:	dd1a      	ble.n	8002278 <LcdChr+0x48>
	{
		for (i = 0; i < 5; i++)
 8002242:	2300      	movs	r3, #0
 8002244:	73fb      	strb	r3, [r7, #15]
 8002246:	e013      	b.n	8002270 <LcdChr+0x40>
			LcdCache[LcdCacheIdx++] = lcd_font_table_rus[(ch * 5 + (i) - 0x3C0)];     //выделяем байт-столбик из символа и грузим в массив - 5 раз
 8002248:	687a      	ldr	r2, [r7, #4]
 800224a:	4613      	mov	r3, r2
 800224c:	009b      	lsls	r3, r3, #2
 800224e:	441a      	add	r2, r3
 8002250:	7bfb      	ldrb	r3, [r7, #15]
 8002252:	4413      	add	r3, r2
 8002254:	f5a3 7270 	sub.w	r2, r3, #960	; 0x3c0
 8002258:	4b1b      	ldr	r3, [pc, #108]	; (80022c8 <LcdChr+0x98>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	1c59      	adds	r1, r3, #1
 800225e:	481a      	ldr	r0, [pc, #104]	; (80022c8 <LcdChr+0x98>)
 8002260:	6001      	str	r1, [r0, #0]
 8002262:	491a      	ldr	r1, [pc, #104]	; (80022cc <LcdChr+0x9c>)
 8002264:	5c89      	ldrb	r1, [r1, r2]
 8002266:	4a1a      	ldr	r2, [pc, #104]	; (80022d0 <LcdChr+0xa0>)
 8002268:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 800226a:	7bfb      	ldrb	r3, [r7, #15]
 800226c:	3301      	adds	r3, #1
 800226e:	73fb      	strb	r3, [r7, #15]
 8002270:	7bfb      	ldrb	r3, [r7, #15]
 8002272:	2b04      	cmp	r3, #4
 8002274:	d9e8      	bls.n	8002248 <LcdChr+0x18>
 8002276:	e019      	b.n	80022ac <LcdChr+0x7c>
	} else
	{
		for (i = 0; i < 5; i++)
 8002278:	2300      	movs	r3, #0
 800227a:	73fb      	strb	r3, [r7, #15]
 800227c:	e013      	b.n	80022a6 <LcdChr+0x76>
			LcdCache[LcdCacheIdx++] = lcd_font_table[(ch * 5 + (i) - 0xA0)];  //выделяем байт-столбик из символа и грузим в массив - 5 раз
 800227e:	687a      	ldr	r2, [r7, #4]
 8002280:	4613      	mov	r3, r2
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	441a      	add	r2, r3
 8002286:	7bfb      	ldrb	r3, [r7, #15]
 8002288:	4413      	add	r3, r2
 800228a:	f1a3 02a0 	sub.w	r2, r3, #160	; 0xa0
 800228e:	4b0e      	ldr	r3, [pc, #56]	; (80022c8 <LcdChr+0x98>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	1c59      	adds	r1, r3, #1
 8002294:	480c      	ldr	r0, [pc, #48]	; (80022c8 <LcdChr+0x98>)
 8002296:	6001      	str	r1, [r0, #0]
 8002298:	490e      	ldr	r1, [pc, #56]	; (80022d4 <LcdChr+0xa4>)
 800229a:	5c89      	ldrb	r1, [r1, r2]
 800229c:	4a0c      	ldr	r2, [pc, #48]	; (80022d0 <LcdChr+0xa0>)
 800229e:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 80022a0:	7bfb      	ldrb	r3, [r7, #15]
 80022a2:	3301      	adds	r3, #1
 80022a4:	73fb      	strb	r3, [r7, #15]
 80022a6:	7bfb      	ldrb	r3, [r7, #15]
 80022a8:	2b04      	cmp	r3, #4
 80022aa:	d9e8      	bls.n	800227e <LcdChr+0x4e>
	}
	LcdCache[LcdCacheIdx++] = 0x00;       //добавляем пробел между символами
 80022ac:	4b06      	ldr	r3, [pc, #24]	; (80022c8 <LcdChr+0x98>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	1c5a      	adds	r2, r3, #1
 80022b2:	4905      	ldr	r1, [pc, #20]	; (80022c8 <LcdChr+0x98>)
 80022b4:	600a      	str	r2, [r1, #0]
 80022b6:	4a06      	ldr	r2, [pc, #24]	; (80022d0 <LcdChr+0xa0>)
 80022b8:	2100      	movs	r1, #0
 80022ba:	54d1      	strb	r1, [r2, r3]
}
 80022bc:	bf00      	nop
 80022be:	3714      	adds	r7, #20
 80022c0:	46bd      	mov	sp, r7
 80022c2:	bc80      	pop	{r7}
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	2000061c 	.word	0x2000061c
 80022cc:	08010034 	.word	0x08010034
 80022d0:	20000554 	.word	0x20000554
 80022d4:	0800fe54 	.word	0x0800fe54

080022d8 <LcdString>:
	}
	LcdCache[LcdCacheIdx++] = 0xFF;       //добавляем пробел между символами
}

void LcdString(unsigned char x, unsigned char y)        //Displays a string at current cursor location
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b084      	sub	sp, #16
 80022dc:	af00      	add	r7, sp, #0
 80022de:	4603      	mov	r3, r0
 80022e0:	460a      	mov	r2, r1
 80022e2:	71fb      	strb	r3, [r7, #7]
 80022e4:	4613      	mov	r3, r2
 80022e6:	71bb      	strb	r3, [r7, #6]
	unsigned char i = 0;
 80022e8:	2300      	movs	r3, #0
 80022ea:	73fb      	strb	r3, [r7, #15]

	if(x > 17 || y > 8)
 80022ec:	79fb      	ldrb	r3, [r7, #7]
 80022ee:	2b11      	cmp	r3, #17
 80022f0:	d81f      	bhi.n	8002332 <LcdString+0x5a>
 80022f2:	79bb      	ldrb	r3, [r7, #6]
 80022f4:	2b08      	cmp	r3, #8
 80022f6:	d81c      	bhi.n	8002332 <LcdString+0x5a>
		return;
	LcdGotoXYFont(x, y);
 80022f8:	79ba      	ldrb	r2, [r7, #6]
 80022fa:	79fb      	ldrb	r3, [r7, #7]
 80022fc:	4611      	mov	r1, r2
 80022fe:	4618      	mov	r0, r3
 8002300:	f7ff ff60 	bl	80021c4 <LcdGotoXYFont>
	for (i = 0; i < 17; i++)
 8002304:	2300      	movs	r3, #0
 8002306:	73fb      	strb	r3, [r7, #15]
 8002308:	e00d      	b.n	8002326 <LcdString+0x4e>
		if(lcd_buf[i])
 800230a:	7bfb      	ldrb	r3, [r7, #15]
 800230c:	4a0b      	ldr	r2, [pc, #44]	; (800233c <LcdString+0x64>)
 800230e:	5cd3      	ldrb	r3, [r2, r3]
 8002310:	2b00      	cmp	r3, #0
 8002312:	d005      	beq.n	8002320 <LcdString+0x48>
			LcdChr(lcd_buf[i]);
 8002314:	7bfb      	ldrb	r3, [r7, #15]
 8002316:	4a09      	ldr	r2, [pc, #36]	; (800233c <LcdString+0x64>)
 8002318:	5cd3      	ldrb	r3, [r2, r3]
 800231a:	4618      	mov	r0, r3
 800231c:	f7ff ff88 	bl	8002230 <LcdChr>
	for (i = 0; i < 17; i++)
 8002320:	7bfb      	ldrb	r3, [r7, #15]
 8002322:	3301      	adds	r3, #1
 8002324:	73fb      	strb	r3, [r7, #15]
 8002326:	7bfb      	ldrb	r3, [r7, #15]
 8002328:	2b10      	cmp	r3, #16
 800232a:	d9ee      	bls.n	800230a <LcdString+0x32>
	clean_lcd_buf();
 800232c:	f7ff ff66 	bl	80021fc <clean_lcd_buf>
 8002330:	e000      	b.n	8002334 <LcdString+0x5c>
		return;
 8002332:	bf00      	nop
}
 8002334:	3710      	adds	r7, #16
 8002336:	46bd      	mov	sp, r7
 8002338:	bd80      	pop	{r7, pc}
 800233a:	bf00      	nop
 800233c:	20000540 	.word	0x20000540

08002340 <pulse_e>:
//////////////////////////////////////////////////////////////////////////////////////



void pulse_e() //импульс на вход Е индикатора
{
 8002340:	b580      	push	{r7, lr}
 8002342:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_SET);//    PIN_ON(PIN_E);
 8002344:	2201      	movs	r2, #1
 8002346:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800234a:	4805      	ldr	r0, [pc, #20]	; (8002360 <pulse_e+0x20>)
 800234c:	f003 fc04 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002350:	2200      	movs	r2, #0
 8002352:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002356:	4802      	ldr	r0, [pc, #8]	; (8002360 <pulse_e+0x20>)
 8002358:	f003 fbfe 	bl	8005b58 <HAL_GPIO_WritePin>
}
 800235c:	bf00      	nop
 800235e:	bd80      	pop	{r7, pc}
 8002360:	40020400 	.word	0x40020400

08002364 <send_nibble>:

void send_nibble(unsigned char data) //полубайтовый вывод
{
 8002364:	b580      	push	{r7, lr}
 8002366:	b082      	sub	sp, #8
 8002368:	af00      	add	r7, sp, #0
 800236a:	4603      	mov	r3, r0
 800236c:	71fb      	strb	r3, [r7, #7]
	//выводим половину байта на соответствующие контакты
	if(data & 0x01)
 800236e:	79fb      	ldrb	r3, [r7, #7]
 8002370:	f003 0301 	and.w	r3, r3, #1
 8002374:	2b00      	cmp	r3, #0
 8002376:	d005      	beq.n	8002384 <send_nibble+0x20>
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB4);
 8002378:	2201      	movs	r2, #1
 800237a:	2104      	movs	r1, #4
 800237c:	481f      	ldr	r0, [pc, #124]	; (80023fc <send_nibble+0x98>)
 800237e:	f003 fbeb 	bl	8005b58 <HAL_GPIO_WritePin>
 8002382:	e004      	b.n	800238e <send_nibble+0x2a>
	else
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 8002384:	2200      	movs	r2, #0
 8002386:	2104      	movs	r1, #4
 8002388:	481c      	ldr	r0, [pc, #112]	; (80023fc <send_nibble+0x98>)
 800238a:	f003 fbe5 	bl	8005b58 <HAL_GPIO_WritePin>

	if(data & 0x02)
 800238e:	79fb      	ldrb	r3, [r7, #7]
 8002390:	f003 0302 	and.w	r3, r3, #2
 8002394:	2b00      	cmp	r3, #0
 8002396:	d005      	beq.n	80023a4 <send_nibble+0x40>
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB5);
 8002398:	2201      	movs	r2, #1
 800239a:	2108      	movs	r1, #8
 800239c:	4817      	ldr	r0, [pc, #92]	; (80023fc <send_nibble+0x98>)
 800239e:	f003 fbdb 	bl	8005b58 <HAL_GPIO_WritePin>
 80023a2:	e004      	b.n	80023ae <send_nibble+0x4a>
	else
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80023a4:	2200      	movs	r2, #0
 80023a6:	2108      	movs	r1, #8
 80023a8:	4814      	ldr	r0, [pc, #80]	; (80023fc <send_nibble+0x98>)
 80023aa:	f003 fbd5 	bl	8005b58 <HAL_GPIO_WritePin>

	if(data & 0x04)
 80023ae:	79fb      	ldrb	r3, [r7, #7]
 80023b0:	f003 0304 	and.w	r3, r3, #4
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d005      	beq.n	80023c4 <send_nibble+0x60>
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB6);
 80023b8:	2201      	movs	r2, #1
 80023ba:	2110      	movs	r1, #16
 80023bc:	480f      	ldr	r0, [pc, #60]	; (80023fc <send_nibble+0x98>)
 80023be:	f003 fbcb 	bl	8005b58 <HAL_GPIO_WritePin>
 80023c2:	e004      	b.n	80023ce <send_nibble+0x6a>
	else
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80023c4:	2200      	movs	r2, #0
 80023c6:	2110      	movs	r1, #16
 80023c8:	480c      	ldr	r0, [pc, #48]	; (80023fc <send_nibble+0x98>)
 80023ca:	f003 fbc5 	bl	8005b58 <HAL_GPIO_WritePin>

	if(data & 0x08)
 80023ce:	79fb      	ldrb	r3, [r7, #7]
 80023d0:	f003 0308 	and.w	r3, r3, #8
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d005      	beq.n	80023e4 <send_nibble+0x80>
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB7);
 80023d8:	2201      	movs	r2, #1
 80023da:	2120      	movs	r1, #32
 80023dc:	4807      	ldr	r0, [pc, #28]	; (80023fc <send_nibble+0x98>)
 80023de:	f003 fbbb 	bl	8005b58 <HAL_GPIO_WritePin>
 80023e2:	e004      	b.n	80023ee <send_nibble+0x8a>
	else
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80023e4:	2200      	movs	r2, #0
 80023e6:	2120      	movs	r1, #32
 80023e8:	4804      	ldr	r0, [pc, #16]	; (80023fc <send_nibble+0x98>)
 80023ea:	f003 fbb5 	bl	8005b58 <HAL_GPIO_WritePin>

	pulse_e(); //чтобы индикатор проглотил данные
 80023ee:	f7ff ffa7 	bl	8002340 <pulse_e>
}
 80023f2:	bf00      	nop
 80023f4:	3708      	adds	r7, #8
 80023f6:	46bd      	mov	sp, r7
 80023f8:	bd80      	pop	{r7, pc}
 80023fa:	bf00      	nop
 80023fc:	40020400 	.word	0x40020400

08002400 <send_data>:

void send_data(unsigned char data) //вывод 2хполбайта на индикатор
{
 8002400:	b580      	push	{r7, lr}
 8002402:	b082      	sub	sp, #8
 8002404:	af00      	add	r7, sp, #0
 8002406:	4603      	mov	r3, r0
 8002408:	71fb      	strb	r3, [r7, #7]
	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800240a:	79fb      	ldrb	r3, [r7, #7]
 800240c:	091b      	lsrs	r3, r3, #4
 800240e:	b2db      	uxtb	r3, r3
 8002410:	4618      	mov	r0, r3
 8002412:	f7ff ffa7 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002416:	79fb      	ldrb	r3, [r7, #7]
 8002418:	f003 030f 	and.w	r3, r3, #15
 800241c:	b2db      	uxtb	r3, r3
 800241e:	4618      	mov	r0, r3
 8002420:	f7ff ffa0 	bl	8002364 <send_nibble>
}
 8002424:	bf00      	nop
 8002426:	3708      	adds	r7, #8
 8002428:	46bd      	mov	sp, r7
 800242a:	bd80      	pop	{r7, pc}

0800242c <send_command>:

void send_command(unsigned char data) //вывод 2хполбайта на индикатор
{
 800242c:	b580      	push	{r7, lr}
 800242e:	b082      	sub	sp, #8
 8002430:	af00      	add	r7, sp, #0
 8002432:	4603      	mov	r3, r0
 8002434:	71fb      	strb	r3, [r7, #7]
	lcd44780_RS_0;
 8002436:	2201      	movs	r2, #1
 8002438:	2101      	movs	r1, #1
 800243a:	4810      	ldr	r0, [pc, #64]	; (800247c <send_command+0x50>)
 800243c:	f003 fb8c 	bl	8005b58 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 8002440:	2200      	movs	r2, #0
 8002442:	2102      	movs	r1, #2
 8002444:	480d      	ldr	r0, [pc, #52]	; (800247c <send_command+0x50>)
 8002446:	f003 fb87 	bl	8005b58 <HAL_GPIO_WritePin>

	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800244a:	79fb      	ldrb	r3, [r7, #7]
 800244c:	091b      	lsrs	r3, r3, #4
 800244e:	b2db      	uxtb	r3, r3
 8002450:	4618      	mov	r0, r3
 8002452:	f7ff ff87 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002456:	79fb      	ldrb	r3, [r7, #7]
 8002458:	f003 030f 	and.w	r3, r3, #15
 800245c:	b2db      	uxtb	r3, r3
 800245e:	4618      	mov	r0, r3
 8002460:	f7ff ff80 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 8002464:	bf00      	nop
 8002466:	f000 f80b 	bl	8002480 <check_busy_flag>
 800246a:	4603      	mov	r3, r0
 800246c:	2b00      	cmp	r3, #0
 800246e:	d1fa      	bne.n	8002466 <send_command+0x3a>
}
 8002470:	bf00      	nop
 8002472:	bf00      	nop
 8002474:	3708      	adds	r7, #8
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
 800247a:	bf00      	nop
 800247c:	40020400 	.word	0x40020400

08002480 <check_busy_flag>:

int check_busy_flag(void)
{
 8002480:	b580      	push	{r7, lr}
 8002482:	b086      	sub	sp, #24
 8002484:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002486:	463b      	mov	r3, r7
 8002488:	2200      	movs	r2, #0
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	605a      	str	r2, [r3, #4]
 800248e:	609a      	str	r2, [r3, #8]
 8002490:	60da      	str	r2, [r3, #12]
 8002492:	611a      	str	r2, [r3, #16]
	GPIO_PinState status;

	lcd44780_RW_1; // Read
 8002494:	2201      	movs	r2, #1
 8002496:	2102      	movs	r1, #2
 8002498:	4822      	ldr	r0, [pc, #136]	; (8002524 <check_busy_flag+0xa4>)
 800249a:	f003 fb5d 	bl	8005b58 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 800249e:	2320      	movs	r3, #32
 80024a0:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80024a2:	2300      	movs	r3, #0
 80024a4:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a6:	2300      	movs	r3, #0
 80024a8:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024aa:	2302      	movs	r3, #2
 80024ac:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ae:	463b      	mov	r3, r7
 80024b0:	4619      	mov	r1, r3
 80024b2:	481c      	ldr	r0, [pc, #112]	; (8002524 <check_busy_flag+0xa4>)
 80024b4:	f003 fa60 	bl	8005978 <HAL_GPIO_Init>

	lcd44780_E_1;
 80024b8:	2201      	movs	r2, #1
 80024ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024be:	4819      	ldr	r0, [pc, #100]	; (8002524 <check_busy_flag+0xa4>)
 80024c0:	f003 fb4a 	bl	8005b58 <HAL_GPIO_WritePin>
	status=HAL_GPIO_ReadPin(Display_DB7_GPIO_Port, Display_DB7_Pin);
 80024c4:	2120      	movs	r1, #32
 80024c6:	4817      	ldr	r0, [pc, #92]	; (8002524 <check_busy_flag+0xa4>)
 80024c8:	f003 fb40 	bl	8005b4c <HAL_GPIO_ReadPin>
 80024cc:	4603      	mov	r3, r0
 80024ce:	75fb      	strb	r3, [r7, #23]
	lcd44780_E_0;
 80024d0:	2200      	movs	r2, #0
 80024d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024d6:	4813      	ldr	r0, [pc, #76]	; (8002524 <check_busy_flag+0xa4>)
 80024d8:	f003 fb3e 	bl	8005b58 <HAL_GPIO_WritePin>
	lcd44780_E_1;
 80024dc:	2201      	movs	r2, #1
 80024de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024e2:	4810      	ldr	r0, [pc, #64]	; (8002524 <check_busy_flag+0xa4>)
 80024e4:	f003 fb38 	bl	8005b58 <HAL_GPIO_WritePin>
	lcd44780_E_0;
 80024e8:	2200      	movs	r2, #0
 80024ea:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024ee:	480d      	ldr	r0, [pc, #52]	; (8002524 <check_busy_flag+0xa4>)
 80024f0:	f003 fb32 	bl	8005b58 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 80024f4:	2320      	movs	r3, #32
 80024f6:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80024f8:	2311      	movs	r3, #17
 80024fa:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024fc:	2300      	movs	r3, #0
 80024fe:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002500:	2302      	movs	r3, #2
 8002502:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002504:	463b      	mov	r3, r7
 8002506:	4619      	mov	r1, r3
 8002508:	4806      	ldr	r0, [pc, #24]	; (8002524 <check_busy_flag+0xa4>)
 800250a:	f003 fa35 	bl	8005978 <HAL_GPIO_Init>
	lcd44780_RW_0;
 800250e:	2200      	movs	r2, #0
 8002510:	2102      	movs	r1, #2
 8002512:	4804      	ldr	r0, [pc, #16]	; (8002524 <check_busy_flag+0xa4>)
 8002514:	f003 fb20 	bl	8005b58 <HAL_GPIO_WritePin>
	return status;
 8002518:	7dfb      	ldrb	r3, [r7, #23]
}
 800251a:	4618      	mov	r0, r3
 800251c:	3718      	adds	r7, #24
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}
 8002522:	bf00      	nop
 8002524:	40020400 	.word	0x40020400

08002528 <Poweroff_LCD>:

void Poweroff_LCD() //выключение ЖК
{
 8002528:	b580      	push	{r7, lr}
 800252a:	af00      	add	r7, sp, #0
	Display_status=0;
 800252c:	4b06      	ldr	r3, [pc, #24]	; (8002548 <Poweroff_LCD+0x20>)
 800252e:	2200      	movs	r2, #0
 8002530:	701a      	strb	r2, [r3, #0]

	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002532:	2001      	movs	r0, #1
 8002534:	f7ff ff7a 	bl	800242c <send_command>
	send_command(0x0A); // Display off
 8002538:	200a      	movs	r0, #10
 800253a:	f7ff ff77 	bl	800242c <send_command>
	send_command(0x1B); // Internal DCDC off
 800253e:	201b      	movs	r0, #27
 8002540:	f7ff ff74 	bl	800242c <send_command>
}
 8002544:	bf00      	nop
 8002546:	bd80      	pop	{r7, pc}
 8002548:	20000766 	.word	0x20000766

0800254c <Poweron_LCD>:

void Poweron_LCD() //включение ЖК
{
 800254c:	b580      	push	{r7, lr}
 800254e:	af00      	add	r7, sp, #0
	Display_status=1;
 8002550:	4b06      	ldr	r3, [pc, #24]	; (800256c <Poweron_LCD+0x20>)
 8002552:	2201      	movs	r2, #1
 8002554:	701a      	strb	r2, [r3, #0]

	send_command(0x0E); // Display on
 8002556:	200e      	movs	r0, #14
 8002558:	f7ff ff68 	bl	800242c <send_command>
	send_command(0x1F); // Internal DCDC on
 800255c:	201f      	movs	r0, #31
 800255e:	f7ff ff65 	bl	800242c <send_command>
	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002562:	2001      	movs	r0, #1
 8002564:	f7ff ff62 	bl	800242c <send_command>
}
 8002568:	bf00      	nop
 800256a:	bd80      	pop	{r7, pc}
 800256c:	20000766 	.word	0x20000766

08002570 <init_LCD>:


void init_LCD() //инициализация ЖК
{
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	Display_status=1;
 8002574:	4b2f      	ldr	r3, [pc, #188]	; (8002634 <init_LCD+0xc4>)
 8002576:	2201      	movs	r2, #1
 8002578:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(Display_Power_GPIO_Port, Display_Power_Pin, GPIO_PIN_RESET); // подаем питание на дисплей
 800257a:	2200      	movs	r2, #0
 800257c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002580:	482d      	ldr	r0, [pc, #180]	; (8002638 <init_LCD+0xc8>)
 8002582:	f003 fae9 	bl	8005b58 <HAL_GPIO_WritePin>
	//Выводы в 0
	HAL_GPIO_WritePin(Display_RS_GPIO_Port, Display_RS_Pin, GPIO_PIN_SET);//  PIN_OFF(PIN_RS); !!!
 8002586:	2201      	movs	r2, #1
 8002588:	2101      	movs	r1, #1
 800258a:	482b      	ldr	r0, [pc, #172]	; (8002638 <init_LCD+0xc8>)
 800258c:	f003 fae4 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002590:	2200      	movs	r2, #0
 8002592:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002596:	4828      	ldr	r0, [pc, #160]	; (8002638 <init_LCD+0xc8>)
 8002598:	f003 fade 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 800259c:	2200      	movs	r2, #0
 800259e:	2104      	movs	r1, #4
 80025a0:	4825      	ldr	r0, [pc, #148]	; (8002638 <init_LCD+0xc8>)
 80025a2:	f003 fad9 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80025a6:	2200      	movs	r2, #0
 80025a8:	2108      	movs	r1, #8
 80025aa:	4823      	ldr	r0, [pc, #140]	; (8002638 <init_LCD+0xc8>)
 80025ac:	f003 fad4 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80025b0:	2200      	movs	r2, #0
 80025b2:	2110      	movs	r1, #16
 80025b4:	4820      	ldr	r0, [pc, #128]	; (8002638 <init_LCD+0xc8>)
 80025b6:	f003 facf 	bl	8005b58 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80025ba:	2200      	movs	r2, #0
 80025bc:	2120      	movs	r1, #32
 80025be:	481e      	ldr	r0, [pc, #120]	; (8002638 <init_LCD+0xc8>)
 80025c0:	f003 faca 	bl	8005b58 <HAL_GPIO_WritePin>

	//Ждем включения ЖКИ
	HAL_Delay(500);
 80025c4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80025c8:	f002 ff76 	bl	80054b8 <HAL_Delay>
	lcd44780_RS_0;
 80025cc:	2201      	movs	r2, #1
 80025ce:	2101      	movs	r1, #1
 80025d0:	4819      	ldr	r0, [pc, #100]	; (8002638 <init_LCD+0xc8>)
 80025d2:	f003 fac1 	bl	8005b58 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 80025d6:	2200      	movs	r2, #0
 80025d8:	2102      	movs	r1, #2
 80025da:	4817      	ldr	r0, [pc, #92]	; (8002638 <init_LCD+0xc8>)
 80025dc:	f003 fabc 	bl	8005b58 <HAL_GPIO_WritePin>
	send_nibble(0x02);
 80025e0:	2002      	movs	r0, #2
 80025e2:	f7ff febf 	bl	8002364 <send_nibble>
	send_nibble(0x02);
 80025e6:	2002      	movs	r0, #2
 80025e8:	f7ff febc 	bl	8002364 <send_nibble>
	send_nibble(0x08);// N=1 F=0
 80025ec:	2008      	movs	r0, #8
 80025ee:	f7ff feb9 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 80025f2:	bf00      	nop
 80025f4:	f7ff ff44 	bl	8002480 <check_busy_flag>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d1fa      	bne.n	80025f4 <init_LCD+0x84>

	send_command(0x0E);// D=1 C=1 B=0
 80025fe:	200e      	movs	r0, #14
 8002600:	f7ff ff14 	bl	800242c <send_command>
	send_command(0x01);
 8002604:	2001      	movs	r0, #1
 8002606:	f7ff ff11 	bl	800242c <send_command>
	send_command(0x06); // I/D=1  S/H=0
 800260a:	2006      	movs	r0, #6
 800260c:	f7ff ff0e 	bl	800242c <send_command>
	send_command(0x2A);// DL=0 N=1 F=0 FT1=1 FT0=0
 8002610:	202a      	movs	r0, #42	; 0x2a
 8002612:	f7ff ff0b 	bl	800242c <send_command>
	send_command(0x1F); //переключение в графику
 8002616:	201f      	movs	r0, #31
 8002618:	f7ff ff08 	bl	800242c <send_command>
	send_command(0x01); //очистили от мусора ОЗУ (т.с. что clear())
 800261c:	2001      	movs	r0, #1
 800261e:	f7ff ff05 	bl	800242c <send_command>

	lcd44780_RS_1;
 8002622:	2200      	movs	r2, #0
 8002624:	2101      	movs	r1, #1
 8002626:	4804      	ldr	r0, [pc, #16]	; (8002638 <init_LCD+0xc8>)
 8002628:	f003 fa96 	bl	8005b58 <HAL_GPIO_WritePin>

	LcdClear_massive();
 800262c:	f7ff fdae 	bl	800218c <LcdClear_massive>

}
 8002630:	bf00      	nop
 8002632:	bd80      	pop	{r7, pc}
 8002634:	20000766 	.word	0x20000766
 8002638:	40020400 	.word	0x40020400

0800263c <LcdBarLine>:
	while(check_busy_flag());

}

void LcdBarLine(uint32_t fill)    // рисуем прогресс-бар в второй строке
{
 800263c:	b5b0      	push	{r4, r5, r7, lr}
 800263e:	b086      	sub	sp, #24
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
	uint16_t i, full_fill_position;
	float y;

	if(fill>0xFFFFF)return;
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800264a:	f080 808f 	bcs.w	800276c <LcdBarLine+0x130>

	// поиск свободного места в массиве кеша дисплея
	//	for (i = LCD_CACHSIZE-1; i > LCD_X_RES; i--) // поиск свободного места в массиве кеша дисплея, в указанной строке
	//		if(LcdCache[i]==0x00)
	//			found_free_position=i;
	y=LCD_X_RES;
 800264e:	4b49      	ldr	r3, [pc, #292]	; (8002774 <LcdBarLine+0x138>)
 8002650:	613b      	str	r3, [r7, #16]
	y*=8; //сколько всего диступно места
 8002652:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002656:	6938      	ldr	r0, [r7, #16]
 8002658:	f7fe fbb6 	bl	8000dc8 <__aeabi_fmul>
 800265c:	4603      	mov	r3, r0
 800265e:	613b      	str	r3, [r7, #16]
	y/=(float)0xFFFFF;
 8002660:	4945      	ldr	r1, [pc, #276]	; (8002778 <LcdBarLine+0x13c>)
 8002662:	6938      	ldr	r0, [r7, #16]
 8002664:	f7fe fc64 	bl	8000f30 <__aeabi_fdiv>
 8002668:	4603      	mov	r3, r0
 800266a:	613b      	str	r3, [r7, #16]
	y*=(float)fill;// получаем коэфицент заполнения прогрессбара
 800266c:	6878      	ldr	r0, [r7, #4]
 800266e:	f7fe fb53 	bl	8000d18 <__aeabi_ui2f>
 8002672:	4603      	mov	r3, r0
 8002674:	4619      	mov	r1, r3
 8002676:	6938      	ldr	r0, [r7, #16]
 8002678:	f7fe fba6 	bl	8000dc8 <__aeabi_fmul>
 800267c:	4603      	mov	r3, r0
 800267e:	613b      	str	r3, [r7, #16]
	full_fill_position=floor(y/8);
 8002680:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002684:	6938      	ldr	r0, [r7, #16]
 8002686:	f7fe fc53 	bl	8000f30 <__aeabi_fdiv>
 800268a:	4603      	mov	r3, r0
 800268c:	4618      	mov	r0, r3
 800268e:	f7fd feed 	bl	800046c <__aeabi_f2d>
 8002692:	4602      	mov	r2, r0
 8002694:	460b      	mov	r3, r1
 8002696:	4610      	mov	r0, r2
 8002698:	4619      	mov	r1, r3
 800269a:	f008 f8c9 	bl	800a830 <floor>
 800269e:	4602      	mov	r2, r0
 80026a0:	460b      	mov	r3, r1
 80026a2:	4610      	mov	r0, r2
 80026a4:	4619      	mov	r1, r3
 80026a6:	f7fe fa11 	bl	8000acc <__aeabi_d2uiz>
 80026aa:	4603      	mov	r3, r0
 80026ac:	81fb      	strh	r3, [r7, #14]
	//need_to_be_filled=(LCD_CACHSIZE-1-found_free_position)*8 - ;
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 80026ae:	2364      	movs	r3, #100	; 0x64
 80026b0:	82fb      	strh	r3, [r7, #22]
 80026b2:	e057      	b.n	8002764 <LcdBarLine+0x128>
		if(y!=0)
 80026b4:	f04f 0100 	mov.w	r1, #0
 80026b8:	6938      	ldr	r0, [r7, #16]
 80026ba:	f7fe fd19 	bl	80010f0 <__aeabi_fcmpeq>
 80026be:	4603      	mov	r3, r0
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d14c      	bne.n	800275e <LcdBarLine+0x122>
		{
			if(full_fill_position>(i-LCD_X_RES))
 80026c4:	8afb      	ldrh	r3, [r7, #22]
 80026c6:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80026ca:	89fb      	ldrh	r3, [r7, #14]
 80026cc:	429a      	cmp	r2, r3
 80026ce:	dc08      	bgt.n	80026e2 <LcdBarLine+0xa6>
			{
				LcdCache[i]=LcdCache[i]^0xFF;
 80026d0:	8afb      	ldrh	r3, [r7, #22]
 80026d2:	4a2a      	ldr	r2, [pc, #168]	; (800277c <LcdBarLine+0x140>)
 80026d4:	5cd2      	ldrb	r2, [r2, r3]
 80026d6:	8afb      	ldrh	r3, [r7, #22]
 80026d8:	43d2      	mvns	r2, r2
 80026da:	b2d1      	uxtb	r1, r2
 80026dc:	4a27      	ldr	r2, [pc, #156]	; (800277c <LcdBarLine+0x140>)
 80026de:	54d1      	strb	r1, [r2, r3]
 80026e0:	e03d      	b.n	800275e <LcdBarLine+0x122>
			} else
			{
				y-=floor(y/8)*8;
 80026e2:	6938      	ldr	r0, [r7, #16]
 80026e4:	f7fd fec2 	bl	800046c <__aeabi_f2d>
 80026e8:	4604      	mov	r4, r0
 80026ea:	460d      	mov	r5, r1
 80026ec:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 80026f0:	6938      	ldr	r0, [r7, #16]
 80026f2:	f7fe fc1d 	bl	8000f30 <__aeabi_fdiv>
 80026f6:	4603      	mov	r3, r0
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7fd feb7 	bl	800046c <__aeabi_f2d>
 80026fe:	4602      	mov	r2, r0
 8002700:	460b      	mov	r3, r1
 8002702:	4610      	mov	r0, r2
 8002704:	4619      	mov	r1, r3
 8002706:	f008 f893 	bl	800a830 <floor>
 800270a:	f04f 0200 	mov.w	r2, #0
 800270e:	4b1c      	ldr	r3, [pc, #112]	; (8002780 <LcdBarLine+0x144>)
 8002710:	f7fd ff04 	bl	800051c <__aeabi_dmul>
 8002714:	4602      	mov	r2, r0
 8002716:	460b      	mov	r3, r1
 8002718:	4620      	mov	r0, r4
 800271a:	4629      	mov	r1, r5
 800271c:	f7fd fd46 	bl	80001ac <__aeabi_dsub>
 8002720:	4602      	mov	r2, r0
 8002722:	460b      	mov	r3, r1
 8002724:	4610      	mov	r0, r2
 8002726:	4619      	mov	r1, r3
 8002728:	f7fe f9f0 	bl	8000b0c <__aeabi_d2f>
 800272c:	4603      	mov	r3, r0
 800272e:	613b      	str	r3, [r7, #16]
				LcdCache[i]=LcdCache[i]^((1<<(uint16_t)y)-1);
 8002730:	8afb      	ldrh	r3, [r7, #22]
 8002732:	4a12      	ldr	r2, [pc, #72]	; (800277c <LcdBarLine+0x140>)
 8002734:	5cd3      	ldrb	r3, [r2, r3]
 8002736:	b25c      	sxtb	r4, r3
 8002738:	6938      	ldr	r0, [r7, #16]
 800273a:	f7fe fd0b 	bl	8001154 <__aeabi_f2uiz>
 800273e:	4603      	mov	r3, r0
 8002740:	b29b      	uxth	r3, r3
 8002742:	461a      	mov	r2, r3
 8002744:	2301      	movs	r3, #1
 8002746:	4093      	lsls	r3, r2
 8002748:	b2db      	uxtb	r3, r3
 800274a:	3b01      	subs	r3, #1
 800274c:	b2db      	uxtb	r3, r3
 800274e:	b25b      	sxtb	r3, r3
 8002750:	4063      	eors	r3, r4
 8002752:	b25a      	sxtb	r2, r3
 8002754:	8afb      	ldrh	r3, [r7, #22]
 8002756:	b2d1      	uxtb	r1, r2
 8002758:	4a08      	ldr	r2, [pc, #32]	; (800277c <LcdBarLine+0x140>)
 800275a:	54d1      	strb	r1, [r2, r3]
				break;
 800275c:	e007      	b.n	800276e <LcdBarLine+0x132>
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 800275e:	8afb      	ldrh	r3, [r7, #22]
 8002760:	3301      	adds	r3, #1
 8002762:	82fb      	strh	r3, [r7, #22]
 8002764:	8afb      	ldrh	r3, [r7, #22]
 8002766:	2bc7      	cmp	r3, #199	; 0xc7
 8002768:	d9a4      	bls.n	80026b4 <LcdBarLine+0x78>
 800276a:	e000      	b.n	800276e <LcdBarLine+0x132>
	if(fill>0xFFFFF)return;
 800276c:	bf00      	nop
			}
		}
	}

}
 800276e:	3718      	adds	r7, #24
 8002770:	46bd      	mov	sp, r7
 8002772:	bdb0      	pop	{r4, r5, r7, pc}
 8002774:	42c80000 	.word	0x42c80000
 8002778:	497ffff0 	.word	0x497ffff0
 800277c:	20000554 	.word	0x20000554
 8002780:	40200000 	.word	0x40200000

08002784 <output_state>:
//==============================================================================================


//==============================================================================================
void output_state(uint8_t type)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	b084      	sub	sp, #16
 8002788:	af00      	add	r7, sp, #0
 800278a:	4603      	mov	r3, r0
 800278c:	71fb      	strb	r3, [r7, #7]
	int relay_settling_time_ms=50;
 800278e:	2332      	movs	r3, #50	; 0x32
 8002790:	60fb      	str	r3, [r7, #12]
	switch(type)
 8002792:	79fb      	ldrb	r3, [r7, #7]
 8002794:	2b04      	cmp	r3, #4
 8002796:	f200 80f2 	bhi.w	800297e <output_state+0x1fa>
 800279a:	a201      	add	r2, pc, #4	; (adr r2, 80027a0 <output_state+0x1c>)
 800279c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027a0:	080027b5 	.word	0x080027b5
 80027a4:	080027ed 	.word	0x080027ed
 80027a8:	0800283d 	.word	0x0800283d
 80027ac:	0800289d 	.word	0x0800289d
 80027b0:	080028fd 	.word	0x080028fd
	{
	//----------------------------------------------------------//
	case Output_off_STATE:
		Relay_control(0,0); // set all coils off
 80027b4:	2100      	movs	r1, #0
 80027b6:	2000      	movs	r0, #0
 80027b8:	f7fe ff48 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027bc:	2100      	movs	r1, #0
 80027be:	2001      	movs	r0, #1
 80027c0:	f7fe ff44 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027c4:	2100      	movs	r1, #0
 80027c6:	2002      	movs	r0, #2
 80027c8:	f7fe ff40 	bl	800164c <Relay_control>
		Relay_control(3,0); // Output Enable
 80027cc:	2100      	movs	r1, #0
 80027ce:	2003      	movs	r0, #3
 80027d0:	f7fe ff3c 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	4618      	mov	r0, r3
 80027d8:	f002 fe6e 	bl	80054b8 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80027dc:	2100      	movs	r1, #0
 80027de:	2000      	movs	r0, #0
 80027e0:	f7fe ff34 	bl	800164c <Relay_control>
		Current_output_status=Output_off_STATE;
 80027e4:	4b68      	ldr	r3, [pc, #416]	; (8002988 <output_state+0x204>)
 80027e6:	2200      	movs	r2, #0
 80027e8:	701a      	strb	r2, [r3, #0]
		break;
 80027ea:	e0c8      	b.n	800297e <output_state+0x1fa>

	case Output_x1_STATE:
		Relay_control(0,0); // set all coils off
 80027ec:	2100      	movs	r1, #0
 80027ee:	2000      	movs	r0, #0
 80027f0:	f7fe ff2c 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027f4:	2100      	movs	r1, #0
 80027f6:	2001      	movs	r0, #1
 80027f8:	f7fe ff28 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027fc:	2100      	movs	r1, #0
 80027fe:	2002      	movs	r0, #2
 8002800:	f7fe ff24 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002804:	2101      	movs	r1, #1
 8002806:	2003      	movs	r0, #3
 8002808:	f7fe ff20 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4618      	mov	r0, r3
 8002810:	f002 fe52 	bl	80054b8 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002814:	2100      	movs	r1, #0
 8002816:	2000      	movs	r0, #0
 8002818:	f7fe ff18 	bl	800164c <Relay_control>
		Current_output_status=Output_x1_STATE;
 800281c:	4b5a      	ldr	r3, [pc, #360]	; (8002988 <output_state+0x204>)
 800281e:	2201      	movs	r2, #1
 8002820:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8002822:	4b5a      	ldr	r3, [pc, #360]	; (800298c <output_state+0x208>)
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	4a5a      	ldr	r2, [pc, #360]	; (8002990 <output_state+0x20c>)
 8002828:	6812      	ldr	r2, [r2, #0]
 800282a:	4611      	mov	r1, r2
 800282c:	4618      	mov	r0, r3
 800282e:	f7fe f9c1 	bl	8000bb4 <__aeabi_fsub>
 8002832:	4603      	mov	r3, r0
 8002834:	461a      	mov	r2, r3
 8002836:	4b57      	ldr	r3, [pc, #348]	; (8002994 <output_state+0x210>)
 8002838:	601a      	str	r2, [r3, #0]
		break;
 800283a:	e0a0      	b.n	800297e <output_state+0x1fa>

	case Output_x2_STATE:
		Relay_control(0,0); // set all coils off
 800283c:	2100      	movs	r1, #0
 800283e:	2000      	movs	r0, #0
 8002840:	f7fe ff04 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 8002844:	2101      	movs	r1, #1
 8002846:	2001      	movs	r0, #1
 8002848:	f7fe ff00 	bl	800164c <Relay_control>
		Relay_control(2,1); // x2/x4 mode
 800284c:	2101      	movs	r1, #1
 800284e:	2002      	movs	r0, #2
 8002850:	f7fe fefc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002854:	2101      	movs	r1, #1
 8002856:	2003      	movs	r0, #3
 8002858:	f7fe fef8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	4618      	mov	r0, r3
 8002860:	f002 fe2a 	bl	80054b8 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002864:	2100      	movs	r1, #0
 8002866:	2000      	movs	r0, #0
 8002868:	f7fe fef0 	bl	800164c <Relay_control>
		Current_output_status=Output_x2_STATE;
 800286c:	4b46      	ldr	r3, [pc, #280]	; (8002988 <output_state+0x204>)
 800286e:	2202      	movs	r2, #2
 8002870:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x2_coeff;
 8002872:	4b46      	ldr	r3, [pc, #280]	; (800298c <output_state+0x208>)
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4a46      	ldr	r2, [pc, #280]	; (8002990 <output_state+0x20c>)
 8002878:	6812      	ldr	r2, [r2, #0]
 800287a:	4611      	mov	r1, r2
 800287c:	4618      	mov	r0, r3
 800287e:	f7fe f999 	bl	8000bb4 <__aeabi_fsub>
 8002882:	4603      	mov	r3, r0
 8002884:	461a      	mov	r2, r3
 8002886:	4b44      	ldr	r3, [pc, #272]	; (8002998 <output_state+0x214>)
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	4619      	mov	r1, r3
 800288c:	4610      	mov	r0, r2
 800288e:	f7fe fa9b 	bl	8000dc8 <__aeabi_fmul>
 8002892:	4603      	mov	r3, r0
 8002894:	461a      	mov	r2, r3
 8002896:	4b3f      	ldr	r3, [pc, #252]	; (8002994 <output_state+0x210>)
 8002898:	601a      	str	r2, [r3, #0]
		break;
 800289a:	e070      	b.n	800297e <output_state+0x1fa>

	case Output_x4_STATE:
		Relay_control(0,0); // set all coils off
 800289c:	2100      	movs	r1, #0
 800289e:	2000      	movs	r0, #0
 80028a0:	f7fe fed4 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 80028a4:	2101      	movs	r1, #1
 80028a6:	2001      	movs	r0, #1
 80028a8:	f7fe fed0 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80028ac:	2100      	movs	r1, #0
 80028ae:	2002      	movs	r0, #2
 80028b0:	f7fe fecc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 80028b4:	2101      	movs	r1, #1
 80028b6:	2003      	movs	r0, #3
 80028b8:	f7fe fec8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	4618      	mov	r0, r3
 80028c0:	f002 fdfa 	bl	80054b8 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80028c4:	2100      	movs	r1, #0
 80028c6:	2000      	movs	r0, #0
 80028c8:	f7fe fec0 	bl	800164c <Relay_control>
		Current_output_status=Output_x4_STATE;
 80028cc:	4b2e      	ldr	r3, [pc, #184]	; (8002988 <output_state+0x204>)
 80028ce:	2203      	movs	r2, #3
 80028d0:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x4_coeff;
 80028d2:	4b2e      	ldr	r3, [pc, #184]	; (800298c <output_state+0x208>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a2e      	ldr	r2, [pc, #184]	; (8002990 <output_state+0x20c>)
 80028d8:	6812      	ldr	r2, [r2, #0]
 80028da:	4611      	mov	r1, r2
 80028dc:	4618      	mov	r0, r3
 80028de:	f7fe f969 	bl	8000bb4 <__aeabi_fsub>
 80028e2:	4603      	mov	r3, r0
 80028e4:	461a      	mov	r2, r3
 80028e6:	4b2d      	ldr	r3, [pc, #180]	; (800299c <output_state+0x218>)
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	4619      	mov	r1, r3
 80028ec:	4610      	mov	r0, r2
 80028ee:	f7fe fa6b 	bl	8000dc8 <__aeabi_fmul>
 80028f2:	4603      	mov	r3, r0
 80028f4:	461a      	mov	r2, r3
 80028f6:	4b27      	ldr	r3, [pc, #156]	; (8002994 <output_state+0x210>)
 80028f8:	601a      	str	r2, [r3, #0]
		break;
 80028fa:	e040      	b.n	800297e <output_state+0x1fa>

	case Output_auto_STATE:
		if((cal_DAC_up_voltage-cal_DAC_down_voltage)/DAC_target_speed > 600)
 80028fc:	4b23      	ldr	r3, [pc, #140]	; (800298c <output_state+0x208>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	4a23      	ldr	r2, [pc, #140]	; (8002990 <output_state+0x20c>)
 8002902:	6812      	ldr	r2, [r2, #0]
 8002904:	4611      	mov	r1, r2
 8002906:	4618      	mov	r0, r3
 8002908:	f7fe f954 	bl	8000bb4 <__aeabi_fsub>
 800290c:	4603      	mov	r3, r0
 800290e:	461a      	mov	r2, r3
 8002910:	4b23      	ldr	r3, [pc, #140]	; (80029a0 <output_state+0x21c>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	4619      	mov	r1, r3
 8002916:	4610      	mov	r0, r2
 8002918:	f7fe fb0a 	bl	8000f30 <__aeabi_fdiv>
 800291c:	4603      	mov	r3, r0
 800291e:	4921      	ldr	r1, [pc, #132]	; (80029a4 <output_state+0x220>)
 8002920:	4618      	mov	r0, r3
 8002922:	f7fe fc0d 	bl	8001140 <__aeabi_fcmpgt>
 8002926:	4603      	mov	r3, r0
 8002928:	2b00      	cmp	r3, #0
 800292a:	d003      	beq.n	8002934 <output_state+0x1b0>
		{
			output_state(Output_x1_STATE);
 800292c:	2001      	movs	r0, #1
 800292e:	f7ff ff29 	bl	8002784 <output_state>
				output_state(Output_x2_STATE);
			}
			else
				output_state(Output_x4_STATE);

		break;
 8002932:	e023      	b.n	800297c <output_state+0x1f8>
			if (((cal_DAC_up_voltage-cal_DAC_down_voltage)*2)/DAC_target_speed > 600)
 8002934:	4b15      	ldr	r3, [pc, #84]	; (800298c <output_state+0x208>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4a15      	ldr	r2, [pc, #84]	; (8002990 <output_state+0x20c>)
 800293a:	6812      	ldr	r2, [r2, #0]
 800293c:	4611      	mov	r1, r2
 800293e:	4618      	mov	r0, r3
 8002940:	f7fe f938 	bl	8000bb4 <__aeabi_fsub>
 8002944:	4603      	mov	r3, r0
 8002946:	4619      	mov	r1, r3
 8002948:	4618      	mov	r0, r3
 800294a:	f7fe f935 	bl	8000bb8 <__addsf3>
 800294e:	4603      	mov	r3, r0
 8002950:	461a      	mov	r2, r3
 8002952:	4b13      	ldr	r3, [pc, #76]	; (80029a0 <output_state+0x21c>)
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	4619      	mov	r1, r3
 8002958:	4610      	mov	r0, r2
 800295a:	f7fe fae9 	bl	8000f30 <__aeabi_fdiv>
 800295e:	4603      	mov	r3, r0
 8002960:	4910      	ldr	r1, [pc, #64]	; (80029a4 <output_state+0x220>)
 8002962:	4618      	mov	r0, r3
 8002964:	f7fe fbec 	bl	8001140 <__aeabi_fcmpgt>
 8002968:	4603      	mov	r3, r0
 800296a:	2b00      	cmp	r3, #0
 800296c:	d003      	beq.n	8002976 <output_state+0x1f2>
				output_state(Output_x2_STATE);
 800296e:	2002      	movs	r0, #2
 8002970:	f7ff ff08 	bl	8002784 <output_state>
		break;
 8002974:	e002      	b.n	800297c <output_state+0x1f8>
				output_state(Output_x4_STATE);
 8002976:	2003      	movs	r0, #3
 8002978:	f7ff ff04 	bl	8002784 <output_state>
		break;
 800297c:	bf00      	nop
	}
}
 800297e:	bf00      	nop
 8002980:	3710      	adds	r7, #16
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}
 8002986:	bf00      	nop
 8002988:	2000075c 	.word	0x2000075c
 800298c:	20000754 	.word	0x20000754
 8002990:	20000758 	.word	0x20000758
 8002994:	20000750 	.word	0x20000750
 8002998:	20000538 	.word	0x20000538
 800299c:	2000053c 	.word	0x2000053c
 80029a0:	20000744 	.word	0x20000744
 80029a4:	44160000 	.word	0x44160000

080029a8 <display_screen>:
//==============================================================================================


//==============================================================================================
void display_screen(uint8_t type)
{
 80029a8:	b590      	push	{r4, r7, lr}
 80029aa:	b087      	sub	sp, #28
 80029ac:	af02      	add	r7, sp, #8
 80029ae:	4603      	mov	r3, r0
 80029b0:	71fb      	strb	r3, [r7, #7]
	char sign;
	switch(type)
 80029b2:	79fb      	ldrb	r3, [r7, #7]
 80029b4:	2b05      	cmp	r3, #5
 80029b6:	f200 81d4 	bhi.w	8002d62 <display_screen+0x3ba>
 80029ba:	a201      	add	r2, pc, #4	; (adr r2, 80029c0 <display_screen+0x18>)
 80029bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80029c0:	08002bf9 	.word	0x08002bf9
 80029c4:	08002cfb 	.word	0x08002cfb
 80029c8:	08002d1d 	.word	0x08002d1d
 80029cc:	08002d3f 	.word	0x08002d3f
 80029d0:	080029d9 	.word	0x080029d9
 80029d4:	08002a83 	.word	0x08002a83
	{
	//----------------------------------------------------------//
	case AMP_SCREEN:
		if(DAC_code_direction==DIRECTION_UP_STATE)
 80029d8:	4b8e      	ldr	r3, [pc, #568]	; (8002c14 <display_screen+0x26c>)
 80029da:	781b      	ldrb	r3, [r3, #0]
 80029dc:	2b01      	cmp	r3, #1
 80029de:	d102      	bne.n	80029e6 <display_screen+0x3e>
		{
			sign='+';
 80029e0:	232b      	movs	r3, #43	; 0x2b
 80029e2:	73fb      	strb	r3, [r7, #15]
 80029e4:	e008      	b.n	80029f8 <display_screen+0x50>
		}
		else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 80029e6:	4b8b      	ldr	r3, [pc, #556]	; (8002c14 <display_screen+0x26c>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d102      	bne.n	80029f4 <display_screen+0x4c>
		{
			sign='-';
 80029ee:	232d      	movs	r3, #45	; 0x2d
 80029f0:	73fb      	strb	r3, [r7, #15]
 80029f2:	e001      	b.n	80029f8 <display_screen+0x50>
		} else
		{
			sign='*';
 80029f4:	232a      	movs	r3, #42	; 0x2a
 80029f6:	73fb      	strb	r3, [r7, #15]
		}

		sprintf(lcd_buf,"I %c%1.4EA",sign, amp_target_speed);
 80029f8:	7bfc      	ldrb	r4, [r7, #15]
 80029fa:	4b87      	ldr	r3, [pc, #540]	; (8002c18 <display_screen+0x270>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	4618      	mov	r0, r3
 8002a00:	f7fd fd34 	bl	800046c <__aeabi_f2d>
 8002a04:	4602      	mov	r2, r0
 8002a06:	460b      	mov	r3, r1
 8002a08:	e9cd 2300 	strd	r2, r3, [sp]
 8002a0c:	4622      	mov	r2, r4
 8002a0e:	4983      	ldr	r1, [pc, #524]	; (8002c1c <display_screen+0x274>)
 8002a10:	4883      	ldr	r0, [pc, #524]	; (8002c20 <display_screen+0x278>)
 8002a12:	f008 fe3f 	bl	800b694 <siprintf>
		LcdString(1, 1);
 8002a16:	2101      	movs	r1, #1
 8002a18:	2001      	movs	r0, #1
 8002a1a:	f7ff fc5d 	bl	80022d8 <LcdString>

		if(cfg.LDACMODE==1){
 8002a1e:	4b81      	ldr	r3, [pc, #516]	; (8002c24 <display_screen+0x27c>)
 8002a20:	789b      	ldrb	r3, [r3, #2]
 8002a22:	2b01      	cmp	r3, #1
 8002a24:	d117      	bne.n	8002a56 <display_screen+0xae>
			sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002a26:	4b80      	ldr	r3, [pc, #512]	; (8002c28 <display_screen+0x280>)
 8002a28:	781b      	ldrb	r3, [r3, #0]
 8002a2a:	461a      	mov	r2, r3
 8002a2c:	4b7f      	ldr	r3, [pc, #508]	; (8002c2c <display_screen+0x284>)
 8002a2e:	781b      	ldrb	r3, [r3, #0]
 8002a30:	4619      	mov	r1, r3
 8002a32:	4b7f      	ldr	r3, [pc, #508]	; (8002c30 <display_screen+0x288>)
 8002a34:	781b      	ldrb	r3, [r3, #0]
 8002a36:	9300      	str	r3, [sp, #0]
 8002a38:	460b      	mov	r3, r1
 8002a3a:	497e      	ldr	r1, [pc, #504]	; (8002c34 <display_screen+0x28c>)
 8002a3c:	4878      	ldr	r0, [pc, #480]	; (8002c20 <display_screen+0x278>)
 8002a3e:	f008 fe29 	bl	800b694 <siprintf>
			LcdString(1, 2);
 8002a42:	2102      	movs	r1, #2
 8002a44:	2001      	movs	r0, #1
 8002a46:	f7ff fc47 	bl	80022d8 <LcdString>
			LcdBarLine(DAC_code);
 8002a4a:	4b7b      	ldr	r3, [pc, #492]	; (8002c38 <display_screen+0x290>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	4618      	mov	r0, r3
 8002a50:	f7ff fdf4 	bl	800263c <LcdBarLine>
			{
				sprintf(lcd_buf,"READY TO GO");
				LcdString(1, 2);
			}
		}
		break;
 8002a54:	e185      	b.n	8002d62 <display_screen+0x3ba>
			if(Current_output_status==Output_off_STATE)
 8002a56:	4b79      	ldr	r3, [pc, #484]	; (8002c3c <display_screen+0x294>)
 8002a58:	781b      	ldrb	r3, [r3, #0]
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d108      	bne.n	8002a70 <display_screen+0xc8>
				sprintf(lcd_buf,"OUTPUT DISABLED");
 8002a5e:	4978      	ldr	r1, [pc, #480]	; (8002c40 <display_screen+0x298>)
 8002a60:	486f      	ldr	r0, [pc, #444]	; (8002c20 <display_screen+0x278>)
 8002a62:	f008 fe17 	bl	800b694 <siprintf>
				LcdString(1, 2);
 8002a66:	2102      	movs	r1, #2
 8002a68:	2001      	movs	r0, #1
 8002a6a:	f7ff fc35 	bl	80022d8 <LcdString>
		break;
 8002a6e:	e178      	b.n	8002d62 <display_screen+0x3ba>
				sprintf(lcd_buf,"READY TO GO");
 8002a70:	4974      	ldr	r1, [pc, #464]	; (8002c44 <display_screen+0x29c>)
 8002a72:	486b      	ldr	r0, [pc, #428]	; (8002c20 <display_screen+0x278>)
 8002a74:	f008 fe0e 	bl	800b694 <siprintf>
				LcdString(1, 2);
 8002a78:	2102      	movs	r1, #2
 8002a7a:	2001      	movs	r0, #1
 8002a7c:	f7ff fc2c 	bl	80022d8 <LcdString>
		break;
 8002a80:	e16f      	b.n	8002d62 <display_screen+0x3ba>

	//----------------------------------------------------------//
	case VOLT_SCREEN:

		if(Current_output_status==Output_x4_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x4_coeff);
 8002a82:	4b6e      	ldr	r3, [pc, #440]	; (8002c3c <display_screen+0x294>)
 8002a84:	781b      	ldrb	r3, [r3, #0]
 8002a86:	2b03      	cmp	r3, #3
 8002a88:	d125      	bne.n	8002ad6 <display_screen+0x12e>
 8002a8a:	4b6b      	ldr	r3, [pc, #428]	; (8002c38 <display_screen+0x290>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4618      	mov	r0, r3
 8002a90:	f7fe f942 	bl	8000d18 <__aeabi_ui2f>
 8002a94:	4602      	mov	r2, r0
 8002a96:	4b6c      	ldr	r3, [pc, #432]	; (8002c48 <display_screen+0x2a0>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	4619      	mov	r1, r3
 8002a9c:	4610      	mov	r0, r2
 8002a9e:	f7fe f993 	bl	8000dc8 <__aeabi_fmul>
 8002aa2:	4603      	mov	r3, r0
 8002aa4:	461a      	mov	r2, r3
 8002aa6:	4b69      	ldr	r3, [pc, #420]	; (8002c4c <display_screen+0x2a4>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	4619      	mov	r1, r3
 8002aac:	4610      	mov	r0, r2
 8002aae:	f7fe f883 	bl	8000bb8 <__addsf3>
 8002ab2:	4603      	mov	r3, r0
 8002ab4:	461a      	mov	r2, r3
 8002ab6:	4b66      	ldr	r3, [pc, #408]	; (8002c50 <display_screen+0x2a8>)
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	4619      	mov	r1, r3
 8002abc:	4610      	mov	r0, r2
 8002abe:	f7fe f983 	bl	8000dc8 <__aeabi_fmul>
 8002ac2:	4603      	mov	r3, r0
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	f7fd fcd1 	bl	800046c <__aeabi_f2d>
 8002aca:	4602      	mov	r2, r0
 8002acc:	460b      	mov	r3, r1
 8002ace:	4961      	ldr	r1, [pc, #388]	; (8002c54 <display_screen+0x2ac>)
 8002ad0:	4853      	ldr	r0, [pc, #332]	; (8002c20 <display_screen+0x278>)
 8002ad2:	f008 fddf 	bl	800b694 <siprintf>
		if(Current_output_status==Output_x2_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x2_coeff);
 8002ad6:	4b59      	ldr	r3, [pc, #356]	; (8002c3c <display_screen+0x294>)
 8002ad8:	781b      	ldrb	r3, [r3, #0]
 8002ada:	2b02      	cmp	r3, #2
 8002adc:	d125      	bne.n	8002b2a <display_screen+0x182>
 8002ade:	4b56      	ldr	r3, [pc, #344]	; (8002c38 <display_screen+0x290>)
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	f7fe f918 	bl	8000d18 <__aeabi_ui2f>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	4b57      	ldr	r3, [pc, #348]	; (8002c48 <display_screen+0x2a0>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	4619      	mov	r1, r3
 8002af0:	4610      	mov	r0, r2
 8002af2:	f7fe f969 	bl	8000dc8 <__aeabi_fmul>
 8002af6:	4603      	mov	r3, r0
 8002af8:	461a      	mov	r2, r3
 8002afa:	4b54      	ldr	r3, [pc, #336]	; (8002c4c <display_screen+0x2a4>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4619      	mov	r1, r3
 8002b00:	4610      	mov	r0, r2
 8002b02:	f7fe f859 	bl	8000bb8 <__addsf3>
 8002b06:	4603      	mov	r3, r0
 8002b08:	461a      	mov	r2, r3
 8002b0a:	4b53      	ldr	r3, [pc, #332]	; (8002c58 <display_screen+0x2b0>)
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	4619      	mov	r1, r3
 8002b10:	4610      	mov	r0, r2
 8002b12:	f7fe f959 	bl	8000dc8 <__aeabi_fmul>
 8002b16:	4603      	mov	r3, r0
 8002b18:	4618      	mov	r0, r3
 8002b1a:	f7fd fca7 	bl	800046c <__aeabi_f2d>
 8002b1e:	4602      	mov	r2, r0
 8002b20:	460b      	mov	r3, r1
 8002b22:	494c      	ldr	r1, [pc, #304]	; (8002c54 <display_screen+0x2ac>)
 8002b24:	483e      	ldr	r0, [pc, #248]	; (8002c20 <display_screen+0x278>)
 8002b26:	f008 fdb5 	bl	800b694 <siprintf>
		if(Current_output_status==Output_x1_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution)));
 8002b2a:	4b44      	ldr	r3, [pc, #272]	; (8002c3c <display_screen+0x294>)
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	2b01      	cmp	r3, #1
 8002b30:	d11d      	bne.n	8002b6e <display_screen+0x1c6>
 8002b32:	4b41      	ldr	r3, [pc, #260]	; (8002c38 <display_screen+0x290>)
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	4618      	mov	r0, r3
 8002b38:	f7fe f8ee 	bl	8000d18 <__aeabi_ui2f>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	4b42      	ldr	r3, [pc, #264]	; (8002c48 <display_screen+0x2a0>)
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	4619      	mov	r1, r3
 8002b44:	4610      	mov	r0, r2
 8002b46:	f7fe f93f 	bl	8000dc8 <__aeabi_fmul>
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	461a      	mov	r2, r3
 8002b4e:	4b3f      	ldr	r3, [pc, #252]	; (8002c4c <display_screen+0x2a4>)
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	4619      	mov	r1, r3
 8002b54:	4610      	mov	r0, r2
 8002b56:	f7fe f82f 	bl	8000bb8 <__addsf3>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	f7fd fc85 	bl	800046c <__aeabi_f2d>
 8002b62:	4602      	mov	r2, r0
 8002b64:	460b      	mov	r3, r1
 8002b66:	493b      	ldr	r1, [pc, #236]	; (8002c54 <display_screen+0x2ac>)
 8002b68:	482d      	ldr	r0, [pc, #180]	; (8002c20 <display_screen+0x278>)
 8002b6a:	f008 fd93 	bl	800b694 <siprintf>
		if(Current_output_status==Output_off_STATE)sprintf(lcd_buf,"Vout %2.5fV",Voltage);
 8002b6e:	4b33      	ldr	r3, [pc, #204]	; (8002c3c <display_screen+0x294>)
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d10a      	bne.n	8002b8c <display_screen+0x1e4>
 8002b76:	4b39      	ldr	r3, [pc, #228]	; (8002c5c <display_screen+0x2b4>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	f7fd fc76 	bl	800046c <__aeabi_f2d>
 8002b80:	4602      	mov	r2, r0
 8002b82:	460b      	mov	r3, r1
 8002b84:	4933      	ldr	r1, [pc, #204]	; (8002c54 <display_screen+0x2ac>)
 8002b86:	4826      	ldr	r0, [pc, #152]	; (8002c20 <display_screen+0x278>)
 8002b88:	f008 fd84 	bl	800b694 <siprintf>
		LcdString(1, 1);
 8002b8c:	2101      	movs	r1, #1
 8002b8e:	2001      	movs	r0, #1
 8002b90:	f7ff fba2 	bl	80022d8 <LcdString>
		if(Current_output_status==Output_off_STATE)
 8002b94:	4b29      	ldr	r3, [pc, #164]	; (8002c3c <display_screen+0x294>)
 8002b96:	781b      	ldrb	r3, [r3, #0]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d107      	bne.n	8002bac <display_screen+0x204>
		{
			sprintf(lcd_buf,"OUTPUT DISABLED");
 8002b9c:	4928      	ldr	r1, [pc, #160]	; (8002c40 <display_screen+0x298>)
 8002b9e:	4820      	ldr	r0, [pc, #128]	; (8002c20 <display_screen+0x278>)
 8002ba0:	f008 fd78 	bl	800b694 <siprintf>
			LcdString(1, 2);
 8002ba4:	2102      	movs	r1, #2
 8002ba6:	2001      	movs	r0, #1
 8002ba8:	f7ff fb96 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x1_STATE)
 8002bac:	4b23      	ldr	r3, [pc, #140]	; (8002c3c <display_screen+0x294>)
 8002bae:	781b      	ldrb	r3, [r3, #0]
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d107      	bne.n	8002bc4 <display_screen+0x21c>
		{
			sprintf(lcd_buf,"X1 MODE");
 8002bb4:	492a      	ldr	r1, [pc, #168]	; (8002c60 <display_screen+0x2b8>)
 8002bb6:	481a      	ldr	r0, [pc, #104]	; (8002c20 <display_screen+0x278>)
 8002bb8:	f008 fd6c 	bl	800b694 <siprintf>
			LcdString(1, 2);
 8002bbc:	2102      	movs	r1, #2
 8002bbe:	2001      	movs	r0, #1
 8002bc0:	f7ff fb8a 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x2_STATE)
 8002bc4:	4b1d      	ldr	r3, [pc, #116]	; (8002c3c <display_screen+0x294>)
 8002bc6:	781b      	ldrb	r3, [r3, #0]
 8002bc8:	2b02      	cmp	r3, #2
 8002bca:	d107      	bne.n	8002bdc <display_screen+0x234>
		{
			sprintf(lcd_buf,"X2 MODE");
 8002bcc:	4925      	ldr	r1, [pc, #148]	; (8002c64 <display_screen+0x2bc>)
 8002bce:	4814      	ldr	r0, [pc, #80]	; (8002c20 <display_screen+0x278>)
 8002bd0:	f008 fd60 	bl	800b694 <siprintf>
			LcdString(1, 2);
 8002bd4:	2102      	movs	r1, #2
 8002bd6:	2001      	movs	r0, #1
 8002bd8:	f7ff fb7e 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x4_STATE)
 8002bdc:	4b17      	ldr	r3, [pc, #92]	; (8002c3c <display_screen+0x294>)
 8002bde:	781b      	ldrb	r3, [r3, #0]
 8002be0:	2b03      	cmp	r3, #3
 8002be2:	f040 80bd 	bne.w	8002d60 <display_screen+0x3b8>
		{
			sprintf(lcd_buf,"X4 MODE");
 8002be6:	4920      	ldr	r1, [pc, #128]	; (8002c68 <display_screen+0x2c0>)
 8002be8:	480d      	ldr	r0, [pc, #52]	; (8002c20 <display_screen+0x278>)
 8002bea:	f008 fd53 	bl	800b694 <siprintf>
			LcdString(1, 2);
 8002bee:	2102      	movs	r1, #2
 8002bf0:	2001      	movs	r0, #1
 8002bf2:	f7ff fb71 	bl	80022d8 <LcdString>
		}
		break;
 8002bf6:	e0b3      	b.n	8002d60 <display_screen+0x3b8>
	//----------------------------------------------------------//
		case dU_dt_SCREEN:
			if(DAC_code_direction==DIRECTION_UP_STATE)
 8002bf8:	4b06      	ldr	r3, [pc, #24]	; (8002c14 <display_screen+0x26c>)
 8002bfa:	781b      	ldrb	r3, [r3, #0]
 8002bfc:	2b01      	cmp	r3, #1
 8002bfe:	d102      	bne.n	8002c06 <display_screen+0x25e>
			{
				sign='+';
 8002c00:	232b      	movs	r3, #43	; 0x2b
 8002c02:	73fb      	strb	r3, [r7, #15]
 8002c04:	e034      	b.n	8002c70 <display_screen+0x2c8>
			}
			else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002c06:	4b03      	ldr	r3, [pc, #12]	; (8002c14 <display_screen+0x26c>)
 8002c08:	781b      	ldrb	r3, [r3, #0]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d12e      	bne.n	8002c6c <display_screen+0x2c4>
			{
				sign='-';
 8002c0e:	232d      	movs	r3, #45	; 0x2d
 8002c10:	73fb      	strb	r3, [r7, #15]
 8002c12:	e02d      	b.n	8002c70 <display_screen+0x2c8>
 8002c14:	20000764 	.word	0x20000764
 8002c18:	2000000c 	.word	0x2000000c
 8002c1c:	0800fa80 	.word	0x0800fa80
 8002c20:	20000540 	.word	0x20000540
 8002c24:	20000730 	.word	0x20000730
 8002c28:	20000700 	.word	0x20000700
 8002c2c:	20000701 	.word	0x20000701
 8002c30:	20000702 	.word	0x20000702
 8002c34:	0800fa8c 	.word	0x0800fa8c
 8002c38:	20000760 	.word	0x20000760
 8002c3c:	2000075c 	.word	0x2000075c
 8002c40:	0800faa4 	.word	0x0800faa4
 8002c44:	0800fab4 	.word	0x0800fab4
 8002c48:	20000648 	.word	0x20000648
 8002c4c:	20000758 	.word	0x20000758
 8002c50:	2000053c 	.word	0x2000053c
 8002c54:	0800fac0 	.word	0x0800fac0
 8002c58:	20000538 	.word	0x20000538
 8002c5c:	2000074c 	.word	0x2000074c
 8002c60:	0800facc 	.word	0x0800facc
 8002c64:	0800fad4 	.word	0x0800fad4
 8002c68:	0800fadc 	.word	0x0800fadc
			} else
			{
				sign='*';
 8002c6c:	232a      	movs	r3, #42	; 0x2a
 8002c6e:	73fb      	strb	r3, [r7, #15]
			}

			sprintf(lcd_buf,"' %c%1.4EV/s",sign, ramp_target_speed);
 8002c70:	7bfc      	ldrb	r4, [r7, #15]
 8002c72:	4b3e      	ldr	r3, [pc, #248]	; (8002d6c <display_screen+0x3c4>)
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	4618      	mov	r0, r3
 8002c78:	f7fd fbf8 	bl	800046c <__aeabi_f2d>
 8002c7c:	4602      	mov	r2, r0
 8002c7e:	460b      	mov	r3, r1
 8002c80:	e9cd 2300 	strd	r2, r3, [sp]
 8002c84:	4622      	mov	r2, r4
 8002c86:	493a      	ldr	r1, [pc, #232]	; (8002d70 <display_screen+0x3c8>)
 8002c88:	483a      	ldr	r0, [pc, #232]	; (8002d74 <display_screen+0x3cc>)
 8002c8a:	f008 fd03 	bl	800b694 <siprintf>
			LcdString(1, 1);
 8002c8e:	2101      	movs	r1, #1
 8002c90:	2001      	movs	r0, #1
 8002c92:	f7ff fb21 	bl	80022d8 <LcdString>

			if(cfg.LDACMODE==1){
 8002c96:	4b38      	ldr	r3, [pc, #224]	; (8002d78 <display_screen+0x3d0>)
 8002c98:	789b      	ldrb	r3, [r3, #2]
 8002c9a:	2b01      	cmp	r3, #1
 8002c9c:	d117      	bne.n	8002cce <display_screen+0x326>
				sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002c9e:	4b37      	ldr	r3, [pc, #220]	; (8002d7c <display_screen+0x3d4>)
 8002ca0:	781b      	ldrb	r3, [r3, #0]
 8002ca2:	461a      	mov	r2, r3
 8002ca4:	4b36      	ldr	r3, [pc, #216]	; (8002d80 <display_screen+0x3d8>)
 8002ca6:	781b      	ldrb	r3, [r3, #0]
 8002ca8:	4619      	mov	r1, r3
 8002caa:	4b36      	ldr	r3, [pc, #216]	; (8002d84 <display_screen+0x3dc>)
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	9300      	str	r3, [sp, #0]
 8002cb0:	460b      	mov	r3, r1
 8002cb2:	4935      	ldr	r1, [pc, #212]	; (8002d88 <display_screen+0x3e0>)
 8002cb4:	482f      	ldr	r0, [pc, #188]	; (8002d74 <display_screen+0x3cc>)
 8002cb6:	f008 fced 	bl	800b694 <siprintf>
				LcdString(1, 2);
 8002cba:	2102      	movs	r1, #2
 8002cbc:	2001      	movs	r0, #1
 8002cbe:	f7ff fb0b 	bl	80022d8 <LcdString>
				LcdBarLine(DAC_code);
 8002cc2:	4b32      	ldr	r3, [pc, #200]	; (8002d8c <display_screen+0x3e4>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	f7ff fcb8 	bl	800263c <LcdBarLine>
				{
					sprintf(lcd_buf,"READY TO GO");
					LcdString(1, 2);
				}
			}
			break;
 8002ccc:	e049      	b.n	8002d62 <display_screen+0x3ba>
				if(Current_output_status==Output_off_STATE)
 8002cce:	4b30      	ldr	r3, [pc, #192]	; (8002d90 <display_screen+0x3e8>)
 8002cd0:	781b      	ldrb	r3, [r3, #0]
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d108      	bne.n	8002ce8 <display_screen+0x340>
					sprintf(lcd_buf,"OUTPUT DISABLED");
 8002cd6:	492f      	ldr	r1, [pc, #188]	; (8002d94 <display_screen+0x3ec>)
 8002cd8:	4826      	ldr	r0, [pc, #152]	; (8002d74 <display_screen+0x3cc>)
 8002cda:	f008 fcdb 	bl	800b694 <siprintf>
					LcdString(1, 2);
 8002cde:	2102      	movs	r1, #2
 8002ce0:	2001      	movs	r0, #1
 8002ce2:	f7ff faf9 	bl	80022d8 <LcdString>
			break;
 8002ce6:	e03c      	b.n	8002d62 <display_screen+0x3ba>
					sprintf(lcd_buf,"READY TO GO");
 8002ce8:	492b      	ldr	r1, [pc, #172]	; (8002d98 <display_screen+0x3f0>)
 8002cea:	4822      	ldr	r0, [pc, #136]	; (8002d74 <display_screen+0x3cc>)
 8002cec:	f008 fcd2 	bl	800b694 <siprintf>
					LcdString(1, 2);
 8002cf0:	2102      	movs	r1, #2
 8002cf2:	2001      	movs	r0, #1
 8002cf4:	f7ff faf0 	bl	80022d8 <LcdString>
			break;
 8002cf8:	e033      	b.n	8002d62 <display_screen+0x3ba>
			//----------------------------------------------------------//
	case Hello_SCREEN:
		sprintf(lcd_buf,"Hello AmpNuts!");
 8002cfa:	4928      	ldr	r1, [pc, #160]	; (8002d9c <display_screen+0x3f4>)
 8002cfc:	481d      	ldr	r0, [pc, #116]	; (8002d74 <display_screen+0x3cc>)
 8002cfe:	f008 fcc9 	bl	800b694 <siprintf>
		LcdString(1, 1);
 8002d02:	2101      	movs	r1, #1
 8002d04:	2001      	movs	r0, #1
 8002d06:	f7ff fae7 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"I`m Micron-GLIN");
 8002d0a:	4925      	ldr	r1, [pc, #148]	; (8002da0 <display_screen+0x3f8>)
 8002d0c:	4819      	ldr	r0, [pc, #100]	; (8002d74 <display_screen+0x3cc>)
 8002d0e:	f008 fcc1 	bl	800b694 <siprintf>
		LcdString(1, 2);
 8002d12:	2102      	movs	r1, #2
 8002d14:	2001      	movs	r0, #1
 8002d16:	f7ff fadf 	bl	80022d8 <LcdString>
		break;
 8002d1a:	e022      	b.n	8002d62 <display_screen+0x3ba>
		//----------------------------------------------------------//
	case Warm_up_SCREEN:
		sprintf(lcd_buf,"need time to");
 8002d1c:	4921      	ldr	r1, [pc, #132]	; (8002da4 <display_screen+0x3fc>)
 8002d1e:	4815      	ldr	r0, [pc, #84]	; (8002d74 <display_screen+0x3cc>)
 8002d20:	f008 fcb8 	bl	800b694 <siprintf>
		LcdString(1, 1);
 8002d24:	2101      	movs	r1, #1
 8002d26:	2001      	movs	r0, #1
 8002d28:	f7ff fad6 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"warm-up my refs");
 8002d2c:	491e      	ldr	r1, [pc, #120]	; (8002da8 <display_screen+0x400>)
 8002d2e:	4811      	ldr	r0, [pc, #68]	; (8002d74 <display_screen+0x3cc>)
 8002d30:	f008 fcb0 	bl	800b694 <siprintf>
		LcdString(1, 2);
 8002d34:	2102      	movs	r1, #2
 8002d36:	2001      	movs	r0, #1
 8002d38:	f7ff face 	bl	80022d8 <LcdString>
		break;
 8002d3c:	e011      	b.n	8002d62 <display_screen+0x3ba>
		//----------------------------------------------------------//
	case Ready_SCREEN:
		sprintf(lcd_buf,"I`m ready...");
 8002d3e:	491b      	ldr	r1, [pc, #108]	; (8002dac <display_screen+0x404>)
 8002d40:	480c      	ldr	r0, [pc, #48]	; (8002d74 <display_screen+0x3cc>)
 8002d42:	f008 fca7 	bl	800b694 <siprintf>
		LcdString(1, 1);
 8002d46:	2101      	movs	r1, #1
 8002d48:	2001      	movs	r0, #1
 8002d4a:	f7ff fac5 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"      Let`s start!");
 8002d4e:	4918      	ldr	r1, [pc, #96]	; (8002db0 <display_screen+0x408>)
 8002d50:	4808      	ldr	r0, [pc, #32]	; (8002d74 <display_screen+0x3cc>)
 8002d52:	f008 fc9f 	bl	800b694 <siprintf>
		LcdString(1, 2);
 8002d56:	2102      	movs	r1, #2
 8002d58:	2001      	movs	r0, #1
 8002d5a:	f7ff fabd 	bl	80022d8 <LcdString>
		break;
 8002d5e:	e000      	b.n	8002d62 <display_screen+0x3ba>
		break;
 8002d60:	bf00      	nop
	}

}
 8002d62:	bf00      	nop
 8002d64:	3714      	adds	r7, #20
 8002d66:	46bd      	mov	sp, r7
 8002d68:	bd90      	pop	{r4, r7, pc}
 8002d6a:	bf00      	nop
 8002d6c:	20000010 	.word	0x20000010
 8002d70:	0800fae4 	.word	0x0800fae4
 8002d74:	20000540 	.word	0x20000540
 8002d78:	20000730 	.word	0x20000730
 8002d7c:	20000700 	.word	0x20000700
 8002d80:	20000701 	.word	0x20000701
 8002d84:	20000702 	.word	0x20000702
 8002d88:	0800fa8c 	.word	0x0800fa8c
 8002d8c:	20000760 	.word	0x20000760
 8002d90:	2000075c 	.word	0x2000075c
 8002d94:	0800faa4 	.word	0x0800faa4
 8002d98:	0800fab4 	.word	0x0800fab4
 8002d9c:	0800faf4 	.word	0x0800faf4
 8002da0:	0800fb04 	.word	0x0800fb04
 8002da4:	0800fb14 	.word	0x0800fb14
 8002da8:	0800fb24 	.word	0x0800fb24
 8002dac:	0800fb34 	.word	0x0800fb34
 8002db0:	0800fb44 	.word	0x0800fb44

08002db4 <send_answer_to_CDC>:
//==============================================================================================


//==============================================================================================
void send_answer_to_CDC(uint8_t type)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b084      	sub	sp, #16
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	4603      	mov	r3, r0
 8002dbc:	71fb      	strb	r3, [r7, #7]
	uint8_t cdc_counter=0;
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	73fb      	strb	r3, [r7, #15]

	switch(type)
 8002dc2:	79fb      	ldrb	r3, [r7, #7]
 8002dc4:	2b0f      	cmp	r3, #15
 8002dc6:	f200 8093 	bhi.w	8002ef0 <send_answer_to_CDC+0x13c>
 8002dca:	a201      	add	r2, pc, #4	; (adr r2, 8002dd0 <send_answer_to_CDC+0x1c>)
 8002dcc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002dd0:	08002e17 	.word	0x08002e17
 8002dd4:	08002e35 	.word	0x08002e35
 8002dd8:	08002e51 	.word	0x08002e51
 8002ddc:	08002e6d 	.word	0x08002e6d
 8002de0:	08002e89 	.word	0x08002e89
 8002de4:	08002ea5 	.word	0x08002ea5
 8002de8:	08002ef1 	.word	0x08002ef1
 8002dec:	08002ef1 	.word	0x08002ef1
 8002df0:	08002ef1 	.word	0x08002ef1
 8002df4:	08002ef1 	.word	0x08002ef1
 8002df8:	08002ef1 	.word	0x08002ef1
 8002dfc:	08002ef1 	.word	0x08002ef1
 8002e00:	08002ef1 	.word	0x08002ef1
 8002e04:	08002ef1 	.word	0x08002ef1
 8002e08:	08002ef1 	.word	0x08002ef1
 8002e0c:	08002ec1 	.word	0x08002ec1
	{
	case ERROR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Error1, strlen((const char *)Error1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e10:	7bfb      	ldrb	r3, [r7, #15]
 8002e12:	3301      	adds	r3, #1
 8002e14:	73fb      	strb	r3, [r7, #15]
 8002e16:	f240 41eb 	movw	r1, #1259	; 0x4eb
 8002e1a:	4837      	ldr	r0, [pc, #220]	; (8002ef8 <send_answer_to_CDC+0x144>)
 8002e1c:	f007 fadc 	bl	800a3d8 <CDC_Transmit_FS>
 8002e20:	4603      	mov	r3, r0
 8002e22:	2b00      	cmp	r3, #0
 8002e24:	d057      	beq.n	8002ed6 <send_answer_to_CDC+0x122>
 8002e26:	7bfb      	ldrb	r3, [r7, #15]
 8002e28:	2bff      	cmp	r3, #255	; 0xff
 8002e2a:	d1f1      	bne.n	8002e10 <send_answer_to_CDC+0x5c>
		break;
 8002e2c:	e053      	b.n	8002ed6 <send_answer_to_CDC+0x122>
	case ERROR_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)Error2, strlen((const char *)Error2))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e2e:	7bfb      	ldrb	r3, [r7, #15]
 8002e30:	3301      	adds	r3, #1
 8002e32:	73fb      	strb	r3, [r7, #15]
 8002e34:	2129      	movs	r1, #41	; 0x29
 8002e36:	4831      	ldr	r0, [pc, #196]	; (8002efc <send_answer_to_CDC+0x148>)
 8002e38:	f007 face 	bl	800a3d8 <CDC_Transmit_FS>
 8002e3c:	4603      	mov	r3, r0
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d04b      	beq.n	8002eda <send_answer_to_CDC+0x126>
 8002e42:	7bfb      	ldrb	r3, [r7, #15]
 8002e44:	2bff      	cmp	r3, #255	; 0xff
 8002e46:	d1f2      	bne.n	8002e2e <send_answer_to_CDC+0x7a>
		break;
 8002e48:	e047      	b.n	8002eda <send_answer_to_CDC+0x126>
	case OK_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)OK, strlen((const char *)OK))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e4a:	7bfb      	ldrb	r3, [r7, #15]
 8002e4c:	3301      	adds	r3, #1
 8002e4e:	73fb      	strb	r3, [r7, #15]
 8002e50:	2104      	movs	r1, #4
 8002e52:	482b      	ldr	r0, [pc, #172]	; (8002f00 <send_answer_to_CDC+0x14c>)
 8002e54:	f007 fac0 	bl	800a3d8 <CDC_Transmit_FS>
 8002e58:	4603      	mov	r3, r0
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d03f      	beq.n	8002ede <send_answer_to_CDC+0x12a>
 8002e5e:	7bfb      	ldrb	r3, [r7, #15]
 8002e60:	2bff      	cmp	r3, #255	; 0xff
 8002e62:	d1f2      	bne.n	8002e4a <send_answer_to_CDC+0x96>
		break;
 8002e64:	e03b      	b.n	8002ede <send_answer_to_CDC+0x12a>
	case OK_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)OK_Enter, strlen((const char *)OK_Enter))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e66:	7bfb      	ldrb	r3, [r7, #15]
 8002e68:	3301      	adds	r3, #1
 8002e6a:	73fb      	strb	r3, [r7, #15]
 8002e6c:	2117      	movs	r1, #23
 8002e6e:	4825      	ldr	r0, [pc, #148]	; (8002f04 <send_answer_to_CDC+0x150>)
 8002e70:	f007 fab2 	bl	800a3d8 <CDC_Transmit_FS>
 8002e74:	4603      	mov	r3, r0
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d033      	beq.n	8002ee2 <send_answer_to_CDC+0x12e>
 8002e7a:	7bfb      	ldrb	r3, [r7, #15]
 8002e7c:	2bff      	cmp	r3, #255	; 0xff
 8002e7e:	d1f2      	bne.n	8002e66 <send_answer_to_CDC+0xb2>
		break;
 8002e80:	e02f      	b.n	8002ee2 <send_answer_to_CDC+0x12e>
	case CLEAR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)clear, strlen((const char *)clear))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e82:	7bfb      	ldrb	r3, [r7, #15]
 8002e84:	3301      	adds	r3, #1
 8002e86:	73fb      	strb	r3, [r7, #15]
 8002e88:	2105      	movs	r1, #5
 8002e8a:	481f      	ldr	r0, [pc, #124]	; (8002f08 <send_answer_to_CDC+0x154>)
 8002e8c:	f007 faa4 	bl	800a3d8 <CDC_Transmit_FS>
 8002e90:	4603      	mov	r3, r0
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d027      	beq.n	8002ee6 <send_answer_to_CDC+0x132>
 8002e96:	7bfb      	ldrb	r3, [r7, #15]
 8002e98:	2bff      	cmp	r3, #255	; 0xff
 8002e9a:	d1f2      	bne.n	8002e82 <send_answer_to_CDC+0xce>
		break;
 8002e9c:	e023      	b.n	8002ee6 <send_answer_to_CDC+0x132>
	case DONE_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Done, strlen((const char *)Done))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e9e:	7bfb      	ldrb	r3, [r7, #15]
 8002ea0:	3301      	adds	r3, #1
 8002ea2:	73fb      	strb	r3, [r7, #15]
 8002ea4:	2116      	movs	r1, #22
 8002ea6:	4819      	ldr	r0, [pc, #100]	; (8002f0c <send_answer_to_CDC+0x158>)
 8002ea8:	f007 fa96 	bl	800a3d8 <CDC_Transmit_FS>
 8002eac:	4603      	mov	r3, r0
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d01b      	beq.n	8002eea <send_answer_to_CDC+0x136>
 8002eb2:	7bfb      	ldrb	r3, [r7, #15]
 8002eb4:	2bff      	cmp	r3, #255	; 0xff
 8002eb6:	d1f2      	bne.n	8002e9e <send_answer_to_CDC+0xea>
		break;
 8002eb8:	e017      	b.n	8002eea <send_answer_to_CDC+0x136>
	case RUN_CAL_TYPE_TEMP:
		while((CDC_Transmit_FS((uint8_t *)run_cal, strlen((const char *)run_cal))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002eba:	7bfb      	ldrb	r3, [r7, #15]
 8002ebc:	3301      	adds	r3, #1
 8002ebe:	73fb      	strb	r3, [r7, #15]
 8002ec0:	211b      	movs	r1, #27
 8002ec2:	4813      	ldr	r0, [pc, #76]	; (8002f10 <send_answer_to_CDC+0x15c>)
 8002ec4:	f007 fa88 	bl	800a3d8 <CDC_Transmit_FS>
 8002ec8:	4603      	mov	r3, r0
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d00f      	beq.n	8002eee <send_answer_to_CDC+0x13a>
 8002ece:	7bfb      	ldrb	r3, [r7, #15]
 8002ed0:	2bff      	cmp	r3, #255	; 0xff
 8002ed2:	d1f2      	bne.n	8002eba <send_answer_to_CDC+0x106>
		break;
 8002ed4:	e00b      	b.n	8002eee <send_answer_to_CDC+0x13a>
		break;
 8002ed6:	bf00      	nop
 8002ed8:	e00a      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002eda:	bf00      	nop
 8002edc:	e008      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002ede:	bf00      	nop
 8002ee0:	e006      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002ee2:	bf00      	nop
 8002ee4:	e004      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002ee6:	bf00      	nop
 8002ee8:	e002      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002eea:	bf00      	nop
 8002eec:	e000      	b.n	8002ef0 <send_answer_to_CDC+0x13c>
		break;
 8002eee:	bf00      	nop
	}
}
 8002ef0:	bf00      	nop
 8002ef2:	3710      	adds	r7, #16
 8002ef4:	46bd      	mov	sp, r7
 8002ef6:	bd80      	pop	{r7, pc}
 8002ef8:	080101a0 	.word	0x080101a0
 8002efc:	080106a4 	.word	0x080106a4
 8002f00:	08010174 	.word	0x08010174
 8002f04:	0801068c 	.word	0x0801068c
 8002f08:	08010198 	.word	0x08010198
 8002f0c:	080106d0 	.word	0x080106d0
 8002f10:	0801017c 	.word	0x0801017c

08002f14 <cmd_SWEEP_START>:



//==============================================================================================
void cmd_SWEEP_START()
{
 8002f14:	b580      	push	{r7, lr}
 8002f16:	af00      	add	r7, sp, #0
	output_state(Output_auto_STATE);
 8002f18:	2004      	movs	r0, #4
 8002f1a:	f7ff fc33 	bl	8002784 <output_state>
	DDS_Calculation();
 8002f1e:	f7fe fe1b 	bl	8001b58 <DDS_Calculation>
	DAC_TEMP_CAL();
 8002f22:	f7fe fda9 	bl	8001a78 <DAC_TEMP_CAL>
	CPLD_control(CPLD_ON_STATE); // Enable LDAC signal
 8002f26:	2001      	movs	r0, #1
 8002f28:	f7fe fc4a 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f2c:	f7fe fd1c 	bl	8001968 <DAC_SendInit>
}
 8002f30:	bf00      	nop
 8002f32:	bd80      	pop	{r7, pc}

08002f34 <cmd_SWEEP_STOP>:
//==============================================================================================


//==============================================================================================
void cmd_SWEEP_STOP()
{
 8002f34:	b580      	push	{r7, lr}
 8002f36:	af00      	add	r7, sp, #0
	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002f38:	2000      	movs	r0, #0
 8002f3a:	f7fe fc41 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f3e:	f7fe fd13 	bl	8001968 <DAC_SendInit>
}
 8002f42:	bf00      	nop
 8002f44:	bd80      	pop	{r7, pc}
	...

08002f48 <cmd_DAC_SET>:
//==============================================================================================


//==============================================================================================
void cmd_DAC_SET(uint32_t code)
{
 8002f48:	b580      	push	{r7, lr}
 8002f4a:	b082      	sub	sp, #8
 8002f4c:	af00      	add	r7, sp, #0
 8002f4e:	6078      	str	r0, [r7, #4]
	if (code>0xFFFFF)return;
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002f56:	d21f      	bcs.n	8002f98 <cmd_DAC_SET+0x50>

	if(DAC_code_direction!=DIRECTION_CYCLE_STATE)
 8002f58:	4b11      	ldr	r3, [pc, #68]	; (8002fa0 <cmd_DAC_SET+0x58>)
 8002f5a:	781b      	ldrb	r3, [r3, #0]
 8002f5c:	2b02      	cmp	r3, #2
 8002f5e:	d00f      	beq.n	8002f80 <cmd_DAC_SET+0x38>
	{
		switch(code)
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d004      	beq.n	8002f70 <cmd_DAC_SET+0x28>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	4a0e      	ldr	r2, [pc, #56]	; (8002fa4 <cmd_DAC_SET+0x5c>)
 8002f6a:	4293      	cmp	r3, r2
 8002f6c:	d004      	beq.n	8002f78 <cmd_DAC_SET+0x30>
 8002f6e:	e008      	b.n	8002f82 <cmd_DAC_SET+0x3a>
		{
		case DAC_CODE_DOWN:
			DAC_code_direction=DIRECTION_UP_STATE;
 8002f70:	4b0b      	ldr	r3, [pc, #44]	; (8002fa0 <cmd_DAC_SET+0x58>)
 8002f72:	2201      	movs	r2, #1
 8002f74:	701a      	strb	r2, [r3, #0]
			break;
 8002f76:	e004      	b.n	8002f82 <cmd_DAC_SET+0x3a>
		case DAC_CODE_TOP:
			DAC_code_direction=DIRECTION_DOWN_STATE;
 8002f78:	4b09      	ldr	r3, [pc, #36]	; (8002fa0 <cmd_DAC_SET+0x58>)
 8002f7a:	2200      	movs	r2, #0
 8002f7c:	701a      	strb	r2, [r3, #0]
			break;
 8002f7e:	e000      	b.n	8002f82 <cmd_DAC_SET+0x3a>
		}
	}
 8002f80:	bf00      	nop

	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002f82:	2000      	movs	r0, #0
 8002f84:	f7fe fc1c 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f88:	f7fe fcee 	bl	8001968 <DAC_SendInit>
	DAC_TEMP_CAL();
 8002f8c:	f7fe fd74 	bl	8001a78 <DAC_TEMP_CAL>
	DAC_Write(code);
 8002f90:	6878      	ldr	r0, [r7, #4]
 8002f92:	f7fe fca9 	bl	80018e8 <DAC_Write>
 8002f96:	e000      	b.n	8002f9a <cmd_DAC_SET+0x52>
	if (code>0xFFFFF)return;
 8002f98:	bf00      	nop
}
 8002f9a:	3708      	adds	r7, #8
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}
 8002fa0:	20000764 	.word	0x20000764
 8002fa4:	000fffff 	.word	0x000fffff

08002fa8 <cmd_SET_OUTPUT_VOLTAGE>:
//==============================================================================================


//==============================================================================================
FunctionalState cmd_SET_OUTPUT_VOLTAGE(float volt)
{
 8002fa8:	b580      	push	{r7, lr}
 8002faa:	b082      	sub	sp, #8
 8002fac:	af00      	add	r7, sp, #0
 8002fae:	6078      	str	r0, [r7, #4]
	if(volt>=cal_DAC_down_voltage && volt<=cal_DAC_up_voltage)
 8002fb0:	4b85      	ldr	r3, [pc, #532]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	4619      	mov	r1, r3
 8002fb6:	6878      	ldr	r0, [r7, #4]
 8002fb8:	f7fe f8b8 	bl	800112c <__aeabi_fcmpge>
 8002fbc:	4603      	mov	r3, r0
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	d03f      	beq.n	8003042 <cmd_SET_OUTPUT_VOLTAGE+0x9a>
 8002fc2:	4b82      	ldr	r3, [pc, #520]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	4619      	mov	r1, r3
 8002fc8:	6878      	ldr	r0, [r7, #4]
 8002fca:	f7fe f8a5 	bl	8001118 <__aeabi_fcmple>
 8002fce:	4603      	mov	r3, r0
 8002fd0:	2b00      	cmp	r3, #0
 8002fd2:	d036      	beq.n	8003042 <cmd_SET_OUTPUT_VOLTAGE+0x9a>
	{
		if(Current_output_status!=Output_x1_STATE)output_state(Output_x1_STATE);
 8002fd4:	4b7e      	ldr	r3, [pc, #504]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8002fd6:	781b      	ldrb	r3, [r3, #0]
 8002fd8:	2b01      	cmp	r3, #1
 8002fda:	d002      	beq.n	8002fe2 <cmd_SET_OUTPUT_VOLTAGE+0x3a>
 8002fdc:	2001      	movs	r0, #1
 8002fde:	f7ff fbd1 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8002fe2:	4b7a      	ldr	r3, [pc, #488]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	4a78      	ldr	r2, [pc, #480]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002fe8:	6812      	ldr	r2, [r2, #0]
 8002fea:	4611      	mov	r1, r2
 8002fec:	4618      	mov	r0, r3
 8002fee:	f7fd fde1 	bl	8000bb4 <__aeabi_fsub>
 8002ff2:	4603      	mov	r3, r0
 8002ff4:	4977      	ldr	r1, [pc, #476]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f7fd ff9a 	bl	8000f30 <__aeabi_fdiv>
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	461a      	mov	r2, r3
 8003000:	4b75      	ldr	r3, [pc, #468]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003002:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt-cal_DAC_down_voltage)/dac_resolution);
 8003004:	4b70      	ldr	r3, [pc, #448]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	4619      	mov	r1, r3
 800300a:	6878      	ldr	r0, [r7, #4]
 800300c:	f7fd fdd2 	bl	8000bb4 <__aeabi_fsub>
 8003010:	4603      	mov	r3, r0
 8003012:	461a      	mov	r2, r3
 8003014:	4b70      	ldr	r3, [pc, #448]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	4619      	mov	r1, r3
 800301a:	4610      	mov	r0, r2
 800301c:	f7fd ff88 	bl	8000f30 <__aeabi_fdiv>
 8003020:	4603      	mov	r3, r0
 8003022:	4618      	mov	r0, r3
 8003024:	f7fe f896 	bl	8001154 <__aeabi_f2uiz>
 8003028:	4603      	mov	r3, r0
 800302a:	4a6c      	ldr	r2, [pc, #432]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 800302c:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 800302e:	4b6b      	ldr	r3, [pc, #428]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	4618      	mov	r0, r3
 8003034:	f7ff ff88 	bl	8002f48 <cmd_DAC_SET>
		Voltage=volt;
 8003038:	4a69      	ldr	r2, [pc, #420]	; (80031e0 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6013      	str	r3, [r2, #0]
		return ret_OK;
 800303e:	2301      	movs	r3, #1
 8003040:	e0be      	b.n	80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x2_coeff) && volt<=(cal_DAC_up_voltage*gain_x2_coeff))
 8003042:	4b61      	ldr	r3, [pc, #388]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4a67      	ldr	r2, [pc, #412]	; (80031e4 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003048:	6812      	ldr	r2, [r2, #0]
 800304a:	4611      	mov	r1, r2
 800304c:	4618      	mov	r0, r3
 800304e:	f7fd febb 	bl	8000dc8 <__aeabi_fmul>
 8003052:	4603      	mov	r3, r0
 8003054:	4619      	mov	r1, r3
 8003056:	6878      	ldr	r0, [r7, #4]
 8003058:	f7fe f868 	bl	800112c <__aeabi_fcmpge>
 800305c:	4603      	mov	r3, r0
 800305e:	2b00      	cmp	r3, #0
 8003060:	d04e      	beq.n	8003100 <cmd_SET_OUTPUT_VOLTAGE+0x158>
 8003062:	4b5a      	ldr	r3, [pc, #360]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	4a5f      	ldr	r2, [pc, #380]	; (80031e4 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003068:	6812      	ldr	r2, [r2, #0]
 800306a:	4611      	mov	r1, r2
 800306c:	4618      	mov	r0, r3
 800306e:	f7fd feab 	bl	8000dc8 <__aeabi_fmul>
 8003072:	4603      	mov	r3, r0
 8003074:	4619      	mov	r1, r3
 8003076:	6878      	ldr	r0, [r7, #4]
 8003078:	f7fe f84e 	bl	8001118 <__aeabi_fcmple>
 800307c:	4603      	mov	r3, r0
 800307e:	2b00      	cmp	r3, #0
 8003080:	d03e      	beq.n	8003100 <cmd_SET_OUTPUT_VOLTAGE+0x158>
	{
		if(Current_output_status!=Output_x2_STATE)output_state(Output_x2_STATE);
 8003082:	4b53      	ldr	r3, [pc, #332]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	2b02      	cmp	r3, #2
 8003088:	d002      	beq.n	8003090 <cmd_SET_OUTPUT_VOLTAGE+0xe8>
 800308a:	2002      	movs	r0, #2
 800308c:	f7ff fb7a 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8003090:	4b4e      	ldr	r3, [pc, #312]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	4a4c      	ldr	r2, [pc, #304]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003096:	6812      	ldr	r2, [r2, #0]
 8003098:	4611      	mov	r1, r2
 800309a:	4618      	mov	r0, r3
 800309c:	f7fd fd8a 	bl	8000bb4 <__aeabi_fsub>
 80030a0:	4603      	mov	r3, r0
 80030a2:	494c      	ldr	r1, [pc, #304]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 80030a4:	4618      	mov	r0, r3
 80030a6:	f7fd ff43 	bl	8000f30 <__aeabi_fdiv>
 80030aa:	4603      	mov	r3, r0
 80030ac:	461a      	mov	r2, r3
 80030ae:	4b4a      	ldr	r3, [pc, #296]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030b0:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x2_coeff-cal_DAC_down_voltage)/dac_resolution);
 80030b2:	4b4c      	ldr	r3, [pc, #304]	; (80031e4 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	4619      	mov	r1, r3
 80030b8:	6878      	ldr	r0, [r7, #4]
 80030ba:	f7fd ff39 	bl	8000f30 <__aeabi_fdiv>
 80030be:	4603      	mov	r3, r0
 80030c0:	461a      	mov	r2, r3
 80030c2:	4b41      	ldr	r3, [pc, #260]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	4619      	mov	r1, r3
 80030c8:	4610      	mov	r0, r2
 80030ca:	f7fd fd73 	bl	8000bb4 <__aeabi_fsub>
 80030ce:	4603      	mov	r3, r0
 80030d0:	461a      	mov	r2, r3
 80030d2:	4b41      	ldr	r3, [pc, #260]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	4619      	mov	r1, r3
 80030d8:	4610      	mov	r0, r2
 80030da:	f7fd ff29 	bl	8000f30 <__aeabi_fdiv>
 80030de:	4603      	mov	r3, r0
 80030e0:	4618      	mov	r0, r3
 80030e2:	f7fe f837 	bl	8001154 <__aeabi_f2uiz>
 80030e6:	4603      	mov	r3, r0
 80030e8:	4a3c      	ldr	r2, [pc, #240]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80030ea:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 80030ec:	4b3b      	ldr	r3, [pc, #236]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	4618      	mov	r0, r3
 80030f2:	f7ff ff29 	bl	8002f48 <cmd_DAC_SET>
		Voltage=volt;
 80030f6:	4a3a      	ldr	r2, [pc, #232]	; (80031e0 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	6013      	str	r3, [r2, #0]
		return ret_OK;
 80030fc:	2301      	movs	r3, #1
 80030fe:	e05f      	b.n	80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x4_coeff) && volt<=(cal_DAC_up_voltage*gain_x4_coeff))
 8003100:	4b31      	ldr	r3, [pc, #196]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	4a38      	ldr	r2, [pc, #224]	; (80031e8 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003106:	6812      	ldr	r2, [r2, #0]
 8003108:	4611      	mov	r1, r2
 800310a:	4618      	mov	r0, r3
 800310c:	f7fd fe5c 	bl	8000dc8 <__aeabi_fmul>
 8003110:	4603      	mov	r3, r0
 8003112:	4619      	mov	r1, r3
 8003114:	6878      	ldr	r0, [r7, #4]
 8003116:	f7fe f809 	bl	800112c <__aeabi_fcmpge>
 800311a:	4603      	mov	r3, r0
 800311c:	2b00      	cmp	r3, #0
 800311e:	d04e      	beq.n	80031be <cmd_SET_OUTPUT_VOLTAGE+0x216>
 8003120:	4b2a      	ldr	r3, [pc, #168]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	4a30      	ldr	r2, [pc, #192]	; (80031e8 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003126:	6812      	ldr	r2, [r2, #0]
 8003128:	4611      	mov	r1, r2
 800312a:	4618      	mov	r0, r3
 800312c:	f7fd fe4c 	bl	8000dc8 <__aeabi_fmul>
 8003130:	4603      	mov	r3, r0
 8003132:	4619      	mov	r1, r3
 8003134:	6878      	ldr	r0, [r7, #4]
 8003136:	f7fd ffef 	bl	8001118 <__aeabi_fcmple>
 800313a:	4603      	mov	r3, r0
 800313c:	2b00      	cmp	r3, #0
 800313e:	d03e      	beq.n	80031be <cmd_SET_OUTPUT_VOLTAGE+0x216>
	{
		if(Current_output_status!=Output_x4_STATE)output_state(Output_x4_STATE);
 8003140:	4b23      	ldr	r3, [pc, #140]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8003142:	781b      	ldrb	r3, [r3, #0]
 8003144:	2b03      	cmp	r3, #3
 8003146:	d002      	beq.n	800314e <cmd_SET_OUTPUT_VOLTAGE+0x1a6>
 8003148:	2003      	movs	r0, #3
 800314a:	f7ff fb1b 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 800314e:	4b1f      	ldr	r3, [pc, #124]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	4a1d      	ldr	r2, [pc, #116]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003154:	6812      	ldr	r2, [r2, #0]
 8003156:	4611      	mov	r1, r2
 8003158:	4618      	mov	r0, r3
 800315a:	f7fd fd2b 	bl	8000bb4 <__aeabi_fsub>
 800315e:	4603      	mov	r3, r0
 8003160:	491c      	ldr	r1, [pc, #112]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8003162:	4618      	mov	r0, r3
 8003164:	f7fd fee4 	bl	8000f30 <__aeabi_fdiv>
 8003168:	4603      	mov	r3, r0
 800316a:	461a      	mov	r2, r3
 800316c:	4b1a      	ldr	r3, [pc, #104]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 800316e:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x4_coeff-cal_DAC_down_voltage)/dac_resolution);
 8003170:	4b1d      	ldr	r3, [pc, #116]	; (80031e8 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	4619      	mov	r1, r3
 8003176:	6878      	ldr	r0, [r7, #4]
 8003178:	f7fd feda 	bl	8000f30 <__aeabi_fdiv>
 800317c:	4603      	mov	r3, r0
 800317e:	461a      	mov	r2, r3
 8003180:	4b11      	ldr	r3, [pc, #68]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	4619      	mov	r1, r3
 8003186:	4610      	mov	r0, r2
 8003188:	f7fd fd14 	bl	8000bb4 <__aeabi_fsub>
 800318c:	4603      	mov	r3, r0
 800318e:	461a      	mov	r2, r3
 8003190:	4b11      	ldr	r3, [pc, #68]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	4619      	mov	r1, r3
 8003196:	4610      	mov	r0, r2
 8003198:	f7fd feca 	bl	8000f30 <__aeabi_fdiv>
 800319c:	4603      	mov	r3, r0
 800319e:	4618      	mov	r0, r3
 80031a0:	f7fd ffd8 	bl	8001154 <__aeabi_f2uiz>
 80031a4:	4603      	mov	r3, r0
 80031a6:	4a0d      	ldr	r2, [pc, #52]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80031a8:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 80031aa:	4b0c      	ldr	r3, [pc, #48]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	4618      	mov	r0, r3
 80031b0:	f7ff feca 	bl	8002f48 <cmd_DAC_SET>
		Voltage=volt;
 80031b4:	4a0a      	ldr	r2, [pc, #40]	; (80031e0 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	6013      	str	r3, [r2, #0]
		return ret_OK;
 80031ba:	2301      	movs	r3, #1
 80031bc:	e000      	b.n	80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}

	return ret_ERROR;
 80031be:	2300      	movs	r3, #0
}
 80031c0:	4618      	mov	r0, r3
 80031c2:	3708      	adds	r7, #8
 80031c4:	46bd      	mov	sp, r7
 80031c6:	bd80      	pop	{r7, pc}
 80031c8:	20000758 	.word	0x20000758
 80031cc:	20000754 	.word	0x20000754
 80031d0:	2000075c 	.word	0x2000075c
 80031d4:	497ffff0 	.word	0x497ffff0
 80031d8:	20000648 	.word	0x20000648
 80031dc:	20000760 	.word	0x20000760
 80031e0:	2000074c 	.word	0x2000074c
 80031e4:	20000538 	.word	0x20000538
 80031e8:	2000053c 	.word	0x2000053c

080031ec <cmd_CAP_SET>:



//==============================================================================================
FunctionalState cmd_CAP_SET(uint8_t value)
{
 80031ec:	b580      	push	{r7, lr}
 80031ee:	b082      	sub	sp, #8
 80031f0:	af00      	add	r7, sp, #0
 80031f2:	4603      	mov	r3, r0
 80031f4:	71fb      	strb	r3, [r7, #7]
	if(value>=C_value_max_count)
 80031f6:	79fb      	ldrb	r3, [r7, #7]
 80031f8:	2b09      	cmp	r3, #9
 80031fa:	d901      	bls.n	8003200 <cmd_CAP_SET+0x14>
		return ret_ERROR;
 80031fc:	2300      	movs	r3, #0
 80031fe:	e011      	b.n	8003224 <cmd_CAP_SET+0x38>
	C_ref=value;
 8003200:	4a0a      	ldr	r2, [pc, #40]	; (800322c <cmd_CAP_SET+0x40>)
 8003202:	79fb      	ldrb	r3, [r7, #7]
 8003204:	7013      	strb	r3, [r2, #0]
	if(mode==AMP_SCREEN)return Recalculate_ramp_speed(mode,amp_target_speed);
 8003206:	4b0a      	ldr	r3, [pc, #40]	; (8003230 <cmd_CAP_SET+0x44>)
 8003208:	781b      	ldrb	r3, [r3, #0]
 800320a:	2b04      	cmp	r3, #4
 800320c:	d109      	bne.n	8003222 <cmd_CAP_SET+0x36>
 800320e:	4b08      	ldr	r3, [pc, #32]	; (8003230 <cmd_CAP_SET+0x44>)
 8003210:	781b      	ldrb	r3, [r3, #0]
 8003212:	4a08      	ldr	r2, [pc, #32]	; (8003234 <cmd_CAP_SET+0x48>)
 8003214:	6812      	ldr	r2, [r2, #0]
 8003216:	4611      	mov	r1, r2
 8003218:	4618      	mov	r0, r3
 800321a:	f000 f80d 	bl	8003238 <Recalculate_ramp_speed>
 800321e:	4603      	mov	r3, r0
 8003220:	e000      	b.n	8003224 <cmd_CAP_SET+0x38>
	return ret_OK;
 8003222:	2301      	movs	r3, #1
}
 8003224:	4618      	mov	r0, r3
 8003226:	3708      	adds	r7, #8
 8003228:	46bd      	mov	sp, r7
 800322a:	bd80      	pop	{r7, pc}
 800322c:	20000749 	.word	0x20000749
 8003230:	20000748 	.word	0x20000748
 8003234:	2000000c 	.word	0x2000000c

08003238 <Recalculate_ramp_speed>:



//==============================================================================================
FunctionalState Recalculate_ramp_speed(uint8_t new_state, float new_speed)
{
 8003238:	b5b0      	push	{r4, r5, r7, lr}
 800323a:	b084      	sub	sp, #16
 800323c:	af00      	add	r7, sp, #0
 800323e:	4603      	mov	r3, r0
 8003240:	6039      	str	r1, [r7, #0]
 8003242:	71fb      	strb	r3, [r7, #7]
	float tmp_speed=0;
 8003244:	f04f 0300 	mov.w	r3, #0
 8003248:	60fb      	str	r3, [r7, #12]

	if(new_state==AMP_SCREEN) // check current
 800324a:	79fb      	ldrb	r3, [r7, #7]
 800324c:	2b04      	cmp	r3, #4
 800324e:	d120      	bne.n	8003292 <Recalculate_ramp_speed+0x5a>
		tmp_speed=new_speed/(C_value[C_ref]*1E-12);
 8003250:	6838      	ldr	r0, [r7, #0]
 8003252:	f7fd f90b 	bl	800046c <__aeabi_f2d>
 8003256:	4604      	mov	r4, r0
 8003258:	460d      	mov	r5, r1
 800325a:	4b37      	ldr	r3, [pc, #220]	; (8003338 <Recalculate_ramp_speed+0x100>)
 800325c:	781b      	ldrb	r3, [r3, #0]
 800325e:	461a      	mov	r2, r3
 8003260:	4b36      	ldr	r3, [pc, #216]	; (800333c <Recalculate_ramp_speed+0x104>)
 8003262:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003266:	4618      	mov	r0, r3
 8003268:	f7fd f900 	bl	800046c <__aeabi_f2d>
 800326c:	a32c      	add	r3, pc, #176	; (adr r3, 8003320 <Recalculate_ramp_speed+0xe8>)
 800326e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003272:	f7fd f953 	bl	800051c <__aeabi_dmul>
 8003276:	4602      	mov	r2, r0
 8003278:	460b      	mov	r3, r1
 800327a:	4620      	mov	r0, r4
 800327c:	4629      	mov	r1, r5
 800327e:	f7fd fa77 	bl	8000770 <__aeabi_ddiv>
 8003282:	4602      	mov	r2, r0
 8003284:	460b      	mov	r3, r1
 8003286:	4610      	mov	r0, r2
 8003288:	4619      	mov	r1, r3
 800328a:	f7fd fc3f 	bl	8000b0c <__aeabi_d2f>
 800328e:	4603      	mov	r3, r0
 8003290:	60fb      	str	r3, [r7, #12]
	if(new_state==dU_dt_SCREEN) // check speed
 8003292:	79fb      	ldrb	r3, [r7, #7]
 8003294:	2b00      	cmp	r3, #0
 8003296:	d101      	bne.n	800329c <Recalculate_ramp_speed+0x64>
		tmp_speed=new_speed;
 8003298:	683b      	ldr	r3, [r7, #0]
 800329a:	60fb      	str	r3, [r7, #12]

	if(tmp_speed<0.0009 || tmp_speed>1.1) // limit V/s
 800329c:	68f8      	ldr	r0, [r7, #12]
 800329e:	f7fd f8e5 	bl	800046c <__aeabi_f2d>
 80032a2:	a321      	add	r3, pc, #132	; (adr r3, 8003328 <Recalculate_ramp_speed+0xf0>)
 80032a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032a8:	f7fd fbaa 	bl	8000a00 <__aeabi_dcmplt>
 80032ac:	4603      	mov	r3, r0
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d10a      	bne.n	80032c8 <Recalculate_ramp_speed+0x90>
 80032b2:	68f8      	ldr	r0, [r7, #12]
 80032b4:	f7fd f8da 	bl	800046c <__aeabi_f2d>
 80032b8:	a31d      	add	r3, pc, #116	; (adr r3, 8003330 <Recalculate_ramp_speed+0xf8>)
 80032ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032be:	f7fd fbbd 	bl	8000a3c <__aeabi_dcmpgt>
 80032c2:	4603      	mov	r3, r0
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d001      	beq.n	80032cc <Recalculate_ramp_speed+0x94>
		return ret_ERROR;
 80032c8:	2300      	movs	r3, #0
 80032ca:	e025      	b.n	8003318 <Recalculate_ramp_speed+0xe0>

	if(new_state==AMP_SCREEN) // check current
 80032cc:	79fb      	ldrb	r3, [r7, #7]
 80032ce:	2b04      	cmp	r3, #4
 80032d0:	d108      	bne.n	80032e4 <Recalculate_ramp_speed+0xac>
	{
		amp_target_speed=new_speed;
 80032d2:	4a1b      	ldr	r2, [pc, #108]	; (8003340 <Recalculate_ramp_speed+0x108>)
 80032d4:	683b      	ldr	r3, [r7, #0]
 80032d6:	6013      	str	r3, [r2, #0]
		ramp_target_speed=tmp_speed;
 80032d8:	4a1a      	ldr	r2, [pc, #104]	; (8003344 <Recalculate_ramp_speed+0x10c>)
 80032da:	68fb      	ldr	r3, [r7, #12]
 80032dc:	6013      	str	r3, [r2, #0]
		mode=AMP_SCREEN;
 80032de:	4b1a      	ldr	r3, [pc, #104]	; (8003348 <Recalculate_ramp_speed+0x110>)
 80032e0:	2204      	movs	r2, #4
 80032e2:	701a      	strb	r2, [r3, #0]
	}

	if(new_state==dU_dt_SCREEN) // check speed
 80032e4:	79fb      	ldrb	r3, [r7, #7]
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d105      	bne.n	80032f6 <Recalculate_ramp_speed+0xbe>
	{
		ramp_target_speed=new_speed;
 80032ea:	4a16      	ldr	r2, [pc, #88]	; (8003344 <Recalculate_ramp_speed+0x10c>)
 80032ec:	683b      	ldr	r3, [r7, #0]
 80032ee:	6013      	str	r3, [r2, #0]
		mode=dU_dt_SCREEN;
 80032f0:	4b15      	ldr	r3, [pc, #84]	; (8003348 <Recalculate_ramp_speed+0x110>)
 80032f2:	2200      	movs	r2, #0
 80032f4:	701a      	strb	r2, [r3, #0]
	}

	DAC_target_speed=tmp_speed;
 80032f6:	4a15      	ldr	r2, [pc, #84]	; (800334c <Recalculate_ramp_speed+0x114>)
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	6013      	str	r3, [r2, #0]
	if(cfg.LDACMODE==0)
 80032fc:	4b14      	ldr	r3, [pc, #80]	; (8003350 <Recalculate_ramp_speed+0x118>)
 80032fe:	789b      	ldrb	r3, [r3, #2]
 8003300:	2b00      	cmp	r3, #0
 8003302:	d103      	bne.n	800330c <Recalculate_ramp_speed+0xd4>
	{
		CPLD_control(CPLD_OFF_STATE);
 8003304:	2000      	movs	r0, #0
 8003306:	f7fe fa5b 	bl	80017c0 <CPLD_control>
 800330a:	e002      	b.n	8003312 <Recalculate_ramp_speed+0xda>
	}
	else
	{
		CPLD_control(CPLD_ON_STATE);
 800330c:	2001      	movs	r0, #1
 800330e:	f7fe fa57 	bl	80017c0 <CPLD_control>
	}
	DDS_Calculation();
 8003312:	f7fe fc21 	bl	8001b58 <DDS_Calculation>
	return ret_OK;
 8003316:	2301      	movs	r3, #1
}
 8003318:	4618      	mov	r0, r3
 800331a:	3710      	adds	r7, #16
 800331c:	46bd      	mov	sp, r7
 800331e:	bdb0      	pop	{r4, r5, r7, pc}
 8003320:	812dea11 	.word	0x812dea11
 8003324:	3d719799 	.word	0x3d719799
 8003328:	487fcb92 	.word	0x487fcb92
 800332c:	3f4d7dbf 	.word	0x3f4d7dbf
 8003330:	9999999a 	.word	0x9999999a
 8003334:	3ff19999 	.word	0x3ff19999
 8003338:	20000749 	.word	0x20000749
 800333c:	20000620 	.word	0x20000620
 8003340:	2000000c 	.word	0x2000000c
 8003344:	20000010 	.word	0x20000010
 8003348:	20000748 	.word	0x20000748
 800334c:	20000744 	.word	0x20000744
 8003350:	20000730 	.word	0x20000730
 8003354:	00000000 	.word	0x00000000

08003358 <cmd_CAL>:



//==============================================================================================
FunctionalState cmd_CAL(uint8_t cmd, float coeff)
{
 8003358:	b580      	push	{r7, lr}
 800335a:	b084      	sub	sp, #16
 800335c:	af00      	add	r7, sp, #0
 800335e:	4603      	mov	r3, r0
 8003360:	6039      	str	r1, [r7, #0]
 8003362:	71fb      	strb	r3, [r7, #7]
	float tmpx;

	if(CAL_STATE==LOCK_STATE) return 0;
 8003364:	4b96      	ldr	r3, [pc, #600]	; (80035c0 <cmd_CAL+0x268>)
 8003366:	781b      	ldrb	r3, [r3, #0]
 8003368:	2b01      	cmp	r3, #1
 800336a:	d101      	bne.n	8003370 <cmd_CAL+0x18>
 800336c:	2300      	movs	r3, #0
 800336e:	e0f0      	b.n	8003552 <cmd_CAL+0x1fa>

	tmpx=coeff;
 8003370:	683b      	ldr	r3, [r7, #0]
 8003372:	60fb      	str	r3, [r7, #12]

	switch(cmd)
 8003374:	79fb      	ldrb	r3, [r7, #7]
 8003376:	3b06      	subs	r3, #6
 8003378:	2b07      	cmp	r3, #7
 800337a:	f200 80e7 	bhi.w	800354c <cmd_CAL+0x1f4>
 800337e:	a201      	add	r2, pc, #4	; (adr r2, 8003384 <cmd_CAL+0x2c>)
 8003380:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003384:	080033a5 	.word	0x080033a5
 8003388:	080033b7 	.word	0x080033b7
 800338c:	080033c9 	.word	0x080033c9
 8003390:	080033db 	.word	0x080033db
 8003394:	08003471 	.word	0x08003471
 8003398:	080034df 	.word	0x080034df
 800339c:	080033ed 	.word	0x080033ed
 80033a0:	0800342f 	.word	0x0800342f
	{
	case DAC_CAL_TEMP:
		DAC_Write(DAC_CODE_MIDDLE);
 80033a4:	4887      	ldr	r0, [pc, #540]	; (80035c4 <cmd_CAL+0x26c>)
 80033a6:	f7fe fa9f 	bl	80018e8 <DAC_Write>
		DAC_TEMP_CAL();
 80033aa:	f7fe fb65 	bl	8001a78 <DAC_TEMP_CAL>
		DAC_Write(DAC_CODE_MIDDLE);
 80033ae:	4885      	ldr	r0, [pc, #532]	; (80035c4 <cmd_CAL+0x26c>)
 80033b0:	f7fe fa9a 	bl	80018e8 <DAC_Write>
		break;
 80033b4:	e0ca      	b.n	800354c <cmd_CAL+0x1f4>

	case DAC_CAL_POLY_A:
		EEPROM_write(corr_coeff_1_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033b6:	68f8      	ldr	r0, [r7, #12]
 80033b8:	f000 f9bf 	bl	800373a <float_to_binary>
 80033bc:	4603      	mov	r3, r0
 80033be:	4619      	mov	r1, r3
 80033c0:	2010      	movs	r0, #16
 80033c2:	f000 f9f9 	bl	80037b8 <EEPROM_write>
		break;
 80033c6:	e0c1      	b.n	800354c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_B:
		EEPROM_write(corr_coeff_2_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033c8:	68f8      	ldr	r0, [r7, #12]
 80033ca:	f000 f9b6 	bl	800373a <float_to_binary>
 80033ce:	4603      	mov	r3, r0
 80033d0:	4619      	mov	r1, r3
 80033d2:	2018      	movs	r0, #24
 80033d4:	f000 f9f0 	bl	80037b8 <EEPROM_write>
		break;
 80033d8:	e0b8      	b.n	800354c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_C:
		EEPROM_write(corr_coeff_3_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033da:	68f8      	ldr	r0, [r7, #12]
 80033dc:	f000 f9ad 	bl	800373a <float_to_binary>
 80033e0:	4603      	mov	r3, r0
 80033e2:	4619      	mov	r1, r3
 80033e4:	2020      	movs	r0, #32
 80033e6:	f000 f9e7 	bl	80037b8 <EEPROM_write>
		break;
 80033ea:	e0af      	b.n	800354c <cmd_CAL+0x1f4>

	case GAIN_X2_CAL:
		if((tmpx<2.1 && tmpx>1.9))
 80033ec:	68f8      	ldr	r0, [r7, #12]
 80033ee:	f7fd f83d 	bl	800046c <__aeabi_f2d>
 80033f2:	a35b      	add	r3, pc, #364	; (adr r3, 8003560 <cmd_CAL+0x208>)
 80033f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033f8:	f7fd fb02 	bl	8000a00 <__aeabi_dcmplt>
 80033fc:	4603      	mov	r3, r0
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d013      	beq.n	800342a <cmd_CAL+0xd2>
 8003402:	68f8      	ldr	r0, [r7, #12]
 8003404:	f7fd f832 	bl	800046c <__aeabi_f2d>
 8003408:	a357      	add	r3, pc, #348	; (adr r3, 8003568 <cmd_CAL+0x210>)
 800340a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800340e:	f7fd fb15 	bl	8000a3c <__aeabi_dcmpgt>
 8003412:	4603      	mov	r3, r0
 8003414:	2b00      	cmp	r3, #0
 8003416:	d008      	beq.n	800342a <cmd_CAL+0xd2>
		{
			EEPROM_write(gain_x2_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003418:	68f8      	ldr	r0, [r7, #12]
 800341a:	f000 f98e 	bl	800373a <float_to_binary>
 800341e:	4603      	mov	r3, r0
 8003420:	4619      	mov	r1, r3
 8003422:	2028      	movs	r0, #40	; 0x28
 8003424:	f000 f9c8 	bl	80037b8 <EEPROM_write>
		}
		else return 0;
		break;
 8003428:	e090      	b.n	800354c <cmd_CAL+0x1f4>
		else return 0;
 800342a:	2300      	movs	r3, #0
 800342c:	e091      	b.n	8003552 <cmd_CAL+0x1fa>
	case GAIN_X4_CAL:
		if((tmpx<4.1 && tmpx>3.9))
 800342e:	68f8      	ldr	r0, [r7, #12]
 8003430:	f7fd f81c 	bl	800046c <__aeabi_f2d>
 8003434:	a34e      	add	r3, pc, #312	; (adr r3, 8003570 <cmd_CAL+0x218>)
 8003436:	e9d3 2300 	ldrd	r2, r3, [r3]
 800343a:	f7fd fae1 	bl	8000a00 <__aeabi_dcmplt>
 800343e:	4603      	mov	r3, r0
 8003440:	2b00      	cmp	r3, #0
 8003442:	d013      	beq.n	800346c <cmd_CAL+0x114>
 8003444:	68f8      	ldr	r0, [r7, #12]
 8003446:	f7fd f811 	bl	800046c <__aeabi_f2d>
 800344a:	a34b      	add	r3, pc, #300	; (adr r3, 8003578 <cmd_CAL+0x220>)
 800344c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003450:	f7fd faf4 	bl	8000a3c <__aeabi_dcmpgt>
 8003454:	4603      	mov	r3, r0
 8003456:	2b00      	cmp	r3, #0
 8003458:	d008      	beq.n	800346c <cmd_CAL+0x114>
		{
			EEPROM_write(gain_x4_EEPROM_ADDRESS,float_to_binary(tmpx));
 800345a:	68f8      	ldr	r0, [r7, #12]
 800345c:	f000 f96d 	bl	800373a <float_to_binary>
 8003460:	4603      	mov	r3, r0
 8003462:	4619      	mov	r1, r3
 8003464:	2030      	movs	r0, #48	; 0x30
 8003466:	f000 f9a7 	bl	80037b8 <EEPROM_write>
		}
		else return 0;
		break;
 800346a:	e06f      	b.n	800354c <cmd_CAL+0x1f4>
		else return 0;
 800346c:	2300      	movs	r3, #0
 800346e:	e070      	b.n	8003552 <cmd_CAL+0x1fa>
	case DAC_CAL_TOP:
		if((tmpx<10.1 && tmpx>9.9) || (tmpx>6.8 && tmpx<7.1))
 8003470:	68f8      	ldr	r0, [r7, #12]
 8003472:	f7fc fffb 	bl	800046c <__aeabi_f2d>
 8003476:	a342      	add	r3, pc, #264	; (adr r3, 8003580 <cmd_CAL+0x228>)
 8003478:	e9d3 2300 	ldrd	r2, r3, [r3]
 800347c:	f7fd fac0 	bl	8000a00 <__aeabi_dcmplt>
 8003480:	4603      	mov	r3, r0
 8003482:	2b00      	cmp	r3, #0
 8003484:	d00a      	beq.n	800349c <cmd_CAL+0x144>
 8003486:	68f8      	ldr	r0, [r7, #12]
 8003488:	f7fc fff0 	bl	800046c <__aeabi_f2d>
 800348c:	a33e      	add	r3, pc, #248	; (adr r3, 8003588 <cmd_CAL+0x230>)
 800348e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003492:	f7fd fad3 	bl	8000a3c <__aeabi_dcmpgt>
 8003496:	4603      	mov	r3, r0
 8003498:	2b00      	cmp	r3, #0
 800349a:	d115      	bne.n	80034c8 <cmd_CAL+0x170>
 800349c:	68f8      	ldr	r0, [r7, #12]
 800349e:	f7fc ffe5 	bl	800046c <__aeabi_f2d>
 80034a2:	a33b      	add	r3, pc, #236	; (adr r3, 8003590 <cmd_CAL+0x238>)
 80034a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034a8:	f7fd fac8 	bl	8000a3c <__aeabi_dcmpgt>
 80034ac:	4603      	mov	r3, r0
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d013      	beq.n	80034da <cmd_CAL+0x182>
 80034b2:	68f8      	ldr	r0, [r7, #12]
 80034b4:	f7fc ffda 	bl	800046c <__aeabi_f2d>
 80034b8:	a337      	add	r3, pc, #220	; (adr r3, 8003598 <cmd_CAL+0x240>)
 80034ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034be:	f7fd fa9f 	bl	8000a00 <__aeabi_dcmplt>
 80034c2:	4603      	mov	r3, r0
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	d008      	beq.n	80034da <cmd_CAL+0x182>
		{
			EEPROM_write(cal_DAC_up_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 80034c8:	68f8      	ldr	r0, [r7, #12]
 80034ca:	f000 f936 	bl	800373a <float_to_binary>
 80034ce:	4603      	mov	r3, r0
 80034d0:	4619      	mov	r1, r3
 80034d2:	2000      	movs	r0, #0
 80034d4:	f000 f970 	bl	80037b8 <EEPROM_write>
		}
		else return 0;
		break;
 80034d8:	e038      	b.n	800354c <cmd_CAL+0x1f4>
		else return 0;
 80034da:	2300      	movs	r3, #0
 80034dc:	e039      	b.n	8003552 <cmd_CAL+0x1fa>
	case DAC_CAL_DOWN:
		if((tmpx>-10.1 && tmpx<-9.9) || (tmpx<-6.8 && tmpx>-7.1))
 80034de:	68f8      	ldr	r0, [r7, #12]
 80034e0:	f7fc ffc4 	bl	800046c <__aeabi_f2d>
 80034e4:	a32e      	add	r3, pc, #184	; (adr r3, 80035a0 <cmd_CAL+0x248>)
 80034e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034ea:	f7fd faa7 	bl	8000a3c <__aeabi_dcmpgt>
 80034ee:	4603      	mov	r3, r0
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d00a      	beq.n	800350a <cmd_CAL+0x1b2>
 80034f4:	68f8      	ldr	r0, [r7, #12]
 80034f6:	f7fc ffb9 	bl	800046c <__aeabi_f2d>
 80034fa:	a32b      	add	r3, pc, #172	; (adr r3, 80035a8 <cmd_CAL+0x250>)
 80034fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003500:	f7fd fa7e 	bl	8000a00 <__aeabi_dcmplt>
 8003504:	4603      	mov	r3, r0
 8003506:	2b00      	cmp	r3, #0
 8003508:	d115      	bne.n	8003536 <cmd_CAL+0x1de>
 800350a:	68f8      	ldr	r0, [r7, #12]
 800350c:	f7fc ffae 	bl	800046c <__aeabi_f2d>
 8003510:	a327      	add	r3, pc, #156	; (adr r3, 80035b0 <cmd_CAL+0x258>)
 8003512:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003516:	f7fd fa73 	bl	8000a00 <__aeabi_dcmplt>
 800351a:	4603      	mov	r3, r0
 800351c:	2b00      	cmp	r3, #0
 800351e:	d013      	beq.n	8003548 <cmd_CAL+0x1f0>
 8003520:	68f8      	ldr	r0, [r7, #12]
 8003522:	f7fc ffa3 	bl	800046c <__aeabi_f2d>
 8003526:	a324      	add	r3, pc, #144	; (adr r3, 80035b8 <cmd_CAL+0x260>)
 8003528:	e9d3 2300 	ldrd	r2, r3, [r3]
 800352c:	f7fd fa86 	bl	8000a3c <__aeabi_dcmpgt>
 8003530:	4603      	mov	r3, r0
 8003532:	2b00      	cmp	r3, #0
 8003534:	d008      	beq.n	8003548 <cmd_CAL+0x1f0>
		{
			EEPROM_write(cal_DAC_down_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 8003536:	68f8      	ldr	r0, [r7, #12]
 8003538:	f000 f8ff 	bl	800373a <float_to_binary>
 800353c:	4603      	mov	r3, r0
 800353e:	4619      	mov	r1, r3
 8003540:	2008      	movs	r0, #8
 8003542:	f000 f939 	bl	80037b8 <EEPROM_write>
		}
		else return 0;
		break;
 8003546:	e001      	b.n	800354c <cmd_CAL+0x1f4>
		else return 0;
 8003548:	2300      	movs	r3, #0
 800354a:	e002      	b.n	8003552 <cmd_CAL+0x1fa>
	}

	load_data_from_EEPROM();
 800354c:	f000 f83c 	bl	80035c8 <load_data_from_EEPROM>
	return 1;
 8003550:	2301      	movs	r3, #1
}
 8003552:	4618      	mov	r0, r3
 8003554:	3710      	adds	r7, #16
 8003556:	46bd      	mov	sp, r7
 8003558:	bd80      	pop	{r7, pc}
 800355a:	bf00      	nop
 800355c:	f3af 8000 	nop.w
 8003560:	cccccccd 	.word	0xcccccccd
 8003564:	4000cccc 	.word	0x4000cccc
 8003568:	66666666 	.word	0x66666666
 800356c:	3ffe6666 	.word	0x3ffe6666
 8003570:	66666666 	.word	0x66666666
 8003574:	40106666 	.word	0x40106666
 8003578:	33333333 	.word	0x33333333
 800357c:	400f3333 	.word	0x400f3333
 8003580:	33333333 	.word	0x33333333
 8003584:	40243333 	.word	0x40243333
 8003588:	cccccccd 	.word	0xcccccccd
 800358c:	4023cccc 	.word	0x4023cccc
 8003590:	33333333 	.word	0x33333333
 8003594:	401b3333 	.word	0x401b3333
 8003598:	66666666 	.word	0x66666666
 800359c:	401c6666 	.word	0x401c6666
 80035a0:	33333333 	.word	0x33333333
 80035a4:	c0243333 	.word	0xc0243333
 80035a8:	cccccccd 	.word	0xcccccccd
 80035ac:	c023cccc 	.word	0xc023cccc
 80035b0:	33333333 	.word	0x33333333
 80035b4:	c01b3333 	.word	0xc01b3333
 80035b8:	66666666 	.word	0x66666666
 80035bc:	c01c6666 	.word	0xc01c6666
 80035c0:	2000001d 	.word	0x2000001d
 80035c4:	0007ffff 	.word	0x0007ffff

080035c8 <load_data_from_EEPROM>:
//==============================================================================================


//==============================================================================================
void load_data_from_EEPROM(void)
{
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b082      	sub	sp, #8
 80035cc:	af00      	add	r7, sp, #0
	uint32_t addr_i,addr_hex;
	cal_DAC_up_voltage=binary_to_float(EEPROM_read(cal_DAC_up_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 80035ce:	2000      	movs	r0, #0
 80035d0:	f000 f8d8 	bl	8003784 <EEPROM_read>
 80035d4:	4603      	mov	r3, r0
 80035d6:	4618      	mov	r0, r3
 80035d8:	f000 f89c 	bl	8003714 <binary_to_float>
 80035dc:	4603      	mov	r3, r0
 80035de:	4a34      	ldr	r2, [pc, #208]	; (80036b0 <load_data_from_EEPROM+0xe8>)
 80035e0:	6013      	str	r3, [r2, #0]
	cal_DAC_down_voltage=binary_to_float(EEPROM_read(cal_DAC_down_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 80035e2:	2008      	movs	r0, #8
 80035e4:	f000 f8ce 	bl	8003784 <EEPROM_read>
 80035e8:	4603      	mov	r3, r0
 80035ea:	4618      	mov	r0, r3
 80035ec:	f000 f892 	bl	8003714 <binary_to_float>
 80035f0:	4603      	mov	r3, r0
 80035f2:	4a30      	ldr	r2, [pc, #192]	; (80036b4 <load_data_from_EEPROM+0xec>)
 80035f4:	6013      	str	r3, [r2, #0]
	DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 80035f6:	4b2e      	ldr	r3, [pc, #184]	; (80036b0 <load_data_from_EEPROM+0xe8>)
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	4a2e      	ldr	r2, [pc, #184]	; (80036b4 <load_data_from_EEPROM+0xec>)
 80035fc:	6812      	ldr	r2, [r2, #0]
 80035fe:	4611      	mov	r1, r2
 8003600:	4618      	mov	r0, r3
 8003602:	f7fd fad7 	bl	8000bb4 <__aeabi_fsub>
 8003606:	4603      	mov	r3, r0
 8003608:	461a      	mov	r2, r3
 800360a:	4b2b      	ldr	r3, [pc, #172]	; (80036b8 <load_data_from_EEPROM+0xf0>)
 800360c:	601a      	str	r2, [r3, #0]

	corr_coeff_1=binary_to_float(EEPROM_read(corr_coeff_1_EEPROM_ADDRESS));
 800360e:	2010      	movs	r0, #16
 8003610:	f000 f8b8 	bl	8003784 <EEPROM_read>
 8003614:	4603      	mov	r3, r0
 8003616:	4618      	mov	r0, r3
 8003618:	f000 f87c 	bl	8003714 <binary_to_float>
 800361c:	4603      	mov	r3, r0
 800361e:	4a27      	ldr	r2, [pc, #156]	; (80036bc <load_data_from_EEPROM+0xf4>)
 8003620:	6013      	str	r3, [r2, #0]
	corr_coeff_2=binary_to_float(EEPROM_read(corr_coeff_2_EEPROM_ADDRESS));
 8003622:	2018      	movs	r0, #24
 8003624:	f000 f8ae 	bl	8003784 <EEPROM_read>
 8003628:	4603      	mov	r3, r0
 800362a:	4618      	mov	r0, r3
 800362c:	f000 f872 	bl	8003714 <binary_to_float>
 8003630:	4603      	mov	r3, r0
 8003632:	4a23      	ldr	r2, [pc, #140]	; (80036c0 <load_data_from_EEPROM+0xf8>)
 8003634:	6013      	str	r3, [r2, #0]
	corr_coeff_3=binary_to_float(EEPROM_read(corr_coeff_3_EEPROM_ADDRESS));
 8003636:	2020      	movs	r0, #32
 8003638:	f000 f8a4 	bl	8003784 <EEPROM_read>
 800363c:	4603      	mov	r3, r0
 800363e:	4618      	mov	r0, r3
 8003640:	f000 f868 	bl	8003714 <binary_to_float>
 8003644:	4603      	mov	r3, r0
 8003646:	4a1f      	ldr	r2, [pc, #124]	; (80036c4 <load_data_from_EEPROM+0xfc>)
 8003648:	6013      	str	r3, [r2, #0]
	gain_x2_coeff=binary_to_float(EEPROM_read(gain_x2_EEPROM_ADDRESS));
 800364a:	2028      	movs	r0, #40	; 0x28
 800364c:	f000 f89a 	bl	8003784 <EEPROM_read>
 8003650:	4603      	mov	r3, r0
 8003652:	4618      	mov	r0, r3
 8003654:	f000 f85e 	bl	8003714 <binary_to_float>
 8003658:	4603      	mov	r3, r0
 800365a:	4a1b      	ldr	r2, [pc, #108]	; (80036c8 <load_data_from_EEPROM+0x100>)
 800365c:	6013      	str	r3, [r2, #0]
	gain_x4_coeff=binary_to_float(EEPROM_read(gain_x4_EEPROM_ADDRESS));
 800365e:	2030      	movs	r0, #48	; 0x30
 8003660:	f000 f890 	bl	8003784 <EEPROM_read>
 8003664:	4603      	mov	r3, r0
 8003666:	4618      	mov	r0, r3
 8003668:	f000 f854 	bl	8003714 <binary_to_float>
 800366c:	4603      	mov	r3, r0
 800366e:	4a17      	ldr	r2, [pc, #92]	; (80036cc <load_data_from_EEPROM+0x104>)
 8003670:	6013      	str	r3, [r2, #0]

	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 8003672:	2300      	movs	r3, #0
 8003674:	607b      	str	r3, [r7, #4]
 8003676:	e012      	b.n	800369e <load_data_from_EEPROM+0xd6>
	{
		addr_hex=C_value_base_EEPROM_ADDRESS+(0x08*addr_i);
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	3307      	adds	r3, #7
 800367c:	00db      	lsls	r3, r3, #3
 800367e:	603b      	str	r3, [r7, #0]
		C_value[addr_i]=binary_to_float(EEPROM_read(addr_hex));
 8003680:	6838      	ldr	r0, [r7, #0]
 8003682:	f000 f87f 	bl	8003784 <EEPROM_read>
 8003686:	4603      	mov	r3, r0
 8003688:	4618      	mov	r0, r3
 800368a:	f000 f843 	bl	8003714 <binary_to_float>
 800368e:	4602      	mov	r2, r0
 8003690:	490f      	ldr	r1, [pc, #60]	; (80036d0 <load_data_from_EEPROM+0x108>)
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	3301      	adds	r3, #1
 800369c:	607b      	str	r3, [r7, #4]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	2b09      	cmp	r3, #9
 80036a2:	d9e9      	bls.n	8003678 <load_data_from_EEPROM+0xb0>
	}
}
 80036a4:	bf00      	nop
 80036a6:	bf00      	nop
 80036a8:	3708      	adds	r7, #8
 80036aa:	46bd      	mov	sp, r7
 80036ac:	bd80      	pop	{r7, pc}
 80036ae:	bf00      	nop
 80036b0:	20000754 	.word	0x20000754
 80036b4:	20000758 	.word	0x20000758
 80036b8:	20000750 	.word	0x20000750
 80036bc:	2000052c 	.word	0x2000052c
 80036c0:	20000530 	.word	0x20000530
 80036c4:	20000534 	.word	0x20000534
 80036c8:	20000538 	.word	0x20000538
 80036cc:	2000053c 	.word	0x2000053c
 80036d0:	20000620 	.word	0x20000620

080036d4 <write_c_value_to_EEPROM>:
//==============================================================================================


//==============================================================================================
void write_c_value_to_EEPROM(uint32_t addr_i, float value)
{
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b084      	sub	sp, #16
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
 80036dc:	6039      	str	r1, [r7, #0]
	uint32_t addr_hex=C_value_base_EEPROM_ADDRESS+(0x08*addr_i);
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	3307      	adds	r3, #7
 80036e2:	00db      	lsls	r3, r3, #3
 80036e4:	60fb      	str	r3, [r7, #12]

	if(addr_i>=C_value_max_count)return;
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	2b09      	cmp	r3, #9
 80036ea:	d80d      	bhi.n	8003708 <write_c_value_to_EEPROM+0x34>

	C_value[addr_i]=value;
 80036ec:	4908      	ldr	r1, [pc, #32]	; (8003710 <write_c_value_to_EEPROM+0x3c>)
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	683a      	ldr	r2, [r7, #0]
 80036f2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex,float_to_binary(value));
 80036f6:	6838      	ldr	r0, [r7, #0]
 80036f8:	f000 f81f 	bl	800373a <float_to_binary>
 80036fc:	4603      	mov	r3, r0
 80036fe:	4619      	mov	r1, r3
 8003700:	68f8      	ldr	r0, [r7, #12]
 8003702:	f000 f859 	bl	80037b8 <EEPROM_write>
 8003706:	e000      	b.n	800370a <write_c_value_to_EEPROM+0x36>
	if(addr_i>=C_value_max_count)return;
 8003708:	bf00      	nop
}
 800370a:	3710      	adds	r7, #16
 800370c:	46bd      	mov	sp, r7
 800370e:	bd80      	pop	{r7, pc}
 8003710:	20000620 	.word	0x20000620

08003714 <binary_to_float>:
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC push_options
#pragma GCC optimize ("O0")

float binary_to_float(uint32_t a)
{
 8003714:	b480      	push	{r7}
 8003716:	b085      	sub	sp, #20
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
	int * p;
	float out=0;
 800371c:	f04f 0300 	mov.w	r3, #0
 8003720:	60bb      	str	r3, [r7, #8]

	p = &out;
 8003722:	f107 0308 	add.w	r3, r7, #8
 8003726:	60fb      	str	r3, [r7, #12]
	(*p)=a;
 8003728:	687a      	ldr	r2, [r7, #4]
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	601a      	str	r2, [r3, #0]
	return out;
 800372e:	68bb      	ldr	r3, [r7, #8]
}
 8003730:	4618      	mov	r0, r3
 8003732:	3714      	adds	r7, #20
 8003734:	46bd      	mov	sp, r7
 8003736:	bc80      	pop	{r7}
 8003738:	4770      	bx	lr

0800373a <float_to_binary>:


uint32_t float_to_binary(float a)
{
 800373a:	b480      	push	{r7}
 800373c:	b087      	sub	sp, #28
 800373e:	af00      	add	r7, sp, #0
 8003740:	6078      	str	r0, [r7, #4]
	int i;
	int * p;
	uint32_t out=0;
 8003742:	2300      	movs	r3, #0
 8003744:	613b      	str	r3, [r7, #16]

	p = &a;
 8003746:	1d3b      	adds	r3, r7, #4
 8003748:	60fb      	str	r3, [r7, #12]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 800374a:	231f      	movs	r3, #31
 800374c:	617b      	str	r3, [r7, #20]
 800374e:	e010      	b.n	8003772 <float_to_binary+0x38>
	{
		out+=((*p) >> i & 1)<<i;
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	681a      	ldr	r2, [r3, #0]
 8003754:	697b      	ldr	r3, [r7, #20]
 8003756:	fa42 f303 	asr.w	r3, r2, r3
 800375a:	f003 0201 	and.w	r2, r3, #1
 800375e:	697b      	ldr	r3, [r7, #20]
 8003760:	fa02 f303 	lsl.w	r3, r2, r3
 8003764:	461a      	mov	r2, r3
 8003766:	693b      	ldr	r3, [r7, #16]
 8003768:	4413      	add	r3, r2
 800376a:	613b      	str	r3, [r7, #16]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 800376c:	697b      	ldr	r3, [r7, #20]
 800376e:	3b01      	subs	r3, #1
 8003770:	617b      	str	r3, [r7, #20]
 8003772:	697b      	ldr	r3, [r7, #20]
 8003774:	2b00      	cmp	r3, #0
 8003776:	daeb      	bge.n	8003750 <float_to_binary+0x16>
	}

	return out;
 8003778:	693b      	ldr	r3, [r7, #16]
}
 800377a:	4618      	mov	r0, r3
 800377c:	371c      	adds	r7, #28
 800377e:	46bd      	mov	sp, r7
 8003780:	bc80      	pop	{r7}
 8003782:	4770      	bx	lr

08003784 <EEPROM_read>:
//==============================================================================================


//==============================================================================================
uint32_t EEPROM_read(uint32_t address_of_read)
{
 8003784:	b480      	push	{r7}
 8003786:	b085      	sub	sp, #20
 8003788:	af00      	add	r7, sp, #0
 800378a:	6078      	str	r0, [r7, #4]
	uint32_t Address;

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8003792:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 8003796:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	4a06      	ldr	r2, [pc, #24]	; (80037b4 <EEPROM_read+0x30>)
 800379c:	4293      	cmp	r3, r2
 800379e:	d301      	bcc.n	80037a4 <EEPROM_read+0x20>
	{
		return 0x00;
 80037a0:	2300      	movs	r3, #0
 80037a2:	e001      	b.n	80037a8 <EEPROM_read+0x24>
	}
	return *(__IO uint32_t *) Address;
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	681b      	ldr	r3, [r3, #0]
}
 80037a8:	4618      	mov	r0, r3
 80037aa:	3714      	adds	r7, #20
 80037ac:	46bd      	mov	sp, r7
 80037ae:	bc80      	pop	{r7}
 80037b0:	4770      	bx	lr
 80037b2:	bf00      	nop
 80037b4:	08082800 	.word	0x08082800

080037b8 <EEPROM_write>:
//==============================================================================================


//==============================================================================================
void EEPROM_write(uint32_t address_of_read, uint32_t data)
{
 80037b8:	b580      	push	{r7, lr}
 80037ba:	b084      	sub	sp, #16
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
 80037c0:	6039      	str	r1, [r7, #0]
	/* Clear all pending flags */
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
	     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80037c8:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 80037cc:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	4a0d      	ldr	r2, [pc, #52]	; (8003808 <EEPROM_write+0x50>)
 80037d2:	4293      	cmp	r3, r2
 80037d4:	d212      	bcs.n	80037fc <EEPROM_write+0x44>
	{
		return;
	}

	HAL_FLASHEx_DATAEEPROM_Unlock();
 80037d6:	f001 ffa5 	bl	8005724 <HAL_FLASHEx_DATAEEPROM_Unlock>
	FLASHStatus = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_WORD, Address, data);
 80037da:	683a      	ldr	r2, [r7, #0]
 80037dc:	68f9      	ldr	r1, [r7, #12]
 80037de:	2002      	movs	r0, #2
 80037e0:	f001 ffbc 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 80037e4:	4603      	mov	r3, r0
 80037e6:	72fb      	strb	r3, [r7, #11]
	HAL_FLASHEx_DATAEEPROM_Lock();
 80037e8:	f001 ffae 	bl	8005748 <HAL_FLASHEx_DATAEEPROM_Lock>

	if(FLASHStatus != HAL_OK)
 80037ec:	7afb      	ldrb	r3, [r7, #11]
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d106      	bne.n	8003800 <EEPROM_write+0x48>
	{
		return;
	}
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);

	if(*(__IO uint32_t *) Address != data)
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	683a      	ldr	r2, [r7, #0]
 80037f8:	429a      	cmp	r2, r3
 80037fa:	e002      	b.n	8003802 <EEPROM_write+0x4a>
		return;
 80037fc:	bf00      	nop
 80037fe:	e000      	b.n	8003802 <EEPROM_write+0x4a>
		return;
 8003800:	bf00      	nop
	{
		return;
	}

}
 8003802:	3710      	adds	r7, #16
 8003804:	46bd      	mov	sp, r7
 8003806:	bd80      	pop	{r7, pc}
 8003808:	08082800 	.word	0x08082800

0800380c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800380c:	b580      	push	{r7, lr}
 800380e:	b08a      	sub	sp, #40	; 0x28
 8003810:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003812:	f107 0314 	add.w	r3, r7, #20
 8003816:	2200      	movs	r2, #0
 8003818:	601a      	str	r2, [r3, #0]
 800381a:	605a      	str	r2, [r3, #4]
 800381c:	609a      	str	r2, [r3, #8]
 800381e:	60da      	str	r2, [r3, #12]
 8003820:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003822:	4b7c      	ldr	r3, [pc, #496]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003824:	69db      	ldr	r3, [r3, #28]
 8003826:	4a7b      	ldr	r2, [pc, #492]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003828:	f043 0304 	orr.w	r3, r3, #4
 800382c:	61d3      	str	r3, [r2, #28]
 800382e:	4b79      	ldr	r3, [pc, #484]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003830:	69db      	ldr	r3, [r3, #28]
 8003832:	f003 0304 	and.w	r3, r3, #4
 8003836:	613b      	str	r3, [r7, #16]
 8003838:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800383a:	4b76      	ldr	r3, [pc, #472]	; (8003a14 <MX_GPIO_Init+0x208>)
 800383c:	69db      	ldr	r3, [r3, #28]
 800383e:	4a75      	ldr	r2, [pc, #468]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003840:	f043 0320 	orr.w	r3, r3, #32
 8003844:	61d3      	str	r3, [r2, #28]
 8003846:	4b73      	ldr	r3, [pc, #460]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003848:	69db      	ldr	r3, [r3, #28]
 800384a:	f003 0320 	and.w	r3, r3, #32
 800384e:	60fb      	str	r3, [r7, #12]
 8003850:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003852:	4b70      	ldr	r3, [pc, #448]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003854:	69db      	ldr	r3, [r3, #28]
 8003856:	4a6f      	ldr	r2, [pc, #444]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003858:	f043 0301 	orr.w	r3, r3, #1
 800385c:	61d3      	str	r3, [r2, #28]
 800385e:	4b6d      	ldr	r3, [pc, #436]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003860:	69db      	ldr	r3, [r3, #28]
 8003862:	f003 0301 	and.w	r3, r3, #1
 8003866:	60bb      	str	r3, [r7, #8]
 8003868:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800386a:	4b6a      	ldr	r3, [pc, #424]	; (8003a14 <MX_GPIO_Init+0x208>)
 800386c:	69db      	ldr	r3, [r3, #28]
 800386e:	4a69      	ldr	r2, [pc, #420]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003870:	f043 0302 	orr.w	r3, r3, #2
 8003874:	61d3      	str	r3, [r2, #28]
 8003876:	4b67      	ldr	r3, [pc, #412]	; (8003a14 <MX_GPIO_Init+0x208>)
 8003878:	69db      	ldr	r3, [r3, #28]
 800387a:	f003 0302 	and.w	r3, r3, #2
 800387e:	607b      	str	r3, [r7, #4]
 8003880:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 8003882:	2200      	movs	r2, #0
 8003884:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003888:	4863      	ldr	r0, [pc, #396]	; (8003a18 <MX_GPIO_Init+0x20c>)
 800388a:	f002 f965 	bl	8005b58 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, GPIO_PIN_SET);
 800388e:	2201      	movs	r2, #1
 8003890:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003894:	4860      	ldr	r0, [pc, #384]	; (8003a18 <MX_GPIO_Init+0x20c>)
 8003896:	f002 f95f 	bl	8005b58 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 800389a:	2201      	movs	r2, #1
 800389c:	f248 011f 	movw	r1, #32799	; 0x801f
 80038a0:	485e      	ldr	r0, [pc, #376]	; (8003a1c <MX_GPIO_Init+0x210>)
 80038a2:	f002 f959 	bl	8005b58 <HAL_GPIO_WritePin>
                          |DAC_SYNC_Pin|DAC_CLR_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RS_Pin|Display_Power_Pin, GPIO_PIN_RESET);
 80038a6:	2200      	movs	r2, #0
 80038a8:	f640 0101 	movw	r1, #2049	; 0x801
 80038ac:	485c      	ldr	r0, [pc, #368]	; (8003a20 <MX_GPIO_Init+0x214>)
 80038ae:	f002 f953 	bl	8005b58 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|SPI2_NSS_Pin
 80038b2:	2201      	movs	r2, #1
 80038b4:	f241 413e 	movw	r1, #5182	; 0x143e
 80038b8:	4859      	ldr	r0, [pc, #356]	; (8003a20 <MX_GPIO_Init+0x214>)
 80038ba:	f002 f94d 	bl	8005b58 <HAL_GPIO_WritePin>
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Start_button_Pin;
 80038be:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80038c2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80038c4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80038c8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80038ca:	2301      	movs	r3, #1
 80038cc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Start_button_GPIO_Port, &GPIO_InitStruct);
 80038ce:	f107 0314 	add.w	r3, r7, #20
 80038d2:	4619      	mov	r1, r3
 80038d4:	4850      	ldr	r0, [pc, #320]	; (8003a18 <MX_GPIO_Init+0x20c>)
 80038d6:	f002 f84f 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Count_EN_Pin;
 80038da:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80038de:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80038e0:	2301      	movs	r3, #1
 80038e2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80038e4:	2300      	movs	r3, #0
 80038e6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80038e8:	2302      	movs	r3, #2
 80038ea:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Count_EN_GPIO_Port, &GPIO_InitStruct);
 80038ec:	f107 0314 	add.w	r3, r7, #20
 80038f0:	4619      	mov	r1, r3
 80038f2:	4849      	ldr	r0, [pc, #292]	; (8003a18 <MX_GPIO_Init+0x20c>)
 80038f4:	f002 f840 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Relay_cs_Pin;
 80038f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80038fc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80038fe:	2301      	movs	r3, #1
 8003900:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003902:	2300      	movs	r3, #0
 8003904:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003906:	2303      	movs	r3, #3
 8003908:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Relay_cs_GPIO_Port, &GPIO_InitStruct);
 800390a:	f107 0314 	add.w	r3, r7, #20
 800390e:	4619      	mov	r1, r3
 8003910:	4841      	ldr	r0, [pc, #260]	; (8003a18 <MX_GPIO_Init+0x20c>)
 8003912:	f002 f831 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin
                           PAPin */
  GPIO_InitStruct.Pin = Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 8003916:	f248 030f 	movw	r3, #32783	; 0x800f
 800391a:	617b      	str	r3, [r7, #20]
                          |DAC_CLR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800391c:	2301      	movs	r3, #1
 800391e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003920:	2300      	movs	r3, #0
 8003922:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003924:	2303      	movs	r3, #3
 8003926:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003928:	f107 0314 	add.w	r3, r7, #20
 800392c:	4619      	mov	r1, r3
 800392e:	483b      	ldr	r0, [pc, #236]	; (8003a1c <MX_GPIO_Init+0x210>)
 8003930:	f002 f822 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_SYNC_Pin;
 8003934:	2310      	movs	r3, #16
 8003936:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003938:	2301      	movs	r3, #1
 800393a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800393c:	2301      	movs	r3, #1
 800393e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003940:	2303      	movs	r3, #3
 8003942:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DAC_SYNC_GPIO_Port, &GPIO_InitStruct);
 8003944:	f107 0314 	add.w	r3, r7, #20
 8003948:	4619      	mov	r1, r3
 800394a:	4834      	ldr	r0, [pc, #208]	; (8003a1c <MX_GPIO_Init+0x210>)
 800394c:	f002 f814 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Display_RS_Pin;
 8003950:	2301      	movs	r3, #1
 8003952:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003954:	2301      	movs	r3, #1
 8003956:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003958:	2300      	movs	r3, #0
 800395a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800395c:	2302      	movs	r3, #2
 800395e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Display_RS_GPIO_Port, &GPIO_InitStruct);
 8003960:	f107 0314 	add.w	r3, r7, #20
 8003964:	4619      	mov	r1, r3
 8003966:	482e      	ldr	r0, [pc, #184]	; (8003a20 <MX_GPIO_Init+0x214>)
 8003968:	f002 f806 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin
                           PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|Display_Power_Pin
 800396c:	f640 433e 	movw	r3, #3134	; 0xc3e
 8003970:	617b      	str	r3, [r7, #20]
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8003972:	2311      	movs	r3, #17
 8003974:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003976:	2300      	movs	r3, #0
 8003978:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800397a:	2302      	movs	r3, #2
 800397c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800397e:	f107 0314 	add.w	r3, r7, #20
 8003982:	4619      	mov	r1, r3
 8003984:	4826      	ldr	r0, [pc, #152]	; (8003a20 <MX_GPIO_Init+0x214>)
 8003986:	f001 fff7 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI2_NSS_Pin;
 800398a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800398e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003990:	2301      	movs	r3, #1
 8003992:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003994:	2300      	movs	r3, #0
 8003996:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003998:	2303      	movs	r3, #3
 800399a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI2_NSS_GPIO_Port, &GPIO_InitStruct);
 800399c:	f107 0314 	add.w	r3, r7, #20
 80039a0:	4619      	mov	r1, r3
 80039a2:	481f      	ldr	r0, [pc, #124]	; (8003a20 <MX_GPIO_Init+0x214>)
 80039a4:	f001 ffe8 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Encode_Push_Pin;
 80039a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039ac:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80039ae:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80039b2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80039b4:	2301      	movs	r3, #1
 80039b6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Encode_Push_GPIO_Port, &GPIO_InitStruct);
 80039b8:	f107 0314 	add.w	r3, r7, #20
 80039bc:	4619      	mov	r1, r3
 80039be:	4817      	ldr	r0, [pc, #92]	; (8003a1c <MX_GPIO_Init+0x210>)
 80039c0:	f001 ffda 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = CPU_IRQ_Pin;
 80039c4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80039c8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80039ca:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80039ce:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039d0:	2300      	movs	r3, #0
 80039d2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(CPU_IRQ_GPIO_Port, &GPIO_InitStruct);
 80039d4:	f107 0314 	add.w	r3, r7, #20
 80039d8:	4619      	mov	r1, r3
 80039da:	4810      	ldr	r0, [pc, #64]	; (8003a1c <MX_GPIO_Init+0x210>)
 80039dc:	f001 ffcc 	bl	8005978 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_ALARM_Pin;
 80039e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80039e4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80039e6:	2300      	movs	r3, #0
 80039e8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80039ea:	2301      	movs	r3, #1
 80039ec:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DAC_ALARM_GPIO_Port, &GPIO_InitStruct);
 80039ee:	f107 0314 	add.w	r3, r7, #20
 80039f2:	4619      	mov	r1, r3
 80039f4:	4809      	ldr	r0, [pc, #36]	; (8003a1c <MX_GPIO_Init+0x210>)
 80039f6:	f001 ffbf 	bl	8005978 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 80039fa:	2200      	movs	r2, #0
 80039fc:	2101      	movs	r1, #1
 80039fe:	2028      	movs	r0, #40	; 0x28
 8003a00:	f001 fd7e 	bl	8005500 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8003a04:	2028      	movs	r0, #40	; 0x28
 8003a06:	f001 fdb9 	bl	800557c <HAL_NVIC_EnableIRQ>

}
 8003a0a:	bf00      	nop
 8003a0c:	3728      	adds	r7, #40	; 0x28
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	bd80      	pop	{r7, pc}
 8003a12:	bf00      	nop
 8003a14:	40023800 	.word	0x40023800
 8003a18:	40020800 	.word	0x40020800
 8003a1c:	40020000 	.word	0x40020000
 8003a20:	40020400 	.word	0x40020400

08003a24 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8003a24:	b580      	push	{r7, lr}
 8003a26:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8003a28:	4b12      	ldr	r3, [pc, #72]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a2a:	4a13      	ldr	r2, [pc, #76]	; (8003a78 <MX_I2C1_Init+0x54>)
 8003a2c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8003a2e:	4b11      	ldr	r3, [pc, #68]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a30:	4a12      	ldr	r2, [pc, #72]	; (8003a7c <MX_I2C1_Init+0x58>)
 8003a32:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003a34:	4b0f      	ldr	r3, [pc, #60]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a36:	2200      	movs	r2, #0
 8003a38:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8003a3a:	4b0e      	ldr	r3, [pc, #56]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003a40:	4b0c      	ldr	r3, [pc, #48]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a42:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003a46:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003a48:	4b0a      	ldr	r3, [pc, #40]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a4a:	2200      	movs	r2, #0
 8003a4c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8003a4e:	4b09      	ldr	r3, [pc, #36]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a50:	2200      	movs	r2, #0
 8003a52:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003a54:	4b07      	ldr	r3, [pc, #28]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a56:	2200      	movs	r2, #0
 8003a58:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003a5a:	4b06      	ldr	r3, [pc, #24]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a5c:	2200      	movs	r2, #0
 8003a5e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003a60:	4804      	ldr	r0, [pc, #16]	; (8003a74 <MX_I2C1_Init+0x50>)
 8003a62:	f002 f889 	bl	8005b78 <HAL_I2C_Init>
 8003a66:	4603      	mov	r3, r0
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d001      	beq.n	8003a70 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003a6c:	f001 f83e 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003a70:	bf00      	nop
 8003a72:	bd80      	pop	{r7, pc}
 8003a74:	20000670 	.word	0x20000670
 8003a78:	40005400 	.word	0x40005400
 8003a7c:	000186a0 	.word	0x000186a0

08003a80 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8003a80:	b580      	push	{r7, lr}
 8003a82:	b08a      	sub	sp, #40	; 0x28
 8003a84:	af00      	add	r7, sp, #0
 8003a86:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003a88:	f107 0314 	add.w	r3, r7, #20
 8003a8c:	2200      	movs	r2, #0
 8003a8e:	601a      	str	r2, [r3, #0]
 8003a90:	605a      	str	r2, [r3, #4]
 8003a92:	609a      	str	r2, [r3, #8]
 8003a94:	60da      	str	r2, [r3, #12]
 8003a96:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	681b      	ldr	r3, [r3, #0]
 8003a9c:	4a17      	ldr	r2, [pc, #92]	; (8003afc <HAL_I2C_MspInit+0x7c>)
 8003a9e:	4293      	cmp	r3, r2
 8003aa0:	d128      	bne.n	8003af4 <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003aa2:	4b17      	ldr	r3, [pc, #92]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003aa4:	69db      	ldr	r3, [r3, #28]
 8003aa6:	4a16      	ldr	r2, [pc, #88]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003aa8:	f043 0302 	orr.w	r3, r3, #2
 8003aac:	61d3      	str	r3, [r2, #28]
 8003aae:	4b14      	ldr	r3, [pc, #80]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003ab0:	69db      	ldr	r3, [r3, #28]
 8003ab2:	f003 0302 	and.w	r3, r3, #2
 8003ab6:	613b      	str	r3, [r7, #16]
 8003ab8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = TMP117_SCL_Pin|TMP117_SDA_Pin;
 8003aba:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003abe:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003ac0:	2312      	movs	r3, #18
 8003ac2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003ac4:	2301      	movs	r3, #1
 8003ac6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003ac8:	2303      	movs	r3, #3
 8003aca:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003acc:	2304      	movs	r3, #4
 8003ace:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003ad0:	f107 0314 	add.w	r3, r7, #20
 8003ad4:	4619      	mov	r1, r3
 8003ad6:	480b      	ldr	r0, [pc, #44]	; (8003b04 <HAL_I2C_MspInit+0x84>)
 8003ad8:	f001 ff4e 	bl	8005978 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003adc:	4b08      	ldr	r3, [pc, #32]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003ade:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ae0:	4a07      	ldr	r2, [pc, #28]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003ae2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003ae6:	6253      	str	r3, [r2, #36]	; 0x24
 8003ae8:	4b05      	ldr	r3, [pc, #20]	; (8003b00 <HAL_I2C_MspInit+0x80>)
 8003aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003af0:	60fb      	str	r3, [r7, #12]
 8003af2:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8003af4:	bf00      	nop
 8003af6:	3728      	adds	r7, #40	; 0x28
 8003af8:	46bd      	mov	sp, r7
 8003afa:	bd80      	pop	{r7, pc}
 8003afc:	40005400 	.word	0x40005400
 8003b00:	40023800 	.word	0x40023800
 8003b04:	40020400 	.word	0x40020400

08003b08 <USB_rx_command_buffer_push_refd>:
uint8_t eta_hours,eta_minute,eta_second;

int16_t Enc_Counter = 0;
uint32_t Display_timeout=0;

CIRC_GBUF_DEF(uint8_t, USB_rx_command_buffer, 30);
 8003b08:	b580      	push	{r7, lr}
 8003b0a:	b082      	sub	sp, #8
 8003b0c:	af00      	add	r7, sp, #0
 8003b0e:	6078      	str	r0, [r7, #4]
 8003b10:	6879      	ldr	r1, [r7, #4]
 8003b12:	4804      	ldr	r0, [pc, #16]	; (8003b24 <USB_rx_command_buffer_push_refd+0x1c>)
 8003b14:	f7fd fd4c 	bl	80015b0 <__circ_gbuf_push>
 8003b18:	4603      	mov	r3, r0
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	3708      	adds	r7, #8
 8003b1e:	46bd      	mov	sp, r7
 8003b20:	bd80      	pop	{r7, pc}
 8003b22:	bf00      	nop
 8003b24:	20000000 	.word	0x20000000

08003b28 <USB_rx_command_buffer_pop_refd>:
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b082      	sub	sp, #8
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
 8003b30:	2200      	movs	r2, #0
 8003b32:	6879      	ldr	r1, [r7, #4]
 8003b34:	4803      	ldr	r0, [pc, #12]	; (8003b44 <USB_rx_command_buffer_pop_refd+0x1c>)
 8003b36:	f7fd fce9 	bl	800150c <__circ_gbuf_pop>
 8003b3a:	4603      	mov	r3, r0
 8003b3c:	4618      	mov	r0, r3
 8003b3e:	3708      	adds	r7, #8
 8003b40:	46bd      	mov	sp, r7
 8003b42:	bd80      	pop	{r7, pc}
 8003b44:	20000000 	.word	0x20000000

08003b48 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003b48:	b590      	push	{r4, r7, lr}
 8003b4a:	b095      	sub	sp, #84	; 0x54
 8003b4c:	af12      	add	r7, sp, #72	; 0x48
  /* USER CODE BEGIN 1 */
	cfg.PDN=0; // DAC power up
 8003b4e:	4b7d      	ldr	r3, [pc, #500]	; (8003d44 <main+0x1fc>)
 8003b50:	2200      	movs	r2, #0
 8003b52:	721a      	strb	r2, [r3, #8]
	cfg.VREFVAL=0x08; // 20 V ± 1.25 V
 8003b54:	4b7b      	ldr	r3, [pc, #492]	; (8003d44 <main+0x1fc>)
 8003b56:	2208      	movs	r2, #8
 8003b58:	71da      	strb	r2, [r3, #7]
	cfg.FSET=1; // Enhanced THD
 8003b5a:	4b7a      	ldr	r3, [pc, #488]	; (8003d44 <main+0x1fc>)
 8003b5c:	2201      	movs	r2, #1
 8003b5e:	719a      	strb	r2, [r3, #6]
	cfg.DSDO=1; // SDO enabled
 8003b60:	4b78      	ldr	r3, [pc, #480]	; (8003d44 <main+0x1fc>)
 8003b62:	2201      	movs	r2, #1
 8003b64:	715a      	strb	r2, [r3, #5]
	cfg.ENALMP=0; // Indicates end of temperature calibration cycle. ALARM pin pulled low
 8003b66:	4b77      	ldr	r3, [pc, #476]	; (8003d44 <main+0x1fc>)
 8003b68:	2200      	movs	r2, #0
 8003b6a:	711a      	strb	r2, [r3, #4]
	cfg.FSDO=0; // Fast SDO disabled
 8003b6c:	4b75      	ldr	r3, [pc, #468]	; (8003d44 <main+0x1fc>)
 8003b6e:	2200      	movs	r2, #0
 8003b70:	70da      	strb	r2, [r3, #3]
	cfg.LDACMODE=0; // DAC *NOT* updated on LDAC !!!!falling edge!!!!
 8003b72:	4b74      	ldr	r3, [pc, #464]	; (8003d44 <main+0x1fc>)
 8003b74:	2200      	movs	r2, #0
 8003b76:	709a      	strb	r2, [r3, #2]
	cfg.TNH_MASK=0x00; // This bit is writable only when FSET = 0
 8003b78:	4b72      	ldr	r3, [pc, #456]	; (8003d44 <main+0x1fc>)
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	705a      	strb	r2, [r3, #1]
	cfg.EN_TMP_CAL=0; // Temperature calibration feature enabled
 8003b7e:	4b71      	ldr	r3, [pc, #452]	; (8003d44 <main+0x1fc>)
 8003b80:	2200      	movs	r2, #0
 8003b82:	701a      	strb	r2, [r3, #0]

	DAC_target_speed=0.1; //  V/s
 8003b84:	4b70      	ldr	r3, [pc, #448]	; (8003d48 <main+0x200>)
 8003b86:	4a71      	ldr	r2, [pc, #452]	; (8003d4c <main+0x204>)
 8003b88:	601a      	str	r2, [r3, #0]
	DAC_code=DAC_CODE_MIDDLE;
 8003b8a:	4b71      	ldr	r3, [pc, #452]	; (8003d50 <main+0x208>)
 8003b8c:	4a71      	ldr	r2, [pc, #452]	; (8003d54 <main+0x20c>)
 8003b8e:	601a      	str	r2, [r3, #0]
	DAC_code_direction=DIRECTION_UP_STATE;
 8003b90:	4b71      	ldr	r3, [pc, #452]	; (8003d58 <main+0x210>)
 8003b92:	2201      	movs	r2, #1
 8003b94:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003b96:	f001 fc6d 	bl	8005474 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003b9a:	f000 f8ff 	bl	8003d9c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003b9e:	f7ff fe35 	bl	800380c <MX_GPIO_Init>
  MX_SPI1_Init();
 8003ba2:	f000 ffa9 	bl	8004af8 <MX_SPI1_Init>
  MX_SPI2_Init();
 8003ba6:	f000 ffdb 	bl	8004b60 <MX_SPI2_Init>
  MX_USB_DEVICE_Init();
 8003baa:	f006 fb7b 	bl	800a2a4 <MX_USB_DEVICE_Init>
  MX_TIM3_Init();
 8003bae:	f001 fa51 	bl	8005054 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003bb2:	f001 fa9d 	bl	80050f0 <MX_TIM4_Init>
  MX_I2C1_Init();
 8003bb6:	f7ff ff35 	bl	8003a24 <MX_I2C1_Init>
  MX_TIM2_Init();
 8003bba:	f001 f9ff 	bl	8004fbc <MX_TIM2_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8003bbe:	f000 f939 	bl	8003e34 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */

	init_LCD();
 8003bc2:	f7fe fcd5 	bl	8002570 <init_LCD>
  LcdUpdate();
  LcdClear_massive();
  HAL_Delay(3000); //WarmUP
	 */

	load_data_from_EEPROM();
 8003bc6:	f7ff fcff 	bl	80035c8 <load_data_from_EEPROM>
	TMP117_Initialization(hi2c1);
 8003bca:	4c64      	ldr	r4, [pc, #400]	; (8003d5c <main+0x214>)
 8003bcc:	4668      	mov	r0, sp
 8003bce:	f104 0310 	add.w	r3, r4, #16
 8003bd2:	2244      	movs	r2, #68	; 0x44
 8003bd4:	4619      	mov	r1, r3
 8003bd6:	f006 fed5 	bl	800a984 <memcpy>
 8003bda:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003bde:	f001 fbcb 	bl	8005378 <TMP117_Initialization>
	DDS_Init();
 8003be2:	f7fe f8f5 	bl	8001dd0 <DDS_Init>
	DAC_SendInit();
 8003be6:	f7fd febf 	bl	8001968 <DAC_SendInit>
	DAC_Write(DAC_code);
 8003bea:	4b59      	ldr	r3, [pc, #356]	; (8003d50 <main+0x208>)
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	4618      	mov	r0, r3
 8003bf0:	f7fd fe7a 	bl	80018e8 <DAC_Write>

	HAL_TIM_Base_Start_IT(&htim3);
 8003bf4:	485a      	ldr	r0, [pc, #360]	; (8003d60 <main+0x218>)
 8003bf6:	f004 fcf9 	bl	80085ec <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim2);
 8003bfa:	485a      	ldr	r0, [pc, #360]	; (8003d64 <main+0x21c>)
 8003bfc:	f004 fcf6 	bl	80085ec <HAL_TIM_Base_Start_IT>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8003c00:	213c      	movs	r1, #60	; 0x3c
 8003c02:	4859      	ldr	r0, [pc, #356]	; (8003d68 <main+0x220>)
 8003c04:	f004 fd9a 	bl	800873c <HAL_TIM_Encoder_Start>


	output_state(Output_off_STATE);
 8003c08:	2000      	movs	r0, #0
 8003c0a:	f7fe fdbb 	bl	8002784 <output_state>
	CPLD_control(CPLD_OFF_STATE);
 8003c0e:	2000      	movs	r0, #0
 8003c10:	f7fd fdd6 	bl	80017c0 <CPLD_control>

	send_answer_to_CDC(CLEAR_TYPE_1);
 8003c14:	2004      	movs	r0, #4
 8003c16:	f7ff f8cd 	bl	8002db4 <send_answer_to_CDC>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		if(USB_CDC_End_Line_Received)
 8003c1a:	4b54      	ldr	r3, [pc, #336]	; (8003d6c <main+0x224>)
 8003c1c:	781b      	ldrb	r3, [r3, #0]
 8003c1e:	b2db      	uxtb	r3, r3
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d028      	beq.n	8003c76 <main+0x12e>
		{
			uint8_t i=0;
 8003c24:	2300      	movs	r3, #0
 8003c26:	71fb      	strb	r3, [r7, #7]
			USB_CDC_End_Line_Received=0;
 8003c28:	4b50      	ldr	r3, [pc, #320]	; (8003d6c <main+0x224>)
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	701a      	strb	r2, [r3, #0]
			while (1) {
				if (CIRC_GBUF_POP(USB_rx_command_buffer,&command_buffer[i])) command_buffer[i]='\n';
 8003c2e:	79fb      	ldrb	r3, [r7, #7]
 8003c30:	4a4f      	ldr	r2, [pc, #316]	; (8003d70 <main+0x228>)
 8003c32:	4413      	add	r3, r2
 8003c34:	4618      	mov	r0, r3
 8003c36:	f7ff ff77 	bl	8003b28 <USB_rx_command_buffer_pop_refd>
 8003c3a:	4603      	mov	r3, r0
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d003      	beq.n	8003c48 <main+0x100>
 8003c40:	79fb      	ldrb	r3, [r7, #7]
 8003c42:	4a4b      	ldr	r2, [pc, #300]	; (8003d70 <main+0x228>)
 8003c44:	210a      	movs	r1, #10
 8003c46:	54d1      	strb	r1, [r2, r3]
				if (command_buffer[i]=='\n' || command_buffer[i]=='\r') break;
 8003c48:	79fb      	ldrb	r3, [r7, #7]
 8003c4a:	4a49      	ldr	r2, [pc, #292]	; (8003d70 <main+0x228>)
 8003c4c:	5cd3      	ldrb	r3, [r2, r3]
 8003c4e:	2b0a      	cmp	r3, #10
 8003c50:	d008      	beq.n	8003c64 <main+0x11c>
 8003c52:	79fb      	ldrb	r3, [r7, #7]
 8003c54:	4a46      	ldr	r2, [pc, #280]	; (8003d70 <main+0x228>)
 8003c56:	5cd3      	ldrb	r3, [r2, r3]
 8003c58:	2b0d      	cmp	r3, #13
 8003c5a:	d003      	beq.n	8003c64 <main+0x11c>
				i++;
 8003c5c:	79fb      	ldrb	r3, [r7, #7]
 8003c5e:	3301      	adds	r3, #1
 8003c60:	71fb      	strb	r3, [r7, #7]
				if (CIRC_GBUF_POP(USB_rx_command_buffer,&command_buffer[i])) command_buffer[i]='\n';
 8003c62:	e7e4      	b.n	8003c2e <main+0xe6>
			}
			Parsing_USB_command();
 8003c64:	f000 f91e 	bl	8003ea4 <Parsing_USB_command>
			if(Display_status==0)Display_need_wakeup=1;
 8003c68:	4b42      	ldr	r3, [pc, #264]	; (8003d74 <main+0x22c>)
 8003c6a:	781b      	ldrb	r3, [r3, #0]
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d102      	bne.n	8003c76 <main+0x12e>
 8003c70:	4b41      	ldr	r3, [pc, #260]	; (8003d78 <main+0x230>)
 8003c72:	2201      	movs	r2, #1
 8003c74:	701a      	strb	r2, [r3, #0]
		}

		if(Need_update_DDS)
 8003c76:	4b41      	ldr	r3, [pc, #260]	; (8003d7c <main+0x234>)
 8003c78:	781b      	ldrb	r3, [r3, #0]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d00d      	beq.n	8003c9a <main+0x152>
		{
			if(Ramp_dac_step_complete)
 8003c7e:	4b40      	ldr	r3, [pc, #256]	; (8003d80 <main+0x238>)
 8003c80:	781b      	ldrb	r3, [r3, #0]
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d007      	beq.n	8003c96 <main+0x14e>
			{
				DDS_Update();
 8003c86:	f7fe f97f 	bl	8001f88 <DDS_Update>
				Need_update_DDS=0;
 8003c8a:	4b3c      	ldr	r3, [pc, #240]	; (8003d7c <main+0x234>)
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	701a      	strb	r2, [r3, #0]
				Ramp_dac_step_complete=0;
 8003c90:	4b3b      	ldr	r3, [pc, #236]	; (8003d80 <main+0x238>)
 8003c92:	2200      	movs	r2, #0
 8003c94:	701a      	strb	r2, [r3, #0]
			}
			DDS_Calculation();
 8003c96:	f7fd ff5f 	bl	8001b58 <DDS_Calculation>
			//Recalculate_ramp_speed(SWEEP_MODE);

		}
		if(Need_update_Display && Display_status)
 8003c9a:	4b3a      	ldr	r3, [pc, #232]	; (8003d84 <main+0x23c>)
 8003c9c:	781b      	ldrb	r3, [r3, #0]
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d01e      	beq.n	8003ce0 <main+0x198>
 8003ca2:	4b34      	ldr	r3, [pc, #208]	; (8003d74 <main+0x22c>)
 8003ca4:	781b      	ldrb	r3, [r3, #0]
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d01a      	beq.n	8003ce0 <main+0x198>
		{
			switch(mode)
 8003caa:	4b37      	ldr	r3, [pc, #220]	; (8003d88 <main+0x240>)
 8003cac:	781b      	ldrb	r3, [r3, #0]
 8003cae:	2b05      	cmp	r3, #5
 8003cb0:	d00e      	beq.n	8003cd0 <main+0x188>
 8003cb2:	2b05      	cmp	r3, #5
 8003cb4:	dc10      	bgt.n	8003cd8 <main+0x190>
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d002      	beq.n	8003cc0 <main+0x178>
 8003cba:	2b04      	cmp	r3, #4
 8003cbc:	d004      	beq.n	8003cc8 <main+0x180>
 8003cbe:	e00b      	b.n	8003cd8 <main+0x190>
			{
			//----------------------------------------------------------//
			case dU_dt_SCREEN:
				display_screen(dU_dt_SCREEN);
 8003cc0:	2000      	movs	r0, #0
 8003cc2:	f7fe fe71 	bl	80029a8 <display_screen>
			break;
 8003cc6:	e007      	b.n	8003cd8 <main+0x190>
			case AMP_SCREEN:
				display_screen(AMP_SCREEN);
 8003cc8:	2004      	movs	r0, #4
 8003cca:	f7fe fe6d 	bl	80029a8 <display_screen>
			break;
 8003cce:	e003      	b.n	8003cd8 <main+0x190>
			case VOLT_SCREEN:
				display_screen(VOLT_SCREEN);
 8003cd0:	2005      	movs	r0, #5
 8003cd2:	f7fe fe69 	bl	80029a8 <display_screen>
			break;
 8003cd6:	bf00      	nop
			}

			LcdUpdate();
 8003cd8:	f7fe fa1e 	bl	8002118 <LcdUpdate>
			LcdClear_massive();
 8003cdc:	f7fe fa56 	bl	800218c <LcdClear_massive>
		}
		if(Display_need_wakeup)
 8003ce0:	4b25      	ldr	r3, [pc, #148]	; (8003d78 <main+0x230>)
 8003ce2:	781b      	ldrb	r3, [r3, #0]
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d00b      	beq.n	8003d00 <main+0x1b8>
		{
			Display_need_wakeup=0;
 8003ce8:	4b23      	ldr	r3, [pc, #140]	; (8003d78 <main+0x230>)
 8003cea:	2200      	movs	r2, #0
 8003cec:	701a      	strb	r2, [r3, #0]
			Poweron_LCD();
 8003cee:	f7fe fc2d 	bl	800254c <Poweron_LCD>
			Display_timeout=0;
 8003cf2:	4b26      	ldr	r3, [pc, #152]	; (8003d8c <main+0x244>)
 8003cf4:	2200      	movs	r2, #0
 8003cf6:	601a      	str	r2, [r3, #0]
			Need_update_Display=1;
 8003cf8:	4b22      	ldr	r3, [pc, #136]	; (8003d84 <main+0x23c>)
 8003cfa:	2201      	movs	r2, #1
 8003cfc:	701a      	strb	r2, [r3, #0]
 8003cfe:	e78c      	b.n	8003c1a <main+0xd2>
		} else
		{
			if(Display_status==1) // If display on
 8003d00:	4b1c      	ldr	r3, [pc, #112]	; (8003d74 <main+0x22c>)
 8003d02:	781b      	ldrb	r3, [r3, #0]
 8003d04:	2b01      	cmp	r3, #1
 8003d06:	d119      	bne.n	8003d3c <main+0x1f4>
			{
				// 1 hour timeout if output is off
				// 1 day timeout if output is on
				if((Display_timeout>72000 && Current_output_status==Output_off_STATE) || (Display_timeout>1728000 && Current_output_status!=Output_off_STATE))
 8003d08:	4b20      	ldr	r3, [pc, #128]	; (8003d8c <main+0x244>)
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	4a20      	ldr	r2, [pc, #128]	; (8003d90 <main+0x248>)
 8003d0e:	4293      	cmp	r3, r2
 8003d10:	d903      	bls.n	8003d1a <main+0x1d2>
 8003d12:	4b20      	ldr	r3, [pc, #128]	; (8003d94 <main+0x24c>)
 8003d14:	781b      	ldrb	r3, [r3, #0]
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d00a      	beq.n	8003d30 <main+0x1e8>
 8003d1a:	4b1c      	ldr	r3, [pc, #112]	; (8003d8c <main+0x244>)
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	4a1e      	ldr	r2, [pc, #120]	; (8003d98 <main+0x250>)
 8003d20:	4293      	cmp	r3, r2
 8003d22:	f67f af7a 	bls.w	8003c1a <main+0xd2>
 8003d26:	4b1b      	ldr	r3, [pc, #108]	; (8003d94 <main+0x24c>)
 8003d28:	781b      	ldrb	r3, [r3, #0]
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	f43f af75 	beq.w	8003c1a <main+0xd2>
				{
					Poweroff_LCD();
 8003d30:	f7fe fbfa 	bl	8002528 <Poweroff_LCD>
					Display_timeout=0;
 8003d34:	4b15      	ldr	r3, [pc, #84]	; (8003d8c <main+0x244>)
 8003d36:	2200      	movs	r2, #0
 8003d38:	601a      	str	r2, [r3, #0]
 8003d3a:	e76e      	b.n	8003c1a <main+0xd2>
				}
			} else Display_timeout=0;
 8003d3c:	4b13      	ldr	r3, [pc, #76]	; (8003d8c <main+0x244>)
 8003d3e:	2200      	movs	r2, #0
 8003d40:	601a      	str	r2, [r3, #0]
		if(USB_CDC_End_Line_Received)
 8003d42:	e76a      	b.n	8003c1a <main+0xd2>
 8003d44:	20000730 	.word	0x20000730
 8003d48:	20000744 	.word	0x20000744
 8003d4c:	3dcccccd 	.word	0x3dcccccd
 8003d50:	20000760 	.word	0x20000760
 8003d54:	0007ffff 	.word	0x0007ffff
 8003d58:	20000764 	.word	0x20000764
 8003d5c:	20000670 	.word	0x20000670
 8003d60:	20000860 	.word	0x20000860
 8003d64:	20000820 	.word	0x20000820
 8003d68:	200008a0 	.word	0x200008a0
 8003d6c:	2000064c 	.word	0x2000064c
 8003d70:	20000650 	.word	0x20000650
 8003d74:	20000766 	.word	0x20000766
 8003d78:	2000001c 	.word	0x2000001c
 8003d7c:	20000768 	.word	0x20000768
 8003d80:	20000769 	.word	0x20000769
 8003d84:	20000767 	.word	0x20000767
 8003d88:	20000748 	.word	0x20000748
 8003d8c:	20000704 	.word	0x20000704
 8003d90:	00011940 	.word	0x00011940
 8003d94:	2000075c 	.word	0x2000075c
 8003d98:	001a5e00 	.word	0x001a5e00

08003d9c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003d9c:	b580      	push	{r7, lr}
 8003d9e:	b092      	sub	sp, #72	; 0x48
 8003da0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003da2:	f107 0314 	add.w	r3, r7, #20
 8003da6:	2234      	movs	r2, #52	; 0x34
 8003da8:	2100      	movs	r1, #0
 8003daa:	4618      	mov	r0, r3
 8003dac:	f006 fdf8 	bl	800a9a0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003db0:	463b      	mov	r3, r7
 8003db2:	2200      	movs	r2, #0
 8003db4:	601a      	str	r2, [r3, #0]
 8003db6:	605a      	str	r2, [r3, #4]
 8003db8:	609a      	str	r2, [r3, #8]
 8003dba:	60da      	str	r2, [r3, #12]
 8003dbc:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003dbe:	4b1c      	ldr	r3, [pc, #112]	; (8003e30 <SystemClock_Config+0x94>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8003dc6:	4a1a      	ldr	r2, [pc, #104]	; (8003e30 <SystemClock_Config+0x94>)
 8003dc8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003dcc:	6013      	str	r3, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003dce:	2301      	movs	r3, #1
 8003dd0:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003dd6:	2302      	movs	r3, #2
 8003dd8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003dda:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003dde:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8003de0:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8003de4:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 8003de6:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8003dea:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003dec:	f107 0314 	add.w	r3, r7, #20
 8003df0:	4618      	mov	r0, r3
 8003df2:	f003 faf1 	bl	80073d8 <HAL_RCC_OscConfig>
 8003df6:	4603      	mov	r3, r0
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d001      	beq.n	8003e00 <SystemClock_Config+0x64>
  {
    Error_Handler();
 8003dfc:	f000 fe76 	bl	8004aec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003e00:	230f      	movs	r3, #15
 8003e02:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003e04:	2303      	movs	r3, #3
 8003e06:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003e08:	2300      	movs	r3, #0
 8003e0a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003e0c:	2300      	movs	r3, #0
 8003e0e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003e10:	2300      	movs	r3, #0
 8003e12:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003e14:	463b      	mov	r3, r7
 8003e16:	2101      	movs	r1, #1
 8003e18:	4618      	mov	r0, r3
 8003e1a:	f003 fd3d 	bl	8007898 <HAL_RCC_ClockConfig>
 8003e1e:	4603      	mov	r3, r0
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d001      	beq.n	8003e28 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8003e24:	f000 fe62 	bl	8004aec <Error_Handler>
  }
}
 8003e28:	bf00      	nop
 8003e2a:	3748      	adds	r7, #72	; 0x48
 8003e2c:	46bd      	mov	sp, r7
 8003e2e:	bd80      	pop	{r7, pc}
 8003e30:	40007000 	.word	0x40007000

08003e34 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8003e34:	b580      	push	{r7, lr}
 8003e36:	af00      	add	r7, sp, #0
  /* EXTI9_5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8003e38:	2200      	movs	r2, #0
 8003e3a:	2100      	movs	r1, #0
 8003e3c:	2017      	movs	r0, #23
 8003e3e:	f001 fb5f 	bl	8005500 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8003e42:	2017      	movs	r0, #23
 8003e44:	f001 fb9a 	bl	800557c <HAL_NVIC_EnableIRQ>
}
 8003e48:	bf00      	nop
 8003e4a:	bd80      	pop	{r7, pc}

08003e4c <HAL_TIM_PeriodElapsedCallback>:
//==============================================================================================


// Callback: timer has rolled over
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003e4c:	b480      	push	{r7}
 8003e4e:	b083      	sub	sp, #12
 8003e50:	af00      	add	r7, sp, #0
 8003e52:	6078      	str	r0, [r7, #4]
	if (htim == &htim3 )// INL correction, each 500ms
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	4a0d      	ldr	r2, [pc, #52]	; (8003e8c <HAL_TIM_PeriodElapsedCallback+0x40>)
 8003e58:	4293      	cmp	r3, r2
 8003e5a:	d106      	bne.n	8003e6a <HAL_TIM_PeriodElapsedCallback+0x1e>
	{
		if(cfg.LDACMODE==1)Need_update_DDS=1;
 8003e5c:	4b0c      	ldr	r3, [pc, #48]	; (8003e90 <HAL_TIM_PeriodElapsedCallback+0x44>)
 8003e5e:	789b      	ldrb	r3, [r3, #2]
 8003e60:	2b01      	cmp	r3, #1
 8003e62:	d102      	bne.n	8003e6a <HAL_TIM_PeriodElapsedCallback+0x1e>
 8003e64:	4b0b      	ldr	r3, [pc, #44]	; (8003e94 <HAL_TIM_PeriodElapsedCallback+0x48>)
 8003e66:	2201      	movs	r2, #1
 8003e68:	701a      	strb	r2, [r3, #0]
	}

	if (htim == &htim2 )//User interface workload, each 50ms
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4a0a      	ldr	r2, [pc, #40]	; (8003e98 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8003e6e:	4293      	cmp	r3, r2
 8003e70:	d107      	bne.n	8003e82 <HAL_TIM_PeriodElapsedCallback+0x36>
	{
		Need_update_Display=1;
 8003e72:	4b0a      	ldr	r3, [pc, #40]	; (8003e9c <HAL_TIM_PeriodElapsedCallback+0x50>)
 8003e74:	2201      	movs	r2, #1
 8003e76:	701a      	strb	r2, [r3, #0]
		Display_timeout++;
 8003e78:	4b09      	ldr	r3, [pc, #36]	; (8003ea0 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	3301      	adds	r3, #1
 8003e7e:	4a08      	ldr	r2, [pc, #32]	; (8003ea0 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003e80:	6013      	str	r3, [r2, #0]
	}

}
 8003e82:	bf00      	nop
 8003e84:	370c      	adds	r7, #12
 8003e86:	46bd      	mov	sp, r7
 8003e88:	bc80      	pop	{r7}
 8003e8a:	4770      	bx	lr
 8003e8c:	20000860 	.word	0x20000860
 8003e90:	20000730 	.word	0x20000730
 8003e94:	20000768 	.word	0x20000768
 8003e98:	20000820 	.word	0x20000820
 8003e9c:	20000767 	.word	0x20000767
 8003ea0:	20000704 	.word	0x20000704

08003ea4 <Parsing_USB_command>:

	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
}

void Parsing_USB_command(void)
{
 8003ea4:	b590      	push	{r4, r7, lr}
 8003ea6:	b0a7      	sub	sp, #156	; 0x9c
 8003ea8:	af12      	add	r7, sp, #72	; 0x48
	//char *found;
	char decoded_string_1[31];
	char decoded_string_2[31];
	int num_of_cap;
	float f_value;
	uint8_t cdc_counter=0;
 8003eaa:	2300      	movs	r3, #0
 8003eac:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f

	if(sscanf((char *)command_buffer,"%s", decoded_string_1)!=1)
 8003eb0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003eb4:	461a      	mov	r2, r3
 8003eb6:	49ca      	ldr	r1, [pc, #808]	; (80041e0 <Parsing_USB_command+0x33c>)
 8003eb8:	48ca      	ldr	r0, [pc, #808]	; (80041e4 <Parsing_USB_command+0x340>)
 8003eba:	f007 fc0b 	bl	800b6d4 <siscanf>
 8003ebe:	4603      	mov	r3, r0
 8003ec0:	2b01      	cmp	r3, #1
 8003ec2:	d004      	beq.n	8003ece <Parsing_USB_command+0x2a>
	{
		send_answer_to_CDC(ERROR_TYPE_1);
 8003ec4:	2000      	movs	r0, #0
 8003ec6:	f7fe ff75 	bl	8002db4 <send_answer_to_CDC>
		return;
 8003eca:	f000 bdd8 	b.w	8004a7e <Parsing_USB_command+0xbda>
	}

	// ==== SWEEP command ====
	if(!(strcmp(decoded_string_1,"SWEEP")))
 8003ece:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003ed2:	49c5      	ldr	r1, [pc, #788]	; (80041e8 <Parsing_USB_command+0x344>)
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	f7fc f953 	bl	8000180 <strcmp>
 8003eda:	4603      	mov	r3, r0
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d13b      	bne.n	8003f58 <Parsing_USB_command+0xb4>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8003ee0:	f107 030c 	add.w	r3, r7, #12
 8003ee4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003ee8:	49c0      	ldr	r1, [pc, #768]	; (80041ec <Parsing_USB_command+0x348>)
 8003eea:	48be      	ldr	r0, [pc, #760]	; (80041e4 <Parsing_USB_command+0x340>)
 8003eec:	f007 fbf2 	bl	800b6d4 <siscanf>
 8003ef0:	4603      	mov	r3, r0
 8003ef2:	2b02      	cmp	r3, #2
 8003ef4:	d004      	beq.n	8003f00 <Parsing_USB_command+0x5c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8003ef6:	2001      	movs	r0, #1
 8003ef8:	f7fe ff5c 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003efc:	f000 bdbf 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"START")))
 8003f00:	f107 030c 	add.w	r3, r7, #12
 8003f04:	49ba      	ldr	r1, [pc, #744]	; (80041f0 <Parsing_USB_command+0x34c>)
 8003f06:	4618      	mov	r0, r3
 8003f08:	f7fc f93a 	bl	8000180 <strcmp>
 8003f0c:	4603      	mov	r3, r0
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d10d      	bne.n	8003f2e <Parsing_USB_command+0x8a>
		{
			cmd_SWEEP_START();
 8003f12:	f7fe ffff 	bl	8002f14 <cmd_SWEEP_START>
			if(mode==VOLT_SCREEN)mode=dU_dt_SCREEN;
 8003f16:	4bb7      	ldr	r3, [pc, #732]	; (80041f4 <Parsing_USB_command+0x350>)
 8003f18:	781b      	ldrb	r3, [r3, #0]
 8003f1a:	2b05      	cmp	r3, #5
 8003f1c:	d102      	bne.n	8003f24 <Parsing_USB_command+0x80>
 8003f1e:	4bb5      	ldr	r3, [pc, #724]	; (80041f4 <Parsing_USB_command+0x350>)
 8003f20:	2200      	movs	r2, #0
 8003f22:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8003f24:	2003      	movs	r0, #3
 8003f26:	f7fe ff45 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003f2a:	f000 bda8 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"STOP")))
 8003f2e:	f107 030c 	add.w	r3, r7, #12
 8003f32:	49b1      	ldr	r1, [pc, #708]	; (80041f8 <Parsing_USB_command+0x354>)
 8003f34:	4618      	mov	r0, r3
 8003f36:	f7fc f923 	bl	8000180 <strcmp>
 8003f3a:	4603      	mov	r3, r0
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d106      	bne.n	8003f4e <Parsing_USB_command+0xaa>
			{
				cmd_SWEEP_STOP();
 8003f40:	f7fe fff8 	bl	8002f34 <cmd_SWEEP_STOP>
				send_answer_to_CDC(OK_TYPE_2);
 8003f44:	2003      	movs	r0, #3
 8003f46:	f7fe ff35 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003f4a:	f000 bd98 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 8003f4e:	2000      	movs	r0, #0
 8003f50:	f7fe ff30 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003f54:	f000 bd93 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}

		}
	}
	// ==== CAP_SET command ====
	if(!(strcmp(decoded_string_1,"CAP_SET")))
 8003f58:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003f5c:	49a7      	ldr	r1, [pc, #668]	; (80041fc <Parsing_USB_command+0x358>)
 8003f5e:	4618      	mov	r0, r3
 8003f60:	f7fc f90e 	bl	8000180 <strcmp>
 8003f64:	4603      	mov	r3, r0
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d121      	bne.n	8003fae <Parsing_USB_command+0x10a>
	{
		if(sscanf((char *)command_buffer,"%s %d", decoded_string_1, &num_of_cap)!=2)
 8003f6a:	f107 0308 	add.w	r3, r7, #8
 8003f6e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003f72:	49a3      	ldr	r1, [pc, #652]	; (8004200 <Parsing_USB_command+0x35c>)
 8003f74:	489b      	ldr	r0, [pc, #620]	; (80041e4 <Parsing_USB_command+0x340>)
 8003f76:	f007 fbad 	bl	800b6d4 <siscanf>
 8003f7a:	4603      	mov	r3, r0
 8003f7c:	2b02      	cmp	r3, #2
 8003f7e:	d004      	beq.n	8003f8a <Parsing_USB_command+0xe6>
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8003f80:	2001      	movs	r0, #1
 8003f82:	f7fe ff17 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003f86:	f000 bd7a 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}

			if(cmd_CAP_SET(num_of_cap))
 8003f8a:	68bb      	ldr	r3, [r7, #8]
 8003f8c:	b2db      	uxtb	r3, r3
 8003f8e:	4618      	mov	r0, r3
 8003f90:	f7ff f92c 	bl	80031ec <cmd_CAP_SET>
 8003f94:	4603      	mov	r3, r0
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d004      	beq.n	8003fa4 <Parsing_USB_command+0x100>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8003f9a:	2003      	movs	r0, #3
 8003f9c:	f7fe ff0a 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003fa0:	f000 bd6d 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8003fa4:	2001      	movs	r0, #1
 8003fa6:	f7fe ff05 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003faa:	f000 bd68 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
	}


	// ==== DAC_SET command ====
	if(!(strcmp(decoded_string_1,"DAC_SET")))
 8003fae:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003fb2:	4994      	ldr	r1, [pc, #592]	; (8004204 <Parsing_USB_command+0x360>)
 8003fb4:	4618      	mov	r0, r3
 8003fb6:	f7fc f8e3 	bl	8000180 <strcmp>
 8003fba:	4603      	mov	r3, r0
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d154      	bne.n	800406a <Parsing_USB_command+0x1c6>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8003fc0:	f107 030c 	add.w	r3, r7, #12
 8003fc4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003fc8:	4988      	ldr	r1, [pc, #544]	; (80041ec <Parsing_USB_command+0x348>)
 8003fca:	4886      	ldr	r0, [pc, #536]	; (80041e4 <Parsing_USB_command+0x340>)
 8003fcc:	f007 fb82 	bl	800b6d4 <siscanf>
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	2b02      	cmp	r3, #2
 8003fd4:	d004      	beq.n	8003fe0 <Parsing_USB_command+0x13c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8003fd6:	2001      	movs	r0, #1
 8003fd8:	f7fe feec 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003fdc:	f000 bd4f 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"TOP"))){
 8003fe0:	f107 030c 	add.w	r3, r7, #12
 8003fe4:	4988      	ldr	r1, [pc, #544]	; (8004208 <Parsing_USB_command+0x364>)
 8003fe6:	4618      	mov	r0, r3
 8003fe8:	f7fc f8ca 	bl	8000180 <strcmp>
 8003fec:	4603      	mov	r3, r0
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d107      	bne.n	8004002 <Parsing_USB_command+0x15e>
			cmd_DAC_SET(DAC_CODE_TOP);
 8003ff2:	4886      	ldr	r0, [pc, #536]	; (800420c <Parsing_USB_command+0x368>)
 8003ff4:	f7fe ffa8 	bl	8002f48 <cmd_DAC_SET>
			send_answer_to_CDC(OK_TYPE_2);
 8003ff8:	2003      	movs	r0, #3
 8003ffa:	f7fe fedb 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003ffe:	f000 bd3e 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 8004002:	f107 030c 	add.w	r3, r7, #12
 8004006:	4982      	ldr	r1, [pc, #520]	; (8004210 <Parsing_USB_command+0x36c>)
 8004008:	4618      	mov	r0, r3
 800400a:	f7fc f8b9 	bl	8000180 <strcmp>
 800400e:	4603      	mov	r3, r0
 8004010:	2b00      	cmp	r3, #0
 8004012:	d107      	bne.n	8004024 <Parsing_USB_command+0x180>
				cmd_DAC_SET(DAC_CODE_DOWN);
 8004014:	2000      	movs	r0, #0
 8004016:	f7fe ff97 	bl	8002f48 <cmd_DAC_SET>
				send_answer_to_CDC(OK_TYPE_2);
 800401a:	2003      	movs	r0, #3
 800401c:	f7fe feca 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004020:	f000 bd2d 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004024:	1d3b      	adds	r3, r7, #4
 8004026:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800402a:	497a      	ldr	r1, [pc, #488]	; (8004214 <Parsing_USB_command+0x370>)
 800402c:	486d      	ldr	r0, [pc, #436]	; (80041e4 <Parsing_USB_command+0x340>)
 800402e:	f007 fb51 	bl	800b6d4 <siscanf>
 8004032:	4603      	mov	r3, r0
 8004034:	2b02      	cmp	r3, #2
 8004036:	d004      	beq.n	8004042 <Parsing_USB_command+0x19e>
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 8004038:	2001      	movs	r0, #1
 800403a:	f7fe febb 	bl	8002db4 <send_answer_to_CDC>
					return;
 800403e:	f000 bd1e 	b.w	8004a7e <Parsing_USB_command+0xbda>
				}

				if(cmd_SET_OUTPUT_VOLTAGE(f_value))
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	4618      	mov	r0, r3
 8004046:	f7fe ffaf 	bl	8002fa8 <cmd_SET_OUTPUT_VOLTAGE>
 800404a:	4603      	mov	r3, r0
 800404c:	2b00      	cmp	r3, #0
 800404e:	d007      	beq.n	8004060 <Parsing_USB_command+0x1bc>
				{
					mode=VOLT_SCREEN;
 8004050:	4b68      	ldr	r3, [pc, #416]	; (80041f4 <Parsing_USB_command+0x350>)
 8004052:	2205      	movs	r2, #5
 8004054:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 8004056:	2003      	movs	r0, #3
 8004058:	f7fe feac 	bl	8002db4 <send_answer_to_CDC>
					return;
 800405c:	f000 bd0f 	b.w	8004a7e <Parsing_USB_command+0xbda>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 8004060:	2001      	movs	r0, #1
 8004062:	f7fe fea7 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004066:	f000 bd0a 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
	}


	// ==== OUTPUT command ====
	if(!(strcmp(decoded_string_1,"OUTPUT")))
 800406a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800406e:	496a      	ldr	r1, [pc, #424]	; (8004218 <Parsing_USB_command+0x374>)
 8004070:	4618      	mov	r0, r3
 8004072:	f7fc f885 	bl	8000180 <strcmp>
 8004076:	4603      	mov	r3, r0
 8004078:	2b00      	cmp	r3, #0
 800407a:	d158      	bne.n	800412e <Parsing_USB_command+0x28a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800407c:	f107 030c 	add.w	r3, r7, #12
 8004080:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004084:	4959      	ldr	r1, [pc, #356]	; (80041ec <Parsing_USB_command+0x348>)
 8004086:	4857      	ldr	r0, [pc, #348]	; (80041e4 <Parsing_USB_command+0x340>)
 8004088:	f007 fb24 	bl	800b6d4 <siscanf>
 800408c:	4603      	mov	r3, r0
 800408e:	2b02      	cmp	r3, #2
 8004090:	d004      	beq.n	800409c <Parsing_USB_command+0x1f8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004092:	2001      	movs	r0, #1
 8004094:	f7fe fe8e 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004098:	f000 bcf1 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"OFF"))){
 800409c:	f107 030c 	add.w	r3, r7, #12
 80040a0:	495e      	ldr	r1, [pc, #376]	; (800421c <Parsing_USB_command+0x378>)
 80040a2:	4618      	mov	r0, r3
 80040a4:	f7fc f86c 	bl	8000180 <strcmp>
 80040a8:	4603      	mov	r3, r0
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d107      	bne.n	80040be <Parsing_USB_command+0x21a>
			output_state(Output_off_STATE);
 80040ae:	2000      	movs	r0, #0
 80040b0:	f7fe fb68 	bl	8002784 <output_state>
			send_answer_to_CDC(OK_TYPE_2);
 80040b4:	2003      	movs	r0, #3
 80040b6:	f7fe fe7d 	bl	8002db4 <send_answer_to_CDC>
			return;
 80040ba:	f000 bce0 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"X1"))){
 80040be:	f107 030c 	add.w	r3, r7, #12
 80040c2:	4957      	ldr	r1, [pc, #348]	; (8004220 <Parsing_USB_command+0x37c>)
 80040c4:	4618      	mov	r0, r3
 80040c6:	f7fc f85b 	bl	8000180 <strcmp>
 80040ca:	4603      	mov	r3, r0
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	d107      	bne.n	80040e0 <Parsing_USB_command+0x23c>
				output_state(Output_x1_STATE);
 80040d0:	2001      	movs	r0, #1
 80040d2:	f7fe fb57 	bl	8002784 <output_state>
				send_answer_to_CDC(OK_TYPE_2);
 80040d6:	2003      	movs	r0, #3
 80040d8:	f7fe fe6c 	bl	8002db4 <send_answer_to_CDC>
				return;
 80040dc:	f000 bccf 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"X2"))){
 80040e0:	f107 030c 	add.w	r3, r7, #12
 80040e4:	494f      	ldr	r1, [pc, #316]	; (8004224 <Parsing_USB_command+0x380>)
 80040e6:	4618      	mov	r0, r3
 80040e8:	f7fc f84a 	bl	8000180 <strcmp>
 80040ec:	4603      	mov	r3, r0
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d107      	bne.n	8004102 <Parsing_USB_command+0x25e>
					output_state(Output_x2_STATE);
 80040f2:	2002      	movs	r0, #2
 80040f4:	f7fe fb46 	bl	8002784 <output_state>
					send_answer_to_CDC(OK_TYPE_2);
 80040f8:	2003      	movs	r0, #3
 80040fa:	f7fe fe5b 	bl	8002db4 <send_answer_to_CDC>
					return;
 80040fe:	f000 bcbe 	b.w	8004a7e <Parsing_USB_command+0xbda>
				}
				else
				{
					if(!(strcmp(decoded_string_2,"X4"))){
 8004102:	f107 030c 	add.w	r3, r7, #12
 8004106:	4948      	ldr	r1, [pc, #288]	; (8004228 <Parsing_USB_command+0x384>)
 8004108:	4618      	mov	r0, r3
 800410a:	f7fc f839 	bl	8000180 <strcmp>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d107      	bne.n	8004124 <Parsing_USB_command+0x280>
						output_state(Output_x4_STATE);
 8004114:	2003      	movs	r0, #3
 8004116:	f7fe fb35 	bl	8002784 <output_state>
						send_answer_to_CDC(OK_TYPE_2);
 800411a:	2003      	movs	r0, #3
 800411c:	f7fe fe4a 	bl	8002db4 <send_answer_to_CDC>
						return;
 8004120:	f000 bcad 	b.w	8004a7e <Parsing_USB_command+0xbda>
					}
					else
					{
						send_answer_to_CDC(ERROR_TYPE_2);
 8004124:	2001      	movs	r0, #1
 8004126:	f7fe fe45 	bl	8002db4 <send_answer_to_CDC>
						return;
 800412a:	f000 bca8 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
		}
	}

	// ==== CAL_STATE command ====
	if(!(strcmp(decoded_string_1,"CAL_STATE")))
 800412e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004132:	493e      	ldr	r1, [pc, #248]	; (800422c <Parsing_USB_command+0x388>)
 8004134:	4618      	mov	r0, r3
 8004136:	f7fc f823 	bl	8000180 <strcmp>
 800413a:	4603      	mov	r3, r0
 800413c:	2b00      	cmp	r3, #0
 800413e:	d136      	bne.n	80041ae <Parsing_USB_command+0x30a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004140:	f107 030c 	add.w	r3, r7, #12
 8004144:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004148:	4928      	ldr	r1, [pc, #160]	; (80041ec <Parsing_USB_command+0x348>)
 800414a:	4826      	ldr	r0, [pc, #152]	; (80041e4 <Parsing_USB_command+0x340>)
 800414c:	f007 fac2 	bl	800b6d4 <siscanf>
 8004150:	4603      	mov	r3, r0
 8004152:	2b02      	cmp	r3, #2
 8004154:	d004      	beq.n	8004160 <Parsing_USB_command+0x2bc>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004156:	2001      	movs	r0, #1
 8004158:	f7fe fe2c 	bl	8002db4 <send_answer_to_CDC>
			return;
 800415c:	f000 bc8f 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"UNLOCK"))){
 8004160:	f107 030c 	add.w	r3, r7, #12
 8004164:	4932      	ldr	r1, [pc, #200]	; (8004230 <Parsing_USB_command+0x38c>)
 8004166:	4618      	mov	r0, r3
 8004168:	f7fc f80a 	bl	8000180 <strcmp>
 800416c:	4603      	mov	r3, r0
 800416e:	2b00      	cmp	r3, #0
 8004170:	d107      	bne.n	8004182 <Parsing_USB_command+0x2de>
			CAL_STATE=UNLOCK_STATE;
 8004172:	4b30      	ldr	r3, [pc, #192]	; (8004234 <Parsing_USB_command+0x390>)
 8004174:	2200      	movs	r2, #0
 8004176:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004178:	2003      	movs	r0, #3
 800417a:	f7fe fe1b 	bl	8002db4 <send_answer_to_CDC>
			return;
 800417e:	f000 bc7e 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"LOCK"))){
 8004182:	f107 030c 	add.w	r3, r7, #12
 8004186:	492c      	ldr	r1, [pc, #176]	; (8004238 <Parsing_USB_command+0x394>)
 8004188:	4618      	mov	r0, r3
 800418a:	f7fb fff9 	bl	8000180 <strcmp>
 800418e:	4603      	mov	r3, r0
 8004190:	2b00      	cmp	r3, #0
 8004192:	d107      	bne.n	80041a4 <Parsing_USB_command+0x300>
				CAL_STATE=LOCK_STATE;
 8004194:	4b27      	ldr	r3, [pc, #156]	; (8004234 <Parsing_USB_command+0x390>)
 8004196:	2201      	movs	r2, #1
 8004198:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 800419a:	2003      	movs	r0, #3
 800419c:	f7fe fe0a 	bl	8002db4 <send_answer_to_CDC>
				return;
 80041a0:	f000 bc6d 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 80041a4:	2001      	movs	r0, #1
 80041a6:	f7fe fe05 	bl	8002db4 <send_answer_to_CDC>
				return;
 80041aa:	f000 bc68 	b.w	8004a7e <Parsing_USB_command+0xbda>
			}
		}
	}

	// ==== DAC_CAL_TEMP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TEMP")))
 80041ae:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80041b2:	4922      	ldr	r1, [pc, #136]	; (800423c <Parsing_USB_command+0x398>)
 80041b4:	4618      	mov	r0, r3
 80041b6:	f7fb ffe3 	bl	8000180 <strcmp>
 80041ba:	4603      	mov	r3, r0
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d159      	bne.n	8004274 <Parsing_USB_command+0x3d0>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80041c0:	f107 030c 	add.w	r3, r7, #12
 80041c4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80041c8:	4908      	ldr	r1, [pc, #32]	; (80041ec <Parsing_USB_command+0x348>)
 80041ca:	4806      	ldr	r0, [pc, #24]	; (80041e4 <Parsing_USB_command+0x340>)
 80041cc:	f007 fa82 	bl	800b6d4 <siscanf>
 80041d0:	4603      	mov	r3, r0
 80041d2:	2b02      	cmp	r3, #2
 80041d4:	d034      	beq.n	8004240 <Parsing_USB_command+0x39c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80041d6:	2001      	movs	r0, #1
 80041d8:	f7fe fdec 	bl	8002db4 <send_answer_to_CDC>
			return;
 80041dc:	f000 bc4f 	b.w	8004a7e <Parsing_USB_command+0xbda>
 80041e0:	0800fb58 	.word	0x0800fb58
 80041e4:	20000650 	.word	0x20000650
 80041e8:	0800fb5c 	.word	0x0800fb5c
 80041ec:	0800fb64 	.word	0x0800fb64
 80041f0:	0800fb6c 	.word	0x0800fb6c
 80041f4:	20000748 	.word	0x20000748
 80041f8:	0800fb74 	.word	0x0800fb74
 80041fc:	0800fb7c 	.word	0x0800fb7c
 8004200:	0800fb84 	.word	0x0800fb84
 8004204:	0800fb8c 	.word	0x0800fb8c
 8004208:	0800fb94 	.word	0x0800fb94
 800420c:	000fffff 	.word	0x000fffff
 8004210:	0800fb98 	.word	0x0800fb98
 8004214:	0800fba0 	.word	0x0800fba0
 8004218:	0800fba8 	.word	0x0800fba8
 800421c:	0800fbb0 	.word	0x0800fbb0
 8004220:	0800fbb4 	.word	0x0800fbb4
 8004224:	0800fbb8 	.word	0x0800fbb8
 8004228:	0800fbbc 	.word	0x0800fbbc
 800422c:	0800fbc0 	.word	0x0800fbc0
 8004230:	0800fbcc 	.word	0x0800fbcc
 8004234:	2000001d 	.word	0x2000001d
 8004238:	0800fbd4 	.word	0x0800fbd4
 800423c:	0800fbdc 	.word	0x0800fbdc
		}

		if(!(strcmp(decoded_string_2,"START"))){
 8004240:	f107 030c 	add.w	r3, r7, #12
 8004244:	49ba      	ldr	r1, [pc, #744]	; (8004530 <Parsing_USB_command+0x68c>)
 8004246:	4618      	mov	r0, r3
 8004248:	f7fb ff9a 	bl	8000180 <strcmp>
 800424c:	4603      	mov	r3, r0
 800424e:	2b00      	cmp	r3, #0
 8004250:	d10b      	bne.n	800426a <Parsing_USB_command+0x3c6>
			send_answer_to_CDC(RUN_CAL_TYPE_TEMP);
 8004252:	200f      	movs	r0, #15
 8004254:	f7fe fdae 	bl	8002db4 <send_answer_to_CDC>
			cmd_CAL(DAC_CAL_TEMP,NONE);
 8004258:	49b6      	ldr	r1, [pc, #728]	; (8004534 <Parsing_USB_command+0x690>)
 800425a:	2006      	movs	r0, #6
 800425c:	f7ff f87c 	bl	8003358 <cmd_CAL>
			send_answer_to_CDC(OK_TYPE_1);
 8004260:	2002      	movs	r0, #2
 8004262:	f7fe fda7 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004266:	f000 bc0a 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 800426a:	2000      	movs	r0, #0
 800426c:	f7fe fda2 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004270:	f000 bc05 	b.w	8004a7e <Parsing_USB_command+0xbda>
		}
	}

	// ==== DAC_CAL_POLY_A command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_A")))
 8004274:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004278:	49af      	ldr	r1, [pc, #700]	; (8004538 <Parsing_USB_command+0x694>)
 800427a:	4618      	mov	r0, r3
 800427c:	f7fb ff80 	bl	8000180 <strcmp>
 8004280:	4603      	mov	r3, r0
 8004282:	2b00      	cmp	r3, #0
 8004284:	d116      	bne.n	80042b4 <Parsing_USB_command+0x410>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004286:	1d3b      	adds	r3, r7, #4
 8004288:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800428c:	49ab      	ldr	r1, [pc, #684]	; (800453c <Parsing_USB_command+0x698>)
 800428e:	48ac      	ldr	r0, [pc, #688]	; (8004540 <Parsing_USB_command+0x69c>)
 8004290:	f007 fa20 	bl	800b6d4 <siscanf>
 8004294:	4603      	mov	r3, r0
 8004296:	2b02      	cmp	r3, #2
 8004298:	d003      	beq.n	80042a2 <Parsing_USB_command+0x3fe>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800429a:	2001      	movs	r0, #1
 800429c:	f7fe fd8a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80042a0:	e3ed      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		cmd_CAL(DAC_CAL_POLY_A,f_value);
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	4619      	mov	r1, r3
 80042a6:	2007      	movs	r0, #7
 80042a8:	f7ff f856 	bl	8003358 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 80042ac:	2003      	movs	r0, #3
 80042ae:	f7fe fd81 	bl	8002db4 <send_answer_to_CDC>
		return;
 80042b2:	e3e4      	b.n	8004a7e <Parsing_USB_command+0xbda>
	}

	// ==== DAC_CAL_POLY_B command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_B")))
 80042b4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80042b8:	49a2      	ldr	r1, [pc, #648]	; (8004544 <Parsing_USB_command+0x6a0>)
 80042ba:	4618      	mov	r0, r3
 80042bc:	f7fb ff60 	bl	8000180 <strcmp>
 80042c0:	4603      	mov	r3, r0
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d116      	bne.n	80042f4 <Parsing_USB_command+0x450>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80042c6:	1d3b      	adds	r3, r7, #4
 80042c8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80042cc:	499b      	ldr	r1, [pc, #620]	; (800453c <Parsing_USB_command+0x698>)
 80042ce:	489c      	ldr	r0, [pc, #624]	; (8004540 <Parsing_USB_command+0x69c>)
 80042d0:	f007 fa00 	bl	800b6d4 <siscanf>
 80042d4:	4603      	mov	r3, r0
 80042d6:	2b02      	cmp	r3, #2
 80042d8:	d003      	beq.n	80042e2 <Parsing_USB_command+0x43e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80042da:	2001      	movs	r0, #1
 80042dc:	f7fe fd6a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80042e0:	e3cd      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		cmd_CAL(DAC_CAL_POLY_B,f_value);
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	4619      	mov	r1, r3
 80042e6:	2008      	movs	r0, #8
 80042e8:	f7ff f836 	bl	8003358 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 80042ec:	2003      	movs	r0, #3
 80042ee:	f7fe fd61 	bl	8002db4 <send_answer_to_CDC>
		return;
 80042f2:	e3c4      	b.n	8004a7e <Parsing_USB_command+0xbda>
	}

	// ==== DAC_CAL_POLY_C command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_C")))
 80042f4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80042f8:	4993      	ldr	r1, [pc, #588]	; (8004548 <Parsing_USB_command+0x6a4>)
 80042fa:	4618      	mov	r0, r3
 80042fc:	f7fb ff40 	bl	8000180 <strcmp>
 8004300:	4603      	mov	r3, r0
 8004302:	2b00      	cmp	r3, #0
 8004304:	d116      	bne.n	8004334 <Parsing_USB_command+0x490>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004306:	1d3b      	adds	r3, r7, #4
 8004308:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800430c:	498b      	ldr	r1, [pc, #556]	; (800453c <Parsing_USB_command+0x698>)
 800430e:	488c      	ldr	r0, [pc, #560]	; (8004540 <Parsing_USB_command+0x69c>)
 8004310:	f007 f9e0 	bl	800b6d4 <siscanf>
 8004314:	4603      	mov	r3, r0
 8004316:	2b02      	cmp	r3, #2
 8004318:	d003      	beq.n	8004322 <Parsing_USB_command+0x47e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800431a:	2001      	movs	r0, #1
 800431c:	f7fe fd4a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004320:	e3ad      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		cmd_CAL(DAC_CAL_POLY_C,f_value);
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	4619      	mov	r1, r3
 8004326:	2009      	movs	r0, #9
 8004328:	f7ff f816 	bl	8003358 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 800432c:	2003      	movs	r0, #3
 800432e:	f7fe fd41 	bl	8002db4 <send_answer_to_CDC>
		return;
 8004332:	e3a4      	b.n	8004a7e <Parsing_USB_command+0xbda>
	}

	// ==== GAIN_X2_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X2_CAL")))
 8004334:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004338:	4984      	ldr	r1, [pc, #528]	; (800454c <Parsing_USB_command+0x6a8>)
 800433a:	4618      	mov	r0, r3
 800433c:	f7fb ff20 	bl	8000180 <strcmp>
 8004340:	4603      	mov	r3, r0
 8004342:	2b00      	cmp	r3, #0
 8004344:	d11d      	bne.n	8004382 <Parsing_USB_command+0x4de>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004346:	1d3b      	adds	r3, r7, #4
 8004348:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800434c:	497b      	ldr	r1, [pc, #492]	; (800453c <Parsing_USB_command+0x698>)
 800434e:	487c      	ldr	r0, [pc, #496]	; (8004540 <Parsing_USB_command+0x69c>)
 8004350:	f007 f9c0 	bl	800b6d4 <siscanf>
 8004354:	4603      	mov	r3, r0
 8004356:	2b02      	cmp	r3, #2
 8004358:	d003      	beq.n	8004362 <Parsing_USB_command+0x4be>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800435a:	2001      	movs	r0, #1
 800435c:	f7fe fd2a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004360:	e38d      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(cmd_CAL(GAIN_X2_CAL,f_value))
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	4619      	mov	r1, r3
 8004366:	200c      	movs	r0, #12
 8004368:	f7fe fff6 	bl	8003358 <cmd_CAL>
 800436c:	4603      	mov	r3, r0
 800436e:	2b00      	cmp	r3, #0
 8004370:	d003      	beq.n	800437a <Parsing_USB_command+0x4d6>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004372:	2003      	movs	r0, #3
 8004374:	f7fe fd1e 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004378:	e381      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800437a:	2001      	movs	r0, #1
 800437c:	f7fe fd1a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004380:	e37d      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}

	// ==== GAIN_X4_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X4_CAL")))
 8004382:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004386:	4972      	ldr	r1, [pc, #456]	; (8004550 <Parsing_USB_command+0x6ac>)
 8004388:	4618      	mov	r0, r3
 800438a:	f7fb fef9 	bl	8000180 <strcmp>
 800438e:	4603      	mov	r3, r0
 8004390:	2b00      	cmp	r3, #0
 8004392:	d11d      	bne.n	80043d0 <Parsing_USB_command+0x52c>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004394:	1d3b      	adds	r3, r7, #4
 8004396:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800439a:	4968      	ldr	r1, [pc, #416]	; (800453c <Parsing_USB_command+0x698>)
 800439c:	4868      	ldr	r0, [pc, #416]	; (8004540 <Parsing_USB_command+0x69c>)
 800439e:	f007 f999 	bl	800b6d4 <siscanf>
 80043a2:	4603      	mov	r3, r0
 80043a4:	2b02      	cmp	r3, #2
 80043a6:	d003      	beq.n	80043b0 <Parsing_USB_command+0x50c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80043a8:	2001      	movs	r0, #1
 80043aa:	f7fe fd03 	bl	8002db4 <send_answer_to_CDC>
			return;
 80043ae:	e366      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(cmd_CAL(GAIN_X4_CAL,f_value))
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	4619      	mov	r1, r3
 80043b4:	200d      	movs	r0, #13
 80043b6:	f7fe ffcf 	bl	8003358 <cmd_CAL>
 80043ba:	4603      	mov	r3, r0
 80043bc:	2b00      	cmp	r3, #0
 80043be:	d003      	beq.n	80043c8 <Parsing_USB_command+0x524>
		{
			send_answer_to_CDC(OK_TYPE_2);
 80043c0:	2003      	movs	r0, #3
 80043c2:	f7fe fcf7 	bl	8002db4 <send_answer_to_CDC>
			return;
 80043c6:	e35a      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80043c8:	2001      	movs	r0, #1
 80043ca:	f7fe fcf3 	bl	8002db4 <send_answer_to_CDC>
			return;
 80043ce:	e356      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}


	// ==== DAC_CAL_TOP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TOP")))
 80043d0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80043d4:	495f      	ldr	r1, [pc, #380]	; (8004554 <Parsing_USB_command+0x6b0>)
 80043d6:	4618      	mov	r0, r3
 80043d8:	f7fb fed2 	bl	8000180 <strcmp>
 80043dc:	4603      	mov	r3, r0
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d11d      	bne.n	800441e <Parsing_USB_command+0x57a>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80043e2:	1d3b      	adds	r3, r7, #4
 80043e4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80043e8:	4954      	ldr	r1, [pc, #336]	; (800453c <Parsing_USB_command+0x698>)
 80043ea:	4855      	ldr	r0, [pc, #340]	; (8004540 <Parsing_USB_command+0x69c>)
 80043ec:	f007 f972 	bl	800b6d4 <siscanf>
 80043f0:	4603      	mov	r3, r0
 80043f2:	2b02      	cmp	r3, #2
 80043f4:	d003      	beq.n	80043fe <Parsing_USB_command+0x55a>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80043f6:	2001      	movs	r0, #1
 80043f8:	f7fe fcdc 	bl	8002db4 <send_answer_to_CDC>
			return;
 80043fc:	e33f      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(cmd_CAL(DAC_CAL_TOP,f_value))
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	4619      	mov	r1, r3
 8004402:	200a      	movs	r0, #10
 8004404:	f7fe ffa8 	bl	8003358 <cmd_CAL>
 8004408:	4603      	mov	r3, r0
 800440a:	2b00      	cmp	r3, #0
 800440c:	d003      	beq.n	8004416 <Parsing_USB_command+0x572>
		{
			send_answer_to_CDC(OK_TYPE_2);
 800440e:	2003      	movs	r0, #3
 8004410:	f7fe fcd0 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004414:	e333      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004416:	2001      	movs	r0, #1
 8004418:	f7fe fccc 	bl	8002db4 <send_answer_to_CDC>
			return;
 800441c:	e32f      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}


	// ==== DAC_CAL_DOWN command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_DOWN")))
 800441e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004422:	494d      	ldr	r1, [pc, #308]	; (8004558 <Parsing_USB_command+0x6b4>)
 8004424:	4618      	mov	r0, r3
 8004426:	f7fb feab 	bl	8000180 <strcmp>
 800442a:	4603      	mov	r3, r0
 800442c:	2b00      	cmp	r3, #0
 800442e:	d11d      	bne.n	800446c <Parsing_USB_command+0x5c8>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004430:	1d3b      	adds	r3, r7, #4
 8004432:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004436:	4941      	ldr	r1, [pc, #260]	; (800453c <Parsing_USB_command+0x698>)
 8004438:	4841      	ldr	r0, [pc, #260]	; (8004540 <Parsing_USB_command+0x69c>)
 800443a:	f007 f94b 	bl	800b6d4 <siscanf>
 800443e:	4603      	mov	r3, r0
 8004440:	2b02      	cmp	r3, #2
 8004442:	d003      	beq.n	800444c <Parsing_USB_command+0x5a8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004444:	2001      	movs	r0, #1
 8004446:	f7fe fcb5 	bl	8002db4 <send_answer_to_CDC>
			return;
 800444a:	e318      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(cmd_CAL(DAC_CAL_DOWN,f_value))
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	4619      	mov	r1, r3
 8004450:	200b      	movs	r0, #11
 8004452:	f7fe ff81 	bl	8003358 <cmd_CAL>
 8004456:	4603      	mov	r3, r0
 8004458:	2b00      	cmp	r3, #0
 800445a:	d003      	beq.n	8004464 <Parsing_USB_command+0x5c0>
		{
			send_answer_to_CDC(OK_TYPE_2);
 800445c:	2003      	movs	r0, #3
 800445e:	f7fe fca9 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004462:	e30c      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004464:	2001      	movs	r0, #1
 8004466:	f7fe fca5 	bl	8002db4 <send_answer_to_CDC>
			return;
 800446a:	e308      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}

	// ==== CAL_C_VALUE command ====
	if(!(strcmp(decoded_string_1,"CAL_C_VALUE")))
 800446c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004470:	493a      	ldr	r1, [pc, #232]	; (800455c <Parsing_USB_command+0x6b8>)
 8004472:	4618      	mov	r0, r3
 8004474:	f7fb fe84 	bl	8000180 <strcmp>
 8004478:	4603      	mov	r3, r0
 800447a:	2b00      	cmp	r3, #0
 800447c:	d124      	bne.n	80044c8 <Parsing_USB_command+0x624>
	{
		if(sscanf((char *)command_buffer,"%s %d %f", decoded_string_1, &num_of_cap, &f_value)!=3)
 800447e:	f107 0108 	add.w	r1, r7, #8
 8004482:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004486:	1d3b      	adds	r3, r7, #4
 8004488:	9300      	str	r3, [sp, #0]
 800448a:	460b      	mov	r3, r1
 800448c:	4934      	ldr	r1, [pc, #208]	; (8004560 <Parsing_USB_command+0x6bc>)
 800448e:	482c      	ldr	r0, [pc, #176]	; (8004540 <Parsing_USB_command+0x69c>)
 8004490:	f007 f920 	bl	800b6d4 <siscanf>
 8004494:	4603      	mov	r3, r0
 8004496:	2b03      	cmp	r3, #3
 8004498:	d003      	beq.n	80044a2 <Parsing_USB_command+0x5fe>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800449a:	2001      	movs	r0, #1
 800449c:	f7fe fc8a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044a0:	e2ed      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		if(CAL_STATE!=LOCK_STATE)
 80044a2:	4b30      	ldr	r3, [pc, #192]	; (8004564 <Parsing_USB_command+0x6c0>)
 80044a4:	781b      	ldrb	r3, [r3, #0]
 80044a6:	2b01      	cmp	r3, #1
 80044a8:	d00a      	beq.n	80044c0 <Parsing_USB_command+0x61c>
		{
			write_c_value_to_EEPROM(num_of_cap, f_value);
 80044aa:	68bb      	ldr	r3, [r7, #8]
 80044ac:	461a      	mov	r2, r3
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	4619      	mov	r1, r3
 80044b2:	4610      	mov	r0, r2
 80044b4:	f7ff f90e 	bl	80036d4 <write_c_value_to_EEPROM>
			send_answer_to_CDC(OK_TYPE_2);
 80044b8:	2003      	movs	r0, #3
 80044ba:	f7fe fc7b 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044be:	e2de      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80044c0:	2001      	movs	r0, #1
 80044c2:	f7fe fc77 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044c6:	e2da      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}


	// ==== SWEEP_RATE command ====
	if(!(strcmp(decoded_string_1,"SWEEP_RATE")))
 80044c8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80044cc:	4926      	ldr	r1, [pc, #152]	; (8004568 <Parsing_USB_command+0x6c4>)
 80044ce:	4618      	mov	r0, r3
 80044d0:	f7fb fe56 	bl	8000180 <strcmp>
 80044d4:	4603      	mov	r3, r0
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d15c      	bne.n	8004594 <Parsing_USB_command+0x6f0>
	{
		if(sscanf((char *)command_buffer,"%s %s %f", decoded_string_1, decoded_string_2, &f_value)!=3)
 80044da:	f107 010c 	add.w	r1, r7, #12
 80044de:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80044e2:	1d3b      	adds	r3, r7, #4
 80044e4:	9300      	str	r3, [sp, #0]
 80044e6:	460b      	mov	r3, r1
 80044e8:	4920      	ldr	r1, [pc, #128]	; (800456c <Parsing_USB_command+0x6c8>)
 80044ea:	4815      	ldr	r0, [pc, #84]	; (8004540 <Parsing_USB_command+0x69c>)
 80044ec:	f007 f8f2 	bl	800b6d4 <siscanf>
 80044f0:	4603      	mov	r3, r0
 80044f2:	2b03      	cmp	r3, #3
 80044f4:	d003      	beq.n	80044fe <Parsing_USB_command+0x65a>
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 80044f6:	2000      	movs	r0, #0
 80044f8:	f7fe fc5c 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044fc:	e2bf      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		if(!(strcmp(decoded_string_2,"AMP")))
 80044fe:	f107 030c 	add.w	r3, r7, #12
 8004502:	491b      	ldr	r1, [pc, #108]	; (8004570 <Parsing_USB_command+0x6cc>)
 8004504:	4618      	mov	r0, r3
 8004506:	f7fb fe3b 	bl	8000180 <strcmp>
 800450a:	4603      	mov	r3, r0
 800450c:	2b00      	cmp	r3, #0
 800450e:	d131      	bne.n	8004574 <Parsing_USB_command+0x6d0>
		{
			if(Recalculate_ramp_speed(AMP_SCREEN, f_value)==ret_OK)
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	4619      	mov	r1, r3
 8004514:	2004      	movs	r0, #4
 8004516:	f7fe fe8f 	bl	8003238 <Recalculate_ramp_speed>
 800451a:	4603      	mov	r3, r0
 800451c:	2b01      	cmp	r3, #1
 800451e:	d103      	bne.n	8004528 <Parsing_USB_command+0x684>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004520:	2003      	movs	r0, #3
 8004522:	f7fe fc47 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004526:	e2aa      	b.n	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004528:	2001      	movs	r0, #1
 800452a:	f7fe fc43 	bl	8002db4 <send_answer_to_CDC>
				return;
 800452e:	e2a6      	b.n	8004a7e <Parsing_USB_command+0xbda>
 8004530:	0800fb6c 	.word	0x0800fb6c
 8004534:	41600000 	.word	0x41600000
 8004538:	0800fbec 	.word	0x0800fbec
 800453c:	0800fba0 	.word	0x0800fba0
 8004540:	20000650 	.word	0x20000650
 8004544:	0800fbfc 	.word	0x0800fbfc
 8004548:	0800fc0c 	.word	0x0800fc0c
 800454c:	0800fc1c 	.word	0x0800fc1c
 8004550:	0800fc28 	.word	0x0800fc28
 8004554:	0800fc34 	.word	0x0800fc34
 8004558:	0800fc40 	.word	0x0800fc40
 800455c:	0800fc50 	.word	0x0800fc50
 8004560:	0800fc5c 	.word	0x0800fc5c
 8004564:	2000001d 	.word	0x2000001d
 8004568:	0800fc68 	.word	0x0800fc68
 800456c:	0800fc74 	.word	0x0800fc74
 8004570:	0800fc80 	.word	0x0800fc80
			}
		}
		else
		{
			if(Recalculate_ramp_speed(dU_dt_SCREEN, f_value)==ret_OK)
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	4619      	mov	r1, r3
 8004578:	2000      	movs	r0, #0
 800457a:	f7fe fe5d 	bl	8003238 <Recalculate_ramp_speed>
 800457e:	4603      	mov	r3, r0
 8004580:	2b01      	cmp	r3, #1
 8004582:	d103      	bne.n	800458c <Parsing_USB_command+0x6e8>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004584:	2003      	movs	r0, #3
 8004586:	f7fe fc15 	bl	8002db4 <send_answer_to_CDC>
				return;
 800458a:	e278      	b.n	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 800458c:	2001      	movs	r0, #1
 800458e:	f7fe fc11 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004592:	e274      	b.n	8004a7e <Parsing_USB_command+0xbda>
			}
		}
	}

	// ==== SHOW command ====
	if(!(strcmp(decoded_string_1,"SHOW")))
 8004594:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004598:	49b3      	ldr	r1, [pc, #716]	; (8004868 <Parsing_USB_command+0x9c4>)
 800459a:	4618      	mov	r0, r3
 800459c:	f7fb fdf0 	bl	8000180 <strcmp>
 80045a0:	4603      	mov	r3, r0
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	f040 821b 	bne.w	80049de <Parsing_USB_command+0xb3a>
	{

		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80045a8:	f107 030c 	add.w	r3, r7, #12
 80045ac:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80045b0:	49ae      	ldr	r1, [pc, #696]	; (800486c <Parsing_USB_command+0x9c8>)
 80045b2:	48af      	ldr	r0, [pc, #700]	; (8004870 <Parsing_USB_command+0x9cc>)
 80045b4:	f007 f88e 	bl	800b6d4 <siscanf>
 80045b8:	4603      	mov	r3, r0
 80045ba:	2b02      	cmp	r3, #2
 80045bc:	d003      	beq.n	80045c6 <Parsing_USB_command+0x722>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80045be:	2001      	movs	r0, #1
 80045c0:	f7fe fbf8 	bl	8002db4 <send_answer_to_CDC>
			return;
 80045c4:	e25b      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"INFO"))){
 80045c6:	f107 030c 	add.w	r3, r7, #12
 80045ca:	49aa      	ldr	r1, [pc, #680]	; (8004874 <Parsing_USB_command+0x9d0>)
 80045cc:	4618      	mov	r0, r3
 80045ce:	f7fb fdd7 	bl	8000180 <strcmp>
 80045d2:	4603      	mov	r3, r0
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	f040 81fe 	bne.w	80049d6 <Parsing_USB_command+0xb32>
			sprintf((char *)large_string_buffer,"\n\rDAC 0xFFFFF voltage calibration constant: %1.6E\n\r",cal_DAC_up_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80045da:	4ba7      	ldr	r3, [pc, #668]	; (8004878 <Parsing_USB_command+0x9d4>)
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	4618      	mov	r0, r3
 80045e0:	f7fb ff44 	bl	800046c <__aeabi_f2d>
 80045e4:	4602      	mov	r2, r0
 80045e6:	460b      	mov	r3, r1
 80045e8:	49a4      	ldr	r1, [pc, #656]	; (800487c <Parsing_USB_command+0x9d8>)
 80045ea:	48a5      	ldr	r0, [pc, #660]	; (8004880 <Parsing_USB_command+0x9dc>)
 80045ec:	f007 f852 	bl	800b694 <siprintf>
 80045f0:	e004      	b.n	80045fc <Parsing_USB_command+0x758>
 80045f2:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80045f6:	3301      	adds	r3, #1
 80045f8:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80045fc:	48a0      	ldr	r0, [pc, #640]	; (8004880 <Parsing_USB_command+0x9dc>)
 80045fe:	f7fb fdc9 	bl	8000194 <strlen>
 8004602:	4603      	mov	r3, r0
 8004604:	b29b      	uxth	r3, r3
 8004606:	4619      	mov	r1, r3
 8004608:	489d      	ldr	r0, [pc, #628]	; (8004880 <Parsing_USB_command+0x9dc>)
 800460a:	f005 fee5 	bl	800a3d8 <CDC_Transmit_FS>
 800460e:	4603      	mov	r3, r0
 8004610:	2b00      	cmp	r3, #0
 8004612:	d003      	beq.n	800461c <Parsing_USB_command+0x778>
 8004614:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004618:	2bff      	cmp	r3, #255	; 0xff
 800461a:	d1ea      	bne.n	80045f2 <Parsing_USB_command+0x74e>
			sprintf((char *)large_string_buffer,"DAC 0x00000 voltage calibration constant: %1.6E\n\r",cal_DAC_down_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800461c:	4b99      	ldr	r3, [pc, #612]	; (8004884 <Parsing_USB_command+0x9e0>)
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	4618      	mov	r0, r3
 8004622:	f7fb ff23 	bl	800046c <__aeabi_f2d>
 8004626:	4602      	mov	r2, r0
 8004628:	460b      	mov	r3, r1
 800462a:	4997      	ldr	r1, [pc, #604]	; (8004888 <Parsing_USB_command+0x9e4>)
 800462c:	4894      	ldr	r0, [pc, #592]	; (8004880 <Parsing_USB_command+0x9dc>)
 800462e:	f007 f831 	bl	800b694 <siprintf>
 8004632:	e004      	b.n	800463e <Parsing_USB_command+0x79a>
 8004634:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004638:	3301      	adds	r3, #1
 800463a:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800463e:	4890      	ldr	r0, [pc, #576]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004640:	f7fb fda8 	bl	8000194 <strlen>
 8004644:	4603      	mov	r3, r0
 8004646:	b29b      	uxth	r3, r3
 8004648:	4619      	mov	r1, r3
 800464a:	488d      	ldr	r0, [pc, #564]	; (8004880 <Parsing_USB_command+0x9dc>)
 800464c:	f005 fec4 	bl	800a3d8 <CDC_Transmit_FS>
 8004650:	4603      	mov	r3, r0
 8004652:	2b00      	cmp	r3, #0
 8004654:	d003      	beq.n	800465e <Parsing_USB_command+0x7ba>
 8004656:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800465a:	2bff      	cmp	r3, #255	; 0xff
 800465c:	d1ea      	bne.n	8004634 <Parsing_USB_command+0x790>
			sprintf((char *)large_string_buffer,"Linearity correction A: %1.6E\n\r",corr_coeff_1);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800465e:	4b8b      	ldr	r3, [pc, #556]	; (800488c <Parsing_USB_command+0x9e8>)
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	4618      	mov	r0, r3
 8004664:	f7fb ff02 	bl	800046c <__aeabi_f2d>
 8004668:	4602      	mov	r2, r0
 800466a:	460b      	mov	r3, r1
 800466c:	4988      	ldr	r1, [pc, #544]	; (8004890 <Parsing_USB_command+0x9ec>)
 800466e:	4884      	ldr	r0, [pc, #528]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004670:	f007 f810 	bl	800b694 <siprintf>
 8004674:	e004      	b.n	8004680 <Parsing_USB_command+0x7dc>
 8004676:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800467a:	3301      	adds	r3, #1
 800467c:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004680:	487f      	ldr	r0, [pc, #508]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004682:	f7fb fd87 	bl	8000194 <strlen>
 8004686:	4603      	mov	r3, r0
 8004688:	b29b      	uxth	r3, r3
 800468a:	4619      	mov	r1, r3
 800468c:	487c      	ldr	r0, [pc, #496]	; (8004880 <Parsing_USB_command+0x9dc>)
 800468e:	f005 fea3 	bl	800a3d8 <CDC_Transmit_FS>
 8004692:	4603      	mov	r3, r0
 8004694:	2b00      	cmp	r3, #0
 8004696:	d003      	beq.n	80046a0 <Parsing_USB_command+0x7fc>
 8004698:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800469c:	2bff      	cmp	r3, #255	; 0xff
 800469e:	d1ea      	bne.n	8004676 <Parsing_USB_command+0x7d2>
			sprintf((char *)large_string_buffer,"Linearity correction B: %1.6E\n\r",corr_coeff_2);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80046a0:	4b7c      	ldr	r3, [pc, #496]	; (8004894 <Parsing_USB_command+0x9f0>)
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4618      	mov	r0, r3
 80046a6:	f7fb fee1 	bl	800046c <__aeabi_f2d>
 80046aa:	4602      	mov	r2, r0
 80046ac:	460b      	mov	r3, r1
 80046ae:	497a      	ldr	r1, [pc, #488]	; (8004898 <Parsing_USB_command+0x9f4>)
 80046b0:	4873      	ldr	r0, [pc, #460]	; (8004880 <Parsing_USB_command+0x9dc>)
 80046b2:	f006 ffef 	bl	800b694 <siprintf>
 80046b6:	e004      	b.n	80046c2 <Parsing_USB_command+0x81e>
 80046b8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046bc:	3301      	adds	r3, #1
 80046be:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80046c2:	486f      	ldr	r0, [pc, #444]	; (8004880 <Parsing_USB_command+0x9dc>)
 80046c4:	f7fb fd66 	bl	8000194 <strlen>
 80046c8:	4603      	mov	r3, r0
 80046ca:	b29b      	uxth	r3, r3
 80046cc:	4619      	mov	r1, r3
 80046ce:	486c      	ldr	r0, [pc, #432]	; (8004880 <Parsing_USB_command+0x9dc>)
 80046d0:	f005 fe82 	bl	800a3d8 <CDC_Transmit_FS>
 80046d4:	4603      	mov	r3, r0
 80046d6:	2b00      	cmp	r3, #0
 80046d8:	d003      	beq.n	80046e2 <Parsing_USB_command+0x83e>
 80046da:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046de:	2bff      	cmp	r3, #255	; 0xff
 80046e0:	d1ea      	bne.n	80046b8 <Parsing_USB_command+0x814>
			sprintf((char *)large_string_buffer,"Linearity correction C: %1.6E\n\r",corr_coeff_3);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80046e2:	4b6e      	ldr	r3, [pc, #440]	; (800489c <Parsing_USB_command+0x9f8>)
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	4618      	mov	r0, r3
 80046e8:	f7fb fec0 	bl	800046c <__aeabi_f2d>
 80046ec:	4602      	mov	r2, r0
 80046ee:	460b      	mov	r3, r1
 80046f0:	496b      	ldr	r1, [pc, #428]	; (80048a0 <Parsing_USB_command+0x9fc>)
 80046f2:	4863      	ldr	r0, [pc, #396]	; (8004880 <Parsing_USB_command+0x9dc>)
 80046f4:	f006 ffce 	bl	800b694 <siprintf>
 80046f8:	e004      	b.n	8004704 <Parsing_USB_command+0x860>
 80046fa:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046fe:	3301      	adds	r3, #1
 8004700:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004704:	485e      	ldr	r0, [pc, #376]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004706:	f7fb fd45 	bl	8000194 <strlen>
 800470a:	4603      	mov	r3, r0
 800470c:	b29b      	uxth	r3, r3
 800470e:	4619      	mov	r1, r3
 8004710:	485b      	ldr	r0, [pc, #364]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004712:	f005 fe61 	bl	800a3d8 <CDC_Transmit_FS>
 8004716:	4603      	mov	r3, r0
 8004718:	2b00      	cmp	r3, #0
 800471a:	d003      	beq.n	8004724 <Parsing_USB_command+0x880>
 800471c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004720:	2bff      	cmp	r3, #255	; 0xff
 8004722:	d1ea      	bne.n	80046fa <Parsing_USB_command+0x856>
			sprintf((char *)large_string_buffer,"LT5400 gain X2 correction: %1.6E\n\r",gain_x2_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004724:	4b5f      	ldr	r3, [pc, #380]	; (80048a4 <Parsing_USB_command+0xa00>)
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	4618      	mov	r0, r3
 800472a:	f7fb fe9f 	bl	800046c <__aeabi_f2d>
 800472e:	4602      	mov	r2, r0
 8004730:	460b      	mov	r3, r1
 8004732:	495d      	ldr	r1, [pc, #372]	; (80048a8 <Parsing_USB_command+0xa04>)
 8004734:	4852      	ldr	r0, [pc, #328]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004736:	f006 ffad 	bl	800b694 <siprintf>
 800473a:	e004      	b.n	8004746 <Parsing_USB_command+0x8a2>
 800473c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004740:	3301      	adds	r3, #1
 8004742:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004746:	484e      	ldr	r0, [pc, #312]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004748:	f7fb fd24 	bl	8000194 <strlen>
 800474c:	4603      	mov	r3, r0
 800474e:	b29b      	uxth	r3, r3
 8004750:	4619      	mov	r1, r3
 8004752:	484b      	ldr	r0, [pc, #300]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004754:	f005 fe40 	bl	800a3d8 <CDC_Transmit_FS>
 8004758:	4603      	mov	r3, r0
 800475a:	2b00      	cmp	r3, #0
 800475c:	d003      	beq.n	8004766 <Parsing_USB_command+0x8c2>
 800475e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004762:	2bff      	cmp	r3, #255	; 0xff
 8004764:	d1ea      	bne.n	800473c <Parsing_USB_command+0x898>
			sprintf((char *)large_string_buffer,"LT5400 gain X4 correction: %1.6E\n\r",gain_x4_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004766:	4b51      	ldr	r3, [pc, #324]	; (80048ac <Parsing_USB_command+0xa08>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	4618      	mov	r0, r3
 800476c:	f7fb fe7e 	bl	800046c <__aeabi_f2d>
 8004770:	4602      	mov	r2, r0
 8004772:	460b      	mov	r3, r1
 8004774:	494e      	ldr	r1, [pc, #312]	; (80048b0 <Parsing_USB_command+0xa0c>)
 8004776:	4842      	ldr	r0, [pc, #264]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004778:	f006 ff8c 	bl	800b694 <siprintf>
 800477c:	e004      	b.n	8004788 <Parsing_USB_command+0x8e4>
 800477e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004782:	3301      	adds	r3, #1
 8004784:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004788:	483d      	ldr	r0, [pc, #244]	; (8004880 <Parsing_USB_command+0x9dc>)
 800478a:	f7fb fd03 	bl	8000194 <strlen>
 800478e:	4603      	mov	r3, r0
 8004790:	b29b      	uxth	r3, r3
 8004792:	4619      	mov	r1, r3
 8004794:	483a      	ldr	r0, [pc, #232]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004796:	f005 fe1f 	bl	800a3d8 <CDC_Transmit_FS>
 800479a:	4603      	mov	r3, r0
 800479c:	2b00      	cmp	r3, #0
 800479e:	d003      	beq.n	80047a8 <Parsing_USB_command+0x904>
 80047a0:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047a4:	2bff      	cmp	r3, #255	; 0xff
 80047a6:	d1ea      	bne.n	800477e <Parsing_USB_command+0x8da>
			for(uint8_t i=0;i<C_value_max_count;i++)
 80047a8:	2300      	movs	r3, #0
 80047aa:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 80047ae:	e02d      	b.n	800480c <Parsing_USB_command+0x968>
			{
				sprintf((char *)large_string_buffer,"C%d capacitance: %1.6EpF\n\r",(int)i,C_value[i]);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80047b0:	f897 404e 	ldrb.w	r4, [r7, #78]	; 0x4e
 80047b4:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 80047b8:	4a3e      	ldr	r2, [pc, #248]	; (80048b4 <Parsing_USB_command+0xa10>)
 80047ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80047be:	4618      	mov	r0, r3
 80047c0:	f7fb fe54 	bl	800046c <__aeabi_f2d>
 80047c4:	4602      	mov	r2, r0
 80047c6:	460b      	mov	r3, r1
 80047c8:	e9cd 2300 	strd	r2, r3, [sp]
 80047cc:	4622      	mov	r2, r4
 80047ce:	493a      	ldr	r1, [pc, #232]	; (80048b8 <Parsing_USB_command+0xa14>)
 80047d0:	482b      	ldr	r0, [pc, #172]	; (8004880 <Parsing_USB_command+0x9dc>)
 80047d2:	f006 ff5f 	bl	800b694 <siprintf>
 80047d6:	e004      	b.n	80047e2 <Parsing_USB_command+0x93e>
 80047d8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047dc:	3301      	adds	r3, #1
 80047de:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80047e2:	4827      	ldr	r0, [pc, #156]	; (8004880 <Parsing_USB_command+0x9dc>)
 80047e4:	f7fb fcd6 	bl	8000194 <strlen>
 80047e8:	4603      	mov	r3, r0
 80047ea:	b29b      	uxth	r3, r3
 80047ec:	4619      	mov	r1, r3
 80047ee:	4824      	ldr	r0, [pc, #144]	; (8004880 <Parsing_USB_command+0x9dc>)
 80047f0:	f005 fdf2 	bl	800a3d8 <CDC_Transmit_FS>
 80047f4:	4603      	mov	r3, r0
 80047f6:	2b00      	cmp	r3, #0
 80047f8:	d003      	beq.n	8004802 <Parsing_USB_command+0x95e>
 80047fa:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047fe:	2bff      	cmp	r3, #255	; 0xff
 8004800:	d1ea      	bne.n	80047d8 <Parsing_USB_command+0x934>
			for(uint8_t i=0;i<C_value_max_count;i++)
 8004802:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 8004806:	3301      	adds	r3, #1
 8004808:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 800480c:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 8004810:	2b09      	cmp	r3, #9
 8004812:	d9cd      	bls.n	80047b0 <Parsing_USB_command+0x90c>
			}
			sprintf((char *)large_string_buffer,"\n\rDAC code: 0x%x\n\r",(unsigned int)DAC_code);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004814:	4b29      	ldr	r3, [pc, #164]	; (80048bc <Parsing_USB_command+0xa18>)
 8004816:	681b      	ldr	r3, [r3, #0]
 8004818:	461a      	mov	r2, r3
 800481a:	4929      	ldr	r1, [pc, #164]	; (80048c0 <Parsing_USB_command+0xa1c>)
 800481c:	4818      	ldr	r0, [pc, #96]	; (8004880 <Parsing_USB_command+0x9dc>)
 800481e:	f006 ff39 	bl	800b694 <siprintf>
 8004822:	e004      	b.n	800482e <Parsing_USB_command+0x98a>
 8004824:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004828:	3301      	adds	r3, #1
 800482a:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800482e:	4814      	ldr	r0, [pc, #80]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004830:	f7fb fcb0 	bl	8000194 <strlen>
 8004834:	4603      	mov	r3, r0
 8004836:	b29b      	uxth	r3, r3
 8004838:	4619      	mov	r1, r3
 800483a:	4811      	ldr	r0, [pc, #68]	; (8004880 <Parsing_USB_command+0x9dc>)
 800483c:	f005 fdcc 	bl	800a3d8 <CDC_Transmit_FS>
 8004840:	4603      	mov	r3, r0
 8004842:	2b00      	cmp	r3, #0
 8004844:	d003      	beq.n	800484e <Parsing_USB_command+0x9aa>
 8004846:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800484a:	2bff      	cmp	r3, #255	; 0xff
 800484c:	d1ea      	bne.n	8004824 <Parsing_USB_command+0x980>
			sprintf((char *)large_string_buffer,"DDS FTW: 0x%x\n\r",(unsigned int)DDS_FTW);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800484e:	4b1d      	ldr	r3, [pc, #116]	; (80048c4 <Parsing_USB_command+0xa20>)
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	4618      	mov	r0, r3
 8004854:	f7fc fc7e 	bl	8001154 <__aeabi_f2uiz>
 8004858:	4603      	mov	r3, r0
 800485a:	461a      	mov	r2, r3
 800485c:	491a      	ldr	r1, [pc, #104]	; (80048c8 <Parsing_USB_command+0xa24>)
 800485e:	4808      	ldr	r0, [pc, #32]	; (8004880 <Parsing_USB_command+0x9dc>)
 8004860:	f006 ff18 	bl	800b694 <siprintf>
 8004864:	e037      	b.n	80048d6 <Parsing_USB_command+0xa32>
 8004866:	bf00      	nop
 8004868:	0800fc84 	.word	0x0800fc84
 800486c:	0800fb64 	.word	0x0800fb64
 8004870:	20000650 	.word	0x20000650
 8004874:	0800fc8c 	.word	0x0800fc8c
 8004878:	20000754 	.word	0x20000754
 800487c:	0800fc94 	.word	0x0800fc94
 8004880:	200006c4 	.word	0x200006c4
 8004884:	20000758 	.word	0x20000758
 8004888:	0800fcc8 	.word	0x0800fcc8
 800488c:	2000052c 	.word	0x2000052c
 8004890:	0800fcfc 	.word	0x0800fcfc
 8004894:	20000530 	.word	0x20000530
 8004898:	0800fd1c 	.word	0x0800fd1c
 800489c:	20000534 	.word	0x20000534
 80048a0:	0800fd3c 	.word	0x0800fd3c
 80048a4:	20000538 	.word	0x20000538
 80048a8:	0800fd5c 	.word	0x0800fd5c
 80048ac:	2000053c 	.word	0x2000053c
 80048b0:	0800fd80 	.word	0x0800fd80
 80048b4:	20000620 	.word	0x20000620
 80048b8:	0800fda4 	.word	0x0800fda4
 80048bc:	20000760 	.word	0x20000760
 80048c0:	0800fdc0 	.word	0x0800fdc0
 80048c4:	2000073c 	.word	0x2000073c
 80048c8:	0800fdd4 	.word	0x0800fdd4
 80048cc:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80048d0:	3301      	adds	r3, #1
 80048d2:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80048d6:	486b      	ldr	r0, [pc, #428]	; (8004a84 <Parsing_USB_command+0xbe0>)
 80048d8:	f7fb fc5c 	bl	8000194 <strlen>
 80048dc:	4603      	mov	r3, r0
 80048de:	b29b      	uxth	r3, r3
 80048e0:	4619      	mov	r1, r3
 80048e2:	4868      	ldr	r0, [pc, #416]	; (8004a84 <Parsing_USB_command+0xbe0>)
 80048e4:	f005 fd78 	bl	800a3d8 <CDC_Transmit_FS>
 80048e8:	4603      	mov	r3, r0
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d003      	beq.n	80048f6 <Parsing_USB_command+0xa52>
 80048ee:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80048f2:	2bff      	cmp	r3, #255	; 0xff
 80048f4:	d1ea      	bne.n	80048cc <Parsing_USB_command+0xa28>
			sprintf((char *)large_string_buffer,"CPLD control word: 0x%x\n\r",CPLD_WORD);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80048f6:	4b64      	ldr	r3, [pc, #400]	; (8004a88 <Parsing_USB_command+0xbe4>)
 80048f8:	781b      	ldrb	r3, [r3, #0]
 80048fa:	461a      	mov	r2, r3
 80048fc:	4963      	ldr	r1, [pc, #396]	; (8004a8c <Parsing_USB_command+0xbe8>)
 80048fe:	4861      	ldr	r0, [pc, #388]	; (8004a84 <Parsing_USB_command+0xbe0>)
 8004900:	f006 fec8 	bl	800b694 <siprintf>
 8004904:	e004      	b.n	8004910 <Parsing_USB_command+0xa6c>
 8004906:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800490a:	3301      	adds	r3, #1
 800490c:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004910:	485c      	ldr	r0, [pc, #368]	; (8004a84 <Parsing_USB_command+0xbe0>)
 8004912:	f7fb fc3f 	bl	8000194 <strlen>
 8004916:	4603      	mov	r3, r0
 8004918:	b29b      	uxth	r3, r3
 800491a:	4619      	mov	r1, r3
 800491c:	4859      	ldr	r0, [pc, #356]	; (8004a84 <Parsing_USB_command+0xbe0>)
 800491e:	f005 fd5b 	bl	800a3d8 <CDC_Transmit_FS>
 8004922:	4603      	mov	r3, r0
 8004924:	2b00      	cmp	r3, #0
 8004926:	d003      	beq.n	8004930 <Parsing_USB_command+0xa8c>
 8004928:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800492c:	2bff      	cmp	r3, #255	; 0xff
 800492e:	d1ea      	bne.n	8004906 <Parsing_USB_command+0xa62>
			sprintf((char *)large_string_buffer,"Output mode: 0x%x\n\r",Current_output_status);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004930:	4b57      	ldr	r3, [pc, #348]	; (8004a90 <Parsing_USB_command+0xbec>)
 8004932:	781b      	ldrb	r3, [r3, #0]
 8004934:	461a      	mov	r2, r3
 8004936:	4957      	ldr	r1, [pc, #348]	; (8004a94 <Parsing_USB_command+0xbf0>)
 8004938:	4852      	ldr	r0, [pc, #328]	; (8004a84 <Parsing_USB_command+0xbe0>)
 800493a:	f006 feab 	bl	800b694 <siprintf>
 800493e:	e004      	b.n	800494a <Parsing_USB_command+0xaa6>
 8004940:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004944:	3301      	adds	r3, #1
 8004946:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800494a:	484e      	ldr	r0, [pc, #312]	; (8004a84 <Parsing_USB_command+0xbe0>)
 800494c:	f7fb fc22 	bl	8000194 <strlen>
 8004950:	4603      	mov	r3, r0
 8004952:	b29b      	uxth	r3, r3
 8004954:	4619      	mov	r1, r3
 8004956:	484b      	ldr	r0, [pc, #300]	; (8004a84 <Parsing_USB_command+0xbe0>)
 8004958:	f005 fd3e 	bl	800a3d8 <CDC_Transmit_FS>
 800495c:	4603      	mov	r3, r0
 800495e:	2b00      	cmp	r3, #0
 8004960:	d003      	beq.n	800496a <Parsing_USB_command+0xac6>
 8004962:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004966:	2bff      	cmp	r3, #255	; 0xff
 8004968:	d1ea      	bne.n	8004940 <Parsing_USB_command+0xa9c>
			sprintf((char *)large_string_buffer,"Temperature: %2.3f°C\n\r",TMP117_get_Temperature(hi2c1)*0.0078125);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800496a:	4c4b      	ldr	r4, [pc, #300]	; (8004a98 <Parsing_USB_command+0xbf4>)
 800496c:	4668      	mov	r0, sp
 800496e:	f104 0310 	add.w	r3, r4, #16
 8004972:	2244      	movs	r2, #68	; 0x44
 8004974:	4619      	mov	r1, r3
 8004976:	f006 f805 	bl	800a984 <memcpy>
 800497a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800497e:	f000 fc8f 	bl	80052a0 <TMP117_get_Temperature>
 8004982:	4603      	mov	r3, r0
 8004984:	4618      	mov	r0, r3
 8004986:	f7fb fd5f 	bl	8000448 <__aeabi_i2d>
 800498a:	f04f 0200 	mov.w	r2, #0
 800498e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8004992:	f7fb fdc3 	bl	800051c <__aeabi_dmul>
 8004996:	4602      	mov	r2, r0
 8004998:	460b      	mov	r3, r1
 800499a:	4940      	ldr	r1, [pc, #256]	; (8004a9c <Parsing_USB_command+0xbf8>)
 800499c:	4839      	ldr	r0, [pc, #228]	; (8004a84 <Parsing_USB_command+0xbe0>)
 800499e:	f006 fe79 	bl	800b694 <siprintf>
 80049a2:	e004      	b.n	80049ae <Parsing_USB_command+0xb0a>
 80049a4:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80049a8:	3301      	adds	r3, #1
 80049aa:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80049ae:	4835      	ldr	r0, [pc, #212]	; (8004a84 <Parsing_USB_command+0xbe0>)
 80049b0:	f7fb fbf0 	bl	8000194 <strlen>
 80049b4:	4603      	mov	r3, r0
 80049b6:	b29b      	uxth	r3, r3
 80049b8:	4619      	mov	r1, r3
 80049ba:	4832      	ldr	r0, [pc, #200]	; (8004a84 <Parsing_USB_command+0xbe0>)
 80049bc:	f005 fd0c 	bl	800a3d8 <CDC_Transmit_FS>
 80049c0:	4603      	mov	r3, r0
 80049c2:	2b00      	cmp	r3, #0
 80049c4:	d003      	beq.n	80049ce <Parsing_USB_command+0xb2a>
 80049c6:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80049ca:	2bff      	cmp	r3, #255	; 0xff
 80049cc:	d1ea      	bne.n	80049a4 <Parsing_USB_command+0xb00>
			send_answer_to_CDC(OK_TYPE_2);
 80049ce:	2003      	movs	r0, #3
 80049d0:	f7fe f9f0 	bl	8002db4 <send_answer_to_CDC>
			return;
 80049d4:	e053      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 80049d6:	2000      	movs	r0, #0
 80049d8:	f7fe f9ec 	bl	8002db4 <send_answer_to_CDC>
			return;
 80049dc:	e04f      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
	}

	// ==== SWEEP_DIRECTION command ====
	if(!(strcmp(decoded_string_1,"SWEEP_DIRECTION")))
 80049de:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80049e2:	492f      	ldr	r1, [pc, #188]	; (8004aa0 <Parsing_USB_command+0xbfc>)
 80049e4:	4618      	mov	r0, r3
 80049e6:	f7fb fbcb 	bl	8000180 <strcmp>
 80049ea:	4603      	mov	r3, r0
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	d142      	bne.n	8004a76 <Parsing_USB_command+0xbd2>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80049f0:	f107 030c 	add.w	r3, r7, #12
 80049f4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80049f8:	492a      	ldr	r1, [pc, #168]	; (8004aa4 <Parsing_USB_command+0xc00>)
 80049fa:	482b      	ldr	r0, [pc, #172]	; (8004aa8 <Parsing_USB_command+0xc04>)
 80049fc:	f006 fe6a 	bl	800b6d4 <siscanf>
 8004a00:	4603      	mov	r3, r0
 8004a02:	2b02      	cmp	r3, #2
 8004a04:	d003      	beq.n	8004a0e <Parsing_USB_command+0xb6a>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004a06:	2001      	movs	r0, #1
 8004a08:	f7fe f9d4 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004a0c:	e037      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}

		if(!(strcmp(decoded_string_2,"UP"))){
 8004a0e:	f107 030c 	add.w	r3, r7, #12
 8004a12:	4926      	ldr	r1, [pc, #152]	; (8004aac <Parsing_USB_command+0xc08>)
 8004a14:	4618      	mov	r0, r3
 8004a16:	f7fb fbb3 	bl	8000180 <strcmp>
 8004a1a:	4603      	mov	r3, r0
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	d106      	bne.n	8004a2e <Parsing_USB_command+0xb8a>
			DAC_code_direction=DIRECTION_UP_STATE;
 8004a20:	4b23      	ldr	r3, [pc, #140]	; (8004ab0 <Parsing_USB_command+0xc0c>)
 8004a22:	2201      	movs	r2, #1
 8004a24:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004a26:	2003      	movs	r0, #3
 8004a28:	f7fe f9c4 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004a2c:	e027      	b.n	8004a7e <Parsing_USB_command+0xbda>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 8004a2e:	f107 030c 	add.w	r3, r7, #12
 8004a32:	4920      	ldr	r1, [pc, #128]	; (8004ab4 <Parsing_USB_command+0xc10>)
 8004a34:	4618      	mov	r0, r3
 8004a36:	f7fb fba3 	bl	8000180 <strcmp>
 8004a3a:	4603      	mov	r3, r0
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d106      	bne.n	8004a4e <Parsing_USB_command+0xbaa>
				DAC_code_direction=DIRECTION_DOWN_STATE;
 8004a40:	4b1b      	ldr	r3, [pc, #108]	; (8004ab0 <Parsing_USB_command+0xc0c>)
 8004a42:	2200      	movs	r2, #0
 8004a44:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 8004a46:	2003      	movs	r0, #3
 8004a48:	f7fe f9b4 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004a4c:	e017      	b.n	8004a7e <Parsing_USB_command+0xbda>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"CYCLE"))){
 8004a4e:	f107 030c 	add.w	r3, r7, #12
 8004a52:	4919      	ldr	r1, [pc, #100]	; (8004ab8 <Parsing_USB_command+0xc14>)
 8004a54:	4618      	mov	r0, r3
 8004a56:	f7fb fb93 	bl	8000180 <strcmp>
 8004a5a:	4603      	mov	r3, r0
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d106      	bne.n	8004a6e <Parsing_USB_command+0xbca>
					DAC_code_direction=DIRECTION_CYCLE_STATE;
 8004a60:	4b13      	ldr	r3, [pc, #76]	; (8004ab0 <Parsing_USB_command+0xc0c>)
 8004a62:	2202      	movs	r2, #2
 8004a64:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 8004a66:	2003      	movs	r0, #3
 8004a68:	f7fe f9a4 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004a6c:	e007      	b.n	8004a7e <Parsing_USB_command+0xbda>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_1);
 8004a6e:	2000      	movs	r0, #0
 8004a70:	f7fe f9a0 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004a74:	e003      	b.n	8004a7e <Parsing_USB_command+0xbda>
				}
			}
		}
	}

	send_answer_to_CDC(ERROR_TYPE_1);
 8004a76:	2000      	movs	r0, #0
 8004a78:	f7fe f99c 	bl	8002db4 <send_answer_to_CDC>
	return;
 8004a7c:	bf00      	nop
}
 8004a7e:	3754      	adds	r7, #84	; 0x54
 8004a80:	46bd      	mov	sp, r7
 8004a82:	bd90      	pop	{r4, r7, pc}
 8004a84:	200006c4 	.word	0x200006c4
 8004a88:	2000073a 	.word	0x2000073a
 8004a8c:	0800fde4 	.word	0x0800fde4
 8004a90:	2000075c 	.word	0x2000075c
 8004a94:	0800fe00 	.word	0x0800fe00
 8004a98:	20000670 	.word	0x20000670
 8004a9c:	0800fe14 	.word	0x0800fe14
 8004aa0:	0800fe2c 	.word	0x0800fe2c
 8004aa4:	0800fb64 	.word	0x0800fb64
 8004aa8:	20000650 	.word	0x20000650
 8004aac:	0800fe3c 	.word	0x0800fe3c
 8004ab0:	20000764 	.word	0x20000764
 8004ab4:	0800fb98 	.word	0x0800fb98
 8004ab8:	0800fe40 	.word	0x0800fe40

08004abc <Write_to_circ_buffer>:

void Write_to_circ_buffer(uint8_t Buf)
{
 8004abc:	b580      	push	{r7, lr}
 8004abe:	b082      	sub	sp, #8
 8004ac0:	af00      	add	r7, sp, #0
 8004ac2:	4603      	mov	r3, r0
 8004ac4:	71fb      	strb	r3, [r7, #7]
	if(CIRC_GBUF_PUSH(USB_rx_command_buffer, &Buf))	CIRC_GBUF_FLUSH(USB_rx_command_buffer); // If out of space, something wrong, clean all !!!
 8004ac6:	1dfb      	adds	r3, r7, #7
 8004ac8:	4618      	mov	r0, r3
 8004aca:	f7ff f81d 	bl	8003b08 <USB_rx_command_buffer_push_refd>
 8004ace:	4603      	mov	r3, r0
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d005      	beq.n	8004ae0 <Write_to_circ_buffer+0x24>
 8004ad4:	4b04      	ldr	r3, [pc, #16]	; (8004ae8 <Write_to_circ_buffer+0x2c>)
 8004ad6:	2200      	movs	r2, #0
 8004ad8:	809a      	strh	r2, [r3, #4]
 8004ada:	4b03      	ldr	r3, [pc, #12]	; (8004ae8 <Write_to_circ_buffer+0x2c>)
 8004adc:	2200      	movs	r2, #0
 8004ade:	80da      	strh	r2, [r3, #6]
}
 8004ae0:	bf00      	nop
 8004ae2:	3708      	adds	r7, #8
 8004ae4:	46bd      	mov	sp, r7
 8004ae6:	bd80      	pop	{r7, pc}
 8004ae8:	20000000 	.word	0x20000000

08004aec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004aec:	b480      	push	{r7}
 8004aee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004af0:	b672      	cpsid	i
}
 8004af2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8004af4:	e7fe      	b.n	8004af4 <Error_Handler+0x8>
	...

08004af8 <MX_SPI1_Init>:
SPI_HandleTypeDef hspi1;
SPI_HandleTypeDef hspi2;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8004af8:	b580      	push	{r7, lr}
 8004afa:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8004afc:	4b16      	ldr	r3, [pc, #88]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004afe:	4a17      	ldr	r2, [pc, #92]	; (8004b5c <MX_SPI1_Init+0x64>)
 8004b00:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004b02:	4b15      	ldr	r3, [pc, #84]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b04:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004b08:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004b0a:	4b13      	ldr	r3, [pc, #76]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b0c:	2200      	movs	r2, #0
 8004b0e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 8004b10:	4b11      	ldr	r3, [pc, #68]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b12:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004b16:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004b18:	4b0f      	ldr	r3, [pc, #60]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b1a:	2200      	movs	r2, #0
 8004b1c:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8004b1e:	4b0e      	ldr	r3, [pc, #56]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b20:	2201      	movs	r2, #1
 8004b22:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004b24:	4b0c      	ldr	r3, [pc, #48]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b26:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004b2a:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8004b2c:	4b0a      	ldr	r3, [pc, #40]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b2e:	2218      	movs	r2, #24
 8004b30:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004b32:	4b09      	ldr	r3, [pc, #36]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b34:	2200      	movs	r2, #0
 8004b36:	621a      	str	r2, [r3, #32]
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004b38:	4b07      	ldr	r3, [pc, #28]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b3a:	2200      	movs	r2, #0
 8004b3c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8004b3e:	4b06      	ldr	r3, [pc, #24]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b40:	220a      	movs	r2, #10
 8004b42:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004b44:	4804      	ldr	r0, [pc, #16]	; (8004b58 <MX_SPI1_Init+0x60>)
 8004b46:	f003 f833 	bl	8007bb0 <HAL_SPI_Init>
 8004b4a:	4603      	mov	r3, r0
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d001      	beq.n	8004b54 <MX_SPI1_Init+0x5c>
  {
    Error_Handler();
 8004b50:	f7ff ffcc 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8004b54:	bf00      	nop
 8004b56:	bd80      	pop	{r7, pc}
 8004b58:	2000076c 	.word	0x2000076c
 8004b5c:	40013000 	.word	0x40013000

08004b60 <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8004b60:	b580      	push	{r7, lr}
 8004b62:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8004b64:	4b16      	ldr	r3, [pc, #88]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b66:	4a17      	ldr	r2, [pc, #92]	; (8004bc4 <MX_SPI2_Init+0x64>)
 8004b68:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8004b6a:	4b15      	ldr	r3, [pc, #84]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b6c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004b70:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8004b72:	4b13      	ldr	r3, [pc, #76]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b74:	2200      	movs	r2, #0
 8004b76:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 8004b78:	4b11      	ldr	r3, [pc, #68]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b7a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004b7e:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004b80:	4b0f      	ldr	r3, [pc, #60]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b82:	2200      	movs	r2, #0
 8004b84:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8004b86:	4b0e      	ldr	r3, [pc, #56]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b88:	2201      	movs	r2, #1
 8004b8a:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8004b8c:	4b0c      	ldr	r3, [pc, #48]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b8e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004b92:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8004b94:	4b0a      	ldr	r3, [pc, #40]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b96:	2218      	movs	r2, #24
 8004b98:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004b9a:	4b09      	ldr	r3, [pc, #36]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004b9c:	2200      	movs	r2, #0
 8004b9e:	621a      	str	r2, [r3, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004ba0:	4b07      	ldr	r3, [pc, #28]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004ba2:	2200      	movs	r2, #0
 8004ba4:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8004ba6:	4b06      	ldr	r3, [pc, #24]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004ba8:	220a      	movs	r2, #10
 8004baa:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8004bac:	4804      	ldr	r0, [pc, #16]	; (8004bc0 <MX_SPI2_Init+0x60>)
 8004bae:	f002 ffff 	bl	8007bb0 <HAL_SPI_Init>
 8004bb2:	4603      	mov	r3, r0
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d001      	beq.n	8004bbc <MX_SPI2_Init+0x5c>
  {
    Error_Handler();
 8004bb8:	f7ff ff98 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8004bbc:	bf00      	nop
 8004bbe:	bd80      	pop	{r7, pc}
 8004bc0:	200007c4 	.word	0x200007c4
 8004bc4:	40003800 	.word	0x40003800

08004bc8 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8004bc8:	b580      	push	{r7, lr}
 8004bca:	b08c      	sub	sp, #48	; 0x30
 8004bcc:	af00      	add	r7, sp, #0
 8004bce:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004bd0:	f107 031c 	add.w	r3, r7, #28
 8004bd4:	2200      	movs	r2, #0
 8004bd6:	601a      	str	r2, [r3, #0]
 8004bd8:	605a      	str	r2, [r3, #4]
 8004bda:	609a      	str	r2, [r3, #8]
 8004bdc:	60da      	str	r2, [r3, #12]
 8004bde:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	4a32      	ldr	r2, [pc, #200]	; (8004cb0 <HAL_SPI_MspInit+0xe8>)
 8004be6:	4293      	cmp	r3, r2
 8004be8:	d130      	bne.n	8004c4c <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004bea:	4b32      	ldr	r3, [pc, #200]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004bec:	6a1b      	ldr	r3, [r3, #32]
 8004bee:	4a31      	ldr	r2, [pc, #196]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004bf0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004bf4:	6213      	str	r3, [r2, #32]
 8004bf6:	4b2f      	ldr	r3, [pc, #188]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004bf8:	6a1b      	ldr	r3, [r3, #32]
 8004bfa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004bfe:	61bb      	str	r3, [r7, #24]
 8004c00:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004c02:	4b2c      	ldr	r3, [pc, #176]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c04:	69db      	ldr	r3, [r3, #28]
 8004c06:	4a2b      	ldr	r2, [pc, #172]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c08:	f043 0301 	orr.w	r3, r3, #1
 8004c0c:	61d3      	str	r3, [r2, #28]
 8004c0e:	4b29      	ldr	r3, [pc, #164]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c10:	69db      	ldr	r3, [r3, #28]
 8004c12:	f003 0301 	and.w	r3, r3, #1
 8004c16:	617b      	str	r3, [r7, #20]
 8004c18:	697b      	ldr	r3, [r7, #20]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8004c1a:	23e0      	movs	r3, #224	; 0xe0
 8004c1c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004c1e:	2302      	movs	r3, #2
 8004c20:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004c22:	2300      	movs	r3, #0
 8004c24:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004c26:	2303      	movs	r3, #3
 8004c28:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8004c2a:	2305      	movs	r3, #5
 8004c2c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004c2e:	f107 031c 	add.w	r3, r7, #28
 8004c32:	4619      	mov	r1, r3
 8004c34:	4820      	ldr	r0, [pc, #128]	; (8004cb8 <HAL_SPI_MspInit+0xf0>)
 8004c36:	f000 fe9f 	bl	8005978 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 1, 0);
 8004c3a:	2200      	movs	r2, #0
 8004c3c:	2101      	movs	r1, #1
 8004c3e:	2023      	movs	r0, #35	; 0x23
 8004c40:	f000 fc5e 	bl	8005500 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8004c44:	2023      	movs	r0, #35	; 0x23
 8004c46:	f000 fc99 	bl	800557c <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8004c4a:	e02d      	b.n	8004ca8 <HAL_SPI_MspInit+0xe0>
  else if(spiHandle->Instance==SPI2)
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	4a1a      	ldr	r2, [pc, #104]	; (8004cbc <HAL_SPI_MspInit+0xf4>)
 8004c52:	4293      	cmp	r3, r2
 8004c54:	d128      	bne.n	8004ca8 <HAL_SPI_MspInit+0xe0>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8004c56:	4b17      	ldr	r3, [pc, #92]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c5a:	4a16      	ldr	r2, [pc, #88]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c5c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004c60:	6253      	str	r3, [r2, #36]	; 0x24
 8004c62:	4b14      	ldr	r3, [pc, #80]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c66:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004c6a:	613b      	str	r3, [r7, #16]
 8004c6c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004c6e:	4b11      	ldr	r3, [pc, #68]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c70:	69db      	ldr	r3, [r3, #28]
 8004c72:	4a10      	ldr	r2, [pc, #64]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c74:	f043 0302 	orr.w	r3, r3, #2
 8004c78:	61d3      	str	r3, [r2, #28]
 8004c7a:	4b0e      	ldr	r3, [pc, #56]	; (8004cb4 <HAL_SPI_MspInit+0xec>)
 8004c7c:	69db      	ldr	r3, [r3, #28]
 8004c7e:	f003 0302 	and.w	r3, r3, #2
 8004c82:	60fb      	str	r3, [r7, #12]
 8004c84:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8004c86:	f44f 4320 	mov.w	r3, #40960	; 0xa000
 8004c8a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004c8c:	2302      	movs	r3, #2
 8004c8e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004c90:	2300      	movs	r3, #0
 8004c92:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004c94:	2303      	movs	r3, #3
 8004c96:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8004c98:	2305      	movs	r3, #5
 8004c9a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004c9c:	f107 031c 	add.w	r3, r7, #28
 8004ca0:	4619      	mov	r1, r3
 8004ca2:	4807      	ldr	r0, [pc, #28]	; (8004cc0 <HAL_SPI_MspInit+0xf8>)
 8004ca4:	f000 fe68 	bl	8005978 <HAL_GPIO_Init>
}
 8004ca8:	bf00      	nop
 8004caa:	3730      	adds	r7, #48	; 0x30
 8004cac:	46bd      	mov	sp, r7
 8004cae:	bd80      	pop	{r7, pc}
 8004cb0:	40013000 	.word	0x40013000
 8004cb4:	40023800 	.word	0x40023800
 8004cb8:	40020000 	.word	0x40020000
 8004cbc:	40003800 	.word	0x40003800
 8004cc0:	40020400 	.word	0x40020400

08004cc4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004cc4:	b580      	push	{r7, lr}
 8004cc6:	b084      	sub	sp, #16
 8004cc8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 8004cca:	4b26      	ldr	r3, [pc, #152]	; (8004d64 <HAL_MspInit+0xa0>)
 8004ccc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cce:	4a25      	ldr	r2, [pc, #148]	; (8004d64 <HAL_MspInit+0xa0>)
 8004cd0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004cd4:	6253      	str	r3, [r2, #36]	; 0x24
 8004cd6:	4b23      	ldr	r3, [pc, #140]	; (8004d64 <HAL_MspInit+0xa0>)
 8004cd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cda:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8004cde:	60fb      	str	r3, [r7, #12]
 8004ce0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004ce2:	4b20      	ldr	r3, [pc, #128]	; (8004d64 <HAL_MspInit+0xa0>)
 8004ce4:	6a1b      	ldr	r3, [r3, #32]
 8004ce6:	4a1f      	ldr	r2, [pc, #124]	; (8004d64 <HAL_MspInit+0xa0>)
 8004ce8:	f043 0301 	orr.w	r3, r3, #1
 8004cec:	6213      	str	r3, [r2, #32]
 8004cee:	4b1d      	ldr	r3, [pc, #116]	; (8004d64 <HAL_MspInit+0xa0>)
 8004cf0:	6a1b      	ldr	r3, [r3, #32]
 8004cf2:	f003 0301 	and.w	r3, r3, #1
 8004cf6:	60bb      	str	r3, [r7, #8]
 8004cf8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8004cfa:	4b1a      	ldr	r3, [pc, #104]	; (8004d64 <HAL_MspInit+0xa0>)
 8004cfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cfe:	4a19      	ldr	r2, [pc, #100]	; (8004d64 <HAL_MspInit+0xa0>)
 8004d00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004d04:	6253      	str	r3, [r2, #36]	; 0x24
 8004d06:	4b17      	ldr	r3, [pc, #92]	; (8004d64 <HAL_MspInit+0xa0>)
 8004d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004d0e:	607b      	str	r3, [r7, #4]
 8004d10:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 1, 0);
 8004d12:	2200      	movs	r2, #0
 8004d14:	2101      	movs	r1, #1
 8004d16:	f06f 000b 	mvn.w	r0, #11
 8004d1a:	f000 fbf1 	bl	8005500 <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 1, 0);
 8004d1e:	2200      	movs	r2, #0
 8004d20:	2101      	movs	r1, #1
 8004d22:	f06f 000a 	mvn.w	r0, #10
 8004d26:	f000 fbeb 	bl	8005500 <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 1, 0);
 8004d2a:	2200      	movs	r2, #0
 8004d2c:	2101      	movs	r1, #1
 8004d2e:	f06f 0009 	mvn.w	r0, #9
 8004d32:	f000 fbe5 	bl	8005500 <HAL_NVIC_SetPriority>
  /* SVC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVC_IRQn, 1, 0);
 8004d36:	2200      	movs	r2, #0
 8004d38:	2101      	movs	r1, #1
 8004d3a:	f06f 0004 	mvn.w	r0, #4
 8004d3e:	f000 fbdf 	bl	8005500 <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 1, 0);
 8004d42:	2200      	movs	r2, #0
 8004d44:	2101      	movs	r1, #1
 8004d46:	f06f 0003 	mvn.w	r0, #3
 8004d4a:	f000 fbd9 	bl	8005500 <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 1, 0);
 8004d4e:	2200      	movs	r2, #0
 8004d50:	2101      	movs	r1, #1
 8004d52:	f06f 0001 	mvn.w	r0, #1
 8004d56:	f000 fbd3 	bl	8005500 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8004d5a:	bf00      	nop
 8004d5c:	3710      	adds	r7, #16
 8004d5e:	46bd      	mov	sp, r7
 8004d60:	bd80      	pop	{r7, pc}
 8004d62:	bf00      	nop
 8004d64:	40023800 	.word	0x40023800

08004d68 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004d68:	b480      	push	{r7}
 8004d6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004d6c:	e7fe      	b.n	8004d6c <NMI_Handler+0x4>

08004d6e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004d6e:	b480      	push	{r7}
 8004d70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004d72:	e7fe      	b.n	8004d72 <HardFault_Handler+0x4>

08004d74 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004d74:	b480      	push	{r7}
 8004d76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004d78:	e7fe      	b.n	8004d78 <MemManage_Handler+0x4>

08004d7a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004d7a:	b480      	push	{r7}
 8004d7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004d7e:	e7fe      	b.n	8004d7e <BusFault_Handler+0x4>

08004d80 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004d80:	b480      	push	{r7}
 8004d82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004d84:	e7fe      	b.n	8004d84 <UsageFault_Handler+0x4>

08004d86 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004d86:	b480      	push	{r7}
 8004d88:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8004d8a:	bf00      	nop
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	bc80      	pop	{r7}
 8004d90:	4770      	bx	lr

08004d92 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004d92:	b480      	push	{r7}
 8004d94:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004d96:	bf00      	nop
 8004d98:	46bd      	mov	sp, r7
 8004d9a:	bc80      	pop	{r7}
 8004d9c:	4770      	bx	lr

08004d9e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004d9e:	b480      	push	{r7}
 8004da0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004da2:	bf00      	nop
 8004da4:	46bd      	mov	sp, r7
 8004da6:	bc80      	pop	{r7}
 8004da8:	4770      	bx	lr

08004daa <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004daa:	b580      	push	{r7, lr}
 8004dac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004dae:	f000 fb71 	bl	8005494 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004db2:	bf00      	nop
 8004db4:	bd80      	pop	{r7, pc}
	...

08004db8 <USB_LP_IRQHandler>:

/**
  * @brief This function handles USB low priority interrupt.
  */
void USB_LP_IRQHandler(void)
{
 8004db8:	b580      	push	{r7, lr}
 8004dba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8004dbc:	4802      	ldr	r0, [pc, #8]	; (8004dc8 <USB_LP_IRQHandler+0x10>)
 8004dbe:	f001 fc29 	bl	8006614 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN USB_LP_IRQn 1 */

  /* USER CODE END USB_LP_IRQn 1 */
}
 8004dc2:	bf00      	nop
 8004dc4:	bd80      	pop	{r7, pc}
 8004dc6:	bf00      	nop
 8004dc8:	20000f24 	.word	0x20000f24

08004dcc <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8004dcc:	b580      	push	{r7, lr}
 8004dce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Encode_Push_Pin);
 8004dd0:	f44f 7080 	mov.w	r0, #256	; 0x100
 8004dd4:	f000 fec4 	bl	8005b60 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(CPU_IRQ_Pin);
 8004dd8:	f44f 7000 	mov.w	r0, #512	; 0x200
 8004ddc:	f000 fec0 	bl	8005b60 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8004de0:	bf00      	nop
 8004de2:	bd80      	pop	{r7, pc}

08004de4 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8004de4:	b580      	push	{r7, lr}
 8004de6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8004de8:	4802      	ldr	r0, [pc, #8]	; (8004df4 <TIM2_IRQHandler+0x10>)
 8004dea:	f003 fd97 	bl	800891c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8004dee:	bf00      	nop
 8004df0:	bd80      	pop	{r7, pc}
 8004df2:	bf00      	nop
 8004df4:	20000820 	.word	0x20000820

08004df8 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8004df8:	b580      	push	{r7, lr}
 8004dfa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8004dfc:	4802      	ldr	r0, [pc, #8]	; (8004e08 <TIM3_IRQHandler+0x10>)
 8004dfe:	f003 fd8d 	bl	800891c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8004e02:	bf00      	nop
 8004e04:	bd80      	pop	{r7, pc}
 8004e06:	bf00      	nop
 8004e08:	20000860 	.word	0x20000860

08004e0c <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8004e0c:	b580      	push	{r7, lr}
 8004e0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004e10:	4802      	ldr	r0, [pc, #8]	; (8004e1c <SPI1_IRQHandler+0x10>)
 8004e12:	f003 fb07 	bl	8008424 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8004e16:	bf00      	nop
 8004e18:	bd80      	pop	{r7, pc}
 8004e1a:	bf00      	nop
 8004e1c:	2000076c 	.word	0x2000076c

08004e20 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8004e20:	b580      	push	{r7, lr}
 8004e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Start_button_Pin);
 8004e24:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8004e28:	f000 fe9a 	bl	8005b60 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004e2c:	bf00      	nop
 8004e2e:	bd80      	pop	{r7, pc}

08004e30 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8004e30:	b480      	push	{r7}
 8004e32:	af00      	add	r7, sp, #0
	return 1;
 8004e34:	2301      	movs	r3, #1
}
 8004e36:	4618      	mov	r0, r3
 8004e38:	46bd      	mov	sp, r7
 8004e3a:	bc80      	pop	{r7}
 8004e3c:	4770      	bx	lr

08004e3e <_kill>:

int _kill(int pid, int sig)
{
 8004e3e:	b580      	push	{r7, lr}
 8004e40:	b082      	sub	sp, #8
 8004e42:	af00      	add	r7, sp, #0
 8004e44:	6078      	str	r0, [r7, #4]
 8004e46:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8004e48:	f005 fd72 	bl	800a930 <__errno>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	2216      	movs	r2, #22
 8004e50:	601a      	str	r2, [r3, #0]
	return -1;
 8004e52:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004e56:	4618      	mov	r0, r3
 8004e58:	3708      	adds	r7, #8
 8004e5a:	46bd      	mov	sp, r7
 8004e5c:	bd80      	pop	{r7, pc}

08004e5e <_exit>:

void _exit (int status)
{
 8004e5e:	b580      	push	{r7, lr}
 8004e60:	b082      	sub	sp, #8
 8004e62:	af00      	add	r7, sp, #0
 8004e64:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8004e66:	f04f 31ff 	mov.w	r1, #4294967295
 8004e6a:	6878      	ldr	r0, [r7, #4]
 8004e6c:	f7ff ffe7 	bl	8004e3e <_kill>
	while (1) {}		/* Make sure we hang here */
 8004e70:	e7fe      	b.n	8004e70 <_exit+0x12>

08004e72 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004e72:	b580      	push	{r7, lr}
 8004e74:	b086      	sub	sp, #24
 8004e76:	af00      	add	r7, sp, #0
 8004e78:	60f8      	str	r0, [r7, #12]
 8004e7a:	60b9      	str	r1, [r7, #8]
 8004e7c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004e7e:	2300      	movs	r3, #0
 8004e80:	617b      	str	r3, [r7, #20]
 8004e82:	e00a      	b.n	8004e9a <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8004e84:	f3af 8000 	nop.w
 8004e88:	4601      	mov	r1, r0
 8004e8a:	68bb      	ldr	r3, [r7, #8]
 8004e8c:	1c5a      	adds	r2, r3, #1
 8004e8e:	60ba      	str	r2, [r7, #8]
 8004e90:	b2ca      	uxtb	r2, r1
 8004e92:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004e94:	697b      	ldr	r3, [r7, #20]
 8004e96:	3301      	adds	r3, #1
 8004e98:	617b      	str	r3, [r7, #20]
 8004e9a:	697a      	ldr	r2, [r7, #20]
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	429a      	cmp	r2, r3
 8004ea0:	dbf0      	blt.n	8004e84 <_read+0x12>
	}

return len;
 8004ea2:	687b      	ldr	r3, [r7, #4]
}
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	3718      	adds	r7, #24
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	bd80      	pop	{r7, pc}

08004eac <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004eac:	b580      	push	{r7, lr}
 8004eae:	b086      	sub	sp, #24
 8004eb0:	af00      	add	r7, sp, #0
 8004eb2:	60f8      	str	r0, [r7, #12]
 8004eb4:	60b9      	str	r1, [r7, #8]
 8004eb6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004eb8:	2300      	movs	r3, #0
 8004eba:	617b      	str	r3, [r7, #20]
 8004ebc:	e009      	b.n	8004ed2 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8004ebe:	68bb      	ldr	r3, [r7, #8]
 8004ec0:	1c5a      	adds	r2, r3, #1
 8004ec2:	60ba      	str	r2, [r7, #8]
 8004ec4:	781b      	ldrb	r3, [r3, #0]
 8004ec6:	4618      	mov	r0, r3
 8004ec8:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004ecc:	697b      	ldr	r3, [r7, #20]
 8004ece:	3301      	adds	r3, #1
 8004ed0:	617b      	str	r3, [r7, #20]
 8004ed2:	697a      	ldr	r2, [r7, #20]
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	429a      	cmp	r2, r3
 8004ed8:	dbf1      	blt.n	8004ebe <_write+0x12>
	}
	return len;
 8004eda:	687b      	ldr	r3, [r7, #4]
}
 8004edc:	4618      	mov	r0, r3
 8004ede:	3718      	adds	r7, #24
 8004ee0:	46bd      	mov	sp, r7
 8004ee2:	bd80      	pop	{r7, pc}

08004ee4 <_close>:

int _close(int file)
{
 8004ee4:	b480      	push	{r7}
 8004ee6:	b083      	sub	sp, #12
 8004ee8:	af00      	add	r7, sp, #0
 8004eea:	6078      	str	r0, [r7, #4]
	return -1;
 8004eec:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004ef0:	4618      	mov	r0, r3
 8004ef2:	370c      	adds	r7, #12
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bc80      	pop	{r7}
 8004ef8:	4770      	bx	lr

08004efa <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004efa:	b480      	push	{r7}
 8004efc:	b083      	sub	sp, #12
 8004efe:	af00      	add	r7, sp, #0
 8004f00:	6078      	str	r0, [r7, #4]
 8004f02:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8004f04:	683b      	ldr	r3, [r7, #0]
 8004f06:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004f0a:	605a      	str	r2, [r3, #4]
	return 0;
 8004f0c:	2300      	movs	r3, #0
}
 8004f0e:	4618      	mov	r0, r3
 8004f10:	370c      	adds	r7, #12
 8004f12:	46bd      	mov	sp, r7
 8004f14:	bc80      	pop	{r7}
 8004f16:	4770      	bx	lr

08004f18 <_isatty>:

int _isatty(int file)
{
 8004f18:	b480      	push	{r7}
 8004f1a:	b083      	sub	sp, #12
 8004f1c:	af00      	add	r7, sp, #0
 8004f1e:	6078      	str	r0, [r7, #4]
	return 1;
 8004f20:	2301      	movs	r3, #1
}
 8004f22:	4618      	mov	r0, r3
 8004f24:	370c      	adds	r7, #12
 8004f26:	46bd      	mov	sp, r7
 8004f28:	bc80      	pop	{r7}
 8004f2a:	4770      	bx	lr

08004f2c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004f2c:	b480      	push	{r7}
 8004f2e:	b085      	sub	sp, #20
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	60f8      	str	r0, [r7, #12]
 8004f34:	60b9      	str	r1, [r7, #8]
 8004f36:	607a      	str	r2, [r7, #4]
	return 0;
 8004f38:	2300      	movs	r3, #0
}
 8004f3a:	4618      	mov	r0, r3
 8004f3c:	3714      	adds	r7, #20
 8004f3e:	46bd      	mov	sp, r7
 8004f40:	bc80      	pop	{r7}
 8004f42:	4770      	bx	lr

08004f44 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b086      	sub	sp, #24
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004f4c:	4a14      	ldr	r2, [pc, #80]	; (8004fa0 <_sbrk+0x5c>)
 8004f4e:	4b15      	ldr	r3, [pc, #84]	; (8004fa4 <_sbrk+0x60>)
 8004f50:	1ad3      	subs	r3, r2, r3
 8004f52:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8004f54:	697b      	ldr	r3, [r7, #20]
 8004f56:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004f58:	4b13      	ldr	r3, [pc, #76]	; (8004fa8 <_sbrk+0x64>)
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	d102      	bne.n	8004f66 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8004f60:	4b11      	ldr	r3, [pc, #68]	; (8004fa8 <_sbrk+0x64>)
 8004f62:	4a12      	ldr	r2, [pc, #72]	; (8004fac <_sbrk+0x68>)
 8004f64:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004f66:	4b10      	ldr	r3, [pc, #64]	; (8004fa8 <_sbrk+0x64>)
 8004f68:	681a      	ldr	r2, [r3, #0]
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	4413      	add	r3, r2
 8004f6e:	693a      	ldr	r2, [r7, #16]
 8004f70:	429a      	cmp	r2, r3
 8004f72:	d207      	bcs.n	8004f84 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8004f74:	f005 fcdc 	bl	800a930 <__errno>
 8004f78:	4603      	mov	r3, r0
 8004f7a:	220c      	movs	r2, #12
 8004f7c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8004f7e:	f04f 33ff 	mov.w	r3, #4294967295
 8004f82:	e009      	b.n	8004f98 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8004f84:	4b08      	ldr	r3, [pc, #32]	; (8004fa8 <_sbrk+0x64>)
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8004f8a:	4b07      	ldr	r3, [pc, #28]	; (8004fa8 <_sbrk+0x64>)
 8004f8c:	681a      	ldr	r2, [r3, #0]
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	4413      	add	r3, r2
 8004f92:	4a05      	ldr	r2, [pc, #20]	; (8004fa8 <_sbrk+0x64>)
 8004f94:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8004f96:	68fb      	ldr	r3, [r7, #12]
}
 8004f98:	4618      	mov	r0, r3
 8004f9a:	3718      	adds	r7, #24
 8004f9c:	46bd      	mov	sp, r7
 8004f9e:	bd80      	pop	{r7, pc}
 8004fa0:	20004000 	.word	0x20004000
 8004fa4:	00000c00 	.word	0x00000c00
 8004fa8:	2000081c 	.word	0x2000081c
 8004fac:	20001440 	.word	0x20001440

08004fb0 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8004fb0:	b480      	push	{r7}
 8004fb2:	af00      	add	r7, sp, #0
    
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8004fb4:	bf00      	nop
 8004fb6:	46bd      	mov	sp, r7
 8004fb8:	bc80      	pop	{r7}
 8004fba:	4770      	bx	lr

08004fbc <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8004fbc:	b580      	push	{r7, lr}
 8004fbe:	b086      	sub	sp, #24
 8004fc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004fc2:	f107 0308 	add.w	r3, r7, #8
 8004fc6:	2200      	movs	r2, #0
 8004fc8:	601a      	str	r2, [r3, #0]
 8004fca:	605a      	str	r2, [r3, #4]
 8004fcc:	609a      	str	r2, [r3, #8]
 8004fce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004fd0:	463b      	mov	r3, r7
 8004fd2:	2200      	movs	r2, #0
 8004fd4:	601a      	str	r2, [r3, #0]
 8004fd6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004fd8:	4b1d      	ldr	r3, [pc, #116]	; (8005050 <MX_TIM2_Init+0x94>)
 8004fda:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004fde:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 32000 -1;
 8004fe0:	4b1b      	ldr	r3, [pc, #108]	; (8005050 <MX_TIM2_Init+0x94>)
 8004fe2:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8004fe6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004fe8:	4b19      	ldr	r3, [pc, #100]	; (8005050 <MX_TIM2_Init+0x94>)
 8004fea:	2200      	movs	r2, #0
 8004fec:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50 - 1;
 8004fee:	4b18      	ldr	r3, [pc, #96]	; (8005050 <MX_TIM2_Init+0x94>)
 8004ff0:	2231      	movs	r2, #49	; 0x31
 8004ff2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004ff4:	4b16      	ldr	r3, [pc, #88]	; (8005050 <MX_TIM2_Init+0x94>)
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004ffa:	4b15      	ldr	r3, [pc, #84]	; (8005050 <MX_TIM2_Init+0x94>)
 8004ffc:	2200      	movs	r2, #0
 8004ffe:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8005000:	4813      	ldr	r0, [pc, #76]	; (8005050 <MX_TIM2_Init+0x94>)
 8005002:	f003 faa3 	bl	800854c <HAL_TIM_Base_Init>
 8005006:	4603      	mov	r3, r0
 8005008:	2b00      	cmp	r3, #0
 800500a:	d001      	beq.n	8005010 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 800500c:	f7ff fd6e 	bl	8004aec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005010:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005014:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8005016:	f107 0308 	add.w	r3, r7, #8
 800501a:	4619      	mov	r1, r3
 800501c:	480c      	ldr	r0, [pc, #48]	; (8005050 <MX_TIM2_Init+0x94>)
 800501e:	f003 fbcf 	bl	80087c0 <HAL_TIM_ConfigClockSource>
 8005022:	4603      	mov	r3, r0
 8005024:	2b00      	cmp	r3, #0
 8005026:	d001      	beq.n	800502c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8005028:	f7ff fd60 	bl	8004aec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800502c:	2300      	movs	r3, #0
 800502e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005030:	2300      	movs	r3, #0
 8005032:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005034:	463b      	mov	r3, r7
 8005036:	4619      	mov	r1, r3
 8005038:	4805      	ldr	r0, [pc, #20]	; (8005050 <MX_TIM2_Init+0x94>)
 800503a:	f003 fcfb 	bl	8008a34 <HAL_TIMEx_MasterConfigSynchronization>
 800503e:	4603      	mov	r3, r0
 8005040:	2b00      	cmp	r3, #0
 8005042:	d001      	beq.n	8005048 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8005044:	f7ff fd52 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8005048:	bf00      	nop
 800504a:	3718      	adds	r7, #24
 800504c:	46bd      	mov	sp, r7
 800504e:	bd80      	pop	{r7, pc}
 8005050:	20000820 	.word	0x20000820

08005054 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8005054:	b580      	push	{r7, lr}
 8005056:	b086      	sub	sp, #24
 8005058:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800505a:	f107 0308 	add.w	r3, r7, #8
 800505e:	2200      	movs	r2, #0
 8005060:	601a      	str	r2, [r3, #0]
 8005062:	605a      	str	r2, [r3, #4]
 8005064:	609a      	str	r2, [r3, #8]
 8005066:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005068:	463b      	mov	r3, r7
 800506a:	2200      	movs	r2, #0
 800506c:	601a      	str	r2, [r3, #0]
 800506e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8005070:	4b1d      	ldr	r3, [pc, #116]	; (80050e8 <MX_TIM3_Init+0x94>)
 8005072:	4a1e      	ldr	r2, [pc, #120]	; (80050ec <MX_TIM3_Init+0x98>)
 8005074:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 32000 -1;
 8005076:	4b1c      	ldr	r3, [pc, #112]	; (80050e8 <MX_TIM3_Init+0x94>)
 8005078:	f647 42ff 	movw	r2, #31999	; 0x7cff
 800507c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800507e:	4b1a      	ldr	r3, [pc, #104]	; (80050e8 <MX_TIM3_Init+0x94>)
 8005080:	2200      	movs	r2, #0
 8005082:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 500 -1;
 8005084:	4b18      	ldr	r3, [pc, #96]	; (80050e8 <MX_TIM3_Init+0x94>)
 8005086:	f240 12f3 	movw	r2, #499	; 0x1f3
 800508a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800508c:	4b16      	ldr	r3, [pc, #88]	; (80050e8 <MX_TIM3_Init+0x94>)
 800508e:	2200      	movs	r2, #0
 8005090:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005092:	4b15      	ldr	r3, [pc, #84]	; (80050e8 <MX_TIM3_Init+0x94>)
 8005094:	2200      	movs	r2, #0
 8005096:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8005098:	4813      	ldr	r0, [pc, #76]	; (80050e8 <MX_TIM3_Init+0x94>)
 800509a:	f003 fa57 	bl	800854c <HAL_TIM_Base_Init>
 800509e:	4603      	mov	r3, r0
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d001      	beq.n	80050a8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80050a4:	f7ff fd22 	bl	8004aec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80050a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80050ac:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80050ae:	f107 0308 	add.w	r3, r7, #8
 80050b2:	4619      	mov	r1, r3
 80050b4:	480c      	ldr	r0, [pc, #48]	; (80050e8 <MX_TIM3_Init+0x94>)
 80050b6:	f003 fb83 	bl	80087c0 <HAL_TIM_ConfigClockSource>
 80050ba:	4603      	mov	r3, r0
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d001      	beq.n	80050c4 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80050c0:	f7ff fd14 	bl	8004aec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80050c4:	2300      	movs	r3, #0
 80050c6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80050c8:	2300      	movs	r3, #0
 80050ca:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80050cc:	463b      	mov	r3, r7
 80050ce:	4619      	mov	r1, r3
 80050d0:	4805      	ldr	r0, [pc, #20]	; (80050e8 <MX_TIM3_Init+0x94>)
 80050d2:	f003 fcaf 	bl	8008a34 <HAL_TIMEx_MasterConfigSynchronization>
 80050d6:	4603      	mov	r3, r0
 80050d8:	2b00      	cmp	r3, #0
 80050da:	d001      	beq.n	80050e0 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80050dc:	f7ff fd06 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80050e0:	bf00      	nop
 80050e2:	3718      	adds	r7, #24
 80050e4:	46bd      	mov	sp, r7
 80050e6:	bd80      	pop	{r7, pc}
 80050e8:	20000860 	.word	0x20000860
 80050ec:	40000400 	.word	0x40000400

080050f0 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 80050f0:	b580      	push	{r7, lr}
 80050f2:	b08c      	sub	sp, #48	; 0x30
 80050f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80050f6:	f107 030c 	add.w	r3, r7, #12
 80050fa:	2224      	movs	r2, #36	; 0x24
 80050fc:	2100      	movs	r1, #0
 80050fe:	4618      	mov	r0, r3
 8005100:	f005 fc4e 	bl	800a9a0 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005104:	1d3b      	adds	r3, r7, #4
 8005106:	2200      	movs	r2, #0
 8005108:	601a      	str	r2, [r3, #0]
 800510a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800510c:	4b20      	ldr	r3, [pc, #128]	; (8005190 <MX_TIM4_Init+0xa0>)
 800510e:	4a21      	ldr	r2, [pc, #132]	; (8005194 <MX_TIM4_Init+0xa4>)
 8005110:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8005112:	4b1f      	ldr	r3, [pc, #124]	; (8005190 <MX_TIM4_Init+0xa0>)
 8005114:	2200      	movs	r2, #0
 8005116:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005118:	4b1d      	ldr	r3, [pc, #116]	; (8005190 <MX_TIM4_Init+0xa0>)
 800511a:	2200      	movs	r2, #0
 800511c:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800511e:	4b1c      	ldr	r3, [pc, #112]	; (8005190 <MX_TIM4_Init+0xa0>)
 8005120:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005124:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005126:	4b1a      	ldr	r3, [pc, #104]	; (8005190 <MX_TIM4_Init+0xa0>)
 8005128:	2200      	movs	r2, #0
 800512a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800512c:	4b18      	ldr	r3, [pc, #96]	; (8005190 <MX_TIM4_Init+0xa0>)
 800512e:	2200      	movs	r2, #0
 8005130:	615a      	str	r2, [r3, #20]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8005132:	2301      	movs	r3, #1
 8005134:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8005136:	2300      	movs	r3, #0
 8005138:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800513a:	2301      	movs	r3, #1
 800513c:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800513e:	2300      	movs	r3, #0
 8005140:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8005142:	2300      	movs	r3, #0
 8005144:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 8005146:	2302      	movs	r3, #2
 8005148:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800514a:	2301      	movs	r3, #1
 800514c:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800514e:	2300      	movs	r3, #0
 8005150:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8005152:	2300      	movs	r3, #0
 8005154:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8005156:	f107 030c 	add.w	r3, r7, #12
 800515a:	4619      	mov	r1, r3
 800515c:	480c      	ldr	r0, [pc, #48]	; (8005190 <MX_TIM4_Init+0xa0>)
 800515e:	f003 fa71 	bl	8008644 <HAL_TIM_Encoder_Init>
 8005162:	4603      	mov	r3, r0
 8005164:	2b00      	cmp	r3, #0
 8005166:	d001      	beq.n	800516c <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8005168:	f7ff fcc0 	bl	8004aec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800516c:	2300      	movs	r3, #0
 800516e:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005170:	2300      	movs	r3, #0
 8005172:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8005174:	1d3b      	adds	r3, r7, #4
 8005176:	4619      	mov	r1, r3
 8005178:	4805      	ldr	r0, [pc, #20]	; (8005190 <MX_TIM4_Init+0xa0>)
 800517a:	f003 fc5b 	bl	8008a34 <HAL_TIMEx_MasterConfigSynchronization>
 800517e:	4603      	mov	r3, r0
 8005180:	2b00      	cmp	r3, #0
 8005182:	d001      	beq.n	8005188 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8005184:	f7ff fcb2 	bl	8004aec <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8005188:	bf00      	nop
 800518a:	3730      	adds	r7, #48	; 0x30
 800518c:	46bd      	mov	sp, r7
 800518e:	bd80      	pop	{r7, pc}
 8005190:	200008a0 	.word	0x200008a0
 8005194:	40000800 	.word	0x40000800

08005198 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8005198:	b580      	push	{r7, lr}
 800519a:	b084      	sub	sp, #16
 800519c:	af00      	add	r7, sp, #0
 800519e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80051a8:	d114      	bne.n	80051d4 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80051aa:	4b19      	ldr	r3, [pc, #100]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ae:	4a18      	ldr	r2, [pc, #96]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051b0:	f043 0301 	orr.w	r3, r3, #1
 80051b4:	6253      	str	r3, [r2, #36]	; 0x24
 80051b6:	4b16      	ldr	r3, [pc, #88]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ba:	f003 0301 	and.w	r3, r3, #1
 80051be:	60fb      	str	r3, [r7, #12]
 80051c0:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 80051c2:	2200      	movs	r2, #0
 80051c4:	2101      	movs	r1, #1
 80051c6:	201c      	movs	r0, #28
 80051c8:	f000 f99a 	bl	8005500 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80051cc:	201c      	movs	r0, #28
 80051ce:	f000 f9d5 	bl	800557c <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 80051d2:	e018      	b.n	8005206 <HAL_TIM_Base_MspInit+0x6e>
  else if(tim_baseHandle->Instance==TIM3)
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	4a0e      	ldr	r2, [pc, #56]	; (8005214 <HAL_TIM_Base_MspInit+0x7c>)
 80051da:	4293      	cmp	r3, r2
 80051dc:	d113      	bne.n	8005206 <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80051de:	4b0c      	ldr	r3, [pc, #48]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051e2:	4a0b      	ldr	r2, [pc, #44]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051e4:	f043 0302 	orr.w	r3, r3, #2
 80051e8:	6253      	str	r3, [r2, #36]	; 0x24
 80051ea:	4b09      	ldr	r3, [pc, #36]	; (8005210 <HAL_TIM_Base_MspInit+0x78>)
 80051ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ee:	f003 0302 	and.w	r3, r3, #2
 80051f2:	60bb      	str	r3, [r7, #8]
 80051f4:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 80051f6:	2200      	movs	r2, #0
 80051f8:	2101      	movs	r1, #1
 80051fa:	201d      	movs	r0, #29
 80051fc:	f000 f980 	bl	8005500 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8005200:	201d      	movs	r0, #29
 8005202:	f000 f9bb 	bl	800557c <HAL_NVIC_EnableIRQ>
}
 8005206:	bf00      	nop
 8005208:	3710      	adds	r7, #16
 800520a:	46bd      	mov	sp, r7
 800520c:	bd80      	pop	{r7, pc}
 800520e:	bf00      	nop
 8005210:	40023800 	.word	0x40023800
 8005214:	40000400 	.word	0x40000400

08005218 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 8005218:	b580      	push	{r7, lr}
 800521a:	b08a      	sub	sp, #40	; 0x28
 800521c:	af00      	add	r7, sp, #0
 800521e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005220:	f107 0314 	add.w	r3, r7, #20
 8005224:	2200      	movs	r2, #0
 8005226:	601a      	str	r2, [r3, #0]
 8005228:	605a      	str	r2, [r3, #4]
 800522a:	609a      	str	r2, [r3, #8]
 800522c:	60da      	str	r2, [r3, #12]
 800522e:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM4)
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	4a17      	ldr	r2, [pc, #92]	; (8005294 <HAL_TIM_Encoder_MspInit+0x7c>)
 8005236:	4293      	cmp	r3, r2
 8005238:	d127      	bne.n	800528a <HAL_TIM_Encoder_MspInit+0x72>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 800523a:	4b17      	ldr	r3, [pc, #92]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 800523c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800523e:	4a16      	ldr	r2, [pc, #88]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 8005240:	f043 0304 	orr.w	r3, r3, #4
 8005244:	6253      	str	r3, [r2, #36]	; 0x24
 8005246:	4b14      	ldr	r3, [pc, #80]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 8005248:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800524a:	f003 0304 	and.w	r3, r3, #4
 800524e:	613b      	str	r3, [r7, #16]
 8005250:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005252:	4b11      	ldr	r3, [pc, #68]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 8005254:	69db      	ldr	r3, [r3, #28]
 8005256:	4a10      	ldr	r2, [pc, #64]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 8005258:	f043 0302 	orr.w	r3, r3, #2
 800525c:	61d3      	str	r3, [r2, #28]
 800525e:	4b0e      	ldr	r3, [pc, #56]	; (8005298 <HAL_TIM_Encoder_MspInit+0x80>)
 8005260:	69db      	ldr	r3, [r3, #28]
 8005262:	f003 0302 	and.w	r3, r3, #2
 8005266:	60fb      	str	r3, [r7, #12]
 8005268:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800526a:	23c0      	movs	r3, #192	; 0xc0
 800526c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800526e:	2302      	movs	r3, #2
 8005270:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005272:	2300      	movs	r3, #0
 8005274:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005276:	2300      	movs	r3, #0
 8005278:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800527a:	2302      	movs	r3, #2
 800527c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800527e:	f107 0314 	add.w	r3, r7, #20
 8005282:	4619      	mov	r1, r3
 8005284:	4805      	ldr	r0, [pc, #20]	; (800529c <HAL_TIM_Encoder_MspInit+0x84>)
 8005286:	f000 fb77 	bl	8005978 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 800528a:	bf00      	nop
 800528c:	3728      	adds	r7, #40	; 0x28
 800528e:	46bd      	mov	sp, r7
 8005290:	bd80      	pop	{r7, pc}
 8005292:	bf00      	nop
 8005294:	40000800 	.word	0x40000800
 8005298:	40023800 	.word	0x40023800
 800529c:	40020400 	.word	0x40020400

080052a0 <TMP117_get_Temperature>:
   @Description   Function gives to us ambient temperature
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  Float
 */
uint16_t TMP117_get_Temperature             (I2C_HandleTypeDef i2c)
{
 80052a0:	b084      	sub	sp, #16
 80052a2:	b580      	push	{r7, lr}
 80052a4:	b084      	sub	sp, #16
 80052a6:	af02      	add	r7, sp, #8
 80052a8:	f107 0c10 	add.w	ip, r7, #16
 80052ac:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      int16_t tmpx=0;
 80052b0:	2300      	movs	r3, #0
 80052b2:	80fb      	strh	r3, [r7, #6]
      buf[0]=TMP117_TemperatureRegister;
 80052b4:	4b18      	ldr	r3, [pc, #96]	; (8005318 <TMP117_get_Temperature+0x78>)
 80052b6:	2200      	movs	r2, #0
 80052b8:	701a      	strb	r2, [r3, #0]

//      buf[0]=TMP117_ConfigurationRegister;

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,1,100);
 80052ba:	4b18      	ldr	r3, [pc, #96]	; (800531c <TMP117_get_Temperature+0x7c>)
 80052bc:	781b      	ldrb	r3, [r3, #0]
 80052be:	b299      	uxth	r1, r3
 80052c0:	2364      	movs	r3, #100	; 0x64
 80052c2:	9300      	str	r3, [sp, #0]
 80052c4:	2301      	movs	r3, #1
 80052c6:	4a14      	ldr	r2, [pc, #80]	; (8005318 <TMP117_get_Temperature+0x78>)
 80052c8:	f107 0010 	add.w	r0, r7, #16
 80052cc:	f000 fd1c 	bl	8005d08 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 80052d0:	2001      	movs	r0, #1
 80052d2:	f000 f8f1 	bl	80054b8 <HAL_Delay>
      HAL_I2C_Master_Receive(&i2c,TMP117_DeviceID,buf,2,1000);
 80052d6:	4b11      	ldr	r3, [pc, #68]	; (800531c <TMP117_get_Temperature+0x7c>)
 80052d8:	781b      	ldrb	r3, [r3, #0]
 80052da:	b299      	uxth	r1, r3
 80052dc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80052e0:	9300      	str	r3, [sp, #0]
 80052e2:	2302      	movs	r3, #2
 80052e4:	4a0c      	ldr	r2, [pc, #48]	; (8005318 <TMP117_get_Temperature+0x78>)
 80052e6:	f107 0010 	add.w	r0, r7, #16
 80052ea:	f000 fea3 	bl	8006034 <HAL_I2C_Master_Receive>
      tmpx=buf[0];
 80052ee:	4b0a      	ldr	r3, [pc, #40]	; (8005318 <TMP117_get_Temperature+0x78>)
 80052f0:	781b      	ldrb	r3, [r3, #0]
 80052f2:	80fb      	strh	r3, [r7, #6]
      tmpx<<=8;
 80052f4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80052f8:	021b      	lsls	r3, r3, #8
 80052fa:	80fb      	strh	r3, [r7, #6]
      tmpx|=buf[1];
 80052fc:	4b06      	ldr	r3, [pc, #24]	; (8005318 <TMP117_get_Temperature+0x78>)
 80052fe:	785b      	ldrb	r3, [r3, #1]
 8005300:	b21a      	sxth	r2, r3
 8005302:	88fb      	ldrh	r3, [r7, #6]
 8005304:	4313      	orrs	r3, r2
 8005306:	80fb      	strh	r3, [r7, #6]

      return tmpx;
 8005308:	88fb      	ldrh	r3, [r7, #6]
}
 800530a:	4618      	mov	r0, r3
 800530c:	3708      	adds	r7, #8
 800530e:	46bd      	mov	sp, r7
 8005310:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005314:	b004      	add	sp, #16
 8005316:	4770      	bx	lr
 8005318:	200008e0 	.word	0x200008e0
 800531c:	20000024 	.word	0x20000024

08005320 <TMP117_set_Configuration>:
                  uint8_t first     ->  [15:8]
                  uint8_t second    ->  [7:0]
   @Return value  void
 */
void TMP117_set_Configuration            (I2C_HandleTypeDef i2c,uint8_t first,uint8_t second)
{
 8005320:	b084      	sub	sp, #16
 8005322:	b580      	push	{r7, lr}
 8005324:	b082      	sub	sp, #8
 8005326:	af02      	add	r7, sp, #8
 8005328:	f107 0c08 	add.w	ip, r7, #8
 800532c:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      buf[0]=TMP117_ConfigurationRegister;
 8005330:	4b0f      	ldr	r3, [pc, #60]	; (8005370 <TMP117_set_Configuration+0x50>)
 8005332:	2201      	movs	r2, #1
 8005334:	701a      	strb	r2, [r3, #0]
      buf[1]=first;
 8005336:	4a0e      	ldr	r2, [pc, #56]	; (8005370 <TMP117_set_Configuration+0x50>)
 8005338:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 800533c:	7053      	strb	r3, [r2, #1]
      buf[2]=second;
 800533e:	4a0c      	ldr	r2, [pc, #48]	; (8005370 <TMP117_set_Configuration+0x50>)
 8005340:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8005344:	7093      	strb	r3, [r2, #2]

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,2,100);
 8005346:	4b0b      	ldr	r3, [pc, #44]	; (8005374 <TMP117_set_Configuration+0x54>)
 8005348:	781b      	ldrb	r3, [r3, #0]
 800534a:	b299      	uxth	r1, r3
 800534c:	2364      	movs	r3, #100	; 0x64
 800534e:	9300      	str	r3, [sp, #0]
 8005350:	2302      	movs	r3, #2
 8005352:	4a07      	ldr	r2, [pc, #28]	; (8005370 <TMP117_set_Configuration+0x50>)
 8005354:	f107 0008 	add.w	r0, r7, #8
 8005358:	f000 fcd6 	bl	8005d08 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 800535c:	2001      	movs	r0, #1
 800535e:	f000 f8ab 	bl	80054b8 <HAL_Delay>
}
 8005362:	bf00      	nop
 8005364:	46bd      	mov	sp, r7
 8005366:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800536a:	b004      	add	sp, #16
 800536c:	4770      	bx	lr
 800536e:	bf00      	nop
 8005370:	200008e4 	.word	0x200008e4
 8005374:	20000024 	.word	0x20000024

08005378 <TMP117_Initialization>:
   @Description   Custom Parameters for Sensor
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  void
 */
void TMP117_Initialization               (I2C_HandleTypeDef i2c)
{
 8005378:	b084      	sub	sp, #16
 800537a:	b580      	push	{r7, lr}
 800537c:	b094      	sub	sp, #80	; 0x50
 800537e:	af14      	add	r7, sp, #80	; 0x50
 8005380:	f107 0c08 	add.w	ip, r7, #8
 8005384:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    TMP117_set_Configuration(i2c,0x02,0x22);
 8005388:	2322      	movs	r3, #34	; 0x22
 800538a:	9312      	str	r3, [sp, #72]	; 0x48
 800538c:	2302      	movs	r3, #2
 800538e:	9311      	str	r3, [sp, #68]	; 0x44
 8005390:	4668      	mov	r0, sp
 8005392:	f107 0318 	add.w	r3, r7, #24
 8005396:	2244      	movs	r2, #68	; 0x44
 8005398:	4619      	mov	r1, r3
 800539a:	f005 faf3 	bl	800a984 <memcpy>
 800539e:	f107 0308 	add.w	r3, r7, #8
 80053a2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80053a4:	f7ff ffbc 	bl	8005320 <TMP117_set_Configuration>
	HAL_Delay(2); // wait 2ms
 80053a8:	2002      	movs	r0, #2
 80053aa:	f000 f885 	bl	80054b8 <HAL_Delay>
	TMP117_set_Configuration(i2c,0x03,0xA0);
 80053ae:	23a0      	movs	r3, #160	; 0xa0
 80053b0:	9312      	str	r3, [sp, #72]	; 0x48
 80053b2:	2303      	movs	r3, #3
 80053b4:	9311      	str	r3, [sp, #68]	; 0x44
 80053b6:	4668      	mov	r0, sp
 80053b8:	f107 0318 	add.w	r3, r7, #24
 80053bc:	2244      	movs	r2, #68	; 0x44
 80053be:	4619      	mov	r1, r3
 80053c0:	f005 fae0 	bl	800a984 <memcpy>
 80053c4:	f107 0308 	add.w	r3, r7, #8
 80053c8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80053ca:	f7ff ffa9 	bl	8005320 <TMP117_set_Configuration>
	//TMP117_set_Configuration(i2c,0x02,0x20);
//      TMP117_set_Temperature_Offset(i2c,0x00,0x00); //Default Value
//      TMP117_set_LowLimit(i2c,0x12,0x80);           //Set 10 Celcius
//      TMP117_set_HighLimit(i2c,0x51,0x20);          //Set 40 Celcius
}
 80053ce:	bf00      	nop
 80053d0:	46bd      	mov	sp, r7
 80053d2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80053d6:	b004      	add	sp, #16
 80053d8:	4770      	bx	lr
	...

080053dc <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80053dc:	480c      	ldr	r0, [pc, #48]	; (8005410 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80053de:	490d      	ldr	r1, [pc, #52]	; (8005414 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80053e0:	4a0d      	ldr	r2, [pc, #52]	; (8005418 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80053e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80053e4:	e002      	b.n	80053ec <LoopCopyDataInit>

080053e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80053e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80053e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80053ea:	3304      	adds	r3, #4

080053ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80053ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80053ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80053f0:	d3f9      	bcc.n	80053e6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80053f2:	4a0a      	ldr	r2, [pc, #40]	; (800541c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80053f4:	4c0a      	ldr	r4, [pc, #40]	; (8005420 <LoopFillZerobss+0x22>)
  movs r3, #0
 80053f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80053f8:	e001      	b.n	80053fe <LoopFillZerobss>

080053fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80053fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80053fc:	3204      	adds	r2, #4

080053fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80053fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8005400:	d3fb      	bcc.n	80053fa <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8005402:	f7ff fdd5 	bl	8004fb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8005406:	f005 fa99 	bl	800a93c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800540a:	f7fe fb9d 	bl	8003b48 <main>
  bx lr
 800540e:	4770      	bx	lr
  ldr r0, =_sdata
 8005410:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8005414:	20000510 	.word	0x20000510
  ldr r2, =_sidata
 8005418:	08010c14 	.word	0x08010c14
  ldr r2, =_sbss
 800541c:	20000510 	.word	0x20000510
  ldr r4, =_ebss
 8005420:	20001440 	.word	0x20001440

08005424 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8005424:	e7fe      	b.n	8005424 <ADC1_IRQHandler>
	...

08005428 <HAL_InitTick>:
 8005428:	b538      	push	{r3, r4, r5, lr}
 800542a:	4b0f      	ldr	r3, [pc, #60]	; (8005468 <HAL_InitTick+0x40>)
 800542c:	681b      	ldr	r3, [r3, #0]
 800542e:	b90b      	cbnz	r3, 8005434 <HAL_InitTick+0xc>
 8005430:	2001      	movs	r0, #1
 8005432:	bd38      	pop	{r3, r4, r5, pc}
 8005434:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005438:	fbb2 f3f3 	udiv	r3, r2, r3
 800543c:	490b      	ldr	r1, [pc, #44]	; (800546c <HAL_InitTick+0x44>)
 800543e:	4605      	mov	r5, r0
 8005440:	6808      	ldr	r0, [r1, #0]
 8005442:	fbb0 f0f3 	udiv	r0, r0, r3
 8005446:	f000 f8a7 	bl	8005598 <HAL_SYSTICK_Config>
 800544a:	4604      	mov	r4, r0
 800544c:	2800      	cmp	r0, #0
 800544e:	d1ef      	bne.n	8005430 <HAL_InitTick+0x8>
 8005450:	2d0f      	cmp	r5, #15
 8005452:	d8ed      	bhi.n	8005430 <HAL_InitTick+0x8>
 8005454:	4602      	mov	r2, r0
 8005456:	4629      	mov	r1, r5
 8005458:	f04f 30ff 	mov.w	r0, #4294967295
 800545c:	f000 f850 	bl	8005500 <HAL_NVIC_SetPriority>
 8005460:	4b03      	ldr	r3, [pc, #12]	; (8005470 <HAL_InitTick+0x48>)
 8005462:	4620      	mov	r0, r4
 8005464:	601d      	str	r5, [r3, #0]
 8005466:	bd38      	pop	{r3, r4, r5, pc}
 8005468:	20000028 	.word	0x20000028
 800546c:	20000020 	.word	0x20000020
 8005470:	2000002c 	.word	0x2000002c

08005474 <HAL_Init>:
 8005474:	2003      	movs	r0, #3
 8005476:	b510      	push	{r4, lr}
 8005478:	f000 f830 	bl	80054dc <HAL_NVIC_SetPriorityGrouping>
 800547c:	200f      	movs	r0, #15
 800547e:	f7ff ffd3 	bl	8005428 <HAL_InitTick>
 8005482:	b110      	cbz	r0, 800548a <HAL_Init+0x16>
 8005484:	2401      	movs	r4, #1
 8005486:	4620      	mov	r0, r4
 8005488:	bd10      	pop	{r4, pc}
 800548a:	4604      	mov	r4, r0
 800548c:	f7ff fc1a 	bl	8004cc4 <HAL_MspInit>
 8005490:	4620      	mov	r0, r4
 8005492:	bd10      	pop	{r4, pc}

08005494 <HAL_IncTick>:
 8005494:	4a03      	ldr	r2, [pc, #12]	; (80054a4 <HAL_IncTick+0x10>)
 8005496:	4904      	ldr	r1, [pc, #16]	; (80054a8 <HAL_IncTick+0x14>)
 8005498:	6813      	ldr	r3, [r2, #0]
 800549a:	6809      	ldr	r1, [r1, #0]
 800549c:	440b      	add	r3, r1
 800549e:	6013      	str	r3, [r2, #0]
 80054a0:	4770      	bx	lr
 80054a2:	bf00      	nop
 80054a4:	200008e8 	.word	0x200008e8
 80054a8:	20000028 	.word	0x20000028

080054ac <HAL_GetTick>:
 80054ac:	4b01      	ldr	r3, [pc, #4]	; (80054b4 <HAL_GetTick+0x8>)
 80054ae:	6818      	ldr	r0, [r3, #0]
 80054b0:	4770      	bx	lr
 80054b2:	bf00      	nop
 80054b4:	200008e8 	.word	0x200008e8

080054b8 <HAL_Delay>:
 80054b8:	b538      	push	{r3, r4, r5, lr}
 80054ba:	4604      	mov	r4, r0
 80054bc:	f7ff fff6 	bl	80054ac <HAL_GetTick>
 80054c0:	1c63      	adds	r3, r4, #1
 80054c2:	4605      	mov	r5, r0
 80054c4:	d002      	beq.n	80054cc <HAL_Delay+0x14>
 80054c6:	4b04      	ldr	r3, [pc, #16]	; (80054d8 <HAL_Delay+0x20>)
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	441c      	add	r4, r3
 80054cc:	f7ff ffee 	bl	80054ac <HAL_GetTick>
 80054d0:	1b40      	subs	r0, r0, r5
 80054d2:	42a0      	cmp	r0, r4
 80054d4:	d3fa      	bcc.n	80054cc <HAL_Delay+0x14>
 80054d6:	bd38      	pop	{r3, r4, r5, pc}
 80054d8:	20000028 	.word	0x20000028

080054dc <HAL_NVIC_SetPriorityGrouping>:
 80054dc:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 80054e0:	4906      	ldr	r1, [pc, #24]	; (80054fc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80054e2:	0203      	lsls	r3, r0, #8
 80054e4:	68ca      	ldr	r2, [r1, #12]
 80054e6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80054ea:	ea02 020c 	and.w	r2, r2, ip
 80054ee:	4313      	orrs	r3, r2
 80054f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80054f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80054f8:	60cb      	str	r3, [r1, #12]
 80054fa:	4770      	bx	lr
 80054fc:	e000ed00 	.word	0xe000ed00

08005500 <HAL_NVIC_SetPriority>:
 8005500:	4b1c      	ldr	r3, [pc, #112]	; (8005574 <HAL_NVIC_SetPriority+0x74>)
 8005502:	b500      	push	{lr}
 8005504:	68db      	ldr	r3, [r3, #12]
 8005506:	f3c3 2302 	ubfx	r3, r3, #8, #3
 800550a:	f1c3 0e07 	rsb	lr, r3, #7
 800550e:	f1be 0f04 	cmp.w	lr, #4
 8005512:	f103 0c04 	add.w	ip, r3, #4
 8005516:	bf28      	it	cs
 8005518:	f04f 0e04 	movcs.w	lr, #4
 800551c:	f1bc 0f06 	cmp.w	ip, #6
 8005520:	d91b      	bls.n	800555a <HAL_NVIC_SetPriority+0x5a>
 8005522:	f04f 3cff 	mov.w	ip, #4294967295
 8005526:	3b03      	subs	r3, #3
 8005528:	fa0c fc03 	lsl.w	ip, ip, r3
 800552c:	ea22 020c 	bic.w	r2, r2, ip
 8005530:	f04f 3cff 	mov.w	ip, #4294967295
 8005534:	fa0c fc0e 	lsl.w	ip, ip, lr
 8005538:	ea21 010c 	bic.w	r1, r1, ip
 800553c:	4099      	lsls	r1, r3
 800553e:	2800      	cmp	r0, #0
 8005540:	ea41 0102 	orr.w	r1, r1, r2
 8005544:	db0c      	blt.n	8005560 <HAL_NVIC_SetPriority+0x60>
 8005546:	0109      	lsls	r1, r1, #4
 8005548:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800554c:	b2c9      	uxtb	r1, r1
 800554e:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8005552:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8005556:	f85d fb04 	ldr.w	pc, [sp], #4
 800555a:	2200      	movs	r2, #0
 800555c:	4613      	mov	r3, r2
 800555e:	e7e7      	b.n	8005530 <HAL_NVIC_SetPriority+0x30>
 8005560:	4b05      	ldr	r3, [pc, #20]	; (8005578 <HAL_NVIC_SetPriority+0x78>)
 8005562:	f000 000f 	and.w	r0, r0, #15
 8005566:	0109      	lsls	r1, r1, #4
 8005568:	b2c9      	uxtb	r1, r1
 800556a:	4403      	add	r3, r0
 800556c:	7619      	strb	r1, [r3, #24]
 800556e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005572:	bf00      	nop
 8005574:	e000ed00 	.word	0xe000ed00
 8005578:	e000ecfc 	.word	0xe000ecfc

0800557c <HAL_NVIC_EnableIRQ>:
 800557c:	2800      	cmp	r0, #0
 800557e:	db07      	blt.n	8005590 <HAL_NVIC_EnableIRQ+0x14>
 8005580:	2301      	movs	r3, #1
 8005582:	f000 011f 	and.w	r1, r0, #31
 8005586:	4a03      	ldr	r2, [pc, #12]	; (8005594 <HAL_NVIC_EnableIRQ+0x18>)
 8005588:	0940      	lsrs	r0, r0, #5
 800558a:	408b      	lsls	r3, r1
 800558c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8005590:	4770      	bx	lr
 8005592:	bf00      	nop
 8005594:	e000e100 	.word	0xe000e100

08005598 <HAL_SYSTICK_Config>:
 8005598:	3801      	subs	r0, #1
 800559a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800559e:	d20f      	bcs.n	80055c0 <HAL_SYSTICK_Config+0x28>
 80055a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80055a4:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 80055a8:	2200      	movs	r2, #0
 80055aa:	2107      	movs	r1, #7
 80055ac:	b410      	push	{r4}
 80055ae:	4c05      	ldr	r4, [pc, #20]	; (80055c4 <HAL_SYSTICK_Config+0x2c>)
 80055b0:	6158      	str	r0, [r3, #20]
 80055b2:	f884 c023 	strb.w	ip, [r4, #35]	; 0x23
 80055b6:	4610      	mov	r0, r2
 80055b8:	619a      	str	r2, [r3, #24]
 80055ba:	bc10      	pop	{r4}
 80055bc:	6119      	str	r1, [r3, #16]
 80055be:	4770      	bx	lr
 80055c0:	2001      	movs	r0, #1
 80055c2:	4770      	bx	lr
 80055c4:	e000ed00 	.word	0xe000ed00

080055c8 <HAL_DMA_Abort_IT>:
 80055c8:	b538      	push	{r3, r4, r5, lr}
 80055ca:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 80055ce:	4603      	mov	r3, r0
 80055d0:	2a02      	cmp	r2, #2
 80055d2:	d003      	beq.n	80055dc <HAL_DMA_Abort_IT+0x14>
 80055d4:	2204      	movs	r2, #4
 80055d6:	2001      	movs	r0, #1
 80055d8:	639a      	str	r2, [r3, #56]	; 0x38
 80055da:	bd38      	pop	{r3, r4, r5, pc}
 80055dc:	6801      	ldr	r1, [r0, #0]
 80055de:	f04f 0c01 	mov.w	ip, #1
 80055e2:	680c      	ldr	r4, [r1, #0]
 80055e4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80055e6:	f024 040e 	bic.w	r4, r4, #14
 80055ea:	600c      	str	r4, [r1, #0]
 80055ec:	2400      	movs	r4, #0
 80055ee:	680d      	ldr	r5, [r1, #0]
 80055f0:	f002 021c 	and.w	r2, r2, #28
 80055f4:	f025 0501 	bic.w	r5, r5, #1
 80055f8:	600d      	str	r5, [r1, #0]
 80055fa:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 80055fc:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80055fe:	fa0c f202 	lsl.w	r2, ip, r2
 8005602:	606a      	str	r2, [r5, #4]
 8005604:	f880 c021 	strb.w	ip, [r0, #33]	; 0x21
 8005608:	f880 4020 	strb.w	r4, [r0, #32]
 800560c:	b111      	cbz	r1, 8005614 <HAL_DMA_Abort_IT+0x4c>
 800560e:	4788      	blx	r1
 8005610:	4620      	mov	r0, r4
 8005612:	bd38      	pop	{r3, r4, r5, pc}
 8005614:	4608      	mov	r0, r1
 8005616:	bd38      	pop	{r3, r4, r5, pc}

08005618 <FLASH_SetErrorCode>:
 8005618:	4b27      	ldr	r3, [pc, #156]	; (80056b8 <FLASH_SetErrorCode+0xa0>)
 800561a:	b570      	push	{r4, r5, r6, lr}
 800561c:	699b      	ldr	r3, [r3, #24]
 800561e:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 8005622:	d039      	beq.n	8005698 <FLASH_SetErrorCode+0x80>
 8005624:	4a25      	ldr	r2, [pc, #148]	; (80056bc <FLASH_SetErrorCode+0xa4>)
 8005626:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 800562a:	6953      	ldr	r3, [r2, #20]
 800562c:	f44f 6ee0 	mov.w	lr, #1792	; 0x700
 8005630:	f043 0302 	orr.w	r3, r3, #2
 8005634:	6153      	str	r3, [r2, #20]
 8005636:	f44f 6c30 	mov.w	ip, #2816	; 0xb00
 800563a:	f44f 6050 	mov.w	r0, #3328	; 0xd00
 800563e:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8005642:	f44f 6110 	mov.w	r1, #2304	; 0x900
 8005646:	f44f 7540 	mov.w	r5, #768	; 0x300
 800564a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800564e:	4c1a      	ldr	r4, [pc, #104]	; (80056b8 <FLASH_SetErrorCode+0xa0>)
 8005650:	69a4      	ldr	r4, [r4, #24]
 8005652:	05a4      	lsls	r4, r4, #22
 8005654:	d508      	bpl.n	8005668 <FLASH_SetErrorCode+0x50>
 8005656:	4630      	mov	r0, r6
 8005658:	4672      	mov	r2, lr
 800565a:	4661      	mov	r1, ip
 800565c:	462b      	mov	r3, r5
 800565e:	4d17      	ldr	r5, [pc, #92]	; (80056bc <FLASH_SetErrorCode+0xa4>)
 8005660:	696c      	ldr	r4, [r5, #20]
 8005662:	f044 0401 	orr.w	r4, r4, #1
 8005666:	616c      	str	r4, [r5, #20]
 8005668:	4c13      	ldr	r4, [pc, #76]	; (80056b8 <FLASH_SetErrorCode+0xa0>)
 800566a:	69a4      	ldr	r4, [r4, #24]
 800566c:	0524      	lsls	r4, r4, #20
 800566e:	d506      	bpl.n	800567e <FLASH_SetErrorCode+0x66>
 8005670:	4602      	mov	r2, r0
 8005672:	4812      	ldr	r0, [pc, #72]	; (80056bc <FLASH_SetErrorCode+0xa4>)
 8005674:	460b      	mov	r3, r1
 8005676:	6941      	ldr	r1, [r0, #20]
 8005678:	f041 0104 	orr.w	r1, r1, #4
 800567c:	6141      	str	r1, [r0, #20]
 800567e:	490e      	ldr	r1, [pc, #56]	; (80056b8 <FLASH_SetErrorCode+0xa0>)
 8005680:	6989      	ldr	r1, [r1, #24]
 8005682:	0549      	lsls	r1, r1, #21
 8005684:	d505      	bpl.n	8005692 <FLASH_SetErrorCode+0x7a>
 8005686:	490d      	ldr	r1, [pc, #52]	; (80056bc <FLASH_SetErrorCode+0xa4>)
 8005688:	4613      	mov	r3, r2
 800568a:	694a      	ldr	r2, [r1, #20]
 800568c:	f042 0208 	orr.w	r2, r2, #8
 8005690:	614a      	str	r2, [r1, #20]
 8005692:	4a09      	ldr	r2, [pc, #36]	; (80056b8 <FLASH_SetErrorCode+0xa0>)
 8005694:	6193      	str	r3, [r2, #24]
 8005696:	bd70      	pop	{r4, r5, r6, pc}
 8005698:	f44f 6660 	mov.w	r6, #3584	; 0xe00
 800569c:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
 80056a0:	f44f 6c20 	mov.w	ip, #2560	; 0xa00
 80056a4:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80056a8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80056ac:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80056b0:	f44f 7500 	mov.w	r5, #512	; 0x200
 80056b4:	e7cb      	b.n	800564e <FLASH_SetErrorCode+0x36>
 80056b6:	bf00      	nop
 80056b8:	40023c00 	.word	0x40023c00
 80056bc:	200008ec 	.word	0x200008ec

080056c0 <FLASH_WaitForLastOperation>:
 80056c0:	b570      	push	{r4, r5, r6, lr}
 80056c2:	4604      	mov	r4, r0
 80056c4:	f7ff fef2 	bl	80054ac <HAL_GetTick>
 80056c8:	4605      	mov	r5, r0
 80056ca:	4e15      	ldr	r6, [pc, #84]	; (8005720 <FLASH_WaitForLastOperation+0x60>)
 80056cc:	1c60      	adds	r0, r4, #1
 80056ce:	d11c      	bne.n	800570a <FLASH_WaitForLastOperation+0x4a>
 80056d0:	4a13      	ldr	r2, [pc, #76]	; (8005720 <FLASH_WaitForLastOperation+0x60>)
 80056d2:	6993      	ldr	r3, [r2, #24]
 80056d4:	07d9      	lsls	r1, r3, #31
 80056d6:	d4fc      	bmi.n	80056d2 <FLASH_WaitForLastOperation+0x12>
 80056d8:	4b11      	ldr	r3, [pc, #68]	; (8005720 <FLASH_WaitForLastOperation+0x60>)
 80056da:	699a      	ldr	r2, [r3, #24]
 80056dc:	0794      	lsls	r4, r2, #30
 80056de:	bf44      	itt	mi
 80056e0:	2202      	movmi	r2, #2
 80056e2:	619a      	strmi	r2, [r3, #24]
 80056e4:	4b0e      	ldr	r3, [pc, #56]	; (8005720 <FLASH_WaitForLastOperation+0x60>)
 80056e6:	699a      	ldr	r2, [r3, #24]
 80056e8:	05d0      	lsls	r0, r2, #23
 80056ea:	d40a      	bmi.n	8005702 <FLASH_WaitForLastOperation+0x42>
 80056ec:	699a      	ldr	r2, [r3, #24]
 80056ee:	0511      	lsls	r1, r2, #20
 80056f0:	d407      	bmi.n	8005702 <FLASH_WaitForLastOperation+0x42>
 80056f2:	699a      	ldr	r2, [r3, #24]
 80056f4:	0552      	lsls	r2, r2, #21
 80056f6:	d404      	bmi.n	8005702 <FLASH_WaitForLastOperation+0x42>
 80056f8:	6998      	ldr	r0, [r3, #24]
 80056fa:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 80056fe:	d100      	bne.n	8005702 <FLASH_WaitForLastOperation+0x42>
 8005700:	bd70      	pop	{r4, r5, r6, pc}
 8005702:	f7ff ff89 	bl	8005618 <FLASH_SetErrorCode>
 8005706:	2001      	movs	r0, #1
 8005708:	bd70      	pop	{r4, r5, r6, pc}
 800570a:	69b3      	ldr	r3, [r6, #24]
 800570c:	07db      	lsls	r3, r3, #31
 800570e:	d5e3      	bpl.n	80056d8 <FLASH_WaitForLastOperation+0x18>
 8005710:	b124      	cbz	r4, 800571c <FLASH_WaitForLastOperation+0x5c>
 8005712:	f7ff fecb 	bl	80054ac <HAL_GetTick>
 8005716:	1b40      	subs	r0, r0, r5
 8005718:	42a0      	cmp	r0, r4
 800571a:	d9d7      	bls.n	80056cc <FLASH_WaitForLastOperation+0xc>
 800571c:	2003      	movs	r0, #3
 800571e:	bd70      	pop	{r4, r5, r6, pc}
 8005720:	40023c00 	.word	0x40023c00

08005724 <HAL_FLASHEx_DATAEEPROM_Unlock>:
 8005724:	4b05      	ldr	r3, [pc, #20]	; (800573c <HAL_FLASHEx_DATAEEPROM_Unlock+0x18>)
 8005726:	685a      	ldr	r2, [r3, #4]
 8005728:	07d2      	lsls	r2, r2, #31
 800572a:	d505      	bpl.n	8005738 <HAL_FLASHEx_DATAEEPROM_Unlock+0x14>
 800572c:	4904      	ldr	r1, [pc, #16]	; (8005740 <HAL_FLASHEx_DATAEEPROM_Unlock+0x1c>)
 800572e:	4a05      	ldr	r2, [pc, #20]	; (8005744 <HAL_FLASHEx_DATAEEPROM_Unlock+0x20>)
 8005730:	60d9      	str	r1, [r3, #12]
 8005732:	2000      	movs	r0, #0
 8005734:	60da      	str	r2, [r3, #12]
 8005736:	4770      	bx	lr
 8005738:	2001      	movs	r0, #1
 800573a:	4770      	bx	lr
 800573c:	40023c00 	.word	0x40023c00
 8005740:	89abcdef 	.word	0x89abcdef
 8005744:	02030405 	.word	0x02030405

08005748 <HAL_FLASHEx_DATAEEPROM_Lock>:
 8005748:	4a03      	ldr	r2, [pc, #12]	; (8005758 <HAL_FLASHEx_DATAEEPROM_Lock+0x10>)
 800574a:	2000      	movs	r0, #0
 800574c:	6853      	ldr	r3, [r2, #4]
 800574e:	f043 0301 	orr.w	r3, r3, #1
 8005752:	6053      	str	r3, [r2, #4]
 8005754:	4770      	bx	lr
 8005756:	bf00      	nop
 8005758:	40023c00 	.word	0x40023c00

0800575c <HAL_FLASHEx_DATAEEPROM_Program>:
 800575c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005760:	4e83      	ldr	r6, [pc, #524]	; (8005970 <HAL_FLASHEx_DATAEEPROM_Program+0x214>)
 8005762:	7c33      	ldrb	r3, [r6, #16]
 8005764:	2b01      	cmp	r3, #1
 8005766:	d01f      	beq.n	80057a8 <HAL_FLASHEx_DATAEEPROM_Program+0x4c>
 8005768:	2701      	movs	r7, #1
 800576a:	4605      	mov	r5, r0
 800576c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005770:	4688      	mov	r8, r1
 8005772:	4691      	mov	r9, r2
 8005774:	7437      	strb	r7, [r6, #16]
 8005776:	f7ff ffa3 	bl	80056c0 <FLASH_WaitForLastOperation>
 800577a:	4604      	mov	r4, r0
 800577c:	b978      	cbnz	r0, 800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800577e:	2d02      	cmp	r5, #2
 8005780:	6170      	str	r0, [r6, #20]
 8005782:	d045      	beq.n	8005810 <HAL_FLASHEx_DATAEEPROM_Program+0xb4>
 8005784:	2d01      	cmp	r5, #1
 8005786:	d052      	beq.n	800582e <HAL_FLASHEx_DATAEEPROM_Program+0xd2>
 8005788:	b195      	cbz	r5, 80057b0 <HAL_FLASHEx_DATAEEPROM_Program+0x54>
 800578a:	2d04      	cmp	r5, #4
 800578c:	f000 8083 	beq.w	8005896 <HAL_FLASHEx_DATAEEPROM_Program+0x13a>
 8005790:	2d08      	cmp	r5, #8
 8005792:	f000 80aa 	beq.w	80058ea <HAL_FLASHEx_DATAEEPROM_Program+0x18e>
 8005796:	2d10      	cmp	r5, #16
 8005798:	f000 80c8 	beq.w	800592c <HAL_FLASHEx_DATAEEPROM_Program+0x1d0>
 800579c:	463c      	mov	r4, r7
 800579e:	2300      	movs	r3, #0
 80057a0:	4620      	mov	r0, r4
 80057a2:	7433      	strb	r3, [r6, #16]
 80057a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80057a8:	2402      	movs	r4, #2
 80057aa:	4620      	mov	r0, r4
 80057ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80057b0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80057b4:	f7ff ff84 	bl	80056c0 <FLASH_WaitForLastOperation>
 80057b8:	4604      	mov	r4, r0
 80057ba:	2800      	cmp	r0, #0
 80057bc:	d1ef      	bne.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80057be:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 80057c2:	f040 808a 	bne.w	80058da <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 80057c6:	22ff      	movs	r2, #255	; 0xff
 80057c8:	f028 0503 	bic.w	r5, r8, #3
 80057cc:	f008 0803 	and.w	r8, r8, #3
 80057d0:	682c      	ldr	r4, [r5, #0]
 80057d2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80057d6:	fa02 f208 	lsl.w	r2, r2, r8
 80057da:	f24c 3050 	movw	r0, #50000	; 0xc350
 80057de:	ea24 0402 	bic.w	r4, r4, r2
 80057e2:	f7ff ff6d 	bl	80056c0 <FLASH_WaitForLastOperation>
 80057e6:	4603      	mov	r3, r0
 80057e8:	b928      	cbnz	r0, 80057f6 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 80057ea:	6173      	str	r3, [r6, #20]
 80057ec:	f24c 3050 	movw	r0, #50000	; 0xc350
 80057f0:	602b      	str	r3, [r5, #0]
 80057f2:	f7ff ff65 	bl	80056c0 <FLASH_WaitForLastOperation>
 80057f6:	2300      	movs	r3, #0
 80057f8:	4622      	mov	r2, r4
 80057fa:	4629      	mov	r1, r5
 80057fc:	2010      	movs	r0, #16
 80057fe:	7433      	strb	r3, [r6, #16]
 8005800:	f7ff ffac 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 8005804:	7c33      	ldrb	r3, [r6, #16]
 8005806:	4604      	mov	r4, r0
 8005808:	2b01      	cmp	r3, #1
 800580a:	d1c8      	bne.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800580c:	2402      	movs	r4, #2
 800580e:	e7c6      	b.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005810:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005814:	f7ff ff54 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005818:	4604      	mov	r4, r0
 800581a:	2800      	cmp	r0, #0
 800581c:	d1bf      	bne.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800581e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005822:	f8c8 9000 	str.w	r9, [r8]
 8005826:	f7ff ff4b 	bl	80056c0 <FLASH_WaitForLastOperation>
 800582a:	4604      	mov	r4, r0
 800582c:	e7b7      	b.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800582e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005832:	f7ff ff45 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005836:	4604      	mov	r4, r0
 8005838:	2800      	cmp	r0, #0
 800583a:	d1b0      	bne.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800583c:	fa1f f289 	uxth.w	r2, r9
 8005840:	2a00      	cmp	r2, #0
 8005842:	f040 8081 	bne.w	8005948 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 8005846:	f008 0303 	and.w	r3, r8, #3
 800584a:	2b03      	cmp	r3, #3
 800584c:	7432      	strb	r2, [r6, #16]
 800584e:	f000 8083 	beq.w	8005958 <HAL_FLASHEx_DATAEEPROM_Program+0x1fc>
 8005852:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005856:	f028 0803 	bic.w	r8, r8, #3
 800585a:	f8d8 4000 	ldr.w	r4, [r8]
 800585e:	00db      	lsls	r3, r3, #3
 8005860:	fa02 f303 	lsl.w	r3, r2, r3
 8005864:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005868:	ea24 0403 	bic.w	r4, r4, r3
 800586c:	f7ff ff28 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005870:	4603      	mov	r3, r0
 8005872:	b930      	cbnz	r0, 8005882 <HAL_FLASHEx_DATAEEPROM_Program+0x126>
 8005874:	6170      	str	r0, [r6, #20]
 8005876:	f24c 3050 	movw	r0, #50000	; 0xc350
 800587a:	f8c8 3000 	str.w	r3, [r8]
 800587e:	f7ff ff1f 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005882:	4622      	mov	r2, r4
 8005884:	4641      	mov	r1, r8
 8005886:	2010      	movs	r0, #16
 8005888:	f7ff ff68 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 800588c:	4604      	mov	r4, r0
 800588e:	7c33      	ldrb	r3, [r6, #16]
 8005890:	2b01      	cmp	r3, #1
 8005892:	d184      	bne.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005894:	e7ba      	b.n	800580c <HAL_FLASHEx_DATAEEPROM_Program+0xb0>
 8005896:	f24c 3050 	movw	r0, #50000	; 0xc350
 800589a:	f7ff ff11 	bl	80056c0 <FLASH_WaitForLastOperation>
 800589e:	4604      	mov	r4, r0
 80058a0:	2800      	cmp	r0, #0
 80058a2:	f47f af7c 	bne.w	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058a6:	4a33      	ldr	r2, [pc, #204]	; (8005974 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 80058a8:	6853      	ldr	r3, [r2, #4]
 80058aa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80058ae:	6053      	str	r3, [r2, #4]
 80058b0:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 80058b4:	d111      	bne.n	80058da <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 80058b6:	f008 0303 	and.w	r3, r8, #3
 80058ba:	00da      	lsls	r2, r3, #3
 80058bc:	23ff      	movs	r3, #255	; 0xff
 80058be:	f028 0503 	bic.w	r5, r8, #3
 80058c2:	682c      	ldr	r4, [r5, #0]
 80058c4:	4093      	lsls	r3, r2
 80058c6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058ca:	ea24 0403 	bic.w	r4, r4, r3
 80058ce:	f7ff fef7 	bl	80056c0 <FLASH_WaitForLastOperation>
 80058d2:	4603      	mov	r3, r0
 80058d4:	2800      	cmp	r0, #0
 80058d6:	d18e      	bne.n	80057f6 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 80058d8:	e787      	b.n	80057ea <HAL_FLASHEx_DATAEEPROM_Program+0x8e>
 80058da:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058de:	f888 2000 	strb.w	r2, [r8]
 80058e2:	f7ff feed 	bl	80056c0 <FLASH_WaitForLastOperation>
 80058e6:	4604      	mov	r4, r0
 80058e8:	e759      	b.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058ea:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058ee:	f7ff fee7 	bl	80056c0 <FLASH_WaitForLastOperation>
 80058f2:	4604      	mov	r4, r0
 80058f4:	2800      	cmp	r0, #0
 80058f6:	f47f af52 	bne.w	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058fa:	491e      	ldr	r1, [pc, #120]	; (8005974 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 80058fc:	fa1f f289 	uxth.w	r2, r9
 8005900:	684b      	ldr	r3, [r1, #4]
 8005902:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005906:	604b      	str	r3, [r1, #4]
 8005908:	b9f2      	cbnz	r2, 8005948 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 800590a:	f008 0303 	and.w	r3, r8, #3
 800590e:	2b03      	cmp	r3, #3
 8005910:	7430      	strb	r0, [r6, #16]
 8005912:	d19e      	bne.n	8005852 <HAL_FLASHEx_DATAEEPROM_Program+0xf6>
 8005914:	4641      	mov	r1, r8
 8005916:	2200      	movs	r2, #0
 8005918:	2004      	movs	r0, #4
 800591a:	f7ff ff1f 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 800591e:	2200      	movs	r2, #0
 8005920:	f108 0101 	add.w	r1, r8, #1
 8005924:	2004      	movs	r0, #4
 8005926:	f7ff ff19 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 800592a:	e7b0      	b.n	800588e <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 800592c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005930:	f7ff fec6 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005934:	4604      	mov	r4, r0
 8005936:	2800      	cmp	r0, #0
 8005938:	f47f af31 	bne.w	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800593c:	4a0d      	ldr	r2, [pc, #52]	; (8005974 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 800593e:	6853      	ldr	r3, [r2, #4]
 8005940:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005944:	6053      	str	r3, [r2, #4]
 8005946:	e76a      	b.n	800581e <HAL_FLASHEx_DATAEEPROM_Program+0xc2>
 8005948:	f24c 3050 	movw	r0, #50000	; 0xc350
 800594c:	f8a8 2000 	strh.w	r2, [r8]
 8005950:	f7ff feb6 	bl	80056c0 <FLASH_WaitForLastOperation>
 8005954:	4604      	mov	r4, r0
 8005956:	e722      	b.n	800579e <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005958:	4641      	mov	r1, r8
 800595a:	4602      	mov	r2, r0
 800595c:	2004      	movs	r0, #4
 800595e:	f7ff fefd 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 8005962:	4622      	mov	r2, r4
 8005964:	f108 0101 	add.w	r1, r8, #1
 8005968:	2004      	movs	r0, #4
 800596a:	f7ff fef7 	bl	800575c <HAL_FLASHEx_DATAEEPROM_Program>
 800596e:	e78e      	b.n	800588e <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 8005970:	200008ec 	.word	0x200008ec
 8005974:	40023c00 	.word	0x40023c00

08005978 <HAL_GPIO_Init>:
 8005978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800597c:	680c      	ldr	r4, [r1, #0]
 800597e:	b085      	sub	sp, #20
 8005980:	2c00      	cmp	r4, #0
 8005982:	d07c      	beq.n	8005a7e <HAL_GPIO_Init+0x106>
 8005984:	f04f 0e00 	mov.w	lr, #0
 8005988:	f04f 0b01 	mov.w	fp, #1
 800598c:	4673      	mov	r3, lr
 800598e:	468c      	mov	ip, r1
 8005990:	fa0b f503 	lsl.w	r5, fp, r3
 8005994:	ea15 0a04 	ands.w	sl, r5, r4
 8005998:	d06b      	beq.n	8005a72 <HAL_GPIO_Init+0xfa>
 800599a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800599e:	f001 0203 	and.w	r2, r1, #3
 80059a2:	1e57      	subs	r7, r2, #1
 80059a4:	2f01      	cmp	r7, #1
 80059a6:	d96d      	bls.n	8005a84 <HAL_GPIO_Init+0x10c>
 80059a8:	2a03      	cmp	r2, #3
 80059aa:	f040 80ae 	bne.w	8005b0a <HAL_GPIO_Init+0x192>
 80059ae:	fa02 f20e 	lsl.w	r2, r2, lr
 80059b2:	43d7      	mvns	r7, r2
 80059b4:	6805      	ldr	r5, [r0, #0]
 80059b6:	f411 3f40 	tst.w	r1, #196608	; 0x30000
 80059ba:	ea07 0705 	and.w	r7, r7, r5
 80059be:	ea42 0207 	orr.w	r2, r2, r7
 80059c2:	6002      	str	r2, [r0, #0]
 80059c4:	d055      	beq.n	8005a72 <HAL_GPIO_Init+0xfa>
 80059c6:	260f      	movs	r6, #15
 80059c8:	4d5a      	ldr	r5, [pc, #360]	; (8005b34 <HAL_GPIO_Init+0x1bc>)
 80059ca:	f003 0703 	and.w	r7, r3, #3
 80059ce:	6a2a      	ldr	r2, [r5, #32]
 80059d0:	00bf      	lsls	r7, r7, #2
 80059d2:	f042 0201 	orr.w	r2, r2, #1
 80059d6:	622a      	str	r2, [r5, #32]
 80059d8:	6a2a      	ldr	r2, [r5, #32]
 80059da:	fa06 f807 	lsl.w	r8, r6, r7
 80059de:	f002 0201 	and.w	r2, r2, #1
 80059e2:	9203      	str	r2, [sp, #12]
 80059e4:	9a03      	ldr	r2, [sp, #12]
 80059e6:	f023 0203 	bic.w	r2, r3, #3
 80059ea:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80059ee:	4e52      	ldr	r6, [pc, #328]	; (8005b38 <HAL_GPIO_Init+0x1c0>)
 80059f0:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80059f4:	6895      	ldr	r5, [r2, #8]
 80059f6:	42b0      	cmp	r0, r6
 80059f8:	ea25 0508 	bic.w	r5, r5, r8
 80059fc:	d015      	beq.n	8005a2a <HAL_GPIO_Init+0xb2>
 80059fe:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005a02:	42b0      	cmp	r0, r6
 8005a04:	f000 808c 	beq.w	8005b20 <HAL_GPIO_Init+0x1a8>
 8005a08:	4e4c      	ldr	r6, [pc, #304]	; (8005b3c <HAL_GPIO_Init+0x1c4>)
 8005a0a:	42b0      	cmp	r0, r6
 8005a0c:	f000 808c 	beq.w	8005b28 <HAL_GPIO_Init+0x1b0>
 8005a10:	4e4b      	ldr	r6, [pc, #300]	; (8005b40 <HAL_GPIO_Init+0x1c8>)
 8005a12:	42b0      	cmp	r0, r6
 8005a14:	d07e      	beq.n	8005b14 <HAL_GPIO_Init+0x19c>
 8005a16:	4e4b      	ldr	r6, [pc, #300]	; (8005b44 <HAL_GPIO_Init+0x1cc>)
 8005a18:	42b0      	cmp	r0, r6
 8005a1a:	bf0c      	ite	eq
 8005a1c:	f04f 0804 	moveq.w	r8, #4
 8005a20:	f04f 0805 	movne.w	r8, #5
 8005a24:	fa08 f707 	lsl.w	r7, r8, r7
 8005a28:	433d      	orrs	r5, r7
 8005a2a:	ea6f 070a 	mvn.w	r7, sl
 8005a2e:	6095      	str	r5, [r2, #8]
 8005a30:	4a45      	ldr	r2, [pc, #276]	; (8005b48 <HAL_GPIO_Init+0x1d0>)
 8005a32:	03cd      	lsls	r5, r1, #15
 8005a34:	6812      	ldr	r2, [r2, #0]
 8005a36:	4d44      	ldr	r5, [pc, #272]	; (8005b48 <HAL_GPIO_Init+0x1d0>)
 8005a38:	bf54      	ite	pl
 8005a3a:	403a      	andpl	r2, r7
 8005a3c:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005a40:	602a      	str	r2, [r5, #0]
 8005a42:	686d      	ldr	r5, [r5, #4]
 8005a44:	038a      	lsls	r2, r1, #14
 8005a46:	4a40      	ldr	r2, [pc, #256]	; (8005b48 <HAL_GPIO_Init+0x1d0>)
 8005a48:	bf54      	ite	pl
 8005a4a:	403d      	andpl	r5, r7
 8005a4c:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005a50:	6055      	str	r5, [r2, #4]
 8005a52:	6895      	ldr	r5, [r2, #8]
 8005a54:	02ce      	lsls	r6, r1, #11
 8005a56:	4a3c      	ldr	r2, [pc, #240]	; (8005b48 <HAL_GPIO_Init+0x1d0>)
 8005a58:	bf54      	ite	pl
 8005a5a:	403d      	andpl	r5, r7
 8005a5c:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005a60:	6095      	str	r5, [r2, #8]
 8005a62:	68d2      	ldr	r2, [r2, #12]
 8005a64:	0289      	lsls	r1, r1, #10
 8005a66:	4938      	ldr	r1, [pc, #224]	; (8005b48 <HAL_GPIO_Init+0x1d0>)
 8005a68:	bf54      	ite	pl
 8005a6a:	403a      	andpl	r2, r7
 8005a6c:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005a70:	60ca      	str	r2, [r1, #12]
 8005a72:	3301      	adds	r3, #1
 8005a74:	fa34 f203 	lsrs.w	r2, r4, r3
 8005a78:	f10e 0e02 	add.w	lr, lr, #2
 8005a7c:	d188      	bne.n	8005990 <HAL_GPIO_Init+0x18>
 8005a7e:	b005      	add	sp, #20
 8005a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a84:	f04f 0903 	mov.w	r9, #3
 8005a88:	6886      	ldr	r6, [r0, #8]
 8005a8a:	f8dc 700c 	ldr.w	r7, [ip, #12]
 8005a8e:	fa09 f90e 	lsl.w	r9, r9, lr
 8005a92:	ea26 0609 	bic.w	r6, r6, r9
 8005a96:	fa07 f70e 	lsl.w	r7, r7, lr
 8005a9a:	4337      	orrs	r7, r6
 8005a9c:	6087      	str	r7, [r0, #8]
 8005a9e:	ea6f 0709 	mvn.w	r7, r9
 8005aa2:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8005aa6:	f3c1 1800 	ubfx	r8, r1, #4, #1
 8005aaa:	fa08 f803 	lsl.w	r8, r8, r3
 8005aae:	ea29 0505 	bic.w	r5, r9, r5
 8005ab2:	ea48 0505 	orr.w	r5, r8, r5
 8005ab6:	6045      	str	r5, [r0, #4]
 8005ab8:	68c5      	ldr	r5, [r0, #12]
 8005aba:	2a02      	cmp	r2, #2
 8005abc:	ea05 0807 	and.w	r8, r5, r7
 8005ac0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8005ac4:	fa02 f20e 	lsl.w	r2, r2, lr
 8005ac8:	fa05 f50e 	lsl.w	r5, r5, lr
 8005acc:	ea45 0508 	orr.w	r5, r5, r8
 8005ad0:	60c5      	str	r5, [r0, #12]
 8005ad2:	f47f af6f 	bne.w	80059b4 <HAL_GPIO_Init+0x3c>
 8005ad6:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8005ada:	f003 0807 	and.w	r8, r3, #7
 8005ade:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8005ae2:	fa05 f508 	lsl.w	r5, r5, r8
 8005ae6:	9501      	str	r5, [sp, #4]
 8005ae8:	250f      	movs	r5, #15
 8005aea:	ea4f 09d3 	mov.w	r9, r3, lsr #3
 8005aee:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 8005af2:	f8d9 6020 	ldr.w	r6, [r9, #32]
 8005af6:	fa05 f808 	lsl.w	r8, r5, r8
 8005afa:	9d01      	ldr	r5, [sp, #4]
 8005afc:	ea26 0808 	bic.w	r8, r6, r8
 8005b00:	ea45 0508 	orr.w	r5, r5, r8
 8005b04:	f8c9 5020 	str.w	r5, [r9, #32]
 8005b08:	e754      	b.n	80059b4 <HAL_GPIO_Init+0x3c>
 8005b0a:	2703      	movs	r7, #3
 8005b0c:	fa07 f70e 	lsl.w	r7, r7, lr
 8005b10:	43ff      	mvns	r7, r7
 8005b12:	e7d1      	b.n	8005ab8 <HAL_GPIO_Init+0x140>
 8005b14:	f04f 0803 	mov.w	r8, #3
 8005b18:	fa08 f707 	lsl.w	r7, r8, r7
 8005b1c:	433d      	orrs	r5, r7
 8005b1e:	e784      	b.n	8005a2a <HAL_GPIO_Init+0xb2>
 8005b20:	fa0b f707 	lsl.w	r7, fp, r7
 8005b24:	433d      	orrs	r5, r7
 8005b26:	e780      	b.n	8005a2a <HAL_GPIO_Init+0xb2>
 8005b28:	f04f 0802 	mov.w	r8, #2
 8005b2c:	fa08 f707 	lsl.w	r7, r8, r7
 8005b30:	433d      	orrs	r5, r7
 8005b32:	e77a      	b.n	8005a2a <HAL_GPIO_Init+0xb2>
 8005b34:	40023800 	.word	0x40023800
 8005b38:	40020000 	.word	0x40020000
 8005b3c:	40020800 	.word	0x40020800
 8005b40:	40020c00 	.word	0x40020c00
 8005b44:	40021000 	.word	0x40021000
 8005b48:	40010400 	.word	0x40010400

08005b4c <HAL_GPIO_ReadPin>:
 8005b4c:	6903      	ldr	r3, [r0, #16]
 8005b4e:	4219      	tst	r1, r3
 8005b50:	bf14      	ite	ne
 8005b52:	2001      	movne	r0, #1
 8005b54:	2000      	moveq	r0, #0
 8005b56:	4770      	bx	lr

08005b58 <HAL_GPIO_WritePin>:
 8005b58:	b902      	cbnz	r2, 8005b5c <HAL_GPIO_WritePin+0x4>
 8005b5a:	0409      	lsls	r1, r1, #16
 8005b5c:	6181      	str	r1, [r0, #24]
 8005b5e:	4770      	bx	lr

08005b60 <HAL_GPIO_EXTI_IRQHandler>:
 8005b60:	4a04      	ldr	r2, [pc, #16]	; (8005b74 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8005b62:	6951      	ldr	r1, [r2, #20]
 8005b64:	4201      	tst	r1, r0
 8005b66:	d100      	bne.n	8005b6a <HAL_GPIO_EXTI_IRQHandler+0xa>
 8005b68:	4770      	bx	lr
 8005b6a:	b508      	push	{r3, lr}
 8005b6c:	6150      	str	r0, [r2, #20]
 8005b6e:	f009 ff83 	bl	800fa78 <__HAL_GPIO_EXTI_Callback_veneer>
 8005b72:	bd08      	pop	{r3, pc}
 8005b74:	40010400 	.word	0x40010400

08005b78 <HAL_I2C_Init>:
 8005b78:	2800      	cmp	r0, #0
 8005b7a:	f000 80b9 	beq.w	8005cf0 <HAL_I2C_Init+0x178>
 8005b7e:	b538      	push	{r3, r4, r5, lr}
 8005b80:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005b84:	4604      	mov	r4, r0
 8005b86:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	f000 8098 	beq.w	8005cc0 <HAL_I2C_Init+0x148>
 8005b90:	2224      	movs	r2, #36	; 0x24
 8005b92:	6823      	ldr	r3, [r4, #0]
 8005b94:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8005b98:	681a      	ldr	r2, [r3, #0]
 8005b9a:	f022 0201 	bic.w	r2, r2, #1
 8005b9e:	601a      	str	r2, [r3, #0]
 8005ba0:	681a      	ldr	r2, [r3, #0]
 8005ba2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005ba6:	601a      	str	r2, [r3, #0]
 8005ba8:	681a      	ldr	r2, [r3, #0]
 8005baa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005bae:	601a      	str	r2, [r3, #0]
 8005bb0:	f001 ff90 	bl	8007ad4 <HAL_RCC_GetPCLK1Freq>
 8005bb4:	6863      	ldr	r3, [r4, #4]
 8005bb6:	494f      	ldr	r1, [pc, #316]	; (8005cf4 <HAL_I2C_Init+0x17c>)
 8005bb8:	428b      	cmp	r3, r1
 8005bba:	d84f      	bhi.n	8005c5c <HAL_I2C_Init+0xe4>
 8005bbc:	4a4e      	ldr	r2, [pc, #312]	; (8005cf8 <HAL_I2C_Init+0x180>)
 8005bbe:	4290      	cmp	r0, r2
 8005bc0:	d97c      	bls.n	8005cbc <HAL_I2C_Init+0x144>
 8005bc2:	4d4e      	ldr	r5, [pc, #312]	; (8005cfc <HAL_I2C_Init+0x184>)
 8005bc4:	005a      	lsls	r2, r3, #1
 8005bc6:	fba5 3500 	umull	r3, r5, r5, r0
 8005bca:	1e43      	subs	r3, r0, #1
 8005bcc:	fbb3 f3f2 	udiv	r3, r3, r2
 8005bd0:	f640 7efc 	movw	lr, #4092	; 0xffc
 8005bd4:	6822      	ldr	r2, [r4, #0]
 8005bd6:	0ca9      	lsrs	r1, r5, #18
 8005bd8:	6850      	ldr	r0, [r2, #4]
 8005bda:	f101 0c01 	add.w	ip, r1, #1
 8005bde:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 8005be2:	ea40 4095 	orr.w	r0, r0, r5, lsr #18
 8005be6:	6050      	str	r0, [r2, #4]
 8005be8:	6a11      	ldr	r1, [r2, #32]
 8005bea:	3301      	adds	r3, #1
 8005bec:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8005bf0:	ea41 010c 	orr.w	r1, r1, ip
 8005bf4:	6211      	str	r1, [r2, #32]
 8005bf6:	69d1      	ldr	r1, [r2, #28]
 8005bf8:	ea13 0f0e 	tst.w	r3, lr
 8005bfc:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005c00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c04:	d161      	bne.n	8005cca <HAL_I2C_Init+0x152>
 8005c06:	2304      	movs	r3, #4
 8005c08:	430b      	orrs	r3, r1
 8005c0a:	61d3      	str	r3, [r2, #28]
 8005c0c:	6811      	ldr	r1, [r2, #0]
 8005c0e:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005c12:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005c16:	4303      	orrs	r3, r0
 8005c18:	430b      	orrs	r3, r1
 8005c1a:	6013      	str	r3, [r2, #0]
 8005c1c:	6891      	ldr	r1, [r2, #8]
 8005c1e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005c22:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005c26:	4303      	orrs	r3, r0
 8005c28:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c2c:	430b      	orrs	r3, r1
 8005c2e:	6093      	str	r3, [r2, #8]
 8005c30:	68d0      	ldr	r0, [r2, #12]
 8005c32:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005c36:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005c3a:	430b      	orrs	r3, r1
 8005c3c:	4303      	orrs	r3, r0
 8005c3e:	60d3      	str	r3, [r2, #12]
 8005c40:	6813      	ldr	r3, [r2, #0]
 8005c42:	2100      	movs	r1, #0
 8005c44:	f043 0301 	orr.w	r3, r3, #1
 8005c48:	6013      	str	r3, [r2, #0]
 8005c4a:	2320      	movs	r3, #32
 8005c4c:	6421      	str	r1, [r4, #64]	; 0x40
 8005c4e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8005c52:	6321      	str	r1, [r4, #48]	; 0x30
 8005c54:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8005c58:	4608      	mov	r0, r1
 8005c5a:	bd38      	pop	{r3, r4, r5, pc}
 8005c5c:	4a28      	ldr	r2, [pc, #160]	; (8005d00 <HAL_I2C_Init+0x188>)
 8005c5e:	4290      	cmp	r0, r2
 8005c60:	d92c      	bls.n	8005cbc <HAL_I2C_Init+0x144>
 8005c62:	4d26      	ldr	r5, [pc, #152]	; (8005cfc <HAL_I2C_Init+0x184>)
 8005c64:	fba5 2c00 	umull	r2, ip, r5, r0
 8005c68:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005c6c:	ea4f 419c 	mov.w	r1, ip, lsr #18
 8005c70:	fb02 f101 	mul.w	r1, r2, r1
 8005c74:	4d23      	ldr	r5, [pc, #140]	; (8005d04 <HAL_I2C_Init+0x18c>)
 8005c76:	6822      	ldr	r2, [r4, #0]
 8005c78:	fba5 5101 	umull	r5, r1, r5, r1
 8005c7c:	6855      	ldr	r5, [r2, #4]
 8005c7e:	0989      	lsrs	r1, r1, #6
 8005c80:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005c84:	ea45 459c 	orr.w	r5, r5, ip, lsr #18
 8005c88:	6055      	str	r5, [r2, #4]
 8005c8a:	6a15      	ldr	r5, [r2, #32]
 8005c8c:	3101      	adds	r1, #1
 8005c8e:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005c92:	4329      	orrs	r1, r5
 8005c94:	6211      	str	r1, [r2, #32]
 8005c96:	69d1      	ldr	r1, [r2, #28]
 8005c98:	68a5      	ldr	r5, [r4, #8]
 8005c9a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005c9e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005ca2:	b9ad      	cbnz	r5, 8005cd0 <HAL_I2C_Init+0x158>
 8005ca4:	3801      	subs	r0, #1
 8005ca6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005caa:	fbb0 f3f3 	udiv	r3, r0, r3
 8005cae:	3301      	adds	r3, #1
 8005cb0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005cb4:	b1d3      	cbz	r3, 8005cec <HAL_I2C_Init+0x174>
 8005cb6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005cba:	e7a5      	b.n	8005c08 <HAL_I2C_Init+0x90>
 8005cbc:	2001      	movs	r0, #1
 8005cbe:	bd38      	pop	{r3, r4, r5, pc}
 8005cc0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8005cc4:	f7fd fedc 	bl	8003a80 <HAL_I2C_MspInit>
 8005cc8:	e762      	b.n	8005b90 <HAL_I2C_Init+0x18>
 8005cca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005cce:	e79b      	b.n	8005c08 <HAL_I2C_Init+0x90>
 8005cd0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005cd4:	3801      	subs	r0, #1
 8005cd6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005cda:	fbb0 f3f3 	udiv	r3, r0, r3
 8005cde:	3301      	adds	r3, #1
 8005ce0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ce4:	b113      	cbz	r3, 8005cec <HAL_I2C_Init+0x174>
 8005ce6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005cea:	e78d      	b.n	8005c08 <HAL_I2C_Init+0x90>
 8005cec:	2301      	movs	r3, #1
 8005cee:	e78b      	b.n	8005c08 <HAL_I2C_Init+0x90>
 8005cf0:	2001      	movs	r0, #1
 8005cf2:	4770      	bx	lr
 8005cf4:	000186a0 	.word	0x000186a0
 8005cf8:	001e847f 	.word	0x001e847f
 8005cfc:	431bde83 	.word	0x431bde83
 8005d00:	003d08ff 	.word	0x003d08ff
 8005d04:	10624dd3 	.word	0x10624dd3

08005d08 <HAL_I2C_Master_Transmit>:
 8005d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d0c:	4605      	mov	r5, r0
 8005d0e:	b083      	sub	sp, #12
 8005d10:	4699      	mov	r9, r3
 8005d12:	4688      	mov	r8, r1
 8005d14:	4692      	mov	sl, r2
 8005d16:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8005d18:	f7ff fbc8 	bl	80054ac <HAL_GetTick>
 8005d1c:	f895 303d 	ldrb.w	r3, [r5, #61]	; 0x3d
 8005d20:	2b20      	cmp	r3, #32
 8005d22:	d003      	beq.n	8005d2c <HAL_I2C_Master_Transmit+0x24>
 8005d24:	2002      	movs	r0, #2
 8005d26:	b003      	add	sp, #12
 8005d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d2c:	4606      	mov	r6, r0
 8005d2e:	e005      	b.n	8005d3c <HAL_I2C_Master_Transmit+0x34>
 8005d30:	f7ff fbbc 	bl	80054ac <HAL_GetTick>
 8005d34:	1b80      	subs	r0, r0, r6
 8005d36:	2819      	cmp	r0, #25
 8005d38:	f200 80f8 	bhi.w	8005f2c <HAL_I2C_Master_Transmit+0x224>
 8005d3c:	682c      	ldr	r4, [r5, #0]
 8005d3e:	69a3      	ldr	r3, [r4, #24]
 8005d40:	ea6f 0c03 	mvn.w	ip, r3
 8005d44:	f01c 0b02 	ands.w	fp, ip, #2
 8005d48:	d0f2      	beq.n	8005d30 <HAL_I2C_Master_Transmit+0x28>
 8005d4a:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 8005d4e:	2b01      	cmp	r3, #1
 8005d50:	d0e8      	beq.n	8005d24 <HAL_I2C_Master_Transmit+0x1c>
 8005d52:	2301      	movs	r3, #1
 8005d54:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8005d58:	6823      	ldr	r3, [r4, #0]
 8005d5a:	07d9      	lsls	r1, r3, #31
 8005d5c:	d571      	bpl.n	8005e42 <HAL_I2C_Master_Transmit+0x13a>
 8005d5e:	2200      	movs	r2, #0
 8005d60:	2021      	movs	r0, #33	; 0x21
 8005d62:	2110      	movs	r1, #16
 8005d64:	6823      	ldr	r3, [r4, #0]
 8005d66:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005d6a:	6023      	str	r3, [r4, #0]
 8005d6c:	f885 003d 	strb.w	r0, [r5, #61]	; 0x3d
 8005d70:	f885 103e 	strb.w	r1, [r5, #62]	; 0x3e
 8005d74:	642a      	str	r2, [r5, #64]	; 0x40
 8005d76:	f8a5 902a 	strh.w	r9, [r5, #42]	; 0x2a
 8005d7a:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005d7c:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 8005d80:	62ea      	str	r2, [r5, #44]	; 0x2c
 8005d82:	852b      	strh	r3, [r5, #40]	; 0x28
 8005d84:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8005d86:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8005d8a:	2b08      	cmp	r3, #8
 8005d8c:	d006      	beq.n	8005d9c <HAL_I2C_Master_Transmit+0x94>
 8005d8e:	2b01      	cmp	r3, #1
 8005d90:	d004      	beq.n	8005d9c <HAL_I2C_Master_Transmit+0x94>
 8005d92:	4293      	cmp	r3, r2
 8005d94:	d002      	beq.n	8005d9c <HAL_I2C_Master_Transmit+0x94>
 8005d96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8005d98:	2b12      	cmp	r3, #18
 8005d9a:	d103      	bne.n	8005da4 <HAL_I2C_Master_Transmit+0x9c>
 8005d9c:	6823      	ldr	r3, [r4, #0]
 8005d9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005da2:	6023      	str	r3, [r4, #0]
 8005da4:	1c7b      	adds	r3, r7, #1
 8005da6:	d13e      	bne.n	8005e26 <HAL_I2C_Master_Transmit+0x11e>
 8005da8:	6963      	ldr	r3, [r4, #20]
 8005daa:	07d8      	lsls	r0, r3, #31
 8005dac:	d5fc      	bpl.n	8005da8 <HAL_I2C_Master_Transmit+0xa0>
 8005dae:	692b      	ldr	r3, [r5, #16]
 8005db0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005db4:	d14a      	bne.n	8005e4c <HAL_I2C_Master_Transmit+0x144>
 8005db6:	f008 01fe 	and.w	r1, r8, #254	; 0xfe
 8005dba:	6121      	str	r1, [r4, #16]
 8005dbc:	1c78      	adds	r0, r7, #1
 8005dbe:	d004      	beq.n	8005dca <HAL_I2C_Master_Transmit+0xc2>
 8005dc0:	e0dd      	b.n	8005f7e <HAL_I2C_Master_Transmit+0x276>
 8005dc2:	6963      	ldr	r3, [r4, #20]
 8005dc4:	055a      	lsls	r2, r3, #21
 8005dc6:	f100 80c2 	bmi.w	8005f4e <HAL_I2C_Master_Transmit+0x246>
 8005dca:	6963      	ldr	r3, [r4, #20]
 8005dcc:	0799      	lsls	r1, r3, #30
 8005dce:	d5f8      	bpl.n	8005dc2 <HAL_I2C_Master_Transmit+0xba>
 8005dd0:	2200      	movs	r2, #0
 8005dd2:	9201      	str	r2, [sp, #4]
 8005dd4:	6962      	ldr	r2, [r4, #20]
 8005dd6:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8005dd8:	9201      	str	r2, [sp, #4]
 8005dda:	69a2      	ldr	r2, [r4, #24]
 8005ddc:	9201      	str	r2, [sp, #4]
 8005dde:	9a01      	ldr	r2, [sp, #4]
 8005de0:	2b00      	cmp	r3, #0
 8005de2:	d075      	beq.n	8005ed0 <HAL_I2C_Master_Transmit+0x1c8>
 8005de4:	1c79      	adds	r1, r7, #1
 8005de6:	f040 8081 	bne.w	8005eec <HAL_I2C_Master_Transmit+0x1e4>
 8005dea:	6963      	ldr	r3, [r4, #20]
 8005dec:	061a      	lsls	r2, r3, #24
 8005dee:	d441      	bmi.n	8005e74 <HAL_I2C_Master_Transmit+0x16c>
 8005df0:	6963      	ldr	r3, [r4, #20]
 8005df2:	055b      	lsls	r3, r3, #21
 8005df4:	d5f9      	bpl.n	8005dea <HAL_I2C_Master_Transmit+0xe2>
 8005df6:	2200      	movs	r2, #0
 8005df8:	2320      	movs	r3, #32
 8005dfa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 8005dfe:	6161      	str	r1, [r4, #20]
 8005e00:	632a      	str	r2, [r5, #48]	; 0x30
 8005e02:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8005e06:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8005e0a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005e0c:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8005e10:	f043 0304 	orr.w	r3, r3, #4
 8005e14:	642b      	str	r3, [r5, #64]	; 0x40
 8005e16:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005e18:	2b04      	cmp	r3, #4
 8005e1a:	f000 80e6 	beq.w	8005fea <HAL_I2C_Master_Transmit+0x2e2>
 8005e1e:	2001      	movs	r0, #1
 8005e20:	b003      	add	sp, #12
 8005e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e26:	6963      	ldr	r3, [r4, #20]
 8005e28:	07d9      	lsls	r1, r3, #31
 8005e2a:	d4c0      	bmi.n	8005dae <HAL_I2C_Master_Transmit+0xa6>
 8005e2c:	f7ff fb3e 	bl	80054ac <HAL_GetTick>
 8005e30:	1b80      	subs	r0, r0, r6
 8005e32:	4287      	cmp	r7, r0
 8005e34:	f0c0 80b3 	bcc.w	8005f9e <HAL_I2C_Master_Transmit+0x296>
 8005e38:	2f00      	cmp	r7, #0
 8005e3a:	f000 80b0 	beq.w	8005f9e <HAL_I2C_Master_Transmit+0x296>
 8005e3e:	682c      	ldr	r4, [r5, #0]
 8005e40:	e7b0      	b.n	8005da4 <HAL_I2C_Master_Transmit+0x9c>
 8005e42:	6823      	ldr	r3, [r4, #0]
 8005e44:	f043 0301 	orr.w	r3, r3, #1
 8005e48:	6023      	str	r3, [r4, #0]
 8005e4a:	e788      	b.n	8005d5e <HAL_I2C_Master_Transmit+0x56>
 8005e4c:	ea4f 13e8 	mov.w	r3, r8, asr #7
 8005e50:	f003 0306 	and.w	r3, r3, #6
 8005e54:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8005e58:	6123      	str	r3, [r4, #16]
 8005e5a:	1c7b      	adds	r3, r7, #1
 8005e5c:	d003      	beq.n	8005e66 <HAL_I2C_Master_Transmit+0x15e>
 8005e5e:	e0b5      	b.n	8005fcc <HAL_I2C_Master_Transmit+0x2c4>
 8005e60:	6963      	ldr	r3, [r4, #20]
 8005e62:	0559      	lsls	r1, r3, #21
 8005e64:	d473      	bmi.n	8005f4e <HAL_I2C_Master_Transmit+0x246>
 8005e66:	6963      	ldr	r3, [r4, #20]
 8005e68:	0718      	lsls	r0, r3, #28
 8005e6a:	d5f9      	bpl.n	8005e60 <HAL_I2C_Master_Transmit+0x158>
 8005e6c:	fa5f f388 	uxtb.w	r3, r8
 8005e70:	6123      	str	r3, [r4, #16]
 8005e72:	e7a3      	b.n	8005dbc <HAL_I2C_Master_Transmit+0xb4>
 8005e74:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8005e76:	f8b5 c028 	ldrh.w	ip, [r5, #40]	; 0x28
 8005e7a:	4601      	mov	r1, r0
 8005e7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005e80:	f10c 32ff 	add.w	r2, ip, #4294967295
 8005e84:	6123      	str	r3, [r4, #16]
 8005e86:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005e88:	b292      	uxth	r2, r2
 8005e8a:	3b01      	subs	r3, #1
 8005e8c:	b29b      	uxth	r3, r3
 8005e8e:	856b      	strh	r3, [r5, #42]	; 0x2a
 8005e90:	6963      	ldr	r3, [r4, #20]
 8005e92:	6269      	str	r1, [r5, #36]	; 0x24
 8005e94:	0759      	lsls	r1, r3, #29
 8005e96:	852a      	strh	r2, [r5, #40]	; 0x28
 8005e98:	d50c      	bpl.n	8005eb4 <HAL_I2C_Master_Transmit+0x1ac>
 8005e9a:	b15a      	cbz	r2, 8005eb4 <HAL_I2C_Master_Transmit+0x1ac>
 8005e9c:	7843      	ldrb	r3, [r0, #1]
 8005e9e:	f1ac 0c02 	sub.w	ip, ip, #2
 8005ea2:	6123      	str	r3, [r4, #16]
 8005ea4:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005ea6:	3002      	adds	r0, #2
 8005ea8:	3b01      	subs	r3, #1
 8005eaa:	b29b      	uxth	r3, r3
 8005eac:	f8a5 c028 	strh.w	ip, [r5, #40]	; 0x28
 8005eb0:	6268      	str	r0, [r5, #36]	; 0x24
 8005eb2:	856b      	strh	r3, [r5, #42]	; 0x2a
 8005eb4:	1c78      	adds	r0, r7, #1
 8005eb6:	d129      	bne.n	8005f0c <HAL_I2C_Master_Transmit+0x204>
 8005eb8:	6963      	ldr	r3, [r4, #20]
 8005eba:	0759      	lsls	r1, r3, #29
 8005ebc:	d405      	bmi.n	8005eca <HAL_I2C_Master_Transmit+0x1c2>
 8005ebe:	6963      	ldr	r3, [r4, #20]
 8005ec0:	055a      	lsls	r2, r3, #21
 8005ec2:	d498      	bmi.n	8005df6 <HAL_I2C_Master_Transmit+0xee>
 8005ec4:	6963      	ldr	r3, [r4, #20]
 8005ec6:	0759      	lsls	r1, r3, #29
 8005ec8:	d5f9      	bpl.n	8005ebe <HAL_I2C_Master_Transmit+0x1b6>
 8005eca:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d189      	bne.n	8005de4 <HAL_I2C_Master_Transmit+0xdc>
 8005ed0:	2300      	movs	r3, #0
 8005ed2:	2120      	movs	r1, #32
 8005ed4:	6822      	ldr	r2, [r4, #0]
 8005ed6:	4618      	mov	r0, r3
 8005ed8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005edc:	6022      	str	r2, [r4, #0]
 8005ede:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 8005ee2:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8005ee6:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
 8005eea:	e71c      	b.n	8005d26 <HAL_I2C_Master_Transmit+0x1e>
 8005eec:	6963      	ldr	r3, [r4, #20]
 8005eee:	0618      	lsls	r0, r3, #24
 8005ef0:	d4c0      	bmi.n	8005e74 <HAL_I2C_Master_Transmit+0x16c>
 8005ef2:	6963      	ldr	r3, [r4, #20]
 8005ef4:	0558      	lsls	r0, r3, #21
 8005ef6:	f53f af7e 	bmi.w	8005df6 <HAL_I2C_Master_Transmit+0xee>
 8005efa:	f7ff fad7 	bl	80054ac <HAL_GetTick>
 8005efe:	1b80      	subs	r0, r0, r6
 8005f00:	4287      	cmp	r7, r0
 8005f02:	d379      	bcc.n	8005ff8 <HAL_I2C_Master_Transmit+0x2f0>
 8005f04:	2f00      	cmp	r7, #0
 8005f06:	d077      	beq.n	8005ff8 <HAL_I2C_Master_Transmit+0x2f0>
 8005f08:	682c      	ldr	r4, [r5, #0]
 8005f0a:	e76b      	b.n	8005de4 <HAL_I2C_Master_Transmit+0xdc>
 8005f0c:	6963      	ldr	r3, [r4, #20]
 8005f0e:	075b      	lsls	r3, r3, #29
 8005f10:	d4db      	bmi.n	8005eca <HAL_I2C_Master_Transmit+0x1c2>
 8005f12:	6963      	ldr	r3, [r4, #20]
 8005f14:	055b      	lsls	r3, r3, #21
 8005f16:	f53f af6e 	bmi.w	8005df6 <HAL_I2C_Master_Transmit+0xee>
 8005f1a:	f7ff fac7 	bl	80054ac <HAL_GetTick>
 8005f1e:	1b80      	subs	r0, r0, r6
 8005f20:	4287      	cmp	r7, r0
 8005f22:	d369      	bcc.n	8005ff8 <HAL_I2C_Master_Transmit+0x2f0>
 8005f24:	2f00      	cmp	r7, #0
 8005f26:	d067      	beq.n	8005ff8 <HAL_I2C_Master_Transmit+0x2f0>
 8005f28:	682c      	ldr	r4, [r5, #0]
 8005f2a:	e7c3      	b.n	8005eb4 <HAL_I2C_Master_Transmit+0x1ac>
 8005f2c:	2320      	movs	r3, #32
 8005f2e:	2002      	movs	r0, #2
 8005f30:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 8005f34:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8005f38:	f885 b03e 	strb.w	fp, [r5, #62]	; 0x3e
 8005f3c:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005f3e:	f885 b03c 	strb.w	fp, [r5, #60]	; 0x3c
 8005f42:	f043 0320 	orr.w	r3, r3, #32
 8005f46:	642b      	str	r3, [r5, #64]	; 0x40
 8005f48:	b003      	add	sp, #12
 8005f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f4e:	2200      	movs	r2, #0
 8005f50:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 8005f54:	2120      	movs	r1, #32
 8005f56:	2001      	movs	r0, #1
 8005f58:	6823      	ldr	r3, [r4, #0]
 8005f5a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005f5e:	6023      	str	r3, [r4, #0]
 8005f60:	6166      	str	r6, [r4, #20]
 8005f62:	632a      	str	r2, [r5, #48]	; 0x30
 8005f64:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 8005f68:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8005f6c:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005f6e:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8005f72:	f043 0304 	orr.w	r3, r3, #4
 8005f76:	642b      	str	r3, [r5, #64]	; 0x40
 8005f78:	b003      	add	sp, #12
 8005f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f7e:	6963      	ldr	r3, [r4, #20]
 8005f80:	079b      	lsls	r3, r3, #30
 8005f82:	f53f af25 	bmi.w	8005dd0 <HAL_I2C_Master_Transmit+0xc8>
 8005f86:	6963      	ldr	r3, [r4, #20]
 8005f88:	055b      	lsls	r3, r3, #21
 8005f8a:	d4e0      	bmi.n	8005f4e <HAL_I2C_Master_Transmit+0x246>
 8005f8c:	f7ff fa8e 	bl	80054ac <HAL_GetTick>
 8005f90:	1b80      	subs	r0, r0, r6
 8005f92:	4287      	cmp	r7, r0
 8005f94:	d33e      	bcc.n	8006014 <HAL_I2C_Master_Transmit+0x30c>
 8005f96:	2f00      	cmp	r7, #0
 8005f98:	d03c      	beq.n	8006014 <HAL_I2C_Master_Transmit+0x30c>
 8005f9a:	682c      	ldr	r4, [r5, #0]
 8005f9c:	e70e      	b.n	8005dbc <HAL_I2C_Master_Transmit+0xb4>
 8005f9e:	2200      	movs	r2, #0
 8005fa0:	2320      	movs	r3, #32
 8005fa2:	632a      	str	r2, [r5, #48]	; 0x30
 8005fa4:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8005fa8:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8005fac:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005fae:	6829      	ldr	r1, [r5, #0]
 8005fb0:	f043 0320 	orr.w	r3, r3, #32
 8005fb4:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8005fb8:	642b      	str	r3, [r5, #64]	; 0x40
 8005fba:	680b      	ldr	r3, [r1, #0]
 8005fbc:	05da      	lsls	r2, r3, #23
 8005fbe:	f57f af2e 	bpl.w	8005e1e <HAL_I2C_Master_Transmit+0x116>
 8005fc2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005fc6:	2001      	movs	r0, #1
 8005fc8:	642b      	str	r3, [r5, #64]	; 0x40
 8005fca:	e6ac      	b.n	8005d26 <HAL_I2C_Master_Transmit+0x1e>
 8005fcc:	6963      	ldr	r3, [r4, #20]
 8005fce:	071a      	lsls	r2, r3, #28
 8005fd0:	f53f af4c 	bmi.w	8005e6c <HAL_I2C_Master_Transmit+0x164>
 8005fd4:	6963      	ldr	r3, [r4, #20]
 8005fd6:	055a      	lsls	r2, r3, #21
 8005fd8:	d4b9      	bmi.n	8005f4e <HAL_I2C_Master_Transmit+0x246>
 8005fda:	f7ff fa67 	bl	80054ac <HAL_GetTick>
 8005fde:	1b83      	subs	r3, r0, r6
 8005fe0:	429f      	cmp	r7, r3
 8005fe2:	d317      	bcc.n	8006014 <HAL_I2C_Master_Transmit+0x30c>
 8005fe4:	b1b7      	cbz	r7, 8006014 <HAL_I2C_Master_Transmit+0x30c>
 8005fe6:	682c      	ldr	r4, [r5, #0]
 8005fe8:	e737      	b.n	8005e5a <HAL_I2C_Master_Transmit+0x152>
 8005fea:	682a      	ldr	r2, [r5, #0]
 8005fec:	2001      	movs	r0, #1
 8005fee:	6813      	ldr	r3, [r2, #0]
 8005ff0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005ff4:	6013      	str	r3, [r2, #0]
 8005ff6:	e696      	b.n	8005d26 <HAL_I2C_Master_Transmit+0x1e>
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	2320      	movs	r3, #32
 8005ffc:	632a      	str	r2, [r5, #48]	; 0x30
 8005ffe:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8006002:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006006:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006008:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800600c:	f043 0320 	orr.w	r3, r3, #32
 8006010:	642b      	str	r3, [r5, #64]	; 0x40
 8006012:	e700      	b.n	8005e16 <HAL_I2C_Master_Transmit+0x10e>
 8006014:	2200      	movs	r2, #0
 8006016:	2320      	movs	r3, #32
 8006018:	632a      	str	r2, [r5, #48]	; 0x30
 800601a:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 800601e:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006022:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006024:	2001      	movs	r0, #1
 8006026:	f043 0320 	orr.w	r3, r3, #32
 800602a:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800602e:	642b      	str	r3, [r5, #64]	; 0x40
 8006030:	e679      	b.n	8005d26 <HAL_I2C_Master_Transmit+0x1e>
 8006032:	bf00      	nop

08006034 <HAL_I2C_Master_Receive>:
 8006034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006038:	4604      	mov	r4, r0
 800603a:	b086      	sub	sp, #24
 800603c:	4698      	mov	r8, r3
 800603e:	460f      	mov	r7, r1
 8006040:	4691      	mov	r9, r2
 8006042:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8006044:	f7ff fa32 	bl	80054ac <HAL_GetTick>
 8006048:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800604c:	2b20      	cmp	r3, #32
 800604e:	d003      	beq.n	8006058 <HAL_I2C_Master_Receive+0x24>
 8006050:	2002      	movs	r0, #2
 8006052:	b006      	add	sp, #24
 8006054:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006058:	4606      	mov	r6, r0
 800605a:	e005      	b.n	8006068 <HAL_I2C_Master_Receive+0x34>
 800605c:	f7ff fa26 	bl	80054ac <HAL_GetTick>
 8006060:	1b80      	subs	r0, r0, r6
 8006062:	2819      	cmp	r0, #25
 8006064:	f200 80a9 	bhi.w	80061ba <HAL_I2C_Master_Receive+0x186>
 8006068:	6823      	ldr	r3, [r4, #0]
 800606a:	6998      	ldr	r0, [r3, #24]
 800606c:	43c0      	mvns	r0, r0
 800606e:	f010 0a02 	ands.w	sl, r0, #2
 8006072:	d0f3      	beq.n	800605c <HAL_I2C_Master_Receive+0x28>
 8006074:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8006078:	2a01      	cmp	r2, #1
 800607a:	d0e9      	beq.n	8006050 <HAL_I2C_Master_Receive+0x1c>
 800607c:	2201      	movs	r2, #1
 800607e:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006082:	681a      	ldr	r2, [r3, #0]
 8006084:	07d2      	lsls	r2, r2, #31
 8006086:	d563      	bpl.n	8006150 <HAL_I2C_Master_Receive+0x11c>
 8006088:	2100      	movs	r1, #0
 800608a:	f04f 0c22 	mov.w	ip, #34	; 0x22
 800608e:	2010      	movs	r0, #16
 8006090:	681a      	ldr	r2, [r3, #0]
 8006092:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006096:	601a      	str	r2, [r3, #0]
 8006098:	f884 c03d 	strb.w	ip, [r4, #61]	; 0x3d
 800609c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
 80060a0:	6421      	str	r1, [r4, #64]	; 0x40
 80060a2:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
 80060a6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80060a8:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 80060ac:	62e1      	str	r1, [r4, #44]	; 0x2c
 80060ae:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80060b0:	8522      	strh	r2, [r4, #40]	; 0x28
 80060b2:	681a      	ldr	r2, [r3, #0]
 80060b4:	2908      	cmp	r1, #8
 80060b6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80060ba:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 80060be:	601a      	str	r2, [r3, #0]
 80060c0:	d007      	beq.n	80060d2 <HAL_I2C_Master_Receive+0x9e>
 80060c2:	2901      	cmp	r1, #1
 80060c4:	d005      	beq.n	80060d2 <HAL_I2C_Master_Receive+0x9e>
 80060c6:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 80060ca:	d002      	beq.n	80060d2 <HAL_I2C_Master_Receive+0x9e>
 80060cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80060ce:	2a11      	cmp	r2, #17
 80060d0:	d103      	bne.n	80060da <HAL_I2C_Master_Receive+0xa6>
 80060d2:	681a      	ldr	r2, [r3, #0]
 80060d4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80060d8:	601a      	str	r2, [r3, #0]
 80060da:	1c69      	adds	r1, r5, #1
 80060dc:	d12a      	bne.n	8006134 <HAL_I2C_Master_Receive+0x100>
 80060de:	695a      	ldr	r2, [r3, #20]
 80060e0:	07d2      	lsls	r2, r2, #31
 80060e2:	d5fc      	bpl.n	80060de <HAL_I2C_Master_Receive+0xaa>
 80060e4:	6922      	ldr	r2, [r4, #16]
 80060e6:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 80060ea:	d136      	bne.n	800615a <HAL_I2C_Master_Receive+0x126>
 80060ec:	f047 0201 	orr.w	r2, r7, #1
 80060f0:	b2d2      	uxtb	r2, r2
 80060f2:	611a      	str	r2, [r3, #16]
 80060f4:	1c68      	adds	r0, r5, #1
 80060f6:	d003      	beq.n	8006100 <HAL_I2C_Master_Receive+0xcc>
 80060f8:	e109      	b.n	800630e <HAL_I2C_Master_Receive+0x2da>
 80060fa:	695a      	ldr	r2, [r3, #20]
 80060fc:	0552      	lsls	r2, r2, #21
 80060fe:	d46d      	bmi.n	80061dc <HAL_I2C_Master_Receive+0x1a8>
 8006100:	695a      	ldr	r2, [r3, #20]
 8006102:	0791      	lsls	r1, r2, #30
 8006104:	d5f9      	bpl.n	80060fa <HAL_I2C_Master_Receive+0xc6>
 8006106:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006108:	2a00      	cmp	r2, #0
 800610a:	d17f      	bne.n	800620c <HAL_I2C_Master_Receive+0x1d8>
 800610c:	9201      	str	r2, [sp, #4]
 800610e:	695a      	ldr	r2, [r3, #20]
 8006110:	9201      	str	r2, [sp, #4]
 8006112:	699a      	ldr	r2, [r3, #24]
 8006114:	9201      	str	r2, [sp, #4]
 8006116:	9a01      	ldr	r2, [sp, #4]
 8006118:	681a      	ldr	r2, [r3, #0]
 800611a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800611e:	601a      	str	r2, [r3, #0]
 8006120:	2300      	movs	r3, #0
 8006122:	2220      	movs	r2, #32
 8006124:	4618      	mov	r0, r3
 8006126:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 800612a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800612e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006132:	e78e      	b.n	8006052 <HAL_I2C_Master_Receive+0x1e>
 8006134:	695a      	ldr	r2, [r3, #20]
 8006136:	07d0      	lsls	r0, r2, #31
 8006138:	d4d4      	bmi.n	80060e4 <HAL_I2C_Master_Receive+0xb0>
 800613a:	f7ff f9b7 	bl	80054ac <HAL_GetTick>
 800613e:	1b83      	subs	r3, r0, r6
 8006140:	429d      	cmp	r5, r3
 8006142:	f0c0 810e 	bcc.w	8006362 <HAL_I2C_Master_Receive+0x32e>
 8006146:	2d00      	cmp	r5, #0
 8006148:	f000 810b 	beq.w	8006362 <HAL_I2C_Master_Receive+0x32e>
 800614c:	6823      	ldr	r3, [r4, #0]
 800614e:	e7c4      	b.n	80060da <HAL_I2C_Master_Receive+0xa6>
 8006150:	681a      	ldr	r2, [r3, #0]
 8006152:	f042 0201 	orr.w	r2, r2, #1
 8006156:	601a      	str	r2, [r3, #0]
 8006158:	e796      	b.n	8006088 <HAL_I2C_Master_Receive+0x54>
 800615a:	ea4f 18e7 	mov.w	r8, r7, asr #7
 800615e:	f008 0806 	and.w	r8, r8, #6
 8006162:	f048 02f0 	orr.w	r2, r8, #240	; 0xf0
 8006166:	611a      	str	r2, [r3, #16]
 8006168:	1c6a      	adds	r2, r5, #1
 800616a:	d003      	beq.n	8006174 <HAL_I2C_Master_Receive+0x140>
 800616c:	e10f      	b.n	800638e <HAL_I2C_Master_Receive+0x35a>
 800616e:	695a      	ldr	r2, [r3, #20]
 8006170:	0551      	lsls	r1, r2, #21
 8006172:	d433      	bmi.n	80061dc <HAL_I2C_Master_Receive+0x1a8>
 8006174:	695a      	ldr	r2, [r3, #20]
 8006176:	0710      	lsls	r0, r2, #28
 8006178:	d5f9      	bpl.n	800616e <HAL_I2C_Master_Receive+0x13a>
 800617a:	b2ff      	uxtb	r7, r7
 800617c:	611f      	str	r7, [r3, #16]
 800617e:	1c68      	adds	r0, r5, #1
 8006180:	d003      	beq.n	800618a <HAL_I2C_Master_Receive+0x156>
 8006182:	e1a8      	b.n	80064d6 <HAL_I2C_Master_Receive+0x4a2>
 8006184:	695a      	ldr	r2, [r3, #20]
 8006186:	0552      	lsls	r2, r2, #21
 8006188:	d428      	bmi.n	80061dc <HAL_I2C_Master_Receive+0x1a8>
 800618a:	695a      	ldr	r2, [r3, #20]
 800618c:	0791      	lsls	r1, r2, #30
 800618e:	d5f9      	bpl.n	8006184 <HAL_I2C_Master_Receive+0x150>
 8006190:	2200      	movs	r2, #0
 8006192:	9205      	str	r2, [sp, #20]
 8006194:	695a      	ldr	r2, [r3, #20]
 8006196:	9205      	str	r2, [sp, #20]
 8006198:	699a      	ldr	r2, [r3, #24]
 800619a:	9205      	str	r2, [sp, #20]
 800619c:	9a05      	ldr	r2, [sp, #20]
 800619e:	681a      	ldr	r2, [r3, #0]
 80061a0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80061a4:	601a      	str	r2, [r3, #0]
 80061a6:	1c68      	adds	r0, r5, #1
 80061a8:	f040 81a8 	bne.w	80064fc <HAL_I2C_Master_Receive+0x4c8>
 80061ac:	695a      	ldr	r2, [r3, #20]
 80061ae:	07d1      	lsls	r1, r2, #31
 80061b0:	d5fc      	bpl.n	80061ac <HAL_I2C_Master_Receive+0x178>
 80061b2:	f048 02f1 	orr.w	r2, r8, #241	; 0xf1
 80061b6:	611a      	str	r2, [r3, #16]
 80061b8:	e79c      	b.n	80060f4 <HAL_I2C_Master_Receive+0xc0>
 80061ba:	2320      	movs	r3, #32
 80061bc:	2002      	movs	r0, #2
 80061be:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 80061c2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80061c6:	f884 a03e 	strb.w	sl, [r4, #62]	; 0x3e
 80061ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80061cc:	f884 a03c 	strb.w	sl, [r4, #60]	; 0x3c
 80061d0:	f043 0320 	orr.w	r3, r3, #32
 80061d4:	6423      	str	r3, [r4, #64]	; 0x40
 80061d6:	b006      	add	sp, #24
 80061d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80061dc:	2200      	movs	r2, #0
 80061de:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 80061e2:	2520      	movs	r5, #32
 80061e4:	2001      	movs	r0, #1
 80061e6:	6819      	ldr	r1, [r3, #0]
 80061e8:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80061ec:	6019      	str	r1, [r3, #0]
 80061ee:	615e      	str	r6, [r3, #20]
 80061f0:	6322      	str	r2, [r4, #48]	; 0x30
 80061f2:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
 80061f6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 80061fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80061fc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006200:	f043 0304 	orr.w	r3, r3, #4
 8006204:	6423      	str	r3, [r4, #64]	; 0x40
 8006206:	b006      	add	sp, #24
 8006208:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800620c:	2a01      	cmp	r2, #1
 800620e:	f04f 0000 	mov.w	r0, #0
 8006212:	6819      	ldr	r1, [r3, #0]
 8006214:	f000 8151 	beq.w	80064ba <HAL_I2C_Master_Receive+0x486>
 8006218:	2a02      	cmp	r2, #2
 800621a:	f000 80fb 	beq.w	8006414 <HAL_I2C_Master_Receive+0x3e0>
 800621e:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8006222:	6019      	str	r1, [r3, #0]
 8006224:	9004      	str	r0, [sp, #16]
 8006226:	6959      	ldr	r1, [r3, #20]
 8006228:	9104      	str	r1, [sp, #16]
 800622a:	6999      	ldr	r1, [r3, #24]
 800622c:	9104      	str	r1, [sp, #16]
 800622e:	9904      	ldr	r1, [sp, #16]
 8006230:	2a03      	cmp	r2, #3
 8006232:	d848      	bhi.n	80062c6 <HAL_I2C_Master_Receive+0x292>
 8006234:	2a01      	cmp	r2, #1
 8006236:	f000 8118 	beq.w	800646a <HAL_I2C_Master_Receive+0x436>
 800623a:	2a02      	cmp	r2, #2
 800623c:	f000 80c3 	beq.w	80063c6 <HAL_I2C_Master_Receive+0x392>
 8006240:	1c68      	adds	r0, r5, #1
 8006242:	f040 80f5 	bne.w	8006430 <HAL_I2C_Master_Receive+0x3fc>
 8006246:	695a      	ldr	r2, [r3, #20]
 8006248:	0751      	lsls	r1, r2, #29
 800624a:	d5fc      	bpl.n	8006246 <HAL_I2C_Master_Receive+0x212>
 800624c:	681a      	ldr	r2, [r3, #0]
 800624e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006250:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006254:	601a      	str	r2, [r3, #0]
 8006256:	691b      	ldr	r3, [r3, #16]
 8006258:	700b      	strb	r3, [r1, #0]
 800625a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800625c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800625e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006260:	3b01      	subs	r3, #1
 8006262:	3101      	adds	r1, #1
 8006264:	3a01      	subs	r2, #1
 8006266:	b29b      	uxth	r3, r3
 8006268:	6261      	str	r1, [r4, #36]	; 0x24
 800626a:	8522      	strh	r2, [r4, #40]	; 0x28
 800626c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800626e:	1c6b      	adds	r3, r5, #1
 8006270:	6822      	ldr	r2, [r4, #0]
 8006272:	f040 80ec 	bne.w	800644e <HAL_I2C_Master_Receive+0x41a>
 8006276:	6953      	ldr	r3, [r2, #20]
 8006278:	075f      	lsls	r7, r3, #29
 800627a:	d5fc      	bpl.n	8006276 <HAL_I2C_Master_Receive+0x242>
 800627c:	6813      	ldr	r3, [r2, #0]
 800627e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006280:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006284:	6013      	str	r3, [r2, #0]
 8006286:	6913      	ldr	r3, [r2, #16]
 8006288:	700b      	strb	r3, [r1, #0]
 800628a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800628c:	6821      	ldr	r1, [r4, #0]
 800628e:	3b01      	subs	r3, #1
 8006290:	b29b      	uxth	r3, r3
 8006292:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006294:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006296:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006298:	6909      	ldr	r1, [r1, #16]
 800629a:	1e53      	subs	r3, r2, #1
 800629c:	1c47      	adds	r7, r0, #1
 800629e:	8523      	strh	r3, [r4, #40]	; 0x28
 80062a0:	6267      	str	r7, [r4, #36]	; 0x24
 80062a2:	7041      	strb	r1, [r0, #1]
 80062a4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80062a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80062aa:	3a01      	subs	r2, #1
 80062ac:	3b01      	subs	r3, #1
 80062ae:	3101      	adds	r1, #1
 80062b0:	b292      	uxth	r2, r2
 80062b2:	b29b      	uxth	r3, r3
 80062b4:	6261      	str	r1, [r4, #36]	; 0x24
 80062b6:	8522      	strh	r2, [r4, #40]	; 0x28
 80062b8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80062ba:	2a00      	cmp	r2, #0
 80062bc:	f43f af30 	beq.w	8006120 <HAL_I2C_Master_Receive+0xec>
 80062c0:	2a03      	cmp	r2, #3
 80062c2:	6823      	ldr	r3, [r4, #0]
 80062c4:	d9b6      	bls.n	8006234 <HAL_I2C_Master_Receive+0x200>
 80062c6:	b955      	cbnz	r5, 80062de <HAL_I2C_Master_Receive+0x2aa>
 80062c8:	e031      	b.n	800632e <HAL_I2C_Master_Receive+0x2fa>
 80062ca:	695a      	ldr	r2, [r3, #20]
 80062cc:	06d1      	lsls	r1, r2, #27
 80062ce:	f100 80df 	bmi.w	8006490 <HAL_I2C_Master_Receive+0x45c>
 80062d2:	f7ff f8eb 	bl	80054ac <HAL_GetTick>
 80062d6:	1b80      	subs	r0, r0, r6
 80062d8:	4285      	cmp	r5, r0
 80062da:	d331      	bcc.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 80062dc:	6823      	ldr	r3, [r4, #0]
 80062de:	695a      	ldr	r2, [r3, #20]
 80062e0:	0650      	lsls	r0, r2, #25
 80062e2:	d5f2      	bpl.n	80062ca <HAL_I2C_Master_Receive+0x296>
 80062e4:	691a      	ldr	r2, [r3, #16]
 80062e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062e8:	701a      	strb	r2, [r3, #0]
 80062ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062ec:	6820      	ldr	r0, [r4, #0]
 80062ee:	3b01      	subs	r3, #1
 80062f0:	b29b      	uxth	r3, r3
 80062f2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80062f4:	8563      	strh	r3, [r4, #42]	; 0x2a
 80062f6:	6943      	ldr	r3, [r0, #20]
 80062f8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80062fa:	3a01      	subs	r2, #1
 80062fc:	1c4f      	adds	r7, r1, #1
 80062fe:	b292      	uxth	r2, r2
 8006300:	075b      	lsls	r3, r3, #29
 8006302:	6267      	str	r7, [r4, #36]	; 0x24
 8006304:	8522      	strh	r2, [r4, #40]	; 0x28
 8006306:	d5d8      	bpl.n	80062ba <HAL_I2C_Master_Receive+0x286>
 8006308:	6903      	ldr	r3, [r0, #16]
 800630a:	704b      	strb	r3, [r1, #1]
 800630c:	e074      	b.n	80063f8 <HAL_I2C_Master_Receive+0x3c4>
 800630e:	695a      	ldr	r2, [r3, #20]
 8006310:	0797      	lsls	r7, r2, #30
 8006312:	f53f aef8 	bmi.w	8006106 <HAL_I2C_Master_Receive+0xd2>
 8006316:	695a      	ldr	r2, [r3, #20]
 8006318:	0557      	lsls	r7, r2, #21
 800631a:	f53f af5f 	bmi.w	80061dc <HAL_I2C_Master_Receive+0x1a8>
 800631e:	f7ff f8c5 	bl	80054ac <HAL_GetTick>
 8006322:	1b83      	subs	r3, r0, r6
 8006324:	429d      	cmp	r5, r3
 8006326:	d30b      	bcc.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 8006328:	b155      	cbz	r5, 8006340 <HAL_I2C_Master_Receive+0x30c>
 800632a:	6823      	ldr	r3, [r4, #0]
 800632c:	e6e2      	b.n	80060f4 <HAL_I2C_Master_Receive+0xc0>
 800632e:	695a      	ldr	r2, [r3, #20]
 8006330:	0652      	lsls	r2, r2, #25
 8006332:	d4d7      	bmi.n	80062e4 <HAL_I2C_Master_Receive+0x2b0>
 8006334:	695a      	ldr	r2, [r3, #20]
 8006336:	06d1      	lsls	r1, r2, #27
 8006338:	f100 80aa 	bmi.w	8006490 <HAL_I2C_Master_Receive+0x45c>
 800633c:	f7ff f8b6 	bl	80054ac <HAL_GetTick>
 8006340:	2200      	movs	r2, #0
 8006342:	2320      	movs	r3, #32
 8006344:	2001      	movs	r0, #1
 8006346:	6322      	str	r2, [r4, #48]	; 0x30
 8006348:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800634c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006350:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006352:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006356:	f043 0320 	orr.w	r3, r3, #32
 800635a:	6423      	str	r3, [r4, #64]	; 0x40
 800635c:	b006      	add	sp, #24
 800635e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006362:	2200      	movs	r2, #0
 8006364:	2320      	movs	r3, #32
 8006366:	6322      	str	r2, [r4, #48]	; 0x30
 8006368:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800636c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006370:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006372:	6821      	ldr	r1, [r4, #0]
 8006374:	f043 0320 	orr.w	r3, r3, #32
 8006378:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 800637c:	6423      	str	r3, [r4, #64]	; 0x40
 800637e:	680b      	ldr	r3, [r1, #0]
 8006380:	05d8      	lsls	r0, r3, #23
 8006382:	d545      	bpl.n	8006410 <HAL_I2C_Master_Receive+0x3dc>
 8006384:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006388:	2001      	movs	r0, #1
 800638a:	6423      	str	r3, [r4, #64]	; 0x40
 800638c:	e661      	b.n	8006052 <HAL_I2C_Master_Receive+0x1e>
 800638e:	695a      	ldr	r2, [r3, #20]
 8006390:	0712      	lsls	r2, r2, #28
 8006392:	f53f aef2 	bmi.w	800617a <HAL_I2C_Master_Receive+0x146>
 8006396:	695a      	ldr	r2, [r3, #20]
 8006398:	0551      	lsls	r1, r2, #21
 800639a:	f53f af1f 	bmi.w	80061dc <HAL_I2C_Master_Receive+0x1a8>
 800639e:	f7ff f885 	bl	80054ac <HAL_GetTick>
 80063a2:	1b83      	subs	r3, r0, r6
 80063a4:	429d      	cmp	r5, r3
 80063a6:	d3cb      	bcc.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 80063a8:	2d00      	cmp	r5, #0
 80063aa:	d0c9      	beq.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 80063ac:	6823      	ldr	r3, [r4, #0]
 80063ae:	e6db      	b.n	8006168 <HAL_I2C_Master_Receive+0x134>
 80063b0:	695a      	ldr	r2, [r3, #20]
 80063b2:	0757      	lsls	r7, r2, #29
 80063b4:	d40c      	bmi.n	80063d0 <HAL_I2C_Master_Receive+0x39c>
 80063b6:	f7ff f879 	bl	80054ac <HAL_GetTick>
 80063ba:	1b80      	subs	r0, r0, r6
 80063bc:	4285      	cmp	r5, r0
 80063be:	d3bf      	bcc.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 80063c0:	2d00      	cmp	r5, #0
 80063c2:	d0bd      	beq.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 80063c4:	6823      	ldr	r3, [r4, #0]
 80063c6:	1c69      	adds	r1, r5, #1
 80063c8:	d1f2      	bne.n	80063b0 <HAL_I2C_Master_Receive+0x37c>
 80063ca:	695a      	ldr	r2, [r3, #20]
 80063cc:	0752      	lsls	r2, r2, #29
 80063ce:	d5fc      	bpl.n	80063ca <HAL_I2C_Master_Receive+0x396>
 80063d0:	681a      	ldr	r2, [r3, #0]
 80063d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80063d6:	601a      	str	r2, [r3, #0]
 80063d8:	691a      	ldr	r2, [r3, #16]
 80063da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063dc:	701a      	strb	r2, [r3, #0]
 80063de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80063e0:	1c53      	adds	r3, r2, #1
 80063e2:	6263      	str	r3, [r4, #36]	; 0x24
 80063e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80063e6:	3b01      	subs	r3, #1
 80063e8:	8523      	strh	r3, [r4, #40]	; 0x28
 80063ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80063ec:	3b01      	subs	r3, #1
 80063ee:	b29b      	uxth	r3, r3
 80063f0:	8563      	strh	r3, [r4, #42]	; 0x2a
 80063f2:	6823      	ldr	r3, [r4, #0]
 80063f4:	691b      	ldr	r3, [r3, #16]
 80063f6:	7053      	strb	r3, [r2, #1]
 80063f8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80063fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80063fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80063fe:	3a01      	subs	r2, #1
 8006400:	3b01      	subs	r3, #1
 8006402:	3101      	adds	r1, #1
 8006404:	b292      	uxth	r2, r2
 8006406:	b29b      	uxth	r3, r3
 8006408:	6261      	str	r1, [r4, #36]	; 0x24
 800640a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800640c:	8522      	strh	r2, [r4, #40]	; 0x28
 800640e:	e754      	b.n	80062ba <HAL_I2C_Master_Receive+0x286>
 8006410:	2001      	movs	r0, #1
 8006412:	e61e      	b.n	8006052 <HAL_I2C_Master_Receive+0x1e>
 8006414:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8006418:	6019      	str	r1, [r3, #0]
 800641a:	6819      	ldr	r1, [r3, #0]
 800641c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8006420:	6019      	str	r1, [r3, #0]
 8006422:	9003      	str	r0, [sp, #12]
 8006424:	6959      	ldr	r1, [r3, #20]
 8006426:	9103      	str	r1, [sp, #12]
 8006428:	6999      	ldr	r1, [r3, #24]
 800642a:	9103      	str	r1, [sp, #12]
 800642c:	9903      	ldr	r1, [sp, #12]
 800642e:	e6ff      	b.n	8006230 <HAL_I2C_Master_Receive+0x1fc>
 8006430:	695a      	ldr	r2, [r3, #20]
 8006432:	0752      	lsls	r2, r2, #29
 8006434:	f53f af0a 	bmi.w	800624c <HAL_I2C_Master_Receive+0x218>
 8006438:	f7ff f838 	bl	80054ac <HAL_GetTick>
 800643c:	1b80      	subs	r0, r0, r6
 800643e:	4285      	cmp	r5, r0
 8006440:	f4ff af7e 	bcc.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 8006444:	2d00      	cmp	r5, #0
 8006446:	f43f af7b 	beq.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 800644a:	6823      	ldr	r3, [r4, #0]
 800644c:	e6f8      	b.n	8006240 <HAL_I2C_Master_Receive+0x20c>
 800644e:	6953      	ldr	r3, [r2, #20]
 8006450:	0758      	lsls	r0, r3, #29
 8006452:	f53f af13 	bmi.w	800627c <HAL_I2C_Master_Receive+0x248>
 8006456:	f7ff f829 	bl	80054ac <HAL_GetTick>
 800645a:	1b80      	subs	r0, r0, r6
 800645c:	4285      	cmp	r5, r0
 800645e:	f4ff af6f 	bcc.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 8006462:	2d00      	cmp	r5, #0
 8006464:	f47f af03 	bne.w	800626e <HAL_I2C_Master_Receive+0x23a>
 8006468:	e76a      	b.n	8006340 <HAL_I2C_Master_Receive+0x30c>
 800646a:	b955      	cbnz	r5, 8006482 <HAL_I2C_Master_Receive+0x44e>
 800646c:	e020      	b.n	80064b0 <HAL_I2C_Master_Receive+0x47c>
 800646e:	695a      	ldr	r2, [r3, #20]
 8006470:	06d7      	lsls	r7, r2, #27
 8006472:	d40d      	bmi.n	8006490 <HAL_I2C_Master_Receive+0x45c>
 8006474:	f7ff f81a 	bl	80054ac <HAL_GetTick>
 8006478:	1b80      	subs	r0, r0, r6
 800647a:	4285      	cmp	r5, r0
 800647c:	f4ff af60 	bcc.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 8006480:	6823      	ldr	r3, [r4, #0]
 8006482:	695a      	ldr	r2, [r3, #20]
 8006484:	0652      	lsls	r2, r2, #25
 8006486:	d5f2      	bpl.n	800646e <HAL_I2C_Master_Receive+0x43a>
 8006488:	691a      	ldr	r2, [r3, #16]
 800648a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800648c:	701a      	strb	r2, [r3, #0]
 800648e:	e7b3      	b.n	80063f8 <HAL_I2C_Master_Receive+0x3c4>
 8006490:	2200      	movs	r2, #0
 8006492:	f06f 0510 	mvn.w	r5, #16
 8006496:	2120      	movs	r1, #32
 8006498:	615d      	str	r5, [r3, #20]
 800649a:	6322      	str	r2, [r4, #48]	; 0x30
 800649c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 80064a0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 80064a4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80064a6:	2001      	movs	r0, #1
 80064a8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 80064ac:	6423      	str	r3, [r4, #64]	; 0x40
 80064ae:	e5d0      	b.n	8006052 <HAL_I2C_Master_Receive+0x1e>
 80064b0:	695a      	ldr	r2, [r3, #20]
 80064b2:	0650      	lsls	r0, r2, #25
 80064b4:	f57f af3e 	bpl.w	8006334 <HAL_I2C_Master_Receive+0x300>
 80064b8:	e7e6      	b.n	8006488 <HAL_I2C_Master_Receive+0x454>
 80064ba:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80064be:	6019      	str	r1, [r3, #0]
 80064c0:	9002      	str	r0, [sp, #8]
 80064c2:	6959      	ldr	r1, [r3, #20]
 80064c4:	9102      	str	r1, [sp, #8]
 80064c6:	6999      	ldr	r1, [r3, #24]
 80064c8:	9102      	str	r1, [sp, #8]
 80064ca:	9902      	ldr	r1, [sp, #8]
 80064cc:	6819      	ldr	r1, [r3, #0]
 80064ce:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80064d2:	6019      	str	r1, [r3, #0]
 80064d4:	e6ac      	b.n	8006230 <HAL_I2C_Master_Receive+0x1fc>
 80064d6:	695a      	ldr	r2, [r3, #20]
 80064d8:	0797      	lsls	r7, r2, #30
 80064da:	f53f ae59 	bmi.w	8006190 <HAL_I2C_Master_Receive+0x15c>
 80064de:	695a      	ldr	r2, [r3, #20]
 80064e0:	0557      	lsls	r7, r2, #21
 80064e2:	f53f ae7b 	bmi.w	80061dc <HAL_I2C_Master_Receive+0x1a8>
 80064e6:	f7fe ffe1 	bl	80054ac <HAL_GetTick>
 80064ea:	1b83      	subs	r3, r0, r6
 80064ec:	429d      	cmp	r5, r3
 80064ee:	f4ff af27 	bcc.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 80064f2:	2d00      	cmp	r5, #0
 80064f4:	f43f af24 	beq.w	8006340 <HAL_I2C_Master_Receive+0x30c>
 80064f8:	6823      	ldr	r3, [r4, #0]
 80064fa:	e640      	b.n	800617e <HAL_I2C_Master_Receive+0x14a>
 80064fc:	695a      	ldr	r2, [r3, #20]
 80064fe:	07d2      	lsls	r2, r2, #31
 8006500:	f53f ae57 	bmi.w	80061b2 <HAL_I2C_Master_Receive+0x17e>
 8006504:	f7fe ffd2 	bl	80054ac <HAL_GetTick>
 8006508:	1b83      	subs	r3, r0, r6
 800650a:	429d      	cmp	r5, r3
 800650c:	f4ff af29 	bcc.w	8006362 <HAL_I2C_Master_Receive+0x32e>
 8006510:	2d00      	cmp	r5, #0
 8006512:	f43f af26 	beq.w	8006362 <HAL_I2C_Master_Receive+0x32e>
 8006516:	6823      	ldr	r3, [r4, #0]
 8006518:	e645      	b.n	80061a6 <HAL_I2C_Master_Receive+0x172>
 800651a:	bf00      	nop

0800651c <HAL_PCD_Init>:
 800651c:	2800      	cmp	r0, #0
 800651e:	d05d      	beq.n	80065dc <HAL_PCD_Init+0xc0>
 8006520:	b570      	push	{r4, r5, r6, lr}
 8006522:	f890 32a9 	ldrb.w	r3, [r0, #681]	; 0x2a9
 8006526:	4604      	mov	r4, r0
 8006528:	b086      	sub	sp, #24
 800652a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800652e:	2b00      	cmp	r3, #0
 8006530:	d04f      	beq.n	80065d2 <HAL_PCD_Init+0xb6>
 8006532:	2303      	movs	r3, #3
 8006534:	6820      	ldr	r0, [r4, #0]
 8006536:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 800653a:	f002 fab7 	bl	8008aac <USB_DisableGlobalInt>
 800653e:	6860      	ldr	r0, [r4, #4]
 8006540:	b368      	cbz	r0, 800659e <HAL_PCD_Init+0x82>
 8006542:	2200      	movs	r2, #0
 8006544:	f04f 0e01 	mov.w	lr, #1
 8006548:	4611      	mov	r1, r2
 800654a:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800654e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006552:	f102 0c01 	add.w	ip, r2, #1
 8006556:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800655a:	86da      	strh	r2, [r3, #54]	; 0x36
 800655c:	fa5f f28c 	uxtb.w	r2, ip
 8006560:	4282      	cmp	r2, r0
 8006562:	e9c3 110e 	strd	r1, r1, [r3, #56]	; 0x38
 8006566:	f883 e029 	strb.w	lr, [r3, #41]	; 0x29
 800656a:	f883 102b 	strb.w	r1, [r3, #43]	; 0x2b
 800656e:	6419      	str	r1, [r3, #64]	; 0x40
 8006570:	d3eb      	bcc.n	800654a <HAL_PCD_Init+0x2e>
 8006572:	2200      	movs	r2, #0
 8006574:	4611      	mov	r1, r2
 8006576:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800657a:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800657e:	f102 0c01 	add.w	ip, r2, #1
 8006582:	f883 2168 	strb.w	r2, [r3, #360]	; 0x168
 8006586:	fa5f f28c 	uxtb.w	r2, ip
 800658a:	4282      	cmp	r2, r0
 800658c:	e9c3 115e 	strd	r1, r1, [r3, #376]	; 0x178
 8006590:	f883 1169 	strb.w	r1, [r3, #361]	; 0x169
 8006594:	f883 116b 	strb.w	r1, [r3, #363]	; 0x16b
 8006598:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 800659c:	d3eb      	bcc.n	8006576 <HAL_PCD_Init+0x5a>
 800659e:	46a4      	mov	ip, r4
 80065a0:	46ee      	mov	lr, sp
 80065a2:	f85c 6b10 	ldr.w	r6, [ip], #16
 80065a6:	1d25      	adds	r5, r4, #4
 80065a8:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80065ac:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80065b0:	f8dc 3000 	ldr.w	r3, [ip]
 80065b4:	4630      	mov	r0, r6
 80065b6:	f8ce 3000 	str.w	r3, [lr]
 80065ba:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80065be:	f002 fa7f 	bl	8008ac0 <USB_DevInit>
 80065c2:	2000      	movs	r0, #0
 80065c4:	2301      	movs	r3, #1
 80065c6:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 80065ca:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 80065ce:	b006      	add	sp, #24
 80065d0:	bd70      	pop	{r4, r5, r6, pc}
 80065d2:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 80065d6:	f003 fff1 	bl	800a5bc <HAL_PCD_MspInit>
 80065da:	e7aa      	b.n	8006532 <HAL_PCD_Init+0x16>
 80065dc:	2001      	movs	r0, #1
 80065de:	4770      	bx	lr

080065e0 <HAL_PCD_Start>:
 80065e0:	b538      	push	{r3, r4, r5, lr}
 80065e2:	f890 32a8 	ldrb.w	r3, [r0, #680]	; 0x2a8
 80065e6:	2b01      	cmp	r3, #1
 80065e8:	d012      	beq.n	8006610 <HAL_PCD_Start+0x30>
 80065ea:	4604      	mov	r4, r0
 80065ec:	2501      	movs	r5, #1
 80065ee:	6800      	ldr	r0, [r0, #0]
 80065f0:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 80065f4:	f002 fa50 	bl	8008a98 <USB_EnableGlobalInt>
 80065f8:	4629      	mov	r1, r5
 80065fa:	4620      	mov	r0, r4
 80065fc:	f003 ffd2 	bl	800a5a4 <HAL_PCDEx_SetConnectionState>
 8006600:	6820      	ldr	r0, [r4, #0]
 8006602:	f003 f84d 	bl	80096a0 <USB_DevConnect>
 8006606:	2300      	movs	r3, #0
 8006608:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800660c:	4618      	mov	r0, r3
 800660e:	bd38      	pop	{r3, r4, r5, pc}
 8006610:	2002      	movs	r0, #2
 8006612:	bd38      	pop	{r3, r4, r5, pc}

08006614 <HAL_PCD_IRQHandler>:
 8006614:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006618:	4604      	mov	r4, r0
 800661a:	6800      	ldr	r0, [r0, #0]
 800661c:	f003 f842 	bl	80096a4 <USB_ReadInterrupts>
 8006620:	0406      	lsls	r6, r0, #16
 8006622:	d443      	bmi.n	80066ac <HAL_PCD_IRQHandler+0x98>
 8006624:	6820      	ldr	r0, [r4, #0]
 8006626:	f003 f83d 	bl	80096a4 <USB_ReadInterrupts>
 800662a:	0545      	lsls	r5, r0, #21
 800662c:	f100 8180 	bmi.w	8006930 <HAL_PCD_IRQHandler+0x31c>
 8006630:	6820      	ldr	r0, [r4, #0]
 8006632:	f003 f837 	bl	80096a4 <USB_ReadInterrupts>
 8006636:	f410 4f80 	tst.w	r0, #16384	; 0x4000
 800663a:	6820      	ldr	r0, [r4, #0]
 800663c:	d007      	beq.n	800664e <HAL_PCD_IRQHandler+0x3a>
 800663e:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006642:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006646:	041b      	lsls	r3, r3, #16
 8006648:	0c1b      	lsrs	r3, r3, #16
 800664a:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 800664e:	f003 f829 	bl	80096a4 <USB_ReadInterrupts>
 8006652:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 8006656:	6820      	ldr	r0, [r4, #0]
 8006658:	d007      	beq.n	800666a <HAL_PCD_IRQHandler+0x56>
 800665a:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 800665e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006662:	041b      	lsls	r3, r3, #16
 8006664:	0c1b      	lsrs	r3, r3, #16
 8006666:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 800666a:	f003 f81b 	bl	80096a4 <USB_ReadInterrupts>
 800666e:	04c0      	lsls	r0, r0, #19
 8006670:	f100 81f6 	bmi.w	8006a60 <HAL_PCD_IRQHandler+0x44c>
 8006674:	6820      	ldr	r0, [r4, #0]
 8006676:	f003 f815 	bl	80096a4 <USB_ReadInterrupts>
 800667a:	0501      	lsls	r1, r0, #20
 800667c:	f100 81d5 	bmi.w	8006a2a <HAL_PCD_IRQHandler+0x416>
 8006680:	6820      	ldr	r0, [r4, #0]
 8006682:	f003 f80f 	bl	80096a4 <USB_ReadInterrupts>
 8006686:	0582      	lsls	r2, r0, #22
 8006688:	f100 81c2 	bmi.w	8006a10 <HAL_PCD_IRQHandler+0x3fc>
 800668c:	6820      	ldr	r0, [r4, #0]
 800668e:	f003 f809 	bl	80096a4 <USB_ReadInterrupts>
 8006692:	05c3      	lsls	r3, r0, #23
 8006694:	d508      	bpl.n	80066a8 <HAL_PCD_IRQHandler+0x94>
 8006696:	6822      	ldr	r2, [r4, #0]
 8006698:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800669c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80066a0:	041b      	lsls	r3, r3, #16
 80066a2:	0c1b      	lsrs	r3, r3, #16
 80066a4:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80066a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066ac:	6822      	ldr	r2, [r4, #0]
 80066ae:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80066b2:	4610      	mov	r0, r2
 80066b4:	041d      	lsls	r5, r3, #16
 80066b6:	d5b6      	bpl.n	8006626 <HAL_PCD_IRQHandler+0x12>
 80066b8:	f8df 934c 	ldr.w	r9, [pc, #844]	; 8006a08 <HAL_PCD_IRQHandler+0x3f4>
 80066bc:	f8df a34c 	ldr.w	sl, [pc, #844]	; 8006a0c <HAL_PCD_IRQHandler+0x3f8>
 80066c0:	e011      	b.n	80066e6 <HAL_PCD_IRQHandler+0xd2>
 80066c2:	f011 0110 	ands.w	r1, r1, #16
 80066c6:	f000 8151 	beq.w	800696c <HAL_PCD_IRQHandler+0x358>
 80066ca:	8801      	ldrh	r1, [r0, #0]
 80066cc:	f411 6500 	ands.w	r5, r1, #2048	; 0x800
 80066d0:	b28b      	uxth	r3, r1
 80066d2:	f040 8176 	bne.w	80069c2 <HAL_PCD_IRQHandler+0x3ae>
 80066d6:	0419      	lsls	r1, r3, #16
 80066d8:	f100 821b 	bmi.w	8006b12 <HAL_PCD_IRQHandler+0x4fe>
 80066dc:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 80066e0:	041e      	lsls	r6, r3, #16
 80066e2:	f140 811f 	bpl.w	8006924 <HAL_PCD_IRQHandler+0x310>
 80066e6:	f8b0 5044 	ldrh.w	r5, [r0, #68]	; 0x44
 80066ea:	b2a9      	uxth	r1, r5
 80066ec:	f015 050f 	ands.w	r5, r5, #15
 80066f0:	d0e7      	beq.n	80066c2 <HAL_PCD_IRQHandler+0xae>
 80066f2:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 80066f6:	00ae      	lsls	r6, r5, #2
 80066f8:	041f      	lsls	r7, r3, #16
 80066fa:	fa1f f883 	uxth.w	r8, r3
 80066fe:	f100 80a0 	bmi.w	8006842 <HAL_PCD_IRQHandler+0x22e>
 8006702:	f018 0f80 	tst.w	r8, #128	; 0x80
 8006706:	d0e9      	beq.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006708:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 800670c:	1977      	adds	r7, r6, r5
 800670e:	b29b      	uxth	r3, r3
 8006710:	ea03 0309 	and.w	r3, r3, r9
 8006714:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006718:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 800671c:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 8006720:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8006724:	2b03      	cmp	r3, #3
 8006726:	f000 80d0 	beq.w	80068ca <HAL_PCD_IRQHandler+0x2b6>
 800672a:	2b00      	cmp	r3, #0
 800672c:	f000 80cd 	beq.w	80068ca <HAL_PCD_IRQHandler+0x2b6>
 8006730:	2b02      	cmp	r3, #2
 8006732:	d103      	bne.n	800673c <HAL_PCD_IRQHandler+0x128>
 8006734:	f418 7f80 	tst.w	r8, #256	; 0x100
 8006738:	f000 80c7 	beq.w	80068ca <HAL_PCD_IRQHandler+0x2b6>
 800673c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006740:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006744:	b29b      	uxth	r3, r3
 8006746:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800674a:	f018 0c40 	ands.w	ip, r8, #64	; 0x40
 800674e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006752:	f000 8255 	beq.w	8006c00 <HAL_PCD_IRQHandler+0x5ec>
 8006756:	eb06 0c05 	add.w	ip, r6, r5
 800675a:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 800675e:	eb04 0ccc 	add.w	ip, r4, ip, lsl #3
 8006762:	f8dc e040 	ldr.w	lr, [ip, #64]	; 0x40
 8006766:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800676a:	459e      	cmp	lr, r3
 800676c:	f240 834b 	bls.w	8006e06 <HAL_PCD_IRQHandler+0x7f2>
 8006770:	ebae 0e03 	sub.w	lr, lr, r3
 8006774:	f8cc e040 	str.w	lr, [ip, #64]	; 0x40
 8006778:	f1be 0f00 	cmp.w	lr, #0
 800677c:	f000 8346 	beq.w	8006e0c <HAL_PCD_IRQHandler+0x7f8>
 8006780:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006784:	d00f      	beq.n	80067a6 <HAL_PCD_IRQHandler+0x192>
 8006786:	f830 c021 	ldrh.w	ip, [r0, r1, lsl #2]
 800678a:	f42c 4ce0 	bic.w	ip, ip, #28672	; 0x7000
 800678e:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8006792:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8006796:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800679a:	f44c 4c40 	orr.w	ip, ip, #49152	; 0xc000
 800679e:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 80067a2:	f820 c021 	strh.w	ip, [r0, r1, lsl #2]
 80067a6:	eb06 0e05 	add.w	lr, r6, r5
 80067aa:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
 80067ae:	f89e c04c 	ldrb.w	ip, [lr, #76]	; 0x4c
 80067b2:	f1bc 0f01 	cmp.w	ip, #1
 80067b6:	f040 8316 	bne.w	8006de6 <HAL_PCD_IRQHandler+0x7d2>
 80067ba:	f8de 203c 	ldr.w	r2, [lr, #60]	; 0x3c
 80067be:	f8de 8038 	ldr.w	r8, [lr, #56]	; 0x38
 80067c2:	eb02 0c03 	add.w	ip, r2, r3
 80067c6:	f8de 2044 	ldr.w	r2, [lr, #68]	; 0x44
 80067ca:	f8ce c03c 	str.w	ip, [lr, #60]	; 0x3c
 80067ce:	441a      	add	r2, r3
 80067d0:	f8ce 2044 	str.w	r2, [lr, #68]	; 0x44
 80067d4:	f8de 2048 	ldr.w	r2, [lr, #72]	; 0x48
 80067d8:	4542      	cmp	r2, r8
 80067da:	f0c0 83e4 	bcc.w	8006fa6 <HAL_PCD_IRQHandler+0x992>
 80067de:	eba2 0208 	sub.w	r2, r2, r8
 80067e2:	f8ce 2048 	str.w	r2, [lr, #72]	; 0x48
 80067e6:	fa1f f388 	uxth.w	r3, r8
 80067ea:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 80067ee:	f1be 0f00 	cmp.w	lr, #0
 80067f2:	f040 83cb 	bne.w	8006f8c <HAL_PCD_IRQHandler+0x978>
 80067f6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80067fa:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80067fe:	f201 4e04 	addw	lr, r1, #1028	; 0x404
 8006802:	b292      	uxth	r2, r2
 8006804:	eb0e 0102 	add.w	r1, lr, r2
 8006808:	f1b8 0f00 	cmp.w	r8, #0
 800680c:	f040 83f8 	bne.w	8007000 <HAL_PCD_IRQHandler+0x9ec>
 8006810:	f83e 1002 	ldrh.w	r1, [lr, r2]
 8006814:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8006818:	0409      	lsls	r1, r1, #16
 800681a:	0c09      	lsrs	r1, r1, #16
 800681c:	f82e 1002 	strh.w	r1, [lr, r2]
 8006820:	f83e 1002 	ldrh.w	r1, [lr, r2]
 8006824:	b289      	uxth	r1, r1
 8006826:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800682a:	f82e 1002 	strh.w	r1, [lr, r2]
 800682e:	1972      	adds	r2, r6, r5
 8006830:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8006834:	8e12      	ldrh	r2, [r2, #48]	; 0x30
 8006836:	4661      	mov	r1, ip
 8006838:	f002 ff38 	bl	80096ac <USB_WritePMA>
 800683c:	6820      	ldr	r0, [r4, #0]
 800683e:	4602      	mov	r2, r0
 8006840:	e2d1      	b.n	8006de6 <HAL_PCD_IRQHandler+0x7d2>
 8006842:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006846:	f830 2025 	ldrh.w	r2, [r0, r5, lsl #2]
 800684a:	1971      	adds	r1, r6, r5
 800684c:	4013      	ands	r3, r2
 800684e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006852:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 8006856:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800685a:	f891 3174 	ldrb.w	r3, [r1, #372]	; 0x174
 800685e:	2b00      	cmp	r3, #0
 8006860:	f040 811c 	bne.w	8006a9c <HAL_PCD_IRQHandler+0x488>
 8006864:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006868:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 800686c:	b29b      	uxth	r3, r3
 800686e:	3306      	adds	r3, #6
 8006870:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006874:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006878:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 800687c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006880:	461f      	mov	r7, r3
 8006882:	2b00      	cmp	r3, #0
 8006884:	f040 81ac 	bne.w	8006be0 <HAL_PCD_IRQHandler+0x5cc>
 8006888:	1971      	adds	r1, r6, r5
 800688a:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800688e:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8006892:	00c9      	lsls	r1, r1, #3
 8006894:	443a      	add	r2, r7
 8006896:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 800689a:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800689e:	443a      	add	r2, r7
 80068a0:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 80068a4:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80068a8:	b122      	cbz	r2, 80068b4 <HAL_PCD_IRQHandler+0x2a0>
 80068aa:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 80068ae:	42bb      	cmp	r3, r7
 80068b0:	f240 819d 	bls.w	8006bee <HAL_PCD_IRQHandler+0x5da>
 80068b4:	1973      	adds	r3, r6, r5
 80068b6:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80068ba:	4620      	mov	r0, r4
 80068bc:	f893 1168 	ldrb.w	r1, [r3, #360]	; 0x168
 80068c0:	f003 fea4 	bl	800a60c <HAL_PCD_DataOutStageCallback>
 80068c4:	6820      	ldr	r0, [r4, #0]
 80068c6:	4602      	mov	r2, r0
 80068c8:	e71b      	b.n	8006702 <HAL_PCD_IRQHandler+0xee>
 80068ca:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80068ce:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 80068d2:	b29b      	uxth	r3, r3
 80068d4:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80068d8:	442e      	add	r6, r5
 80068da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80068de:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 80068e2:	eb04 06c6 	add.w	r6, r4, r6, lsl #3
 80068e6:	6c32      	ldr	r2, [r6, #64]	; 0x40
 80068e8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80068ec:	429a      	cmp	r2, r3
 80068ee:	f240 8108 	bls.w	8006b02 <HAL_PCD_IRQHandler+0x4ee>
 80068f2:	1ad2      	subs	r2, r2, r3
 80068f4:	6432      	str	r2, [r6, #64]	; 0x40
 80068f6:	2a00      	cmp	r2, #0
 80068f8:	f000 8105 	beq.w	8006b06 <HAL_PCD_IRQHandler+0x4f2>
 80068fc:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80068fe:	3501      	adds	r5, #1
 8006900:	441a      	add	r2, r3
 8006902:	63f2      	str	r2, [r6, #60]	; 0x3c
 8006904:	6c72      	ldr	r2, [r6, #68]	; 0x44
 8006906:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800690a:	4413      	add	r3, r2
 800690c:	6473      	str	r3, [r6, #68]	; 0x44
 800690e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8006912:	f002 fb3d 	bl	8008f90 <USB_EPStartXfer>
 8006916:	6820      	ldr	r0, [r4, #0]
 8006918:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 800691c:	4602      	mov	r2, r0
 800691e:	041e      	lsls	r6, r3, #16
 8006920:	f53f aee1 	bmi.w	80066e6 <HAL_PCD_IRQHandler+0xd2>
 8006924:	4610      	mov	r0, r2
 8006926:	f002 febd 	bl	80096a4 <USB_ReadInterrupts>
 800692a:	0545      	lsls	r5, r0, #21
 800692c:	f57f ae80 	bpl.w	8006630 <HAL_PCD_IRQHandler+0x1c>
 8006930:	6822      	ldr	r2, [r4, #0]
 8006932:	4620      	mov	r0, r4
 8006934:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006938:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800693c:	041b      	lsls	r3, r3, #16
 800693e:	0c1b      	lsrs	r3, r3, #16
 8006940:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006944:	f003 fe7a 	bl	800a63c <HAL_PCD_ResetCallback>
 8006948:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800694c:	2b01      	cmp	r3, #1
 800694e:	f43f ae6f 	beq.w	8006630 <HAL_PCD_IRQHandler+0x1c>
 8006952:	2500      	movs	r5, #0
 8006954:	2301      	movs	r3, #1
 8006956:	4629      	mov	r1, r5
 8006958:	6820      	ldr	r0, [r4, #0]
 800695a:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800695e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006962:	f002 fe97 	bl	8009694 <USB_SetDevAddress>
 8006966:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 800696a:	e661      	b.n	8006630 <HAL_PCD_IRQHandler+0x1c>
 800696c:	8803      	ldrh	r3, [r0, #0]
 800696e:	b29b      	uxth	r3, r3
 8006970:	ea03 0309 	and.w	r3, r3, r9
 8006974:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006978:	8003      	strh	r3, [r0, #0]
 800697a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800697e:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 8006982:	b29b      	uxth	r3, r3
 8006984:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006988:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800698c:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 8006990:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006992:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006996:	6463      	str	r3, [r4, #68]	; 0x44
 8006998:	4413      	add	r3, r2
 800699a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800699c:	4620      	mov	r0, r4
 800699e:	f003 fe3f 	bl	800a620 <HAL_PCD_DataInStageCallback>
 80069a2:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 80069a6:	b363      	cbz	r3, 8006a02 <HAL_PCD_IRQHandler+0x3ee>
 80069a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80069aa:	bb53      	cbnz	r3, 8006a02 <HAL_PCD_IRQHandler+0x3ee>
 80069ac:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 80069b0:	6820      	ldr	r0, [r4, #0]
 80069b2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80069b6:	f8a0 204c 	strh.w	r2, [r0, #76]	; 0x4c
 80069ba:	4602      	mov	r2, r0
 80069bc:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80069c0:	e68c      	b.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 80069c2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80069c6:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 80069ca:	b29b      	uxth	r3, r3
 80069cc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80069d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80069d4:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 80069d8:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 80069dc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80069e0:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 80069e4:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 80069e8:	f002 fe70 	bl	80096cc <USB_ReadPMA>
 80069ec:	f640 738f 	movw	r3, #3983	; 0xf8f
 80069f0:	6822      	ldr	r2, [r4, #0]
 80069f2:	4620      	mov	r0, r4
 80069f4:	8811      	ldrh	r1, [r2, #0]
 80069f6:	400b      	ands	r3, r1
 80069f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80069fc:	8013      	strh	r3, [r2, #0]
 80069fe:	f003 fdfd 	bl	800a5fc <HAL_PCD_SetupStageCallback>
 8006a02:	6820      	ldr	r0, [r4, #0]
 8006a04:	4602      	mov	r2, r0
 8006a06:	e669      	b.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006a08:	ffff8f0f 	.word	0xffff8f0f
 8006a0c:	ffff8fbf 	.word	0xffff8fbf
 8006a10:	6822      	ldr	r2, [r4, #0]
 8006a12:	4620      	mov	r0, r4
 8006a14:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006a18:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006a1c:	041b      	lsls	r3, r3, #16
 8006a1e:	0c1b      	lsrs	r3, r3, #16
 8006a20:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006a24:	f003 fe06 	bl	800a634 <HAL_PCD_SOFCallback>
 8006a28:	e630      	b.n	800668c <HAL_PCD_IRQHandler+0x78>
 8006a2a:	6822      	ldr	r2, [r4, #0]
 8006a2c:	4620      	mov	r0, r4
 8006a2e:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006a32:	b29b      	uxth	r3, r3
 8006a34:	f043 0308 	orr.w	r3, r3, #8
 8006a38:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006a3c:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006a40:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006a44:	041b      	lsls	r3, r3, #16
 8006a46:	0c1b      	lsrs	r3, r3, #16
 8006a48:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006a4c:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006a50:	b29b      	uxth	r3, r3
 8006a52:	f043 0304 	orr.w	r3, r3, #4
 8006a56:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006a5a:	f003 fe01 	bl	800a660 <HAL_PCD_SuspendCallback>
 8006a5e:	e60f      	b.n	8006680 <HAL_PCD_IRQHandler+0x6c>
 8006a60:	6822      	ldr	r2, [r4, #0]
 8006a62:	4620      	mov	r0, r4
 8006a64:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006a68:	f023 0304 	bic.w	r3, r3, #4
 8006a6c:	041b      	lsls	r3, r3, #16
 8006a6e:	0c1b      	lsrs	r3, r3, #16
 8006a70:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006a74:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006a78:	f023 0308 	bic.w	r3, r3, #8
 8006a7c:	041b      	lsls	r3, r3, #16
 8006a7e:	0c1b      	lsrs	r3, r3, #16
 8006a80:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006a84:	f003 fdfc 	bl	800a680 <HAL_PCD_ResumeCallback>
 8006a88:	6820      	ldr	r0, [r4, #0]
 8006a8a:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006a8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006a92:	041b      	lsls	r3, r3, #16
 8006a94:	0c1b      	lsrs	r3, r3, #16
 8006a96:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006a9a:	e5ec      	b.n	8006676 <HAL_PCD_IRQHandler+0x62>
 8006a9c:	f891 316b 	ldrb.w	r3, [r1, #363]	; 0x16b
 8006aa0:	2b02      	cmp	r3, #2
 8006aa2:	f000 8120 	beq.w	8006ce6 <HAL_PCD_IRQHandler+0x6d2>
 8006aa6:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006aaa:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006aae:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006ab2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006ab6:	041b      	lsls	r3, r3, #16
 8006ab8:	0c1b      	lsrs	r3, r3, #16
 8006aba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006abe:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8006ac2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8006ac6:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006aca:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006ace:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8006ad2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006ad6:	b29b      	uxth	r3, r3
 8006ad8:	d06e      	beq.n	8006bb8 <HAL_PCD_IRQHandler+0x5a4>
 8006ada:	3302      	adds	r3, #2
 8006adc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006ae0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006ae4:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006ae8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006aec:	461f      	mov	r7, r3
 8006aee:	2b00      	cmp	r3, #0
 8006af0:	f43f aeca 	beq.w	8006888 <HAL_PCD_IRQHandler+0x274>
 8006af4:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8006af8:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006afc:	f002 fde6 	bl	80096cc <USB_ReadPMA>
 8006b00:	e6c2      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006b02:	2300      	movs	r3, #0
 8006b04:	6433      	str	r3, [r6, #64]	; 0x40
 8006b06:	4620      	mov	r0, r4
 8006b08:	f003 fd8a 	bl	800a620 <HAL_PCD_DataInStageCallback>
 8006b0c:	6820      	ldr	r0, [r4, #0]
 8006b0e:	4602      	mov	r2, r0
 8006b10:	e5e4      	b.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006b12:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006b16:	8802      	ldrh	r2, [r0, #0]
 8006b18:	4013      	ands	r3, r2
 8006b1a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006b1e:	8003      	strh	r3, [r0, #0]
 8006b20:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006b24:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8006b28:	b29b      	uxth	r3, r3
 8006b2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006b2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006b32:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8006b36:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006b3a:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8006b3e:	b193      	cbz	r3, 8006b66 <HAL_PCD_IRQHandler+0x552>
 8006b40:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
 8006b44:	b179      	cbz	r1, 8006b66 <HAL_PCD_IRQHandler+0x552>
 8006b46:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8006b4a:	f002 fdbf 	bl	80096cc <USB_ReadPMA>
 8006b4e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8006b52:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
 8006b56:	4620      	mov	r0, r4
 8006b58:	4413      	add	r3, r2
 8006b5a:	4629      	mov	r1, r5
 8006b5c:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
 8006b60:	f003 fd54 	bl	800a60c <HAL_PCD_DataOutStageCallback>
 8006b64:	6820      	ldr	r0, [r4, #0]
 8006b66:	8803      	ldrh	r3, [r0, #0]
 8006b68:	4602      	mov	r2, r0
 8006b6a:	051b      	lsls	r3, r3, #20
 8006b6c:	f53f adb6 	bmi.w	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006b70:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006b74:	f8d4 1178 	ldr.w	r1, [r4, #376]	; 0x178
 8006b78:	b29b      	uxth	r3, r3
 8006b7a:	f200 450c 	addw	r5, r0, #1036	; 0x40c
 8006b7e:	2900      	cmp	r1, #0
 8006b80:	f040 80a6 	bne.w	8006cd0 <HAL_PCD_IRQHandler+0x6bc>
 8006b84:	5ae9      	ldrh	r1, [r5, r3]
 8006b86:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8006b8a:	0409      	lsls	r1, r1, #16
 8006b8c:	0c09      	lsrs	r1, r1, #16
 8006b8e:	52e9      	strh	r1, [r5, r3]
 8006b90:	5ae9      	ldrh	r1, [r5, r3]
 8006b92:	b289      	uxth	r1, r1
 8006b94:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006b98:	52e9      	strh	r1, [r5, r3]
 8006b9a:	8803      	ldrh	r3, [r0, #0]
 8006b9c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006ba0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006ba4:	041b      	lsls	r3, r3, #16
 8006ba6:	0c1b      	lsrs	r3, r3, #16
 8006ba8:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8006bac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006bb0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006bb4:	8003      	strh	r3, [r0, #0]
 8006bb6:	e591      	b.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006bb8:	3306      	adds	r3, #6
 8006bba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006bbe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006bc2:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006bc6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006bca:	461f      	mov	r7, r3
 8006bcc:	2b00      	cmp	r3, #0
 8006bce:	f43f ae5b 	beq.w	8006888 <HAL_PCD_IRQHandler+0x274>
 8006bd2:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8006bd6:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006bda:	f002 fd77 	bl	80096cc <USB_ReadPMA>
 8006bde:	e653      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006be0:	f8b1 216e 	ldrh.w	r2, [r1, #366]	; 0x16e
 8006be4:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006be8:	f002 fd70 	bl	80096cc <USB_ReadPMA>
 8006bec:	e64c      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006bee:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 8006bf2:	6820      	ldr	r0, [r4, #0]
 8006bf4:	4421      	add	r1, r4
 8006bf6:	f002 f9cb 	bl	8008f90 <USB_EPStartXfer>
 8006bfa:	6820      	ldr	r0, [r4, #0]
 8006bfc:	4602      	mov	r2, r0
 8006bfe:	e580      	b.n	8006702 <HAL_PCD_IRQHandler+0xee>
 8006c00:	f8b3 e40c 	ldrh.w	lr, [r3, #1036]	; 0x40c
 8006c04:	1973      	adds	r3, r6, r5
 8006c06:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006c0a:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 8006c0e:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8006c12:	45f3      	cmp	fp, lr
 8006c14:	f0c0 80a5 	bcc.w	8006d62 <HAL_PCD_IRQHandler+0x74e>
 8006c18:	ebab 0c0e 	sub.w	ip, fp, lr
 8006c1c:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8006c20:	f1bc 0f00 	cmp.w	ip, #0
 8006c24:	f000 809f 	beq.w	8006d66 <HAL_PCD_IRQHandler+0x752>
 8006c28:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006c2c:	d10d      	bne.n	8006c4a <HAL_PCD_IRQHandler+0x636>
 8006c2e:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006c32:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006c36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c3a:	041b      	lsls	r3, r3, #16
 8006c3c:	0c1b      	lsrs	r3, r3, #16
 8006c3e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006c42:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006c46:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006c4a:	1973      	adds	r3, r6, r5
 8006c4c:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006c50:	f893 c04c 	ldrb.w	ip, [r3, #76]	; 0x4c
 8006c54:	f1bc 0f01 	cmp.w	ip, #1
 8006c58:	f040 80c5 	bne.w	8006de6 <HAL_PCD_IRQHandler+0x7d2>
 8006c5c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006c5e:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
 8006c62:	eb02 0c0e 	add.w	ip, r2, lr
 8006c66:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006c68:	f8c3 c03c 	str.w	ip, [r3, #60]	; 0x3c
 8006c6c:	4472      	add	r2, lr
 8006c6e:	645a      	str	r2, [r3, #68]	; 0x44
 8006c70:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006c72:	4542      	cmp	r2, r8
 8006c74:	f0c0 81ab 	bcc.w	8006fce <HAL_PCD_IRQHandler+0x9ba>
 8006c78:	eba2 0208 	sub.w	r2, r2, r8
 8006c7c:	649a      	str	r2, [r3, #72]	; 0x48
 8006c7e:	fa1f fe88 	uxth.w	lr, r8
 8006c82:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	f040 8194 	bne.w	8006fb4 <HAL_PCD_IRQHandler+0x9a0>
 8006c8c:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006c90:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8006c94:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8006c98:	b292      	uxth	r2, r2
 8006c9a:	188b      	adds	r3, r1, r2
 8006c9c:	f1b8 0f00 	cmp.w	r8, #0
 8006ca0:	f040 81d0 	bne.w	8007044 <HAL_PCD_IRQHandler+0xa30>
 8006ca4:	5a8b      	ldrh	r3, [r1, r2]
 8006ca6:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8006caa:	041b      	lsls	r3, r3, #16
 8006cac:	0c1b      	lsrs	r3, r3, #16
 8006cae:	528b      	strh	r3, [r1, r2]
 8006cb0:	5a8b      	ldrh	r3, [r1, r2]
 8006cb2:	b29b      	uxth	r3, r3
 8006cb4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006cb8:	528b      	strh	r3, [r1, r2]
 8006cba:	1972      	adds	r2, r6, r5
 8006cbc:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8006cc0:	4673      	mov	r3, lr
 8006cc2:	4661      	mov	r1, ip
 8006cc4:	8e52      	ldrh	r2, [r2, #50]	; 0x32
 8006cc6:	f002 fcf1 	bl	80096ac <USB_WritePMA>
 8006cca:	6820      	ldr	r0, [r4, #0]
 8006ccc:	4602      	mov	r2, r0
 8006cce:	e08a      	b.n	8006de6 <HAL_PCD_IRQHandler+0x7d2>
 8006cd0:	293e      	cmp	r1, #62	; 0x3e
 8006cd2:	f200 80cb 	bhi.w	8006e6c <HAL_PCD_IRQHandler+0x858>
 8006cd6:	084e      	lsrs	r6, r1, #1
 8006cd8:	07cf      	lsls	r7, r1, #31
 8006cda:	bf48      	it	mi
 8006cdc:	3601      	addmi	r6, #1
 8006cde:	02b1      	lsls	r1, r6, #10
 8006ce0:	b289      	uxth	r1, r1
 8006ce2:	52e9      	strh	r1, [r5, r3]
 8006ce4:	e759      	b.n	8006b9a <HAL_PCD_IRQHandler+0x586>
 8006ce6:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006cea:	f418 4c80 	ands.w	ip, r8, #16384	; 0x4000
 8006cee:	b29b      	uxth	r3, r3
 8006cf0:	f000 80c7 	beq.w	8006e82 <HAL_PCD_IRQHandler+0x86e>
 8006cf4:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006cf8:	3302      	adds	r3, #2
 8006cfa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006cfe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006d02:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006d06:	f8d1 c180 	ldr.w	ip, [r1, #384]	; 0x180
 8006d0a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006d0e:	459c      	cmp	ip, r3
 8006d10:	461f      	mov	r7, r3
 8006d12:	f0c0 8112 	bcc.w	8006f3a <HAL_PCD_IRQHandler+0x926>
 8006d16:	ebac 0c03 	sub.w	ip, ip, r3
 8006d1a:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8006d1e:	f1bc 0f00 	cmp.w	ip, #0
 8006d22:	f000 810e 	beq.w	8006f42 <HAL_PCD_IRQHandler+0x92e>
 8006d26:	f018 0f40 	tst.w	r8, #64	; 0x40
 8006d2a:	d00d      	beq.n	8006d48 <HAL_PCD_IRQHandler+0x734>
 8006d2c:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006d30:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8006d34:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006d38:	0409      	lsls	r1, r1, #16
 8006d3a:	0c09      	lsrs	r1, r1, #16
 8006d3c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006d40:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8006d44:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	f000 80c3 	beq.w	8006ed4 <HAL_PCD_IRQHandler+0x8c0>
 8006d4e:	1971      	adds	r1, r6, r5
 8006d50:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8006d54:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8006d58:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006d5c:	f002 fcb6 	bl	80096cc <USB_ReadPMA>
 8006d60:	e592      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006d62:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8006d66:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006d6a:	2b00      	cmp	r3, #0
 8006d6c:	f040 80be 	bne.w	8006eec <HAL_PCD_IRQHandler+0x8d8>
 8006d70:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8006d74:	010b      	lsls	r3, r1, #4
 8006d76:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006d7a:	4406      	add	r6, r0
 8006d7c:	b2ad      	uxth	r5, r5
 8006d7e:	5b72      	ldrh	r2, [r6, r5]
 8006d80:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006d84:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006d88:	0412      	lsls	r2, r2, #16
 8006d8a:	0c12      	lsrs	r2, r2, #16
 8006d8c:	5372      	strh	r2, [r6, r5]
 8006d8e:	5b72      	ldrh	r2, [r6, r5]
 8006d90:	4403      	add	r3, r0
 8006d92:	b292      	uxth	r2, r2
 8006d94:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006d98:	5372      	strh	r2, [r6, r5]
 8006d9a:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 8006d9e:	b280      	uxth	r0, r0
 8006da0:	5a1a      	ldrh	r2, [r3, r0]
 8006da2:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006da6:	0412      	lsls	r2, r2, #16
 8006da8:	0c12      	lsrs	r2, r2, #16
 8006daa:	521a      	strh	r2, [r3, r0]
 8006dac:	5a1a      	ldrh	r2, [r3, r0]
 8006dae:	b292      	uxth	r2, r2
 8006db0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006db4:	521a      	strh	r2, [r3, r0]
 8006db6:	4620      	mov	r0, r4
 8006db8:	f003 fc32 	bl	800a620 <HAL_PCD_DataInStageCallback>
 8006dbc:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006dc0:	6820      	ldr	r0, [r4, #0]
 8006dc2:	d183      	bne.n	8006ccc <HAL_PCD_IRQHandler+0x6b8>
 8006dc4:	4602      	mov	r2, r0
 8006dc6:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006dca:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006dce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006dd2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006dd6:	041b      	lsls	r3, r3, #16
 8006dd8:	0c1b      	lsrs	r3, r3, #16
 8006dda:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006dde:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006de2:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006de6:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006dea:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006dee:	b29b      	uxth	r3, r3
 8006df0:	ea03 030a 	and.w	r3, r3, sl
 8006df4:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8006df8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006dfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006e00:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006e04:	e46a      	b.n	80066dc <HAL_PCD_IRQHandler+0xc8>
 8006e06:	2300      	movs	r3, #0
 8006e08:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 8006e0c:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d17f      	bne.n	8006f14 <HAL_PCD_IRQHandler+0x900>
 8006e14:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8006e18:	010b      	lsls	r3, r1, #4
 8006e1a:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006e1e:	4406      	add	r6, r0
 8006e20:	b2ad      	uxth	r5, r5
 8006e22:	5b72      	ldrh	r2, [r6, r5]
 8006e24:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006e28:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006e2c:	0412      	lsls	r2, r2, #16
 8006e2e:	0c12      	lsrs	r2, r2, #16
 8006e30:	5372      	strh	r2, [r6, r5]
 8006e32:	5b72      	ldrh	r2, [r6, r5]
 8006e34:	4403      	add	r3, r0
 8006e36:	b292      	uxth	r2, r2
 8006e38:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006e3c:	5372      	strh	r2, [r6, r5]
 8006e3e:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 8006e42:	b280      	uxth	r0, r0
 8006e44:	5a1a      	ldrh	r2, [r3, r0]
 8006e46:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006e4a:	0412      	lsls	r2, r2, #16
 8006e4c:	0c12      	lsrs	r2, r2, #16
 8006e4e:	521a      	strh	r2, [r3, r0]
 8006e50:	5a1a      	ldrh	r2, [r3, r0]
 8006e52:	b292      	uxth	r2, r2
 8006e54:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006e58:	521a      	strh	r2, [r3, r0]
 8006e5a:	4620      	mov	r0, r4
 8006e5c:	f003 fbe0 	bl	800a620 <HAL_PCD_DataInStageCallback>
 8006e60:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006e64:	6820      	ldr	r0, [r4, #0]
 8006e66:	d1ad      	bne.n	8006dc4 <HAL_PCD_IRQHandler+0x7b0>
 8006e68:	4602      	mov	r2, r0
 8006e6a:	e7bc      	b.n	8006de6 <HAL_PCD_IRQHandler+0x7d2>
 8006e6c:	094e      	lsrs	r6, r1, #5
 8006e6e:	06c9      	lsls	r1, r1, #27
 8006e70:	4989      	ldr	r1, [pc, #548]	; (8007098 <HAL_PCD_IRQHandler+0xa84>)
 8006e72:	bf08      	it	eq
 8006e74:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8006e78:	ea41 2186 	orr.w	r1, r1, r6, lsl #10
 8006e7c:	b289      	uxth	r1, r1
 8006e7e:	52e9      	strh	r1, [r5, r3]
 8006e80:	e68b      	b.n	8006b9a <HAL_PCD_IRQHandler+0x586>
 8006e82:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006e86:	3306      	adds	r3, #6
 8006e88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006e8c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006e90:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006e94:	f8d1 e180 	ldr.w	lr, [r1, #384]	; 0x180
 8006e98:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006e9c:	459e      	cmp	lr, r3
 8006e9e:	461f      	mov	r7, r3
 8006ea0:	d360      	bcc.n	8006f64 <HAL_PCD_IRQHandler+0x950>
 8006ea2:	ebae 0e03 	sub.w	lr, lr, r3
 8006ea6:	f8c1 e180 	str.w	lr, [r1, #384]	; 0x180
 8006eaa:	f1be 0f00 	cmp.w	lr, #0
 8006eae:	d05b      	beq.n	8006f68 <HAL_PCD_IRQHandler+0x954>
 8006eb0:	f018 0f40 	tst.w	r8, #64	; 0x40
 8006eb4:	d10d      	bne.n	8006ed2 <HAL_PCD_IRQHandler+0x8be>
 8006eb6:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006eba:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8006ebe:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006ec2:	0409      	lsls	r1, r1, #16
 8006ec4:	0c09      	lsrs	r1, r1, #16
 8006ec6:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006eca:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8006ece:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006ed2:	b90b      	cbnz	r3, 8006ed8 <HAL_PCD_IRQHandler+0x8c4>
 8006ed4:	461f      	mov	r7, r3
 8006ed6:	e4d7      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006ed8:	1971      	adds	r1, r6, r5
 8006eda:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8006ede:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8006ee2:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006ee6:	f002 fbf1 	bl	80096cc <USB_ReadPMA>
 8006eea:	e4cd      	b.n	8006888 <HAL_PCD_IRQHandler+0x274>
 8006eec:	2b01      	cmp	r3, #1
 8006eee:	f47f af62 	bne.w	8006db6 <HAL_PCD_IRQHandler+0x7a2>
 8006ef2:	2500      	movs	r5, #0
 8006ef4:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006ef8:	010b      	lsls	r3, r1, #4
 8006efa:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006efe:	b292      	uxth	r2, r2
 8006f00:	4406      	add	r6, r0
 8006f02:	52b5      	strh	r5, [r6, r2]
 8006f04:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006f08:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006f0c:	4403      	add	r3, r0
 8006f0e:	b292      	uxth	r2, r2
 8006f10:	529d      	strh	r5, [r3, r2]
 8006f12:	e750      	b.n	8006db6 <HAL_PCD_IRQHandler+0x7a2>
 8006f14:	2b01      	cmp	r3, #1
 8006f16:	d1a0      	bne.n	8006e5a <HAL_PCD_IRQHandler+0x846>
 8006f18:	2500      	movs	r5, #0
 8006f1a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006f1e:	010b      	lsls	r3, r1, #4
 8006f20:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006f24:	b292      	uxth	r2, r2
 8006f26:	4406      	add	r6, r0
 8006f28:	52b5      	strh	r5, [r6, r2]
 8006f2a:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006f2e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006f32:	4403      	add	r3, r0
 8006f34:	b292      	uxth	r2, r2
 8006f36:	529d      	strh	r5, [r3, r2]
 8006f38:	e78f      	b.n	8006e5a <HAL_PCD_IRQHandler+0x846>
 8006f3a:	f04f 0c00 	mov.w	ip, #0
 8006f3e:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8006f42:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006f46:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8006f4a:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006f4e:	0409      	lsls	r1, r1, #16
 8006f50:	0c09      	lsrs	r1, r1, #16
 8006f52:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8006f56:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006f5a:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8006f5e:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006f62:	e6e0      	b.n	8006d26 <HAL_PCD_IRQHandler+0x712>
 8006f64:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8006f68:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006f6c:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8006f70:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006f74:	0409      	lsls	r1, r1, #16
 8006f76:	0c09      	lsrs	r1, r1, #16
 8006f78:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8006f7c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006f80:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8006f84:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006f88:	e792      	b.n	8006eb0 <HAL_PCD_IRQHandler+0x89c>
 8006f8a:	b293      	uxth	r3, r2
 8006f8c:	f1be 0f01 	cmp.w	lr, #1
 8006f90:	f47f ac4d 	bne.w	800682e <HAL_PCD_IRQHandler+0x21a>
 8006f94:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006f98:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8006f9c:	f201 4104 	addw	r1, r1, #1028	; 0x404
 8006fa0:	b292      	uxth	r2, r2
 8006fa2:	528b      	strh	r3, [r1, r2]
 8006fa4:	e443      	b.n	800682e <HAL_PCD_IRQHandler+0x21a>
 8006fa6:	b9ba      	cbnz	r2, 8006fd8 <HAL_PCD_IRQHandler+0x9c4>
 8006fa8:	4698      	mov	r8, r3
 8006faa:	f88e 204c 	strb.w	r2, [lr, #76]	; 0x4c
 8006fae:	e41c      	b.n	80067ea <HAL_PCD_IRQHandler+0x1d6>
 8006fb0:	fa1f fe82 	uxth.w	lr, r2
 8006fb4:	2b01      	cmp	r3, #1
 8006fb6:	f47f ae80 	bne.w	8006cba <HAL_PCD_IRQHandler+0x6a6>
 8006fba:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006fbe:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8006fc2:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 8006fc6:	b29b      	uxth	r3, r3
 8006fc8:	f822 e003 	strh.w	lr, [r2, r3]
 8006fcc:	e675      	b.n	8006cba <HAL_PCD_IRQHandler+0x6a6>
 8006fce:	bb22      	cbnz	r2, 800701a <HAL_PCD_IRQHandler+0xa06>
 8006fd0:	46f0      	mov	r8, lr
 8006fd2:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8006fd6:	e654      	b.n	8006c82 <HAL_PCD_IRQHandler+0x66e>
 8006fd8:	2300      	movs	r3, #0
 8006fda:	f88e 304c 	strb.w	r3, [lr, #76]	; 0x4c
 8006fde:	f8ce 3048 	str.w	r3, [lr, #72]	; 0x48
 8006fe2:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 8006fe6:	f1be 0f00 	cmp.w	lr, #0
 8006fea:	d1ce      	bne.n	8006f8a <HAL_PCD_IRQHandler+0x976>
 8006fec:	4690      	mov	r8, r2
 8006fee:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006ff2:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8006ff6:	b29b      	uxth	r3, r3
 8006ff8:	f201 4104 	addw	r1, r1, #1028	; 0x404
 8006ffc:	4419      	add	r1, r3
 8006ffe:	b293      	uxth	r3, r2
 8007000:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 8007004:	d82b      	bhi.n	800705e <HAL_PCD_IRQHandler+0xa4a>
 8007006:	ea4f 0258 	mov.w	r2, r8, lsr #1
 800700a:	f018 0f01 	tst.w	r8, #1
 800700e:	bf18      	it	ne
 8007010:	3201      	addne	r2, #1
 8007012:	0292      	lsls	r2, r2, #10
 8007014:	b292      	uxth	r2, r2
 8007016:	800a      	strh	r2, [r1, #0]
 8007018:	e409      	b.n	800682e <HAL_PCD_IRQHandler+0x21a>
 800701a:	f04f 0e00 	mov.w	lr, #0
 800701e:	f8c3 e048 	str.w	lr, [r3, #72]	; 0x48
 8007022:	f883 e04c 	strb.w	lr, [r3, #76]	; 0x4c
 8007026:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 800702a:	2b00      	cmp	r3, #0
 800702c:	d1c0      	bne.n	8006fb0 <HAL_PCD_IRQHandler+0x99c>
 800702e:	4690      	mov	r8, r2
 8007030:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007034:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007038:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 800703c:	b29b      	uxth	r3, r3
 800703e:	440b      	add	r3, r1
 8007040:	fa1f fe82 	uxth.w	lr, r2
 8007044:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 8007048:	d818      	bhi.n	800707c <HAL_PCD_IRQHandler+0xa68>
 800704a:	ea4f 0258 	mov.w	r2, r8, lsr #1
 800704e:	f018 0f01 	tst.w	r8, #1
 8007052:	bf18      	it	ne
 8007054:	3201      	addne	r2, #1
 8007056:	0292      	lsls	r2, r2, #10
 8007058:	b292      	uxth	r2, r2
 800705a:	801a      	strh	r2, [r3, #0]
 800705c:	e62d      	b.n	8006cba <HAL_PCD_IRQHandler+0x6a6>
 800705e:	ea4f 1258 	mov.w	r2, r8, lsr #5
 8007062:	f8df e034 	ldr.w	lr, [pc, #52]	; 8007098 <HAL_PCD_IRQHandler+0xa84>
 8007066:	f018 0f1f 	tst.w	r8, #31
 800706a:	bf08      	it	eq
 800706c:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8007070:	ea4e 2282 	orr.w	r2, lr, r2, lsl #10
 8007074:	b292      	uxth	r2, r2
 8007076:	800a      	strh	r2, [r1, #0]
 8007078:	f7ff bbd9 	b.w	800682e <HAL_PCD_IRQHandler+0x21a>
 800707c:	ea4f 1258 	mov.w	r2, r8, lsr #5
 8007080:	4905      	ldr	r1, [pc, #20]	; (8007098 <HAL_PCD_IRQHandler+0xa84>)
 8007082:	f018 0f1f 	tst.w	r8, #31
 8007086:	bf08      	it	eq
 8007088:	f102 32ff 	addeq.w	r2, r2, #4294967295
 800708c:	ea41 2282 	orr.w	r2, r1, r2, lsl #10
 8007090:	b292      	uxth	r2, r2
 8007092:	801a      	strh	r2, [r3, #0]
 8007094:	e611      	b.n	8006cba <HAL_PCD_IRQHandler+0x6a6>
 8007096:	bf00      	nop
 8007098:	ffff8000 	.word	0xffff8000

0800709c <HAL_PCD_SetAddress>:
 800709c:	f890 22a8 	ldrb.w	r2, [r0, #680]	; 0x2a8
 80070a0:	2a01      	cmp	r2, #1
 80070a2:	d00e      	beq.n	80070c2 <HAL_PCD_SetAddress+0x26>
 80070a4:	b510      	push	{r4, lr}
 80070a6:	2201      	movs	r2, #1
 80070a8:	4604      	mov	r4, r0
 80070aa:	6800      	ldr	r0, [r0, #0]
 80070ac:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80070b0:	f884 22a8 	strb.w	r2, [r4, #680]	; 0x2a8
 80070b4:	f002 faee 	bl	8009694 <USB_SetDevAddress>
 80070b8:	2300      	movs	r3, #0
 80070ba:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80070be:	4618      	mov	r0, r3
 80070c0:	bd10      	pop	{r4, pc}
 80070c2:	2002      	movs	r0, #2
 80070c4:	4770      	bx	lr
 80070c6:	bf00      	nop

080070c8 <HAL_PCD_EP_Open>:
 80070c8:	f001 0c07 	and.w	ip, r1, #7
 80070cc:	0609      	lsls	r1, r1, #24
 80070ce:	b510      	push	{r4, lr}
 80070d0:	4604      	mov	r4, r0
 80070d2:	d425      	bmi.n	8007120 <HAL_PCD_EP_Open+0x58>
 80070d4:	f04f 0e00 	mov.w	lr, #0
 80070d8:	eb0c 008c 	add.w	r0, ip, ip, lsl #2
 80070dc:	00c0      	lsls	r0, r0, #3
 80070de:	f500 71b4 	add.w	r1, r0, #360	; 0x168
 80070e2:	4420      	add	r0, r4
 80070e4:	f880 e169 	strb.w	lr, [r0, #361]	; 0x169
 80070e8:	4421      	add	r1, r4
 80070ea:	610a      	str	r2, [r1, #16]
 80070ec:	784a      	ldrb	r2, [r1, #1]
 80070ee:	f881 c000 	strb.w	ip, [r1]
 80070f2:	70cb      	strb	r3, [r1, #3]
 80070f4:	b10a      	cbz	r2, 80070fa <HAL_PCD_EP_Open+0x32>
 80070f6:	f8a1 c00e 	strh.w	ip, [r1, #14]
 80070fa:	2b02      	cmp	r3, #2
 80070fc:	bf04      	itt	eq
 80070fe:	2300      	moveq	r3, #0
 8007100:	710b      	strbeq	r3, [r1, #4]
 8007102:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007106:	2b01      	cmp	r3, #1
 8007108:	d019      	beq.n	800713e <HAL_PCD_EP_Open+0x76>
 800710a:	2301      	movs	r3, #1
 800710c:	6820      	ldr	r0, [r4, #0]
 800710e:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007112:	f001 fce9 	bl	8008ae8 <USB_ActivateEndpoint>
 8007116:	2300      	movs	r3, #0
 8007118:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800711c:	4618      	mov	r0, r3
 800711e:	bd10      	pop	{r4, pc}
 8007120:	f10c 0101 	add.w	r1, ip, #1
 8007124:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007128:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800712c:	2001      	movs	r0, #1
 800712e:	7048      	strb	r0, [r1, #1]
 8007130:	eb0c 0100 	add.w	r1, ip, r0
 8007134:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007138:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800713c:	e7d5      	b.n	80070ea <HAL_PCD_EP_Open+0x22>
 800713e:	2002      	movs	r0, #2
 8007140:	bd10      	pop	{r4, pc}
 8007142:	bf00      	nop

08007144 <HAL_PCD_EP_Close>:
 8007144:	060b      	lsls	r3, r1, #24
 8007146:	b510      	push	{r4, lr}
 8007148:	4604      	mov	r4, r0
 800714a:	d41b      	bmi.n	8007184 <HAL_PCD_EP_Close+0x40>
 800714c:	f001 0307 	and.w	r3, r1, #7
 8007150:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8007154:	00d2      	lsls	r2, r2, #3
 8007156:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 800715a:	4401      	add	r1, r0
 800715c:	4402      	add	r2, r0
 800715e:	2000      	movs	r0, #0
 8007160:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007164:	700b      	strb	r3, [r1, #0]
 8007166:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800716a:	2b01      	cmp	r3, #1
 800716c:	d019      	beq.n	80071a2 <HAL_PCD_EP_Close+0x5e>
 800716e:	2301      	movs	r3, #1
 8007170:	6820      	ldr	r0, [r4, #0]
 8007172:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007176:	f001 fe2b 	bl	8008dd0 <USB_DeactivateEndpoint>
 800717a:	2300      	movs	r3, #0
 800717c:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007180:	4618      	mov	r0, r3
 8007182:	bd10      	pop	{r4, pc}
 8007184:	2001      	movs	r0, #1
 8007186:	f001 0307 	and.w	r3, r1, #7
 800718a:	181a      	adds	r2, r3, r0
 800718c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007190:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007194:	4611      	mov	r1, r2
 8007196:	7050      	strb	r0, [r2, #1]
 8007198:	700b      	strb	r3, [r1, #0]
 800719a:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800719e:	2b01      	cmp	r3, #1
 80071a0:	d1e5      	bne.n	800716e <HAL_PCD_EP_Close+0x2a>
 80071a2:	2002      	movs	r0, #2
 80071a4:	bd10      	pop	{r4, pc}
 80071a6:	bf00      	nop

080071a8 <HAL_PCD_EP_Receive>:
 80071a8:	b510      	push	{r4, lr}
 80071aa:	2400      	movs	r4, #0
 80071ac:	f001 0e07 	and.w	lr, r1, #7
 80071b0:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 80071b4:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 80071b8:	e9cc 235f 	strd	r2, r3, [ip, #380]	; 0x17c
 80071bc:	6800      	ldr	r0, [r0, #0]
 80071be:	f50c 71b4 	add.w	r1, ip, #360	; 0x168
 80071c2:	f8cc 4184 	str.w	r4, [ip, #388]	; 0x184
 80071c6:	f88c 4169 	strb.w	r4, [ip, #361]	; 0x169
 80071ca:	f88c e168 	strb.w	lr, [ip, #360]	; 0x168
 80071ce:	f001 fedf 	bl	8008f90 <USB_EPStartXfer>
 80071d2:	4620      	mov	r0, r4
 80071d4:	bd10      	pop	{r4, pc}
 80071d6:	bf00      	nop

080071d8 <HAL_PCD_EP_GetRxCount>:
 80071d8:	f001 0107 	and.w	r1, r1, #7
 80071dc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80071e0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80071e4:	f8d1 0184 	ldr.w	r0, [r1, #388]	; 0x184
 80071e8:	4770      	bx	lr
 80071ea:	bf00      	nop

080071ec <HAL_PCD_EP_Transmit>:
 80071ec:	b570      	push	{r4, r5, r6, lr}
 80071ee:	2601      	movs	r6, #1
 80071f0:	2500      	movs	r5, #0
 80071f2:	4604      	mov	r4, r0
 80071f4:	f001 0e07 	and.w	lr, r1, #7
 80071f8:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 80071fc:	eb0e 0106 	add.w	r1, lr, r6
 8007200:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 8007204:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007208:	f8cc 203c 	str.w	r2, [ip, #60]	; 0x3c
 800720c:	f88c e028 	strb.w	lr, [ip, #40]	; 0x28
 8007210:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 8007214:	f8cc 3048 	str.w	r3, [ip, #72]	; 0x48
 8007218:	f88c 604c 	strb.w	r6, [ip, #76]	; 0x4c
 800721c:	f8cc 5044 	str.w	r5, [ip, #68]	; 0x44
 8007220:	f88c 6029 	strb.w	r6, [ip, #41]	; 0x29
 8007224:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007228:	6800      	ldr	r0, [r0, #0]
 800722a:	f001 feb1 	bl	8008f90 <USB_EPStartXfer>
 800722e:	4628      	mov	r0, r5
 8007230:	bd70      	pop	{r4, r5, r6, pc}
 8007232:	bf00      	nop

08007234 <HAL_PCD_EP_SetStall>:
 8007234:	6843      	ldr	r3, [r0, #4]
 8007236:	b510      	push	{r4, lr}
 8007238:	4604      	mov	r4, r0
 800723a:	f001 0007 	and.w	r0, r1, #7
 800723e:	4298      	cmp	r0, r3
 8007240:	d82d      	bhi.n	800729e <HAL_PCD_EP_SetStall+0x6a>
 8007242:	060b      	lsls	r3, r1, #24
 8007244:	d41a      	bmi.n	800727c <HAL_PCD_EP_SetStall+0x48>
 8007246:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800724a:	00c9      	lsls	r1, r1, #3
 800724c:	f501 72b4 	add.w	r2, r1, #360	; 0x168
 8007250:	1863      	adds	r3, r4, r1
 8007252:	18a1      	adds	r1, r4, r2
 8007254:	2200      	movs	r2, #0
 8007256:	f883 2169 	strb.w	r2, [r3, #361]	; 0x169
 800725a:	2301      	movs	r3, #1
 800725c:	7008      	strb	r0, [r1, #0]
 800725e:	708b      	strb	r3, [r1, #2]
 8007260:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007264:	429a      	cmp	r2, r3
 8007266:	d018      	beq.n	800729a <HAL_PCD_EP_SetStall+0x66>
 8007268:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800726c:	6820      	ldr	r0, [r4, #0]
 800726e:	f002 f999 	bl	80095a4 <USB_EPSetStall>
 8007272:	2300      	movs	r3, #0
 8007274:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007278:	4618      	mov	r0, r3
 800727a:	bd10      	pop	{r4, pc}
 800727c:	2201      	movs	r2, #1
 800727e:	1883      	adds	r3, r0, r2
 8007280:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007284:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007288:	705a      	strb	r2, [r3, #1]
 800728a:	4619      	mov	r1, r3
 800728c:	2301      	movs	r3, #1
 800728e:	7008      	strb	r0, [r1, #0]
 8007290:	708b      	strb	r3, [r1, #2]
 8007292:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007296:	429a      	cmp	r2, r3
 8007298:	d1e6      	bne.n	8007268 <HAL_PCD_EP_SetStall+0x34>
 800729a:	2002      	movs	r0, #2
 800729c:	bd10      	pop	{r4, pc}
 800729e:	2001      	movs	r0, #1
 80072a0:	bd10      	pop	{r4, pc}
 80072a2:	bf00      	nop

080072a4 <HAL_PCD_EP_ClrStall>:
 80072a4:	b538      	push	{r3, r4, r5, lr}
 80072a6:	6843      	ldr	r3, [r0, #4]
 80072a8:	f001 020f 	and.w	r2, r1, #15
 80072ac:	429a      	cmp	r2, r3
 80072ae:	d832      	bhi.n	8007316 <HAL_PCD_EP_ClrStall+0x72>
 80072b0:	060b      	lsls	r3, r1, #24
 80072b2:	4604      	mov	r4, r0
 80072b4:	d41c      	bmi.n	80072f0 <HAL_PCD_EP_ClrStall+0x4c>
 80072b6:	f001 0307 	and.w	r3, r1, #7
 80072ba:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 80072be:	00d2      	lsls	r2, r2, #3
 80072c0:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 80072c4:	4401      	add	r1, r0
 80072c6:	4402      	add	r2, r0
 80072c8:	2500      	movs	r5, #0
 80072ca:	2000      	movs	r0, #0
 80072cc:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 80072d0:	700b      	strb	r3, [r1, #0]
 80072d2:	708d      	strb	r5, [r1, #2]
 80072d4:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80072d8:	2b01      	cmp	r3, #1
 80072da:	d01a      	beq.n	8007312 <HAL_PCD_EP_ClrStall+0x6e>
 80072dc:	2301      	movs	r3, #1
 80072de:	6820      	ldr	r0, [r4, #0]
 80072e0:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80072e4:	f002 f986 	bl	80095f4 <USB_EPClearStall>
 80072e8:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 80072ec:	4628      	mov	r0, r5
 80072ee:	bd38      	pop	{r3, r4, r5, pc}
 80072f0:	2001      	movs	r0, #1
 80072f2:	f001 0307 	and.w	r3, r1, #7
 80072f6:	181a      	adds	r2, r3, r0
 80072f8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80072fc:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007300:	4611      	mov	r1, r2
 8007302:	2500      	movs	r5, #0
 8007304:	7050      	strb	r0, [r2, #1]
 8007306:	700b      	strb	r3, [r1, #0]
 8007308:	708d      	strb	r5, [r1, #2]
 800730a:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800730e:	2b01      	cmp	r3, #1
 8007310:	d1e4      	bne.n	80072dc <HAL_PCD_EP_ClrStall+0x38>
 8007312:	2002      	movs	r0, #2
 8007314:	bd38      	pop	{r3, r4, r5, pc}
 8007316:	2001      	movs	r0, #1
 8007318:	bd38      	pop	{r3, r4, r5, pc}
 800731a:	bf00      	nop

0800731c <HAL_PCDEx_PMAConfig>:
 800731c:	f011 0f80 	tst.w	r1, #128	; 0x80
 8007320:	d00b      	beq.n	800733a <HAL_PCDEx_PMAConfig+0x1e>
 8007322:	f001 0107 	and.w	r1, r1, #7
 8007326:	3101      	adds	r1, #1
 8007328:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800732c:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007330:	b95a      	cbnz	r2, 800734a <HAL_PCDEx_PMAConfig+0x2e>
 8007332:	2000      	movs	r0, #0
 8007334:	80cb      	strh	r3, [r1, #6]
 8007336:	730a      	strb	r2, [r1, #12]
 8007338:	4770      	bx	lr
 800733a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800733e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007342:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 8007346:	2a00      	cmp	r2, #0
 8007348:	d0f3      	beq.n	8007332 <HAL_PCDEx_PMAConfig+0x16>
 800734a:	2201      	movs	r2, #1
 800734c:	2000      	movs	r0, #0
 800734e:	608b      	str	r3, [r1, #8]
 8007350:	730a      	strb	r2, [r1, #12]
 8007352:	4770      	bx	lr

08007354 <RCC_SetFlashLatencyFromMSIRange>:
 8007354:	4b1d      	ldr	r3, [pc, #116]	; (80073cc <RCC_SetFlashLatencyFromMSIRange+0x78>)
 8007356:	b082      	sub	sp, #8
 8007358:	689a      	ldr	r2, [r3, #8]
 800735a:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 800735e:	d116      	bne.n	800738e <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007360:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007362:	00d2      	lsls	r2, r2, #3
 8007364:	d420      	bmi.n	80073a8 <RCC_SetFlashLatencyFromMSIRange+0x54>
 8007366:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007368:	4919      	ldr	r1, [pc, #100]	; (80073d0 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 800736a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800736e:	625a      	str	r2, [r3, #36]	; 0x24
 8007370:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007372:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8007376:	9201      	str	r2, [sp, #4]
 8007378:	9a01      	ldr	r2, [sp, #4]
 800737a:	680a      	ldr	r2, [r1, #0]
 800737c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800737e:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 8007382:	f021 5180 	bic.w	r1, r1, #268435456	; 0x10000000
 8007386:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 800738a:	6259      	str	r1, [r3, #36]	; 0x24
 800738c:	d013      	beq.n	80073b6 <RCC_SetFlashLatencyFromMSIRange+0x62>
 800738e:	2000      	movs	r0, #0
 8007390:	4a10      	ldr	r2, [pc, #64]	; (80073d4 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8007392:	6813      	ldr	r3, [r2, #0]
 8007394:	f023 0301 	bic.w	r3, r3, #1
 8007398:	4303      	orrs	r3, r0
 800739a:	6013      	str	r3, [r2, #0]
 800739c:	6813      	ldr	r3, [r2, #0]
 800739e:	f003 0301 	and.w	r3, r3, #1
 80073a2:	4058      	eors	r0, r3
 80073a4:	b002      	add	sp, #8
 80073a6:	4770      	bx	lr
 80073a8:	4b09      	ldr	r3, [pc, #36]	; (80073d0 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 80073aa:	681a      	ldr	r2, [r3, #0]
 80073ac:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 80073b0:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 80073b4:	d1eb      	bne.n	800738e <RCC_SetFlashLatencyFromMSIRange+0x3a>
 80073b6:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 80073ba:	d1e8      	bne.n	800738e <RCC_SetFlashLatencyFromMSIRange+0x3a>
 80073bc:	4a05      	ldr	r2, [pc, #20]	; (80073d4 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 80073be:	2001      	movs	r0, #1
 80073c0:	6813      	ldr	r3, [r2, #0]
 80073c2:	f043 0304 	orr.w	r3, r3, #4
 80073c6:	6013      	str	r3, [r2, #0]
 80073c8:	e7e2      	b.n	8007390 <RCC_SetFlashLatencyFromMSIRange+0x3c>
 80073ca:	bf00      	nop
 80073cc:	40023800 	.word	0x40023800
 80073d0:	40007000 	.word	0x40007000
 80073d4:	40023c00 	.word	0x40023c00

080073d8 <HAL_RCC_OscConfig>:
 80073d8:	2800      	cmp	r0, #0
 80073da:	f000 81f8 	beq.w	80077ce <HAL_RCC_OscConfig+0x3f6>
 80073de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80073e2:	4aa2      	ldr	r2, [pc, #648]	; (800766c <HAL_RCC_OscConfig+0x294>)
 80073e4:	6803      	ldr	r3, [r0, #0]
 80073e6:	6895      	ldr	r5, [r2, #8]
 80073e8:	6896      	ldr	r6, [r2, #8]
 80073ea:	07d9      	lsls	r1, r3, #31
 80073ec:	4604      	mov	r4, r0
 80073ee:	b083      	sub	sp, #12
 80073f0:	f005 050c 	and.w	r5, r5, #12
 80073f4:	f406 3680 	and.w	r6, r6, #65536	; 0x10000
 80073f8:	d52e      	bpl.n	8007458 <HAL_RCC_OscConfig+0x80>
 80073fa:	2d08      	cmp	r5, #8
 80073fc:	f000 8128 	beq.w	8007650 <HAL_RCC_OscConfig+0x278>
 8007400:	2d0c      	cmp	r5, #12
 8007402:	f000 8122 	beq.w	800764a <HAL_RCC_OscConfig+0x272>
 8007406:	6863      	ldr	r3, [r4, #4]
 8007408:	2b01      	cmp	r3, #1
 800740a:	d00f      	beq.n	800742c <HAL_RCC_OscConfig+0x54>
 800740c:	2b00      	cmp	r3, #0
 800740e:	f000 8180 	beq.w	8007712 <HAL_RCC_OscConfig+0x33a>
 8007412:	2b05      	cmp	r3, #5
 8007414:	4b95      	ldr	r3, [pc, #596]	; (800766c <HAL_RCC_OscConfig+0x294>)
 8007416:	681a      	ldr	r2, [r3, #0]
 8007418:	f000 81db 	beq.w	80077d2 <HAL_RCC_OscConfig+0x3fa>
 800741c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8007420:	601a      	str	r2, [r3, #0]
 8007422:	681a      	ldr	r2, [r3, #0]
 8007424:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8007428:	601a      	str	r2, [r3, #0]
 800742a:	e004      	b.n	8007436 <HAL_RCC_OscConfig+0x5e>
 800742c:	4a8f      	ldr	r2, [pc, #572]	; (800766c <HAL_RCC_OscConfig+0x294>)
 800742e:	6813      	ldr	r3, [r2, #0]
 8007430:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007434:	6013      	str	r3, [r2, #0]
 8007436:	f7fe f839 	bl	80054ac <HAL_GetTick>
 800743a:	f8df 8230 	ldr.w	r8, [pc, #560]	; 800766c <HAL_RCC_OscConfig+0x294>
 800743e:	4607      	mov	r7, r0
 8007440:	e005      	b.n	800744e <HAL_RCC_OscConfig+0x76>
 8007442:	f7fe f833 	bl	80054ac <HAL_GetTick>
 8007446:	1bc0      	subs	r0, r0, r7
 8007448:	2864      	cmp	r0, #100	; 0x64
 800744a:	f200 815e 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 800744e:	f8d8 3000 	ldr.w	r3, [r8]
 8007452:	039b      	lsls	r3, r3, #14
 8007454:	d5f5      	bpl.n	8007442 <HAL_RCC_OscConfig+0x6a>
 8007456:	6823      	ldr	r3, [r4, #0]
 8007458:	0799      	lsls	r1, r3, #30
 800745a:	d522      	bpl.n	80074a2 <HAL_RCC_OscConfig+0xca>
 800745c:	2d04      	cmp	r5, #4
 800745e:	f000 8114 	beq.w	800768a <HAL_RCC_OscConfig+0x2b2>
 8007462:	2d0c      	cmp	r5, #12
 8007464:	f000 810e 	beq.w	8007684 <HAL_RCC_OscConfig+0x2ac>
 8007468:	68e3      	ldr	r3, [r4, #12]
 800746a:	2b00      	cmp	r3, #0
 800746c:	f000 8179 	beq.w	8007762 <HAL_RCC_OscConfig+0x38a>
 8007470:	2201      	movs	r2, #1
 8007472:	4b7f      	ldr	r3, [pc, #508]	; (8007670 <HAL_RCC_OscConfig+0x298>)
 8007474:	4f7d      	ldr	r7, [pc, #500]	; (800766c <HAL_RCC_OscConfig+0x294>)
 8007476:	601a      	str	r2, [r3, #0]
 8007478:	f7fe f818 	bl	80054ac <HAL_GetTick>
 800747c:	4606      	mov	r6, r0
 800747e:	e005      	b.n	800748c <HAL_RCC_OscConfig+0xb4>
 8007480:	f7fe f814 	bl	80054ac <HAL_GetTick>
 8007484:	1b80      	subs	r0, r0, r6
 8007486:	2802      	cmp	r0, #2
 8007488:	f200 813f 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 800748c:	683b      	ldr	r3, [r7, #0]
 800748e:	079b      	lsls	r3, r3, #30
 8007490:	d5f6      	bpl.n	8007480 <HAL_RCC_OscConfig+0xa8>
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	6922      	ldr	r2, [r4, #16]
 8007496:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800749a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800749e:	607b      	str	r3, [r7, #4]
 80074a0:	6823      	ldr	r3, [r4, #0]
 80074a2:	06d9      	lsls	r1, r3, #27
 80074a4:	d525      	bpl.n	80074f2 <HAL_RCC_OscConfig+0x11a>
 80074a6:	2d00      	cmp	r5, #0
 80074a8:	f000 8098 	beq.w	80075dc <HAL_RCC_OscConfig+0x204>
 80074ac:	69a3      	ldr	r3, [r4, #24]
 80074ae:	2b00      	cmp	r3, #0
 80074b0:	f000 816a 	beq.w	8007788 <HAL_RCC_OscConfig+0x3b0>
 80074b4:	2201      	movs	r2, #1
 80074b6:	4b6e      	ldr	r3, [pc, #440]	; (8007670 <HAL_RCC_OscConfig+0x298>)
 80074b8:	4e6c      	ldr	r6, [pc, #432]	; (800766c <HAL_RCC_OscConfig+0x294>)
 80074ba:	621a      	str	r2, [r3, #32]
 80074bc:	f7fd fff6 	bl	80054ac <HAL_GetTick>
 80074c0:	4607      	mov	r7, r0
 80074c2:	e005      	b.n	80074d0 <HAL_RCC_OscConfig+0xf8>
 80074c4:	f7fd fff2 	bl	80054ac <HAL_GetTick>
 80074c8:	1bc0      	subs	r0, r0, r7
 80074ca:	2802      	cmp	r0, #2
 80074cc:	f200 811d 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 80074d0:	6833      	ldr	r3, [r6, #0]
 80074d2:	059b      	lsls	r3, r3, #22
 80074d4:	d5f6      	bpl.n	80074c4 <HAL_RCC_OscConfig+0xec>
 80074d6:	6873      	ldr	r3, [r6, #4]
 80074d8:	6a22      	ldr	r2, [r4, #32]
 80074da:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80074de:	4313      	orrs	r3, r2
 80074e0:	6073      	str	r3, [r6, #4]
 80074e2:	6873      	ldr	r3, [r6, #4]
 80074e4:	69e2      	ldr	r2, [r4, #28]
 80074e6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80074ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80074ee:	6073      	str	r3, [r6, #4]
 80074f0:	6823      	ldr	r3, [r4, #0]
 80074f2:	0719      	lsls	r1, r3, #28
 80074f4:	d516      	bpl.n	8007524 <HAL_RCC_OscConfig+0x14c>
 80074f6:	6963      	ldr	r3, [r4, #20]
 80074f8:	2b00      	cmp	r3, #0
 80074fa:	f000 8121 	beq.w	8007740 <HAL_RCC_OscConfig+0x368>
 80074fe:	2201      	movs	r2, #1
 8007500:	4b5b      	ldr	r3, [pc, #364]	; (8007670 <HAL_RCC_OscConfig+0x298>)
 8007502:	4f5a      	ldr	r7, [pc, #360]	; (800766c <HAL_RCC_OscConfig+0x294>)
 8007504:	f8c3 2680 	str.w	r2, [r3, #1664]	; 0x680
 8007508:	f7fd ffd0 	bl	80054ac <HAL_GetTick>
 800750c:	4606      	mov	r6, r0
 800750e:	e005      	b.n	800751c <HAL_RCC_OscConfig+0x144>
 8007510:	f7fd ffcc 	bl	80054ac <HAL_GetTick>
 8007514:	1b80      	subs	r0, r0, r6
 8007516:	2802      	cmp	r0, #2
 8007518:	f200 80f7 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 800751c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800751e:	079a      	lsls	r2, r3, #30
 8007520:	d5f6      	bpl.n	8007510 <HAL_RCC_OscConfig+0x138>
 8007522:	6823      	ldr	r3, [r4, #0]
 8007524:	075e      	lsls	r6, r3, #29
 8007526:	d53b      	bpl.n	80075a0 <HAL_RCC_OscConfig+0x1c8>
 8007528:	4b50      	ldr	r3, [pc, #320]	; (800766c <HAL_RCC_OscConfig+0x294>)
 800752a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800752c:	00d0      	lsls	r0, r2, #3
 800752e:	f100 8129 	bmi.w	8007784 <HAL_RCC_OscConfig+0x3ac>
 8007532:	2601      	movs	r6, #1
 8007534:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007536:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800753a:	625a      	str	r2, [r3, #36]	; 0x24
 800753c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800753e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007542:	9301      	str	r3, [sp, #4]
 8007544:	9b01      	ldr	r3, [sp, #4]
 8007546:	4f4b      	ldr	r7, [pc, #300]	; (8007674 <HAL_RCC_OscConfig+0x29c>)
 8007548:	683b      	ldr	r3, [r7, #0]
 800754a:	05d9      	lsls	r1, r3, #23
 800754c:	f140 80cc 	bpl.w	80076e8 <HAL_RCC_OscConfig+0x310>
 8007550:	68a3      	ldr	r3, [r4, #8]
 8007552:	2b01      	cmp	r3, #1
 8007554:	f000 8175 	beq.w	8007842 <HAL_RCC_OscConfig+0x46a>
 8007558:	2b00      	cmp	r3, #0
 800755a:	f000 80a9 	beq.w	80076b0 <HAL_RCC_OscConfig+0x2d8>
 800755e:	2b05      	cmp	r3, #5
 8007560:	4b42      	ldr	r3, [pc, #264]	; (800766c <HAL_RCC_OscConfig+0x294>)
 8007562:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007564:	f000 818b 	beq.w	800787e <HAL_RCC_OscConfig+0x4a6>
 8007568:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800756c:	635a      	str	r2, [r3, #52]	; 0x34
 800756e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007570:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007574:	635a      	str	r2, [r3, #52]	; 0x34
 8007576:	f7fd ff99 	bl	80054ac <HAL_GetTick>
 800757a:	f241 3988 	movw	r9, #5000	; 0x1388
 800757e:	4607      	mov	r7, r0
 8007580:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800766c <HAL_RCC_OscConfig+0x294>
 8007584:	e005      	b.n	8007592 <HAL_RCC_OscConfig+0x1ba>
 8007586:	f7fd ff91 	bl	80054ac <HAL_GetTick>
 800758a:	1bc0      	subs	r0, r0, r7
 800758c:	4548      	cmp	r0, r9
 800758e:	f200 80bc 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 8007592:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
 8007596:	059b      	lsls	r3, r3, #22
 8007598:	d5f5      	bpl.n	8007586 <HAL_RCC_OscConfig+0x1ae>
 800759a:	2e00      	cmp	r6, #0
 800759c:	f040 814b 	bne.w	8007836 <HAL_RCC_OscConfig+0x45e>
 80075a0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80075a2:	b1b8      	cbz	r0, 80075d4 <HAL_RCC_OscConfig+0x1fc>
 80075a4:	2d0c      	cmp	r5, #12
 80075a6:	f000 8152 	beq.w	800784e <HAL_RCC_OscConfig+0x476>
 80075aa:	2802      	cmp	r0, #2
 80075ac:	f04f 0200 	mov.w	r2, #0
 80075b0:	4b2f      	ldr	r3, [pc, #188]	; (8007670 <HAL_RCC_OscConfig+0x298>)
 80075b2:	f000 8116 	beq.w	80077e2 <HAL_RCC_OscConfig+0x40a>
 80075b6:	661a      	str	r2, [r3, #96]	; 0x60
 80075b8:	f7fd ff78 	bl	80054ac <HAL_GetTick>
 80075bc:	4d2b      	ldr	r5, [pc, #172]	; (800766c <HAL_RCC_OscConfig+0x294>)
 80075be:	4604      	mov	r4, r0
 80075c0:	e005      	b.n	80075ce <HAL_RCC_OscConfig+0x1f6>
 80075c2:	f7fd ff73 	bl	80054ac <HAL_GetTick>
 80075c6:	1b00      	subs	r0, r0, r4
 80075c8:	2802      	cmp	r0, #2
 80075ca:	f200 809e 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 80075ce:	682b      	ldr	r3, [r5, #0]
 80075d0:	019b      	lsls	r3, r3, #6
 80075d2:	d4f6      	bmi.n	80075c2 <HAL_RCC_OscConfig+0x1ea>
 80075d4:	2000      	movs	r0, #0
 80075d6:	b003      	add	sp, #12
 80075d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80075dc:	4b23      	ldr	r3, [pc, #140]	; (800766c <HAL_RCC_OscConfig+0x294>)
 80075de:	681b      	ldr	r3, [r3, #0]
 80075e0:	059a      	lsls	r2, r3, #22
 80075e2:	d502      	bpl.n	80075ea <HAL_RCC_OscConfig+0x212>
 80075e4:	69a3      	ldr	r3, [r4, #24]
 80075e6:	2b00      	cmp	r3, #0
 80075e8:	d03b      	beq.n	8007662 <HAL_RCC_OscConfig+0x28a>
 80075ea:	4e20      	ldr	r6, [pc, #128]	; (800766c <HAL_RCC_OscConfig+0x294>)
 80075ec:	6a20      	ldr	r0, [r4, #32]
 80075ee:	6873      	ldr	r3, [r6, #4]
 80075f0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80075f4:	4298      	cmp	r0, r3
 80075f6:	f240 80d7 	bls.w	80077a8 <HAL_RCC_OscConfig+0x3d0>
 80075fa:	f7ff feab 	bl	8007354 <RCC_SetFlashLatencyFromMSIRange>
 80075fe:	2800      	cmp	r0, #0
 8007600:	d12f      	bne.n	8007662 <HAL_RCC_OscConfig+0x28a>
 8007602:	6872      	ldr	r2, [r6, #4]
 8007604:	6a23      	ldr	r3, [r4, #32]
 8007606:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800760a:	431a      	orrs	r2, r3
 800760c:	6072      	str	r2, [r6, #4]
 800760e:	6872      	ldr	r2, [r6, #4]
 8007610:	69e1      	ldr	r1, [r4, #28]
 8007612:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007616:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 800761a:	6072      	str	r2, [r6, #4]
 800761c:	4a13      	ldr	r2, [pc, #76]	; (800766c <HAL_RCC_OscConfig+0x294>)
 800761e:	0b5b      	lsrs	r3, r3, #13
 8007620:	6891      	ldr	r1, [r2, #8]
 8007622:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8007626:	3301      	adds	r3, #1
 8007628:	fa02 f303 	lsl.w	r3, r2, r3
 800762c:	4a12      	ldr	r2, [pc, #72]	; (8007678 <HAL_RCC_OscConfig+0x2a0>)
 800762e:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8007632:	5c52      	ldrb	r2, [r2, r1]
 8007634:	4811      	ldr	r0, [pc, #68]	; (800767c <HAL_RCC_OscConfig+0x2a4>)
 8007636:	40d3      	lsrs	r3, r2
 8007638:	4a11      	ldr	r2, [pc, #68]	; (8007680 <HAL_RCC_OscConfig+0x2a8>)
 800763a:	6003      	str	r3, [r0, #0]
 800763c:	6810      	ldr	r0, [r2, #0]
 800763e:	f7fd fef3 	bl	8005428 <HAL_InitTick>
 8007642:	2800      	cmp	r0, #0
 8007644:	d1c7      	bne.n	80075d6 <HAL_RCC_OscConfig+0x1fe>
 8007646:	6823      	ldr	r3, [r4, #0]
 8007648:	e753      	b.n	80074f2 <HAL_RCC_OscConfig+0x11a>
 800764a:	2e00      	cmp	r6, #0
 800764c:	f43f aedb 	beq.w	8007406 <HAL_RCC_OscConfig+0x2e>
 8007650:	4a06      	ldr	r2, [pc, #24]	; (800766c <HAL_RCC_OscConfig+0x294>)
 8007652:	6812      	ldr	r2, [r2, #0]
 8007654:	0392      	lsls	r2, r2, #14
 8007656:	f57f aeff 	bpl.w	8007458 <HAL_RCC_OscConfig+0x80>
 800765a:	6862      	ldr	r2, [r4, #4]
 800765c:	2a00      	cmp	r2, #0
 800765e:	f47f aefb 	bne.w	8007458 <HAL_RCC_OscConfig+0x80>
 8007662:	2001      	movs	r0, #1
 8007664:	b003      	add	sp, #12
 8007666:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800766a:	bf00      	nop
 800766c:	40023800 	.word	0x40023800
 8007670:	42470000 	.word	0x42470000
 8007674:	40007000 	.word	0x40007000
 8007678:	080106f4 	.word	0x080106f4
 800767c:	20000020 	.word	0x20000020
 8007680:	2000002c 	.word	0x2000002c
 8007684:	2e00      	cmp	r6, #0
 8007686:	f47f aeef 	bne.w	8007468 <HAL_RCC_OscConfig+0x90>
 800768a:	4a81      	ldr	r2, [pc, #516]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 800768c:	6812      	ldr	r2, [r2, #0]
 800768e:	0792      	lsls	r2, r2, #30
 8007690:	d502      	bpl.n	8007698 <HAL_RCC_OscConfig+0x2c0>
 8007692:	68e2      	ldr	r2, [r4, #12]
 8007694:	2a01      	cmp	r2, #1
 8007696:	d1e4      	bne.n	8007662 <HAL_RCC_OscConfig+0x28a>
 8007698:	497d      	ldr	r1, [pc, #500]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 800769a:	6920      	ldr	r0, [r4, #16]
 800769c:	684a      	ldr	r2, [r1, #4]
 800769e:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80076a2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80076a6:	604a      	str	r2, [r1, #4]
 80076a8:	06d9      	lsls	r1, r3, #27
 80076aa:	f57f af22 	bpl.w	80074f2 <HAL_RCC_OscConfig+0x11a>
 80076ae:	e6fa      	b.n	80074a6 <HAL_RCC_OscConfig+0xce>
 80076b0:	4f77      	ldr	r7, [pc, #476]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 80076b2:	f241 3988 	movw	r9, #5000	; 0x1388
 80076b6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80076b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80076bc:	637b      	str	r3, [r7, #52]	; 0x34
 80076be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80076c0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80076c4:	637b      	str	r3, [r7, #52]	; 0x34
 80076c6:	f7fd fef1 	bl	80054ac <HAL_GetTick>
 80076ca:	4680      	mov	r8, r0
 80076cc:	e005      	b.n	80076da <HAL_RCC_OscConfig+0x302>
 80076ce:	f7fd feed 	bl	80054ac <HAL_GetTick>
 80076d2:	eba0 0008 	sub.w	r0, r0, r8
 80076d6:	4548      	cmp	r0, r9
 80076d8:	d817      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 80076da:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80076dc:	0598      	lsls	r0, r3, #22
 80076de:	d4f6      	bmi.n	80076ce <HAL_RCC_OscConfig+0x2f6>
 80076e0:	2e00      	cmp	r6, #0
 80076e2:	f43f af5d 	beq.w	80075a0 <HAL_RCC_OscConfig+0x1c8>
 80076e6:	e0a6      	b.n	8007836 <HAL_RCC_OscConfig+0x45e>
 80076e8:	683b      	ldr	r3, [r7, #0]
 80076ea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80076ee:	603b      	str	r3, [r7, #0]
 80076f0:	f7fd fedc 	bl	80054ac <HAL_GetTick>
 80076f4:	4680      	mov	r8, r0
 80076f6:	683b      	ldr	r3, [r7, #0]
 80076f8:	05da      	lsls	r2, r3, #23
 80076fa:	f53f af29 	bmi.w	8007550 <HAL_RCC_OscConfig+0x178>
 80076fe:	f7fd fed5 	bl	80054ac <HAL_GetTick>
 8007702:	eba0 0008 	sub.w	r0, r0, r8
 8007706:	2864      	cmp	r0, #100	; 0x64
 8007708:	d9f5      	bls.n	80076f6 <HAL_RCC_OscConfig+0x31e>
 800770a:	2003      	movs	r0, #3
 800770c:	b003      	add	sp, #12
 800770e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007712:	4f5f      	ldr	r7, [pc, #380]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007714:	683b      	ldr	r3, [r7, #0]
 8007716:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800771a:	603b      	str	r3, [r7, #0]
 800771c:	683b      	ldr	r3, [r7, #0]
 800771e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007722:	603b      	str	r3, [r7, #0]
 8007724:	f7fd fec2 	bl	80054ac <HAL_GetTick>
 8007728:	4680      	mov	r8, r0
 800772a:	e005      	b.n	8007738 <HAL_RCC_OscConfig+0x360>
 800772c:	f7fd febe 	bl	80054ac <HAL_GetTick>
 8007730:	eba0 0008 	sub.w	r0, r0, r8
 8007734:	2864      	cmp	r0, #100	; 0x64
 8007736:	d8e8      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 8007738:	683b      	ldr	r3, [r7, #0]
 800773a:	0398      	lsls	r0, r3, #14
 800773c:	d4f6      	bmi.n	800772c <HAL_RCC_OscConfig+0x354>
 800773e:	e68a      	b.n	8007456 <HAL_RCC_OscConfig+0x7e>
 8007740:	4a54      	ldr	r2, [pc, #336]	; (8007894 <HAL_RCC_OscConfig+0x4bc>)
 8007742:	4f53      	ldr	r7, [pc, #332]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007744:	f8c2 3680 	str.w	r3, [r2, #1664]	; 0x680
 8007748:	f7fd feb0 	bl	80054ac <HAL_GetTick>
 800774c:	4606      	mov	r6, r0
 800774e:	e004      	b.n	800775a <HAL_RCC_OscConfig+0x382>
 8007750:	f7fd feac 	bl	80054ac <HAL_GetTick>
 8007754:	1b80      	subs	r0, r0, r6
 8007756:	2802      	cmp	r0, #2
 8007758:	d8d7      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 800775a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800775c:	079b      	lsls	r3, r3, #30
 800775e:	d4f7      	bmi.n	8007750 <HAL_RCC_OscConfig+0x378>
 8007760:	e6df      	b.n	8007522 <HAL_RCC_OscConfig+0x14a>
 8007762:	4a4c      	ldr	r2, [pc, #304]	; (8007894 <HAL_RCC_OscConfig+0x4bc>)
 8007764:	4f4a      	ldr	r7, [pc, #296]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007766:	6013      	str	r3, [r2, #0]
 8007768:	f7fd fea0 	bl	80054ac <HAL_GetTick>
 800776c:	4606      	mov	r6, r0
 800776e:	e004      	b.n	800777a <HAL_RCC_OscConfig+0x3a2>
 8007770:	f7fd fe9c 	bl	80054ac <HAL_GetTick>
 8007774:	1b80      	subs	r0, r0, r6
 8007776:	2802      	cmp	r0, #2
 8007778:	d8c7      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 800777a:	683b      	ldr	r3, [r7, #0]
 800777c:	0798      	lsls	r0, r3, #30
 800777e:	d4f7      	bmi.n	8007770 <HAL_RCC_OscConfig+0x398>
 8007780:	6823      	ldr	r3, [r4, #0]
 8007782:	e68e      	b.n	80074a2 <HAL_RCC_OscConfig+0xca>
 8007784:	2600      	movs	r6, #0
 8007786:	e6de      	b.n	8007546 <HAL_RCC_OscConfig+0x16e>
 8007788:	4a42      	ldr	r2, [pc, #264]	; (8007894 <HAL_RCC_OscConfig+0x4bc>)
 800778a:	4f41      	ldr	r7, [pc, #260]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 800778c:	6213      	str	r3, [r2, #32]
 800778e:	f7fd fe8d 	bl	80054ac <HAL_GetTick>
 8007792:	4606      	mov	r6, r0
 8007794:	e004      	b.n	80077a0 <HAL_RCC_OscConfig+0x3c8>
 8007796:	f7fd fe89 	bl	80054ac <HAL_GetTick>
 800779a:	1b80      	subs	r0, r0, r6
 800779c:	2802      	cmp	r0, #2
 800779e:	d8b4      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 80077a0:	683b      	ldr	r3, [r7, #0]
 80077a2:	0598      	lsls	r0, r3, #22
 80077a4:	d4f7      	bmi.n	8007796 <HAL_RCC_OscConfig+0x3be>
 80077a6:	e74e      	b.n	8007646 <HAL_RCC_OscConfig+0x26e>
 80077a8:	6873      	ldr	r3, [r6, #4]
 80077aa:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80077ae:	4303      	orrs	r3, r0
 80077b0:	6073      	str	r3, [r6, #4]
 80077b2:	6873      	ldr	r3, [r6, #4]
 80077b4:	69e2      	ldr	r2, [r4, #28]
 80077b6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80077ba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80077be:	6073      	str	r3, [r6, #4]
 80077c0:	f7ff fdc8 	bl	8007354 <RCC_SetFlashLatencyFromMSIRange>
 80077c4:	2800      	cmp	r0, #0
 80077c6:	f47f af4c 	bne.w	8007662 <HAL_RCC_OscConfig+0x28a>
 80077ca:	6a23      	ldr	r3, [r4, #32]
 80077cc:	e726      	b.n	800761c <HAL_RCC_OscConfig+0x244>
 80077ce:	2001      	movs	r0, #1
 80077d0:	4770      	bx	lr
 80077d2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80077d6:	601a      	str	r2, [r3, #0]
 80077d8:	681a      	ldr	r2, [r3, #0]
 80077da:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80077de:	601a      	str	r2, [r3, #0]
 80077e0:	e629      	b.n	8007436 <HAL_RCC_OscConfig+0x5e>
 80077e2:	661a      	str	r2, [r3, #96]	; 0x60
 80077e4:	f7fd fe62 	bl	80054ac <HAL_GetTick>
 80077e8:	4e29      	ldr	r6, [pc, #164]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 80077ea:	4605      	mov	r5, r0
 80077ec:	e004      	b.n	80077f8 <HAL_RCC_OscConfig+0x420>
 80077ee:	f7fd fe5d 	bl	80054ac <HAL_GetTick>
 80077f2:	1b40      	subs	r0, r0, r5
 80077f4:	2802      	cmp	r0, #2
 80077f6:	d888      	bhi.n	800770a <HAL_RCC_OscConfig+0x332>
 80077f8:	6833      	ldr	r3, [r6, #0]
 80077fa:	0199      	lsls	r1, r3, #6
 80077fc:	d4f7      	bmi.n	80077ee <HAL_RCC_OscConfig+0x416>
 80077fe:	e9d4 310a 	ldrd	r3, r1, [r4, #40]	; 0x28
 8007802:	430b      	orrs	r3, r1
 8007804:	2101      	movs	r1, #1
 8007806:	68b2      	ldr	r2, [r6, #8]
 8007808:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800780a:	f422 027d 	bic.w	r2, r2, #16580608	; 0xfd0000
 800780e:	4313      	orrs	r3, r2
 8007810:	4a20      	ldr	r2, [pc, #128]	; (8007894 <HAL_RCC_OscConfig+0x4bc>)
 8007812:	4303      	orrs	r3, r0
 8007814:	60b3      	str	r3, [r6, #8]
 8007816:	6611      	str	r1, [r2, #96]	; 0x60
 8007818:	f7fd fe48 	bl	80054ac <HAL_GetTick>
 800781c:	4d1c      	ldr	r5, [pc, #112]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 800781e:	4604      	mov	r4, r0
 8007820:	e005      	b.n	800782e <HAL_RCC_OscConfig+0x456>
 8007822:	f7fd fe43 	bl	80054ac <HAL_GetTick>
 8007826:	1b00      	subs	r0, r0, r4
 8007828:	2802      	cmp	r0, #2
 800782a:	f63f af6e 	bhi.w	800770a <HAL_RCC_OscConfig+0x332>
 800782e:	682b      	ldr	r3, [r5, #0]
 8007830:	019a      	lsls	r2, r3, #6
 8007832:	d5f6      	bpl.n	8007822 <HAL_RCC_OscConfig+0x44a>
 8007834:	e6ce      	b.n	80075d4 <HAL_RCC_OscConfig+0x1fc>
 8007836:	4a16      	ldr	r2, [pc, #88]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007838:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800783a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800783e:	6253      	str	r3, [r2, #36]	; 0x24
 8007840:	e6ae      	b.n	80075a0 <HAL_RCC_OscConfig+0x1c8>
 8007842:	4a13      	ldr	r2, [pc, #76]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007844:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007846:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800784a:	6353      	str	r3, [r2, #52]	; 0x34
 800784c:	e693      	b.n	8007576 <HAL_RCC_OscConfig+0x19e>
 800784e:	2801      	cmp	r0, #1
 8007850:	f43f aec1 	beq.w	80075d6 <HAL_RCC_OscConfig+0x1fe>
 8007854:	4b0e      	ldr	r3, [pc, #56]	; (8007890 <HAL_RCC_OscConfig+0x4b8>)
 8007856:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007858:	689b      	ldr	r3, [r3, #8]
 800785a:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 800785e:	4291      	cmp	r1, r2
 8007860:	f47f aeff 	bne.w	8007662 <HAL_RCC_OscConfig+0x28a>
 8007864:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007866:	f403 1170 	and.w	r1, r3, #3932160	; 0x3c0000
 800786a:	4291      	cmp	r1, r2
 800786c:	f47f aef9 	bne.w	8007662 <HAL_RCC_OscConfig+0x28a>
 8007870:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007872:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8007876:	1a18      	subs	r0, r3, r0
 8007878:	bf18      	it	ne
 800787a:	2001      	movne	r0, #1
 800787c:	e6ab      	b.n	80075d6 <HAL_RCC_OscConfig+0x1fe>
 800787e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007882:	635a      	str	r2, [r3, #52]	; 0x34
 8007884:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007886:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800788a:	635a      	str	r2, [r3, #52]	; 0x34
 800788c:	e673      	b.n	8007576 <HAL_RCC_OscConfig+0x19e>
 800788e:	bf00      	nop
 8007890:	40023800 	.word	0x40023800
 8007894:	42470000 	.word	0x42470000

08007898 <HAL_RCC_ClockConfig>:
 8007898:	2800      	cmp	r0, #0
 800789a:	f000 80c2 	beq.w	8007a22 <HAL_RCC_ClockConfig+0x18a>
 800789e:	4a85      	ldr	r2, [pc, #532]	; (8007ab4 <HAL_RCC_ClockConfig+0x21c>)
 80078a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078a4:	6813      	ldr	r3, [r2, #0]
 80078a6:	4604      	mov	r4, r0
 80078a8:	f003 0301 	and.w	r3, r3, #1
 80078ac:	428b      	cmp	r3, r1
 80078ae:	460d      	mov	r5, r1
 80078b0:	d213      	bcs.n	80078da <HAL_RCC_ClockConfig+0x42>
 80078b2:	2901      	cmp	r1, #1
 80078b4:	d103      	bne.n	80078be <HAL_RCC_ClockConfig+0x26>
 80078b6:	6813      	ldr	r3, [r2, #0]
 80078b8:	f043 0304 	orr.w	r3, r3, #4
 80078bc:	6013      	str	r3, [r2, #0]
 80078be:	4a7d      	ldr	r2, [pc, #500]	; (8007ab4 <HAL_RCC_ClockConfig+0x21c>)
 80078c0:	6813      	ldr	r3, [r2, #0]
 80078c2:	f023 0301 	bic.w	r3, r3, #1
 80078c6:	432b      	orrs	r3, r5
 80078c8:	6013      	str	r3, [r2, #0]
 80078ca:	6813      	ldr	r3, [r2, #0]
 80078cc:	f003 0301 	and.w	r3, r3, #1
 80078d0:	42ab      	cmp	r3, r5
 80078d2:	d002      	beq.n	80078da <HAL_RCC_ClockConfig+0x42>
 80078d4:	2001      	movs	r0, #1
 80078d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078da:	6823      	ldr	r3, [r4, #0]
 80078dc:	0799      	lsls	r1, r3, #30
 80078de:	d506      	bpl.n	80078ee <HAL_RCC_ClockConfig+0x56>
 80078e0:	4975      	ldr	r1, [pc, #468]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 80078e2:	68a0      	ldr	r0, [r4, #8]
 80078e4:	688a      	ldr	r2, [r1, #8]
 80078e6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80078ea:	4302      	orrs	r2, r0
 80078ec:	608a      	str	r2, [r1, #8]
 80078ee:	07da      	lsls	r2, r3, #31
 80078f0:	d529      	bpl.n	8007946 <HAL_RCC_ClockConfig+0xae>
 80078f2:	6862      	ldr	r2, [r4, #4]
 80078f4:	4b70      	ldr	r3, [pc, #448]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 80078f6:	2a02      	cmp	r2, #2
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	f000 808e 	beq.w	8007a1a <HAL_RCC_ClockConfig+0x182>
 80078fe:	2a03      	cmp	r2, #3
 8007900:	f000 8085 	beq.w	8007a0e <HAL_RCC_ClockConfig+0x176>
 8007904:	2a01      	cmp	r2, #1
 8007906:	f000 80d1 	beq.w	8007aac <HAL_RCC_ClockConfig+0x214>
 800790a:	0598      	lsls	r0, r3, #22
 800790c:	d5e2      	bpl.n	80078d4 <HAL_RCC_ClockConfig+0x3c>
 800790e:	4e6a      	ldr	r6, [pc, #424]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 8007910:	f241 3888 	movw	r8, #5000	; 0x1388
 8007914:	68b3      	ldr	r3, [r6, #8]
 8007916:	f023 0303 	bic.w	r3, r3, #3
 800791a:	4313      	orrs	r3, r2
 800791c:	60b3      	str	r3, [r6, #8]
 800791e:	f7fd fdc5 	bl	80054ac <HAL_GetTick>
 8007922:	6863      	ldr	r3, [r4, #4]
 8007924:	4607      	mov	r7, r0
 8007926:	2b02      	cmp	r3, #2
 8007928:	d055      	beq.n	80079d6 <HAL_RCC_ClockConfig+0x13e>
 800792a:	2b03      	cmp	r3, #3
 800792c:	d05e      	beq.n	80079ec <HAL_RCC_ClockConfig+0x154>
 800792e:	2b01      	cmp	r3, #1
 8007930:	d105      	bne.n	800793e <HAL_RCC_ClockConfig+0xa6>
 8007932:	e066      	b.n	8007a02 <HAL_RCC_ClockConfig+0x16a>
 8007934:	f7fd fdba 	bl	80054ac <HAL_GetTick>
 8007938:	1bc0      	subs	r0, r0, r7
 800793a:	4540      	cmp	r0, r8
 800793c:	d873      	bhi.n	8007a26 <HAL_RCC_ClockConfig+0x18e>
 800793e:	68b3      	ldr	r3, [r6, #8]
 8007940:	f013 0f0c 	tst.w	r3, #12
 8007944:	d1f6      	bne.n	8007934 <HAL_RCC_ClockConfig+0x9c>
 8007946:	4a5b      	ldr	r2, [pc, #364]	; (8007ab4 <HAL_RCC_ClockConfig+0x21c>)
 8007948:	6813      	ldr	r3, [r2, #0]
 800794a:	f003 0301 	and.w	r3, r3, #1
 800794e:	42ab      	cmp	r3, r5
 8007950:	d906      	bls.n	8007960 <HAL_RCC_ClockConfig+0xc8>
 8007952:	6813      	ldr	r3, [r2, #0]
 8007954:	f023 0301 	bic.w	r3, r3, #1
 8007958:	6013      	str	r3, [r2, #0]
 800795a:	6813      	ldr	r3, [r2, #0]
 800795c:	07da      	lsls	r2, r3, #31
 800795e:	d4b9      	bmi.n	80078d4 <HAL_RCC_ClockConfig+0x3c>
 8007960:	6823      	ldr	r3, [r4, #0]
 8007962:	0759      	lsls	r1, r3, #29
 8007964:	d506      	bpl.n	8007974 <HAL_RCC_ClockConfig+0xdc>
 8007966:	4954      	ldr	r1, [pc, #336]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 8007968:	68e0      	ldr	r0, [r4, #12]
 800796a:	688a      	ldr	r2, [r1, #8]
 800796c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007970:	4302      	orrs	r2, r0
 8007972:	608a      	str	r2, [r1, #8]
 8007974:	071b      	lsls	r3, r3, #28
 8007976:	d420      	bmi.n	80079ba <HAL_RCC_ClockConfig+0x122>
 8007978:	494f      	ldr	r1, [pc, #316]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 800797a:	688a      	ldr	r2, [r1, #8]
 800797c:	f002 030c 	and.w	r3, r2, #12
 8007980:	2b08      	cmp	r3, #8
 8007982:	d079      	beq.n	8007a78 <HAL_RCC_ClockConfig+0x1e0>
 8007984:	2b0c      	cmp	r3, #12
 8007986:	d050      	beq.n	8007a2a <HAL_RCC_ClockConfig+0x192>
 8007988:	2b04      	cmp	r3, #4
 800798a:	d044      	beq.n	8007a16 <HAL_RCC_ClockConfig+0x17e>
 800798c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8007990:	684b      	ldr	r3, [r1, #4]
 8007992:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007996:	3301      	adds	r3, #1
 8007998:	4098      	lsls	r0, r3
 800799a:	4b47      	ldr	r3, [pc, #284]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 800799c:	4a47      	ldr	r2, [pc, #284]	; (8007abc <HAL_RCC_ClockConfig+0x224>)
 800799e:	689b      	ldr	r3, [r3, #8]
 80079a0:	4947      	ldr	r1, [pc, #284]	; (8007ac0 <HAL_RCC_ClockConfig+0x228>)
 80079a2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80079a6:	5cd3      	ldrb	r3, [r2, r3]
 80079a8:	4a46      	ldr	r2, [pc, #280]	; (8007ac4 <HAL_RCC_ClockConfig+0x22c>)
 80079aa:	fa20 f303 	lsr.w	r3, r0, r3
 80079ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80079b2:	6808      	ldr	r0, [r1, #0]
 80079b4:	6013      	str	r3, [r2, #0]
 80079b6:	f7fd bd37 	b.w	8005428 <HAL_InitTick>
 80079ba:	4a3f      	ldr	r2, [pc, #252]	; (8007ab8 <HAL_RCC_ClockConfig+0x220>)
 80079bc:	6921      	ldr	r1, [r4, #16]
 80079be:	6893      	ldr	r3, [r2, #8]
 80079c0:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80079c4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80079c8:	6093      	str	r3, [r2, #8]
 80079ca:	e7d5      	b.n	8007978 <HAL_RCC_ClockConfig+0xe0>
 80079cc:	f7fd fd6e 	bl	80054ac <HAL_GetTick>
 80079d0:	1bc3      	subs	r3, r0, r7
 80079d2:	4543      	cmp	r3, r8
 80079d4:	d827      	bhi.n	8007a26 <HAL_RCC_ClockConfig+0x18e>
 80079d6:	68b3      	ldr	r3, [r6, #8]
 80079d8:	f003 030c 	and.w	r3, r3, #12
 80079dc:	2b08      	cmp	r3, #8
 80079de:	d1f5      	bne.n	80079cc <HAL_RCC_ClockConfig+0x134>
 80079e0:	e7b1      	b.n	8007946 <HAL_RCC_ClockConfig+0xae>
 80079e2:	f7fd fd63 	bl	80054ac <HAL_GetTick>
 80079e6:	1bc0      	subs	r0, r0, r7
 80079e8:	4540      	cmp	r0, r8
 80079ea:	d81c      	bhi.n	8007a26 <HAL_RCC_ClockConfig+0x18e>
 80079ec:	68b3      	ldr	r3, [r6, #8]
 80079ee:	f003 030c 	and.w	r3, r3, #12
 80079f2:	2b0c      	cmp	r3, #12
 80079f4:	d1f5      	bne.n	80079e2 <HAL_RCC_ClockConfig+0x14a>
 80079f6:	e7a6      	b.n	8007946 <HAL_RCC_ClockConfig+0xae>
 80079f8:	f7fd fd58 	bl	80054ac <HAL_GetTick>
 80079fc:	1bc0      	subs	r0, r0, r7
 80079fe:	4540      	cmp	r0, r8
 8007a00:	d811      	bhi.n	8007a26 <HAL_RCC_ClockConfig+0x18e>
 8007a02:	68b3      	ldr	r3, [r6, #8]
 8007a04:	f003 030c 	and.w	r3, r3, #12
 8007a08:	2b04      	cmp	r3, #4
 8007a0a:	d1f5      	bne.n	80079f8 <HAL_RCC_ClockConfig+0x160>
 8007a0c:	e79b      	b.n	8007946 <HAL_RCC_ClockConfig+0xae>
 8007a0e:	019f      	lsls	r7, r3, #6
 8007a10:	f53f af7d 	bmi.w	800790e <HAL_RCC_ClockConfig+0x76>
 8007a14:	e75e      	b.n	80078d4 <HAL_RCC_ClockConfig+0x3c>
 8007a16:	482c      	ldr	r0, [pc, #176]	; (8007ac8 <HAL_RCC_ClockConfig+0x230>)
 8007a18:	e7bf      	b.n	800799a <HAL_RCC_ClockConfig+0x102>
 8007a1a:	039b      	lsls	r3, r3, #14
 8007a1c:	f53f af77 	bmi.w	800790e <HAL_RCC_ClockConfig+0x76>
 8007a20:	e758      	b.n	80078d4 <HAL_RCC_ClockConfig+0x3c>
 8007a22:	2001      	movs	r0, #1
 8007a24:	4770      	bx	lr
 8007a26:	2003      	movs	r0, #3
 8007a28:	e755      	b.n	80078d6 <HAL_RCC_ClockConfig+0x3e>
 8007a2a:	4828      	ldr	r0, [pc, #160]	; (8007acc <HAL_RCC_ClockConfig+0x234>)
 8007a2c:	688b      	ldr	r3, [r1, #8]
 8007a2e:	f3c2 4183 	ubfx	r1, r2, #18, #4
 8007a32:	5c44      	ldrb	r4, [r0, r1]
 8007a34:	f3c2 5281 	ubfx	r2, r2, #22, #2
 8007a38:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8007a3c:	f102 0201 	add.w	r2, r2, #1
 8007a40:	ea4f 1144 	mov.w	r1, r4, lsl #5
 8007a44:	d01a      	beq.n	8007a7c <HAL_RCC_ClockConfig+0x1e4>
 8007a46:	1b09      	subs	r1, r1, r4
 8007a48:	eb65 0505 	sbc.w	r5, r5, r5
 8007a4c:	01ab      	lsls	r3, r5, #6
 8007a4e:	0188      	lsls	r0, r1, #6
 8007a50:	1a40      	subs	r0, r0, r1
 8007a52:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007a56:	eb63 0305 	sbc.w	r3, r3, r5
 8007a5a:	00c1      	lsls	r1, r0, #3
 8007a5c:	00db      	lsls	r3, r3, #3
 8007a5e:	190c      	adds	r4, r1, r4
 8007a60:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8007a64:	f143 0300 	adc.w	r3, r3, #0
 8007a68:	0259      	lsls	r1, r3, #9
 8007a6a:	0260      	lsls	r0, r4, #9
 8007a6c:	2300      	movs	r3, #0
 8007a6e:	ea41 51d4 	orr.w	r1, r1, r4, lsr #23
 8007a72:	f7f9 fb8f 	bl	8001194 <__aeabi_uldivmod>
 8007a76:	e790      	b.n	800799a <HAL_RCC_ClockConfig+0x102>
 8007a78:	4815      	ldr	r0, [pc, #84]	; (8007ad0 <HAL_RCC_ClockConfig+0x238>)
 8007a7a:	e78e      	b.n	800799a <HAL_RCC_ClockConfig+0x102>
 8007a7c:	1b0d      	subs	r5, r1, r4
 8007a7e:	eb66 0606 	sbc.w	r6, r6, r6
 8007a82:	01b0      	lsls	r0, r6, #6
 8007a84:	01a9      	lsls	r1, r5, #6
 8007a86:	1b49      	subs	r1, r1, r5
 8007a88:	ea40 6095 	orr.w	r0, r0, r5, lsr #26
 8007a8c:	eb60 0006 	sbc.w	r0, r0, r6
 8007a90:	00c0      	lsls	r0, r0, #3
 8007a92:	ea40 7051 	orr.w	r0, r0, r1, lsr #29
 8007a96:	00c9      	lsls	r1, r1, #3
 8007a98:	190c      	adds	r4, r1, r4
 8007a9a:	f140 0000 	adc.w	r0, r0, #0
 8007a9e:	0281      	lsls	r1, r0, #10
 8007aa0:	ea41 5194 	orr.w	r1, r1, r4, lsr #22
 8007aa4:	02a0      	lsls	r0, r4, #10
 8007aa6:	f7f9 fb75 	bl	8001194 <__aeabi_uldivmod>
 8007aaa:	e776      	b.n	800799a <HAL_RCC_ClockConfig+0x102>
 8007aac:	079e      	lsls	r6, r3, #30
 8007aae:	f53f af2e 	bmi.w	800790e <HAL_RCC_ClockConfig+0x76>
 8007ab2:	e70f      	b.n	80078d4 <HAL_RCC_ClockConfig+0x3c>
 8007ab4:	40023c00 	.word	0x40023c00
 8007ab8:	40023800 	.word	0x40023800
 8007abc:	080106f4 	.word	0x080106f4
 8007ac0:	2000002c 	.word	0x2000002c
 8007ac4:	20000020 	.word	0x20000020
 8007ac8:	00f42400 	.word	0x00f42400
 8007acc:	080106e8 	.word	0x080106e8
 8007ad0:	007a1200 	.word	0x007a1200

08007ad4 <HAL_RCC_GetPCLK1Freq>:
 8007ad4:	4b04      	ldr	r3, [pc, #16]	; (8007ae8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007ad6:	4a05      	ldr	r2, [pc, #20]	; (8007aec <HAL_RCC_GetPCLK1Freq+0x18>)
 8007ad8:	689b      	ldr	r3, [r3, #8]
 8007ada:	4905      	ldr	r1, [pc, #20]	; (8007af0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007adc:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8007ae0:	5ccb      	ldrb	r3, [r1, r3]
 8007ae2:	6810      	ldr	r0, [r2, #0]
 8007ae4:	40d8      	lsrs	r0, r3
 8007ae6:	4770      	bx	lr
 8007ae8:	40023800 	.word	0x40023800
 8007aec:	20000020 	.word	0x20000020
 8007af0:	08010704 	.word	0x08010704

08007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 8007af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007af8:	461d      	mov	r5, r3
 8007afa:	4616      	mov	r6, r2
 8007afc:	b082      	sub	sp, #8
 8007afe:	460c      	mov	r4, r1
 8007b00:	4607      	mov	r7, r0
 8007b02:	f7fd fcd3 	bl	80054ac <HAL_GetTick>
 8007b06:	4435      	add	r5, r6
 8007b08:	1a2d      	subs	r5, r5, r0
 8007b0a:	f7fd fccf 	bl	80054ac <HAL_GetTick>
 8007b0e:	4680      	mov	r8, r0
 8007b10:	4b26      	ldr	r3, [pc, #152]	; (8007bac <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8007b18:	fb05 f303 	mul.w	r3, r5, r3
 8007b1c:	9301      	str	r3, [sp, #4]
 8007b1e:	1c73      	adds	r3, r6, #1
 8007b20:	6839      	ldr	r1, [r7, #0]
 8007b22:	d107      	bne.n	8007b34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 8007b24:	688b      	ldr	r3, [r1, #8]
 8007b26:	ea34 0303 	bics.w	r3, r4, r3
 8007b2a:	d0fb      	beq.n	8007b24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
 8007b2c:	2000      	movs	r0, #0
 8007b2e:	b002      	add	sp, #8
 8007b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b34:	688b      	ldr	r3, [r1, #8]
 8007b36:	ea34 0303 	bics.w	r3, r4, r3
 8007b3a:	d1f7      	bne.n	8007b2c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
 8007b3c:	f7fd fcb6 	bl	80054ac <HAL_GetTick>
 8007b40:	eba0 0308 	sub.w	r3, r0, r8
 8007b44:	42ab      	cmp	r3, r5
 8007b46:	d207      	bcs.n	8007b58 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
 8007b48:	9b01      	ldr	r3, [sp, #4]
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	9b01      	ldr	r3, [sp, #4]
 8007b4e:	bf08      	it	eq
 8007b50:	2500      	moveq	r5, #0
 8007b52:	3b01      	subs	r3, #1
 8007b54:	9301      	str	r3, [sp, #4]
 8007b56:	e7e2      	b.n	8007b1e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
 8007b58:	e9d7 3100 	ldrd	r3, r1, [r7]
 8007b5c:	685a      	ldr	r2, [r3, #4]
 8007b5e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8007b62:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007b66:	605a      	str	r2, [r3, #4]
 8007b68:	d014      	beq.n	8007b94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
 8007b6a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007b6c:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007b70:	d007      	beq.n	8007b82 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8e>
 8007b72:	2201      	movs	r2, #1
 8007b74:	2300      	movs	r3, #0
 8007b76:	2003      	movs	r0, #3
 8007b78:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
 8007b7c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8007b80:	e7d5      	b.n	8007b2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
 8007b82:	681a      	ldr	r2, [r3, #0]
 8007b84:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007b88:	601a      	str	r2, [r3, #0]
 8007b8a:	681a      	ldr	r2, [r3, #0]
 8007b8c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007b90:	601a      	str	r2, [r3, #0]
 8007b92:	e7ee      	b.n	8007b72 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
 8007b94:	68ba      	ldr	r2, [r7, #8]
 8007b96:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007b9a:	d002      	beq.n	8007ba2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
 8007b9c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007ba0:	d1e3      	bne.n	8007b6a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8007ba2:	681a      	ldr	r2, [r3, #0]
 8007ba4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007ba8:	601a      	str	r2, [r3, #0]
 8007baa:	e7de      	b.n	8007b6a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8007bac:	20000020 	.word	0x20000020

08007bb0 <HAL_SPI_Init>:
 8007bb0:	2800      	cmp	r0, #0
 8007bb2:	d053      	beq.n	8007c5c <HAL_SPI_Init+0xac>
 8007bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bb6:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8007bb8:	4604      	mov	r4, r0
 8007bba:	2b00      	cmp	r3, #0
 8007bbc:	d03f      	beq.n	8007c3e <HAL_SPI_Init+0x8e>
 8007bbe:	2300      	movs	r3, #0
 8007bc0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007bc4:	2000      	movs	r0, #0
 8007bc6:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8007bca:	62a0      	str	r0, [r4, #40]	; 0x28
 8007bcc:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8007bd0:	2a00      	cmp	r2, #0
 8007bd2:	d03a      	beq.n	8007c4a <HAL_SPI_Init+0x9a>
 8007bd4:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8007bd8:	2702      	movs	r7, #2
 8007bda:	f04f 0c01 	mov.w	ip, #1
 8007bde:	2600      	movs	r6, #0
 8007be0:	f402 4204 	and.w	r2, r2, #33792	; 0x8400
 8007be4:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8007be8:	4313      	orrs	r3, r2
 8007bea:	68e2      	ldr	r2, [r4, #12]
 8007bec:	f884 7051 	strb.w	r7, [r4, #81]	; 0x51
 8007bf0:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8007bf4:	4313      	orrs	r3, r2
 8007bf6:	6922      	ldr	r2, [r4, #16]
 8007bf8:	69a1      	ldr	r1, [r4, #24]
 8007bfa:	403a      	ands	r2, r7
 8007bfc:	4313      	orrs	r3, r2
 8007bfe:	6962      	ldr	r2, [r4, #20]
 8007c00:	6825      	ldr	r5, [r4, #0]
 8007c02:	ea02 020c 	and.w	r2, r2, ip
 8007c06:	431a      	orrs	r2, r3
 8007c08:	69e3      	ldr	r3, [r4, #28]
 8007c0a:	f003 0738 	and.w	r7, r3, #56	; 0x38
 8007c0e:	6a23      	ldr	r3, [r4, #32]
 8007c10:	f003 0e80 	and.w	lr, r3, #128	; 0x80
 8007c14:	f401 7300 	and.w	r3, r1, #512	; 0x200
 8007c18:	4313      	orrs	r3, r2
 8007c1a:	433b      	orrs	r3, r7
 8007c1c:	682a      	ldr	r2, [r5, #0]
 8007c1e:	ea43 030e 	orr.w	r3, r3, lr
 8007c22:	0c09      	lsrs	r1, r1, #16
 8007c24:	4303      	orrs	r3, r0
 8007c26:	f001 0104 	and.w	r1, r1, #4
 8007c2a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007c2e:	602a      	str	r2, [r5, #0]
 8007c30:	602b      	str	r3, [r5, #0]
 8007c32:	6069      	str	r1, [r5, #4]
 8007c34:	6566      	str	r6, [r4, #84]	; 0x54
 8007c36:	f884 c051 	strb.w	ip, [r4, #81]	; 0x51
 8007c3a:	4630      	mov	r0, r6
 8007c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007c3e:	6842      	ldr	r2, [r0, #4]
 8007c40:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007c44:	d0be      	beq.n	8007bc4 <HAL_SPI_Init+0x14>
 8007c46:	61c3      	str	r3, [r0, #28]
 8007c48:	e7bc      	b.n	8007bc4 <HAL_SPI_Init+0x14>
 8007c4a:	4620      	mov	r0, r4
 8007c4c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
 8007c50:	f7fc ffba 	bl	8004bc8 <HAL_SPI_MspInit>
 8007c54:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007c56:	f403 5000 	and.w	r0, r3, #8192	; 0x2000
 8007c5a:	e7bb      	b.n	8007bd4 <HAL_SPI_Init+0x24>
 8007c5c:	2001      	movs	r0, #1
 8007c5e:	4770      	bx	lr

08007c60 <HAL_SPI_Transmit>:
 8007c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c64:	461d      	mov	r5, r3
 8007c66:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007c6a:	b082      	sub	sp, #8
 8007c6c:	2b01      	cmp	r3, #1
 8007c6e:	f000 8088 	beq.w	8007d82 <HAL_SPI_Transmit+0x122>
 8007c72:	2301      	movs	r3, #1
 8007c74:	4604      	mov	r4, r0
 8007c76:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8007c7a:	4688      	mov	r8, r1
 8007c7c:	4617      	mov	r7, r2
 8007c7e:	f7fd fc15 	bl	80054ac <HAL_GetTick>
 8007c82:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007c86:	4606      	mov	r6, r0
 8007c88:	2b01      	cmp	r3, #1
 8007c8a:	b2d8      	uxtb	r0, r3
 8007c8c:	d009      	beq.n	8007ca2 <HAL_SPI_Transmit+0x42>
 8007c8e:	2002      	movs	r0, #2
 8007c90:	2201      	movs	r2, #1
 8007c92:	2300      	movs	r3, #0
 8007c94:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8007c98:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007c9c:	b002      	add	sp, #8
 8007c9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ca2:	f1b8 0f00 	cmp.w	r8, #0
 8007ca6:	d0f3      	beq.n	8007c90 <HAL_SPI_Transmit+0x30>
 8007ca8:	2f00      	cmp	r7, #0
 8007caa:	d0f1      	beq.n	8007c90 <HAL_SPI_Transmit+0x30>
 8007cac:	2300      	movs	r3, #0
 8007cae:	2203      	movs	r2, #3
 8007cb0:	63a3      	str	r3, [r4, #56]	; 0x38
 8007cb2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8007cb6:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8007cb8:	6563      	str	r3, [r4, #84]	; 0x54
 8007cba:	6463      	str	r3, [r4, #68]	; 0x44
 8007cbc:	86e7      	strh	r7, [r4, #54]	; 0x36
 8007cbe:	6423      	str	r3, [r4, #64]	; 0x40
 8007cc0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007cc2:	68a3      	ldr	r3, [r4, #8]
 8007cc4:	6820      	ldr	r0, [r4, #0]
 8007cc6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007cca:	4684      	mov	ip, r0
 8007ccc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 8007cd0:	86a7      	strh	r7, [r4, #52]	; 0x34
 8007cd2:	f000 8083 	beq.w	8007ddc <HAL_SPI_Transmit+0x17c>
 8007cd6:	6803      	ldr	r3, [r0, #0]
 8007cd8:	065b      	lsls	r3, r3, #25
 8007cda:	d403      	bmi.n	8007ce4 <HAL_SPI_Transmit+0x84>
 8007cdc:	6803      	ldr	r3, [r0, #0]
 8007cde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007ce2:	6003      	str	r3, [r0, #0]
 8007ce4:	68e3      	ldr	r3, [r4, #12]
 8007ce6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007cea:	6863      	ldr	r3, [r4, #4]
 8007cec:	d04d      	beq.n	8007d8a <HAL_SPI_Transmit+0x12a>
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	f000 8096 	beq.w	8007e20 <HAL_SPI_Transmit+0x1c0>
 8007cf4:	2f01      	cmp	r7, #1
 8007cf6:	f000 8093 	beq.w	8007e20 <HAL_SPI_Transmit+0x1c0>
 8007cfa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cfc:	b29b      	uxth	r3, r3
 8007cfe:	b1bb      	cbz	r3, 8007d30 <HAL_SPI_Transmit+0xd0>
 8007d00:	2d00      	cmp	r5, #0
 8007d02:	f000 80cc 	beq.w	8007e9e <HAL_SPI_Transmit+0x23e>
 8007d06:	1c6f      	adds	r7, r5, #1
 8007d08:	d17f      	bne.n	8007e0a <HAL_SPI_Transmit+0x1aa>
 8007d0a:	6823      	ldr	r3, [r4, #0]
 8007d0c:	689a      	ldr	r2, [r3, #8]
 8007d0e:	0790      	lsls	r0, r2, #30
 8007d10:	f140 8091 	bpl.w	8007e36 <HAL_SPI_Transmit+0x1d6>
 8007d14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d16:	7812      	ldrb	r2, [r2, #0]
 8007d18:	731a      	strb	r2, [r3, #12]
 8007d1a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007d1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d1e:	3901      	subs	r1, #1
 8007d20:	b289      	uxth	r1, r1
 8007d22:	86e1      	strh	r1, [r4, #54]	; 0x36
 8007d24:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007d26:	3301      	adds	r3, #1
 8007d28:	b289      	uxth	r1, r1
 8007d2a:	6323      	str	r3, [r4, #48]	; 0x30
 8007d2c:	2900      	cmp	r1, #0
 8007d2e:	d1ec      	bne.n	8007d0a <HAL_SPI_Transmit+0xaa>
 8007d30:	6862      	ldr	r2, [r4, #4]
 8007d32:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007d36:	4b72      	ldr	r3, [pc, #456]	; (8007f00 <HAL_SPI_Transmit+0x2a0>)
 8007d38:	4872      	ldr	r0, [pc, #456]	; (8007f04 <HAL_SPI_Transmit+0x2a4>)
 8007d3a:	681b      	ldr	r3, [r3, #0]
 8007d3c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d40:	fba0 0303 	umull	r0, r3, r0, r3
 8007d44:	ea4f 5353 	mov.w	r3, r3, lsr #21
 8007d48:	fb01 f303 	mul.w	r3, r1, r3
 8007d4c:	9301      	str	r3, [sp, #4]
 8007d4e:	d107      	bne.n	8007d60 <HAL_SPI_Transmit+0x100>
 8007d50:	e0c6      	b.n	8007ee0 <HAL_SPI_Transmit+0x280>
 8007d52:	9b01      	ldr	r3, [sp, #4]
 8007d54:	6822      	ldr	r2, [r4, #0]
 8007d56:	3b01      	subs	r3, #1
 8007d58:	9301      	str	r3, [sp, #4]
 8007d5a:	6893      	ldr	r3, [r2, #8]
 8007d5c:	061b      	lsls	r3, r3, #24
 8007d5e:	d502      	bpl.n	8007d66 <HAL_SPI_Transmit+0x106>
 8007d60:	9b01      	ldr	r3, [sp, #4]
 8007d62:	2b00      	cmp	r3, #0
 8007d64:	d1f5      	bne.n	8007d52 <HAL_SPI_Transmit+0xf2>
 8007d66:	68a3      	ldr	r3, [r4, #8]
 8007d68:	b933      	cbnz	r3, 8007d78 <HAL_SPI_Transmit+0x118>
 8007d6a:	6822      	ldr	r2, [r4, #0]
 8007d6c:	9300      	str	r3, [sp, #0]
 8007d6e:	68d3      	ldr	r3, [r2, #12]
 8007d70:	9300      	str	r3, [sp, #0]
 8007d72:	6893      	ldr	r3, [r2, #8]
 8007d74:	9300      	str	r3, [sp, #0]
 8007d76:	9b00      	ldr	r3, [sp, #0]
 8007d78:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007d7a:	3800      	subs	r0, #0
 8007d7c:	bf18      	it	ne
 8007d7e:	2001      	movne	r0, #1
 8007d80:	e786      	b.n	8007c90 <HAL_SPI_Transmit+0x30>
 8007d82:	2002      	movs	r0, #2
 8007d84:	b002      	add	sp, #8
 8007d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d8a:	461a      	mov	r2, r3
 8007d8c:	2b00      	cmp	r3, #0
 8007d8e:	d174      	bne.n	8007e7a <HAL_SPI_Transmit+0x21a>
 8007d90:	4641      	mov	r1, r8
 8007d92:	f831 7b02 	ldrh.w	r7, [r1], #2
 8007d96:	60c7      	str	r7, [r0, #12]
 8007d98:	6321      	str	r1, [r4, #48]	; 0x30
 8007d9a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007d9c:	3901      	subs	r1, #1
 8007d9e:	b289      	uxth	r1, r1
 8007da0:	86e1      	strh	r1, [r4, #54]	; 0x36
 8007da2:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007da4:	b289      	uxth	r1, r1
 8007da6:	2900      	cmp	r1, #0
 8007da8:	d0c3      	beq.n	8007d32 <HAL_SPI_Transmit+0xd2>
 8007daa:	2d00      	cmp	r5, #0
 8007dac:	f000 808b 	beq.w	8007ec6 <HAL_SPI_Transmit+0x266>
 8007db0:	1c69      	adds	r1, r5, #1
 8007db2:	d158      	bne.n	8007e66 <HAL_SPI_Transmit+0x206>
 8007db4:	6883      	ldr	r3, [r0, #8]
 8007db6:	079a      	lsls	r2, r3, #30
 8007db8:	f140 8089 	bpl.w	8007ece <HAL_SPI_Transmit+0x26e>
 8007dbc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007dbe:	f832 3b02 	ldrh.w	r3, [r2], #2
 8007dc2:	60c3      	str	r3, [r0, #12]
 8007dc4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dc6:	6322      	str	r2, [r4, #48]	; 0x30
 8007dc8:	3b01      	subs	r3, #1
 8007dca:	b29b      	uxth	r3, r3
 8007dcc:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007dce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dd0:	b29b      	uxth	r3, r3
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d1ee      	bne.n	8007db4 <HAL_SPI_Transmit+0x154>
 8007dd6:	6863      	ldr	r3, [r4, #4]
 8007dd8:	461a      	mov	r2, r3
 8007dda:	e7aa      	b.n	8007d32 <HAL_SPI_Transmit+0xd2>
 8007ddc:	6803      	ldr	r3, [r0, #0]
 8007dde:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007de2:	6003      	str	r3, [r0, #0]
 8007de4:	6803      	ldr	r3, [r0, #0]
 8007de6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007dea:	6003      	str	r3, [r0, #0]
 8007dec:	e773      	b.n	8007cd6 <HAL_SPI_Transmit+0x76>
 8007dee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007df0:	7812      	ldrb	r2, [r2, #0]
 8007df2:	731a      	strb	r2, [r3, #12]
 8007df4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007df6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007df8:	3b01      	subs	r3, #1
 8007dfa:	3201      	adds	r2, #1
 8007dfc:	b29b      	uxth	r3, r3
 8007dfe:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007e00:	6322      	str	r2, [r4, #48]	; 0x30
 8007e02:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e04:	b29b      	uxth	r3, r3
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	d092      	beq.n	8007d30 <HAL_SPI_Transmit+0xd0>
 8007e0a:	6823      	ldr	r3, [r4, #0]
 8007e0c:	689a      	ldr	r2, [r3, #8]
 8007e0e:	0791      	lsls	r1, r2, #30
 8007e10:	d4ed      	bmi.n	8007dee <HAL_SPI_Transmit+0x18e>
 8007e12:	f7fd fb4b 	bl	80054ac <HAL_GetTick>
 8007e16:	1b83      	subs	r3, r0, r6
 8007e18:	429d      	cmp	r5, r3
 8007e1a:	d8f2      	bhi.n	8007e02 <HAL_SPI_Transmit+0x1a2>
 8007e1c:	2003      	movs	r0, #3
 8007e1e:	e737      	b.n	8007c90 <HAL_SPI_Transmit+0x30>
 8007e20:	f898 3000 	ldrb.w	r3, [r8]
 8007e24:	7303      	strb	r3, [r0, #12]
 8007e26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e28:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e2a:	3b01      	subs	r3, #1
 8007e2c:	3201      	adds	r2, #1
 8007e2e:	b29b      	uxth	r3, r3
 8007e30:	6322      	str	r2, [r4, #48]	; 0x30
 8007e32:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007e34:	e761      	b.n	8007cfa <HAL_SPI_Transmit+0x9a>
 8007e36:	f7fd fb39 	bl	80054ac <HAL_GetTick>
 8007e3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e3c:	b29b      	uxth	r3, r3
 8007e3e:	2b00      	cmp	r3, #0
 8007e40:	f47f af63 	bne.w	8007d0a <HAL_SPI_Transmit+0xaa>
 8007e44:	e774      	b.n	8007d30 <HAL_SPI_Transmit+0xd0>
 8007e46:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e48:	f832 3b02 	ldrh.w	r3, [r2], #2
 8007e4c:	f8cc 300c 	str.w	r3, [ip, #12]
 8007e50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e52:	6322      	str	r2, [r4, #48]	; 0x30
 8007e54:	3b01      	subs	r3, #1
 8007e56:	b29b      	uxth	r3, r3
 8007e58:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007e5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e5c:	b29b      	uxth	r3, r3
 8007e5e:	2b00      	cmp	r3, #0
 8007e60:	d0b9      	beq.n	8007dd6 <HAL_SPI_Transmit+0x176>
 8007e62:	f8d4 c000 	ldr.w	ip, [r4]
 8007e66:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8007e6a:	079b      	lsls	r3, r3, #30
 8007e6c:	d4eb      	bmi.n	8007e46 <HAL_SPI_Transmit+0x1e6>
 8007e6e:	f7fd fb1d 	bl	80054ac <HAL_GetTick>
 8007e72:	1b83      	subs	r3, r0, r6
 8007e74:	429d      	cmp	r5, r3
 8007e76:	d9d1      	bls.n	8007e1c <HAL_SPI_Transmit+0x1bc>
 8007e78:	e7ef      	b.n	8007e5a <HAL_SPI_Transmit+0x1fa>
 8007e7a:	2f01      	cmp	r7, #1
 8007e7c:	d191      	bne.n	8007da2 <HAL_SPI_Transmit+0x142>
 8007e7e:	e787      	b.n	8007d90 <HAL_SPI_Transmit+0x130>
 8007e80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e82:	7812      	ldrb	r2, [r2, #0]
 8007e84:	731a      	strb	r2, [r3, #12]
 8007e86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e88:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e8a:	3b01      	subs	r3, #1
 8007e8c:	b29b      	uxth	r3, r3
 8007e8e:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007e90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e92:	3201      	adds	r2, #1
 8007e94:	b29b      	uxth	r3, r3
 8007e96:	6322      	str	r2, [r4, #48]	; 0x30
 8007e98:	2b00      	cmp	r3, #0
 8007e9a:	f43f af49 	beq.w	8007d30 <HAL_SPI_Transmit+0xd0>
 8007e9e:	6823      	ldr	r3, [r4, #0]
 8007ea0:	689a      	ldr	r2, [r3, #8]
 8007ea2:	0792      	lsls	r2, r2, #30
 8007ea4:	d4ec      	bmi.n	8007e80 <HAL_SPI_Transmit+0x220>
 8007ea6:	f7fd fb01 	bl	80054ac <HAL_GetTick>
 8007eaa:	e7b7      	b.n	8007e1c <HAL_SPI_Transmit+0x1bc>
 8007eac:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007eae:	f831 2b02 	ldrh.w	r2, [r1], #2
 8007eb2:	60c2      	str	r2, [r0, #12]
 8007eb4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007eb6:	6321      	str	r1, [r4, #48]	; 0x30
 8007eb8:	3a01      	subs	r2, #1
 8007eba:	b292      	uxth	r2, r2
 8007ebc:	86e2      	strh	r2, [r4, #54]	; 0x36
 8007ebe:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007ec0:	b292      	uxth	r2, r2
 8007ec2:	2a00      	cmp	r2, #0
 8007ec4:	d088      	beq.n	8007dd8 <HAL_SPI_Transmit+0x178>
 8007ec6:	6882      	ldr	r2, [r0, #8]
 8007ec8:	0797      	lsls	r7, r2, #30
 8007eca:	d5ec      	bpl.n	8007ea6 <HAL_SPI_Transmit+0x246>
 8007ecc:	e7ee      	b.n	8007eac <HAL_SPI_Transmit+0x24c>
 8007ece:	f7fd faed 	bl	80054ac <HAL_GetTick>
 8007ed2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ed4:	b29b      	uxth	r3, r3
 8007ed6:	2b00      	cmp	r3, #0
 8007ed8:	f43f af7d 	beq.w	8007dd6 <HAL_SPI_Transmit+0x176>
 8007edc:	6820      	ldr	r0, [r4, #0]
 8007ede:	e769      	b.n	8007db4 <HAL_SPI_Transmit+0x154>
 8007ee0:	4633      	mov	r3, r6
 8007ee2:	462a      	mov	r2, r5
 8007ee4:	2180      	movs	r1, #128	; 0x80
 8007ee6:	4620      	mov	r0, r4
 8007ee8:	f7ff fe04 	bl	8007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007eec:	2800      	cmp	r0, #0
 8007eee:	f43f af3a 	beq.w	8007d66 <HAL_SPI_Transmit+0x106>
 8007ef2:	2220      	movs	r2, #32
 8007ef4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007ef6:	4313      	orrs	r3, r2
 8007ef8:	6563      	str	r3, [r4, #84]	; 0x54
 8007efa:	6562      	str	r2, [r4, #84]	; 0x54
 8007efc:	e733      	b.n	8007d66 <HAL_SPI_Transmit+0x106>
 8007efe:	bf00      	nop
 8007f00:	20000020 	.word	0x20000020
 8007f04:	165e9f81 	.word	0x165e9f81

08007f08 <HAL_SPI_TransmitReceive>:
 8007f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f0c:	4604      	mov	r4, r0
 8007f0e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 8007f12:	b082      	sub	sp, #8
 8007f14:	2801      	cmp	r0, #1
 8007f16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f18:	f000 8089 	beq.w	800802e <HAL_SPI_TransmitReceive+0x126>
 8007f1c:	4698      	mov	r8, r3
 8007f1e:	2301      	movs	r3, #1
 8007f20:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007f24:	468a      	mov	sl, r1
 8007f26:	4691      	mov	r9, r2
 8007f28:	f7fd fac0 	bl	80054ac <HAL_GetTick>
 8007f2c:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
 8007f30:	4606      	mov	r6, r0
 8007f32:	2f01      	cmp	r7, #1
 8007f34:	6863      	ldr	r3, [r4, #4]
 8007f36:	b2f9      	uxtb	r1, r7
 8007f38:	d011      	beq.n	8007f5e <HAL_SPI_TransmitReceive+0x56>
 8007f3a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f3e:	d009      	beq.n	8007f54 <HAL_SPI_TransmitReceive+0x4c>
 8007f40:	2002      	movs	r0, #2
 8007f42:	2201      	movs	r2, #1
 8007f44:	2300      	movs	r3, #0
 8007f46:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8007f4a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007f4e:	b002      	add	sp, #8
 8007f50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f54:	68a2      	ldr	r2, [r4, #8]
 8007f56:	2a00      	cmp	r2, #0
 8007f58:	d1f2      	bne.n	8007f40 <HAL_SPI_TransmitReceive+0x38>
 8007f5a:	2904      	cmp	r1, #4
 8007f5c:	d1f0      	bne.n	8007f40 <HAL_SPI_TransmitReceive+0x38>
 8007f5e:	f1ba 0f00 	cmp.w	sl, #0
 8007f62:	d068      	beq.n	8008036 <HAL_SPI_TransmitReceive+0x12e>
 8007f64:	f1b9 0f00 	cmp.w	r9, #0
 8007f68:	d065      	beq.n	8008036 <HAL_SPI_TransmitReceive+0x12e>
 8007f6a:	f1b8 0f00 	cmp.w	r8, #0
 8007f6e:	d062      	beq.n	8008036 <HAL_SPI_TransmitReceive+0x12e>
 8007f70:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8007f74:	6820      	ldr	r0, [r4, #0]
 8007f76:	2a04      	cmp	r2, #4
 8007f78:	bf1c      	itt	ne
 8007f7a:	2205      	movne	r2, #5
 8007f7c:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
 8007f80:	2200      	movs	r2, #0
 8007f82:	6562      	str	r2, [r4, #84]	; 0x54
 8007f84:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 8007f88:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
 8007f8c:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
 8007f90:	6802      	ldr	r2, [r0, #0]
 8007f92:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 8007f96:	0651      	lsls	r1, r2, #25
 8007f98:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8007f9c:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8007fa0:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
 8007fa4:	d403      	bmi.n	8007fae <HAL_SPI_TransmitReceive+0xa6>
 8007fa6:	6802      	ldr	r2, [r0, #0]
 8007fa8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007fac:	6002      	str	r2, [r0, #0]
 8007fae:	68e2      	ldr	r2, [r4, #12]
 8007fb0:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8007fb4:	d04f      	beq.n	8008056 <HAL_SPI_TransmitReceive+0x14e>
 8007fb6:	2b00      	cmp	r3, #0
 8007fb8:	d03f      	beq.n	800803a <HAL_SPI_TransmitReceive+0x132>
 8007fba:	f1b8 0f01 	cmp.w	r8, #1
 8007fbe:	d03c      	beq.n	800803a <HAL_SPI_TransmitReceive+0x132>
 8007fc0:	2701      	movs	r7, #1
 8007fc2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fc4:	b29b      	uxth	r3, r3
 8007fc6:	b91b      	cbnz	r3, 8007fd0 <HAL_SPI_TransmitReceive+0xc8>
 8007fc8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fca:	b29b      	uxth	r3, r3
 8007fcc:	2b00      	cmp	r3, #0
 8007fce:	d07f      	beq.n	80080d0 <HAL_SPI_TransmitReceive+0x1c8>
 8007fd0:	6822      	ldr	r2, [r4, #0]
 8007fd2:	6893      	ldr	r3, [r2, #8]
 8007fd4:	0799      	lsls	r1, r3, #30
 8007fd6:	d50f      	bpl.n	8007ff8 <HAL_SPI_TransmitReceive+0xf0>
 8007fd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fda:	b29b      	uxth	r3, r3
 8007fdc:	b163      	cbz	r3, 8007ff8 <HAL_SPI_TransmitReceive+0xf0>
 8007fde:	b15f      	cbz	r7, 8007ff8 <HAL_SPI_TransmitReceive+0xf0>
 8007fe0:	2700      	movs	r7, #0
 8007fe2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fe4:	781b      	ldrb	r3, [r3, #0]
 8007fe6:	7313      	strb	r3, [r2, #12]
 8007fe8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fea:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007fec:	3b01      	subs	r3, #1
 8007fee:	3201      	adds	r2, #1
 8007ff0:	6322      	str	r2, [r4, #48]	; 0x30
 8007ff2:	b29b      	uxth	r3, r3
 8007ff4:	6822      	ldr	r2, [r4, #0]
 8007ff6:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007ff8:	6893      	ldr	r3, [r2, #8]
 8007ffa:	f013 0301 	ands.w	r3, r3, #1
 8007ffe:	d00d      	beq.n	800801c <HAL_SPI_TransmitReceive+0x114>
 8008000:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008002:	b289      	uxth	r1, r1
 8008004:	b151      	cbz	r1, 800801c <HAL_SPI_TransmitReceive+0x114>
 8008006:	68d2      	ldr	r2, [r2, #12]
 8008008:	461f      	mov	r7, r3
 800800a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800800c:	701a      	strb	r2, [r3, #0]
 800800e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008010:	3301      	adds	r3, #1
 8008012:	63a3      	str	r3, [r4, #56]	; 0x38
 8008014:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008016:	3b01      	subs	r3, #1
 8008018:	b29b      	uxth	r3, r3
 800801a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800801c:	f7fd fa46 	bl	80054ac <HAL_GetTick>
 8008020:	1b80      	subs	r0, r0, r6
 8008022:	42a8      	cmp	r0, r5
 8008024:	d314      	bcc.n	8008050 <HAL_SPI_TransmitReceive+0x148>
 8008026:	1c6a      	adds	r2, r5, #1
 8008028:	d0cb      	beq.n	8007fc2 <HAL_SPI_TransmitReceive+0xba>
 800802a:	2003      	movs	r0, #3
 800802c:	e789      	b.n	8007f42 <HAL_SPI_TransmitReceive+0x3a>
 800802e:	2002      	movs	r0, #2
 8008030:	b002      	add	sp, #8
 8008032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008036:	2001      	movs	r0, #1
 8008038:	e783      	b.n	8007f42 <HAL_SPI_TransmitReceive+0x3a>
 800803a:	f89a 3000 	ldrb.w	r3, [sl]
 800803e:	7303      	strb	r3, [r0, #12]
 8008040:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008042:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008044:	3b01      	subs	r3, #1
 8008046:	3201      	adds	r2, #1
 8008048:	b29b      	uxth	r3, r3
 800804a:	6322      	str	r2, [r4, #48]	; 0x30
 800804c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800804e:	e7b7      	b.n	8007fc0 <HAL_SPI_TransmitReceive+0xb8>
 8008050:	2d00      	cmp	r5, #0
 8008052:	d1b6      	bne.n	8007fc2 <HAL_SPI_TransmitReceive+0xba>
 8008054:	e7e9      	b.n	800802a <HAL_SPI_TransmitReceive+0x122>
 8008056:	2b00      	cmp	r3, #0
 8008058:	d16c      	bne.n	8008134 <HAL_SPI_TransmitReceive+0x22c>
 800805a:	4651      	mov	r1, sl
 800805c:	f831 3b02 	ldrh.w	r3, [r1], #2
 8008060:	60c3      	str	r3, [r0, #12]
 8008062:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008064:	6321      	str	r1, [r4, #48]	; 0x30
 8008066:	3b01      	subs	r3, #1
 8008068:	b29b      	uxth	r3, r3
 800806a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800806c:	1c6a      	adds	r2, r5, #1
 800806e:	f04f 0701 	mov.w	r7, #1
 8008072:	d025      	beq.n	80080c0 <HAL_SPI_TransmitReceive+0x1b8>
 8008074:	e062      	b.n	800813c <HAL_SPI_TransmitReceive+0x234>
 8008076:	6822      	ldr	r2, [r4, #0]
 8008078:	6893      	ldr	r3, [r2, #8]
 800807a:	079b      	lsls	r3, r3, #30
 800807c:	d50d      	bpl.n	800809a <HAL_SPI_TransmitReceive+0x192>
 800807e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008080:	b29b      	uxth	r3, r3
 8008082:	b153      	cbz	r3, 800809a <HAL_SPI_TransmitReceive+0x192>
 8008084:	b14f      	cbz	r7, 800809a <HAL_SPI_TransmitReceive+0x192>
 8008086:	2700      	movs	r7, #0
 8008088:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800808a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800808e:	60d3      	str	r3, [r2, #12]
 8008090:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008092:	6321      	str	r1, [r4, #48]	; 0x30
 8008094:	3b01      	subs	r3, #1
 8008096:	b29b      	uxth	r3, r3
 8008098:	86e3      	strh	r3, [r4, #54]	; 0x36
 800809a:	6893      	ldr	r3, [r2, #8]
 800809c:	f013 0301 	ands.w	r3, r3, #1
 80080a0:	d00c      	beq.n	80080bc <HAL_SPI_TransmitReceive+0x1b4>
 80080a2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80080a4:	b289      	uxth	r1, r1
 80080a6:	b149      	cbz	r1, 80080bc <HAL_SPI_TransmitReceive+0x1b4>
 80080a8:	461f      	mov	r7, r3
 80080aa:	68d3      	ldr	r3, [r2, #12]
 80080ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80080ae:	f822 3b02 	strh.w	r3, [r2], #2
 80080b2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080b4:	63a2      	str	r2, [r4, #56]	; 0x38
 80080b6:	3b01      	subs	r3, #1
 80080b8:	b29b      	uxth	r3, r3
 80080ba:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80080bc:	f7fd f9f6 	bl	80054ac <HAL_GetTick>
 80080c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80080c2:	b29b      	uxth	r3, r3
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	d1d6      	bne.n	8008076 <HAL_SPI_TransmitReceive+0x16e>
 80080c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080ca:	b29b      	uxth	r3, r3
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d1d2      	bne.n	8008076 <HAL_SPI_TransmitReceive+0x16e>
 80080d0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80080d4:	4b32      	ldr	r3, [pc, #200]	; (80081a0 <HAL_SPI_TransmitReceive+0x298>)
 80080d6:	4a33      	ldr	r2, [pc, #204]	; (80081a4 <HAL_SPI_TransmitReceive+0x29c>)
 80080d8:	681b      	ldr	r3, [r3, #0]
 80080da:	fba2 2303 	umull	r2, r3, r2, r3
 80080de:	0d5b      	lsrs	r3, r3, #21
 80080e0:	fb01 f303 	mul.w	r3, r1, r3
 80080e4:	6862      	ldr	r2, [r4, #4]
 80080e6:	9301      	str	r3, [sp, #4]
 80080e8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80080ec:	d114      	bne.n	8008118 <HAL_SPI_TransmitReceive+0x210>
 80080ee:	4633      	mov	r3, r6
 80080f0:	462a      	mov	r2, r5
 80080f2:	2180      	movs	r1, #128	; 0x80
 80080f4:	4620      	mov	r0, r4
 80080f6:	f7ff fcfd 	bl	8007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80080fa:	b180      	cbz	r0, 800811e <HAL_SPI_TransmitReceive+0x216>
 80080fc:	2220      	movs	r2, #32
 80080fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008100:	2001      	movs	r0, #1
 8008102:	4313      	orrs	r3, r2
 8008104:	6563      	str	r3, [r4, #84]	; 0x54
 8008106:	6562      	str	r2, [r4, #84]	; 0x54
 8008108:	e71b      	b.n	8007f42 <HAL_SPI_TransmitReceive+0x3a>
 800810a:	9b01      	ldr	r3, [sp, #4]
 800810c:	6822      	ldr	r2, [r4, #0]
 800810e:	3b01      	subs	r3, #1
 8008110:	9301      	str	r3, [sp, #4]
 8008112:	6893      	ldr	r3, [r2, #8]
 8008114:	061b      	lsls	r3, r3, #24
 8008116:	d502      	bpl.n	800811e <HAL_SPI_TransmitReceive+0x216>
 8008118:	9b01      	ldr	r3, [sp, #4]
 800811a:	2b00      	cmp	r3, #0
 800811c:	d1f5      	bne.n	800810a <HAL_SPI_TransmitReceive+0x202>
 800811e:	68a0      	ldr	r0, [r4, #8]
 8008120:	2800      	cmp	r0, #0
 8008122:	d13b      	bne.n	800819c <HAL_SPI_TransmitReceive+0x294>
 8008124:	6823      	ldr	r3, [r4, #0]
 8008126:	9000      	str	r0, [sp, #0]
 8008128:	68da      	ldr	r2, [r3, #12]
 800812a:	9200      	str	r2, [sp, #0]
 800812c:	689b      	ldr	r3, [r3, #8]
 800812e:	9300      	str	r3, [sp, #0]
 8008130:	9b00      	ldr	r3, [sp, #0]
 8008132:	e706      	b.n	8007f42 <HAL_SPI_TransmitReceive+0x3a>
 8008134:	f1b8 0f01 	cmp.w	r8, #1
 8008138:	d198      	bne.n	800806c <HAL_SPI_TransmitReceive+0x164>
 800813a:	e78e      	b.n	800805a <HAL_SPI_TransmitReceive+0x152>
 800813c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800813e:	b29b      	uxth	r3, r3
 8008140:	b91b      	cbnz	r3, 800814a <HAL_SPI_TransmitReceive+0x242>
 8008142:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008144:	b29b      	uxth	r3, r3
 8008146:	2b00      	cmp	r3, #0
 8008148:	d0c2      	beq.n	80080d0 <HAL_SPI_TransmitReceive+0x1c8>
 800814a:	6822      	ldr	r2, [r4, #0]
 800814c:	6893      	ldr	r3, [r2, #8]
 800814e:	0798      	lsls	r0, r3, #30
 8008150:	d50d      	bpl.n	800816e <HAL_SPI_TransmitReceive+0x266>
 8008152:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008154:	b29b      	uxth	r3, r3
 8008156:	b153      	cbz	r3, 800816e <HAL_SPI_TransmitReceive+0x266>
 8008158:	b14f      	cbz	r7, 800816e <HAL_SPI_TransmitReceive+0x266>
 800815a:	2700      	movs	r7, #0
 800815c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800815e:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008162:	60d1      	str	r1, [r2, #12]
 8008164:	6323      	str	r3, [r4, #48]	; 0x30
 8008166:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008168:	3b01      	subs	r3, #1
 800816a:	b29b      	uxth	r3, r3
 800816c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800816e:	6893      	ldr	r3, [r2, #8]
 8008170:	f013 0301 	ands.w	r3, r3, #1
 8008174:	d00c      	beq.n	8008190 <HAL_SPI_TransmitReceive+0x288>
 8008176:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008178:	b289      	uxth	r1, r1
 800817a:	b149      	cbz	r1, 8008190 <HAL_SPI_TransmitReceive+0x288>
 800817c:	461f      	mov	r7, r3
 800817e:	68d3      	ldr	r3, [r2, #12]
 8008180:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008182:	f822 3b02 	strh.w	r3, [r2], #2
 8008186:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008188:	63a2      	str	r2, [r4, #56]	; 0x38
 800818a:	3b01      	subs	r3, #1
 800818c:	b29b      	uxth	r3, r3
 800818e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008190:	f7fd f98c 	bl	80054ac <HAL_GetTick>
 8008194:	1b80      	subs	r0, r0, r6
 8008196:	42a8      	cmp	r0, r5
 8008198:	d3d0      	bcc.n	800813c <HAL_SPI_TransmitReceive+0x234>
 800819a:	e746      	b.n	800802a <HAL_SPI_TransmitReceive+0x122>
 800819c:	2000      	movs	r0, #0
 800819e:	e6d0      	b.n	8007f42 <HAL_SPI_TransmitReceive+0x3a>
 80081a0:	20000020 	.word	0x20000020
 80081a4:	165e9f81 	.word	0x165e9f81

080081a8 <HAL_SPI_Receive>:
 80081a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081ac:	6846      	ldr	r6, [r0, #4]
 80081ae:	4604      	mov	r4, r0
 80081b0:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
 80081b4:	4690      	mov	r8, r2
 80081b6:	461d      	mov	r5, r3
 80081b8:	460f      	mov	r7, r1
 80081ba:	b082      	sub	sp, #8
 80081bc:	d071      	beq.n	80082a2 <HAL_SPI_Receive+0xfa>
 80081be:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 80081c2:	2b01      	cmp	r3, #1
 80081c4:	d079      	beq.n	80082ba <HAL_SPI_Receive+0x112>
 80081c6:	2301      	movs	r3, #1
 80081c8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80081cc:	f7fd f96e 	bl	80054ac <HAL_GetTick>
 80081d0:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 80081d4:	4606      	mov	r6, r0
 80081d6:	f1bc 0f01 	cmp.w	ip, #1
 80081da:	fa5f f08c 	uxtb.w	r0, ip
 80081de:	d009      	beq.n	80081f4 <HAL_SPI_Receive+0x4c>
 80081e0:	2002      	movs	r0, #2
 80081e2:	2201      	movs	r2, #1
 80081e4:	2300      	movs	r3, #0
 80081e6:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 80081ea:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80081ee:	b002      	add	sp, #8
 80081f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081f4:	2f00      	cmp	r7, #0
 80081f6:	d0f4      	beq.n	80081e2 <HAL_SPI_Receive+0x3a>
 80081f8:	f1b8 0f00 	cmp.w	r8, #0
 80081fc:	d0f1      	beq.n	80081e2 <HAL_SPI_Receive+0x3a>
 80081fe:	2300      	movs	r3, #0
 8008200:	2104      	movs	r1, #4
 8008202:	68a2      	ldr	r2, [r4, #8]
 8008204:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
 8008208:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800820c:	6822      	ldr	r2, [r4, #0]
 800820e:	6563      	str	r3, [r4, #84]	; 0x54
 8008210:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8008214:	6323      	str	r3, [r4, #48]	; 0x30
 8008216:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 800821a:	86a3      	strh	r3, [r4, #52]	; 0x34
 800821c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800821e:	63a7      	str	r7, [r4, #56]	; 0x38
 8008220:	4613      	mov	r3, r2
 8008222:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8008226:	d107      	bne.n	8008238 <HAL_SPI_Receive+0x90>
 8008228:	6811      	ldr	r1, [r2, #0]
 800822a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800822e:	6011      	str	r1, [r2, #0]
 8008230:	6811      	ldr	r1, [r2, #0]
 8008232:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008236:	6011      	str	r1, [r2, #0]
 8008238:	6811      	ldr	r1, [r2, #0]
 800823a:	064f      	lsls	r7, r1, #25
 800823c:	d403      	bmi.n	8008246 <HAL_SPI_Receive+0x9e>
 800823e:	6811      	ldr	r1, [r2, #0]
 8008240:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8008244:	6011      	str	r1, [r2, #0]
 8008246:	68e1      	ldr	r1, [r4, #12]
 8008248:	2900      	cmp	r1, #0
 800824a:	d05a      	beq.n	8008302 <HAL_SPI_Receive+0x15a>
 800824c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800824e:	b289      	uxth	r1, r1
 8008250:	b1a1      	cbz	r1, 800827c <HAL_SPI_Receive+0xd4>
 8008252:	2d00      	cmp	r5, #0
 8008254:	f000 80b3 	beq.w	80083be <HAL_SPI_Receive+0x216>
 8008258:	1c68      	adds	r0, r5, #1
 800825a:	d140      	bne.n	80082de <HAL_SPI_Receive+0x136>
 800825c:	6893      	ldr	r3, [r2, #8]
 800825e:	07d9      	lsls	r1, r3, #31
 8008260:	d547      	bpl.n	80082f2 <HAL_SPI_Receive+0x14a>
 8008262:	68d1      	ldr	r1, [r2, #12]
 8008264:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008266:	f823 1b02 	strh.w	r1, [r3], #2
 800826a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800826c:	63a3      	str	r3, [r4, #56]	; 0x38
 800826e:	3901      	subs	r1, #1
 8008270:	b289      	uxth	r1, r1
 8008272:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008274:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008276:	b29b      	uxth	r3, r3
 8008278:	2b00      	cmp	r3, #0
 800827a:	d1ef      	bne.n	800825c <HAL_SPI_Receive+0xb4>
 800827c:	6863      	ldr	r3, [r4, #4]
 800827e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008282:	f000 80a0 	beq.w	80083c6 <HAL_SPI_Receive+0x21e>
 8008286:	4633      	mov	r3, r6
 8008288:	462a      	mov	r2, r5
 800828a:	2101      	movs	r1, #1
 800828c:	4620      	mov	r0, r4
 800828e:	f7ff fc31 	bl	8007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008292:	2800      	cmp	r0, #0
 8008294:	f040 80a7 	bne.w	80083e6 <HAL_SPI_Receive+0x23e>
 8008298:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800829a:	3800      	subs	r0, #0
 800829c:	bf18      	it	ne
 800829e:	2001      	movne	r0, #1
 80082a0:	e79f      	b.n	80081e2 <HAL_SPI_Receive+0x3a>
 80082a2:	6883      	ldr	r3, [r0, #8]
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	d18a      	bne.n	80081be <HAL_SPI_Receive+0x16>
 80082a8:	9500      	str	r5, [sp, #0]
 80082aa:	2504      	movs	r5, #4
 80082ac:	4613      	mov	r3, r2
 80082ae:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
 80082b2:	460a      	mov	r2, r1
 80082b4:	f7ff fe28 	bl	8007f08 <HAL_SPI_TransmitReceive>
 80082b8:	e799      	b.n	80081ee <HAL_SPI_Receive+0x46>
 80082ba:	2002      	movs	r0, #2
 80082bc:	b002      	add	sp, #8
 80082be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80082c2:	68db      	ldr	r3, [r3, #12]
 80082c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80082c6:	f822 3b02 	strh.w	r3, [r2], #2
 80082ca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80082cc:	63a2      	str	r2, [r4, #56]	; 0x38
 80082ce:	3b01      	subs	r3, #1
 80082d0:	b29b      	uxth	r3, r3
 80082d2:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80082d4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80082d6:	b29b      	uxth	r3, r3
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d0cf      	beq.n	800827c <HAL_SPI_Receive+0xd4>
 80082dc:	6823      	ldr	r3, [r4, #0]
 80082de:	689a      	ldr	r2, [r3, #8]
 80082e0:	07d2      	lsls	r2, r2, #31
 80082e2:	d4ee      	bmi.n	80082c2 <HAL_SPI_Receive+0x11a>
 80082e4:	f7fd f8e2 	bl	80054ac <HAL_GetTick>
 80082e8:	1b83      	subs	r3, r0, r6
 80082ea:	429d      	cmp	r5, r3
 80082ec:	d8f2      	bhi.n	80082d4 <HAL_SPI_Receive+0x12c>
 80082ee:	2003      	movs	r0, #3
 80082f0:	e777      	b.n	80081e2 <HAL_SPI_Receive+0x3a>
 80082f2:	f7fd f8db 	bl	80054ac <HAL_GetTick>
 80082f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80082f8:	b29b      	uxth	r3, r3
 80082fa:	2b00      	cmp	r3, #0
 80082fc:	d0be      	beq.n	800827c <HAL_SPI_Receive+0xd4>
 80082fe:	6822      	ldr	r2, [r4, #0]
 8008300:	e7ac      	b.n	800825c <HAL_SPI_Receive+0xb4>
 8008302:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8008304:	b292      	uxth	r2, r2
 8008306:	2a00      	cmp	r2, #0
 8008308:	d0b8      	beq.n	800827c <HAL_SPI_Receive+0xd4>
 800830a:	2d00      	cmp	r5, #0
 800830c:	d043      	beq.n	8008396 <HAL_SPI_Receive+0x1ee>
 800830e:	1c6f      	adds	r7, r5, #1
 8008310:	d00f      	beq.n	8008332 <HAL_SPI_Receive+0x18a>
 8008312:	e027      	b.n	8008364 <HAL_SPI_Receive+0x1bc>
 8008314:	7b1a      	ldrb	r2, [r3, #12]
 8008316:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008318:	701a      	strb	r2, [r3, #0]
 800831a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800831c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800831e:	3901      	subs	r1, #1
 8008320:	b289      	uxth	r1, r1
 8008322:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008324:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008326:	3201      	adds	r2, #1
 8008328:	b29b      	uxth	r3, r3
 800832a:	63a2      	str	r2, [r4, #56]	; 0x38
 800832c:	2b00      	cmp	r3, #0
 800832e:	d0a5      	beq.n	800827c <HAL_SPI_Receive+0xd4>
 8008330:	6823      	ldr	r3, [r4, #0]
 8008332:	689a      	ldr	r2, [r3, #8]
 8008334:	07d0      	lsls	r0, r2, #31
 8008336:	d4ed      	bmi.n	8008314 <HAL_SPI_Receive+0x16c>
 8008338:	f7fd f8b8 	bl	80054ac <HAL_GetTick>
 800833c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800833e:	b29b      	uxth	r3, r3
 8008340:	2b00      	cmp	r3, #0
 8008342:	d1f5      	bne.n	8008330 <HAL_SPI_Receive+0x188>
 8008344:	e79a      	b.n	800827c <HAL_SPI_Receive+0xd4>
 8008346:	7b1a      	ldrb	r2, [r3, #12]
 8008348:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800834a:	701a      	strb	r2, [r3, #0]
 800834c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800834e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008350:	3b01      	subs	r3, #1
 8008352:	3201      	adds	r2, #1
 8008354:	b29b      	uxth	r3, r3
 8008356:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008358:	63a2      	str	r2, [r4, #56]	; 0x38
 800835a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800835c:	b29b      	uxth	r3, r3
 800835e:	2b00      	cmp	r3, #0
 8008360:	d08c      	beq.n	800827c <HAL_SPI_Receive+0xd4>
 8008362:	6823      	ldr	r3, [r4, #0]
 8008364:	689a      	ldr	r2, [r3, #8]
 8008366:	07d1      	lsls	r1, r2, #31
 8008368:	d4ed      	bmi.n	8008346 <HAL_SPI_Receive+0x19e>
 800836a:	f7fd f89f 	bl	80054ac <HAL_GetTick>
 800836e:	1b83      	subs	r3, r0, r6
 8008370:	429d      	cmp	r5, r3
 8008372:	d9bc      	bls.n	80082ee <HAL_SPI_Receive+0x146>
 8008374:	e7f1      	b.n	800835a <HAL_SPI_Receive+0x1b2>
 8008376:	7b1a      	ldrb	r2, [r3, #12]
 8008378:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800837a:	701a      	strb	r2, [r3, #0]
 800837c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800837e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008380:	3b01      	subs	r3, #1
 8008382:	b29b      	uxth	r3, r3
 8008384:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008386:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008388:	3201      	adds	r2, #1
 800838a:	b29b      	uxth	r3, r3
 800838c:	63a2      	str	r2, [r4, #56]	; 0x38
 800838e:	2b00      	cmp	r3, #0
 8008390:	f43f af74 	beq.w	800827c <HAL_SPI_Receive+0xd4>
 8008394:	6823      	ldr	r3, [r4, #0]
 8008396:	689a      	ldr	r2, [r3, #8]
 8008398:	07d2      	lsls	r2, r2, #31
 800839a:	d4ec      	bmi.n	8008376 <HAL_SPI_Receive+0x1ce>
 800839c:	f7fd f886 	bl	80054ac <HAL_GetTick>
 80083a0:	e7a5      	b.n	80082ee <HAL_SPI_Receive+0x146>
 80083a2:	68d3      	ldr	r3, [r2, #12]
 80083a4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80083a6:	f821 3b02 	strh.w	r3, [r1], #2
 80083aa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083ac:	63a1      	str	r1, [r4, #56]	; 0x38
 80083ae:	3b01      	subs	r3, #1
 80083b0:	b29b      	uxth	r3, r3
 80083b2:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80083b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083b6:	b29b      	uxth	r3, r3
 80083b8:	2b00      	cmp	r3, #0
 80083ba:	f43f af5f 	beq.w	800827c <HAL_SPI_Receive+0xd4>
 80083be:	6893      	ldr	r3, [r2, #8]
 80083c0:	07db      	lsls	r3, r3, #31
 80083c2:	d5eb      	bpl.n	800839c <HAL_SPI_Receive+0x1f4>
 80083c4:	e7ed      	b.n	80083a2 <HAL_SPI_Receive+0x1fa>
 80083c6:	68a3      	ldr	r3, [r4, #8]
 80083c8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80083cc:	d021      	beq.n	8008412 <HAL_SPI_Receive+0x26a>
 80083ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80083d2:	d00f      	beq.n	80083f4 <HAL_SPI_Receive+0x24c>
 80083d4:	4633      	mov	r3, r6
 80083d6:	462a      	mov	r2, r5
 80083d8:	2180      	movs	r1, #128	; 0x80
 80083da:	4620      	mov	r0, r4
 80083dc:	f7ff fb8a 	bl	8007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80083e0:	2800      	cmp	r0, #0
 80083e2:	f43f af59 	beq.w	8008298 <HAL_SPI_Receive+0xf0>
 80083e6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80083e8:	f043 0320 	orr.w	r3, r3, #32
 80083ec:	6563      	str	r3, [r4, #84]	; 0x54
 80083ee:	2320      	movs	r3, #32
 80083f0:	6563      	str	r3, [r4, #84]	; 0x54
 80083f2:	e751      	b.n	8008298 <HAL_SPI_Receive+0xf0>
 80083f4:	6820      	ldr	r0, [r4, #0]
 80083f6:	4633      	mov	r3, r6
 80083f8:	6801      	ldr	r1, [r0, #0]
 80083fa:	462a      	mov	r2, r5
 80083fc:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008400:	6001      	str	r1, [r0, #0]
 8008402:	2101      	movs	r1, #1
 8008404:	4620      	mov	r0, r4
 8008406:	f7ff fb75 	bl	8007af4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800840a:	2800      	cmp	r0, #0
 800840c:	f43f af44 	beq.w	8008298 <HAL_SPI_Receive+0xf0>
 8008410:	e7e9      	b.n	80083e6 <HAL_SPI_Receive+0x23e>
 8008412:	6822      	ldr	r2, [r4, #0]
 8008414:	6813      	ldr	r3, [r2, #0]
 8008416:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800841a:	6013      	str	r3, [r2, #0]
 800841c:	e7da      	b.n	80083d4 <HAL_SPI_Receive+0x22c>
 800841e:	bf00      	nop

08008420 <HAL_SPI_ErrorCallback>:
 8008420:	4770      	bx	lr
 8008422:	bf00      	nop

08008424 <HAL_SPI_IRQHandler>:
 8008424:	b530      	push	{r4, r5, lr}
 8008426:	6802      	ldr	r2, [r0, #0]
 8008428:	4604      	mov	r4, r0
 800842a:	6851      	ldr	r1, [r2, #4]
 800842c:	6893      	ldr	r3, [r2, #8]
 800842e:	b085      	sub	sp, #20
 8008430:	f013 0f40 	tst.w	r3, #64	; 0x40
 8008434:	f3c3 1580 	ubfx	r5, r3, #6, #1
 8008438:	d105      	bne.n	8008446 <HAL_SPI_IRQHandler+0x22>
 800843a:	f013 0f01 	tst.w	r3, #1
 800843e:	d002      	beq.n	8008446 <HAL_SPI_IRQHandler+0x22>
 8008440:	f011 0f40 	tst.w	r1, #64	; 0x40
 8008444:	d159      	bne.n	80084fa <HAL_SPI_IRQHandler+0xd6>
 8008446:	0798      	lsls	r0, r3, #30
 8008448:	d501      	bpl.n	800844e <HAL_SPI_IRQHandler+0x2a>
 800844a:	0608      	lsls	r0, r1, #24
 800844c:	d44f      	bmi.n	80084ee <HAL_SPI_IRQHandler+0xca>
 800844e:	f3c3 1040 	ubfx	r0, r3, #5, #1
 8008452:	069b      	lsls	r3, r3, #26
 8008454:	d510      	bpl.n	8008478 <HAL_SPI_IRQHandler+0x54>
 8008456:	0688      	lsls	r0, r1, #26
 8008458:	d50c      	bpl.n	8008474 <HAL_SPI_IRQHandler+0x50>
 800845a:	2d00      	cmp	r5, #0
 800845c:	d05a      	beq.n	8008514 <HAL_SPI_IRQHandler+0xf0>
 800845e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008462:	2b03      	cmp	r3, #3
 8008464:	d14b      	bne.n	80084fe <HAL_SPI_IRQHandler+0xda>
 8008466:	2300      	movs	r3, #0
 8008468:	9302      	str	r3, [sp, #8]
 800846a:	68d3      	ldr	r3, [r2, #12]
 800846c:	9302      	str	r3, [sp, #8]
 800846e:	6893      	ldr	r3, [r2, #8]
 8008470:	9302      	str	r3, [sp, #8]
 8008472:	9b02      	ldr	r3, [sp, #8]
 8008474:	b005      	add	sp, #20
 8008476:	bd30      	pop	{r4, r5, pc}
 8008478:	2d00      	cmp	r5, #0
 800847a:	d0fb      	beq.n	8008474 <HAL_SPI_IRQHandler+0x50>
 800847c:	068b      	lsls	r3, r1, #26
 800847e:	d5f9      	bpl.n	8008474 <HAL_SPI_IRQHandler+0x50>
 8008480:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008484:	2b03      	cmp	r3, #3
 8008486:	d0ee      	beq.n	8008466 <HAL_SPI_IRQHandler+0x42>
 8008488:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800848a:	f043 0304 	orr.w	r3, r3, #4
 800848e:	6563      	str	r3, [r4, #84]	; 0x54
 8008490:	9001      	str	r0, [sp, #4]
 8008492:	68d3      	ldr	r3, [r2, #12]
 8008494:	9301      	str	r3, [sp, #4]
 8008496:	6893      	ldr	r3, [r2, #8]
 8008498:	9301      	str	r3, [sp, #4]
 800849a:	9b01      	ldr	r3, [sp, #4]
 800849c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800849e:	2b00      	cmp	r3, #0
 80084a0:	d0e8      	beq.n	8008474 <HAL_SPI_IRQHandler+0x50>
 80084a2:	2001      	movs	r0, #1
 80084a4:	6853      	ldr	r3, [r2, #4]
 80084a6:	0789      	lsls	r1, r1, #30
 80084a8:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 80084ac:	6053      	str	r3, [r2, #4]
 80084ae:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 80084b2:	d03d      	beq.n	8008530 <HAL_SPI_IRQHandler+0x10c>
 80084b4:	6853      	ldr	r3, [r2, #4]
 80084b6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80084b8:	f023 0303 	bic.w	r3, r3, #3
 80084bc:	6053      	str	r3, [r2, #4]
 80084be:	b140      	cbz	r0, 80084d2 <HAL_SPI_IRQHandler+0xae>
 80084c0:	4b1d      	ldr	r3, [pc, #116]	; (8008538 <HAL_SPI_IRQHandler+0x114>)
 80084c2:	6343      	str	r3, [r0, #52]	; 0x34
 80084c4:	f7fd f880 	bl	80055c8 <HAL_DMA_Abort_IT>
 80084c8:	b118      	cbz	r0, 80084d2 <HAL_SPI_IRQHandler+0xae>
 80084ca:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80084cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80084d0:	6563      	str	r3, [r4, #84]	; 0x54
 80084d2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80084d4:	2800      	cmp	r0, #0
 80084d6:	d0cd      	beq.n	8008474 <HAL_SPI_IRQHandler+0x50>
 80084d8:	4b17      	ldr	r3, [pc, #92]	; (8008538 <HAL_SPI_IRQHandler+0x114>)
 80084da:	6343      	str	r3, [r0, #52]	; 0x34
 80084dc:	f7fd f874 	bl	80055c8 <HAL_DMA_Abort_IT>
 80084e0:	2800      	cmp	r0, #0
 80084e2:	d0c7      	beq.n	8008474 <HAL_SPI_IRQHandler+0x50>
 80084e4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80084e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80084ea:	6563      	str	r3, [r4, #84]	; 0x54
 80084ec:	e7c2      	b.n	8008474 <HAL_SPI_IRQHandler+0x50>
 80084ee:	4620      	mov	r0, r4
 80084f0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80084f2:	b005      	add	sp, #20
 80084f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80084f8:	4718      	bx	r3
 80084fa:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80084fc:	e7f9      	b.n	80084f2 <HAL_SPI_IRQHandler+0xce>
 80084fe:	2000      	movs	r0, #0
 8008500:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008502:	f043 0304 	orr.w	r3, r3, #4
 8008506:	6563      	str	r3, [r4, #84]	; 0x54
 8008508:	9001      	str	r0, [sp, #4]
 800850a:	68d3      	ldr	r3, [r2, #12]
 800850c:	9301      	str	r3, [sp, #4]
 800850e:	6893      	ldr	r3, [r2, #8]
 8008510:	9301      	str	r3, [sp, #4]
 8008512:	9b01      	ldr	r3, [sp, #4]
 8008514:	2000      	movs	r0, #0
 8008516:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008518:	f043 0301 	orr.w	r3, r3, #1
 800851c:	6563      	str	r3, [r4, #84]	; 0x54
 800851e:	9003      	str	r0, [sp, #12]
 8008520:	6893      	ldr	r3, [r2, #8]
 8008522:	9303      	str	r3, [sp, #12]
 8008524:	6813      	ldr	r3, [r2, #0]
 8008526:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800852a:	6013      	str	r3, [r2, #0]
 800852c:	9b03      	ldr	r3, [sp, #12]
 800852e:	e7b5      	b.n	800849c <HAL_SPI_IRQHandler+0x78>
 8008530:	4620      	mov	r0, r4
 8008532:	f7ff ff75 	bl	8008420 <HAL_SPI_ErrorCallback>
 8008536:	e79d      	b.n	8008474 <HAL_SPI_IRQHandler+0x50>
 8008538:	0800853d 	.word	0x0800853d

0800853c <SPI_DMAAbortOnError>:
 800853c:	b508      	push	{r3, lr}
 800853e:	2300      	movs	r3, #0
 8008540:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008542:	87c3      	strh	r3, [r0, #62]	; 0x3e
 8008544:	86c3      	strh	r3, [r0, #54]	; 0x36
 8008546:	f7ff ff6b 	bl	8008420 <HAL_SPI_ErrorCallback>
 800854a:	bd08      	pop	{r3, pc}

0800854c <HAL_TIM_Base_Init>:
 800854c:	2800      	cmp	r0, #0
 800854e:	d049      	beq.n	80085e4 <HAL_TIM_Base_Init+0x98>
 8008550:	b510      	push	{r4, lr}
 8008552:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008556:	4604      	mov	r4, r0
 8008558:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800855c:	2b00      	cmp	r3, #0
 800855e:	d03c      	beq.n	80085da <HAL_TIM_Base_Init+0x8e>
 8008560:	2302      	movs	r3, #2
 8008562:	6822      	ldr	r2, [r4, #0]
 8008564:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8008568:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800856c:	6813      	ldr	r3, [r2, #0]
 800856e:	d013      	beq.n	8008598 <HAL_TIM_Base_Init+0x4c>
 8008570:	491d      	ldr	r1, [pc, #116]	; (80085e8 <HAL_TIM_Base_Init+0x9c>)
 8008572:	428a      	cmp	r2, r1
 8008574:	d010      	beq.n	8008598 <HAL_TIM_Base_Init+0x4c>
 8008576:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800857a:	428a      	cmp	r2, r1
 800857c:	d00c      	beq.n	8008598 <HAL_TIM_Base_Init+0x4c>
 800857e:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008582:	428a      	cmp	r2, r1
 8008584:	d00c      	beq.n	80085a0 <HAL_TIM_Base_Init+0x54>
 8008586:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800858a:	428a      	cmp	r2, r1
 800858c:	d008      	beq.n	80085a0 <HAL_TIM_Base_Init+0x54>
 800858e:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008592:	428a      	cmp	r2, r1
 8008594:	d108      	bne.n	80085a8 <HAL_TIM_Base_Init+0x5c>
 8008596:	e003      	b.n	80085a0 <HAL_TIM_Base_Init+0x54>
 8008598:	68a1      	ldr	r1, [r4, #8]
 800859a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800859e:	430b      	orrs	r3, r1
 80085a0:	6921      	ldr	r1, [r4, #16]
 80085a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80085a6:	430b      	orrs	r3, r1
 80085a8:	2101      	movs	r1, #1
 80085aa:	6960      	ldr	r0, [r4, #20]
 80085ac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80085b0:	4303      	orrs	r3, r0
 80085b2:	68e0      	ldr	r0, [r4, #12]
 80085b4:	6013      	str	r3, [r2, #0]
 80085b6:	6863      	ldr	r3, [r4, #4]
 80085b8:	62d0      	str	r0, [r2, #44]	; 0x2c
 80085ba:	6293      	str	r3, [r2, #40]	; 0x28
 80085bc:	6151      	str	r1, [r2, #20]
 80085be:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 80085c2:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
 80085c6:	f884 103b 	strb.w	r1, [r4, #59]	; 0x3b
 80085ca:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
 80085ce:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 80085d2:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 80085d6:	2000      	movs	r0, #0
 80085d8:	bd10      	pop	{r4, pc}
 80085da:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80085de:	f7fc fddb 	bl	8005198 <HAL_TIM_Base_MspInit>
 80085e2:	e7bd      	b.n	8008560 <HAL_TIM_Base_Init+0x14>
 80085e4:	2001      	movs	r0, #1
 80085e6:	4770      	bx	lr
 80085e8:	40000400 	.word	0x40000400

080085ec <HAL_TIM_Base_Start_IT>:
 80085ec:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80085f0:	2b01      	cmp	r3, #1
 80085f2:	d120      	bne.n	8008636 <HAL_TIM_Base_Start_IT+0x4a>
 80085f4:	2202      	movs	r2, #2
 80085f6:	6803      	ldr	r3, [r0, #0]
 80085f8:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 80085fc:	68da      	ldr	r2, [r3, #12]
 80085fe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008602:	f042 0201 	orr.w	r2, r2, #1
 8008606:	60da      	str	r2, [r3, #12]
 8008608:	d00a      	beq.n	8008620 <HAL_TIM_Base_Start_IT+0x34>
 800860a:	4a0d      	ldr	r2, [pc, #52]	; (8008640 <HAL_TIM_Base_Start_IT+0x54>)
 800860c:	4293      	cmp	r3, r2
 800860e:	d007      	beq.n	8008620 <HAL_TIM_Base_Start_IT+0x34>
 8008610:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008614:	4293      	cmp	r3, r2
 8008616:	d003      	beq.n	8008620 <HAL_TIM_Base_Start_IT+0x34>
 8008618:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 800861c:	4293      	cmp	r3, r2
 800861e:	d104      	bne.n	800862a <HAL_TIM_Base_Start_IT+0x3e>
 8008620:	689a      	ldr	r2, [r3, #8]
 8008622:	f002 0207 	and.w	r2, r2, #7
 8008626:	2a06      	cmp	r2, #6
 8008628:	d007      	beq.n	800863a <HAL_TIM_Base_Start_IT+0x4e>
 800862a:	681a      	ldr	r2, [r3, #0]
 800862c:	2000      	movs	r0, #0
 800862e:	f042 0201 	orr.w	r2, r2, #1
 8008632:	601a      	str	r2, [r3, #0]
 8008634:	4770      	bx	lr
 8008636:	2001      	movs	r0, #1
 8008638:	4770      	bx	lr
 800863a:	2000      	movs	r0, #0
 800863c:	4770      	bx	lr
 800863e:	bf00      	nop
 8008640:	40000400 	.word	0x40000400

08008644 <HAL_TIM_Encoder_Init>:
 8008644:	2800      	cmp	r0, #0
 8008646:	d075      	beq.n	8008734 <HAL_TIM_Encoder_Init+0xf0>
 8008648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800864a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800864e:	4604      	mov	r4, r0
 8008650:	460d      	mov	r5, r1
 8008652:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008656:	2b00      	cmp	r3, #0
 8008658:	d067      	beq.n	800872a <HAL_TIM_Encoder_Init+0xe6>
 800865a:	2202      	movs	r2, #2
 800865c:	6823      	ldr	r3, [r4, #0]
 800865e:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
 8008662:	689a      	ldr	r2, [r3, #8]
 8008664:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008668:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800866c:	f022 0207 	bic.w	r2, r2, #7
 8008670:	609a      	str	r2, [r3, #8]
 8008672:	681a      	ldr	r2, [r3, #0]
 8008674:	d013      	beq.n	800869e <HAL_TIM_Encoder_Init+0x5a>
 8008676:	4930      	ldr	r1, [pc, #192]	; (8008738 <HAL_TIM_Encoder_Init+0xf4>)
 8008678:	428b      	cmp	r3, r1
 800867a:	d010      	beq.n	800869e <HAL_TIM_Encoder_Init+0x5a>
 800867c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008680:	428b      	cmp	r3, r1
 8008682:	d00c      	beq.n	800869e <HAL_TIM_Encoder_Init+0x5a>
 8008684:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008688:	428b      	cmp	r3, r1
 800868a:	d00c      	beq.n	80086a6 <HAL_TIM_Encoder_Init+0x62>
 800868c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008690:	428b      	cmp	r3, r1
 8008692:	d008      	beq.n	80086a6 <HAL_TIM_Encoder_Init+0x62>
 8008694:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008698:	428b      	cmp	r3, r1
 800869a:	d108      	bne.n	80086ae <HAL_TIM_Encoder_Init+0x6a>
 800869c:	e003      	b.n	80086a6 <HAL_TIM_Encoder_Init+0x62>
 800869e:	68a1      	ldr	r1, [r4, #8]
 80086a0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80086a4:	430a      	orrs	r2, r1
 80086a6:	6921      	ldr	r1, [r4, #16]
 80086a8:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80086ac:	430a      	orrs	r2, r1
 80086ae:	2601      	movs	r6, #1
 80086b0:	6961      	ldr	r1, [r4, #20]
 80086b2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80086b6:	430a      	orrs	r2, r1
 80086b8:	68e1      	ldr	r1, [r4, #12]
 80086ba:	601a      	str	r2, [r3, #0]
 80086bc:	6862      	ldr	r2, [r4, #4]
 80086be:	62d9      	str	r1, [r3, #44]	; 0x2c
 80086c0:	629a      	str	r2, [r3, #40]	; 0x28
 80086c2:	69a9      	ldr	r1, [r5, #24]
 80086c4:	68aa      	ldr	r2, [r5, #8]
 80086c6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 80086ca:	692a      	ldr	r2, [r5, #16]
 80086cc:	615e      	str	r6, [r3, #20]
 80086ce:	6898      	ldr	r0, [r3, #8]
 80086d0:	699f      	ldr	r7, [r3, #24]
 80086d2:	0112      	lsls	r2, r2, #4
 80086d4:	f427 7c40 	bic.w	ip, r7, #768	; 0x300
 80086d8:	69ef      	ldr	r7, [r5, #28]
 80086da:	f02c 0c03 	bic.w	ip, ip, #3
 80086de:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 80086e2:	68ef      	ldr	r7, [r5, #12]
 80086e4:	ea41 010c 	orr.w	r1, r1, ip
 80086e8:	433a      	orrs	r2, r7
 80086ea:	6a1f      	ldr	r7, [r3, #32]
 80086ec:	f421 417c 	bic.w	r1, r1, #64512	; 0xfc00
 80086f0:	f027 0caa 	bic.w	ip, r7, #170	; 0xaa
 80086f4:	6a2f      	ldr	r7, [r5, #32]
 80086f6:	f021 01fc 	bic.w	r1, r1, #252	; 0xfc
 80086fa:	ea42 3207 	orr.w	r2, r2, r7, lsl #12
 80086fe:	430a      	orrs	r2, r1
 8008700:	696f      	ldr	r7, [r5, #20]
 8008702:	6869      	ldr	r1, [r5, #4]
 8008704:	682d      	ldr	r5, [r5, #0]
 8008706:	ea41 1107 	orr.w	r1, r1, r7, lsl #4
 800870a:	4328      	orrs	r0, r5
 800870c:	ea41 010c 	orr.w	r1, r1, ip
 8008710:	6098      	str	r0, [r3, #8]
 8008712:	619a      	str	r2, [r3, #24]
 8008714:	6219      	str	r1, [r3, #32]
 8008716:	f884 603e 	strb.w	r6, [r4, #62]	; 0x3e
 800871a:	f884 603a 	strb.w	r6, [r4, #58]	; 0x3a
 800871e:	f884 603b 	strb.w	r6, [r4, #59]	; 0x3b
 8008722:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8008726:	2000      	movs	r0, #0
 8008728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800872a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800872e:	f7fc fd73 	bl	8005218 <HAL_TIM_Encoder_MspInit>
 8008732:	e792      	b.n	800865a <HAL_TIM_Encoder_Init+0x16>
 8008734:	2001      	movs	r0, #1
 8008736:	4770      	bx	lr
 8008738:	40000400 	.word	0x40000400

0800873c <HAL_TIM_Encoder_Start>:
 800873c:	4603      	mov	r3, r0
 800873e:	f890 003a 	ldrb.w	r0, [r0, #58]	; 0x3a
 8008742:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8008746:	b2c0      	uxtb	r0, r0
 8008748:	b2d2      	uxtb	r2, r2
 800874a:	b9a9      	cbnz	r1, 8008778 <HAL_TIM_Encoder_Start+0x3c>
 800874c:	2801      	cmp	r0, #1
 800874e:	d001      	beq.n	8008754 <HAL_TIM_Encoder_Start+0x18>
 8008750:	2001      	movs	r0, #1
 8008752:	4770      	bx	lr
 8008754:	2102      	movs	r1, #2
 8008756:	681a      	ldr	r2, [r3, #0]
 8008758:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 800875c:	6a13      	ldr	r3, [r2, #32]
 800875e:	f023 0301 	bic.w	r3, r3, #1
 8008762:	6213      	str	r3, [r2, #32]
 8008764:	6a13      	ldr	r3, [r2, #32]
 8008766:	f043 0301 	orr.w	r3, r3, #1
 800876a:	6213      	str	r3, [r2, #32]
 800876c:	6813      	ldr	r3, [r2, #0]
 800876e:	2000      	movs	r0, #0
 8008770:	f043 0301 	orr.w	r3, r3, #1
 8008774:	6013      	str	r3, [r2, #0]
 8008776:	4770      	bx	lr
 8008778:	2904      	cmp	r1, #4
 800877a:	d01a      	beq.n	80087b2 <HAL_TIM_Encoder_Start+0x76>
 800877c:	2801      	cmp	r0, #1
 800877e:	d1e7      	bne.n	8008750 <HAL_TIM_Encoder_Start+0x14>
 8008780:	2a01      	cmp	r2, #1
 8008782:	d1e6      	bne.n	8008752 <HAL_TIM_Encoder_Start+0x16>
 8008784:	2102      	movs	r1, #2
 8008786:	681a      	ldr	r2, [r3, #0]
 8008788:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 800878c:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 8008790:	6a13      	ldr	r3, [r2, #32]
 8008792:	f023 0301 	bic.w	r3, r3, #1
 8008796:	6213      	str	r3, [r2, #32]
 8008798:	6a13      	ldr	r3, [r2, #32]
 800879a:	f043 0301 	orr.w	r3, r3, #1
 800879e:	6213      	str	r3, [r2, #32]
 80087a0:	6a13      	ldr	r3, [r2, #32]
 80087a2:	f023 0310 	bic.w	r3, r3, #16
 80087a6:	6213      	str	r3, [r2, #32]
 80087a8:	6a13      	ldr	r3, [r2, #32]
 80087aa:	f043 0310 	orr.w	r3, r3, #16
 80087ae:	6213      	str	r3, [r2, #32]
 80087b0:	e7dc      	b.n	800876c <HAL_TIM_Encoder_Start+0x30>
 80087b2:	2a01      	cmp	r2, #1
 80087b4:	d1cc      	bne.n	8008750 <HAL_TIM_Encoder_Start+0x14>
 80087b6:	2102      	movs	r1, #2
 80087b8:	681a      	ldr	r2, [r3, #0]
 80087ba:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 80087be:	e7ef      	b.n	80087a0 <HAL_TIM_Encoder_Start+0x64>

080087c0 <HAL_TIM_ConfigClockSource>:
 80087c0:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 80087c4:	2a01      	cmp	r2, #1
 80087c6:	d075      	beq.n	80088b4 <HAL_TIM_ConfigClockSource+0xf4>
 80087c8:	b430      	push	{r4, r5}
 80087ca:	4603      	mov	r3, r0
 80087cc:	2401      	movs	r4, #1
 80087ce:	2202      	movs	r2, #2
 80087d0:	6800      	ldr	r0, [r0, #0]
 80087d2:	f883 4038 	strb.w	r4, [r3, #56]	; 0x38
 80087d6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80087da:	6884      	ldr	r4, [r0, #8]
 80087dc:	680a      	ldr	r2, [r1, #0]
 80087de:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 80087e2:	f024 0477 	bic.w	r4, r4, #119	; 0x77
 80087e6:	2a60      	cmp	r2, #96	; 0x60
 80087e8:	6084      	str	r4, [r0, #8]
 80087ea:	d065      	beq.n	80088b8 <HAL_TIM_ConfigClockSource+0xf8>
 80087ec:	d831      	bhi.n	8008852 <HAL_TIM_ConfigClockSource+0x92>
 80087ee:	2a40      	cmp	r2, #64	; 0x40
 80087f0:	d048      	beq.n	8008884 <HAL_TIM_ConfigClockSource+0xc4>
 80087f2:	d921      	bls.n	8008838 <HAL_TIM_ConfigClockSource+0x78>
 80087f4:	2a50      	cmp	r2, #80	; 0x50
 80087f6:	d116      	bne.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 80087f8:	684c      	ldr	r4, [r1, #4]
 80087fa:	68cd      	ldr	r5, [r1, #12]
 80087fc:	6a01      	ldr	r1, [r0, #32]
 80087fe:	f021 010a 	bic.w	r1, r1, #10
 8008802:	4321      	orrs	r1, r4
 8008804:	6a04      	ldr	r4, [r0, #32]
 8008806:	f024 0401 	bic.w	r4, r4, #1
 800880a:	6204      	str	r4, [r0, #32]
 800880c:	6982      	ldr	r2, [r0, #24]
 800880e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8008812:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8008816:	6182      	str	r2, [r0, #24]
 8008818:	6201      	str	r1, [r0, #32]
 800881a:	6882      	ldr	r2, [r0, #8]
 800881c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008820:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 8008824:	6082      	str	r2, [r0, #8]
 8008826:	2200      	movs	r2, #0
 8008828:	2101      	movs	r1, #1
 800882a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800882e:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8008832:	4610      	mov	r0, r2
 8008834:	bc30      	pop	{r4, r5}
 8008836:	4770      	bx	lr
 8008838:	2a20      	cmp	r2, #32
 800883a:	d002      	beq.n	8008842 <HAL_TIM_ConfigClockSource+0x82>
 800883c:	d91e      	bls.n	800887c <HAL_TIM_ConfigClockSource+0xbc>
 800883e:	2a30      	cmp	r2, #48	; 0x30
 8008840:	d1f1      	bne.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 8008842:	6881      	ldr	r1, [r0, #8]
 8008844:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008848:	430a      	orrs	r2, r1
 800884a:	f042 0207 	orr.w	r2, r2, #7
 800884e:	6082      	str	r2, [r0, #8]
 8008850:	e7e9      	b.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 8008852:	2a70      	cmp	r2, #112	; 0x70
 8008854:	d049      	beq.n	80088ea <HAL_TIM_ConfigClockSource+0x12a>
 8008856:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800885a:	d1e4      	bne.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 800885c:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 8008860:	6884      	ldr	r4, [r0, #8]
 8008862:	432a      	orrs	r2, r5
 8008864:	68cd      	ldr	r5, [r1, #12]
 8008866:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 800886a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800886e:	430a      	orrs	r2, r1
 8008870:	6082      	str	r2, [r0, #8]
 8008872:	6882      	ldr	r2, [r0, #8]
 8008874:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008878:	6082      	str	r2, [r0, #8]
 800887a:	e7d4      	b.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 800887c:	f032 0110 	bics.w	r1, r2, #16
 8008880:	d1d1      	bne.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 8008882:	e7de      	b.n	8008842 <HAL_TIM_ConfigClockSource+0x82>
 8008884:	684c      	ldr	r4, [r1, #4]
 8008886:	68cd      	ldr	r5, [r1, #12]
 8008888:	6a01      	ldr	r1, [r0, #32]
 800888a:	f021 010a 	bic.w	r1, r1, #10
 800888e:	4321      	orrs	r1, r4
 8008890:	6a04      	ldr	r4, [r0, #32]
 8008892:	f024 0401 	bic.w	r4, r4, #1
 8008896:	6204      	str	r4, [r0, #32]
 8008898:	6982      	ldr	r2, [r0, #24]
 800889a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800889e:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 80088a2:	6182      	str	r2, [r0, #24]
 80088a4:	6201      	str	r1, [r0, #32]
 80088a6:	6882      	ldr	r2, [r0, #8]
 80088a8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80088ac:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 80088b0:	6082      	str	r2, [r0, #8]
 80088b2:	e7b8      	b.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 80088b4:	2002      	movs	r0, #2
 80088b6:	4770      	bx	lr
 80088b8:	6a04      	ldr	r4, [r0, #32]
 80088ba:	68ca      	ldr	r2, [r1, #12]
 80088bc:	f024 0410 	bic.w	r4, r4, #16
 80088c0:	684d      	ldr	r5, [r1, #4]
 80088c2:	6204      	str	r4, [r0, #32]
 80088c4:	6981      	ldr	r1, [r0, #24]
 80088c6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 80088ca:	ea41 3102 	orr.w	r1, r1, r2, lsl #12
 80088ce:	6a02      	ldr	r2, [r0, #32]
 80088d0:	6181      	str	r1, [r0, #24]
 80088d2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80088d6:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 80088da:	6202      	str	r2, [r0, #32]
 80088dc:	6882      	ldr	r2, [r0, #8]
 80088de:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80088e2:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 80088e6:	6082      	str	r2, [r0, #8]
 80088e8:	e79d      	b.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 80088ea:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 80088ee:	6884      	ldr	r4, [r0, #8]
 80088f0:	432a      	orrs	r2, r5
 80088f2:	68cd      	ldr	r5, [r1, #12]
 80088f4:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 80088f8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80088fc:	430a      	orrs	r2, r1
 80088fe:	6082      	str	r2, [r0, #8]
 8008900:	6882      	ldr	r2, [r0, #8]
 8008902:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 8008906:	6082      	str	r2, [r0, #8]
 8008908:	e78d      	b.n	8008826 <HAL_TIM_ConfigClockSource+0x66>
 800890a:	bf00      	nop

0800890c <HAL_TIM_OC_DelayElapsedCallback>:
 800890c:	4770      	bx	lr
 800890e:	bf00      	nop

08008910 <HAL_TIM_IC_CaptureCallback>:
 8008910:	4770      	bx	lr
 8008912:	bf00      	nop

08008914 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008914:	4770      	bx	lr
 8008916:	bf00      	nop

08008918 <HAL_TIM_TriggerCallback>:
 8008918:	4770      	bx	lr
 800891a:	bf00      	nop

0800891c <HAL_TIM_IRQHandler>:
 800891c:	6803      	ldr	r3, [r0, #0]
 800891e:	b510      	push	{r4, lr}
 8008920:	691a      	ldr	r2, [r3, #16]
 8008922:	4604      	mov	r4, r0
 8008924:	0791      	lsls	r1, r2, #30
 8008926:	d502      	bpl.n	800892e <HAL_TIM_IRQHandler+0x12>
 8008928:	68da      	ldr	r2, [r3, #12]
 800892a:	0792      	lsls	r2, r2, #30
 800892c:	d450      	bmi.n	80089d0 <HAL_TIM_IRQHandler+0xb4>
 800892e:	691a      	ldr	r2, [r3, #16]
 8008930:	0752      	lsls	r2, r2, #29
 8008932:	d502      	bpl.n	800893a <HAL_TIM_IRQHandler+0x1e>
 8008934:	68da      	ldr	r2, [r3, #12]
 8008936:	0750      	lsls	r0, r2, #29
 8008938:	d437      	bmi.n	80089aa <HAL_TIM_IRQHandler+0x8e>
 800893a:	691a      	ldr	r2, [r3, #16]
 800893c:	0711      	lsls	r1, r2, #28
 800893e:	d502      	bpl.n	8008946 <HAL_TIM_IRQHandler+0x2a>
 8008940:	68da      	ldr	r2, [r3, #12]
 8008942:	0712      	lsls	r2, r2, #28
 8008944:	d422      	bmi.n	800898c <HAL_TIM_IRQHandler+0x70>
 8008946:	691a      	ldr	r2, [r3, #16]
 8008948:	06d0      	lsls	r0, r2, #27
 800894a:	d502      	bpl.n	8008952 <HAL_TIM_IRQHandler+0x36>
 800894c:	68da      	ldr	r2, [r3, #12]
 800894e:	06d1      	lsls	r1, r2, #27
 8008950:	d40c      	bmi.n	800896c <HAL_TIM_IRQHandler+0x50>
 8008952:	691a      	ldr	r2, [r3, #16]
 8008954:	07d2      	lsls	r2, r2, #31
 8008956:	d502      	bpl.n	800895e <HAL_TIM_IRQHandler+0x42>
 8008958:	68da      	ldr	r2, [r3, #12]
 800895a:	07d0      	lsls	r0, r2, #31
 800895c:	d450      	bmi.n	8008a00 <HAL_TIM_IRQHandler+0xe4>
 800895e:	691a      	ldr	r2, [r3, #16]
 8008960:	0651      	lsls	r1, r2, #25
 8008962:	d502      	bpl.n	800896a <HAL_TIM_IRQHandler+0x4e>
 8008964:	68da      	ldr	r2, [r3, #12]
 8008966:	0652      	lsls	r2, r2, #25
 8008968:	d443      	bmi.n	80089f2 <HAL_TIM_IRQHandler+0xd6>
 800896a:	bd10      	pop	{r4, pc}
 800896c:	f06f 0110 	mvn.w	r1, #16
 8008970:	2208      	movs	r2, #8
 8008972:	6119      	str	r1, [r3, #16]
 8008974:	7622      	strb	r2, [r4, #24]
 8008976:	69db      	ldr	r3, [r3, #28]
 8008978:	4620      	mov	r0, r4
 800897a:	f413 7f40 	tst.w	r3, #768	; 0x300
 800897e:	d047      	beq.n	8008a10 <HAL_TIM_IRQHandler+0xf4>
 8008980:	f7ff ffc6 	bl	8008910 <HAL_TIM_IC_CaptureCallback>
 8008984:	2200      	movs	r2, #0
 8008986:	6823      	ldr	r3, [r4, #0]
 8008988:	7622      	strb	r2, [r4, #24]
 800898a:	e7e2      	b.n	8008952 <HAL_TIM_IRQHandler+0x36>
 800898c:	f06f 0108 	mvn.w	r1, #8
 8008990:	2204      	movs	r2, #4
 8008992:	6119      	str	r1, [r3, #16]
 8008994:	7622      	strb	r2, [r4, #24]
 8008996:	69db      	ldr	r3, [r3, #28]
 8008998:	4620      	mov	r0, r4
 800899a:	079b      	lsls	r3, r3, #30
 800899c:	d044      	beq.n	8008a28 <HAL_TIM_IRQHandler+0x10c>
 800899e:	f7ff ffb7 	bl	8008910 <HAL_TIM_IC_CaptureCallback>
 80089a2:	2200      	movs	r2, #0
 80089a4:	6823      	ldr	r3, [r4, #0]
 80089a6:	7622      	strb	r2, [r4, #24]
 80089a8:	e7cd      	b.n	8008946 <HAL_TIM_IRQHandler+0x2a>
 80089aa:	f06f 0104 	mvn.w	r1, #4
 80089ae:	2202      	movs	r2, #2
 80089b0:	6119      	str	r1, [r3, #16]
 80089b2:	7622      	strb	r2, [r4, #24]
 80089b4:	699b      	ldr	r3, [r3, #24]
 80089b6:	4620      	mov	r0, r4
 80089b8:	f413 7f40 	tst.w	r3, #768	; 0x300
 80089bc:	d131      	bne.n	8008a22 <HAL_TIM_IRQHandler+0x106>
 80089be:	f7ff ffa5 	bl	800890c <HAL_TIM_OC_DelayElapsedCallback>
 80089c2:	4620      	mov	r0, r4
 80089c4:	f7ff ffa6 	bl	8008914 <HAL_TIM_PWM_PulseFinishedCallback>
 80089c8:	2200      	movs	r2, #0
 80089ca:	6823      	ldr	r3, [r4, #0]
 80089cc:	7622      	strb	r2, [r4, #24]
 80089ce:	e7b4      	b.n	800893a <HAL_TIM_IRQHandler+0x1e>
 80089d0:	f06f 0102 	mvn.w	r1, #2
 80089d4:	2201      	movs	r2, #1
 80089d6:	6119      	str	r1, [r3, #16]
 80089d8:	7602      	strb	r2, [r0, #24]
 80089da:	699b      	ldr	r3, [r3, #24]
 80089dc:	0799      	lsls	r1, r3, #30
 80089de:	d11d      	bne.n	8008a1c <HAL_TIM_IRQHandler+0x100>
 80089e0:	f7ff ff94 	bl	800890c <HAL_TIM_OC_DelayElapsedCallback>
 80089e4:	4620      	mov	r0, r4
 80089e6:	f7ff ff95 	bl	8008914 <HAL_TIM_PWM_PulseFinishedCallback>
 80089ea:	2200      	movs	r2, #0
 80089ec:	6823      	ldr	r3, [r4, #0]
 80089ee:	7622      	strb	r2, [r4, #24]
 80089f0:	e79d      	b.n	800892e <HAL_TIM_IRQHandler+0x12>
 80089f2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80089f6:	4620      	mov	r0, r4
 80089f8:	611a      	str	r2, [r3, #16]
 80089fa:	f7ff ff8d 	bl	8008918 <HAL_TIM_TriggerCallback>
 80089fe:	bd10      	pop	{r4, pc}
 8008a00:	f06f 0201 	mvn.w	r2, #1
 8008a04:	4620      	mov	r0, r4
 8008a06:	611a      	str	r2, [r3, #16]
 8008a08:	f7fb fa20 	bl	8003e4c <HAL_TIM_PeriodElapsedCallback>
 8008a0c:	6823      	ldr	r3, [r4, #0]
 8008a0e:	e7a6      	b.n	800895e <HAL_TIM_IRQHandler+0x42>
 8008a10:	f7ff ff7c 	bl	800890c <HAL_TIM_OC_DelayElapsedCallback>
 8008a14:	4620      	mov	r0, r4
 8008a16:	f7ff ff7d 	bl	8008914 <HAL_TIM_PWM_PulseFinishedCallback>
 8008a1a:	e7b3      	b.n	8008984 <HAL_TIM_IRQHandler+0x68>
 8008a1c:	f7ff ff78 	bl	8008910 <HAL_TIM_IC_CaptureCallback>
 8008a20:	e7e3      	b.n	80089ea <HAL_TIM_IRQHandler+0xce>
 8008a22:	f7ff ff75 	bl	8008910 <HAL_TIM_IC_CaptureCallback>
 8008a26:	e7cf      	b.n	80089c8 <HAL_TIM_IRQHandler+0xac>
 8008a28:	f7ff ff70 	bl	800890c <HAL_TIM_OC_DelayElapsedCallback>
 8008a2c:	4620      	mov	r0, r4
 8008a2e:	f7ff ff71 	bl	8008914 <HAL_TIM_PWM_PulseFinishedCallback>
 8008a32:	e7b6      	b.n	80089a2 <HAL_TIM_IRQHandler+0x86>

08008a34 <HAL_TIMEx_MasterConfigSynchronization>:
 8008a34:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8008a38:	2a01      	cmp	r2, #1
 8008a3a:	d028      	beq.n	8008a8e <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 8008a3c:	4603      	mov	r3, r0
 8008a3e:	2002      	movs	r0, #2
 8008a40:	681a      	ldr	r2, [r3, #0]
 8008a42:	b430      	push	{r4, r5}
 8008a44:	f883 0039 	strb.w	r0, [r3, #57]	; 0x39
 8008a48:	6850      	ldr	r0, [r2, #4]
 8008a4a:	680d      	ldr	r5, [r1, #0]
 8008a4c:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 8008a50:	4328      	orrs	r0, r5
 8008a52:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008a56:	6894      	ldr	r4, [r2, #8]
 8008a58:	6050      	str	r0, [r2, #4]
 8008a5a:	d00a      	beq.n	8008a72 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008a5c:	480d      	ldr	r0, [pc, #52]	; (8008a94 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 8008a5e:	4282      	cmp	r2, r0
 8008a60:	d007      	beq.n	8008a72 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008a62:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8008a66:	4282      	cmp	r2, r0
 8008a68:	d003      	beq.n	8008a72 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008a6a:	f500 3080 	add.w	r0, r0, #65536	; 0x10000
 8008a6e:	4282      	cmp	r2, r0
 8008a70:	d104      	bne.n	8008a7c <HAL_TIMEx_MasterConfigSynchronization+0x48>
 8008a72:	6849      	ldr	r1, [r1, #4]
 8008a74:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8008a78:	430c      	orrs	r4, r1
 8008a7a:	6094      	str	r4, [r2, #8]
 8008a7c:	2200      	movs	r2, #0
 8008a7e:	2101      	movs	r1, #1
 8008a80:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008a84:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8008a88:	4610      	mov	r0, r2
 8008a8a:	bc30      	pop	{r4, r5}
 8008a8c:	4770      	bx	lr
 8008a8e:	2002      	movs	r0, #2
 8008a90:	4770      	bx	lr
 8008a92:	bf00      	nop
 8008a94:	40000400 	.word	0x40000400

08008a98 <USB_EnableGlobalInt>:
 8008a98:	4603      	mov	r3, r0
 8008a9a:	2200      	movs	r2, #0
 8008a9c:	f44f 413f 	mov.w	r1, #48896	; 0xbf00
 8008aa0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008aa4:	4610      	mov	r0, r2
 8008aa6:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008aaa:	4770      	bx	lr

08008aac <USB_DisableGlobalInt>:
 8008aac:	4603      	mov	r3, r0
 8008aae:	f244 02ff 	movw	r2, #16639	; 0x40ff
 8008ab2:	f8b3 1040 	ldrh.w	r1, [r3, #64]	; 0x40
 8008ab6:	2000      	movs	r0, #0
 8008ab8:	400a      	ands	r2, r1
 8008aba:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008abe:	4770      	bx	lr

08008ac0 <USB_DevInit>:
 8008ac0:	b084      	sub	sp, #16
 8008ac2:	f10d 0c04 	add.w	ip, sp, #4
 8008ac6:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 8008aca:	4603      	mov	r3, r0
 8008acc:	2200      	movs	r2, #0
 8008ace:	2101      	movs	r1, #1
 8008ad0:	4610      	mov	r0, r2
 8008ad2:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008ad6:	b004      	add	sp, #16
 8008ad8:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008adc:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008ae0:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8008ae4:	4770      	bx	lr
 8008ae6:	bf00      	nop

08008ae8 <USB_ActivateEndpoint>:
 8008ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008aea:	780a      	ldrb	r2, [r1, #0]
 8008aec:	f891 e003 	ldrb.w	lr, [r1, #3]
 8008af0:	f830 c022 	ldrh.w	ip, [r0, r2, lsl #2]
 8008af4:	4603      	mov	r3, r0
 8008af6:	f42c 4cec 	bic.w	ip, ip, #30208	; 0x7600
 8008afa:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8008afe:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8008b02:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8008b06:	f1be 0f03 	cmp.w	lr, #3
 8008b0a:	f200 815a 	bhi.w	8008dc2 <USB_ActivateEndpoint+0x2da>
 8008b0e:	e8df f00e 	tbb	[pc, lr]
 8008b12:	4e52      	.short	0x4e52
 8008b14:	0204      	.short	0x0204
 8008b16:	f44c 6cc0 	orr.w	ip, ip, #1536	; 0x600
 8008b1a:	2000      	movs	r0, #0
 8008b1c:	f248 0580 	movw	r5, #32896	; 0x8080
 8008b20:	ea4c 0c05 	orr.w	ip, ip, r5
 8008b24:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8008b28:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8008b2c:	4ca6      	ldr	r4, [pc, #664]	; (8008dc8 <USB_ActivateEndpoint+0x2e0>)
 8008b2e:	fa1f fc8c 	uxth.w	ip, ip
 8008b32:	ea0c 0c04 	and.w	ip, ip, r4
 8008b36:	ea4c 0c02 	orr.w	ip, ip, r2
 8008b3a:	ea45 050c 	orr.w	r5, r5, ip
 8008b3e:	f823 5022 	strh.w	r5, [r3, r2, lsl #2]
 8008b42:	7b0d      	ldrb	r5, [r1, #12]
 8008b44:	2d00      	cmp	r5, #0
 8008b46:	d17e      	bne.n	8008c46 <USB_ActivateEndpoint+0x15e>
 8008b48:	784d      	ldrb	r5, [r1, #1]
 8008b4a:	2d00      	cmp	r5, #0
 8008b4c:	f000 80dd 	beq.w	8008d0a <USB_ActivateEndpoint+0x222>
 8008b50:	88c9      	ldrh	r1, [r1, #6]
 8008b52:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8008b56:	0849      	lsrs	r1, r1, #1
 8008b58:	eb03 1602 	add.w	r6, r3, r2, lsl #4
 8008b5c:	0049      	lsls	r1, r1, #1
 8008b5e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8008b62:	b2ad      	uxth	r5, r5
 8008b64:	5371      	strh	r1, [r6, r5]
 8008b66:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008b6a:	064e      	lsls	r6, r1, #25
 8008b6c:	d509      	bpl.n	8008b82 <USB_ActivateEndpoint+0x9a>
 8008b6e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008b72:	b289      	uxth	r1, r1
 8008b74:	400c      	ands	r4, r1
 8008b76:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8008b7a:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
 8008b7e:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008b82:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008b86:	f1be 0f01 	cmp.w	lr, #1
 8008b8a:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008b8e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008b92:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8008b96:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8008b9a:	d04d      	beq.n	8008c38 <USB_ActivateEndpoint+0x150>
 8008b9c:	f081 0120 	eor.w	r1, r1, #32
 8008ba0:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008ba4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008ba8:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008bac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008bae:	2000      	movs	r0, #0
 8008bb0:	f44c 6c80 	orr.w	ip, ip, #1024	; 0x400
 8008bb4:	e7b2      	b.n	8008b1c <USB_ActivateEndpoint+0x34>
 8008bb6:	4670      	mov	r0, lr
 8008bb8:	f44c 7c00 	orr.w	ip, ip, #512	; 0x200
 8008bbc:	e7ae      	b.n	8008b1c <USB_ActivateEndpoint+0x34>
 8008bbe:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008bc2:	044d      	lsls	r5, r1, #17
 8008bc4:	d509      	bpl.n	8008bda <USB_ActivateEndpoint+0xf2>
 8008bc6:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008bca:	b289      	uxth	r1, r1
 8008bcc:	400c      	ands	r4, r1
 8008bce:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8008bd2:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8008bd6:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008bda:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008bde:	0649      	lsls	r1, r1, #25
 8008be0:	d50d      	bpl.n	8008bfe <USB_ActivateEndpoint+0x116>
 8008be2:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008be6:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008bea:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008bee:	0409      	lsls	r1, r1, #16
 8008bf0:	0c09      	lsrs	r1, r1, #16
 8008bf2:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008bf6:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8008bfa:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008bfe:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c02:	f1be 0f01 	cmp.w	lr, #1
 8008c06:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008c0a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008c0e:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8008c12:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8008c16:	bf18      	it	ne
 8008c18:	f081 0120 	eorne.w	r1, r1, #32
 8008c1c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008c20:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008c24:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008c28:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c2c:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008c30:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008c34:	0409      	lsls	r1, r1, #16
 8008c36:	0c09      	lsrs	r1, r1, #16
 8008c38:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008c3c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008c40:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008c46:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8008c4a:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 8008c4e:	fa1f fc8c 	uxth.w	ip, ip
 8008c52:	ea0c 0c04 	and.w	ip, ip, r4
 8008c56:	f44c 4c01 	orr.w	ip, ip, #33024	; 0x8100
 8008c5a:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 8008c5e:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8008c62:	f8b3 c050 	ldrh.w	ip, [r3, #80]	; 0x50
 8008c66:	890e      	ldrh	r6, [r1, #8]
 8008c68:	fa1f fc8c 	uxth.w	ip, ip
 8008c6c:	0876      	lsrs	r6, r6, #1
 8008c6e:	44bc      	add	ip, r7
 8008c70:	0076      	lsls	r6, r6, #1
 8008c72:	f8ac 6400 	strh.w	r6, [ip, #1024]	; 0x400
 8008c76:	f8b1 c00a 	ldrh.w	ip, [r1, #10]
 8008c7a:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8008c7e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8008c82:	b2ad      	uxth	r5, r5
 8008c84:	443d      	add	r5, r7
 8008c86:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8008c8a:	f8a5 c408 	strh.w	ip, [r5, #1032]	; 0x408
 8008c8e:	7849      	ldrb	r1, [r1, #1]
 8008c90:	2900      	cmp	r1, #0
 8008c92:	d194      	bne.n	8008bbe <USB_ActivateEndpoint+0xd6>
 8008c94:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c98:	044f      	lsls	r7, r1, #17
 8008c9a:	d509      	bpl.n	8008cb0 <USB_ActivateEndpoint+0x1c8>
 8008c9c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008ca0:	b289      	uxth	r1, r1
 8008ca2:	400c      	ands	r4, r1
 8008ca4:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8008ca8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8008cac:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008cb0:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cb4:	064e      	lsls	r6, r1, #25
 8008cb6:	d50d      	bpl.n	8008cd4 <USB_ActivateEndpoint+0x1ec>
 8008cb8:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cbc:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008cc0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008cc4:	0409      	lsls	r1, r1, #16
 8008cc6:	0c09      	lsrs	r1, r1, #16
 8008cc8:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008ccc:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8008cd0:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008cd4:	f248 0480 	movw	r4, #32896	; 0x8080
 8008cd8:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cdc:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008ce0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008ce4:	0409      	lsls	r1, r1, #16
 8008ce6:	0c09      	lsrs	r1, r1, #16
 8008ce8:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8008cec:	4321      	orrs	r1, r4
 8008cee:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008cf2:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cf6:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008cfa:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008cfe:	0409      	lsls	r1, r1, #16
 8008d00:	0c09      	lsrs	r1, r1, #16
 8008d02:	4321      	orrs	r1, r4
 8008d04:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008d08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d0a:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 8008d0e:	88cd      	ldrh	r5, [r1, #6]
 8008d10:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 8008d14:	b2a4      	uxth	r4, r4
 8008d16:	086d      	lsrs	r5, r5, #1
 8008d18:	006d      	lsls	r5, r5, #1
 8008d1a:	443c      	add	r4, r7
 8008d1c:	690e      	ldr	r6, [r1, #16]
 8008d1e:	f8a4 5408 	strh.w	r5, [r4, #1032]	; 0x408
 8008d22:	f8b3 1050 	ldrh.w	r1, [r3, #80]	; 0x50
 8008d26:	b289      	uxth	r1, r1
 8008d28:	4439      	add	r1, r7
 8008d2a:	b366      	cbz	r6, 8008d86 <USB_ActivateEndpoint+0x29e>
 8008d2c:	2e3e      	cmp	r6, #62	; 0x3e
 8008d2e:	d83c      	bhi.n	8008daa <USB_ActivateEndpoint+0x2c2>
 8008d30:	0874      	lsrs	r4, r6, #1
 8008d32:	07f5      	lsls	r5, r6, #31
 8008d34:	bf48      	it	mi
 8008d36:	3401      	addmi	r4, #1
 8008d38:	02a4      	lsls	r4, r4, #10
 8008d3a:	b2a4      	uxth	r4, r4
 8008d3c:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008d40:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d44:	0449      	lsls	r1, r1, #17
 8008d46:	d50d      	bpl.n	8008d64 <USB_ActivateEndpoint+0x27c>
 8008d48:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d4c:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008d50:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008d54:	0409      	lsls	r1, r1, #16
 8008d56:	0c09      	lsrs	r1, r1, #16
 8008d58:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8008d5c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008d60:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008d64:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d68:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008d6c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008d70:	0409      	lsls	r1, r1, #16
 8008d72:	0c09      	lsrs	r1, r1, #16
 8008d74:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8008d78:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008d7c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008d80:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008d84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d86:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8008d8a:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8008d8e:	0424      	lsls	r4, r4, #16
 8008d90:	0c24      	lsrs	r4, r4, #16
 8008d92:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008d96:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8008d9a:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8008d9e:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8008da2:	b2a4      	uxth	r4, r4
 8008da4:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008da8:	e7ca      	b.n	8008d40 <USB_ActivateEndpoint+0x258>
 8008daa:	0975      	lsrs	r5, r6, #5
 8008dac:	06f4      	lsls	r4, r6, #27
 8008dae:	4c07      	ldr	r4, [pc, #28]	; (8008dcc <USB_ActivateEndpoint+0x2e4>)
 8008db0:	bf08      	it	eq
 8008db2:	f105 35ff 	addeq.w	r5, r5, #4294967295
 8008db6:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
 8008dba:	b2a4      	uxth	r4, r4
 8008dbc:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008dc0:	e7be      	b.n	8008d40 <USB_ActivateEndpoint+0x258>
 8008dc2:	2001      	movs	r0, #1
 8008dc4:	e6aa      	b.n	8008b1c <USB_ActivateEndpoint+0x34>
 8008dc6:	bf00      	nop
 8008dc8:	ffff8f8f 	.word	0xffff8f8f
 8008dcc:	ffff8000 	.word	0xffff8000

08008dd0 <USB_DeactivateEndpoint>:
 8008dd0:	7b0b      	ldrb	r3, [r1, #12]
 8008dd2:	b9cb      	cbnz	r3, 8008e08 <USB_DeactivateEndpoint+0x38>
 8008dd4:	784b      	ldrb	r3, [r1, #1]
 8008dd6:	780a      	ldrb	r2, [r1, #0]
 8008dd8:	2b00      	cmp	r3, #0
 8008dda:	f000 80b1 	beq.w	8008f40 <USB_DeactivateEndpoint+0x170>
 8008dde:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008de2:	0659      	lsls	r1, r3, #25
 8008de4:	f100 80c5 	bmi.w	8008f72 <USB_DeactivateEndpoint+0x1a2>
 8008de8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008dec:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008df0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008df4:	041b      	lsls	r3, r3, #16
 8008df6:	0c1b      	lsrs	r3, r3, #16
 8008df8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008dfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008e00:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008e04:	2000      	movs	r0, #0
 8008e06:	4770      	bx	lr
 8008e08:	784b      	ldrb	r3, [r1, #1]
 8008e0a:	780a      	ldrb	r2, [r1, #0]
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d14b      	bne.n	8008ea8 <USB_DeactivateEndpoint+0xd8>
 8008e10:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e14:	0459      	lsls	r1, r3, #17
 8008e16:	d50d      	bpl.n	8008e34 <USB_DeactivateEndpoint+0x64>
 8008e18:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e1c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008e20:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e24:	041b      	lsls	r3, r3, #16
 8008e26:	0c1b      	lsrs	r3, r3, #16
 8008e28:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008e2c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008e30:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008e34:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e38:	065b      	lsls	r3, r3, #25
 8008e3a:	d50d      	bpl.n	8008e58 <USB_DeactivateEndpoint+0x88>
 8008e3c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e40:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008e44:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e48:	041b      	lsls	r3, r3, #16
 8008e4a:	0c1b      	lsrs	r3, r3, #16
 8008e4c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008e50:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008e54:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008e58:	f248 0180 	movw	r1, #32896	; 0x8080
 8008e5c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e60:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008e64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e68:	041b      	lsls	r3, r3, #16
 8008e6a:	0c1b      	lsrs	r3, r3, #16
 8008e6c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008e70:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008e74:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008e78:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e7c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008e80:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e84:	041b      	lsls	r3, r3, #16
 8008e86:	0c1b      	lsrs	r3, r3, #16
 8008e88:	430b      	orrs	r3, r1
 8008e8a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008e8e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008e92:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008e96:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008e9a:	041b      	lsls	r3, r3, #16
 8008e9c:	0c1b      	lsrs	r3, r3, #16
 8008e9e:	430b      	orrs	r3, r1
 8008ea0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008ea4:	2000      	movs	r0, #0
 8008ea6:	4770      	bx	lr
 8008ea8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008eac:	0459      	lsls	r1, r3, #17
 8008eae:	d50d      	bpl.n	8008ecc <USB_DeactivateEndpoint+0xfc>
 8008eb0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008eb4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008eb8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008ebc:	041b      	lsls	r3, r3, #16
 8008ebe:	0c1b      	lsrs	r3, r3, #16
 8008ec0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008ec4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008ec8:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008ecc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ed0:	065b      	lsls	r3, r3, #25
 8008ed2:	d50d      	bpl.n	8008ef0 <USB_DeactivateEndpoint+0x120>
 8008ed4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ed8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008edc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008ee0:	041b      	lsls	r3, r3, #16
 8008ee2:	0c1b      	lsrs	r3, r3, #16
 8008ee4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008ee8:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008eec:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008ef0:	f248 0180 	movw	r1, #32896	; 0x8080
 8008ef4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ef8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008efc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f00:	041b      	lsls	r3, r3, #16
 8008f02:	0c1b      	lsrs	r3, r3, #16
 8008f04:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008f08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008f0c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f10:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f14:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f18:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008f1c:	041b      	lsls	r3, r3, #16
 8008f1e:	0c1b      	lsrs	r3, r3, #16
 8008f20:	430b      	orrs	r3, r1
 8008f22:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f26:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f2a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008f2e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f32:	041b      	lsls	r3, r3, #16
 8008f34:	0c1b      	lsrs	r3, r3, #16
 8008f36:	430b      	orrs	r3, r1
 8008f38:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f3c:	2000      	movs	r0, #0
 8008f3e:	4770      	bx	lr
 8008f40:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f44:	045b      	lsls	r3, r3, #17
 8008f46:	d50d      	bpl.n	8008f64 <USB_DeactivateEndpoint+0x194>
 8008f48:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f4c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f50:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f54:	041b      	lsls	r3, r3, #16
 8008f56:	0c1b      	lsrs	r3, r3, #16
 8008f58:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008f5c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008f60:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f64:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f68:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008f6c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f70:	e740      	b.n	8008df4 <USB_DeactivateEndpoint+0x24>
 8008f72:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f76:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f7a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f7e:	041b      	lsls	r3, r3, #16
 8008f80:	0c1b      	lsrs	r3, r3, #16
 8008f82:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008f86:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008f8a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f8e:	e72b      	b.n	8008de8 <USB_DeactivateEndpoint+0x18>

08008f90 <USB_EPStartXfer>:
 8008f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f94:	784b      	ldrb	r3, [r1, #1]
 8008f96:	4602      	mov	r2, r0
 8008f98:	2b01      	cmp	r3, #1
 8008f9a:	d06b      	beq.n	8009074 <USB_EPStartXfer+0xe4>
 8008f9c:	7b08      	ldrb	r0, [r1, #12]
 8008f9e:	2800      	cmp	r0, #0
 8008fa0:	d037      	beq.n	8009012 <USB_EPStartXfer+0x82>
 8008fa2:	78c8      	ldrb	r0, [r1, #3]
 8008fa4:	2802      	cmp	r0, #2
 8008fa6:	f000 812d 	beq.w	8009204 <USB_EPStartXfer+0x274>
 8008faa:	2801      	cmp	r0, #1
 8008fac:	f040 810a 	bne.w	80091c4 <USB_EPStartXfer+0x234>
 8008fb0:	6988      	ldr	r0, [r1, #24]
 8008fb2:	690c      	ldr	r4, [r1, #16]
 8008fb4:	42a0      	cmp	r0, r4
 8008fb6:	bf94      	ite	ls
 8008fb8:	2500      	movls	r5, #0
 8008fba:	1b05      	subhi	r5, r0, r4
 8008fbc:	618d      	str	r5, [r1, #24]
 8008fbe:	bf88      	it	hi
 8008fc0:	4620      	movhi	r0, r4
 8008fc2:	2b00      	cmp	r3, #0
 8008fc4:	f040 811b 	bne.w	80091fe <USB_EPStartXfer+0x26e>
 8008fc8:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8008fcc:	780b      	ldrb	r3, [r1, #0]
 8008fce:	b2a4      	uxth	r4, r4
 8008fd0:	f202 4504 	addw	r5, r2, #1028	; 0x404
 8008fd4:	011b      	lsls	r3, r3, #4
 8008fd6:	442c      	add	r4, r5
 8008fd8:	2800      	cmp	r0, #0
 8008fda:	f000 8251 	beq.w	8009480 <USB_EPStartXfer+0x4f0>
 8008fde:	283e      	cmp	r0, #62	; 0x3e
 8008fe0:	f200 80f3 	bhi.w	80091ca <USB_EPStartXfer+0x23a>
 8008fe4:	0845      	lsrs	r5, r0, #1
 8008fe6:	462e      	mov	r6, r5
 8008fe8:	f010 0001 	ands.w	r0, r0, #1
 8008fec:	bf18      	it	ne
 8008fee:	1c6e      	addne	r6, r5, #1
 8008ff0:	02b6      	lsls	r6, r6, #10
 8008ff2:	b2b6      	uxth	r6, r6
 8008ff4:	52e6      	strh	r6, [r4, r3]
 8008ff6:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8008ffa:	b2a6      	uxth	r6, r4
 8008ffc:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009000:	4434      	add	r4, r6
 8009002:	b100      	cbz	r0, 8009006 <USB_EPStartXfer+0x76>
 8009004:	3501      	adds	r5, #1
 8009006:	02ad      	lsls	r5, r5, #10
 8009008:	b2a8      	uxth	r0, r5
 800900a:	52e0      	strh	r0, [r4, r3]
 800900c:	f891 c000 	ldrb.w	ip, [r1]
 8009010:	e01d      	b.n	800904e <USB_EPStartXfer+0xbe>
 8009012:	698c      	ldr	r4, [r1, #24]
 8009014:	690b      	ldr	r3, [r1, #16]
 8009016:	780d      	ldrb	r5, [r1, #0]
 8009018:	429c      	cmp	r4, r3
 800901a:	bf84      	itt	hi
 800901c:	1ae0      	subhi	r0, r4, r3
 800901e:	461c      	movhi	r4, r3
 8009020:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009024:	6188      	str	r0, [r1, #24]
 8009026:	b29b      	uxth	r3, r3
 8009028:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 800902c:	012d      	lsls	r5, r5, #4
 800902e:	4403      	add	r3, r0
 8009030:	2c00      	cmp	r4, #0
 8009032:	f000 80b7 	beq.w	80091a4 <USB_EPStartXfer+0x214>
 8009036:	2c3e      	cmp	r4, #62	; 0x3e
 8009038:	f200 8129 	bhi.w	800928e <USB_EPStartXfer+0x2fe>
 800903c:	0860      	lsrs	r0, r4, #1
 800903e:	07e4      	lsls	r4, r4, #31
 8009040:	bf48      	it	mi
 8009042:	3001      	addmi	r0, #1
 8009044:	0280      	lsls	r0, r0, #10
 8009046:	b280      	uxth	r0, r0
 8009048:	52e8      	strh	r0, [r5, r3]
 800904a:	f891 c000 	ldrb.w	ip, [r1]
 800904e:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 8009052:	2000      	movs	r0, #0
 8009054:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009058:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800905c:	041b      	lsls	r3, r3, #16
 800905e:	0c1b      	lsrs	r3, r3, #16
 8009060:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009064:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009068:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800906c:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 8009070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009074:	690d      	ldr	r5, [r1, #16]
 8009076:	6988      	ldr	r0, [r1, #24]
 8009078:	7b0b      	ldrb	r3, [r1, #12]
 800907a:	42a8      	cmp	r0, r5
 800907c:	bf28      	it	cs
 800907e:	4628      	movcs	r0, r5
 8009080:	2b00      	cmp	r3, #0
 8009082:	d05d      	beq.n	8009140 <USB_EPStartXfer+0x1b0>
 8009084:	78cb      	ldrb	r3, [r1, #3]
 8009086:	2b02      	cmp	r3, #2
 8009088:	f000 810e 	beq.w	80092a8 <USB_EPStartXfer+0x318>
 800908c:	f891 8000 	ldrb.w	r8, [r1]
 8009090:	6a0b      	ldr	r3, [r1, #32]
 8009092:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009096:	1a1b      	subs	r3, r3, r0
 8009098:	f424 44e0 	bic.w	r4, r4, #28672	; 0x7000
 800909c:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 80090a0:	0424      	lsls	r4, r4, #16
 80090a2:	0c24      	lsrs	r4, r4, #16
 80090a4:	f444 4401 	orr.w	r4, r4, #33024	; 0x8100
 80090a8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80090ac:	f822 4028 	strh.w	r4, [r2, r8, lsl #2]
 80090b0:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 80090b4:	620b      	str	r3, [r1, #32]
 80090b6:	f014 0f40 	tst.w	r4, #64	; 0x40
 80090ba:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80090be:	ea4f 1808 	mov.w	r8, r8, lsl #4
 80090c2:	b2a6      	uxth	r6, r4
 80090c4:	f000 814a 	beq.w	800935c <USB_EPStartXfer+0x3cc>
 80090c8:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80090cc:	4434      	add	r4, r6
 80090ce:	b286      	uxth	r6, r0
 80090d0:	f824 6008 	strh.w	r6, [r4, r8]
 80090d4:	894c      	ldrh	r4, [r1, #10]
 80090d6:	3601      	adds	r6, #1
 80090d8:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 80090dc:	0876      	lsrs	r6, r6, #1
 80090de:	f8d1 9014 	ldr.w	r9, [r1, #20]
 80090e2:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80090e6:	d008      	beq.n	80090fa <USB_EPStartXfer+0x16a>
 80090e8:	46cc      	mov	ip, r9
 80090ea:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80090ee:	f83c eb02 	ldrh.w	lr, [ip], #2
 80090f2:	f824 eb04 	strh.w	lr, [r4], #4
 80090f6:	42a6      	cmp	r6, r4
 80090f8:	d1f9      	bne.n	80090ee <USB_EPStartXfer+0x15e>
 80090fa:	eb09 0400 	add.w	r4, r9, r0
 80090fe:	429d      	cmp	r5, r3
 8009100:	614c      	str	r4, [r1, #20]
 8009102:	f0c0 81b7 	bcc.w	8009474 <USB_EPStartXfer+0x4e4>
 8009106:	2500      	movs	r5, #0
 8009108:	620d      	str	r5, [r1, #32]
 800910a:	2b00      	cmp	r3, #0
 800910c:	d036      	beq.n	800917c <USB_EPStartXfer+0x1ec>
 800910e:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009112:	b285      	uxth	r5, r0
 8009114:	f202 4004 	addw	r0, r2, #1028	; 0x404
 8009118:	4428      	add	r0, r5
 800911a:	b29d      	uxth	r5, r3
 800911c:	462b      	mov	r3, r5
 800911e:	f820 5008 	strh.w	r5, [r0, r8]
 8009122:	8908      	ldrh	r0, [r1, #8]
 8009124:	3301      	adds	r3, #1
 8009126:	085b      	lsrs	r3, r3, #1
 8009128:	eb07 0040 	add.w	r0, r7, r0, lsl #1
 800912c:	d026      	beq.n	800917c <USB_EPStartXfer+0x1ec>
 800912e:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8009132:	f834 3b02 	ldrh.w	r3, [r4], #2
 8009136:	f820 3b04 	strh.w	r3, [r0], #4
 800913a:	4285      	cmp	r5, r0
 800913c:	d1f9      	bne.n	8009132 <USB_EPStartXfer+0x1a2>
 800913e:	e01d      	b.n	800917c <USB_EPStartXfer+0x1ec>
 8009140:	b284      	uxth	r4, r0
 8009142:	694b      	ldr	r3, [r1, #20]
 8009144:	88cd      	ldrh	r5, [r1, #6]
 8009146:	f104 0e01 	add.w	lr, r4, #1
 800914a:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 800914e:	ea5f 0e5e 	movs.w	lr, lr, lsr #1
 8009152:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 8009156:	bf18      	it	ne
 8009158:	eb03 0e4e 	addne.w	lr, r3, lr, lsl #1
 800915c:	d005      	beq.n	800916a <USB_EPStartXfer+0x1da>
 800915e:	f833 cb02 	ldrh.w	ip, [r3], #2
 8009162:	4573      	cmp	r3, lr
 8009164:	f820 cb04 	strh.w	ip, [r0], #4
 8009168:	d1f9      	bne.n	800915e <USB_EPStartXfer+0x1ce>
 800916a:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 800916e:	7808      	ldrb	r0, [r1, #0]
 8009170:	b29d      	uxth	r5, r3
 8009172:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009176:	0100      	lsls	r0, r0, #4
 8009178:	442b      	add	r3, r5
 800917a:	52c4      	strh	r4, [r0, r3]
 800917c:	7809      	ldrb	r1, [r1, #0]
 800917e:	2000      	movs	r0, #0
 8009180:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8009184:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009188:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800918c:	041b      	lsls	r3, r3, #16
 800918e:	0c1b      	lsrs	r3, r3, #16
 8009190:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8009194:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009198:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800919c:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 80091a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091a4:	5ae8      	ldrh	r0, [r5, r3]
 80091a6:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 80091aa:	0400      	lsls	r0, r0, #16
 80091ac:	0c00      	lsrs	r0, r0, #16
 80091ae:	52e8      	strh	r0, [r5, r3]
 80091b0:	5ae8      	ldrh	r0, [r5, r3]
 80091b2:	ea6f 4040 	mvn.w	r0, r0, lsl #17
 80091b6:	ea6f 4050 	mvn.w	r0, r0, lsr #17
 80091ba:	b280      	uxth	r0, r0
 80091bc:	52e8      	strh	r0, [r5, r3]
 80091be:	f891 c000 	ldrb.w	ip, [r1]
 80091c2:	e744      	b.n	800904e <USB_EPStartXfer+0xbe>
 80091c4:	2001      	movs	r0, #1
 80091c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091ca:	0945      	lsrs	r5, r0, #5
 80091cc:	462f      	mov	r7, r5
 80091ce:	f010 001f 	ands.w	r0, r0, #31
 80091d2:	bf08      	it	eq
 80091d4:	f105 37ff 	addeq.w	r7, r5, #4294967295
 80091d8:	462e      	mov	r6, r5
 80091da:	4dbb      	ldr	r5, [pc, #748]	; (80094c8 <USB_EPStartXfer+0x538>)
 80091dc:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 80091e0:	b2ad      	uxth	r5, r5
 80091e2:	52e5      	strh	r5, [r4, r3]
 80091e4:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80091e8:	b2a5      	uxth	r5, r4
 80091ea:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80091ee:	442c      	add	r4, r5
 80091f0:	b900      	cbnz	r0, 80091f4 <USB_EPStartXfer+0x264>
 80091f2:	3e01      	subs	r6, #1
 80091f4:	48b4      	ldr	r0, [pc, #720]	; (80094c8 <USB_EPStartXfer+0x538>)
 80091f6:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 80091fa:	b280      	uxth	r0, r0
 80091fc:	52e0      	strh	r0, [r4, r3]
 80091fe:	f891 c000 	ldrb.w	ip, [r1]
 8009202:	e724      	b.n	800904e <USB_EPStartXfer+0xbe>
 8009204:	bb13      	cbnz	r3, 800924c <USB_EPStartXfer+0x2bc>
 8009206:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 800920a:	780b      	ldrb	r3, [r1, #0]
 800920c:	b284      	uxth	r4, r0
 800920e:	f202 4004 	addw	r0, r2, #1028	; 0x404
 8009212:	4420      	add	r0, r4
 8009214:	690c      	ldr	r4, [r1, #16]
 8009216:	011b      	lsls	r3, r3, #4
 8009218:	2c00      	cmp	r4, #0
 800921a:	f000 8109 	beq.w	8009430 <USB_EPStartXfer+0x4a0>
 800921e:	2c3e      	cmp	r4, #62	; 0x3e
 8009220:	f200 818e 	bhi.w	8009540 <USB_EPStartXfer+0x5b0>
 8009224:	0865      	lsrs	r5, r4, #1
 8009226:	462e      	mov	r6, r5
 8009228:	f014 0401 	ands.w	r4, r4, #1
 800922c:	bf18      	it	ne
 800922e:	1c6e      	addne	r6, r5, #1
 8009230:	02b6      	lsls	r6, r6, #10
 8009232:	b2b6      	uxth	r6, r6
 8009234:	52c6      	strh	r6, [r0, r3]
 8009236:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 800923a:	f202 460c 	addw	r6, r2, #1036	; 0x40c
 800923e:	b280      	uxth	r0, r0
 8009240:	4406      	add	r6, r0
 8009242:	b104      	cbz	r4, 8009246 <USB_EPStartXfer+0x2b6>
 8009244:	3501      	adds	r5, #1
 8009246:	02ad      	lsls	r5, r5, #10
 8009248:	b2a8      	uxth	r0, r5
 800924a:	52f0      	strh	r0, [r6, r3]
 800924c:	69cb      	ldr	r3, [r1, #28]
 800924e:	2b00      	cmp	r3, #0
 8009250:	d0d5      	beq.n	80091fe <USB_EPStartXfer+0x26e>
 8009252:	f244 0340 	movw	r3, #16448	; 0x4040
 8009256:	f891 c000 	ldrb.w	ip, [r1]
 800925a:	f832 002c 	ldrh.w	r0, [r2, ip, lsl #2]
 800925e:	ea03 0400 	and.w	r4, r3, r0
 8009262:	4383      	bics	r3, r0
 8009264:	d002      	beq.n	800926c <USB_EPStartXfer+0x2dc>
 8009266:	2c00      	cmp	r4, #0
 8009268:	f47f aef1 	bne.w	800904e <USB_EPStartXfer+0xbe>
 800926c:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 8009270:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009274:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009278:	041b      	lsls	r3, r3, #16
 800927a:	0c1b      	lsrs	r3, r3, #16
 800927c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009280:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009284:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 8009288:	f891 c000 	ldrb.w	ip, [r1]
 800928c:	e6df      	b.n	800904e <USB_EPStartXfer+0xbe>
 800928e:	0966      	lsrs	r6, r4, #5
 8009290:	06e0      	lsls	r0, r4, #27
 8009292:	488d      	ldr	r0, [pc, #564]	; (80094c8 <USB_EPStartXfer+0x538>)
 8009294:	bf08      	it	eq
 8009296:	f106 36ff 	addeq.w	r6, r6, #4294967295
 800929a:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 800929e:	b280      	uxth	r0, r0
 80092a0:	52e8      	strh	r0, [r5, r3]
 80092a2:	f891 c000 	ldrb.w	ip, [r1]
 80092a6:	e6d2      	b.n	800904e <USB_EPStartXfer+0xbe>
 80092a8:	6a0c      	ldr	r4, [r1, #32]
 80092aa:	42a5      	cmp	r5, r4
 80092ac:	f080 8094 	bcs.w	80093d8 <USB_EPStartXfer+0x448>
 80092b0:	780e      	ldrb	r6, [r1, #0]
 80092b2:	1a24      	subs	r4, r4, r0
 80092b4:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 80092b8:	ea4f 1906 	mov.w	r9, r6, lsl #4
 80092bc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80092c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80092c4:	041b      	lsls	r3, r3, #16
 80092c6:	0c1b      	lsrs	r3, r3, #16
 80092c8:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80092cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80092d0:	f822 3026 	strh.w	r3, [r2, r6, lsl #2]
 80092d4:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 80092d8:	620c      	str	r4, [r1, #32]
 80092da:	f013 0f40 	tst.w	r3, #64	; 0x40
 80092de:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80092e2:	b29e      	uxth	r6, r3
 80092e4:	f000 80f2 	beq.w	80094cc <USB_EPStartXfer+0x53c>
 80092e8:	f202 430c 	addw	r3, r2, #1036	; 0x40c
 80092ec:	4433      	add	r3, r6
 80092ee:	fa1f fa80 	uxth.w	sl, r0
 80092f2:	f823 a009 	strh.w	sl, [r3, r9]
 80092f6:	894e      	ldrh	r6, [r1, #10]
 80092f8:	f10a 0801 	add.w	r8, sl, #1
 80092fc:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009300:	ea5f 0858 	movs.w	r8, r8, lsr #1
 8009304:	694f      	ldr	r7, [r1, #20]
 8009306:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 800930a:	d008      	beq.n	800931e <USB_EPStartXfer+0x38e>
 800930c:	46bc      	mov	ip, r7
 800930e:	eb06 0b88 	add.w	fp, r6, r8, lsl #2
 8009312:	f83c eb02 	ldrh.w	lr, [ip], #2
 8009316:	f826 eb04 	strh.w	lr, [r6], #4
 800931a:	45b3      	cmp	fp, r6
 800931c:	d1f9      	bne.n	8009312 <USB_EPStartXfer+0x382>
 800931e:	4407      	add	r7, r0
 8009320:	42a5      	cmp	r5, r4
 8009322:	614f      	str	r7, [r1, #20]
 8009324:	f080 8127 	bcs.w	8009576 <USB_EPStartXfer+0x5e6>
 8009328:	1a24      	subs	r4, r4, r0
 800932a:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 800932e:	620c      	str	r4, [r1, #32]
 8009330:	b284      	uxth	r4, r0
 8009332:	f202 4004 	addw	r0, r2, #1028	; 0x404
 8009336:	4420      	add	r0, r4
 8009338:	f820 a009 	strh.w	sl, [r0, r9]
 800933c:	8908      	ldrh	r0, [r1, #8]
 800933e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8009342:	f1b8 0f00 	cmp.w	r8, #0
 8009346:	f43f af19 	beq.w	800917c <USB_EPStartXfer+0x1ec>
 800934a:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 800934e:	f837 0b02 	ldrh.w	r0, [r7], #2
 8009352:	f823 0b04 	strh.w	r0, [r3], #4
 8009356:	429c      	cmp	r4, r3
 8009358:	d1f9      	bne.n	800934e <USB_EPStartXfer+0x3be>
 800935a:	e70f      	b.n	800917c <USB_EPStartXfer+0x1ec>
 800935c:	f202 4404 	addw	r4, r2, #1028	; 0x404
 8009360:	4434      	add	r4, r6
 8009362:	b286      	uxth	r6, r0
 8009364:	f824 6008 	strh.w	r6, [r4, r8]
 8009368:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 800936c:	3601      	adds	r6, #1
 800936e:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 8009372:	0876      	lsrs	r6, r6, #1
 8009374:	f8d1 9014 	ldr.w	r9, [r1, #20]
 8009378:	eb07 0c4c 	add.w	ip, r7, ip, lsl #1
 800937c:	d008      	beq.n	8009390 <USB_EPStartXfer+0x400>
 800937e:	464c      	mov	r4, r9
 8009380:	eb09 0646 	add.w	r6, r9, r6, lsl #1
 8009384:	f834 eb02 	ldrh.w	lr, [r4], #2
 8009388:	42b4      	cmp	r4, r6
 800938a:	f82c eb04 	strh.w	lr, [ip], #4
 800938e:	d1f9      	bne.n	8009384 <USB_EPStartXfer+0x3f4>
 8009390:	eb09 0400 	add.w	r4, r9, r0
 8009394:	429d      	cmp	r5, r3
 8009396:	614c      	str	r4, [r1, #20]
 8009398:	d36f      	bcc.n	800947a <USB_EPStartXfer+0x4ea>
 800939a:	2500      	movs	r5, #0
 800939c:	620d      	str	r5, [r1, #32]
 800939e:	2b00      	cmp	r3, #0
 80093a0:	f43f aeec 	beq.w	800917c <USB_EPStartXfer+0x1ec>
 80093a4:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80093a8:	b285      	uxth	r5, r0
 80093aa:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 80093ae:	4428      	add	r0, r5
 80093b0:	b29d      	uxth	r5, r3
 80093b2:	462b      	mov	r3, r5
 80093b4:	f820 5008 	strh.w	r5, [r0, r8]
 80093b8:	8948      	ldrh	r0, [r1, #10]
 80093ba:	3301      	adds	r3, #1
 80093bc:	085b      	lsrs	r3, r3, #1
 80093be:	eb07 0740 	add.w	r7, r7, r0, lsl #1
 80093c2:	f43f aedb 	beq.w	800917c <USB_EPStartXfer+0x1ec>
 80093c6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 80093ca:	f834 0b02 	ldrh.w	r0, [r4], #2
 80093ce:	f827 0b04 	strh.w	r0, [r7], #4
 80093d2:	429f      	cmp	r7, r3
 80093d4:	d1f9      	bne.n	80093ca <USB_EPStartXfer+0x43a>
 80093d6:	e6d1      	b.n	800917c <USB_EPStartXfer+0x1ec>
 80093d8:	7808      	ldrb	r0, [r1, #0]
 80093da:	f832 3020 	ldrh.w	r3, [r2, r0, lsl #2]
 80093de:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 80093e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80093e6:	041b      	lsls	r3, r3, #16
 80093e8:	0c1b      	lsrs	r3, r3, #16
 80093ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80093ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80093f2:	f822 3020 	strh.w	r3, [r2, r0, lsl #2]
 80093f6:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80093fa:	0100      	lsls	r0, r0, #4
 80093fc:	b29d      	uxth	r5, r3
 80093fe:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009402:	442b      	add	r3, r5
 8009404:	b2a5      	uxth	r5, r4
 8009406:	521d      	strh	r5, [r3, r0]
 8009408:	b2a0      	uxth	r0, r4
 800940a:	890d      	ldrh	r5, [r1, #8]
 800940c:	3001      	adds	r0, #1
 800940e:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009412:	0840      	lsrs	r0, r0, #1
 8009414:	694c      	ldr	r4, [r1, #20]
 8009416:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 800941a:	f43f aeaf 	beq.w	800917c <USB_EPStartXfer+0x1ec>
 800941e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8009422:	f834 5b02 	ldrh.w	r5, [r4], #2
 8009426:	f823 5b04 	strh.w	r5, [r3], #4
 800942a:	4298      	cmp	r0, r3
 800942c:	d1f9      	bne.n	8009422 <USB_EPStartXfer+0x492>
 800942e:	e6a5      	b.n	800917c <USB_EPStartXfer+0x1ec>
 8009430:	5ac4      	ldrh	r4, [r0, r3]
 8009432:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009436:	0424      	lsls	r4, r4, #16
 8009438:	0c24      	lsrs	r4, r4, #16
 800943a:	52c4      	strh	r4, [r0, r3]
 800943c:	5ac5      	ldrh	r5, [r0, r3]
 800943e:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009442:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8009446:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 800944a:	b2ad      	uxth	r5, r5
 800944c:	52c5      	strh	r5, [r0, r3]
 800944e:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009452:	b285      	uxth	r5, r0
 8009454:	4620      	mov	r0, r4
 8009456:	4428      	add	r0, r5
 8009458:	5ac4      	ldrh	r4, [r0, r3]
 800945a:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 800945e:	0424      	lsls	r4, r4, #16
 8009460:	0c24      	lsrs	r4, r4, #16
 8009462:	52c4      	strh	r4, [r0, r3]
 8009464:	5ac4      	ldrh	r4, [r0, r3]
 8009466:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 800946a:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 800946e:	b2a4      	uxth	r4, r4
 8009470:	52c4      	strh	r4, [r0, r3]
 8009472:	e6eb      	b.n	800924c <USB_EPStartXfer+0x2bc>
 8009474:	1a1d      	subs	r5, r3, r0
 8009476:	4603      	mov	r3, r0
 8009478:	e646      	b.n	8009108 <USB_EPStartXfer+0x178>
 800947a:	1a1d      	subs	r5, r3, r0
 800947c:	4603      	mov	r3, r0
 800947e:	e78d      	b.n	800939c <USB_EPStartXfer+0x40c>
 8009480:	5ae0      	ldrh	r0, [r4, r3]
 8009482:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8009486:	0400      	lsls	r0, r0, #16
 8009488:	0c00      	lsrs	r0, r0, #16
 800948a:	52e0      	strh	r0, [r4, r3]
 800948c:	5ae5      	ldrh	r5, [r4, r3]
 800948e:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009492:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8009496:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 800949a:	b2ad      	uxth	r5, r5
 800949c:	52e5      	strh	r5, [r4, r3]
 800949e:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80094a2:	b2a4      	uxth	r4, r4
 80094a4:	4420      	add	r0, r4
 80094a6:	5ac4      	ldrh	r4, [r0, r3]
 80094a8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 80094ac:	0424      	lsls	r4, r4, #16
 80094ae:	0c24      	lsrs	r4, r4, #16
 80094b0:	52c4      	strh	r4, [r0, r3]
 80094b2:	5ac4      	ldrh	r4, [r0, r3]
 80094b4:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 80094b8:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 80094bc:	b2a4      	uxth	r4, r4
 80094be:	52c4      	strh	r4, [r0, r3]
 80094c0:	f891 c000 	ldrb.w	ip, [r1]
 80094c4:	e5c3      	b.n	800904e <USB_EPStartXfer+0xbe>
 80094c6:	bf00      	nop
 80094c8:	ffff8000 	.word	0xffff8000
 80094cc:	f202 4304 	addw	r3, r2, #1028	; 0x404
 80094d0:	4433      	add	r3, r6
 80094d2:	fa1f fa80 	uxth.w	sl, r0
 80094d6:	f823 a009 	strh.w	sl, [r3, r9]
 80094da:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 80094de:	f10a 0801 	add.w	r8, sl, #1
 80094e2:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 80094e6:	ea5f 0858 	movs.w	r8, r8, lsr #1
 80094ea:	694f      	ldr	r7, [r1, #20]
 80094ec:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80094f0:	d008      	beq.n	8009504 <USB_EPStartXfer+0x574>
 80094f2:	463e      	mov	r6, r7
 80094f4:	eb07 0b48 	add.w	fp, r7, r8, lsl #1
 80094f8:	f836 eb02 	ldrh.w	lr, [r6], #2
 80094fc:	45b3      	cmp	fp, r6
 80094fe:	f82c eb04 	strh.w	lr, [ip], #4
 8009502:	d1f9      	bne.n	80094f8 <USB_EPStartXfer+0x568>
 8009504:	4407      	add	r7, r0
 8009506:	42a5      	cmp	r5, r4
 8009508:	614f      	str	r7, [r1, #20]
 800950a:	d23e      	bcs.n	800958a <USB_EPStartXfer+0x5fa>
 800950c:	1a24      	subs	r4, r4, r0
 800950e:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009512:	620c      	str	r4, [r1, #32]
 8009514:	b284      	uxth	r4, r0
 8009516:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 800951a:	4420      	add	r0, r4
 800951c:	f820 a009 	strh.w	sl, [r0, r9]
 8009520:	8948      	ldrh	r0, [r1, #10]
 8009522:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8009526:	f1b8 0f00 	cmp.w	r8, #0
 800952a:	f43f ae27 	beq.w	800917c <USB_EPStartXfer+0x1ec>
 800952e:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 8009532:	f837 0b02 	ldrh.w	r0, [r7], #2
 8009536:	f823 0b04 	strh.w	r0, [r3], #4
 800953a:	429c      	cmp	r4, r3
 800953c:	d1f9      	bne.n	8009532 <USB_EPStartXfer+0x5a2>
 800953e:	e61d      	b.n	800917c <USB_EPStartXfer+0x1ec>
 8009540:	0965      	lsrs	r5, r4, #5
 8009542:	462f      	mov	r7, r5
 8009544:	f014 041f 	ands.w	r4, r4, #31
 8009548:	bf08      	it	eq
 800954a:	f105 37ff 	addeq.w	r7, r5, #4294967295
 800954e:	462e      	mov	r6, r5
 8009550:	4d13      	ldr	r5, [pc, #76]	; (80095a0 <USB_EPStartXfer+0x610>)
 8009552:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 8009556:	b2ad      	uxth	r5, r5
 8009558:	52c5      	strh	r5, [r0, r3]
 800955a:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 800955e:	f202 450c 	addw	r5, r2, #1036	; 0x40c
 8009562:	b280      	uxth	r0, r0
 8009564:	4405      	add	r5, r0
 8009566:	b904      	cbnz	r4, 800956a <USB_EPStartXfer+0x5da>
 8009568:	3e01      	subs	r6, #1
 800956a:	480d      	ldr	r0, [pc, #52]	; (80095a0 <USB_EPStartXfer+0x610>)
 800956c:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009570:	b280      	uxth	r0, r0
 8009572:	52e8      	strh	r0, [r5, r3]
 8009574:	e66a      	b.n	800924c <USB_EPStartXfer+0x2bc>
 8009576:	fa1f f884 	uxth.w	r8, r4
 800957a:	f108 0801 	add.w	r8, r8, #1
 800957e:	fa1f fa84 	uxth.w	sl, r4
 8009582:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8009586:	2400      	movs	r4, #0
 8009588:	e6cf      	b.n	800932a <USB_EPStartXfer+0x39a>
 800958a:	fa1f f884 	uxth.w	r8, r4
 800958e:	f108 0801 	add.w	r8, r8, #1
 8009592:	fa1f fa84 	uxth.w	sl, r4
 8009596:	ea4f 0858 	mov.w	r8, r8, lsr #1
 800959a:	2400      	movs	r4, #0
 800959c:	e7b7      	b.n	800950e <USB_EPStartXfer+0x57e>
 800959e:	bf00      	nop
 80095a0:	ffff8000 	.word	0xffff8000

080095a4 <USB_EPSetStall>:
 80095a4:	784b      	ldrb	r3, [r1, #1]
 80095a6:	780a      	ldrb	r2, [r1, #0]
 80095a8:	b18b      	cbz	r3, 80095ce <USB_EPSetStall+0x2a>
 80095aa:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80095ae:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80095b2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80095b6:	041b      	lsls	r3, r3, #16
 80095b8:	0c1b      	lsrs	r3, r3, #16
 80095ba:	f083 0310 	eor.w	r3, r3, #16
 80095be:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80095c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80095c6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80095ca:	2000      	movs	r0, #0
 80095cc:	4770      	bx	lr
 80095ce:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80095d2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80095d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80095da:	041b      	lsls	r3, r3, #16
 80095dc:	0c1b      	lsrs	r3, r3, #16
 80095de:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80095e2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80095e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80095ea:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80095ee:	2000      	movs	r0, #0
 80095f0:	4770      	bx	lr
 80095f2:	bf00      	nop

080095f4 <USB_EPClearStall>:
 80095f4:	7b0b      	ldrb	r3, [r1, #12]
 80095f6:	bb3b      	cbnz	r3, 8009648 <USB_EPClearStall+0x54>
 80095f8:	784b      	ldrb	r3, [r1, #1]
 80095fa:	780a      	ldrb	r2, [r1, #0]
 80095fc:	b333      	cbz	r3, 800964c <USB_EPClearStall+0x58>
 80095fe:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009602:	065b      	lsls	r3, r3, #25
 8009604:	d50d      	bpl.n	8009622 <USB_EPClearStall+0x2e>
 8009606:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800960a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800960e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009612:	041b      	lsls	r3, r3, #16
 8009614:	0c1b      	lsrs	r3, r3, #16
 8009616:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800961a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800961e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009622:	78cb      	ldrb	r3, [r1, #3]
 8009624:	2b01      	cmp	r3, #1
 8009626:	d00f      	beq.n	8009648 <USB_EPClearStall+0x54>
 8009628:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800962c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009630:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009634:	041b      	lsls	r3, r3, #16
 8009636:	0c1b      	lsrs	r3, r3, #16
 8009638:	f083 0320 	eor.w	r3, r3, #32
 800963c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009640:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009644:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009648:	2000      	movs	r0, #0
 800964a:	4770      	bx	lr
 800964c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009650:	045b      	lsls	r3, r3, #17
 8009652:	d50d      	bpl.n	8009670 <USB_EPClearStall+0x7c>
 8009654:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009658:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800965c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009660:	041b      	lsls	r3, r3, #16
 8009662:	0c1b      	lsrs	r3, r3, #16
 8009664:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009668:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800966c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009670:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009674:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009678:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800967c:	041b      	lsls	r3, r3, #16
 800967e:	0c1b      	lsrs	r3, r3, #16
 8009680:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009684:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009688:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800968c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009690:	2000      	movs	r0, #0
 8009692:	4770      	bx	lr

08009694 <USB_SetDevAddress>:
 8009694:	b911      	cbnz	r1, 800969c <USB_SetDevAddress+0x8>
 8009696:	2380      	movs	r3, #128	; 0x80
 8009698:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 800969c:	2000      	movs	r0, #0
 800969e:	4770      	bx	lr

080096a0 <USB_DevConnect>:
 80096a0:	2000      	movs	r0, #0
 80096a2:	4770      	bx	lr

080096a4 <USB_ReadInterrupts>:
 80096a4:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 80096a8:	b280      	uxth	r0, r0
 80096aa:	4770      	bx	lr

080096ac <USB_WritePMA>:
 80096ac:	3301      	adds	r3, #1
 80096ae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80096b2:	085b      	lsrs	r3, r3, #1
 80096b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80096b8:	d007      	beq.n	80096ca <USB_WritePMA+0x1e>
 80096ba:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 80096be:	f831 3b02 	ldrh.w	r3, [r1], #2
 80096c2:	f822 3b04 	strh.w	r3, [r2], #4
 80096c6:	4282      	cmp	r2, r0
 80096c8:	d1f9      	bne.n	80096be <USB_WritePMA+0x12>
 80096ca:	4770      	bx	lr

080096cc <USB_ReadPMA>:
 80096cc:	b570      	push	{r4, r5, r6, lr}
 80096ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80096d2:	085e      	lsrs	r6, r3, #1
 80096d4:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 80096d8:	d012      	beq.n	8009700 <USB_ReadPMA+0x34>
 80096da:	46ae      	mov	lr, r5
 80096dc:	46b4      	mov	ip, r6
 80096de:	1c88      	adds	r0, r1, #2
 80096e0:	f83e 2b04 	ldrh.w	r2, [lr], #4
 80096e4:	3002      	adds	r0, #2
 80096e6:	b292      	uxth	r2, r2
 80096e8:	0a14      	lsrs	r4, r2, #8
 80096ea:	f1bc 0c01 	subs.w	ip, ip, #1
 80096ee:	f800 2c04 	strb.w	r2, [r0, #-4]
 80096f2:	f800 4c03 	strb.w	r4, [r0, #-3]
 80096f6:	d1f3      	bne.n	80096e0 <USB_ReadPMA+0x14>
 80096f8:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 80096fc:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 8009700:	07db      	lsls	r3, r3, #31
 8009702:	bf44      	itt	mi
 8009704:	882b      	ldrhmi	r3, [r5, #0]
 8009706:	700b      	strbmi	r3, [r1, #0]
 8009708:	bd70      	pop	{r4, r5, r6, pc}
 800970a:	bf00      	nop

0800970c <USBD_CDC_EP0_RxReady>:
 800970c:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009710:	b183      	cbz	r3, 8009734 <USBD_CDC_EP0_RxReady+0x28>
 8009712:	b510      	push	{r4, lr}
 8009714:	f8d0 4290 	ldr.w	r4, [r0, #656]	; 0x290
 8009718:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 800971c:	28ff      	cmp	r0, #255	; 0xff
 800971e:	d007      	beq.n	8009730 <USBD_CDC_EP0_RxReady+0x24>
 8009720:	689b      	ldr	r3, [r3, #8]
 8009722:	4621      	mov	r1, r4
 8009724:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8009728:	4798      	blx	r3
 800972a:	23ff      	movs	r3, #255	; 0xff
 800972c:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 8009730:	2000      	movs	r0, #0
 8009732:	bd10      	pop	{r4, pc}
 8009734:	2000      	movs	r0, #0
 8009736:	4770      	bx	lr

08009738 <USBD_CDC_GetFSCfgDesc>:
 8009738:	4603      	mov	r3, r0
 800973a:	2243      	movs	r2, #67	; 0x43
 800973c:	4801      	ldr	r0, [pc, #4]	; (8009744 <USBD_CDC_GetFSCfgDesc+0xc>)
 800973e:	801a      	strh	r2, [r3, #0]
 8009740:	4770      	bx	lr
 8009742:	bf00      	nop
 8009744:	20000068 	.word	0x20000068

08009748 <USBD_CDC_GetHSCfgDesc>:
 8009748:	4603      	mov	r3, r0
 800974a:	2243      	movs	r2, #67	; 0x43
 800974c:	4801      	ldr	r0, [pc, #4]	; (8009754 <USBD_CDC_GetHSCfgDesc+0xc>)
 800974e:	801a      	strh	r2, [r3, #0]
 8009750:	4770      	bx	lr
 8009752:	bf00      	nop
 8009754:	200000ac 	.word	0x200000ac

08009758 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8009758:	4603      	mov	r3, r0
 800975a:	2243      	movs	r2, #67	; 0x43
 800975c:	4801      	ldr	r0, [pc, #4]	; (8009764 <USBD_CDC_GetOtherSpeedCfgDesc+0xc>)
 800975e:	801a      	strh	r2, [r3, #0]
 8009760:	4770      	bx	lr
 8009762:	bf00      	nop
 8009764:	200000fc 	.word	0x200000fc

08009768 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8009768:	4603      	mov	r3, r0
 800976a:	220a      	movs	r2, #10
 800976c:	4801      	ldr	r0, [pc, #4]	; (8009774 <USBD_CDC_GetDeviceQualifierDescriptor+0xc>)
 800976e:	801a      	strh	r2, [r3, #0]
 8009770:	4770      	bx	lr
 8009772:	bf00      	nop
 8009774:	200000f0 	.word	0x200000f0

08009778 <USBD_CDC_DataOut>:
 8009778:	b538      	push	{r3, r4, r5, lr}
 800977a:	4604      	mov	r4, r0
 800977c:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009780:	f001 f84c 	bl	800a81c <USBD_LL_GetRxDataSize>
 8009784:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 8009788:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
 800978c:	b14b      	cbz	r3, 80097a2 <USBD_CDC_DataOut+0x2a>
 800978e:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009792:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 8009796:	68db      	ldr	r3, [r3, #12]
 8009798:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 800979c:	4798      	blx	r3
 800979e:	2000      	movs	r0, #0
 80097a0:	bd38      	pop	{r3, r4, r5, pc}
 80097a2:	2002      	movs	r0, #2
 80097a4:	bd38      	pop	{r3, r4, r5, pc}
 80097a6:	bf00      	nop

080097a8 <USBD_CDC_DataIn>:
 80097a8:	b538      	push	{r3, r4, r5, lr}
 80097aa:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 80097ae:	b1ed      	cbz	r5, 80097ec <USBD_CDC_DataIn+0x44>
 80097b0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 80097b4:	eb00 0c83 	add.w	ip, r0, r3, lsl #2
 80097b8:	f8dc 201c 	ldr.w	r2, [ip, #28]
 80097bc:	b14a      	cbz	r2, 80097d2 <USBD_CDC_DataIn+0x2a>
 80097be:	f8d0 4298 	ldr.w	r4, [r0, #664]	; 0x298
 80097c2:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80097c6:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80097c8:	fbb2 f3f4 	udiv	r3, r2, r4
 80097cc:	fb04 2413 	mls	r4, r4, r3, r2
 80097d0:	b124      	cbz	r4, 80097dc <USBD_CDC_DataIn+0x34>
 80097d2:	2300      	movs	r3, #0
 80097d4:	4618      	mov	r0, r3
 80097d6:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
 80097da:	bd38      	pop	{r3, r4, r5, pc}
 80097dc:	4623      	mov	r3, r4
 80097de:	4622      	mov	r2, r4
 80097e0:	f8cc 401c 	str.w	r4, [ip, #28]
 80097e4:	f000 fffe 	bl	800a7e4 <USBD_LL_Transmit>
 80097e8:	4620      	mov	r0, r4
 80097ea:	bd38      	pop	{r3, r4, r5, pc}
 80097ec:	2002      	movs	r0, #2
 80097ee:	bd38      	pop	{r3, r4, r5, pc}

080097f0 <USBD_CDC_Setup>:
 80097f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097f4:	2700      	movs	r7, #0
 80097f6:	780b      	ldrb	r3, [r1, #0]
 80097f8:	b082      	sub	sp, #8
 80097fa:	f013 0660 	ands.w	r6, r3, #96	; 0x60
 80097fe:	460c      	mov	r4, r1
 8009800:	4605      	mov	r5, r0
 8009802:	f8d0 8290 	ldr.w	r8, [r0, #656]	; 0x290
 8009806:	f88d 7005 	strb.w	r7, [sp, #5]
 800980a:	f8ad 7006 	strh.w	r7, [sp, #6]
 800980e:	d013      	beq.n	8009838 <USBD_CDC_Setup+0x48>
 8009810:	2e20      	cmp	r6, #32
 8009812:	d117      	bne.n	8009844 <USBD_CDC_Setup+0x54>
 8009814:	88ce      	ldrh	r6, [r1, #6]
 8009816:	b1f6      	cbz	r6, 8009856 <USBD_CDC_Setup+0x66>
 8009818:	061b      	lsls	r3, r3, #24
 800981a:	d53f      	bpl.n	800989c <USBD_CDC_Setup+0xac>
 800981c:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009820:	4632      	mov	r2, r6
 8009822:	4641      	mov	r1, r8
 8009824:	689b      	ldr	r3, [r3, #8]
 8009826:	7860      	ldrb	r0, [r4, #1]
 8009828:	4798      	blx	r3
 800982a:	4641      	mov	r1, r8
 800982c:	4628      	mov	r0, r5
 800982e:	88e2      	ldrh	r2, [r4, #6]
 8009830:	463e      	mov	r6, r7
 8009832:	f000 fcef 	bl	800a214 <USBD_CtlSendData>
 8009836:	e00a      	b.n	800984e <USBD_CDC_Setup+0x5e>
 8009838:	784b      	ldrb	r3, [r1, #1]
 800983a:	2b0a      	cmp	r3, #10
 800983c:	d01f      	beq.n	800987e <USBD_CDC_Setup+0x8e>
 800983e:	2b0b      	cmp	r3, #11
 8009840:	d027      	beq.n	8009892 <USBD_CDC_Setup+0xa2>
 8009842:	b193      	cbz	r3, 800986a <USBD_CDC_Setup+0x7a>
 8009844:	4621      	mov	r1, r4
 8009846:	4628      	mov	r0, r5
 8009848:	f000 fcae 	bl	800a1a8 <USBD_CtlError>
 800984c:	2602      	movs	r6, #2
 800984e:	4630      	mov	r0, r6
 8009850:	b002      	add	sp, #8
 8009852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009856:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 800985a:	4632      	mov	r2, r6
 800985c:	689b      	ldr	r3, [r3, #8]
 800985e:	7848      	ldrb	r0, [r1, #1]
 8009860:	4798      	blx	r3
 8009862:	4630      	mov	r0, r6
 8009864:	b002      	add	sp, #8
 8009866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800986a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800986e:	2b03      	cmp	r3, #3
 8009870:	d1e8      	bne.n	8009844 <USBD_CDC_Setup+0x54>
 8009872:	2202      	movs	r2, #2
 8009874:	f10d 0106 	add.w	r1, sp, #6
 8009878:	f000 fccc 	bl	800a214 <USBD_CtlSendData>
 800987c:	e7e7      	b.n	800984e <USBD_CDC_Setup+0x5e>
 800987e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009882:	2b03      	cmp	r3, #3
 8009884:	d1de      	bne.n	8009844 <USBD_CDC_Setup+0x54>
 8009886:	2201      	movs	r2, #1
 8009888:	f10d 0105 	add.w	r1, sp, #5
 800988c:	f000 fcc2 	bl	800a214 <USBD_CtlSendData>
 8009890:	e7dd      	b.n	800984e <USBD_CDC_Setup+0x5e>
 8009892:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009896:	2b03      	cmp	r3, #3
 8009898:	d0d9      	beq.n	800984e <USBD_CDC_Setup+0x5e>
 800989a:	e7d3      	b.n	8009844 <USBD_CDC_Setup+0x54>
 800989c:	784b      	ldrb	r3, [r1, #1]
 800989e:	4632      	mov	r2, r6
 80098a0:	f888 6201 	strb.w	r6, [r8, #513]	; 0x201
 80098a4:	4641      	mov	r1, r8
 80098a6:	f888 3200 	strb.w	r3, [r8, #512]	; 0x200
 80098aa:	f000 fccb 	bl	800a244 <USBD_CtlPrepareRx>
 80098ae:	463e      	mov	r6, r7
 80098b0:	e7cd      	b.n	800984e <USBD_CDC_Setup+0x5e>
 80098b2:	bf00      	nop

080098b4 <USBD_CDC_DeInit>:
 80098b4:	b538      	push	{r3, r4, r5, lr}
 80098b6:	4604      	mov	r4, r0
 80098b8:	2500      	movs	r5, #0
 80098ba:	2181      	movs	r1, #129	; 0x81
 80098bc:	f000 ff46 	bl	800a74c <USBD_LL_CloseEP>
 80098c0:	2101      	movs	r1, #1
 80098c2:	4620      	mov	r0, r4
 80098c4:	62e5      	str	r5, [r4, #44]	; 0x2c
 80098c6:	f000 ff41 	bl	800a74c <USBD_LL_CloseEP>
 80098ca:	2182      	movs	r1, #130	; 0x82
 80098cc:	4620      	mov	r0, r4
 80098ce:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 80098d2:	f000 ff3b 	bl	800a74c <USBD_LL_CloseEP>
 80098d6:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 80098da:	6425      	str	r5, [r4, #64]	; 0x40
 80098dc:	b14b      	cbz	r3, 80098f2 <USBD_CDC_DeInit+0x3e>
 80098de:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 80098e2:	685b      	ldr	r3, [r3, #4]
 80098e4:	4798      	blx	r3
 80098e6:	f8d4 0290 	ldr.w	r0, [r4, #656]	; 0x290
 80098ea:	f000 ff9f 	bl	800a82c <USBD_static_free>
 80098ee:	f8c4 5290 	str.w	r5, [r4, #656]	; 0x290
 80098f2:	2000      	movs	r0, #0
 80098f4:	bd38      	pop	{r3, r4, r5, pc}
 80098f6:	bf00      	nop

080098f8 <USBD_CDC_Init>:
 80098f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098fc:	7c03      	ldrb	r3, [r0, #16]
 80098fe:	4604      	mov	r4, r0
 8009900:	bbbb      	cbnz	r3, 8009972 <USBD_CDC_Init+0x7a>
 8009902:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009906:	2202      	movs	r2, #2
 8009908:	2181      	movs	r1, #129	; 0x81
 800990a:	f000 ff0f 	bl	800a72c <USBD_LL_OpenEP>
 800990e:	2501      	movs	r5, #1
 8009910:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009914:	2701      	movs	r7, #1
 8009916:	4629      	mov	r1, r5
 8009918:	2202      	movs	r2, #2
 800991a:	62e5      	str	r5, [r4, #44]	; 0x2c
 800991c:	4620      	mov	r0, r4
 800991e:	f000 ff05 	bl	800a72c <USBD_LL_OpenEP>
 8009922:	2308      	movs	r3, #8
 8009924:	2203      	movs	r2, #3
 8009926:	2182      	movs	r1, #130	; 0x82
 8009928:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800992c:	4620      	mov	r0, r4
 800992e:	f000 fefd 	bl	800a72c <USBD_LL_OpenEP>
 8009932:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8009936:	6427      	str	r7, [r4, #64]	; 0x40
 8009938:	f000 ff74 	bl	800a824 <USBD_static_malloc>
 800993c:	4605      	mov	r5, r0
 800993e:	f8c4 0290 	str.w	r0, [r4, #656]	; 0x290
 8009942:	b348      	cbz	r0, 8009998 <USBD_CDC_Init+0xa0>
 8009944:	f04f 0800 	mov.w	r8, #0
 8009948:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 800994c:	681b      	ldr	r3, [r3, #0]
 800994e:	4798      	blx	r3
 8009950:	f8c5 8214 	str.w	r8, [r5, #532]	; 0x214
 8009954:	f8c5 8218 	str.w	r8, [r5, #536]	; 0x218
 8009958:	7c26      	ldrb	r6, [r4, #16]
 800995a:	b196      	cbz	r6, 8009982 <USBD_CDC_Init+0x8a>
 800995c:	4646      	mov	r6, r8
 800995e:	2340      	movs	r3, #64	; 0x40
 8009960:	4639      	mov	r1, r7
 8009962:	4620      	mov	r0, r4
 8009964:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8009968:	f000 ff4a 	bl	800a800 <USBD_LL_PrepareReceive>
 800996c:	4630      	mov	r0, r6
 800996e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009972:	2340      	movs	r3, #64	; 0x40
 8009974:	2202      	movs	r2, #2
 8009976:	2181      	movs	r1, #129	; 0x81
 8009978:	f000 fed8 	bl	800a72c <USBD_LL_OpenEP>
 800997c:	2501      	movs	r5, #1
 800997e:	2340      	movs	r3, #64	; 0x40
 8009980:	e7c8      	b.n	8009914 <USBD_CDC_Init+0x1c>
 8009982:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009986:	4639      	mov	r1, r7
 8009988:	4620      	mov	r0, r4
 800998a:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 800998e:	f000 ff37 	bl	800a800 <USBD_LL_PrepareReceive>
 8009992:	4630      	mov	r0, r6
 8009994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009998:	463e      	mov	r6, r7
 800999a:	4630      	mov	r0, r6
 800999c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080099a0 <USBD_CDC_RegisterInterface>:
 80099a0:	4603      	mov	r3, r0
 80099a2:	b119      	cbz	r1, 80099ac <USBD_CDC_RegisterInterface+0xc>
 80099a4:	2000      	movs	r0, #0
 80099a6:	f8c3 1294 	str.w	r1, [r3, #660]	; 0x294
 80099aa:	4770      	bx	lr
 80099ac:	2002      	movs	r0, #2
 80099ae:	4770      	bx	lr

080099b0 <USBD_CDC_SetTxBuffer>:
 80099b0:	4603      	mov	r3, r0
 80099b2:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 80099b6:	2000      	movs	r0, #0
 80099b8:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 80099bc:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 80099c0:	4770      	bx	lr
 80099c2:	bf00      	nop

080099c4 <USBD_CDC_SetRxBuffer>:
 80099c4:	4603      	mov	r3, r0
 80099c6:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 80099ca:	2000      	movs	r0, #0
 80099cc:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 80099d0:	4770      	bx	lr
 80099d2:	bf00      	nop

080099d4 <USBD_CDC_TransmitPacket>:
 80099d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80099d6:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 80099da:	b195      	cbz	r5, 8009a02 <USBD_CDC_TransmitPacket+0x2e>
 80099dc:	f8d5 4214 	ldr.w	r4, [r5, #532]	; 0x214
 80099e0:	b10c      	cbz	r4, 80099e6 <USBD_CDC_TransmitPacket+0x12>
 80099e2:	2001      	movs	r0, #1
 80099e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80099e6:	2701      	movs	r7, #1
 80099e8:	f8d5 6210 	ldr.w	r6, [r5, #528]	; 0x210
 80099ec:	f8d5 2208 	ldr.w	r2, [r5, #520]	; 0x208
 80099f0:	f8c5 7214 	str.w	r7, [r5, #532]	; 0x214
 80099f4:	2181      	movs	r1, #129	; 0x81
 80099f6:	b2b3      	uxth	r3, r6
 80099f8:	6306      	str	r6, [r0, #48]	; 0x30
 80099fa:	f000 fef3 	bl	800a7e4 <USBD_LL_Transmit>
 80099fe:	4620      	mov	r0, r4
 8009a00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a02:	2002      	movs	r0, #2
 8009a04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a06:	bf00      	nop

08009a08 <USBD_CDC_ReceivePacket>:
 8009a08:	f8d0 2290 	ldr.w	r2, [r0, #656]	; 0x290
 8009a0c:	b510      	push	{r4, lr}
 8009a0e:	b19a      	cbz	r2, 8009a38 <USBD_CDC_ReceivePacket+0x30>
 8009a10:	7c04      	ldrb	r4, [r0, #16]
 8009a12:	b144      	cbz	r4, 8009a26 <USBD_CDC_ReceivePacket+0x1e>
 8009a14:	2400      	movs	r4, #0
 8009a16:	2340      	movs	r3, #64	; 0x40
 8009a18:	2101      	movs	r1, #1
 8009a1a:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009a1e:	f000 feef 	bl	800a800 <USBD_LL_PrepareReceive>
 8009a22:	4620      	mov	r0, r4
 8009a24:	bd10      	pop	{r4, pc}
 8009a26:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009a2a:	2101      	movs	r1, #1
 8009a2c:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009a30:	f000 fee6 	bl	800a800 <USBD_LL_PrepareReceive>
 8009a34:	4620      	mov	r0, r4
 8009a36:	bd10      	pop	{r4, pc}
 8009a38:	2402      	movs	r4, #2
 8009a3a:	4620      	mov	r0, r4
 8009a3c:	bd10      	pop	{r4, pc}
 8009a3e:	bf00      	nop

08009a40 <USBD_Init>:
 8009a40:	b188      	cbz	r0, 8009a66 <USBD_Init+0x26>
 8009a42:	b508      	push	{r3, lr}
 8009a44:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009a48:	b113      	cbz	r3, 8009a50 <USBD_Init+0x10>
 8009a4a:	2300      	movs	r3, #0
 8009a4c:	f8c0 328c 	str.w	r3, [r0, #652]	; 0x28c
 8009a50:	b109      	cbz	r1, 8009a56 <USBD_Init+0x16>
 8009a52:	f8c0 1288 	str.w	r1, [r0, #648]	; 0x288
 8009a56:	2301      	movs	r3, #1
 8009a58:	7002      	strb	r2, [r0, #0]
 8009a5a:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 8009a5e:	f000 fe13 	bl	800a688 <USBD_LL_Init>
 8009a62:	2000      	movs	r0, #0
 8009a64:	bd08      	pop	{r3, pc}
 8009a66:	2002      	movs	r0, #2
 8009a68:	4770      	bx	lr
 8009a6a:	bf00      	nop

08009a6c <USBD_RegisterClass>:
 8009a6c:	4603      	mov	r3, r0
 8009a6e:	b119      	cbz	r1, 8009a78 <USBD_RegisterClass+0xc>
 8009a70:	2000      	movs	r0, #0
 8009a72:	f8c3 128c 	str.w	r1, [r3, #652]	; 0x28c
 8009a76:	4770      	bx	lr
 8009a78:	2002      	movs	r0, #2
 8009a7a:	4770      	bx	lr

08009a7c <USBD_Start>:
 8009a7c:	b508      	push	{r3, lr}
 8009a7e:	f000 fe47 	bl	800a710 <USBD_LL_Start>
 8009a82:	2000      	movs	r0, #0
 8009a84:	bd08      	pop	{r3, pc}
 8009a86:	bf00      	nop

08009a88 <USBD_SetClassConfig>:
 8009a88:	b508      	push	{r3, lr}
 8009a8a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009a8e:	b11b      	cbz	r3, 8009a98 <USBD_SetClassConfig+0x10>
 8009a90:	681b      	ldr	r3, [r3, #0]
 8009a92:	4798      	blx	r3
 8009a94:	b900      	cbnz	r0, 8009a98 <USBD_SetClassConfig+0x10>
 8009a96:	bd08      	pop	{r3, pc}
 8009a98:	2002      	movs	r0, #2
 8009a9a:	bd08      	pop	{r3, pc}

08009a9c <USBD_ClrClassConfig>:
 8009a9c:	b508      	push	{r3, lr}
 8009a9e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009aa2:	685b      	ldr	r3, [r3, #4]
 8009aa4:	4798      	blx	r3
 8009aa6:	2000      	movs	r0, #0
 8009aa8:	bd08      	pop	{r3, pc}
 8009aaa:	bf00      	nop

08009aac <USBD_LL_SetupStage>:
 8009aac:	b538      	push	{r3, r4, r5, lr}
 8009aae:	4604      	mov	r4, r0
 8009ab0:	f500 7520 	add.w	r5, r0, #640	; 0x280
 8009ab4:	4628      	mov	r0, r5
 8009ab6:	f000 fb63 	bl	800a180 <USBD_ParseSetupRequest>
 8009aba:	2201      	movs	r2, #1
 8009abc:	f8b4 3286 	ldrh.w	r3, [r4, #646]	; 0x286
 8009ac0:	f894 1280 	ldrb.w	r1, [r4, #640]	; 0x280
 8009ac4:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
 8009ac8:	f001 031f 	and.w	r3, r1, #31
 8009acc:	4293      	cmp	r3, r2
 8009ace:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 8009ad2:	d009      	beq.n	8009ae8 <USBD_LL_SetupStage+0x3c>
 8009ad4:	2b02      	cmp	r3, #2
 8009ad6:	d013      	beq.n	8009b00 <USBD_LL_SetupStage+0x54>
 8009ad8:	b163      	cbz	r3, 8009af4 <USBD_LL_SetupStage+0x48>
 8009ada:	4620      	mov	r0, r4
 8009adc:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8009ae0:	f000 fe42 	bl	800a768 <USBD_LL_StallEP>
 8009ae4:	2000      	movs	r0, #0
 8009ae6:	bd38      	pop	{r3, r4, r5, pc}
 8009ae8:	4629      	mov	r1, r5
 8009aea:	4620      	mov	r0, r4
 8009aec:	f000 fa78 	bl	8009fe0 <USBD_StdItfReq>
 8009af0:	2000      	movs	r0, #0
 8009af2:	bd38      	pop	{r3, r4, r5, pc}
 8009af4:	4629      	mov	r1, r5
 8009af6:	4620      	mov	r0, r4
 8009af8:	f000 f8f8 	bl	8009cec <USBD_StdDevReq>
 8009afc:	2000      	movs	r0, #0
 8009afe:	bd38      	pop	{r3, r4, r5, pc}
 8009b00:	4629      	mov	r1, r5
 8009b02:	4620      	mov	r0, r4
 8009b04:	f000 faa0 	bl	800a048 <USBD_StdEPReq>
 8009b08:	2000      	movs	r0, #0
 8009b0a:	bd38      	pop	{r3, r4, r5, pc}

08009b0c <USBD_LL_DataOutStage>:
 8009b0c:	b538      	push	{r3, r4, r5, lr}
 8009b0e:	4605      	mov	r5, r0
 8009b10:	b969      	cbnz	r1, 8009b2e <USBD_LL_DataOutStage+0x22>
 8009b12:	4613      	mov	r3, r2
 8009b14:	f8d0 226c 	ldr.w	r2, [r0, #620]	; 0x26c
 8009b18:	2a03      	cmp	r2, #3
 8009b1a:	d015      	beq.n	8009b48 <USBD_LL_DataOutStage+0x3c>
 8009b1c:	2a05      	cmp	r2, #5
 8009b1e:	460c      	mov	r4, r1
 8009b20:	d10e      	bne.n	8009b40 <USBD_LL_DataOutStage+0x34>
 8009b22:	f8c5 126c 	str.w	r1, [r5, #620]	; 0x26c
 8009b26:	f000 fe1f 	bl	800a768 <USBD_LL_StallEP>
 8009b2a:	4620      	mov	r0, r4
 8009b2c:	bd38      	pop	{r3, r4, r5, pc}
 8009b2e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009b32:	699b      	ldr	r3, [r3, #24]
 8009b34:	b133      	cbz	r3, 8009b44 <USBD_LL_DataOutStage+0x38>
 8009b36:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009b3a:	2a03      	cmp	r2, #3
 8009b3c:	d102      	bne.n	8009b44 <USBD_LL_DataOutStage+0x38>
 8009b3e:	4798      	blx	r3
 8009b40:	2000      	movs	r0, #0
 8009b42:	bd38      	pop	{r3, r4, r5, pc}
 8009b44:	2002      	movs	r0, #2
 8009b46:	bd38      	pop	{r3, r4, r5, pc}
 8009b48:	e9d0 1253 	ldrd	r1, r2, [r0, #332]	; 0x14c
 8009b4c:	4291      	cmp	r1, r2
 8009b4e:	d90c      	bls.n	8009b6a <USBD_LL_DataOutStage+0x5e>
 8009b50:	1a89      	subs	r1, r1, r2
 8009b52:	428a      	cmp	r2, r1
 8009b54:	bf88      	it	hi
 8009b56:	b28a      	uxthhi	r2, r1
 8009b58:	f8c0 114c 	str.w	r1, [r0, #332]	; 0x14c
 8009b5c:	bf98      	it	ls
 8009b5e:	b292      	uxthls	r2, r2
 8009b60:	4619      	mov	r1, r3
 8009b62:	f000 fb7d 	bl	800a260 <USBD_CtlContinueRx>
 8009b66:	2000      	movs	r0, #0
 8009b68:	bd38      	pop	{r3, r4, r5, pc}
 8009b6a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009b6e:	691b      	ldr	r3, [r3, #16]
 8009b70:	b11b      	cbz	r3, 8009b7a <USBD_LL_DataOutStage+0x6e>
 8009b72:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009b76:	2a03      	cmp	r2, #3
 8009b78:	d004      	beq.n	8009b84 <USBD_LL_DataOutStage+0x78>
 8009b7a:	4628      	mov	r0, r5
 8009b7c:	f000 fb7a 	bl	800a274 <USBD_CtlSendStatus>
 8009b80:	2000      	movs	r0, #0
 8009b82:	bd38      	pop	{r3, r4, r5, pc}
 8009b84:	4798      	blx	r3
 8009b86:	e7f8      	b.n	8009b7a <USBD_LL_DataOutStage+0x6e>

08009b88 <USBD_LL_DataInStage>:
 8009b88:	b570      	push	{r4, r5, r6, lr}
 8009b8a:	4604      	mov	r4, r0
 8009b8c:	b961      	cbnz	r1, 8009ba8 <USBD_LL_DataInStage+0x20>
 8009b8e:	f8d0 326c 	ldr.w	r3, [r0, #620]	; 0x26c
 8009b92:	2b02      	cmp	r3, #2
 8009b94:	d015      	beq.n	8009bc2 <USBD_LL_DataInStage+0x3a>
 8009b96:	f033 0304 	bics.w	r3, r3, #4
 8009b9a:	d02e      	beq.n	8009bfa <USBD_LL_DataInStage+0x72>
 8009b9c:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 8009ba0:	2b01      	cmp	r3, #1
 8009ba2:	d031      	beq.n	8009c08 <USBD_LL_DataInStage+0x80>
 8009ba4:	2000      	movs	r0, #0
 8009ba6:	bd70      	pop	{r4, r5, r6, pc}
 8009ba8:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009bac:	695b      	ldr	r3, [r3, #20]
 8009bae:	b133      	cbz	r3, 8009bbe <USBD_LL_DataInStage+0x36>
 8009bb0:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009bb4:	2a03      	cmp	r2, #3
 8009bb6:	d102      	bne.n	8009bbe <USBD_LL_DataInStage+0x36>
 8009bb8:	4798      	blx	r3
 8009bba:	2000      	movs	r0, #0
 8009bbc:	bd70      	pop	{r4, r5, r6, pc}
 8009bbe:	2002      	movs	r0, #2
 8009bc0:	bd70      	pop	{r4, r5, r6, pc}
 8009bc2:	e9d0 6308 	ldrd	r6, r3, [r0, #32]
 8009bc6:	429e      	cmp	r6, r3
 8009bc8:	d833      	bhi.n	8009c32 <USBD_LL_DataInStage+0xaa>
 8009bca:	69c2      	ldr	r2, [r0, #28]
 8009bcc:	fbb2 f5f3 	udiv	r5, r2, r3
 8009bd0:	fb03 2515 	mls	r5, r3, r5, r2
 8009bd4:	b9ed      	cbnz	r5, 8009c12 <USBD_LL_DataInStage+0x8a>
 8009bd6:	4293      	cmp	r3, r2
 8009bd8:	d81b      	bhi.n	8009c12 <USBD_LL_DataInStage+0x8a>
 8009bda:	f8d0 3270 	ldr.w	r3, [r0, #624]	; 0x270
 8009bde:	429a      	cmp	r2, r3
 8009be0:	d217      	bcs.n	8009c12 <USBD_LL_DataInStage+0x8a>
 8009be2:	462a      	mov	r2, r5
 8009be4:	f000 fb24 	bl	800a230 <USBD_CtlContinueSendData>
 8009be8:	462b      	mov	r3, r5
 8009bea:	462a      	mov	r2, r5
 8009bec:	4629      	mov	r1, r5
 8009bee:	4620      	mov	r0, r4
 8009bf0:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
 8009bf4:	f000 fe04 	bl	800a800 <USBD_LL_PrepareReceive>
 8009bf8:	e7d0      	b.n	8009b9c <USBD_LL_DataInStage+0x14>
 8009bfa:	2180      	movs	r1, #128	; 0x80
 8009bfc:	f000 fdb4 	bl	800a768 <USBD_LL_StallEP>
 8009c00:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 8009c04:	2b01      	cmp	r3, #1
 8009c06:	d1cd      	bne.n	8009ba4 <USBD_LL_DataInStage+0x1c>
 8009c08:	2300      	movs	r3, #0
 8009c0a:	f884 3278 	strb.w	r3, [r4, #632]	; 0x278
 8009c0e:	4618      	mov	r0, r3
 8009c10:	bd70      	pop	{r4, r5, r6, pc}
 8009c12:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009c16:	68db      	ldr	r3, [r3, #12]
 8009c18:	b11b      	cbz	r3, 8009c22 <USBD_LL_DataInStage+0x9a>
 8009c1a:	f894 2274 	ldrb.w	r2, [r4, #628]	; 0x274
 8009c1e:	2a03      	cmp	r2, #3
 8009c20:	d015      	beq.n	8009c4e <USBD_LL_DataInStage+0xc6>
 8009c22:	2180      	movs	r1, #128	; 0x80
 8009c24:	4620      	mov	r0, r4
 8009c26:	f000 fd9f 	bl	800a768 <USBD_LL_StallEP>
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	f000 fb2e 	bl	800a28c <USBD_CtlReceiveStatus>
 8009c30:	e7b4      	b.n	8009b9c <USBD_LL_DataInStage+0x14>
 8009c32:	460d      	mov	r5, r1
 8009c34:	1af3      	subs	r3, r6, r3
 8009c36:	4611      	mov	r1, r2
 8009c38:	6203      	str	r3, [r0, #32]
 8009c3a:	b29a      	uxth	r2, r3
 8009c3c:	f000 faf8 	bl	800a230 <USBD_CtlContinueSendData>
 8009c40:	462b      	mov	r3, r5
 8009c42:	462a      	mov	r2, r5
 8009c44:	4629      	mov	r1, r5
 8009c46:	4620      	mov	r0, r4
 8009c48:	f000 fdda 	bl	800a800 <USBD_LL_PrepareReceive>
 8009c4c:	e7a6      	b.n	8009b9c <USBD_LL_DataInStage+0x14>
 8009c4e:	4620      	mov	r0, r4
 8009c50:	4798      	blx	r3
 8009c52:	e7e6      	b.n	8009c22 <USBD_LL_DataInStage+0x9a>

08009c54 <USBD_LL_Reset>:
 8009c54:	b570      	push	{r4, r5, r6, lr}
 8009c56:	2200      	movs	r2, #0
 8009c58:	2640      	movs	r6, #64	; 0x40
 8009c5a:	4604      	mov	r4, r0
 8009c5c:	2501      	movs	r5, #1
 8009c5e:	4611      	mov	r1, r2
 8009c60:	4633      	mov	r3, r6
 8009c62:	f000 fd63 	bl	800a72c <USBD_LL_OpenEP>
 8009c66:	4633      	mov	r3, r6
 8009c68:	2180      	movs	r1, #128	; 0x80
 8009c6a:	2200      	movs	r2, #0
 8009c6c:	4620      	mov	r0, r4
 8009c6e:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 8009c72:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
 8009c76:	f000 fd59 	bl	800a72c <USBD_LL_OpenEP>
 8009c7a:	2100      	movs	r1, #0
 8009c7c:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 8009c80:	61a5      	str	r5, [r4, #24]
 8009c82:	6266      	str	r6, [r4, #36]	; 0x24
 8009c84:	f884 5274 	strb.w	r5, [r4, #628]	; 0x274
 8009c88:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 8009c8c:	6061      	str	r1, [r4, #4]
 8009c8e:	f8c4 127c 	str.w	r1, [r4, #636]	; 0x27c
 8009c92:	b123      	cbz	r3, 8009c9e <USBD_LL_Reset+0x4a>
 8009c94:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009c98:	4620      	mov	r0, r4
 8009c9a:	685b      	ldr	r3, [r3, #4]
 8009c9c:	4798      	blx	r3
 8009c9e:	2000      	movs	r0, #0
 8009ca0:	bd70      	pop	{r4, r5, r6, pc}
 8009ca2:	bf00      	nop

08009ca4 <USBD_LL_SetSpeed>:
 8009ca4:	4603      	mov	r3, r0
 8009ca6:	2000      	movs	r0, #0
 8009ca8:	7419      	strb	r1, [r3, #16]
 8009caa:	4770      	bx	lr

08009cac <USBD_LL_Suspend>:
 8009cac:	4603      	mov	r3, r0
 8009cae:	2104      	movs	r1, #4
 8009cb0:	f893 2274 	ldrb.w	r2, [r3, #628]	; 0x274
 8009cb4:	2000      	movs	r0, #0
 8009cb6:	f883 1274 	strb.w	r1, [r3, #628]	; 0x274
 8009cba:	f883 2275 	strb.w	r2, [r3, #629]	; 0x275
 8009cbe:	4770      	bx	lr

08009cc0 <USBD_LL_Resume>:
 8009cc0:	4603      	mov	r3, r0
 8009cc2:	f893 2275 	ldrb.w	r2, [r3, #629]	; 0x275
 8009cc6:	2000      	movs	r0, #0
 8009cc8:	f883 2274 	strb.w	r2, [r3, #628]	; 0x274
 8009ccc:	4770      	bx	lr
 8009cce:	bf00      	nop

08009cd0 <USBD_LL_SOF>:
 8009cd0:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009cd4:	2a03      	cmp	r2, #3
 8009cd6:	d001      	beq.n	8009cdc <USBD_LL_SOF+0xc>
 8009cd8:	2000      	movs	r0, #0
 8009cda:	4770      	bx	lr
 8009cdc:	b508      	push	{r3, lr}
 8009cde:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009ce2:	69db      	ldr	r3, [r3, #28]
 8009ce4:	b103      	cbz	r3, 8009ce8 <USBD_LL_SOF+0x18>
 8009ce6:	4798      	blx	r3
 8009ce8:	2000      	movs	r0, #0
 8009cea:	bd08      	pop	{r3, pc}

08009cec <USBD_StdDevReq>:
 8009cec:	b530      	push	{r4, r5, lr}
 8009cee:	780b      	ldrb	r3, [r1, #0]
 8009cf0:	460d      	mov	r5, r1
 8009cf2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8009cf6:	2b20      	cmp	r3, #32
 8009cf8:	4604      	mov	r4, r0
 8009cfa:	b083      	sub	sp, #12
 8009cfc:	d00d      	beq.n	8009d1a <USBD_StdDevReq+0x2e>
 8009cfe:	2b40      	cmp	r3, #64	; 0x40
 8009d00:	d00b      	beq.n	8009d1a <USBD_StdDevReq+0x2e>
 8009d02:	b19b      	cbz	r3, 8009d2c <USBD_StdDevReq+0x40>
 8009d04:	2180      	movs	r1, #128	; 0x80
 8009d06:	4620      	mov	r0, r4
 8009d08:	f000 fd2e 	bl	800a768 <USBD_LL_StallEP>
 8009d0c:	2100      	movs	r1, #0
 8009d0e:	4620      	mov	r0, r4
 8009d10:	f000 fd2a 	bl	800a768 <USBD_LL_StallEP>
 8009d14:	2000      	movs	r0, #0
 8009d16:	b003      	add	sp, #12
 8009d18:	bd30      	pop	{r4, r5, pc}
 8009d1a:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009d1e:	4629      	mov	r1, r5
 8009d20:	4620      	mov	r0, r4
 8009d22:	689b      	ldr	r3, [r3, #8]
 8009d24:	4798      	blx	r3
 8009d26:	2000      	movs	r0, #0
 8009d28:	b003      	add	sp, #12
 8009d2a:	bd30      	pop	{r4, r5, pc}
 8009d2c:	784b      	ldrb	r3, [r1, #1]
 8009d2e:	2b09      	cmp	r3, #9
 8009d30:	d8e8      	bhi.n	8009d04 <USBD_StdDevReq+0x18>
 8009d32:	a201      	add	r2, pc, #4	; (adr r2, 8009d38 <USBD_StdDevReq+0x4c>)
 8009d34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009d38:	08009d93 	.word	0x08009d93
 8009d3c:	08009dbf 	.word	0x08009dbf
 8009d40:	08009d05 	.word	0x08009d05
 8009d44:	08009ddd 	.word	0x08009ddd
 8009d48:	08009d05 	.word	0x08009d05
 8009d4c:	08009de5 	.word	0x08009de5
 8009d50:	08009e1d 	.word	0x08009e1d
 8009d54:	08009d05 	.word	0x08009d05
 8009d58:	08009e4d 	.word	0x08009e4d
 8009d5c:	08009d61 	.word	0x08009d61
 8009d60:	7889      	ldrb	r1, [r1, #2]
 8009d62:	4d9e      	ldr	r5, [pc, #632]	; (8009fdc <USBD_StdDevReq+0x2f0>)
 8009d64:	2901      	cmp	r1, #1
 8009d66:	7029      	strb	r1, [r5, #0]
 8009d68:	d8cc      	bhi.n	8009d04 <USBD_StdDevReq+0x18>
 8009d6a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009d6e:	2b02      	cmp	r3, #2
 8009d70:	f000 8111 	beq.w	8009f96 <USBD_StdDevReq+0x2aa>
 8009d74:	2b03      	cmp	r3, #3
 8009d76:	f000 80ff 	beq.w	8009f78 <USBD_StdDevReq+0x28c>
 8009d7a:	2180      	movs	r1, #128	; 0x80
 8009d7c:	f000 fcf4 	bl	800a768 <USBD_LL_StallEP>
 8009d80:	2100      	movs	r1, #0
 8009d82:	4620      	mov	r0, r4
 8009d84:	f000 fcf0 	bl	800a768 <USBD_LL_StallEP>
 8009d88:	4620      	mov	r0, r4
 8009d8a:	7829      	ldrb	r1, [r5, #0]
 8009d8c:	f7ff fe86 	bl	8009a9c <USBD_ClrClassConfig>
 8009d90:	e7c0      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009d92:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009d96:	3b01      	subs	r3, #1
 8009d98:	2b02      	cmp	r3, #2
 8009d9a:	d8b3      	bhi.n	8009d04 <USBD_StdDevReq+0x18>
 8009d9c:	88cb      	ldrh	r3, [r1, #6]
 8009d9e:	2b02      	cmp	r3, #2
 8009da0:	d1b0      	bne.n	8009d04 <USBD_StdDevReq+0x18>
 8009da2:	2201      	movs	r2, #1
 8009da4:	f8d0 327c 	ldr.w	r3, [r0, #636]	; 0x27c
 8009da8:	60c2      	str	r2, [r0, #12]
 8009daa:	b10b      	cbz	r3, 8009db0 <USBD_StdDevReq+0xc4>
 8009dac:	2303      	movs	r3, #3
 8009dae:	60c3      	str	r3, [r0, #12]
 8009db0:	2202      	movs	r2, #2
 8009db2:	4620      	mov	r0, r4
 8009db4:	f104 010c 	add.w	r1, r4, #12
 8009db8:	f000 fa2c 	bl	800a214 <USBD_CtlSendData>
 8009dbc:	e7aa      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009dbe:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009dc2:	3b01      	subs	r3, #1
 8009dc4:	2b02      	cmp	r3, #2
 8009dc6:	d89d      	bhi.n	8009d04 <USBD_StdDevReq+0x18>
 8009dc8:	884b      	ldrh	r3, [r1, #2]
 8009dca:	2b01      	cmp	r3, #1
 8009dcc:	d1a2      	bne.n	8009d14 <USBD_StdDevReq+0x28>
 8009dce:	2300      	movs	r3, #0
 8009dd0:	4620      	mov	r0, r4
 8009dd2:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
 8009dd6:	f000 fa4d 	bl	800a274 <USBD_CtlSendStatus>
 8009dda:	e79b      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009ddc:	884b      	ldrh	r3, [r1, #2]
 8009dde:	2b01      	cmp	r3, #1
 8009de0:	d198      	bne.n	8009d14 <USBD_StdDevReq+0x28>
 8009de2:	e7f5      	b.n	8009dd0 <USBD_StdDevReq+0xe4>
 8009de4:	888b      	ldrh	r3, [r1, #4]
 8009de6:	2b00      	cmp	r3, #0
 8009de8:	d18c      	bne.n	8009d04 <USBD_StdDevReq+0x18>
 8009dea:	88cb      	ldrh	r3, [r1, #6]
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	d189      	bne.n	8009d04 <USBD_StdDevReq+0x18>
 8009df0:	884d      	ldrh	r5, [r1, #2]
 8009df2:	2d7f      	cmp	r5, #127	; 0x7f
 8009df4:	d886      	bhi.n	8009d04 <USBD_StdDevReq+0x18>
 8009df6:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009dfa:	2b03      	cmp	r3, #3
 8009dfc:	d082      	beq.n	8009d04 <USBD_StdDevReq+0x18>
 8009dfe:	b2e9      	uxtb	r1, r5
 8009e00:	f880 1276 	strb.w	r1, [r0, #630]	; 0x276
 8009e04:	f000 fce0 	bl	800a7c8 <USBD_LL_SetUSBAddress>
 8009e08:	4620      	mov	r0, r4
 8009e0a:	f000 fa33 	bl	800a274 <USBD_CtlSendStatus>
 8009e0e:	2d00      	cmp	r5, #0
 8009e10:	f000 80df 	beq.w	8009fd2 <USBD_StdDevReq+0x2e6>
 8009e14:	2302      	movs	r3, #2
 8009e16:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 8009e1a:	e77b      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009e1c:	884a      	ldrh	r2, [r1, #2]
 8009e1e:	0a13      	lsrs	r3, r2, #8
 8009e20:	3b01      	subs	r3, #1
 8009e22:	2b06      	cmp	r3, #6
 8009e24:	f63f af6e 	bhi.w	8009d04 <USBD_StdDevReq+0x18>
 8009e28:	a101      	add	r1, pc, #4	; (adr r1, 8009e30 <USBD_StdDevReq+0x144>)
 8009e2a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009e2e:	bf00      	nop
 8009e30:	08009edf 	.word	0x08009edf
 8009e34:	08009ec7 	.word	0x08009ec7
 8009e38:	08009eb5 	.word	0x08009eb5
 8009e3c:	08009d05 	.word	0x08009d05
 8009e40:	08009d05 	.word	0x08009d05
 8009e44:	08009e9f 	.word	0x08009e9f
 8009e48:	08009e71 	.word	0x08009e71
 8009e4c:	88ca      	ldrh	r2, [r1, #6]
 8009e4e:	2a01      	cmp	r2, #1
 8009e50:	f47f af58 	bne.w	8009d04 <USBD_StdDevReq+0x18>
 8009e54:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009e58:	2b02      	cmp	r3, #2
 8009e5a:	d878      	bhi.n	8009f4e <USBD_StdDevReq+0x262>
 8009e5c:	2b00      	cmp	r3, #0
 8009e5e:	f43f af51 	beq.w	8009d04 <USBD_StdDevReq+0x18>
 8009e62:	4601      	mov	r1, r0
 8009e64:	2300      	movs	r3, #0
 8009e66:	f841 3f08 	str.w	r3, [r1, #8]!
 8009e6a:	f000 f9d3 	bl	800a214 <USBD_CtlSendData>
 8009e6e:	e751      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009e70:	7c03      	ldrb	r3, [r0, #16]
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	f47f af46 	bne.w	8009d04 <USBD_StdDevReq+0x18>
 8009e78:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009e7c:	f10d 0006 	add.w	r0, sp, #6
 8009e80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e82:	4798      	blx	r3
 8009e84:	2307      	movs	r3, #7
 8009e86:	7043      	strb	r3, [r0, #1]
 8009e88:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009e8c:	2a00      	cmp	r2, #0
 8009e8e:	d06e      	beq.n	8009f6e <USBD_StdDevReq+0x282>
 8009e90:	88eb      	ldrh	r3, [r5, #6]
 8009e92:	2b00      	cmp	r3, #0
 8009e94:	d162      	bne.n	8009f5c <USBD_StdDevReq+0x270>
 8009e96:	4620      	mov	r0, r4
 8009e98:	f000 f9ec 	bl	800a274 <USBD_CtlSendStatus>
 8009e9c:	e73a      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009e9e:	7c03      	ldrb	r3, [r0, #16]
 8009ea0:	2b00      	cmp	r3, #0
 8009ea2:	f47f af2f 	bne.w	8009d04 <USBD_StdDevReq+0x18>
 8009ea6:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009eaa:	f10d 0006 	add.w	r0, sp, #6
 8009eae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009eb0:	4798      	blx	r3
 8009eb2:	e7e9      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009eb4:	b2d2      	uxtb	r2, r2
 8009eb6:	2a05      	cmp	r2, #5
 8009eb8:	f63f af24 	bhi.w	8009d04 <USBD_StdDevReq+0x18>
 8009ebc:	e8df f002 	tbb	[pc, r2]
 8009ec0:	272f373f 	.word	0x272f373f
 8009ec4:	171f      	.short	0x171f
 8009ec6:	7c03      	ldrb	r3, [r0, #16]
 8009ec8:	2b00      	cmp	r3, #0
 8009eca:	d172      	bne.n	8009fb2 <USBD_StdDevReq+0x2c6>
 8009ecc:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009ed0:	f10d 0006 	add.w	r0, sp, #6
 8009ed4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009ed6:	4798      	blx	r3
 8009ed8:	2302      	movs	r3, #2
 8009eda:	7043      	strb	r3, [r0, #1]
 8009edc:	e7d4      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009ede:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009ee2:	f10d 0106 	add.w	r1, sp, #6
 8009ee6:	681b      	ldr	r3, [r3, #0]
 8009ee8:	7c00      	ldrb	r0, [r0, #16]
 8009eea:	4798      	blx	r3
 8009eec:	e7cc      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009eee:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009ef2:	f10d 0106 	add.w	r1, sp, #6
 8009ef6:	699b      	ldr	r3, [r3, #24]
 8009ef8:	7c00      	ldrb	r0, [r0, #16]
 8009efa:	4798      	blx	r3
 8009efc:	e7c4      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009efe:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009f02:	f10d 0106 	add.w	r1, sp, #6
 8009f06:	695b      	ldr	r3, [r3, #20]
 8009f08:	7c00      	ldrb	r0, [r0, #16]
 8009f0a:	4798      	blx	r3
 8009f0c:	e7bc      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009f0e:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009f12:	f10d 0106 	add.w	r1, sp, #6
 8009f16:	691b      	ldr	r3, [r3, #16]
 8009f18:	7c00      	ldrb	r0, [r0, #16]
 8009f1a:	4798      	blx	r3
 8009f1c:	e7b4      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009f1e:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009f22:	f10d 0106 	add.w	r1, sp, #6
 8009f26:	68db      	ldr	r3, [r3, #12]
 8009f28:	7c00      	ldrb	r0, [r0, #16]
 8009f2a:	4798      	blx	r3
 8009f2c:	e7ac      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009f2e:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009f32:	f10d 0106 	add.w	r1, sp, #6
 8009f36:	689b      	ldr	r3, [r3, #8]
 8009f38:	7c00      	ldrb	r0, [r0, #16]
 8009f3a:	4798      	blx	r3
 8009f3c:	e7a4      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009f3e:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009f42:	f10d 0106 	add.w	r1, sp, #6
 8009f46:	685b      	ldr	r3, [r3, #4]
 8009f48:	7c00      	ldrb	r0, [r0, #16]
 8009f4a:	4798      	blx	r3
 8009f4c:	e79c      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009f4e:	2b03      	cmp	r3, #3
 8009f50:	f47f aed8 	bne.w	8009d04 <USBD_StdDevReq+0x18>
 8009f54:	1d01      	adds	r1, r0, #4
 8009f56:	f000 f95d 	bl	800a214 <USBD_CtlSendData>
 8009f5a:	e6db      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009f5c:	429a      	cmp	r2, r3
 8009f5e:	bf28      	it	cs
 8009f60:	461a      	movcs	r2, r3
 8009f62:	4601      	mov	r1, r0
 8009f64:	4620      	mov	r0, r4
 8009f66:	f8ad 2006 	strh.w	r2, [sp, #6]
 8009f6a:	f000 f953 	bl	800a214 <USBD_CtlSendData>
 8009f6e:	88eb      	ldrh	r3, [r5, #6]
 8009f70:	2b00      	cmp	r3, #0
 8009f72:	f47f aecf 	bne.w	8009d14 <USBD_StdDevReq+0x28>
 8009f76:	e78e      	b.n	8009e96 <USBD_StdDevReq+0x1aa>
 8009f78:	b321      	cbz	r1, 8009fc4 <USBD_StdDevReq+0x2d8>
 8009f7a:	6841      	ldr	r1, [r0, #4]
 8009f7c:	2901      	cmp	r1, #1
 8009f7e:	d08a      	beq.n	8009e96 <USBD_StdDevReq+0x1aa>
 8009f80:	b2c9      	uxtb	r1, r1
 8009f82:	f7ff fd8b 	bl	8009a9c <USBD_ClrClassConfig>
 8009f86:	7829      	ldrb	r1, [r5, #0]
 8009f88:	4620      	mov	r0, r4
 8009f8a:	6061      	str	r1, [r4, #4]
 8009f8c:	f7ff fd7c 	bl	8009a88 <USBD_SetClassConfig>
 8009f90:	2802      	cmp	r0, #2
 8009f92:	d180      	bne.n	8009e96 <USBD_StdDevReq+0x1aa>
 8009f94:	e6b6      	b.n	8009d04 <USBD_StdDevReq+0x18>
 8009f96:	2900      	cmp	r1, #0
 8009f98:	f43f af7d 	beq.w	8009e96 <USBD_StdDevReq+0x1aa>
 8009f9c:	2101      	movs	r1, #1
 8009f9e:	2303      	movs	r3, #3
 8009fa0:	6041      	str	r1, [r0, #4]
 8009fa2:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 8009fa6:	f7ff fd6f 	bl	8009a88 <USBD_SetClassConfig>
 8009faa:	2802      	cmp	r0, #2
 8009fac:	f47f af73 	bne.w	8009e96 <USBD_StdDevReq+0x1aa>
 8009fb0:	e6a8      	b.n	8009d04 <USBD_StdDevReq+0x18>
 8009fb2:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009fb6:	f10d 0006 	add.w	r0, sp, #6
 8009fba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fbc:	4798      	blx	r3
 8009fbe:	2302      	movs	r3, #2
 8009fc0:	7043      	strb	r3, [r0, #1]
 8009fc2:	e761      	b.n	8009e88 <USBD_StdDevReq+0x19c>
 8009fc4:	2302      	movs	r3, #2
 8009fc6:	6041      	str	r1, [r0, #4]
 8009fc8:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 8009fcc:	f7ff fd66 	bl	8009a9c <USBD_ClrClassConfig>
 8009fd0:	e761      	b.n	8009e96 <USBD_StdDevReq+0x1aa>
 8009fd2:	2301      	movs	r3, #1
 8009fd4:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 8009fd8:	e69c      	b.n	8009d14 <USBD_StdDevReq+0x28>
 8009fda:	bf00      	nop
 8009fdc:	20000904 	.word	0x20000904

08009fe0 <USBD_StdItfReq>:
 8009fe0:	b538      	push	{r3, r4, r5, lr}
 8009fe2:	780b      	ldrb	r3, [r1, #0]
 8009fe4:	460d      	mov	r5, r1
 8009fe6:	f003 0260 	and.w	r2, r3, #96	; 0x60
 8009fea:	2a40      	cmp	r2, #64	; 0x40
 8009fec:	4604      	mov	r4, r0
 8009fee:	d00a      	beq.n	800a006 <USBD_StdItfReq+0x26>
 8009ff0:	065b      	lsls	r3, r3, #25
 8009ff2:	d508      	bpl.n	800a006 <USBD_StdItfReq+0x26>
 8009ff4:	2180      	movs	r1, #128	; 0x80
 8009ff6:	f000 fbb7 	bl	800a768 <USBD_LL_StallEP>
 8009ffa:	2100      	movs	r1, #0
 8009ffc:	4620      	mov	r0, r4
 8009ffe:	f000 fbb3 	bl	800a768 <USBD_LL_StallEP>
 800a002:	2000      	movs	r0, #0
 800a004:	bd38      	pop	{r3, r4, r5, pc}
 800a006:	f894 3274 	ldrb.w	r3, [r4, #628]	; 0x274
 800a00a:	3b01      	subs	r3, #1
 800a00c:	2b02      	cmp	r3, #2
 800a00e:	d811      	bhi.n	800a034 <USBD_StdItfReq+0x54>
 800a010:	792b      	ldrb	r3, [r5, #4]
 800a012:	2b01      	cmp	r3, #1
 800a014:	d80e      	bhi.n	800a034 <USBD_StdItfReq+0x54>
 800a016:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a01a:	4629      	mov	r1, r5
 800a01c:	689b      	ldr	r3, [r3, #8]
 800a01e:	4620      	mov	r0, r4
 800a020:	4798      	blx	r3
 800a022:	88eb      	ldrh	r3, [r5, #6]
 800a024:	2b00      	cmp	r3, #0
 800a026:	d1ec      	bne.n	800a002 <USBD_StdItfReq+0x22>
 800a028:	2800      	cmp	r0, #0
 800a02a:	d1ea      	bne.n	800a002 <USBD_StdItfReq+0x22>
 800a02c:	4620      	mov	r0, r4
 800a02e:	f000 f921 	bl	800a274 <USBD_CtlSendStatus>
 800a032:	e7e6      	b.n	800a002 <USBD_StdItfReq+0x22>
 800a034:	2180      	movs	r1, #128	; 0x80
 800a036:	4620      	mov	r0, r4
 800a038:	f000 fb96 	bl	800a768 <USBD_LL_StallEP>
 800a03c:	2100      	movs	r1, #0
 800a03e:	4620      	mov	r0, r4
 800a040:	f000 fb92 	bl	800a768 <USBD_LL_StallEP>
 800a044:	2000      	movs	r0, #0
 800a046:	bd38      	pop	{r3, r4, r5, pc}

0800a048 <USBD_StdEPReq>:
 800a048:	b538      	push	{r3, r4, r5, lr}
 800a04a:	780b      	ldrb	r3, [r1, #0]
 800a04c:	4604      	mov	r4, r0
 800a04e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a052:	2b20      	cmp	r3, #32
 800a054:	d00c      	beq.n	800a070 <USBD_StdEPReq+0x28>
 800a056:	2b40      	cmp	r3, #64	; 0x40
 800a058:	d00a      	beq.n	800a070 <USBD_StdEPReq+0x28>
 800a05a:	b183      	cbz	r3, 800a07e <USBD_StdEPReq+0x36>
 800a05c:	2180      	movs	r1, #128	; 0x80
 800a05e:	4620      	mov	r0, r4
 800a060:	f000 fb82 	bl	800a768 <USBD_LL_StallEP>
 800a064:	2100      	movs	r1, #0
 800a066:	4620      	mov	r0, r4
 800a068:	f000 fb7e 	bl	800a768 <USBD_LL_StallEP>
 800a06c:	2000      	movs	r0, #0
 800a06e:	bd38      	pop	{r3, r4, r5, pc}
 800a070:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a074:	4620      	mov	r0, r4
 800a076:	689b      	ldr	r3, [r3, #8]
 800a078:	4798      	blx	r3
 800a07a:	2000      	movs	r0, #0
 800a07c:	bd38      	pop	{r3, r4, r5, pc}
 800a07e:	784b      	ldrb	r3, [r1, #1]
 800a080:	888a      	ldrh	r2, [r1, #4]
 800a082:	2b01      	cmp	r3, #1
 800a084:	fa5f fc82 	uxtb.w	ip, r2
 800a088:	d03e      	beq.n	800a108 <USBD_StdEPReq+0xc0>
 800a08a:	2b03      	cmp	r3, #3
 800a08c:	d02a      	beq.n	800a0e4 <USBD_StdEPReq+0x9c>
 800a08e:	2b00      	cmp	r3, #0
 800a090:	d1e4      	bne.n	800a05c <USBD_StdEPReq+0x14>
 800a092:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a096:	2b02      	cmp	r3, #2
 800a098:	d051      	beq.n	800a13e <USBD_StdEPReq+0xf6>
 800a09a:	2b03      	cmp	r3, #3
 800a09c:	d1de      	bne.n	800a05c <USBD_StdEPReq+0x14>
 800a09e:	f00c 030f 	and.w	r3, ip, #15
 800a0a2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a0a6:	0612      	lsls	r2, r2, #24
 800a0a8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800a0ac:	d456      	bmi.n	800a15c <USBD_StdEPReq+0x114>
 800a0ae:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 800a0b2:	2b00      	cmp	r3, #0
 800a0b4:	d0d2      	beq.n	800a05c <USBD_StdEPReq+0x14>
 800a0b6:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a0ba:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 800a0be:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a0c2:	f505 75a0 	add.w	r5, r5, #320	; 0x140
 800a0c6:	b133      	cbz	r3, 800a0d6 <USBD_StdEPReq+0x8e>
 800a0c8:	4661      	mov	r1, ip
 800a0ca:	4620      	mov	r0, r4
 800a0cc:	f000 fb68 	bl	800a7a0 <USBD_LL_IsStallEP>
 800a0d0:	2800      	cmp	r0, #0
 800a0d2:	d04f      	beq.n	800a174 <USBD_StdEPReq+0x12c>
 800a0d4:	2301      	movs	r3, #1
 800a0d6:	602b      	str	r3, [r5, #0]
 800a0d8:	2202      	movs	r2, #2
 800a0da:	4629      	mov	r1, r5
 800a0dc:	4620      	mov	r0, r4
 800a0de:	f000 f899 	bl	800a214 <USBD_CtlSendData>
 800a0e2:	e7c3      	b.n	800a06c <USBD_StdEPReq+0x24>
 800a0e4:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a0e8:	2b02      	cmp	r3, #2
 800a0ea:	d01d      	beq.n	800a128 <USBD_StdEPReq+0xe0>
 800a0ec:	2b03      	cmp	r3, #3
 800a0ee:	d1b5      	bne.n	800a05c <USBD_StdEPReq+0x14>
 800a0f0:	884b      	ldrh	r3, [r1, #2]
 800a0f2:	b92b      	cbnz	r3, 800a100 <USBD_StdEPReq+0xb8>
 800a0f4:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a0f8:	d002      	beq.n	800a100 <USBD_StdEPReq+0xb8>
 800a0fa:	88cb      	ldrh	r3, [r1, #6]
 800a0fc:	2b00      	cmp	r3, #0
 800a0fe:	d03b      	beq.n	800a178 <USBD_StdEPReq+0x130>
 800a100:	4620      	mov	r0, r4
 800a102:	f000 f8b7 	bl	800a274 <USBD_CtlSendStatus>
 800a106:	e7b1      	b.n	800a06c <USBD_StdEPReq+0x24>
 800a108:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a10c:	2b02      	cmp	r3, #2
 800a10e:	d00b      	beq.n	800a128 <USBD_StdEPReq+0xe0>
 800a110:	2b03      	cmp	r3, #3
 800a112:	d1a3      	bne.n	800a05c <USBD_StdEPReq+0x14>
 800a114:	884b      	ldrh	r3, [r1, #2]
 800a116:	2b00      	cmp	r3, #0
 800a118:	d1a8      	bne.n	800a06c <USBD_StdEPReq+0x24>
 800a11a:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a11e:	d0ef      	beq.n	800a100 <USBD_StdEPReq+0xb8>
 800a120:	4661      	mov	r1, ip
 800a122:	f000 fb2f 	bl	800a784 <USBD_LL_ClearStallEP>
 800a126:	e7eb      	b.n	800a100 <USBD_StdEPReq+0xb8>
 800a128:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a12c:	d096      	beq.n	800a05c <USBD_StdEPReq+0x14>
 800a12e:	4661      	mov	r1, ip
 800a130:	f000 fb1a 	bl	800a768 <USBD_LL_StallEP>
 800a134:	2180      	movs	r1, #128	; 0x80
 800a136:	4620      	mov	r0, r4
 800a138:	f000 fb16 	bl	800a768 <USBD_LL_StallEP>
 800a13c:	e796      	b.n	800a06c <USBD_StdEPReq+0x24>
 800a13e:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a142:	d18b      	bne.n	800a05c <USBD_StdEPReq+0x14>
 800a144:	2300      	movs	r3, #0
 800a146:	0611      	lsls	r1, r2, #24
 800a148:	bf4c      	ite	mi
 800a14a:	f100 0114 	addmi.w	r1, r0, #20
 800a14e:	f500 71a0 	addpl.w	r1, r0, #320	; 0x140
 800a152:	2202      	movs	r2, #2
 800a154:	600b      	str	r3, [r1, #0]
 800a156:	f000 f85d 	bl	800a214 <USBD_CtlSendData>
 800a15a:	e787      	b.n	800a06c <USBD_StdEPReq+0x24>
 800a15c:	699b      	ldr	r3, [r3, #24]
 800a15e:	2b00      	cmp	r3, #0
 800a160:	f43f af7c 	beq.w	800a05c <USBD_StdEPReq+0x14>
 800a164:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a168:	1c5d      	adds	r5, r3, #1
 800a16a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a16e:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a172:	e7a8      	b.n	800a0c6 <USBD_StdEPReq+0x7e>
 800a174:	6028      	str	r0, [r5, #0]
 800a176:	e7af      	b.n	800a0d8 <USBD_StdEPReq+0x90>
 800a178:	4661      	mov	r1, ip
 800a17a:	f000 faf5 	bl	800a768 <USBD_LL_StallEP>
 800a17e:	e7bf      	b.n	800a100 <USBD_StdEPReq+0xb8>

0800a180 <USBD_ParseSetupRequest>:
 800a180:	780b      	ldrb	r3, [r1, #0]
 800a182:	7003      	strb	r3, [r0, #0]
 800a184:	784b      	ldrb	r3, [r1, #1]
 800a186:	7043      	strb	r3, [r0, #1]
 800a188:	78ca      	ldrb	r2, [r1, #3]
 800a18a:	788b      	ldrb	r3, [r1, #2]
 800a18c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a190:	8043      	strh	r3, [r0, #2]
 800a192:	794a      	ldrb	r2, [r1, #5]
 800a194:	790b      	ldrb	r3, [r1, #4]
 800a196:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a19a:	8083      	strh	r3, [r0, #4]
 800a19c:	79ca      	ldrb	r2, [r1, #7]
 800a19e:	798b      	ldrb	r3, [r1, #6]
 800a1a0:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a1a4:	80c3      	strh	r3, [r0, #6]
 800a1a6:	4770      	bx	lr

0800a1a8 <USBD_CtlError>:
 800a1a8:	b510      	push	{r4, lr}
 800a1aa:	4604      	mov	r4, r0
 800a1ac:	2180      	movs	r1, #128	; 0x80
 800a1ae:	f000 fadb 	bl	800a768 <USBD_LL_StallEP>
 800a1b2:	4620      	mov	r0, r4
 800a1b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a1b8:	2100      	movs	r1, #0
 800a1ba:	f000 bad5 	b.w	800a768 <USBD_LL_StallEP>
 800a1be:	bf00      	nop

0800a1c0 <USBD_GetString>:
 800a1c0:	b318      	cbz	r0, 800a20a <USBD_GetString+0x4a>
 800a1c2:	7803      	ldrb	r3, [r0, #0]
 800a1c4:	b430      	push	{r4, r5}
 800a1c6:	b30b      	cbz	r3, 800a20c <USBD_GetString+0x4c>
 800a1c8:	4604      	mov	r4, r0
 800a1ca:	f1c0 0c01 	rsb	ip, r0, #1
 800a1ce:	eb04 030c 	add.w	r3, r4, ip
 800a1d2:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a1d6:	b2db      	uxtb	r3, r3
 800a1d8:	2d00      	cmp	r5, #0
 800a1da:	d1f8      	bne.n	800a1ce <USBD_GetString+0xe>
 800a1dc:	3301      	adds	r3, #1
 800a1de:	005b      	lsls	r3, r3, #1
 800a1e0:	b2dc      	uxtb	r4, r3
 800a1e2:	8013      	strh	r3, [r2, #0]
 800a1e4:	2303      	movs	r3, #3
 800a1e6:	700c      	strb	r4, [r1, #0]
 800a1e8:	704b      	strb	r3, [r1, #1]
 800a1ea:	7804      	ldrb	r4, [r0, #0]
 800a1ec:	b15c      	cbz	r4, 800a206 <USBD_GetString+0x46>
 800a1ee:	2302      	movs	r3, #2
 800a1f0:	2500      	movs	r5, #0
 800a1f2:	1c5a      	adds	r2, r3, #1
 800a1f4:	b2d2      	uxtb	r2, r2
 800a1f6:	54cc      	strb	r4, [r1, r3]
 800a1f8:	548d      	strb	r5, [r1, r2]
 800a1fa:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800a1fe:	3302      	adds	r3, #2
 800a200:	b2db      	uxtb	r3, r3
 800a202:	2c00      	cmp	r4, #0
 800a204:	d1f5      	bne.n	800a1f2 <USBD_GetString+0x32>
 800a206:	bc30      	pop	{r4, r5}
 800a208:	4770      	bx	lr
 800a20a:	4770      	bx	lr
 800a20c:	2402      	movs	r4, #2
 800a20e:	4623      	mov	r3, r4
 800a210:	e7e7      	b.n	800a1e2 <USBD_GetString+0x22>
 800a212:	bf00      	nop

0800a214 <USBD_CtlSendData>:
 800a214:	b510      	push	{r4, lr}
 800a216:	4613      	mov	r3, r2
 800a218:	2402      	movs	r4, #2
 800a21a:	460a      	mov	r2, r1
 800a21c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a220:	2100      	movs	r1, #0
 800a222:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a226:	f000 fadd 	bl	800a7e4 <USBD_LL_Transmit>
 800a22a:	2000      	movs	r0, #0
 800a22c:	bd10      	pop	{r4, pc}
 800a22e:	bf00      	nop

0800a230 <USBD_CtlContinueSendData>:
 800a230:	468c      	mov	ip, r1
 800a232:	b508      	push	{r3, lr}
 800a234:	2100      	movs	r1, #0
 800a236:	4613      	mov	r3, r2
 800a238:	4662      	mov	r2, ip
 800a23a:	f000 fad3 	bl	800a7e4 <USBD_LL_Transmit>
 800a23e:	2000      	movs	r0, #0
 800a240:	bd08      	pop	{r3, pc}
 800a242:	bf00      	nop

0800a244 <USBD_CtlPrepareRx>:
 800a244:	b510      	push	{r4, lr}
 800a246:	4613      	mov	r3, r2
 800a248:	2403      	movs	r4, #3
 800a24a:	460a      	mov	r2, r1
 800a24c:	e9c0 3352 	strd	r3, r3, [r0, #328]	; 0x148
 800a250:	2100      	movs	r1, #0
 800a252:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a256:	f000 fad3 	bl	800a800 <USBD_LL_PrepareReceive>
 800a25a:	2000      	movs	r0, #0
 800a25c:	bd10      	pop	{r4, pc}
 800a25e:	bf00      	nop

0800a260 <USBD_CtlContinueRx>:
 800a260:	468c      	mov	ip, r1
 800a262:	b508      	push	{r3, lr}
 800a264:	2100      	movs	r1, #0
 800a266:	4613      	mov	r3, r2
 800a268:	4662      	mov	r2, ip
 800a26a:	f000 fac9 	bl	800a800 <USBD_LL_PrepareReceive>
 800a26e:	2000      	movs	r0, #0
 800a270:	bd08      	pop	{r3, pc}
 800a272:	bf00      	nop

0800a274 <USBD_CtlSendStatus>:
 800a274:	b508      	push	{r3, lr}
 800a276:	2104      	movs	r1, #4
 800a278:	2300      	movs	r3, #0
 800a27a:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a27e:	461a      	mov	r2, r3
 800a280:	4619      	mov	r1, r3
 800a282:	f000 faaf 	bl	800a7e4 <USBD_LL_Transmit>
 800a286:	2000      	movs	r0, #0
 800a288:	bd08      	pop	{r3, pc}
 800a28a:	bf00      	nop

0800a28c <USBD_CtlReceiveStatus>:
 800a28c:	b508      	push	{r3, lr}
 800a28e:	2105      	movs	r1, #5
 800a290:	2300      	movs	r3, #0
 800a292:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a296:	461a      	mov	r2, r3
 800a298:	4619      	mov	r1, r3
 800a29a:	f000 fab1 	bl	800a800 <USBD_LL_PrepareReceive>
 800a29e:	2000      	movs	r0, #0
 800a2a0:	bd08      	pop	{r3, pc}
 800a2a2:	bf00      	nop

0800a2a4 <MX_USB_DEVICE_Init>:
 800a2a4:	b508      	push	{r3, lr}
 800a2a6:	2200      	movs	r2, #0
 800a2a8:	4917      	ldr	r1, [pc, #92]	; (800a308 <MX_USB_DEVICE_Init+0x64>)
 800a2aa:	4818      	ldr	r0, [pc, #96]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2ac:	f7ff fbc8 	bl	8009a40 <USBD_Init>
 800a2b0:	b970      	cbnz	r0, 800a2d0 <MX_USB_DEVICE_Init+0x2c>
 800a2b2:	4917      	ldr	r1, [pc, #92]	; (800a310 <MX_USB_DEVICE_Init+0x6c>)
 800a2b4:	4815      	ldr	r0, [pc, #84]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2b6:	f7ff fbd9 	bl	8009a6c <USBD_RegisterClass>
 800a2ba:	b988      	cbnz	r0, 800a2e0 <MX_USB_DEVICE_Init+0x3c>
 800a2bc:	4915      	ldr	r1, [pc, #84]	; (800a314 <MX_USB_DEVICE_Init+0x70>)
 800a2be:	4813      	ldr	r0, [pc, #76]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2c0:	f7ff fb6e 	bl	80099a0 <USBD_CDC_RegisterInterface>
 800a2c4:	b9a0      	cbnz	r0, 800a2f0 <MX_USB_DEVICE_Init+0x4c>
 800a2c6:	4811      	ldr	r0, [pc, #68]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2c8:	f7ff fbd8 	bl	8009a7c <USBD_Start>
 800a2cc:	b9b8      	cbnz	r0, 800a2fe <MX_USB_DEVICE_Init+0x5a>
 800a2ce:	bd08      	pop	{r3, pc}
 800a2d0:	f7fa fc0c 	bl	8004aec <Error_Handler>
 800a2d4:	490e      	ldr	r1, [pc, #56]	; (800a310 <MX_USB_DEVICE_Init+0x6c>)
 800a2d6:	480d      	ldr	r0, [pc, #52]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2d8:	f7ff fbc8 	bl	8009a6c <USBD_RegisterClass>
 800a2dc:	2800      	cmp	r0, #0
 800a2de:	d0ed      	beq.n	800a2bc <MX_USB_DEVICE_Init+0x18>
 800a2e0:	f7fa fc04 	bl	8004aec <Error_Handler>
 800a2e4:	490b      	ldr	r1, [pc, #44]	; (800a314 <MX_USB_DEVICE_Init+0x70>)
 800a2e6:	4809      	ldr	r0, [pc, #36]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2e8:	f7ff fb5a 	bl	80099a0 <USBD_CDC_RegisterInterface>
 800a2ec:	2800      	cmp	r0, #0
 800a2ee:	d0ea      	beq.n	800a2c6 <MX_USB_DEVICE_Init+0x22>
 800a2f0:	f7fa fbfc 	bl	8004aec <Error_Handler>
 800a2f4:	4805      	ldr	r0, [pc, #20]	; (800a30c <MX_USB_DEVICE_Init+0x68>)
 800a2f6:	f7ff fbc1 	bl	8009a7c <USBD_Start>
 800a2fa:	2800      	cmp	r0, #0
 800a2fc:	d0e7      	beq.n	800a2ce <MX_USB_DEVICE_Init+0x2a>
 800a2fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a302:	f7fa bbf3 	b.w	8004aec <Error_Handler>
 800a306:	bf00      	nop
 800a308:	20000150 	.word	0x20000150
 800a30c:	20000908 	.word	0x20000908
 800a310:	20000030 	.word	0x20000030
 800a314:	20000140 	.word	0x20000140

0800a318 <CDC_DeInit_FS>:
 800a318:	2000      	movs	r0, #0
 800a31a:	4770      	bx	lr

0800a31c <CDC_Init_FS>:
 800a31c:	b510      	push	{r4, lr}
 800a31e:	4c06      	ldr	r4, [pc, #24]	; (800a338 <CDC_Init_FS+0x1c>)
 800a320:	2200      	movs	r2, #0
 800a322:	4620      	mov	r0, r4
 800a324:	4905      	ldr	r1, [pc, #20]	; (800a33c <CDC_Init_FS+0x20>)
 800a326:	f7ff fb43 	bl	80099b0 <USBD_CDC_SetTxBuffer>
 800a32a:	4620      	mov	r0, r4
 800a32c:	4904      	ldr	r1, [pc, #16]	; (800a340 <CDC_Init_FS+0x24>)
 800a32e:	f7ff fb49 	bl	80099c4 <USBD_CDC_SetRxBuffer>
 800a332:	2000      	movs	r0, #0
 800a334:	bd10      	pop	{r4, pc}
 800a336:	bf00      	nop
 800a338:	20000908 	.word	0x20000908
 800a33c:	20000c24 	.word	0x20000c24
 800a340:	20000ba4 	.word	0x20000ba4

0800a344 <CDC_Control_FS>:
 800a344:	2821      	cmp	r0, #33	; 0x21
 800a346:	d106      	bne.n	800a356 <CDC_Control_FS+0x12>
 800a348:	2300      	movs	r3, #0
 800a34a:	2208      	movs	r2, #8
 800a34c:	4803      	ldr	r0, [pc, #12]	; (800a35c <CDC_Control_FS+0x18>)
 800a34e:	710b      	strb	r3, [r1, #4]
 800a350:	6008      	str	r0, [r1, #0]
 800a352:	714b      	strb	r3, [r1, #5]
 800a354:	718a      	strb	r2, [r1, #6]
 800a356:	2000      	movs	r0, #0
 800a358:	4770      	bx	lr
 800a35a:	bf00      	nop
 800a35c:	0001c220 	.word	0x0001c220

0800a360 <CDC_Receive_FS>:
 800a360:	680a      	ldr	r2, [r1, #0]
 800a362:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a366:	4605      	mov	r5, r0
 800a368:	b1d2      	cbz	r2, 800a3a0 <CDC_Receive_FS+0x40>
 800a36a:	460e      	mov	r6, r1
 800a36c:	f04f 0801 	mov.w	r8, #1
 800a370:	4f17      	ldr	r7, [pc, #92]	; (800a3d0 <CDC_Receive_FS+0x70>)
 800a372:	f100 39ff 	add.w	r9, r0, #4294967295
 800a376:	e008      	b.n	800a38a <CDC_Receive_FS+0x2a>
 800a378:	280d      	cmp	r0, #13
 800a37a:	d00b      	beq.n	800a394 <CDC_Receive_FS+0x34>
 800a37c:	f7fa fb9e 	bl	8004abc <Write_to_circ_buffer>
 800a380:	3402      	adds	r4, #2
 800a382:	6832      	ldr	r2, [r6, #0]
 800a384:	1b64      	subs	r4, r4, r5
 800a386:	42a2      	cmp	r2, r4
 800a388:	d909      	bls.n	800a39e <CDC_Receive_FS+0x3e>
 800a38a:	464c      	mov	r4, r9
 800a38c:	f819 0f01 	ldrb.w	r0, [r9, #1]!
 800a390:	280a      	cmp	r0, #10
 800a392:	d1f1      	bne.n	800a378 <CDC_Receive_FS+0x18>
 800a394:	f887 8000 	strb.w	r8, [r7]
 800a398:	f899 0000 	ldrb.w	r0, [r9]
 800a39c:	e7ee      	b.n	800a37c <CDC_Receive_FS+0x1c>
 800a39e:	b292      	uxth	r2, r2
 800a3a0:	4c0c      	ldr	r4, [pc, #48]	; (800a3d4 <CDC_Receive_FS+0x74>)
 800a3a2:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a3a6:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a3aa:	b933      	cbnz	r3, 800a3ba <CDC_Receive_FS+0x5a>
 800a3ac:	4629      	mov	r1, r5
 800a3ae:	4620      	mov	r0, r4
 800a3b0:	f7ff fafe 	bl	80099b0 <USBD_CDC_SetTxBuffer>
 800a3b4:	4620      	mov	r0, r4
 800a3b6:	f7ff fb0d 	bl	80099d4 <USBD_CDC_TransmitPacket>
 800a3ba:	4629      	mov	r1, r5
 800a3bc:	4805      	ldr	r0, [pc, #20]	; (800a3d4 <CDC_Receive_FS+0x74>)
 800a3be:	f7ff fb01 	bl	80099c4 <USBD_CDC_SetRxBuffer>
 800a3c2:	4804      	ldr	r0, [pc, #16]	; (800a3d4 <CDC_Receive_FS+0x74>)
 800a3c4:	f7ff fb20 	bl	8009a08 <USBD_CDC_ReceivePacket>
 800a3c8:	2000      	movs	r0, #0
 800a3ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a3ce:	bf00      	nop
 800a3d0:	2000064c 	.word	0x2000064c
 800a3d4:	20000908 	.word	0x20000908

0800a3d8 <CDC_Transmit_FS>:
 800a3d8:	b510      	push	{r4, lr}
 800a3da:	4c09      	ldr	r4, [pc, #36]	; (800a400 <CDC_Transmit_FS+0x28>)
 800a3dc:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a3e0:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a3e4:	b10b      	cbz	r3, 800a3ea <CDC_Transmit_FS+0x12>
 800a3e6:	2001      	movs	r0, #1
 800a3e8:	bd10      	pop	{r4, pc}
 800a3ea:	460a      	mov	r2, r1
 800a3ec:	4601      	mov	r1, r0
 800a3ee:	4620      	mov	r0, r4
 800a3f0:	f7ff fade 	bl	80099b0 <USBD_CDC_SetTxBuffer>
 800a3f4:	4620      	mov	r0, r4
 800a3f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a3fa:	f7ff baeb 	b.w	80099d4 <USBD_CDC_TransmitPacket>
 800a3fe:	bf00      	nop
 800a400:	20000908 	.word	0x20000908

0800a404 <USBD_FS_DeviceDescriptor>:
 800a404:	2312      	movs	r3, #18
 800a406:	4801      	ldr	r0, [pc, #4]	; (800a40c <USBD_FS_DeviceDescriptor+0x8>)
 800a408:	800b      	strh	r3, [r1, #0]
 800a40a:	4770      	bx	lr
 800a40c:	2000016c 	.word	0x2000016c

0800a410 <USBD_FS_LangIDStrDescriptor>:
 800a410:	2304      	movs	r3, #4
 800a412:	4801      	ldr	r0, [pc, #4]	; (800a418 <USBD_FS_LangIDStrDescriptor+0x8>)
 800a414:	800b      	strh	r3, [r1, #0]
 800a416:	4770      	bx	lr
 800a418:	20000180 	.word	0x20000180

0800a41c <USBD_FS_ManufacturerStrDescriptor>:
 800a41c:	b510      	push	{r4, lr}
 800a41e:	4c04      	ldr	r4, [pc, #16]	; (800a430 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 800a420:	460a      	mov	r2, r1
 800a422:	4804      	ldr	r0, [pc, #16]	; (800a434 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 800a424:	4621      	mov	r1, r4
 800a426:	f7ff fecb 	bl	800a1c0 <USBD_GetString>
 800a42a:	4620      	mov	r0, r4
 800a42c:	bd10      	pop	{r4, pc}
 800a42e:	bf00      	nop
 800a430:	20000d24 	.word	0x20000d24
 800a434:	0801070c 	.word	0x0801070c

0800a438 <USBD_FS_ProductStrDescriptor>:
 800a438:	b510      	push	{r4, lr}
 800a43a:	4c04      	ldr	r4, [pc, #16]	; (800a44c <USBD_FS_ProductStrDescriptor+0x14>)
 800a43c:	460a      	mov	r2, r1
 800a43e:	4804      	ldr	r0, [pc, #16]	; (800a450 <USBD_FS_ProductStrDescriptor+0x18>)
 800a440:	4621      	mov	r1, r4
 800a442:	f7ff febd 	bl	800a1c0 <USBD_GetString>
 800a446:	4620      	mov	r0, r4
 800a448:	bd10      	pop	{r4, pc}
 800a44a:	bf00      	nop
 800a44c:	20000d24 	.word	0x20000d24
 800a450:	0801071c 	.word	0x0801071c

0800a454 <USBD_FS_ConfigStrDescriptor>:
 800a454:	b510      	push	{r4, lr}
 800a456:	4c04      	ldr	r4, [pc, #16]	; (800a468 <USBD_FS_ConfigStrDescriptor+0x14>)
 800a458:	460a      	mov	r2, r1
 800a45a:	4804      	ldr	r0, [pc, #16]	; (800a46c <USBD_FS_ConfigStrDescriptor+0x18>)
 800a45c:	4621      	mov	r1, r4
 800a45e:	f7ff feaf 	bl	800a1c0 <USBD_GetString>
 800a462:	4620      	mov	r0, r4
 800a464:	bd10      	pop	{r4, pc}
 800a466:	bf00      	nop
 800a468:	20000d24 	.word	0x20000d24
 800a46c:	08010728 	.word	0x08010728

0800a470 <USBD_FS_InterfaceStrDescriptor>:
 800a470:	b510      	push	{r4, lr}
 800a472:	4c04      	ldr	r4, [pc, #16]	; (800a484 <USBD_FS_InterfaceStrDescriptor+0x14>)
 800a474:	460a      	mov	r2, r1
 800a476:	4804      	ldr	r0, [pc, #16]	; (800a488 <USBD_FS_InterfaceStrDescriptor+0x18>)
 800a478:	4621      	mov	r1, r4
 800a47a:	f7ff fea1 	bl	800a1c0 <USBD_GetString>
 800a47e:	4620      	mov	r0, r4
 800a480:	bd10      	pop	{r4, pc}
 800a482:	bf00      	nop
 800a484:	20000d24 	.word	0x20000d24
 800a488:	08010734 	.word	0x08010734

0800a48c <USBD_FS_SerialStrDescriptor>:
 800a48c:	f04f 0c1a 	mov.w	ip, #26
 800a490:	4a42      	ldr	r2, [pc, #264]	; (800a59c <USBD_FS_SerialStrDescriptor+0x110>)
 800a492:	6d10      	ldr	r0, [r2, #80]	; 0x50
 800a494:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800a496:	f8a1 c000 	strh.w	ip, [r1]
 800a49a:	18c3      	adds	r3, r0, r3
 800a49c:	d101      	bne.n	800a4a2 <USBD_FS_SerialStrDescriptor+0x16>
 800a49e:	4840      	ldr	r0, [pc, #256]	; (800a5a0 <USBD_FS_SerialStrDescriptor+0x114>)
 800a4a0:	4770      	bx	lr
 800a4a2:	f04f 0c00 	mov.w	ip, #0
 800a4a6:	6d51      	ldr	r1, [r2, #84]	; 0x54
 800a4a8:	0f18      	lsrs	r0, r3, #28
 800a4aa:	4a3d      	ldr	r2, [pc, #244]	; (800a5a0 <USBD_FS_SerialStrDescriptor+0x114>)
 800a4ac:	f1b3 4f20 	cmp.w	r3, #2684354560	; 0xa0000000
 800a4b0:	bf2c      	ite	cs
 800a4b2:	3037      	addcs	r0, #55	; 0x37
 800a4b4:	3030      	addcc	r0, #48	; 0x30
 800a4b6:	7090      	strb	r0, [r2, #2]
 800a4b8:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800a4bc:	2809      	cmp	r0, #9
 800a4be:	bf8c      	ite	hi
 800a4c0:	3037      	addhi	r0, #55	; 0x37
 800a4c2:	3030      	addls	r0, #48	; 0x30
 800a4c4:	7110      	strb	r0, [r2, #4]
 800a4c6:	f3c3 5003 	ubfx	r0, r3, #20, #4
 800a4ca:	2809      	cmp	r0, #9
 800a4cc:	bf8c      	ite	hi
 800a4ce:	3037      	addhi	r0, #55	; 0x37
 800a4d0:	3030      	addls	r0, #48	; 0x30
 800a4d2:	7190      	strb	r0, [r2, #6]
 800a4d4:	f3c3 4003 	ubfx	r0, r3, #16, #4
 800a4d8:	2809      	cmp	r0, #9
 800a4da:	bf8c      	ite	hi
 800a4dc:	3037      	addhi	r0, #55	; 0x37
 800a4de:	3030      	addls	r0, #48	; 0x30
 800a4e0:	7210      	strb	r0, [r2, #8]
 800a4e2:	f3c3 3003 	ubfx	r0, r3, #12, #4
 800a4e6:	2809      	cmp	r0, #9
 800a4e8:	bf8c      	ite	hi
 800a4ea:	3037      	addhi	r0, #55	; 0x37
 800a4ec:	3030      	addls	r0, #48	; 0x30
 800a4ee:	7290      	strb	r0, [r2, #10]
 800a4f0:	f3c3 2003 	ubfx	r0, r3, #8, #4
 800a4f4:	2809      	cmp	r0, #9
 800a4f6:	bf8c      	ite	hi
 800a4f8:	3037      	addhi	r0, #55	; 0x37
 800a4fa:	3030      	addls	r0, #48	; 0x30
 800a4fc:	7310      	strb	r0, [r2, #12]
 800a4fe:	f3c3 1003 	ubfx	r0, r3, #4, #4
 800a502:	2809      	cmp	r0, #9
 800a504:	bf8c      	ite	hi
 800a506:	3037      	addhi	r0, #55	; 0x37
 800a508:	3030      	addls	r0, #48	; 0x30
 800a50a:	f882 c003 	strb.w	ip, [r2, #3]
 800a50e:	7390      	strb	r0, [r2, #14]
 800a510:	f04f 0c00 	mov.w	ip, #0
 800a514:	2000      	movs	r0, #0
 800a516:	f882 c005 	strb.w	ip, [r2, #5]
 800a51a:	73d0      	strb	r0, [r2, #15]
 800a51c:	f04f 0c00 	mov.w	ip, #0
 800a520:	2000      	movs	r0, #0
 800a522:	f882 c007 	strb.w	ip, [r2, #7]
 800a526:	7450      	strb	r0, [r2, #17]
 800a528:	f04f 0c00 	mov.w	ip, #0
 800a52c:	2000      	movs	r0, #0
 800a52e:	f882 c009 	strb.w	ip, [r2, #9]
 800a532:	74d0      	strb	r0, [r2, #19]
 800a534:	f04f 0c00 	mov.w	ip, #0
 800a538:	2000      	movs	r0, #0
 800a53a:	f003 030f 	and.w	r3, r3, #15
 800a53e:	2b09      	cmp	r3, #9
 800a540:	bf94      	ite	ls
 800a542:	3330      	addls	r3, #48	; 0x30
 800a544:	3337      	addhi	r3, #55	; 0x37
 800a546:	7413      	strb	r3, [r2, #16]
 800a548:	f1b1 4f20 	cmp.w	r1, #2684354560	; 0xa0000000
 800a54c:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800a550:	bf2c      	ite	cs
 800a552:	3337      	addcs	r3, #55	; 0x37
 800a554:	3330      	addcc	r3, #48	; 0x30
 800a556:	7493      	strb	r3, [r2, #18]
 800a558:	f3c1 6303 	ubfx	r3, r1, #24, #4
 800a55c:	2b09      	cmp	r3, #9
 800a55e:	bf8c      	ite	hi
 800a560:	3337      	addhi	r3, #55	; 0x37
 800a562:	3330      	addls	r3, #48	; 0x30
 800a564:	7513      	strb	r3, [r2, #20]
 800a566:	f3c1 5303 	ubfx	r3, r1, #20, #4
 800a56a:	2b09      	cmp	r3, #9
 800a56c:	bf8c      	ite	hi
 800a56e:	3337      	addhi	r3, #55	; 0x37
 800a570:	3330      	addls	r3, #48	; 0x30
 800a572:	7593      	strb	r3, [r2, #22]
 800a574:	f3c1 4303 	ubfx	r3, r1, #16, #4
 800a578:	2b09      	cmp	r3, #9
 800a57a:	bf94      	ite	ls
 800a57c:	3330      	addls	r3, #48	; 0x30
 800a57e:	3337      	addhi	r3, #55	; 0x37
 800a580:	f882 c00b 	strb.w	ip, [r2, #11]
 800a584:	7550      	strb	r0, [r2, #21]
 800a586:	f04f 0c00 	mov.w	ip, #0
 800a58a:	2000      	movs	r0, #0
 800a58c:	7613      	strb	r3, [r2, #24]
 800a58e:	2300      	movs	r3, #0
 800a590:	75d0      	strb	r0, [r2, #23]
 800a592:	f882 c00d 	strb.w	ip, [r2, #13]
 800a596:	4802      	ldr	r0, [pc, #8]	; (800a5a0 <USBD_FS_SerialStrDescriptor+0x114>)
 800a598:	7653      	strb	r3, [r2, #25]
 800a59a:	4770      	bx	lr
 800a59c:	1ff80000 	.word	0x1ff80000
 800a5a0:	20000184 	.word	0x20000184

0800a5a4 <HAL_PCDEx_SetConnectionState>:
 800a5a4:	4a04      	ldr	r2, [pc, #16]	; (800a5b8 <HAL_PCDEx_SetConnectionState+0x14>)
 800a5a6:	2901      	cmp	r1, #1
 800a5a8:	6853      	ldr	r3, [r2, #4]
 800a5aa:	bf0c      	ite	eq
 800a5ac:	f043 0301 	orreq.w	r3, r3, #1
 800a5b0:	f023 0301 	bicne.w	r3, r3, #1
 800a5b4:	6053      	str	r3, [r2, #4]
 800a5b6:	4770      	bx	lr
 800a5b8:	40010000 	.word	0x40010000

0800a5bc <HAL_PCD_MspInit>:
 800a5bc:	4b0e      	ldr	r3, [pc, #56]	; (800a5f8 <HAL_PCD_MspInit+0x3c>)
 800a5be:	6802      	ldr	r2, [r0, #0]
 800a5c0:	429a      	cmp	r2, r3
 800a5c2:	d000      	beq.n	800a5c6 <HAL_PCD_MspInit+0xa>
 800a5c4:	4770      	bx	lr
 800a5c6:	f503 33ee 	add.w	r3, r3, #121856	; 0x1dc00
 800a5ca:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a5cc:	b500      	push	{lr}
 800a5ce:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800a5d2:	6259      	str	r1, [r3, #36]	; 0x24
 800a5d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5d6:	b083      	sub	sp, #12
 800a5d8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a5dc:	9301      	str	r3, [sp, #4]
 800a5de:	2014      	movs	r0, #20
 800a5e0:	2200      	movs	r2, #0
 800a5e2:	2101      	movs	r1, #1
 800a5e4:	9b01      	ldr	r3, [sp, #4]
 800a5e6:	f7fa ff8b 	bl	8005500 <HAL_NVIC_SetPriority>
 800a5ea:	2014      	movs	r0, #20
 800a5ec:	b003      	add	sp, #12
 800a5ee:	f85d eb04 	ldr.w	lr, [sp], #4
 800a5f2:	f7fa bfc3 	b.w	800557c <HAL_NVIC_EnableIRQ>
 800a5f6:	bf00      	nop
 800a5f8:	40005c00 	.word	0x40005c00

0800a5fc <HAL_PCD_SetupStageCallback>:
 800a5fc:	4601      	mov	r1, r0
 800a5fe:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a602:	f501 712c 	add.w	r1, r1, #688	; 0x2b0
 800a606:	f7ff ba51 	b.w	8009aac <USBD_LL_SetupStage>
 800a60a:	bf00      	nop

0800a60c <HAL_PCD_DataOutStageCallback>:
 800a60c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800a610:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800a614:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800a618:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a61c:	f7ff ba76 	b.w	8009b0c <USBD_LL_DataOutStage>

0800a620 <HAL_PCD_DataInStageCallback>:
 800a620:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800a624:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800a628:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a62a:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a62e:	f7ff baab 	b.w	8009b88 <USBD_LL_DataInStage>
 800a632:	bf00      	nop

0800a634 <HAL_PCD_SOFCallback>:
 800a634:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a638:	f7ff bb4a 	b.w	8009cd0 <USBD_LL_SOF>

0800a63c <HAL_PCD_ResetCallback>:
 800a63c:	6883      	ldr	r3, [r0, #8]
 800a63e:	b510      	push	{r4, lr}
 800a640:	2b02      	cmp	r3, #2
 800a642:	4604      	mov	r4, r0
 800a644:	d001      	beq.n	800a64a <HAL_PCD_ResetCallback+0xe>
 800a646:	f7fa fa51 	bl	8004aec <Error_Handler>
 800a64a:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a64e:	2101      	movs	r1, #1
 800a650:	f7ff fb28 	bl	8009ca4 <USBD_LL_SetSpeed>
 800a654:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a658:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a65c:	f7ff bafa 	b.w	8009c54 <USBD_LL_Reset>

0800a660 <HAL_PCD_SuspendCallback>:
 800a660:	b510      	push	{r4, lr}
 800a662:	4604      	mov	r4, r0
 800a664:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a668:	f7ff fb20 	bl	8009cac <USBD_LL_Suspend>
 800a66c:	69a3      	ldr	r3, [r4, #24]
 800a66e:	b123      	cbz	r3, 800a67a <HAL_PCD_SuspendCallback+0x1a>
 800a670:	4a02      	ldr	r2, [pc, #8]	; (800a67c <HAL_PCD_SuspendCallback+0x1c>)
 800a672:	6913      	ldr	r3, [r2, #16]
 800a674:	f043 0306 	orr.w	r3, r3, #6
 800a678:	6113      	str	r3, [r2, #16]
 800a67a:	bd10      	pop	{r4, pc}
 800a67c:	e000ed00 	.word	0xe000ed00

0800a680 <HAL_PCD_ResumeCallback>:
 800a680:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a684:	f7ff bb1c 	b.w	8009cc0 <USBD_LL_Resume>

0800a688 <USBD_LL_Init>:
 800a688:	b510      	push	{r4, lr}
 800a68a:	2408      	movs	r4, #8
 800a68c:	4b1e      	ldr	r3, [pc, #120]	; (800a708 <USBD_LL_Init+0x80>)
 800a68e:	2200      	movs	r2, #0
 800a690:	605c      	str	r4, [r3, #4]
 800a692:	4604      	mov	r4, r0
 800a694:	2102      	movs	r1, #2
 800a696:	619a      	str	r2, [r3, #24]
 800a698:	621a      	str	r2, [r3, #32]
 800a69a:	4a1c      	ldr	r2, [pc, #112]	; (800a70c <USBD_LL_Init+0x84>)
 800a69c:	f8c3 42e8 	str.w	r4, [r3, #744]	; 0x2e8
 800a6a0:	4618      	mov	r0, r3
 800a6a2:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800a6a6:	6099      	str	r1, [r3, #8]
 800a6a8:	6119      	str	r1, [r3, #16]
 800a6aa:	601a      	str	r2, [r3, #0]
 800a6ac:	f7fb ff36 	bl	800651c <HAL_PCD_Init>
 800a6b0:	bb30      	cbnz	r0, 800a700 <USBD_LL_Init+0x78>
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	2318      	movs	r3, #24
 800a6b6:	4611      	mov	r1, r2
 800a6b8:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a6bc:	f7fc fe2e 	bl	800731c <HAL_PCDEx_PMAConfig>
 800a6c0:	2358      	movs	r3, #88	; 0x58
 800a6c2:	2200      	movs	r2, #0
 800a6c4:	2180      	movs	r1, #128	; 0x80
 800a6c6:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a6ca:	f7fc fe27 	bl	800731c <HAL_PCDEx_PMAConfig>
 800a6ce:	23c0      	movs	r3, #192	; 0xc0
 800a6d0:	2200      	movs	r2, #0
 800a6d2:	2181      	movs	r1, #129	; 0x81
 800a6d4:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a6d8:	f7fc fe20 	bl	800731c <HAL_PCDEx_PMAConfig>
 800a6dc:	f44f 7388 	mov.w	r3, #272	; 0x110
 800a6e0:	2200      	movs	r2, #0
 800a6e2:	2101      	movs	r1, #1
 800a6e4:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a6e8:	f7fc fe18 	bl	800731c <HAL_PCDEx_PMAConfig>
 800a6ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a6f0:	2200      	movs	r2, #0
 800a6f2:	2182      	movs	r1, #130	; 0x82
 800a6f4:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a6f8:	f7fc fe10 	bl	800731c <HAL_PCDEx_PMAConfig>
 800a6fc:	2000      	movs	r0, #0
 800a6fe:	bd10      	pop	{r4, pc}
 800a700:	f7fa f9f4 	bl	8004aec <Error_Handler>
 800a704:	e7d5      	b.n	800a6b2 <USBD_LL_Init+0x2a>
 800a706:	bf00      	nop
 800a708:	20000f24 	.word	0x20000f24
 800a70c:	40005c00 	.word	0x40005c00

0800a710 <USBD_LL_Start>:
 800a710:	b508      	push	{r3, lr}
 800a712:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a716:	f7fb ff63 	bl	80065e0 <HAL_PCD_Start>
 800a71a:	2803      	cmp	r0, #3
 800a71c:	bf96      	itet	ls
 800a71e:	4b02      	ldrls	r3, [pc, #8]	; (800a728 <USBD_LL_Start+0x18>)
 800a720:	2002      	movhi	r0, #2
 800a722:	5c18      	ldrbls	r0, [r3, r0]
 800a724:	bd08      	pop	{r3, pc}
 800a726:	bf00      	nop
 800a728:	08010744 	.word	0x08010744

0800a72c <USBD_LL_OpenEP>:
 800a72c:	4694      	mov	ip, r2
 800a72e:	b508      	push	{r3, lr}
 800a730:	461a      	mov	r2, r3
 800a732:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a736:	4663      	mov	r3, ip
 800a738:	f7fc fcc6 	bl	80070c8 <HAL_PCD_EP_Open>
 800a73c:	2803      	cmp	r0, #3
 800a73e:	bf96      	itet	ls
 800a740:	4b01      	ldrls	r3, [pc, #4]	; (800a748 <USBD_LL_OpenEP+0x1c>)
 800a742:	2002      	movhi	r0, #2
 800a744:	5c18      	ldrbls	r0, [r3, r0]
 800a746:	bd08      	pop	{r3, pc}
 800a748:	08010744 	.word	0x08010744

0800a74c <USBD_LL_CloseEP>:
 800a74c:	b508      	push	{r3, lr}
 800a74e:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a752:	f7fc fcf7 	bl	8007144 <HAL_PCD_EP_Close>
 800a756:	2803      	cmp	r0, #3
 800a758:	bf96      	itet	ls
 800a75a:	4b02      	ldrls	r3, [pc, #8]	; (800a764 <USBD_LL_CloseEP+0x18>)
 800a75c:	2002      	movhi	r0, #2
 800a75e:	5c18      	ldrbls	r0, [r3, r0]
 800a760:	bd08      	pop	{r3, pc}
 800a762:	bf00      	nop
 800a764:	08010744 	.word	0x08010744

0800a768 <USBD_LL_StallEP>:
 800a768:	b508      	push	{r3, lr}
 800a76a:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a76e:	f7fc fd61 	bl	8007234 <HAL_PCD_EP_SetStall>
 800a772:	2803      	cmp	r0, #3
 800a774:	bf96      	itet	ls
 800a776:	4b02      	ldrls	r3, [pc, #8]	; (800a780 <USBD_LL_StallEP+0x18>)
 800a778:	2002      	movhi	r0, #2
 800a77a:	5c18      	ldrbls	r0, [r3, r0]
 800a77c:	bd08      	pop	{r3, pc}
 800a77e:	bf00      	nop
 800a780:	08010744 	.word	0x08010744

0800a784 <USBD_LL_ClearStallEP>:
 800a784:	b508      	push	{r3, lr}
 800a786:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a78a:	f7fc fd8b 	bl	80072a4 <HAL_PCD_EP_ClrStall>
 800a78e:	2803      	cmp	r0, #3
 800a790:	bf96      	itet	ls
 800a792:	4b02      	ldrls	r3, [pc, #8]	; (800a79c <USBD_LL_ClearStallEP+0x18>)
 800a794:	2002      	movhi	r0, #2
 800a796:	5c18      	ldrbls	r0, [r3, r0]
 800a798:	bd08      	pop	{r3, pc}
 800a79a:	bf00      	nop
 800a79c:	08010744 	.word	0x08010744

0800a7a0 <USBD_LL_IsStallEP>:
 800a7a0:	060a      	lsls	r2, r1, #24
 800a7a2:	f8d0 3298 	ldr.w	r3, [r0, #664]	; 0x298
 800a7a6:	d406      	bmi.n	800a7b6 <USBD_LL_IsStallEP+0x16>
 800a7a8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a7ac:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800a7b0:	f891 016a 	ldrb.w	r0, [r1, #362]	; 0x16a
 800a7b4:	4770      	bx	lr
 800a7b6:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800a7ba:	3101      	adds	r1, #1
 800a7bc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a7c0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800a7c4:	7888      	ldrb	r0, [r1, #2]
 800a7c6:	4770      	bx	lr

0800a7c8 <USBD_LL_SetUSBAddress>:
 800a7c8:	b508      	push	{r3, lr}
 800a7ca:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a7ce:	f7fc fc65 	bl	800709c <HAL_PCD_SetAddress>
 800a7d2:	2803      	cmp	r0, #3
 800a7d4:	bf96      	itet	ls
 800a7d6:	4b02      	ldrls	r3, [pc, #8]	; (800a7e0 <USBD_LL_SetUSBAddress+0x18>)
 800a7d8:	2002      	movhi	r0, #2
 800a7da:	5c18      	ldrbls	r0, [r3, r0]
 800a7dc:	bd08      	pop	{r3, pc}
 800a7de:	bf00      	nop
 800a7e0:	08010744 	.word	0x08010744

0800a7e4 <USBD_LL_Transmit>:
 800a7e4:	b508      	push	{r3, lr}
 800a7e6:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a7ea:	f7fc fcff 	bl	80071ec <HAL_PCD_EP_Transmit>
 800a7ee:	2803      	cmp	r0, #3
 800a7f0:	bf96      	itet	ls
 800a7f2:	4b02      	ldrls	r3, [pc, #8]	; (800a7fc <USBD_LL_Transmit+0x18>)
 800a7f4:	2002      	movhi	r0, #2
 800a7f6:	5c18      	ldrbls	r0, [r3, r0]
 800a7f8:	bd08      	pop	{r3, pc}
 800a7fa:	bf00      	nop
 800a7fc:	08010744 	.word	0x08010744

0800a800 <USBD_LL_PrepareReceive>:
 800a800:	b508      	push	{r3, lr}
 800a802:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a806:	f7fc fccf 	bl	80071a8 <HAL_PCD_EP_Receive>
 800a80a:	2803      	cmp	r0, #3
 800a80c:	bf96      	itet	ls
 800a80e:	4b02      	ldrls	r3, [pc, #8]	; (800a818 <USBD_LL_PrepareReceive+0x18>)
 800a810:	2002      	movhi	r0, #2
 800a812:	5c18      	ldrbls	r0, [r3, r0]
 800a814:	bd08      	pop	{r3, pc}
 800a816:	bf00      	nop
 800a818:	08010744 	.word	0x08010744

0800a81c <USBD_LL_GetRxDataSize>:
 800a81c:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a820:	f7fc bcda 	b.w	80071d8 <HAL_PCD_EP_GetRxCount>

0800a824 <USBD_static_malloc>:
 800a824:	4800      	ldr	r0, [pc, #0]	; (800a828 <USBD_static_malloc+0x4>)
 800a826:	4770      	bx	lr
 800a828:	20001210 	.word	0x20001210

0800a82c <USBD_static_free>:
 800a82c:	4770      	bx	lr
 800a82e:	bf00      	nop

0800a830 <floor>:
 800a830:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a834:	f3c1 580a 	ubfx	r8, r1, #20, #11
 800a838:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 800a83c:	2e13      	cmp	r6, #19
 800a83e:	4602      	mov	r2, r0
 800a840:	460b      	mov	r3, r1
 800a842:	4607      	mov	r7, r0
 800a844:	460c      	mov	r4, r1
 800a846:	4605      	mov	r5, r0
 800a848:	dc33      	bgt.n	800a8b2 <floor+0x82>
 800a84a:	2e00      	cmp	r6, #0
 800a84c:	da14      	bge.n	800a878 <floor+0x48>
 800a84e:	a334      	add	r3, pc, #208	; (adr r3, 800a920 <floor+0xf0>)
 800a850:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a854:	f7f5 fcac 	bl	80001b0 <__adddf3>
 800a858:	2200      	movs	r2, #0
 800a85a:	2300      	movs	r3, #0
 800a85c:	f7f6 f8ee 	bl	8000a3c <__aeabi_dcmpgt>
 800a860:	b138      	cbz	r0, 800a872 <floor+0x42>
 800a862:	2c00      	cmp	r4, #0
 800a864:	da58      	bge.n	800a918 <floor+0xe8>
 800a866:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800a86a:	431d      	orrs	r5, r3
 800a86c:	d001      	beq.n	800a872 <floor+0x42>
 800a86e:	2500      	movs	r5, #0
 800a870:	4c2d      	ldr	r4, [pc, #180]	; (800a928 <floor+0xf8>)
 800a872:	4623      	mov	r3, r4
 800a874:	462f      	mov	r7, r5
 800a876:	e025      	b.n	800a8c4 <floor+0x94>
 800a878:	4a2c      	ldr	r2, [pc, #176]	; (800a92c <floor+0xfc>)
 800a87a:	fa42 f806 	asr.w	r8, r2, r6
 800a87e:	ea01 0208 	and.w	r2, r1, r8
 800a882:	4302      	orrs	r2, r0
 800a884:	d01e      	beq.n	800a8c4 <floor+0x94>
 800a886:	a326      	add	r3, pc, #152	; (adr r3, 800a920 <floor+0xf0>)
 800a888:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a88c:	f7f5 fc90 	bl	80001b0 <__adddf3>
 800a890:	2200      	movs	r2, #0
 800a892:	2300      	movs	r3, #0
 800a894:	f7f6 f8d2 	bl	8000a3c <__aeabi_dcmpgt>
 800a898:	2800      	cmp	r0, #0
 800a89a:	d0ea      	beq.n	800a872 <floor+0x42>
 800a89c:	2c00      	cmp	r4, #0
 800a89e:	bfbe      	ittt	lt
 800a8a0:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800a8a4:	fa43 f606 	asrlt.w	r6, r3, r6
 800a8a8:	19a4      	addlt	r4, r4, r6
 800a8aa:	2500      	movs	r5, #0
 800a8ac:	ea24 0408 	bic.w	r4, r4, r8
 800a8b0:	e7df      	b.n	800a872 <floor+0x42>
 800a8b2:	2e33      	cmp	r6, #51	; 0x33
 800a8b4:	dd0a      	ble.n	800a8cc <floor+0x9c>
 800a8b6:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800a8ba:	d103      	bne.n	800a8c4 <floor+0x94>
 800a8bc:	f7f5 fc78 	bl	80001b0 <__adddf3>
 800a8c0:	4607      	mov	r7, r0
 800a8c2:	460b      	mov	r3, r1
 800a8c4:	4638      	mov	r0, r7
 800a8c6:	4619      	mov	r1, r3
 800a8c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a8cc:	f04f 32ff 	mov.w	r2, #4294967295
 800a8d0:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 800a8d4:	fa22 f808 	lsr.w	r8, r2, r8
 800a8d8:	ea18 0f00 	tst.w	r8, r0
 800a8dc:	d0f2      	beq.n	800a8c4 <floor+0x94>
 800a8de:	a310      	add	r3, pc, #64	; (adr r3, 800a920 <floor+0xf0>)
 800a8e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a8e4:	f7f5 fc64 	bl	80001b0 <__adddf3>
 800a8e8:	2200      	movs	r2, #0
 800a8ea:	2300      	movs	r3, #0
 800a8ec:	f7f6 f8a6 	bl	8000a3c <__aeabi_dcmpgt>
 800a8f0:	2800      	cmp	r0, #0
 800a8f2:	d0be      	beq.n	800a872 <floor+0x42>
 800a8f4:	2c00      	cmp	r4, #0
 800a8f6:	da02      	bge.n	800a8fe <floor+0xce>
 800a8f8:	2e14      	cmp	r6, #20
 800a8fa:	d103      	bne.n	800a904 <floor+0xd4>
 800a8fc:	3401      	adds	r4, #1
 800a8fe:	ea25 0508 	bic.w	r5, r5, r8
 800a902:	e7b6      	b.n	800a872 <floor+0x42>
 800a904:	2301      	movs	r3, #1
 800a906:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800a90a:	fa03 f606 	lsl.w	r6, r3, r6
 800a90e:	4435      	add	r5, r6
 800a910:	42bd      	cmp	r5, r7
 800a912:	bf38      	it	cc
 800a914:	18e4      	addcc	r4, r4, r3
 800a916:	e7f2      	b.n	800a8fe <floor+0xce>
 800a918:	2500      	movs	r5, #0
 800a91a:	462c      	mov	r4, r5
 800a91c:	e7a9      	b.n	800a872 <floor+0x42>
 800a91e:	bf00      	nop
 800a920:	8800759c 	.word	0x8800759c
 800a924:	7e37e43c 	.word	0x7e37e43c
 800a928:	bff00000 	.word	0xbff00000
 800a92c:	000fffff 	.word	0x000fffff

0800a930 <__errno>:
 800a930:	4b01      	ldr	r3, [pc, #4]	; (800a938 <__errno+0x8>)
 800a932:	6818      	ldr	r0, [r3, #0]
 800a934:	4770      	bx	lr
 800a936:	bf00      	nop
 800a938:	200001a0 	.word	0x200001a0

0800a93c <__libc_init_array>:
 800a93c:	b570      	push	{r4, r5, r6, lr}
 800a93e:	2600      	movs	r6, #0
 800a940:	4d0c      	ldr	r5, [pc, #48]	; (800a974 <__libc_init_array+0x38>)
 800a942:	4c0d      	ldr	r4, [pc, #52]	; (800a978 <__libc_init_array+0x3c>)
 800a944:	1b64      	subs	r4, r4, r5
 800a946:	10a4      	asrs	r4, r4, #2
 800a948:	42a6      	cmp	r6, r4
 800a94a:	d109      	bne.n	800a960 <__libc_init_array+0x24>
 800a94c:	f005 f886 	bl	800fa5c <_init>
 800a950:	2600      	movs	r6, #0
 800a952:	4d0a      	ldr	r5, [pc, #40]	; (800a97c <__libc_init_array+0x40>)
 800a954:	4c0a      	ldr	r4, [pc, #40]	; (800a980 <__libc_init_array+0x44>)
 800a956:	1b64      	subs	r4, r4, r5
 800a958:	10a4      	asrs	r4, r4, #2
 800a95a:	42a6      	cmp	r6, r4
 800a95c:	d105      	bne.n	800a96a <__libc_init_array+0x2e>
 800a95e:	bd70      	pop	{r4, r5, r6, pc}
 800a960:	f855 3b04 	ldr.w	r3, [r5], #4
 800a964:	4798      	blx	r3
 800a966:	3601      	adds	r6, #1
 800a968:	e7ee      	b.n	800a948 <__libc_init_array+0xc>
 800a96a:	f855 3b04 	ldr.w	r3, [r5], #4
 800a96e:	4798      	blx	r3
 800a970:	3601      	adds	r6, #1
 800a972:	e7f2      	b.n	800a95a <__libc_init_array+0x1e>
 800a974:	08010c0c 	.word	0x08010c0c
 800a978:	08010c0c 	.word	0x08010c0c
 800a97c:	08010c0c 	.word	0x08010c0c
 800a980:	08010c10 	.word	0x08010c10

0800a984 <memcpy>:
 800a984:	440a      	add	r2, r1
 800a986:	4291      	cmp	r1, r2
 800a988:	f100 33ff 	add.w	r3, r0, #4294967295
 800a98c:	d100      	bne.n	800a990 <memcpy+0xc>
 800a98e:	4770      	bx	lr
 800a990:	b510      	push	{r4, lr}
 800a992:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a996:	4291      	cmp	r1, r2
 800a998:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a99c:	d1f9      	bne.n	800a992 <memcpy+0xe>
 800a99e:	bd10      	pop	{r4, pc}

0800a9a0 <memset>:
 800a9a0:	4603      	mov	r3, r0
 800a9a2:	4402      	add	r2, r0
 800a9a4:	4293      	cmp	r3, r2
 800a9a6:	d100      	bne.n	800a9aa <memset+0xa>
 800a9a8:	4770      	bx	lr
 800a9aa:	f803 1b01 	strb.w	r1, [r3], #1
 800a9ae:	e7f9      	b.n	800a9a4 <memset+0x4>

0800a9b0 <__cvt>:
 800a9b0:	2b00      	cmp	r3, #0
 800a9b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a9b6:	461f      	mov	r7, r3
 800a9b8:	bfbb      	ittet	lt
 800a9ba:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800a9be:	461f      	movlt	r7, r3
 800a9c0:	2300      	movge	r3, #0
 800a9c2:	232d      	movlt	r3, #45	; 0x2d
 800a9c4:	b088      	sub	sp, #32
 800a9c6:	4614      	mov	r4, r2
 800a9c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a9ca:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800a9cc:	7013      	strb	r3, [r2, #0]
 800a9ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a9d0:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800a9d4:	f023 0820 	bic.w	r8, r3, #32
 800a9d8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800a9dc:	d005      	beq.n	800a9ea <__cvt+0x3a>
 800a9de:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800a9e2:	d100      	bne.n	800a9e6 <__cvt+0x36>
 800a9e4:	3501      	adds	r5, #1
 800a9e6:	2302      	movs	r3, #2
 800a9e8:	e000      	b.n	800a9ec <__cvt+0x3c>
 800a9ea:	2303      	movs	r3, #3
 800a9ec:	aa07      	add	r2, sp, #28
 800a9ee:	9204      	str	r2, [sp, #16]
 800a9f0:	aa06      	add	r2, sp, #24
 800a9f2:	e9cd a202 	strd	sl, r2, [sp, #8]
 800a9f6:	e9cd 3500 	strd	r3, r5, [sp]
 800a9fa:	4622      	mov	r2, r4
 800a9fc:	463b      	mov	r3, r7
 800a9fe:	f001 fe17 	bl	800c630 <_dtoa_r>
 800aa02:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800aa06:	4606      	mov	r6, r0
 800aa08:	d102      	bne.n	800aa10 <__cvt+0x60>
 800aa0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800aa0c:	07db      	lsls	r3, r3, #31
 800aa0e:	d522      	bpl.n	800aa56 <__cvt+0xa6>
 800aa10:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800aa14:	eb06 0905 	add.w	r9, r6, r5
 800aa18:	d110      	bne.n	800aa3c <__cvt+0x8c>
 800aa1a:	7833      	ldrb	r3, [r6, #0]
 800aa1c:	2b30      	cmp	r3, #48	; 0x30
 800aa1e:	d10a      	bne.n	800aa36 <__cvt+0x86>
 800aa20:	2200      	movs	r2, #0
 800aa22:	2300      	movs	r3, #0
 800aa24:	4620      	mov	r0, r4
 800aa26:	4639      	mov	r1, r7
 800aa28:	f7f5 ffe0 	bl	80009ec <__aeabi_dcmpeq>
 800aa2c:	b918      	cbnz	r0, 800aa36 <__cvt+0x86>
 800aa2e:	f1c5 0501 	rsb	r5, r5, #1
 800aa32:	f8ca 5000 	str.w	r5, [sl]
 800aa36:	f8da 3000 	ldr.w	r3, [sl]
 800aa3a:	4499      	add	r9, r3
 800aa3c:	2200      	movs	r2, #0
 800aa3e:	2300      	movs	r3, #0
 800aa40:	4620      	mov	r0, r4
 800aa42:	4639      	mov	r1, r7
 800aa44:	f7f5 ffd2 	bl	80009ec <__aeabi_dcmpeq>
 800aa48:	b108      	cbz	r0, 800aa4e <__cvt+0x9e>
 800aa4a:	f8cd 901c 	str.w	r9, [sp, #28]
 800aa4e:	2230      	movs	r2, #48	; 0x30
 800aa50:	9b07      	ldr	r3, [sp, #28]
 800aa52:	454b      	cmp	r3, r9
 800aa54:	d307      	bcc.n	800aa66 <__cvt+0xb6>
 800aa56:	4630      	mov	r0, r6
 800aa58:	9b07      	ldr	r3, [sp, #28]
 800aa5a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800aa5c:	1b9b      	subs	r3, r3, r6
 800aa5e:	6013      	str	r3, [r2, #0]
 800aa60:	b008      	add	sp, #32
 800aa62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aa66:	1c59      	adds	r1, r3, #1
 800aa68:	9107      	str	r1, [sp, #28]
 800aa6a:	701a      	strb	r2, [r3, #0]
 800aa6c:	e7f0      	b.n	800aa50 <__cvt+0xa0>

0800aa6e <__exponent>:
 800aa6e:	4603      	mov	r3, r0
 800aa70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aa72:	2900      	cmp	r1, #0
 800aa74:	f803 2b02 	strb.w	r2, [r3], #2
 800aa78:	bfb6      	itet	lt
 800aa7a:	222d      	movlt	r2, #45	; 0x2d
 800aa7c:	222b      	movge	r2, #43	; 0x2b
 800aa7e:	4249      	neglt	r1, r1
 800aa80:	2909      	cmp	r1, #9
 800aa82:	7042      	strb	r2, [r0, #1]
 800aa84:	dd2b      	ble.n	800aade <__exponent+0x70>
 800aa86:	f10d 0407 	add.w	r4, sp, #7
 800aa8a:	46a4      	mov	ip, r4
 800aa8c:	270a      	movs	r7, #10
 800aa8e:	fb91 f6f7 	sdiv	r6, r1, r7
 800aa92:	460a      	mov	r2, r1
 800aa94:	46a6      	mov	lr, r4
 800aa96:	fb07 1516 	mls	r5, r7, r6, r1
 800aa9a:	2a63      	cmp	r2, #99	; 0x63
 800aa9c:	f105 0530 	add.w	r5, r5, #48	; 0x30
 800aaa0:	4631      	mov	r1, r6
 800aaa2:	f104 34ff 	add.w	r4, r4, #4294967295
 800aaa6:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800aaaa:	dcf0      	bgt.n	800aa8e <__exponent+0x20>
 800aaac:	3130      	adds	r1, #48	; 0x30
 800aaae:	f1ae 0502 	sub.w	r5, lr, #2
 800aab2:	f804 1c01 	strb.w	r1, [r4, #-1]
 800aab6:	4629      	mov	r1, r5
 800aab8:	1c44      	adds	r4, r0, #1
 800aaba:	4561      	cmp	r1, ip
 800aabc:	d30a      	bcc.n	800aad4 <__exponent+0x66>
 800aabe:	f10d 0209 	add.w	r2, sp, #9
 800aac2:	eba2 020e 	sub.w	r2, r2, lr
 800aac6:	4565      	cmp	r5, ip
 800aac8:	bf88      	it	hi
 800aaca:	2200      	movhi	r2, #0
 800aacc:	4413      	add	r3, r2
 800aace:	1a18      	subs	r0, r3, r0
 800aad0:	b003      	add	sp, #12
 800aad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aad4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aad8:	f804 2f01 	strb.w	r2, [r4, #1]!
 800aadc:	e7ed      	b.n	800aaba <__exponent+0x4c>
 800aade:	2330      	movs	r3, #48	; 0x30
 800aae0:	3130      	adds	r1, #48	; 0x30
 800aae2:	7083      	strb	r3, [r0, #2]
 800aae4:	70c1      	strb	r1, [r0, #3]
 800aae6:	1d03      	adds	r3, r0, #4
 800aae8:	e7f1      	b.n	800aace <__exponent+0x60>
	...

0800aaec <_printf_float>:
 800aaec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aaf0:	b091      	sub	sp, #68	; 0x44
 800aaf2:	460c      	mov	r4, r1
 800aaf4:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800aaf8:	4616      	mov	r6, r2
 800aafa:	461f      	mov	r7, r3
 800aafc:	4605      	mov	r5, r0
 800aafe:	f002 feeb 	bl	800d8d8 <_localeconv_r>
 800ab02:	6803      	ldr	r3, [r0, #0]
 800ab04:	4618      	mov	r0, r3
 800ab06:	9309      	str	r3, [sp, #36]	; 0x24
 800ab08:	f7f5 fb44 	bl	8000194 <strlen>
 800ab0c:	2300      	movs	r3, #0
 800ab0e:	930e      	str	r3, [sp, #56]	; 0x38
 800ab10:	f8d8 3000 	ldr.w	r3, [r8]
 800ab14:	900a      	str	r0, [sp, #40]	; 0x28
 800ab16:	3307      	adds	r3, #7
 800ab18:	f023 0307 	bic.w	r3, r3, #7
 800ab1c:	f103 0208 	add.w	r2, r3, #8
 800ab20:	f894 9018 	ldrb.w	r9, [r4, #24]
 800ab24:	f8d4 b000 	ldr.w	fp, [r4]
 800ab28:	f8c8 2000 	str.w	r2, [r8]
 800ab2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab30:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800ab34:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800ab38:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800ab3c:	930b      	str	r3, [sp, #44]	; 0x2c
 800ab3e:	f04f 32ff 	mov.w	r2, #4294967295
 800ab42:	4640      	mov	r0, r8
 800ab44:	4b9c      	ldr	r3, [pc, #624]	; (800adb8 <_printf_float+0x2cc>)
 800ab46:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ab48:	f7f5 ff82 	bl	8000a50 <__aeabi_dcmpun>
 800ab4c:	bb70      	cbnz	r0, 800abac <_printf_float+0xc0>
 800ab4e:	f04f 32ff 	mov.w	r2, #4294967295
 800ab52:	4640      	mov	r0, r8
 800ab54:	4b98      	ldr	r3, [pc, #608]	; (800adb8 <_printf_float+0x2cc>)
 800ab56:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ab58:	f7f5 ff5c 	bl	8000a14 <__aeabi_dcmple>
 800ab5c:	bb30      	cbnz	r0, 800abac <_printf_float+0xc0>
 800ab5e:	2200      	movs	r2, #0
 800ab60:	2300      	movs	r3, #0
 800ab62:	4640      	mov	r0, r8
 800ab64:	4651      	mov	r1, sl
 800ab66:	f7f5 ff4b 	bl	8000a00 <__aeabi_dcmplt>
 800ab6a:	b110      	cbz	r0, 800ab72 <_printf_float+0x86>
 800ab6c:	232d      	movs	r3, #45	; 0x2d
 800ab6e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ab72:	4b92      	ldr	r3, [pc, #584]	; (800adbc <_printf_float+0x2d0>)
 800ab74:	4892      	ldr	r0, [pc, #584]	; (800adc0 <_printf_float+0x2d4>)
 800ab76:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800ab7a:	bf94      	ite	ls
 800ab7c:	4698      	movls	r8, r3
 800ab7e:	4680      	movhi	r8, r0
 800ab80:	2303      	movs	r3, #3
 800ab82:	f04f 0a00 	mov.w	sl, #0
 800ab86:	6123      	str	r3, [r4, #16]
 800ab88:	f02b 0304 	bic.w	r3, fp, #4
 800ab8c:	6023      	str	r3, [r4, #0]
 800ab8e:	4633      	mov	r3, r6
 800ab90:	4621      	mov	r1, r4
 800ab92:	4628      	mov	r0, r5
 800ab94:	9700      	str	r7, [sp, #0]
 800ab96:	aa0f      	add	r2, sp, #60	; 0x3c
 800ab98:	f000 f9d4 	bl	800af44 <_printf_common>
 800ab9c:	3001      	adds	r0, #1
 800ab9e:	f040 8090 	bne.w	800acc2 <_printf_float+0x1d6>
 800aba2:	f04f 30ff 	mov.w	r0, #4294967295
 800aba6:	b011      	add	sp, #68	; 0x44
 800aba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800abac:	4642      	mov	r2, r8
 800abae:	4653      	mov	r3, sl
 800abb0:	4640      	mov	r0, r8
 800abb2:	4651      	mov	r1, sl
 800abb4:	f7f5 ff4c 	bl	8000a50 <__aeabi_dcmpun>
 800abb8:	b148      	cbz	r0, 800abce <_printf_float+0xe2>
 800abba:	f1ba 0f00 	cmp.w	sl, #0
 800abbe:	bfb8      	it	lt
 800abc0:	232d      	movlt	r3, #45	; 0x2d
 800abc2:	4880      	ldr	r0, [pc, #512]	; (800adc4 <_printf_float+0x2d8>)
 800abc4:	bfb8      	it	lt
 800abc6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800abca:	4b7f      	ldr	r3, [pc, #508]	; (800adc8 <_printf_float+0x2dc>)
 800abcc:	e7d3      	b.n	800ab76 <_printf_float+0x8a>
 800abce:	6863      	ldr	r3, [r4, #4]
 800abd0:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800abd4:	1c5a      	adds	r2, r3, #1
 800abd6:	d142      	bne.n	800ac5e <_printf_float+0x172>
 800abd8:	2306      	movs	r3, #6
 800abda:	6063      	str	r3, [r4, #4]
 800abdc:	2200      	movs	r2, #0
 800abde:	9206      	str	r2, [sp, #24]
 800abe0:	aa0e      	add	r2, sp, #56	; 0x38
 800abe2:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800abe6:	aa0d      	add	r2, sp, #52	; 0x34
 800abe8:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800abec:	9203      	str	r2, [sp, #12]
 800abee:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800abf2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800abf6:	6023      	str	r3, [r4, #0]
 800abf8:	6863      	ldr	r3, [r4, #4]
 800abfa:	4642      	mov	r2, r8
 800abfc:	9300      	str	r3, [sp, #0]
 800abfe:	4628      	mov	r0, r5
 800ac00:	4653      	mov	r3, sl
 800ac02:	910b      	str	r1, [sp, #44]	; 0x2c
 800ac04:	f7ff fed4 	bl	800a9b0 <__cvt>
 800ac08:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac0a:	4680      	mov	r8, r0
 800ac0c:	2947      	cmp	r1, #71	; 0x47
 800ac0e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ac10:	d108      	bne.n	800ac24 <_printf_float+0x138>
 800ac12:	1cc8      	adds	r0, r1, #3
 800ac14:	db02      	blt.n	800ac1c <_printf_float+0x130>
 800ac16:	6863      	ldr	r3, [r4, #4]
 800ac18:	4299      	cmp	r1, r3
 800ac1a:	dd40      	ble.n	800ac9e <_printf_float+0x1b2>
 800ac1c:	f1a9 0902 	sub.w	r9, r9, #2
 800ac20:	fa5f f989 	uxtb.w	r9, r9
 800ac24:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800ac28:	d81f      	bhi.n	800ac6a <_printf_float+0x17e>
 800ac2a:	464a      	mov	r2, r9
 800ac2c:	3901      	subs	r1, #1
 800ac2e:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800ac32:	910d      	str	r1, [sp, #52]	; 0x34
 800ac34:	f7ff ff1b 	bl	800aa6e <__exponent>
 800ac38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ac3a:	4682      	mov	sl, r0
 800ac3c:	1813      	adds	r3, r2, r0
 800ac3e:	2a01      	cmp	r2, #1
 800ac40:	6123      	str	r3, [r4, #16]
 800ac42:	dc02      	bgt.n	800ac4a <_printf_float+0x15e>
 800ac44:	6822      	ldr	r2, [r4, #0]
 800ac46:	07d2      	lsls	r2, r2, #31
 800ac48:	d501      	bpl.n	800ac4e <_printf_float+0x162>
 800ac4a:	3301      	adds	r3, #1
 800ac4c:	6123      	str	r3, [r4, #16]
 800ac4e:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800ac52:	2b00      	cmp	r3, #0
 800ac54:	d09b      	beq.n	800ab8e <_printf_float+0xa2>
 800ac56:	232d      	movs	r3, #45	; 0x2d
 800ac58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ac5c:	e797      	b.n	800ab8e <_printf_float+0xa2>
 800ac5e:	2947      	cmp	r1, #71	; 0x47
 800ac60:	d1bc      	bne.n	800abdc <_printf_float+0xf0>
 800ac62:	2b00      	cmp	r3, #0
 800ac64:	d1ba      	bne.n	800abdc <_printf_float+0xf0>
 800ac66:	2301      	movs	r3, #1
 800ac68:	e7b7      	b.n	800abda <_printf_float+0xee>
 800ac6a:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800ac6e:	d118      	bne.n	800aca2 <_printf_float+0x1b6>
 800ac70:	2900      	cmp	r1, #0
 800ac72:	6863      	ldr	r3, [r4, #4]
 800ac74:	dd0b      	ble.n	800ac8e <_printf_float+0x1a2>
 800ac76:	6121      	str	r1, [r4, #16]
 800ac78:	b913      	cbnz	r3, 800ac80 <_printf_float+0x194>
 800ac7a:	6822      	ldr	r2, [r4, #0]
 800ac7c:	07d0      	lsls	r0, r2, #31
 800ac7e:	d502      	bpl.n	800ac86 <_printf_float+0x19a>
 800ac80:	3301      	adds	r3, #1
 800ac82:	440b      	add	r3, r1
 800ac84:	6123      	str	r3, [r4, #16]
 800ac86:	f04f 0a00 	mov.w	sl, #0
 800ac8a:	65a1      	str	r1, [r4, #88]	; 0x58
 800ac8c:	e7df      	b.n	800ac4e <_printf_float+0x162>
 800ac8e:	b913      	cbnz	r3, 800ac96 <_printf_float+0x1aa>
 800ac90:	6822      	ldr	r2, [r4, #0]
 800ac92:	07d2      	lsls	r2, r2, #31
 800ac94:	d501      	bpl.n	800ac9a <_printf_float+0x1ae>
 800ac96:	3302      	adds	r3, #2
 800ac98:	e7f4      	b.n	800ac84 <_printf_float+0x198>
 800ac9a:	2301      	movs	r3, #1
 800ac9c:	e7f2      	b.n	800ac84 <_printf_float+0x198>
 800ac9e:	f04f 0967 	mov.w	r9, #103	; 0x67
 800aca2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aca4:	4299      	cmp	r1, r3
 800aca6:	db05      	blt.n	800acb4 <_printf_float+0x1c8>
 800aca8:	6823      	ldr	r3, [r4, #0]
 800acaa:	6121      	str	r1, [r4, #16]
 800acac:	07d8      	lsls	r0, r3, #31
 800acae:	d5ea      	bpl.n	800ac86 <_printf_float+0x19a>
 800acb0:	1c4b      	adds	r3, r1, #1
 800acb2:	e7e7      	b.n	800ac84 <_printf_float+0x198>
 800acb4:	2900      	cmp	r1, #0
 800acb6:	bfcc      	ite	gt
 800acb8:	2201      	movgt	r2, #1
 800acba:	f1c1 0202 	rsble	r2, r1, #2
 800acbe:	4413      	add	r3, r2
 800acc0:	e7e0      	b.n	800ac84 <_printf_float+0x198>
 800acc2:	6823      	ldr	r3, [r4, #0]
 800acc4:	055a      	lsls	r2, r3, #21
 800acc6:	d407      	bmi.n	800acd8 <_printf_float+0x1ec>
 800acc8:	6923      	ldr	r3, [r4, #16]
 800acca:	4642      	mov	r2, r8
 800accc:	4631      	mov	r1, r6
 800acce:	4628      	mov	r0, r5
 800acd0:	47b8      	blx	r7
 800acd2:	3001      	adds	r0, #1
 800acd4:	d12b      	bne.n	800ad2e <_printf_float+0x242>
 800acd6:	e764      	b.n	800aba2 <_printf_float+0xb6>
 800acd8:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800acdc:	f240 80dd 	bls.w	800ae9a <_printf_float+0x3ae>
 800ace0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800ace4:	2200      	movs	r2, #0
 800ace6:	2300      	movs	r3, #0
 800ace8:	f7f5 fe80 	bl	80009ec <__aeabi_dcmpeq>
 800acec:	2800      	cmp	r0, #0
 800acee:	d033      	beq.n	800ad58 <_printf_float+0x26c>
 800acf0:	2301      	movs	r3, #1
 800acf2:	4631      	mov	r1, r6
 800acf4:	4628      	mov	r0, r5
 800acf6:	4a35      	ldr	r2, [pc, #212]	; (800adcc <_printf_float+0x2e0>)
 800acf8:	47b8      	blx	r7
 800acfa:	3001      	adds	r0, #1
 800acfc:	f43f af51 	beq.w	800aba2 <_printf_float+0xb6>
 800ad00:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800ad04:	429a      	cmp	r2, r3
 800ad06:	db02      	blt.n	800ad0e <_printf_float+0x222>
 800ad08:	6823      	ldr	r3, [r4, #0]
 800ad0a:	07d8      	lsls	r0, r3, #31
 800ad0c:	d50f      	bpl.n	800ad2e <_printf_float+0x242>
 800ad0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800ad12:	4631      	mov	r1, r6
 800ad14:	4628      	mov	r0, r5
 800ad16:	47b8      	blx	r7
 800ad18:	3001      	adds	r0, #1
 800ad1a:	f43f af42 	beq.w	800aba2 <_printf_float+0xb6>
 800ad1e:	f04f 0800 	mov.w	r8, #0
 800ad22:	f104 091a 	add.w	r9, r4, #26
 800ad26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ad28:	3b01      	subs	r3, #1
 800ad2a:	4543      	cmp	r3, r8
 800ad2c:	dc09      	bgt.n	800ad42 <_printf_float+0x256>
 800ad2e:	6823      	ldr	r3, [r4, #0]
 800ad30:	079b      	lsls	r3, r3, #30
 800ad32:	f100 8102 	bmi.w	800af3a <_printf_float+0x44e>
 800ad36:	68e0      	ldr	r0, [r4, #12]
 800ad38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ad3a:	4298      	cmp	r0, r3
 800ad3c:	bfb8      	it	lt
 800ad3e:	4618      	movlt	r0, r3
 800ad40:	e731      	b.n	800aba6 <_printf_float+0xba>
 800ad42:	2301      	movs	r3, #1
 800ad44:	464a      	mov	r2, r9
 800ad46:	4631      	mov	r1, r6
 800ad48:	4628      	mov	r0, r5
 800ad4a:	47b8      	blx	r7
 800ad4c:	3001      	adds	r0, #1
 800ad4e:	f43f af28 	beq.w	800aba2 <_printf_float+0xb6>
 800ad52:	f108 0801 	add.w	r8, r8, #1
 800ad56:	e7e6      	b.n	800ad26 <_printf_float+0x23a>
 800ad58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ad5a:	2b00      	cmp	r3, #0
 800ad5c:	dc38      	bgt.n	800add0 <_printf_float+0x2e4>
 800ad5e:	2301      	movs	r3, #1
 800ad60:	4631      	mov	r1, r6
 800ad62:	4628      	mov	r0, r5
 800ad64:	4a19      	ldr	r2, [pc, #100]	; (800adcc <_printf_float+0x2e0>)
 800ad66:	47b8      	blx	r7
 800ad68:	3001      	adds	r0, #1
 800ad6a:	f43f af1a 	beq.w	800aba2 <_printf_float+0xb6>
 800ad6e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800ad72:	4313      	orrs	r3, r2
 800ad74:	d102      	bne.n	800ad7c <_printf_float+0x290>
 800ad76:	6823      	ldr	r3, [r4, #0]
 800ad78:	07d9      	lsls	r1, r3, #31
 800ad7a:	d5d8      	bpl.n	800ad2e <_printf_float+0x242>
 800ad7c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800ad80:	4631      	mov	r1, r6
 800ad82:	4628      	mov	r0, r5
 800ad84:	47b8      	blx	r7
 800ad86:	3001      	adds	r0, #1
 800ad88:	f43f af0b 	beq.w	800aba2 <_printf_float+0xb6>
 800ad8c:	f04f 0900 	mov.w	r9, #0
 800ad90:	f104 0a1a 	add.w	sl, r4, #26
 800ad94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ad96:	425b      	negs	r3, r3
 800ad98:	454b      	cmp	r3, r9
 800ad9a:	dc01      	bgt.n	800ada0 <_printf_float+0x2b4>
 800ad9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ad9e:	e794      	b.n	800acca <_printf_float+0x1de>
 800ada0:	2301      	movs	r3, #1
 800ada2:	4652      	mov	r2, sl
 800ada4:	4631      	mov	r1, r6
 800ada6:	4628      	mov	r0, r5
 800ada8:	47b8      	blx	r7
 800adaa:	3001      	adds	r0, #1
 800adac:	f43f aef9 	beq.w	800aba2 <_printf_float+0xb6>
 800adb0:	f109 0901 	add.w	r9, r9, #1
 800adb4:	e7ee      	b.n	800ad94 <_printf_float+0x2a8>
 800adb6:	bf00      	nop
 800adb8:	7fefffff 	.word	0x7fefffff
 800adbc:	0801074c 	.word	0x0801074c
 800adc0:	08010750 	.word	0x08010750
 800adc4:	08010758 	.word	0x08010758
 800adc8:	08010754 	.word	0x08010754
 800adcc:	08010b51 	.word	0x08010b51
 800add0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800add2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800add4:	429a      	cmp	r2, r3
 800add6:	bfa8      	it	ge
 800add8:	461a      	movge	r2, r3
 800adda:	2a00      	cmp	r2, #0
 800addc:	4691      	mov	r9, r2
 800adde:	dc37      	bgt.n	800ae50 <_printf_float+0x364>
 800ade0:	f04f 0b00 	mov.w	fp, #0
 800ade4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800ade8:	f104 021a 	add.w	r2, r4, #26
 800adec:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800adf0:	ebaa 0309 	sub.w	r3, sl, r9
 800adf4:	455b      	cmp	r3, fp
 800adf6:	dc33      	bgt.n	800ae60 <_printf_float+0x374>
 800adf8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800adfc:	429a      	cmp	r2, r3
 800adfe:	db3b      	blt.n	800ae78 <_printf_float+0x38c>
 800ae00:	6823      	ldr	r3, [r4, #0]
 800ae02:	07da      	lsls	r2, r3, #31
 800ae04:	d438      	bmi.n	800ae78 <_printf_float+0x38c>
 800ae06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae08:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ae0a:	eba3 020a 	sub.w	r2, r3, sl
 800ae0e:	eba3 0901 	sub.w	r9, r3, r1
 800ae12:	4591      	cmp	r9, r2
 800ae14:	bfa8      	it	ge
 800ae16:	4691      	movge	r9, r2
 800ae18:	f1b9 0f00 	cmp.w	r9, #0
 800ae1c:	dc34      	bgt.n	800ae88 <_printf_float+0x39c>
 800ae1e:	f04f 0800 	mov.w	r8, #0
 800ae22:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800ae26:	f104 0a1a 	add.w	sl, r4, #26
 800ae2a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800ae2e:	1a9b      	subs	r3, r3, r2
 800ae30:	eba3 0309 	sub.w	r3, r3, r9
 800ae34:	4543      	cmp	r3, r8
 800ae36:	f77f af7a 	ble.w	800ad2e <_printf_float+0x242>
 800ae3a:	2301      	movs	r3, #1
 800ae3c:	4652      	mov	r2, sl
 800ae3e:	4631      	mov	r1, r6
 800ae40:	4628      	mov	r0, r5
 800ae42:	47b8      	blx	r7
 800ae44:	3001      	adds	r0, #1
 800ae46:	f43f aeac 	beq.w	800aba2 <_printf_float+0xb6>
 800ae4a:	f108 0801 	add.w	r8, r8, #1
 800ae4e:	e7ec      	b.n	800ae2a <_printf_float+0x33e>
 800ae50:	4613      	mov	r3, r2
 800ae52:	4631      	mov	r1, r6
 800ae54:	4642      	mov	r2, r8
 800ae56:	4628      	mov	r0, r5
 800ae58:	47b8      	blx	r7
 800ae5a:	3001      	adds	r0, #1
 800ae5c:	d1c0      	bne.n	800ade0 <_printf_float+0x2f4>
 800ae5e:	e6a0      	b.n	800aba2 <_printf_float+0xb6>
 800ae60:	2301      	movs	r3, #1
 800ae62:	4631      	mov	r1, r6
 800ae64:	4628      	mov	r0, r5
 800ae66:	920b      	str	r2, [sp, #44]	; 0x2c
 800ae68:	47b8      	blx	r7
 800ae6a:	3001      	adds	r0, #1
 800ae6c:	f43f ae99 	beq.w	800aba2 <_printf_float+0xb6>
 800ae70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ae72:	f10b 0b01 	add.w	fp, fp, #1
 800ae76:	e7b9      	b.n	800adec <_printf_float+0x300>
 800ae78:	4631      	mov	r1, r6
 800ae7a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800ae7e:	4628      	mov	r0, r5
 800ae80:	47b8      	blx	r7
 800ae82:	3001      	adds	r0, #1
 800ae84:	d1bf      	bne.n	800ae06 <_printf_float+0x31a>
 800ae86:	e68c      	b.n	800aba2 <_printf_float+0xb6>
 800ae88:	464b      	mov	r3, r9
 800ae8a:	4631      	mov	r1, r6
 800ae8c:	4628      	mov	r0, r5
 800ae8e:	eb08 020a 	add.w	r2, r8, sl
 800ae92:	47b8      	blx	r7
 800ae94:	3001      	adds	r0, #1
 800ae96:	d1c2      	bne.n	800ae1e <_printf_float+0x332>
 800ae98:	e683      	b.n	800aba2 <_printf_float+0xb6>
 800ae9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ae9c:	2a01      	cmp	r2, #1
 800ae9e:	dc01      	bgt.n	800aea4 <_printf_float+0x3b8>
 800aea0:	07db      	lsls	r3, r3, #31
 800aea2:	d537      	bpl.n	800af14 <_printf_float+0x428>
 800aea4:	2301      	movs	r3, #1
 800aea6:	4642      	mov	r2, r8
 800aea8:	4631      	mov	r1, r6
 800aeaa:	4628      	mov	r0, r5
 800aeac:	47b8      	blx	r7
 800aeae:	3001      	adds	r0, #1
 800aeb0:	f43f ae77 	beq.w	800aba2 <_printf_float+0xb6>
 800aeb4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800aeb8:	4631      	mov	r1, r6
 800aeba:	4628      	mov	r0, r5
 800aebc:	47b8      	blx	r7
 800aebe:	3001      	adds	r0, #1
 800aec0:	f43f ae6f 	beq.w	800aba2 <_printf_float+0xb6>
 800aec4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800aec8:	2200      	movs	r2, #0
 800aeca:	2300      	movs	r3, #0
 800aecc:	f7f5 fd8e 	bl	80009ec <__aeabi_dcmpeq>
 800aed0:	b9d8      	cbnz	r0, 800af0a <_printf_float+0x41e>
 800aed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aed4:	f108 0201 	add.w	r2, r8, #1
 800aed8:	3b01      	subs	r3, #1
 800aeda:	4631      	mov	r1, r6
 800aedc:	4628      	mov	r0, r5
 800aede:	47b8      	blx	r7
 800aee0:	3001      	adds	r0, #1
 800aee2:	d10e      	bne.n	800af02 <_printf_float+0x416>
 800aee4:	e65d      	b.n	800aba2 <_printf_float+0xb6>
 800aee6:	2301      	movs	r3, #1
 800aee8:	464a      	mov	r2, r9
 800aeea:	4631      	mov	r1, r6
 800aeec:	4628      	mov	r0, r5
 800aeee:	47b8      	blx	r7
 800aef0:	3001      	adds	r0, #1
 800aef2:	f43f ae56 	beq.w	800aba2 <_printf_float+0xb6>
 800aef6:	f108 0801 	add.w	r8, r8, #1
 800aefa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aefc:	3b01      	subs	r3, #1
 800aefe:	4543      	cmp	r3, r8
 800af00:	dcf1      	bgt.n	800aee6 <_printf_float+0x3fa>
 800af02:	4653      	mov	r3, sl
 800af04:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800af08:	e6e0      	b.n	800accc <_printf_float+0x1e0>
 800af0a:	f04f 0800 	mov.w	r8, #0
 800af0e:	f104 091a 	add.w	r9, r4, #26
 800af12:	e7f2      	b.n	800aefa <_printf_float+0x40e>
 800af14:	2301      	movs	r3, #1
 800af16:	4642      	mov	r2, r8
 800af18:	e7df      	b.n	800aeda <_printf_float+0x3ee>
 800af1a:	2301      	movs	r3, #1
 800af1c:	464a      	mov	r2, r9
 800af1e:	4631      	mov	r1, r6
 800af20:	4628      	mov	r0, r5
 800af22:	47b8      	blx	r7
 800af24:	3001      	adds	r0, #1
 800af26:	f43f ae3c 	beq.w	800aba2 <_printf_float+0xb6>
 800af2a:	f108 0801 	add.w	r8, r8, #1
 800af2e:	68e3      	ldr	r3, [r4, #12]
 800af30:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800af32:	1a5b      	subs	r3, r3, r1
 800af34:	4543      	cmp	r3, r8
 800af36:	dcf0      	bgt.n	800af1a <_printf_float+0x42e>
 800af38:	e6fd      	b.n	800ad36 <_printf_float+0x24a>
 800af3a:	f04f 0800 	mov.w	r8, #0
 800af3e:	f104 0919 	add.w	r9, r4, #25
 800af42:	e7f4      	b.n	800af2e <_printf_float+0x442>

0800af44 <_printf_common>:
 800af44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af48:	4616      	mov	r6, r2
 800af4a:	4699      	mov	r9, r3
 800af4c:	688a      	ldr	r2, [r1, #8]
 800af4e:	690b      	ldr	r3, [r1, #16]
 800af50:	4607      	mov	r7, r0
 800af52:	4293      	cmp	r3, r2
 800af54:	bfb8      	it	lt
 800af56:	4613      	movlt	r3, r2
 800af58:	6033      	str	r3, [r6, #0]
 800af5a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800af5e:	460c      	mov	r4, r1
 800af60:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800af64:	b10a      	cbz	r2, 800af6a <_printf_common+0x26>
 800af66:	3301      	adds	r3, #1
 800af68:	6033      	str	r3, [r6, #0]
 800af6a:	6823      	ldr	r3, [r4, #0]
 800af6c:	0699      	lsls	r1, r3, #26
 800af6e:	bf42      	ittt	mi
 800af70:	6833      	ldrmi	r3, [r6, #0]
 800af72:	3302      	addmi	r3, #2
 800af74:	6033      	strmi	r3, [r6, #0]
 800af76:	6825      	ldr	r5, [r4, #0]
 800af78:	f015 0506 	ands.w	r5, r5, #6
 800af7c:	d106      	bne.n	800af8c <_printf_common+0x48>
 800af7e:	f104 0a19 	add.w	sl, r4, #25
 800af82:	68e3      	ldr	r3, [r4, #12]
 800af84:	6832      	ldr	r2, [r6, #0]
 800af86:	1a9b      	subs	r3, r3, r2
 800af88:	42ab      	cmp	r3, r5
 800af8a:	dc28      	bgt.n	800afde <_printf_common+0x9a>
 800af8c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800af90:	1e13      	subs	r3, r2, #0
 800af92:	6822      	ldr	r2, [r4, #0]
 800af94:	bf18      	it	ne
 800af96:	2301      	movne	r3, #1
 800af98:	0692      	lsls	r2, r2, #26
 800af9a:	d42d      	bmi.n	800aff8 <_printf_common+0xb4>
 800af9c:	4649      	mov	r1, r9
 800af9e:	4638      	mov	r0, r7
 800afa0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800afa4:	47c0      	blx	r8
 800afa6:	3001      	adds	r0, #1
 800afa8:	d020      	beq.n	800afec <_printf_common+0xa8>
 800afaa:	6823      	ldr	r3, [r4, #0]
 800afac:	68e5      	ldr	r5, [r4, #12]
 800afae:	f003 0306 	and.w	r3, r3, #6
 800afb2:	2b04      	cmp	r3, #4
 800afb4:	bf18      	it	ne
 800afb6:	2500      	movne	r5, #0
 800afb8:	6832      	ldr	r2, [r6, #0]
 800afba:	f04f 0600 	mov.w	r6, #0
 800afbe:	68a3      	ldr	r3, [r4, #8]
 800afc0:	bf08      	it	eq
 800afc2:	1aad      	subeq	r5, r5, r2
 800afc4:	6922      	ldr	r2, [r4, #16]
 800afc6:	bf08      	it	eq
 800afc8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800afcc:	4293      	cmp	r3, r2
 800afce:	bfc4      	itt	gt
 800afd0:	1a9b      	subgt	r3, r3, r2
 800afd2:	18ed      	addgt	r5, r5, r3
 800afd4:	341a      	adds	r4, #26
 800afd6:	42b5      	cmp	r5, r6
 800afd8:	d11a      	bne.n	800b010 <_printf_common+0xcc>
 800afda:	2000      	movs	r0, #0
 800afdc:	e008      	b.n	800aff0 <_printf_common+0xac>
 800afde:	2301      	movs	r3, #1
 800afe0:	4652      	mov	r2, sl
 800afe2:	4649      	mov	r1, r9
 800afe4:	4638      	mov	r0, r7
 800afe6:	47c0      	blx	r8
 800afe8:	3001      	adds	r0, #1
 800afea:	d103      	bne.n	800aff4 <_printf_common+0xb0>
 800afec:	f04f 30ff 	mov.w	r0, #4294967295
 800aff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aff4:	3501      	adds	r5, #1
 800aff6:	e7c4      	b.n	800af82 <_printf_common+0x3e>
 800aff8:	2030      	movs	r0, #48	; 0x30
 800affa:	18e1      	adds	r1, r4, r3
 800affc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b000:	1c5a      	adds	r2, r3, #1
 800b002:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b006:	4422      	add	r2, r4
 800b008:	3302      	adds	r3, #2
 800b00a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b00e:	e7c5      	b.n	800af9c <_printf_common+0x58>
 800b010:	2301      	movs	r3, #1
 800b012:	4622      	mov	r2, r4
 800b014:	4649      	mov	r1, r9
 800b016:	4638      	mov	r0, r7
 800b018:	47c0      	blx	r8
 800b01a:	3001      	adds	r0, #1
 800b01c:	d0e6      	beq.n	800afec <_printf_common+0xa8>
 800b01e:	3601      	adds	r6, #1
 800b020:	e7d9      	b.n	800afd6 <_printf_common+0x92>
	...

0800b024 <_printf_i>:
 800b024:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b028:	7e0f      	ldrb	r7, [r1, #24]
 800b02a:	4691      	mov	r9, r2
 800b02c:	2f78      	cmp	r7, #120	; 0x78
 800b02e:	4680      	mov	r8, r0
 800b030:	460c      	mov	r4, r1
 800b032:	469a      	mov	sl, r3
 800b034:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b036:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b03a:	d807      	bhi.n	800b04c <_printf_i+0x28>
 800b03c:	2f62      	cmp	r7, #98	; 0x62
 800b03e:	d80a      	bhi.n	800b056 <_printf_i+0x32>
 800b040:	2f00      	cmp	r7, #0
 800b042:	f000 80d9 	beq.w	800b1f8 <_printf_i+0x1d4>
 800b046:	2f58      	cmp	r7, #88	; 0x58
 800b048:	f000 80a4 	beq.w	800b194 <_printf_i+0x170>
 800b04c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b050:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b054:	e03a      	b.n	800b0cc <_printf_i+0xa8>
 800b056:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b05a:	2b15      	cmp	r3, #21
 800b05c:	d8f6      	bhi.n	800b04c <_printf_i+0x28>
 800b05e:	a101      	add	r1, pc, #4	; (adr r1, 800b064 <_printf_i+0x40>)
 800b060:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b064:	0800b0bd 	.word	0x0800b0bd
 800b068:	0800b0d1 	.word	0x0800b0d1
 800b06c:	0800b04d 	.word	0x0800b04d
 800b070:	0800b04d 	.word	0x0800b04d
 800b074:	0800b04d 	.word	0x0800b04d
 800b078:	0800b04d 	.word	0x0800b04d
 800b07c:	0800b0d1 	.word	0x0800b0d1
 800b080:	0800b04d 	.word	0x0800b04d
 800b084:	0800b04d 	.word	0x0800b04d
 800b088:	0800b04d 	.word	0x0800b04d
 800b08c:	0800b04d 	.word	0x0800b04d
 800b090:	0800b1df 	.word	0x0800b1df
 800b094:	0800b101 	.word	0x0800b101
 800b098:	0800b1c1 	.word	0x0800b1c1
 800b09c:	0800b04d 	.word	0x0800b04d
 800b0a0:	0800b04d 	.word	0x0800b04d
 800b0a4:	0800b201 	.word	0x0800b201
 800b0a8:	0800b04d 	.word	0x0800b04d
 800b0ac:	0800b101 	.word	0x0800b101
 800b0b0:	0800b04d 	.word	0x0800b04d
 800b0b4:	0800b04d 	.word	0x0800b04d
 800b0b8:	0800b1c9 	.word	0x0800b1c9
 800b0bc:	682b      	ldr	r3, [r5, #0]
 800b0be:	1d1a      	adds	r2, r3, #4
 800b0c0:	681b      	ldr	r3, [r3, #0]
 800b0c2:	602a      	str	r2, [r5, #0]
 800b0c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b0c8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b0cc:	2301      	movs	r3, #1
 800b0ce:	e0a4      	b.n	800b21a <_printf_i+0x1f6>
 800b0d0:	6820      	ldr	r0, [r4, #0]
 800b0d2:	6829      	ldr	r1, [r5, #0]
 800b0d4:	0606      	lsls	r6, r0, #24
 800b0d6:	f101 0304 	add.w	r3, r1, #4
 800b0da:	d50a      	bpl.n	800b0f2 <_printf_i+0xce>
 800b0dc:	680e      	ldr	r6, [r1, #0]
 800b0de:	602b      	str	r3, [r5, #0]
 800b0e0:	2e00      	cmp	r6, #0
 800b0e2:	da03      	bge.n	800b0ec <_printf_i+0xc8>
 800b0e4:	232d      	movs	r3, #45	; 0x2d
 800b0e6:	4276      	negs	r6, r6
 800b0e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b0ec:	230a      	movs	r3, #10
 800b0ee:	485e      	ldr	r0, [pc, #376]	; (800b268 <_printf_i+0x244>)
 800b0f0:	e019      	b.n	800b126 <_printf_i+0x102>
 800b0f2:	680e      	ldr	r6, [r1, #0]
 800b0f4:	f010 0f40 	tst.w	r0, #64	; 0x40
 800b0f8:	602b      	str	r3, [r5, #0]
 800b0fa:	bf18      	it	ne
 800b0fc:	b236      	sxthne	r6, r6
 800b0fe:	e7ef      	b.n	800b0e0 <_printf_i+0xbc>
 800b100:	682b      	ldr	r3, [r5, #0]
 800b102:	6820      	ldr	r0, [r4, #0]
 800b104:	1d19      	adds	r1, r3, #4
 800b106:	6029      	str	r1, [r5, #0]
 800b108:	0601      	lsls	r1, r0, #24
 800b10a:	d501      	bpl.n	800b110 <_printf_i+0xec>
 800b10c:	681e      	ldr	r6, [r3, #0]
 800b10e:	e002      	b.n	800b116 <_printf_i+0xf2>
 800b110:	0646      	lsls	r6, r0, #25
 800b112:	d5fb      	bpl.n	800b10c <_printf_i+0xe8>
 800b114:	881e      	ldrh	r6, [r3, #0]
 800b116:	2f6f      	cmp	r7, #111	; 0x6f
 800b118:	bf0c      	ite	eq
 800b11a:	2308      	moveq	r3, #8
 800b11c:	230a      	movne	r3, #10
 800b11e:	4852      	ldr	r0, [pc, #328]	; (800b268 <_printf_i+0x244>)
 800b120:	2100      	movs	r1, #0
 800b122:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800b126:	6865      	ldr	r5, [r4, #4]
 800b128:	2d00      	cmp	r5, #0
 800b12a:	bfa8      	it	ge
 800b12c:	6821      	ldrge	r1, [r4, #0]
 800b12e:	60a5      	str	r5, [r4, #8]
 800b130:	bfa4      	itt	ge
 800b132:	f021 0104 	bicge.w	r1, r1, #4
 800b136:	6021      	strge	r1, [r4, #0]
 800b138:	b90e      	cbnz	r6, 800b13e <_printf_i+0x11a>
 800b13a:	2d00      	cmp	r5, #0
 800b13c:	d04d      	beq.n	800b1da <_printf_i+0x1b6>
 800b13e:	4615      	mov	r5, r2
 800b140:	fbb6 f1f3 	udiv	r1, r6, r3
 800b144:	fb03 6711 	mls	r7, r3, r1, r6
 800b148:	5dc7      	ldrb	r7, [r0, r7]
 800b14a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800b14e:	4637      	mov	r7, r6
 800b150:	42bb      	cmp	r3, r7
 800b152:	460e      	mov	r6, r1
 800b154:	d9f4      	bls.n	800b140 <_printf_i+0x11c>
 800b156:	2b08      	cmp	r3, #8
 800b158:	d10b      	bne.n	800b172 <_printf_i+0x14e>
 800b15a:	6823      	ldr	r3, [r4, #0]
 800b15c:	07de      	lsls	r6, r3, #31
 800b15e:	d508      	bpl.n	800b172 <_printf_i+0x14e>
 800b160:	6923      	ldr	r3, [r4, #16]
 800b162:	6861      	ldr	r1, [r4, #4]
 800b164:	4299      	cmp	r1, r3
 800b166:	bfde      	ittt	le
 800b168:	2330      	movle	r3, #48	; 0x30
 800b16a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800b16e:	f105 35ff 	addle.w	r5, r5, #4294967295
 800b172:	1b52      	subs	r2, r2, r5
 800b174:	6122      	str	r2, [r4, #16]
 800b176:	464b      	mov	r3, r9
 800b178:	4621      	mov	r1, r4
 800b17a:	4640      	mov	r0, r8
 800b17c:	f8cd a000 	str.w	sl, [sp]
 800b180:	aa03      	add	r2, sp, #12
 800b182:	f7ff fedf 	bl	800af44 <_printf_common>
 800b186:	3001      	adds	r0, #1
 800b188:	d14c      	bne.n	800b224 <_printf_i+0x200>
 800b18a:	f04f 30ff 	mov.w	r0, #4294967295
 800b18e:	b004      	add	sp, #16
 800b190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b194:	4834      	ldr	r0, [pc, #208]	; (800b268 <_printf_i+0x244>)
 800b196:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800b19a:	6829      	ldr	r1, [r5, #0]
 800b19c:	6823      	ldr	r3, [r4, #0]
 800b19e:	f851 6b04 	ldr.w	r6, [r1], #4
 800b1a2:	6029      	str	r1, [r5, #0]
 800b1a4:	061d      	lsls	r5, r3, #24
 800b1a6:	d514      	bpl.n	800b1d2 <_printf_i+0x1ae>
 800b1a8:	07df      	lsls	r7, r3, #31
 800b1aa:	bf44      	itt	mi
 800b1ac:	f043 0320 	orrmi.w	r3, r3, #32
 800b1b0:	6023      	strmi	r3, [r4, #0]
 800b1b2:	b91e      	cbnz	r6, 800b1bc <_printf_i+0x198>
 800b1b4:	6823      	ldr	r3, [r4, #0]
 800b1b6:	f023 0320 	bic.w	r3, r3, #32
 800b1ba:	6023      	str	r3, [r4, #0]
 800b1bc:	2310      	movs	r3, #16
 800b1be:	e7af      	b.n	800b120 <_printf_i+0xfc>
 800b1c0:	6823      	ldr	r3, [r4, #0]
 800b1c2:	f043 0320 	orr.w	r3, r3, #32
 800b1c6:	6023      	str	r3, [r4, #0]
 800b1c8:	2378      	movs	r3, #120	; 0x78
 800b1ca:	4828      	ldr	r0, [pc, #160]	; (800b26c <_printf_i+0x248>)
 800b1cc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b1d0:	e7e3      	b.n	800b19a <_printf_i+0x176>
 800b1d2:	0659      	lsls	r1, r3, #25
 800b1d4:	bf48      	it	mi
 800b1d6:	b2b6      	uxthmi	r6, r6
 800b1d8:	e7e6      	b.n	800b1a8 <_printf_i+0x184>
 800b1da:	4615      	mov	r5, r2
 800b1dc:	e7bb      	b.n	800b156 <_printf_i+0x132>
 800b1de:	682b      	ldr	r3, [r5, #0]
 800b1e0:	6826      	ldr	r6, [r4, #0]
 800b1e2:	1d18      	adds	r0, r3, #4
 800b1e4:	6961      	ldr	r1, [r4, #20]
 800b1e6:	6028      	str	r0, [r5, #0]
 800b1e8:	0635      	lsls	r5, r6, #24
 800b1ea:	681b      	ldr	r3, [r3, #0]
 800b1ec:	d501      	bpl.n	800b1f2 <_printf_i+0x1ce>
 800b1ee:	6019      	str	r1, [r3, #0]
 800b1f0:	e002      	b.n	800b1f8 <_printf_i+0x1d4>
 800b1f2:	0670      	lsls	r0, r6, #25
 800b1f4:	d5fb      	bpl.n	800b1ee <_printf_i+0x1ca>
 800b1f6:	8019      	strh	r1, [r3, #0]
 800b1f8:	2300      	movs	r3, #0
 800b1fa:	4615      	mov	r5, r2
 800b1fc:	6123      	str	r3, [r4, #16]
 800b1fe:	e7ba      	b.n	800b176 <_printf_i+0x152>
 800b200:	682b      	ldr	r3, [r5, #0]
 800b202:	2100      	movs	r1, #0
 800b204:	1d1a      	adds	r2, r3, #4
 800b206:	602a      	str	r2, [r5, #0]
 800b208:	681d      	ldr	r5, [r3, #0]
 800b20a:	6862      	ldr	r2, [r4, #4]
 800b20c:	4628      	mov	r0, r5
 800b20e:	f002 fb93 	bl	800d938 <memchr>
 800b212:	b108      	cbz	r0, 800b218 <_printf_i+0x1f4>
 800b214:	1b40      	subs	r0, r0, r5
 800b216:	6060      	str	r0, [r4, #4]
 800b218:	6863      	ldr	r3, [r4, #4]
 800b21a:	6123      	str	r3, [r4, #16]
 800b21c:	2300      	movs	r3, #0
 800b21e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b222:	e7a8      	b.n	800b176 <_printf_i+0x152>
 800b224:	462a      	mov	r2, r5
 800b226:	4649      	mov	r1, r9
 800b228:	4640      	mov	r0, r8
 800b22a:	6923      	ldr	r3, [r4, #16]
 800b22c:	47d0      	blx	sl
 800b22e:	3001      	adds	r0, #1
 800b230:	d0ab      	beq.n	800b18a <_printf_i+0x166>
 800b232:	6823      	ldr	r3, [r4, #0]
 800b234:	079b      	lsls	r3, r3, #30
 800b236:	d413      	bmi.n	800b260 <_printf_i+0x23c>
 800b238:	68e0      	ldr	r0, [r4, #12]
 800b23a:	9b03      	ldr	r3, [sp, #12]
 800b23c:	4298      	cmp	r0, r3
 800b23e:	bfb8      	it	lt
 800b240:	4618      	movlt	r0, r3
 800b242:	e7a4      	b.n	800b18e <_printf_i+0x16a>
 800b244:	2301      	movs	r3, #1
 800b246:	4632      	mov	r2, r6
 800b248:	4649      	mov	r1, r9
 800b24a:	4640      	mov	r0, r8
 800b24c:	47d0      	blx	sl
 800b24e:	3001      	adds	r0, #1
 800b250:	d09b      	beq.n	800b18a <_printf_i+0x166>
 800b252:	3501      	adds	r5, #1
 800b254:	68e3      	ldr	r3, [r4, #12]
 800b256:	9903      	ldr	r1, [sp, #12]
 800b258:	1a5b      	subs	r3, r3, r1
 800b25a:	42ab      	cmp	r3, r5
 800b25c:	dcf2      	bgt.n	800b244 <_printf_i+0x220>
 800b25e:	e7eb      	b.n	800b238 <_printf_i+0x214>
 800b260:	2500      	movs	r5, #0
 800b262:	f104 0619 	add.w	r6, r4, #25
 800b266:	e7f5      	b.n	800b254 <_printf_i+0x230>
 800b268:	0801075c 	.word	0x0801075c
 800b26c:	0801076d 	.word	0x0801076d

0800b270 <_scanf_float>:
 800b270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b274:	b087      	sub	sp, #28
 800b276:	9303      	str	r3, [sp, #12]
 800b278:	688b      	ldr	r3, [r1, #8]
 800b27a:	4617      	mov	r7, r2
 800b27c:	1e5a      	subs	r2, r3, #1
 800b27e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800b282:	bf85      	ittet	hi
 800b284:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800b288:	195b      	addhi	r3, r3, r5
 800b28a:	2300      	movls	r3, #0
 800b28c:	9302      	strhi	r3, [sp, #8]
 800b28e:	bf88      	it	hi
 800b290:	f240 135d 	movwhi	r3, #349	; 0x15d
 800b294:	468b      	mov	fp, r1
 800b296:	f04f 0500 	mov.w	r5, #0
 800b29a:	bf8c      	ite	hi
 800b29c:	608b      	strhi	r3, [r1, #8]
 800b29e:	9302      	strls	r3, [sp, #8]
 800b2a0:	680b      	ldr	r3, [r1, #0]
 800b2a2:	4680      	mov	r8, r0
 800b2a4:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800b2a8:	f84b 3b1c 	str.w	r3, [fp], #28
 800b2ac:	460c      	mov	r4, r1
 800b2ae:	465e      	mov	r6, fp
 800b2b0:	46aa      	mov	sl, r5
 800b2b2:	46a9      	mov	r9, r5
 800b2b4:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b2b8:	9501      	str	r5, [sp, #4]
 800b2ba:	68a2      	ldr	r2, [r4, #8]
 800b2bc:	b152      	cbz	r2, 800b2d4 <_scanf_float+0x64>
 800b2be:	683b      	ldr	r3, [r7, #0]
 800b2c0:	781b      	ldrb	r3, [r3, #0]
 800b2c2:	2b4e      	cmp	r3, #78	; 0x4e
 800b2c4:	d864      	bhi.n	800b390 <_scanf_float+0x120>
 800b2c6:	2b40      	cmp	r3, #64	; 0x40
 800b2c8:	d83c      	bhi.n	800b344 <_scanf_float+0xd4>
 800b2ca:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800b2ce:	b2c8      	uxtb	r0, r1
 800b2d0:	280e      	cmp	r0, #14
 800b2d2:	d93a      	bls.n	800b34a <_scanf_float+0xda>
 800b2d4:	f1b9 0f00 	cmp.w	r9, #0
 800b2d8:	d003      	beq.n	800b2e2 <_scanf_float+0x72>
 800b2da:	6823      	ldr	r3, [r4, #0]
 800b2dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b2e0:	6023      	str	r3, [r4, #0]
 800b2e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b2e6:	f1ba 0f01 	cmp.w	sl, #1
 800b2ea:	f200 8113 	bhi.w	800b514 <_scanf_float+0x2a4>
 800b2ee:	455e      	cmp	r6, fp
 800b2f0:	f200 8105 	bhi.w	800b4fe <_scanf_float+0x28e>
 800b2f4:	2501      	movs	r5, #1
 800b2f6:	4628      	mov	r0, r5
 800b2f8:	b007      	add	sp, #28
 800b2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b2fe:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800b302:	2a0d      	cmp	r2, #13
 800b304:	d8e6      	bhi.n	800b2d4 <_scanf_float+0x64>
 800b306:	a101      	add	r1, pc, #4	; (adr r1, 800b30c <_scanf_float+0x9c>)
 800b308:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800b30c:	0800b44b 	.word	0x0800b44b
 800b310:	0800b2d5 	.word	0x0800b2d5
 800b314:	0800b2d5 	.word	0x0800b2d5
 800b318:	0800b2d5 	.word	0x0800b2d5
 800b31c:	0800b4ab 	.word	0x0800b4ab
 800b320:	0800b483 	.word	0x0800b483
 800b324:	0800b2d5 	.word	0x0800b2d5
 800b328:	0800b2d5 	.word	0x0800b2d5
 800b32c:	0800b459 	.word	0x0800b459
 800b330:	0800b2d5 	.word	0x0800b2d5
 800b334:	0800b2d5 	.word	0x0800b2d5
 800b338:	0800b2d5 	.word	0x0800b2d5
 800b33c:	0800b2d5 	.word	0x0800b2d5
 800b340:	0800b411 	.word	0x0800b411
 800b344:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800b348:	e7db      	b.n	800b302 <_scanf_float+0x92>
 800b34a:	290e      	cmp	r1, #14
 800b34c:	d8c2      	bhi.n	800b2d4 <_scanf_float+0x64>
 800b34e:	a001      	add	r0, pc, #4	; (adr r0, 800b354 <_scanf_float+0xe4>)
 800b350:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800b354:	0800b403 	.word	0x0800b403
 800b358:	0800b2d5 	.word	0x0800b2d5
 800b35c:	0800b403 	.word	0x0800b403
 800b360:	0800b497 	.word	0x0800b497
 800b364:	0800b2d5 	.word	0x0800b2d5
 800b368:	0800b3b1 	.word	0x0800b3b1
 800b36c:	0800b3ed 	.word	0x0800b3ed
 800b370:	0800b3ed 	.word	0x0800b3ed
 800b374:	0800b3ed 	.word	0x0800b3ed
 800b378:	0800b3ed 	.word	0x0800b3ed
 800b37c:	0800b3ed 	.word	0x0800b3ed
 800b380:	0800b3ed 	.word	0x0800b3ed
 800b384:	0800b3ed 	.word	0x0800b3ed
 800b388:	0800b3ed 	.word	0x0800b3ed
 800b38c:	0800b3ed 	.word	0x0800b3ed
 800b390:	2b6e      	cmp	r3, #110	; 0x6e
 800b392:	d809      	bhi.n	800b3a8 <_scanf_float+0x138>
 800b394:	2b60      	cmp	r3, #96	; 0x60
 800b396:	d8b2      	bhi.n	800b2fe <_scanf_float+0x8e>
 800b398:	2b54      	cmp	r3, #84	; 0x54
 800b39a:	d077      	beq.n	800b48c <_scanf_float+0x21c>
 800b39c:	2b59      	cmp	r3, #89	; 0x59
 800b39e:	d199      	bne.n	800b2d4 <_scanf_float+0x64>
 800b3a0:	2d07      	cmp	r5, #7
 800b3a2:	d197      	bne.n	800b2d4 <_scanf_float+0x64>
 800b3a4:	2508      	movs	r5, #8
 800b3a6:	e029      	b.n	800b3fc <_scanf_float+0x18c>
 800b3a8:	2b74      	cmp	r3, #116	; 0x74
 800b3aa:	d06f      	beq.n	800b48c <_scanf_float+0x21c>
 800b3ac:	2b79      	cmp	r3, #121	; 0x79
 800b3ae:	e7f6      	b.n	800b39e <_scanf_float+0x12e>
 800b3b0:	6821      	ldr	r1, [r4, #0]
 800b3b2:	05c8      	lsls	r0, r1, #23
 800b3b4:	d51a      	bpl.n	800b3ec <_scanf_float+0x17c>
 800b3b6:	9b02      	ldr	r3, [sp, #8]
 800b3b8:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800b3bc:	6021      	str	r1, [r4, #0]
 800b3be:	f109 0901 	add.w	r9, r9, #1
 800b3c2:	b11b      	cbz	r3, 800b3cc <_scanf_float+0x15c>
 800b3c4:	3b01      	subs	r3, #1
 800b3c6:	3201      	adds	r2, #1
 800b3c8:	9302      	str	r3, [sp, #8]
 800b3ca:	60a2      	str	r2, [r4, #8]
 800b3cc:	68a3      	ldr	r3, [r4, #8]
 800b3ce:	3b01      	subs	r3, #1
 800b3d0:	60a3      	str	r3, [r4, #8]
 800b3d2:	6923      	ldr	r3, [r4, #16]
 800b3d4:	3301      	adds	r3, #1
 800b3d6:	6123      	str	r3, [r4, #16]
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	3b01      	subs	r3, #1
 800b3dc:	2b00      	cmp	r3, #0
 800b3de:	607b      	str	r3, [r7, #4]
 800b3e0:	f340 8084 	ble.w	800b4ec <_scanf_float+0x27c>
 800b3e4:	683b      	ldr	r3, [r7, #0]
 800b3e6:	3301      	adds	r3, #1
 800b3e8:	603b      	str	r3, [r7, #0]
 800b3ea:	e766      	b.n	800b2ba <_scanf_float+0x4a>
 800b3ec:	eb1a 0f05 	cmn.w	sl, r5
 800b3f0:	f47f af70 	bne.w	800b2d4 <_scanf_float+0x64>
 800b3f4:	6822      	ldr	r2, [r4, #0]
 800b3f6:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800b3fa:	6022      	str	r2, [r4, #0]
 800b3fc:	f806 3b01 	strb.w	r3, [r6], #1
 800b400:	e7e4      	b.n	800b3cc <_scanf_float+0x15c>
 800b402:	6822      	ldr	r2, [r4, #0]
 800b404:	0610      	lsls	r0, r2, #24
 800b406:	f57f af65 	bpl.w	800b2d4 <_scanf_float+0x64>
 800b40a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b40e:	e7f4      	b.n	800b3fa <_scanf_float+0x18a>
 800b410:	f1ba 0f00 	cmp.w	sl, #0
 800b414:	d10e      	bne.n	800b434 <_scanf_float+0x1c4>
 800b416:	f1b9 0f00 	cmp.w	r9, #0
 800b41a:	d10e      	bne.n	800b43a <_scanf_float+0x1ca>
 800b41c:	6822      	ldr	r2, [r4, #0]
 800b41e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b422:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b426:	d108      	bne.n	800b43a <_scanf_float+0x1ca>
 800b428:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b42c:	f04f 0a01 	mov.w	sl, #1
 800b430:	6022      	str	r2, [r4, #0]
 800b432:	e7e3      	b.n	800b3fc <_scanf_float+0x18c>
 800b434:	f1ba 0f02 	cmp.w	sl, #2
 800b438:	d055      	beq.n	800b4e6 <_scanf_float+0x276>
 800b43a:	2d01      	cmp	r5, #1
 800b43c:	d002      	beq.n	800b444 <_scanf_float+0x1d4>
 800b43e:	2d04      	cmp	r5, #4
 800b440:	f47f af48 	bne.w	800b2d4 <_scanf_float+0x64>
 800b444:	3501      	adds	r5, #1
 800b446:	b2ed      	uxtb	r5, r5
 800b448:	e7d8      	b.n	800b3fc <_scanf_float+0x18c>
 800b44a:	f1ba 0f01 	cmp.w	sl, #1
 800b44e:	f47f af41 	bne.w	800b2d4 <_scanf_float+0x64>
 800b452:	f04f 0a02 	mov.w	sl, #2
 800b456:	e7d1      	b.n	800b3fc <_scanf_float+0x18c>
 800b458:	b97d      	cbnz	r5, 800b47a <_scanf_float+0x20a>
 800b45a:	f1b9 0f00 	cmp.w	r9, #0
 800b45e:	f47f af3c 	bne.w	800b2da <_scanf_float+0x6a>
 800b462:	6822      	ldr	r2, [r4, #0]
 800b464:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b468:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b46c:	f47f af39 	bne.w	800b2e2 <_scanf_float+0x72>
 800b470:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b474:	2501      	movs	r5, #1
 800b476:	6022      	str	r2, [r4, #0]
 800b478:	e7c0      	b.n	800b3fc <_scanf_float+0x18c>
 800b47a:	2d03      	cmp	r5, #3
 800b47c:	d0e2      	beq.n	800b444 <_scanf_float+0x1d4>
 800b47e:	2d05      	cmp	r5, #5
 800b480:	e7de      	b.n	800b440 <_scanf_float+0x1d0>
 800b482:	2d02      	cmp	r5, #2
 800b484:	f47f af26 	bne.w	800b2d4 <_scanf_float+0x64>
 800b488:	2503      	movs	r5, #3
 800b48a:	e7b7      	b.n	800b3fc <_scanf_float+0x18c>
 800b48c:	2d06      	cmp	r5, #6
 800b48e:	f47f af21 	bne.w	800b2d4 <_scanf_float+0x64>
 800b492:	2507      	movs	r5, #7
 800b494:	e7b2      	b.n	800b3fc <_scanf_float+0x18c>
 800b496:	6822      	ldr	r2, [r4, #0]
 800b498:	0591      	lsls	r1, r2, #22
 800b49a:	f57f af1b 	bpl.w	800b2d4 <_scanf_float+0x64>
 800b49e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800b4a2:	6022      	str	r2, [r4, #0]
 800b4a4:	f8cd 9004 	str.w	r9, [sp, #4]
 800b4a8:	e7a8      	b.n	800b3fc <_scanf_float+0x18c>
 800b4aa:	6822      	ldr	r2, [r4, #0]
 800b4ac:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800b4b0:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800b4b4:	d006      	beq.n	800b4c4 <_scanf_float+0x254>
 800b4b6:	0550      	lsls	r0, r2, #21
 800b4b8:	f57f af0c 	bpl.w	800b2d4 <_scanf_float+0x64>
 800b4bc:	f1b9 0f00 	cmp.w	r9, #0
 800b4c0:	f43f af0f 	beq.w	800b2e2 <_scanf_float+0x72>
 800b4c4:	0591      	lsls	r1, r2, #22
 800b4c6:	bf58      	it	pl
 800b4c8:	9901      	ldrpl	r1, [sp, #4]
 800b4ca:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b4ce:	bf58      	it	pl
 800b4d0:	eba9 0101 	subpl.w	r1, r9, r1
 800b4d4:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800b4d8:	f04f 0900 	mov.w	r9, #0
 800b4dc:	bf58      	it	pl
 800b4de:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800b4e2:	6022      	str	r2, [r4, #0]
 800b4e4:	e78a      	b.n	800b3fc <_scanf_float+0x18c>
 800b4e6:	f04f 0a03 	mov.w	sl, #3
 800b4ea:	e787      	b.n	800b3fc <_scanf_float+0x18c>
 800b4ec:	4639      	mov	r1, r7
 800b4ee:	4640      	mov	r0, r8
 800b4f0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800b4f4:	4798      	blx	r3
 800b4f6:	2800      	cmp	r0, #0
 800b4f8:	f43f aedf 	beq.w	800b2ba <_scanf_float+0x4a>
 800b4fc:	e6ea      	b.n	800b2d4 <_scanf_float+0x64>
 800b4fe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b502:	463a      	mov	r2, r7
 800b504:	4640      	mov	r0, r8
 800b506:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b50a:	4798      	blx	r3
 800b50c:	6923      	ldr	r3, [r4, #16]
 800b50e:	3b01      	subs	r3, #1
 800b510:	6123      	str	r3, [r4, #16]
 800b512:	e6ec      	b.n	800b2ee <_scanf_float+0x7e>
 800b514:	1e6b      	subs	r3, r5, #1
 800b516:	2b06      	cmp	r3, #6
 800b518:	d825      	bhi.n	800b566 <_scanf_float+0x2f6>
 800b51a:	2d02      	cmp	r5, #2
 800b51c:	d836      	bhi.n	800b58c <_scanf_float+0x31c>
 800b51e:	455e      	cmp	r6, fp
 800b520:	f67f aee8 	bls.w	800b2f4 <_scanf_float+0x84>
 800b524:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b528:	463a      	mov	r2, r7
 800b52a:	4640      	mov	r0, r8
 800b52c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b530:	4798      	blx	r3
 800b532:	6923      	ldr	r3, [r4, #16]
 800b534:	3b01      	subs	r3, #1
 800b536:	6123      	str	r3, [r4, #16]
 800b538:	e7f1      	b.n	800b51e <_scanf_float+0x2ae>
 800b53a:	9802      	ldr	r0, [sp, #8]
 800b53c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b540:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800b544:	463a      	mov	r2, r7
 800b546:	9002      	str	r0, [sp, #8]
 800b548:	4640      	mov	r0, r8
 800b54a:	4798      	blx	r3
 800b54c:	6923      	ldr	r3, [r4, #16]
 800b54e:	3b01      	subs	r3, #1
 800b550:	6123      	str	r3, [r4, #16]
 800b552:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b556:	fa5f fa8a 	uxtb.w	sl, sl
 800b55a:	f1ba 0f02 	cmp.w	sl, #2
 800b55e:	d1ec      	bne.n	800b53a <_scanf_float+0x2ca>
 800b560:	3d03      	subs	r5, #3
 800b562:	b2ed      	uxtb	r5, r5
 800b564:	1b76      	subs	r6, r6, r5
 800b566:	6823      	ldr	r3, [r4, #0]
 800b568:	05da      	lsls	r2, r3, #23
 800b56a:	d52f      	bpl.n	800b5cc <_scanf_float+0x35c>
 800b56c:	055b      	lsls	r3, r3, #21
 800b56e:	d510      	bpl.n	800b592 <_scanf_float+0x322>
 800b570:	455e      	cmp	r6, fp
 800b572:	f67f aebf 	bls.w	800b2f4 <_scanf_float+0x84>
 800b576:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b57a:	463a      	mov	r2, r7
 800b57c:	4640      	mov	r0, r8
 800b57e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b582:	4798      	blx	r3
 800b584:	6923      	ldr	r3, [r4, #16]
 800b586:	3b01      	subs	r3, #1
 800b588:	6123      	str	r3, [r4, #16]
 800b58a:	e7f1      	b.n	800b570 <_scanf_float+0x300>
 800b58c:	46aa      	mov	sl, r5
 800b58e:	9602      	str	r6, [sp, #8]
 800b590:	e7df      	b.n	800b552 <_scanf_float+0x2e2>
 800b592:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800b596:	6923      	ldr	r3, [r4, #16]
 800b598:	2965      	cmp	r1, #101	; 0x65
 800b59a:	f103 33ff 	add.w	r3, r3, #4294967295
 800b59e:	f106 35ff 	add.w	r5, r6, #4294967295
 800b5a2:	6123      	str	r3, [r4, #16]
 800b5a4:	d00c      	beq.n	800b5c0 <_scanf_float+0x350>
 800b5a6:	2945      	cmp	r1, #69	; 0x45
 800b5a8:	d00a      	beq.n	800b5c0 <_scanf_float+0x350>
 800b5aa:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b5ae:	463a      	mov	r2, r7
 800b5b0:	4640      	mov	r0, r8
 800b5b2:	4798      	blx	r3
 800b5b4:	6923      	ldr	r3, [r4, #16]
 800b5b6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800b5ba:	3b01      	subs	r3, #1
 800b5bc:	1eb5      	subs	r5, r6, #2
 800b5be:	6123      	str	r3, [r4, #16]
 800b5c0:	463a      	mov	r2, r7
 800b5c2:	4640      	mov	r0, r8
 800b5c4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b5c8:	4798      	blx	r3
 800b5ca:	462e      	mov	r6, r5
 800b5cc:	6825      	ldr	r5, [r4, #0]
 800b5ce:	f015 0510 	ands.w	r5, r5, #16
 800b5d2:	d155      	bne.n	800b680 <_scanf_float+0x410>
 800b5d4:	7035      	strb	r5, [r6, #0]
 800b5d6:	6823      	ldr	r3, [r4, #0]
 800b5d8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800b5dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b5e0:	d11b      	bne.n	800b61a <_scanf_float+0x3aa>
 800b5e2:	9b01      	ldr	r3, [sp, #4]
 800b5e4:	454b      	cmp	r3, r9
 800b5e6:	eba3 0209 	sub.w	r2, r3, r9
 800b5ea:	d123      	bne.n	800b634 <_scanf_float+0x3c4>
 800b5ec:	2200      	movs	r2, #0
 800b5ee:	4659      	mov	r1, fp
 800b5f0:	4640      	mov	r0, r8
 800b5f2:	f000 fee9 	bl	800c3c8 <_strtod_r>
 800b5f6:	6822      	ldr	r2, [r4, #0]
 800b5f8:	9b03      	ldr	r3, [sp, #12]
 800b5fa:	f012 0f02 	tst.w	r2, #2
 800b5fe:	4606      	mov	r6, r0
 800b600:	460f      	mov	r7, r1
 800b602:	681b      	ldr	r3, [r3, #0]
 800b604:	d021      	beq.n	800b64a <_scanf_float+0x3da>
 800b606:	1d1a      	adds	r2, r3, #4
 800b608:	9903      	ldr	r1, [sp, #12]
 800b60a:	600a      	str	r2, [r1, #0]
 800b60c:	681b      	ldr	r3, [r3, #0]
 800b60e:	e9c3 6700 	strd	r6, r7, [r3]
 800b612:	68e3      	ldr	r3, [r4, #12]
 800b614:	3301      	adds	r3, #1
 800b616:	60e3      	str	r3, [r4, #12]
 800b618:	e66d      	b.n	800b2f6 <_scanf_float+0x86>
 800b61a:	9b04      	ldr	r3, [sp, #16]
 800b61c:	2b00      	cmp	r3, #0
 800b61e:	d0e5      	beq.n	800b5ec <_scanf_float+0x37c>
 800b620:	9905      	ldr	r1, [sp, #20]
 800b622:	230a      	movs	r3, #10
 800b624:	462a      	mov	r2, r5
 800b626:	4640      	mov	r0, r8
 800b628:	3101      	adds	r1, #1
 800b62a:	f000 ff4f 	bl	800c4cc <_strtol_r>
 800b62e:	9b04      	ldr	r3, [sp, #16]
 800b630:	9e05      	ldr	r6, [sp, #20]
 800b632:	1ac2      	subs	r2, r0, r3
 800b634:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800b638:	429e      	cmp	r6, r3
 800b63a:	bf28      	it	cs
 800b63c:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800b640:	4630      	mov	r0, r6
 800b642:	4910      	ldr	r1, [pc, #64]	; (800b684 <_scanf_float+0x414>)
 800b644:	f000 f826 	bl	800b694 <siprintf>
 800b648:	e7d0      	b.n	800b5ec <_scanf_float+0x37c>
 800b64a:	f012 0f04 	tst.w	r2, #4
 800b64e:	f103 0204 	add.w	r2, r3, #4
 800b652:	d1d9      	bne.n	800b608 <_scanf_float+0x398>
 800b654:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800b658:	f8cc 2000 	str.w	r2, [ip]
 800b65c:	f8d3 8000 	ldr.w	r8, [r3]
 800b660:	4602      	mov	r2, r0
 800b662:	460b      	mov	r3, r1
 800b664:	f7f5 f9f4 	bl	8000a50 <__aeabi_dcmpun>
 800b668:	b128      	cbz	r0, 800b676 <_scanf_float+0x406>
 800b66a:	4807      	ldr	r0, [pc, #28]	; (800b688 <_scanf_float+0x418>)
 800b66c:	f000 f80e 	bl	800b68c <nanf>
 800b670:	f8c8 0000 	str.w	r0, [r8]
 800b674:	e7cd      	b.n	800b612 <_scanf_float+0x3a2>
 800b676:	4630      	mov	r0, r6
 800b678:	4639      	mov	r1, r7
 800b67a:	f7f5 fa47 	bl	8000b0c <__aeabi_d2f>
 800b67e:	e7f7      	b.n	800b670 <_scanf_float+0x400>
 800b680:	2500      	movs	r5, #0
 800b682:	e638      	b.n	800b2f6 <_scanf_float+0x86>
 800b684:	0801077e 	.word	0x0801077e
 800b688:	08010ba3 	.word	0x08010ba3

0800b68c <nanf>:
 800b68c:	4800      	ldr	r0, [pc, #0]	; (800b690 <nanf+0x4>)
 800b68e:	4770      	bx	lr
 800b690:	7fc00000 	.word	0x7fc00000

0800b694 <siprintf>:
 800b694:	b40e      	push	{r1, r2, r3}
 800b696:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800b69a:	b500      	push	{lr}
 800b69c:	b09c      	sub	sp, #112	; 0x70
 800b69e:	ab1d      	add	r3, sp, #116	; 0x74
 800b6a0:	9002      	str	r0, [sp, #8]
 800b6a2:	9006      	str	r0, [sp, #24]
 800b6a4:	9107      	str	r1, [sp, #28]
 800b6a6:	9104      	str	r1, [sp, #16]
 800b6a8:	4808      	ldr	r0, [pc, #32]	; (800b6cc <siprintf+0x38>)
 800b6aa:	4909      	ldr	r1, [pc, #36]	; (800b6d0 <siprintf+0x3c>)
 800b6ac:	f853 2b04 	ldr.w	r2, [r3], #4
 800b6b0:	9105      	str	r1, [sp, #20]
 800b6b2:	6800      	ldr	r0, [r0, #0]
 800b6b4:	a902      	add	r1, sp, #8
 800b6b6:	9301      	str	r3, [sp, #4]
 800b6b8:	f002 ff50 	bl	800e55c <_svfiprintf_r>
 800b6bc:	2200      	movs	r2, #0
 800b6be:	9b02      	ldr	r3, [sp, #8]
 800b6c0:	701a      	strb	r2, [r3, #0]
 800b6c2:	b01c      	add	sp, #112	; 0x70
 800b6c4:	f85d eb04 	ldr.w	lr, [sp], #4
 800b6c8:	b003      	add	sp, #12
 800b6ca:	4770      	bx	lr
 800b6cc:	200001a0 	.word	0x200001a0
 800b6d0:	ffff0208 	.word	0xffff0208

0800b6d4 <siscanf>:
 800b6d4:	b40e      	push	{r1, r2, r3}
 800b6d6:	f44f 7201 	mov.w	r2, #516	; 0x204
 800b6da:	b530      	push	{r4, r5, lr}
 800b6dc:	b09c      	sub	sp, #112	; 0x70
 800b6de:	ac1f      	add	r4, sp, #124	; 0x7c
 800b6e0:	f854 5b04 	ldr.w	r5, [r4], #4
 800b6e4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b6e8:	9002      	str	r0, [sp, #8]
 800b6ea:	9006      	str	r0, [sp, #24]
 800b6ec:	f7f4 fd52 	bl	8000194 <strlen>
 800b6f0:	4b0b      	ldr	r3, [pc, #44]	; (800b720 <siscanf+0x4c>)
 800b6f2:	9003      	str	r0, [sp, #12]
 800b6f4:	930b      	str	r3, [sp, #44]	; 0x2c
 800b6f6:	2300      	movs	r3, #0
 800b6f8:	930f      	str	r3, [sp, #60]	; 0x3c
 800b6fa:	9314      	str	r3, [sp, #80]	; 0x50
 800b6fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b700:	9007      	str	r0, [sp, #28]
 800b702:	4808      	ldr	r0, [pc, #32]	; (800b724 <siscanf+0x50>)
 800b704:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b708:	462a      	mov	r2, r5
 800b70a:	4623      	mov	r3, r4
 800b70c:	a902      	add	r1, sp, #8
 800b70e:	6800      	ldr	r0, [r0, #0]
 800b710:	9401      	str	r4, [sp, #4]
 800b712:	f003 f87d 	bl	800e810 <__ssvfiscanf_r>
 800b716:	b01c      	add	sp, #112	; 0x70
 800b718:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b71c:	b003      	add	sp, #12
 800b71e:	4770      	bx	lr
 800b720:	0800b74b 	.word	0x0800b74b
 800b724:	200001a0 	.word	0x200001a0

0800b728 <__sread>:
 800b728:	b510      	push	{r4, lr}
 800b72a:	460c      	mov	r4, r1
 800b72c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b730:	f003 fb3a 	bl	800eda8 <_read_r>
 800b734:	2800      	cmp	r0, #0
 800b736:	bfab      	itete	ge
 800b738:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800b73a:	89a3      	ldrhlt	r3, [r4, #12]
 800b73c:	181b      	addge	r3, r3, r0
 800b73e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800b742:	bfac      	ite	ge
 800b744:	6563      	strge	r3, [r4, #84]	; 0x54
 800b746:	81a3      	strhlt	r3, [r4, #12]
 800b748:	bd10      	pop	{r4, pc}

0800b74a <__seofread>:
 800b74a:	2000      	movs	r0, #0
 800b74c:	4770      	bx	lr

0800b74e <__swrite>:
 800b74e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b752:	461f      	mov	r7, r3
 800b754:	898b      	ldrh	r3, [r1, #12]
 800b756:	4605      	mov	r5, r0
 800b758:	05db      	lsls	r3, r3, #23
 800b75a:	460c      	mov	r4, r1
 800b75c:	4616      	mov	r6, r2
 800b75e:	d505      	bpl.n	800b76c <__swrite+0x1e>
 800b760:	2302      	movs	r3, #2
 800b762:	2200      	movs	r2, #0
 800b764:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b768:	f002 f8ba 	bl	800d8e0 <_lseek_r>
 800b76c:	89a3      	ldrh	r3, [r4, #12]
 800b76e:	4632      	mov	r2, r6
 800b770:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b774:	81a3      	strh	r3, [r4, #12]
 800b776:	4628      	mov	r0, r5
 800b778:	463b      	mov	r3, r7
 800b77a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800b77e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b782:	f000 bea5 	b.w	800c4d0 <_write_r>

0800b786 <__sseek>:
 800b786:	b510      	push	{r4, lr}
 800b788:	460c      	mov	r4, r1
 800b78a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b78e:	f002 f8a7 	bl	800d8e0 <_lseek_r>
 800b792:	1c43      	adds	r3, r0, #1
 800b794:	89a3      	ldrh	r3, [r4, #12]
 800b796:	bf15      	itete	ne
 800b798:	6560      	strne	r0, [r4, #84]	; 0x54
 800b79a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800b79e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800b7a2:	81a3      	strheq	r3, [r4, #12]
 800b7a4:	bf18      	it	ne
 800b7a6:	81a3      	strhne	r3, [r4, #12]
 800b7a8:	bd10      	pop	{r4, pc}

0800b7aa <__sclose>:
 800b7aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b7ae:	f000 bea1 	b.w	800c4f4 <_close_r>

0800b7b2 <sulp>:
 800b7b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7b6:	460f      	mov	r7, r1
 800b7b8:	4690      	mov	r8, r2
 800b7ba:	f002 fc3b 	bl	800e034 <__ulp>
 800b7be:	4604      	mov	r4, r0
 800b7c0:	460d      	mov	r5, r1
 800b7c2:	f1b8 0f00 	cmp.w	r8, #0
 800b7c6:	d011      	beq.n	800b7ec <sulp+0x3a>
 800b7c8:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800b7cc:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800b7d0:	2b00      	cmp	r3, #0
 800b7d2:	dd0b      	ble.n	800b7ec <sulp+0x3a>
 800b7d4:	2400      	movs	r4, #0
 800b7d6:	051b      	lsls	r3, r3, #20
 800b7d8:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800b7dc:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800b7e0:	4622      	mov	r2, r4
 800b7e2:	462b      	mov	r3, r5
 800b7e4:	f7f4 fe9a 	bl	800051c <__aeabi_dmul>
 800b7e8:	4604      	mov	r4, r0
 800b7ea:	460d      	mov	r5, r1
 800b7ec:	4620      	mov	r0, r4
 800b7ee:	4629      	mov	r1, r5
 800b7f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7f4:	0000      	movs	r0, r0
	...

0800b7f8 <_strtod_l>:
 800b7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7fc:	469b      	mov	fp, r3
 800b7fe:	2300      	movs	r3, #0
 800b800:	b09f      	sub	sp, #124	; 0x7c
 800b802:	931a      	str	r3, [sp, #104]	; 0x68
 800b804:	4b9e      	ldr	r3, [pc, #632]	; (800ba80 <_strtod_l+0x288>)
 800b806:	4682      	mov	sl, r0
 800b808:	681f      	ldr	r7, [r3, #0]
 800b80a:	460e      	mov	r6, r1
 800b80c:	4638      	mov	r0, r7
 800b80e:	9215      	str	r2, [sp, #84]	; 0x54
 800b810:	f7f4 fcc0 	bl	8000194 <strlen>
 800b814:	f04f 0800 	mov.w	r8, #0
 800b818:	4604      	mov	r4, r0
 800b81a:	f04f 0900 	mov.w	r9, #0
 800b81e:	9619      	str	r6, [sp, #100]	; 0x64
 800b820:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b822:	781a      	ldrb	r2, [r3, #0]
 800b824:	2a2b      	cmp	r2, #43	; 0x2b
 800b826:	d04c      	beq.n	800b8c2 <_strtod_l+0xca>
 800b828:	d83a      	bhi.n	800b8a0 <_strtod_l+0xa8>
 800b82a:	2a0d      	cmp	r2, #13
 800b82c:	d833      	bhi.n	800b896 <_strtod_l+0x9e>
 800b82e:	2a08      	cmp	r2, #8
 800b830:	d833      	bhi.n	800b89a <_strtod_l+0xa2>
 800b832:	2a00      	cmp	r2, #0
 800b834:	d03d      	beq.n	800b8b2 <_strtod_l+0xba>
 800b836:	2300      	movs	r3, #0
 800b838:	930a      	str	r3, [sp, #40]	; 0x28
 800b83a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b83c:	782b      	ldrb	r3, [r5, #0]
 800b83e:	2b30      	cmp	r3, #48	; 0x30
 800b840:	f040 80aa 	bne.w	800b998 <_strtod_l+0x1a0>
 800b844:	786b      	ldrb	r3, [r5, #1]
 800b846:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800b84a:	2b58      	cmp	r3, #88	; 0x58
 800b84c:	d166      	bne.n	800b91c <_strtod_l+0x124>
 800b84e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b850:	4650      	mov	r0, sl
 800b852:	9301      	str	r3, [sp, #4]
 800b854:	ab1a      	add	r3, sp, #104	; 0x68
 800b856:	9300      	str	r3, [sp, #0]
 800b858:	4a8a      	ldr	r2, [pc, #552]	; (800ba84 <_strtod_l+0x28c>)
 800b85a:	f8cd b008 	str.w	fp, [sp, #8]
 800b85e:	ab1b      	add	r3, sp, #108	; 0x6c
 800b860:	a919      	add	r1, sp, #100	; 0x64
 800b862:	f001 fd3b 	bl	800d2dc <__gethex>
 800b866:	f010 0607 	ands.w	r6, r0, #7
 800b86a:	4604      	mov	r4, r0
 800b86c:	d005      	beq.n	800b87a <_strtod_l+0x82>
 800b86e:	2e06      	cmp	r6, #6
 800b870:	d129      	bne.n	800b8c6 <_strtod_l+0xce>
 800b872:	2300      	movs	r3, #0
 800b874:	3501      	adds	r5, #1
 800b876:	9519      	str	r5, [sp, #100]	; 0x64
 800b878:	930a      	str	r3, [sp, #40]	; 0x28
 800b87a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b87c:	2b00      	cmp	r3, #0
 800b87e:	f040 858a 	bne.w	800c396 <_strtod_l+0xb9e>
 800b882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b884:	b1d3      	cbz	r3, 800b8bc <_strtod_l+0xc4>
 800b886:	4642      	mov	r2, r8
 800b888:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800b88c:	4610      	mov	r0, r2
 800b88e:	4619      	mov	r1, r3
 800b890:	b01f      	add	sp, #124	; 0x7c
 800b892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b896:	2a20      	cmp	r2, #32
 800b898:	d1cd      	bne.n	800b836 <_strtod_l+0x3e>
 800b89a:	3301      	adds	r3, #1
 800b89c:	9319      	str	r3, [sp, #100]	; 0x64
 800b89e:	e7bf      	b.n	800b820 <_strtod_l+0x28>
 800b8a0:	2a2d      	cmp	r2, #45	; 0x2d
 800b8a2:	d1c8      	bne.n	800b836 <_strtod_l+0x3e>
 800b8a4:	2201      	movs	r2, #1
 800b8a6:	920a      	str	r2, [sp, #40]	; 0x28
 800b8a8:	1c5a      	adds	r2, r3, #1
 800b8aa:	9219      	str	r2, [sp, #100]	; 0x64
 800b8ac:	785b      	ldrb	r3, [r3, #1]
 800b8ae:	2b00      	cmp	r3, #0
 800b8b0:	d1c3      	bne.n	800b83a <_strtod_l+0x42>
 800b8b2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b8b4:	9619      	str	r6, [sp, #100]	; 0x64
 800b8b6:	2b00      	cmp	r3, #0
 800b8b8:	f040 856b 	bne.w	800c392 <_strtod_l+0xb9a>
 800b8bc:	4642      	mov	r2, r8
 800b8be:	464b      	mov	r3, r9
 800b8c0:	e7e4      	b.n	800b88c <_strtod_l+0x94>
 800b8c2:	2200      	movs	r2, #0
 800b8c4:	e7ef      	b.n	800b8a6 <_strtod_l+0xae>
 800b8c6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b8c8:	b13a      	cbz	r2, 800b8da <_strtod_l+0xe2>
 800b8ca:	2135      	movs	r1, #53	; 0x35
 800b8cc:	a81c      	add	r0, sp, #112	; 0x70
 800b8ce:	f002 fcb5 	bl	800e23c <__copybits>
 800b8d2:	4650      	mov	r0, sl
 800b8d4:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b8d6:	f002 f87d 	bl	800d9d4 <_Bfree>
 800b8da:	3e01      	subs	r6, #1
 800b8dc:	2e04      	cmp	r6, #4
 800b8de:	d806      	bhi.n	800b8ee <_strtod_l+0xf6>
 800b8e0:	e8df f006 	tbb	[pc, r6]
 800b8e4:	1714030a 	.word	0x1714030a
 800b8e8:	0a          	.byte	0x0a
 800b8e9:	00          	.byte	0x00
 800b8ea:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 800b8ee:	0721      	lsls	r1, r4, #28
 800b8f0:	d5c3      	bpl.n	800b87a <_strtod_l+0x82>
 800b8f2:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800b8f6:	e7c0      	b.n	800b87a <_strtod_l+0x82>
 800b8f8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800b8fa:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 800b8fe:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800b902:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800b906:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800b90a:	e7f0      	b.n	800b8ee <_strtod_l+0xf6>
 800b90c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800ba88 <_strtod_l+0x290>
 800b910:	e7ed      	b.n	800b8ee <_strtod_l+0xf6>
 800b912:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800b916:	f04f 38ff 	mov.w	r8, #4294967295
 800b91a:	e7e8      	b.n	800b8ee <_strtod_l+0xf6>
 800b91c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b91e:	1c5a      	adds	r2, r3, #1
 800b920:	9219      	str	r2, [sp, #100]	; 0x64
 800b922:	785b      	ldrb	r3, [r3, #1]
 800b924:	2b30      	cmp	r3, #48	; 0x30
 800b926:	d0f9      	beq.n	800b91c <_strtod_l+0x124>
 800b928:	2b00      	cmp	r3, #0
 800b92a:	d0a6      	beq.n	800b87a <_strtod_l+0x82>
 800b92c:	2301      	movs	r3, #1
 800b92e:	9307      	str	r3, [sp, #28]
 800b930:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b932:	220a      	movs	r2, #10
 800b934:	9308      	str	r3, [sp, #32]
 800b936:	2300      	movs	r3, #0
 800b938:	469b      	mov	fp, r3
 800b93a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800b93e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b940:	7805      	ldrb	r5, [r0, #0]
 800b942:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800b946:	b2d9      	uxtb	r1, r3
 800b948:	2909      	cmp	r1, #9
 800b94a:	d927      	bls.n	800b99c <_strtod_l+0x1a4>
 800b94c:	4622      	mov	r2, r4
 800b94e:	4639      	mov	r1, r7
 800b950:	f003 fa8a 	bl	800ee68 <strncmp>
 800b954:	2800      	cmp	r0, #0
 800b956:	d033      	beq.n	800b9c0 <_strtod_l+0x1c8>
 800b958:	2000      	movs	r0, #0
 800b95a:	462a      	mov	r2, r5
 800b95c:	465c      	mov	r4, fp
 800b95e:	4603      	mov	r3, r0
 800b960:	9004      	str	r0, [sp, #16]
 800b962:	2a65      	cmp	r2, #101	; 0x65
 800b964:	d001      	beq.n	800b96a <_strtod_l+0x172>
 800b966:	2a45      	cmp	r2, #69	; 0x45
 800b968:	d114      	bne.n	800b994 <_strtod_l+0x19c>
 800b96a:	b91c      	cbnz	r4, 800b974 <_strtod_l+0x17c>
 800b96c:	9a07      	ldr	r2, [sp, #28]
 800b96e:	4302      	orrs	r2, r0
 800b970:	d09f      	beq.n	800b8b2 <_strtod_l+0xba>
 800b972:	2400      	movs	r4, #0
 800b974:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800b976:	1c72      	adds	r2, r6, #1
 800b978:	9219      	str	r2, [sp, #100]	; 0x64
 800b97a:	7872      	ldrb	r2, [r6, #1]
 800b97c:	2a2b      	cmp	r2, #43	; 0x2b
 800b97e:	d079      	beq.n	800ba74 <_strtod_l+0x27c>
 800b980:	2a2d      	cmp	r2, #45	; 0x2d
 800b982:	f000 8083 	beq.w	800ba8c <_strtod_l+0x294>
 800b986:	2700      	movs	r7, #0
 800b988:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800b98c:	2909      	cmp	r1, #9
 800b98e:	f240 8083 	bls.w	800ba98 <_strtod_l+0x2a0>
 800b992:	9619      	str	r6, [sp, #100]	; 0x64
 800b994:	2500      	movs	r5, #0
 800b996:	e09f      	b.n	800bad8 <_strtod_l+0x2e0>
 800b998:	2300      	movs	r3, #0
 800b99a:	e7c8      	b.n	800b92e <_strtod_l+0x136>
 800b99c:	f1bb 0f08 	cmp.w	fp, #8
 800b9a0:	bfd5      	itete	le
 800b9a2:	9906      	ldrle	r1, [sp, #24]
 800b9a4:	9905      	ldrgt	r1, [sp, #20]
 800b9a6:	fb02 3301 	mlale	r3, r2, r1, r3
 800b9aa:	fb02 3301 	mlagt	r3, r2, r1, r3
 800b9ae:	f100 0001 	add.w	r0, r0, #1
 800b9b2:	bfd4      	ite	le
 800b9b4:	9306      	strle	r3, [sp, #24]
 800b9b6:	9305      	strgt	r3, [sp, #20]
 800b9b8:	f10b 0b01 	add.w	fp, fp, #1
 800b9bc:	9019      	str	r0, [sp, #100]	; 0x64
 800b9be:	e7be      	b.n	800b93e <_strtod_l+0x146>
 800b9c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b9c2:	191a      	adds	r2, r3, r4
 800b9c4:	9219      	str	r2, [sp, #100]	; 0x64
 800b9c6:	5d1a      	ldrb	r2, [r3, r4]
 800b9c8:	f1bb 0f00 	cmp.w	fp, #0
 800b9cc:	d036      	beq.n	800ba3c <_strtod_l+0x244>
 800b9ce:	465c      	mov	r4, fp
 800b9d0:	9004      	str	r0, [sp, #16]
 800b9d2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800b9d6:	2b09      	cmp	r3, #9
 800b9d8:	d912      	bls.n	800ba00 <_strtod_l+0x208>
 800b9da:	2301      	movs	r3, #1
 800b9dc:	e7c1      	b.n	800b962 <_strtod_l+0x16a>
 800b9de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b9e0:	3001      	adds	r0, #1
 800b9e2:	1c5a      	adds	r2, r3, #1
 800b9e4:	9219      	str	r2, [sp, #100]	; 0x64
 800b9e6:	785a      	ldrb	r2, [r3, #1]
 800b9e8:	2a30      	cmp	r2, #48	; 0x30
 800b9ea:	d0f8      	beq.n	800b9de <_strtod_l+0x1e6>
 800b9ec:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800b9f0:	2b08      	cmp	r3, #8
 800b9f2:	f200 84d5 	bhi.w	800c3a0 <_strtod_l+0xba8>
 800b9f6:	9004      	str	r0, [sp, #16]
 800b9f8:	2000      	movs	r0, #0
 800b9fa:	4604      	mov	r4, r0
 800b9fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b9fe:	9308      	str	r3, [sp, #32]
 800ba00:	3a30      	subs	r2, #48	; 0x30
 800ba02:	f100 0301 	add.w	r3, r0, #1
 800ba06:	d013      	beq.n	800ba30 <_strtod_l+0x238>
 800ba08:	9904      	ldr	r1, [sp, #16]
 800ba0a:	1905      	adds	r5, r0, r4
 800ba0c:	4419      	add	r1, r3
 800ba0e:	9104      	str	r1, [sp, #16]
 800ba10:	4623      	mov	r3, r4
 800ba12:	210a      	movs	r1, #10
 800ba14:	42ab      	cmp	r3, r5
 800ba16:	d113      	bne.n	800ba40 <_strtod_l+0x248>
 800ba18:	1823      	adds	r3, r4, r0
 800ba1a:	2b08      	cmp	r3, #8
 800ba1c:	f104 0401 	add.w	r4, r4, #1
 800ba20:	4404      	add	r4, r0
 800ba22:	dc1b      	bgt.n	800ba5c <_strtod_l+0x264>
 800ba24:	230a      	movs	r3, #10
 800ba26:	9906      	ldr	r1, [sp, #24]
 800ba28:	fb03 2301 	mla	r3, r3, r1, r2
 800ba2c:	9306      	str	r3, [sp, #24]
 800ba2e:	2300      	movs	r3, #0
 800ba30:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ba32:	4618      	mov	r0, r3
 800ba34:	1c51      	adds	r1, r2, #1
 800ba36:	9119      	str	r1, [sp, #100]	; 0x64
 800ba38:	7852      	ldrb	r2, [r2, #1]
 800ba3a:	e7ca      	b.n	800b9d2 <_strtod_l+0x1da>
 800ba3c:	4658      	mov	r0, fp
 800ba3e:	e7d3      	b.n	800b9e8 <_strtod_l+0x1f0>
 800ba40:	2b08      	cmp	r3, #8
 800ba42:	dc04      	bgt.n	800ba4e <_strtod_l+0x256>
 800ba44:	9f06      	ldr	r7, [sp, #24]
 800ba46:	434f      	muls	r7, r1
 800ba48:	9706      	str	r7, [sp, #24]
 800ba4a:	3301      	adds	r3, #1
 800ba4c:	e7e2      	b.n	800ba14 <_strtod_l+0x21c>
 800ba4e:	1c5f      	adds	r7, r3, #1
 800ba50:	2f10      	cmp	r7, #16
 800ba52:	bfde      	ittt	le
 800ba54:	9f05      	ldrle	r7, [sp, #20]
 800ba56:	434f      	mulle	r7, r1
 800ba58:	9705      	strle	r7, [sp, #20]
 800ba5a:	e7f6      	b.n	800ba4a <_strtod_l+0x252>
 800ba5c:	2c10      	cmp	r4, #16
 800ba5e:	bfdf      	itttt	le
 800ba60:	230a      	movle	r3, #10
 800ba62:	9905      	ldrle	r1, [sp, #20]
 800ba64:	fb03 2301 	mlale	r3, r3, r1, r2
 800ba68:	9305      	strle	r3, [sp, #20]
 800ba6a:	e7e0      	b.n	800ba2e <_strtod_l+0x236>
 800ba6c:	2300      	movs	r3, #0
 800ba6e:	9304      	str	r3, [sp, #16]
 800ba70:	2301      	movs	r3, #1
 800ba72:	e77b      	b.n	800b96c <_strtod_l+0x174>
 800ba74:	2700      	movs	r7, #0
 800ba76:	1cb2      	adds	r2, r6, #2
 800ba78:	9219      	str	r2, [sp, #100]	; 0x64
 800ba7a:	78b2      	ldrb	r2, [r6, #2]
 800ba7c:	e784      	b.n	800b988 <_strtod_l+0x190>
 800ba7e:	bf00      	nop
 800ba80:	080109d0 	.word	0x080109d0
 800ba84:	08010784 	.word	0x08010784
 800ba88:	7ff00000 	.word	0x7ff00000
 800ba8c:	2701      	movs	r7, #1
 800ba8e:	e7f2      	b.n	800ba76 <_strtod_l+0x27e>
 800ba90:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ba92:	1c51      	adds	r1, r2, #1
 800ba94:	9119      	str	r1, [sp, #100]	; 0x64
 800ba96:	7852      	ldrb	r2, [r2, #1]
 800ba98:	2a30      	cmp	r2, #48	; 0x30
 800ba9a:	d0f9      	beq.n	800ba90 <_strtod_l+0x298>
 800ba9c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800baa0:	2908      	cmp	r1, #8
 800baa2:	f63f af77 	bhi.w	800b994 <_strtod_l+0x19c>
 800baa6:	f04f 0e0a 	mov.w	lr, #10
 800baaa:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800baae:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bab0:	9209      	str	r2, [sp, #36]	; 0x24
 800bab2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bab4:	1c51      	adds	r1, r2, #1
 800bab6:	9119      	str	r1, [sp, #100]	; 0x64
 800bab8:	7852      	ldrb	r2, [r2, #1]
 800baba:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800babe:	2d09      	cmp	r5, #9
 800bac0:	d935      	bls.n	800bb2e <_strtod_l+0x336>
 800bac2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800bac4:	1b49      	subs	r1, r1, r5
 800bac6:	2908      	cmp	r1, #8
 800bac8:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800bacc:	dc02      	bgt.n	800bad4 <_strtod_l+0x2dc>
 800bace:	4565      	cmp	r5, ip
 800bad0:	bfa8      	it	ge
 800bad2:	4665      	movge	r5, ip
 800bad4:	b107      	cbz	r7, 800bad8 <_strtod_l+0x2e0>
 800bad6:	426d      	negs	r5, r5
 800bad8:	2c00      	cmp	r4, #0
 800bada:	d14c      	bne.n	800bb76 <_strtod_l+0x37e>
 800badc:	9907      	ldr	r1, [sp, #28]
 800bade:	4301      	orrs	r1, r0
 800bae0:	f47f aecb 	bne.w	800b87a <_strtod_l+0x82>
 800bae4:	2b00      	cmp	r3, #0
 800bae6:	f47f aee4 	bne.w	800b8b2 <_strtod_l+0xba>
 800baea:	2a69      	cmp	r2, #105	; 0x69
 800baec:	d026      	beq.n	800bb3c <_strtod_l+0x344>
 800baee:	dc23      	bgt.n	800bb38 <_strtod_l+0x340>
 800baf0:	2a49      	cmp	r2, #73	; 0x49
 800baf2:	d023      	beq.n	800bb3c <_strtod_l+0x344>
 800baf4:	2a4e      	cmp	r2, #78	; 0x4e
 800baf6:	f47f aedc 	bne.w	800b8b2 <_strtod_l+0xba>
 800bafa:	499d      	ldr	r1, [pc, #628]	; (800bd70 <_strtod_l+0x578>)
 800bafc:	a819      	add	r0, sp, #100	; 0x64
 800bafe:	f001 fe3b 	bl	800d778 <__match>
 800bb02:	2800      	cmp	r0, #0
 800bb04:	f43f aed5 	beq.w	800b8b2 <_strtod_l+0xba>
 800bb08:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bb0a:	781b      	ldrb	r3, [r3, #0]
 800bb0c:	2b28      	cmp	r3, #40	; 0x28
 800bb0e:	d12c      	bne.n	800bb6a <_strtod_l+0x372>
 800bb10:	4998      	ldr	r1, [pc, #608]	; (800bd74 <_strtod_l+0x57c>)
 800bb12:	aa1c      	add	r2, sp, #112	; 0x70
 800bb14:	a819      	add	r0, sp, #100	; 0x64
 800bb16:	f001 fe43 	bl	800d7a0 <__hexnan>
 800bb1a:	2805      	cmp	r0, #5
 800bb1c:	d125      	bne.n	800bb6a <_strtod_l+0x372>
 800bb1e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800bb20:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800bb24:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800bb28:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800bb2c:	e6a5      	b.n	800b87a <_strtod_l+0x82>
 800bb2e:	fb0e 2c0c 	mla	ip, lr, ip, r2
 800bb32:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800bb36:	e7bc      	b.n	800bab2 <_strtod_l+0x2ba>
 800bb38:	2a6e      	cmp	r2, #110	; 0x6e
 800bb3a:	e7dc      	b.n	800baf6 <_strtod_l+0x2fe>
 800bb3c:	498e      	ldr	r1, [pc, #568]	; (800bd78 <_strtod_l+0x580>)
 800bb3e:	a819      	add	r0, sp, #100	; 0x64
 800bb40:	f001 fe1a 	bl	800d778 <__match>
 800bb44:	2800      	cmp	r0, #0
 800bb46:	f43f aeb4 	beq.w	800b8b2 <_strtod_l+0xba>
 800bb4a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bb4c:	498b      	ldr	r1, [pc, #556]	; (800bd7c <_strtod_l+0x584>)
 800bb4e:	3b01      	subs	r3, #1
 800bb50:	a819      	add	r0, sp, #100	; 0x64
 800bb52:	9319      	str	r3, [sp, #100]	; 0x64
 800bb54:	f001 fe10 	bl	800d778 <__match>
 800bb58:	b910      	cbnz	r0, 800bb60 <_strtod_l+0x368>
 800bb5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bb5c:	3301      	adds	r3, #1
 800bb5e:	9319      	str	r3, [sp, #100]	; 0x64
 800bb60:	f04f 0800 	mov.w	r8, #0
 800bb64:	f8df 9218 	ldr.w	r9, [pc, #536]	; 800bd80 <_strtod_l+0x588>
 800bb68:	e687      	b.n	800b87a <_strtod_l+0x82>
 800bb6a:	4886      	ldr	r0, [pc, #536]	; (800bd84 <_strtod_l+0x58c>)
 800bb6c:	f003 f92e 	bl	800edcc <nan>
 800bb70:	4680      	mov	r8, r0
 800bb72:	4689      	mov	r9, r1
 800bb74:	e681      	b.n	800b87a <_strtod_l+0x82>
 800bb76:	9b04      	ldr	r3, [sp, #16]
 800bb78:	f1bb 0f00 	cmp.w	fp, #0
 800bb7c:	bf08      	it	eq
 800bb7e:	46a3      	moveq	fp, r4
 800bb80:	1aeb      	subs	r3, r5, r3
 800bb82:	2c10      	cmp	r4, #16
 800bb84:	9806      	ldr	r0, [sp, #24]
 800bb86:	4626      	mov	r6, r4
 800bb88:	9307      	str	r3, [sp, #28]
 800bb8a:	bfa8      	it	ge
 800bb8c:	2610      	movge	r6, #16
 800bb8e:	f7f4 fc4b 	bl	8000428 <__aeabi_ui2d>
 800bb92:	2c09      	cmp	r4, #9
 800bb94:	4680      	mov	r8, r0
 800bb96:	4689      	mov	r9, r1
 800bb98:	dd13      	ble.n	800bbc2 <_strtod_l+0x3ca>
 800bb9a:	4b7b      	ldr	r3, [pc, #492]	; (800bd88 <_strtod_l+0x590>)
 800bb9c:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800bba0:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800bba4:	f7f4 fcba 	bl	800051c <__aeabi_dmul>
 800bba8:	4680      	mov	r8, r0
 800bbaa:	9805      	ldr	r0, [sp, #20]
 800bbac:	4689      	mov	r9, r1
 800bbae:	f7f4 fc3b 	bl	8000428 <__aeabi_ui2d>
 800bbb2:	4602      	mov	r2, r0
 800bbb4:	460b      	mov	r3, r1
 800bbb6:	4640      	mov	r0, r8
 800bbb8:	4649      	mov	r1, r9
 800bbba:	f7f4 faf9 	bl	80001b0 <__adddf3>
 800bbbe:	4680      	mov	r8, r0
 800bbc0:	4689      	mov	r9, r1
 800bbc2:	2c0f      	cmp	r4, #15
 800bbc4:	dc36      	bgt.n	800bc34 <_strtod_l+0x43c>
 800bbc6:	9b07      	ldr	r3, [sp, #28]
 800bbc8:	2b00      	cmp	r3, #0
 800bbca:	f43f ae56 	beq.w	800b87a <_strtod_l+0x82>
 800bbce:	dd22      	ble.n	800bc16 <_strtod_l+0x41e>
 800bbd0:	2b16      	cmp	r3, #22
 800bbd2:	dc09      	bgt.n	800bbe8 <_strtod_l+0x3f0>
 800bbd4:	496c      	ldr	r1, [pc, #432]	; (800bd88 <_strtod_l+0x590>)
 800bbd6:	4642      	mov	r2, r8
 800bbd8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800bbdc:	464b      	mov	r3, r9
 800bbde:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bbe2:	f7f4 fc9b 	bl	800051c <__aeabi_dmul>
 800bbe6:	e7c3      	b.n	800bb70 <_strtod_l+0x378>
 800bbe8:	9a07      	ldr	r2, [sp, #28]
 800bbea:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800bbee:	4293      	cmp	r3, r2
 800bbf0:	db20      	blt.n	800bc34 <_strtod_l+0x43c>
 800bbf2:	4d65      	ldr	r5, [pc, #404]	; (800bd88 <_strtod_l+0x590>)
 800bbf4:	f1c4 040f 	rsb	r4, r4, #15
 800bbf8:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 800bbfc:	4642      	mov	r2, r8
 800bbfe:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bc02:	464b      	mov	r3, r9
 800bc04:	f7f4 fc8a 	bl	800051c <__aeabi_dmul>
 800bc08:	9b07      	ldr	r3, [sp, #28]
 800bc0a:	1b1c      	subs	r4, r3, r4
 800bc0c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800bc10:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bc14:	e7e5      	b.n	800bbe2 <_strtod_l+0x3ea>
 800bc16:	9b07      	ldr	r3, [sp, #28]
 800bc18:	3316      	adds	r3, #22
 800bc1a:	db0b      	blt.n	800bc34 <_strtod_l+0x43c>
 800bc1c:	9b04      	ldr	r3, [sp, #16]
 800bc1e:	4640      	mov	r0, r8
 800bc20:	1b5d      	subs	r5, r3, r5
 800bc22:	4b59      	ldr	r3, [pc, #356]	; (800bd88 <_strtod_l+0x590>)
 800bc24:	4649      	mov	r1, r9
 800bc26:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800bc2a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bc2e:	f7f4 fd9f 	bl	8000770 <__aeabi_ddiv>
 800bc32:	e79d      	b.n	800bb70 <_strtod_l+0x378>
 800bc34:	9b07      	ldr	r3, [sp, #28]
 800bc36:	1ba6      	subs	r6, r4, r6
 800bc38:	441e      	add	r6, r3
 800bc3a:	2e00      	cmp	r6, #0
 800bc3c:	dd74      	ble.n	800bd28 <_strtod_l+0x530>
 800bc3e:	f016 030f 	ands.w	r3, r6, #15
 800bc42:	d00a      	beq.n	800bc5a <_strtod_l+0x462>
 800bc44:	4950      	ldr	r1, [pc, #320]	; (800bd88 <_strtod_l+0x590>)
 800bc46:	4642      	mov	r2, r8
 800bc48:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800bc4c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bc50:	464b      	mov	r3, r9
 800bc52:	f7f4 fc63 	bl	800051c <__aeabi_dmul>
 800bc56:	4680      	mov	r8, r0
 800bc58:	4689      	mov	r9, r1
 800bc5a:	f036 060f 	bics.w	r6, r6, #15
 800bc5e:	d052      	beq.n	800bd06 <_strtod_l+0x50e>
 800bc60:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800bc64:	dd27      	ble.n	800bcb6 <_strtod_l+0x4be>
 800bc66:	f04f 0b00 	mov.w	fp, #0
 800bc6a:	f8cd b010 	str.w	fp, [sp, #16]
 800bc6e:	f8cd b020 	str.w	fp, [sp, #32]
 800bc72:	f8cd b018 	str.w	fp, [sp, #24]
 800bc76:	2322      	movs	r3, #34	; 0x22
 800bc78:	f04f 0800 	mov.w	r8, #0
 800bc7c:	f8df 9100 	ldr.w	r9, [pc, #256]	; 800bd80 <_strtod_l+0x588>
 800bc80:	f8ca 3000 	str.w	r3, [sl]
 800bc84:	9b08      	ldr	r3, [sp, #32]
 800bc86:	2b00      	cmp	r3, #0
 800bc88:	f43f adf7 	beq.w	800b87a <_strtod_l+0x82>
 800bc8c:	4650      	mov	r0, sl
 800bc8e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bc90:	f001 fea0 	bl	800d9d4 <_Bfree>
 800bc94:	4650      	mov	r0, sl
 800bc96:	9906      	ldr	r1, [sp, #24]
 800bc98:	f001 fe9c 	bl	800d9d4 <_Bfree>
 800bc9c:	4650      	mov	r0, sl
 800bc9e:	9904      	ldr	r1, [sp, #16]
 800bca0:	f001 fe98 	bl	800d9d4 <_Bfree>
 800bca4:	4650      	mov	r0, sl
 800bca6:	9908      	ldr	r1, [sp, #32]
 800bca8:	f001 fe94 	bl	800d9d4 <_Bfree>
 800bcac:	4659      	mov	r1, fp
 800bcae:	4650      	mov	r0, sl
 800bcb0:	f001 fe90 	bl	800d9d4 <_Bfree>
 800bcb4:	e5e1      	b.n	800b87a <_strtod_l+0x82>
 800bcb6:	4b35      	ldr	r3, [pc, #212]	; (800bd8c <_strtod_l+0x594>)
 800bcb8:	4640      	mov	r0, r8
 800bcba:	9305      	str	r3, [sp, #20]
 800bcbc:	2300      	movs	r3, #0
 800bcbe:	4649      	mov	r1, r9
 800bcc0:	461f      	mov	r7, r3
 800bcc2:	1136      	asrs	r6, r6, #4
 800bcc4:	2e01      	cmp	r6, #1
 800bcc6:	dc21      	bgt.n	800bd0c <_strtod_l+0x514>
 800bcc8:	b10b      	cbz	r3, 800bcce <_strtod_l+0x4d6>
 800bcca:	4680      	mov	r8, r0
 800bccc:	4689      	mov	r9, r1
 800bcce:	4b2f      	ldr	r3, [pc, #188]	; (800bd8c <_strtod_l+0x594>)
 800bcd0:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800bcd4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800bcd8:	4642      	mov	r2, r8
 800bcda:	e9d7 0100 	ldrd	r0, r1, [r7]
 800bcde:	464b      	mov	r3, r9
 800bce0:	f7f4 fc1c 	bl	800051c <__aeabi_dmul>
 800bce4:	4b26      	ldr	r3, [pc, #152]	; (800bd80 <_strtod_l+0x588>)
 800bce6:	460a      	mov	r2, r1
 800bce8:	400b      	ands	r3, r1
 800bcea:	4929      	ldr	r1, [pc, #164]	; (800bd90 <_strtod_l+0x598>)
 800bcec:	4680      	mov	r8, r0
 800bcee:	428b      	cmp	r3, r1
 800bcf0:	d8b9      	bhi.n	800bc66 <_strtod_l+0x46e>
 800bcf2:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800bcf6:	428b      	cmp	r3, r1
 800bcf8:	bf86      	itte	hi
 800bcfa:	f04f 38ff 	movhi.w	r8, #4294967295
 800bcfe:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 800bd94 <_strtod_l+0x59c>
 800bd02:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800bd06:	2300      	movs	r3, #0
 800bd08:	9305      	str	r3, [sp, #20]
 800bd0a:	e07f      	b.n	800be0c <_strtod_l+0x614>
 800bd0c:	07f2      	lsls	r2, r6, #31
 800bd0e:	d505      	bpl.n	800bd1c <_strtod_l+0x524>
 800bd10:	9b05      	ldr	r3, [sp, #20]
 800bd12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd16:	f7f4 fc01 	bl	800051c <__aeabi_dmul>
 800bd1a:	2301      	movs	r3, #1
 800bd1c:	9a05      	ldr	r2, [sp, #20]
 800bd1e:	3701      	adds	r7, #1
 800bd20:	3208      	adds	r2, #8
 800bd22:	1076      	asrs	r6, r6, #1
 800bd24:	9205      	str	r2, [sp, #20]
 800bd26:	e7cd      	b.n	800bcc4 <_strtod_l+0x4cc>
 800bd28:	d0ed      	beq.n	800bd06 <_strtod_l+0x50e>
 800bd2a:	4276      	negs	r6, r6
 800bd2c:	f016 020f 	ands.w	r2, r6, #15
 800bd30:	d00a      	beq.n	800bd48 <_strtod_l+0x550>
 800bd32:	4b15      	ldr	r3, [pc, #84]	; (800bd88 <_strtod_l+0x590>)
 800bd34:	4640      	mov	r0, r8
 800bd36:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bd3a:	4649      	mov	r1, r9
 800bd3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd40:	f7f4 fd16 	bl	8000770 <__aeabi_ddiv>
 800bd44:	4680      	mov	r8, r0
 800bd46:	4689      	mov	r9, r1
 800bd48:	1136      	asrs	r6, r6, #4
 800bd4a:	d0dc      	beq.n	800bd06 <_strtod_l+0x50e>
 800bd4c:	2e1f      	cmp	r6, #31
 800bd4e:	dd23      	ble.n	800bd98 <_strtod_l+0x5a0>
 800bd50:	f04f 0b00 	mov.w	fp, #0
 800bd54:	f8cd b010 	str.w	fp, [sp, #16]
 800bd58:	f8cd b020 	str.w	fp, [sp, #32]
 800bd5c:	f8cd b018 	str.w	fp, [sp, #24]
 800bd60:	2322      	movs	r3, #34	; 0x22
 800bd62:	f04f 0800 	mov.w	r8, #0
 800bd66:	f04f 0900 	mov.w	r9, #0
 800bd6a:	f8ca 3000 	str.w	r3, [sl]
 800bd6e:	e789      	b.n	800bc84 <_strtod_l+0x48c>
 800bd70:	08010759 	.word	0x08010759
 800bd74:	08010798 	.word	0x08010798
 800bd78:	08010751 	.word	0x08010751
 800bd7c:	080108dc 	.word	0x080108dc
 800bd80:	7ff00000 	.word	0x7ff00000
 800bd84:	08010ba3 	.word	0x08010ba3
 800bd88:	08010a68 	.word	0x08010a68
 800bd8c:	08010a40 	.word	0x08010a40
 800bd90:	7ca00000 	.word	0x7ca00000
 800bd94:	7fefffff 	.word	0x7fefffff
 800bd98:	f016 0310 	ands.w	r3, r6, #16
 800bd9c:	bf18      	it	ne
 800bd9e:	236a      	movne	r3, #106	; 0x6a
 800bda0:	4640      	mov	r0, r8
 800bda2:	9305      	str	r3, [sp, #20]
 800bda4:	4649      	mov	r1, r9
 800bda6:	2300      	movs	r3, #0
 800bda8:	4fb0      	ldr	r7, [pc, #704]	; (800c06c <_strtod_l+0x874>)
 800bdaa:	07f2      	lsls	r2, r6, #31
 800bdac:	d504      	bpl.n	800bdb8 <_strtod_l+0x5c0>
 800bdae:	e9d7 2300 	ldrd	r2, r3, [r7]
 800bdb2:	f7f4 fbb3 	bl	800051c <__aeabi_dmul>
 800bdb6:	2301      	movs	r3, #1
 800bdb8:	1076      	asrs	r6, r6, #1
 800bdba:	f107 0708 	add.w	r7, r7, #8
 800bdbe:	d1f4      	bne.n	800bdaa <_strtod_l+0x5b2>
 800bdc0:	b10b      	cbz	r3, 800bdc6 <_strtod_l+0x5ce>
 800bdc2:	4680      	mov	r8, r0
 800bdc4:	4689      	mov	r9, r1
 800bdc6:	9b05      	ldr	r3, [sp, #20]
 800bdc8:	b1c3      	cbz	r3, 800bdfc <_strtod_l+0x604>
 800bdca:	f3c9 520a 	ubfx	r2, r9, #20, #11
 800bdce:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800bdd2:	2b00      	cmp	r3, #0
 800bdd4:	4649      	mov	r1, r9
 800bdd6:	dd11      	ble.n	800bdfc <_strtod_l+0x604>
 800bdd8:	2b1f      	cmp	r3, #31
 800bdda:	f340 8127 	ble.w	800c02c <_strtod_l+0x834>
 800bdde:	2b34      	cmp	r3, #52	; 0x34
 800bde0:	bfd8      	it	le
 800bde2:	f04f 33ff 	movle.w	r3, #4294967295
 800bde6:	f04f 0800 	mov.w	r8, #0
 800bdea:	bfcf      	iteee	gt
 800bdec:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800bdf0:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800bdf4:	fa03 f202 	lslle.w	r2, r3, r2
 800bdf8:	ea02 0901 	andle.w	r9, r2, r1
 800bdfc:	2200      	movs	r2, #0
 800bdfe:	2300      	movs	r3, #0
 800be00:	4640      	mov	r0, r8
 800be02:	4649      	mov	r1, r9
 800be04:	f7f4 fdf2 	bl	80009ec <__aeabi_dcmpeq>
 800be08:	2800      	cmp	r0, #0
 800be0a:	d1a1      	bne.n	800bd50 <_strtod_l+0x558>
 800be0c:	9b06      	ldr	r3, [sp, #24]
 800be0e:	465a      	mov	r2, fp
 800be10:	9300      	str	r3, [sp, #0]
 800be12:	4650      	mov	r0, sl
 800be14:	4623      	mov	r3, r4
 800be16:	9908      	ldr	r1, [sp, #32]
 800be18:	f001 fe44 	bl	800daa4 <__s2b>
 800be1c:	9008      	str	r0, [sp, #32]
 800be1e:	2800      	cmp	r0, #0
 800be20:	f43f af21 	beq.w	800bc66 <_strtod_l+0x46e>
 800be24:	9b04      	ldr	r3, [sp, #16]
 800be26:	f04f 0b00 	mov.w	fp, #0
 800be2a:	1b5d      	subs	r5, r3, r5
 800be2c:	9b07      	ldr	r3, [sp, #28]
 800be2e:	f8cd b010 	str.w	fp, [sp, #16]
 800be32:	2b00      	cmp	r3, #0
 800be34:	bfb4      	ite	lt
 800be36:	462b      	movlt	r3, r5
 800be38:	2300      	movge	r3, #0
 800be3a:	930e      	str	r3, [sp, #56]	; 0x38
 800be3c:	9b07      	ldr	r3, [sp, #28]
 800be3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800be42:	9314      	str	r3, [sp, #80]	; 0x50
 800be44:	9b08      	ldr	r3, [sp, #32]
 800be46:	4650      	mov	r0, sl
 800be48:	6859      	ldr	r1, [r3, #4]
 800be4a:	f001 fd83 	bl	800d954 <_Balloc>
 800be4e:	9006      	str	r0, [sp, #24]
 800be50:	2800      	cmp	r0, #0
 800be52:	f43f af10 	beq.w	800bc76 <_strtod_l+0x47e>
 800be56:	9b08      	ldr	r3, [sp, #32]
 800be58:	300c      	adds	r0, #12
 800be5a:	691a      	ldr	r2, [r3, #16]
 800be5c:	f103 010c 	add.w	r1, r3, #12
 800be60:	3202      	adds	r2, #2
 800be62:	0092      	lsls	r2, r2, #2
 800be64:	f7fe fd8e 	bl	800a984 <memcpy>
 800be68:	ab1c      	add	r3, sp, #112	; 0x70
 800be6a:	9301      	str	r3, [sp, #4]
 800be6c:	ab1b      	add	r3, sp, #108	; 0x6c
 800be6e:	9300      	str	r3, [sp, #0]
 800be70:	4642      	mov	r2, r8
 800be72:	464b      	mov	r3, r9
 800be74:	4650      	mov	r0, sl
 800be76:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 800be7a:	f002 f955 	bl	800e128 <__d2b>
 800be7e:	901a      	str	r0, [sp, #104]	; 0x68
 800be80:	2800      	cmp	r0, #0
 800be82:	f43f aef8 	beq.w	800bc76 <_strtod_l+0x47e>
 800be86:	2101      	movs	r1, #1
 800be88:	4650      	mov	r0, sl
 800be8a:	f001 fea3 	bl	800dbd4 <__i2b>
 800be8e:	4603      	mov	r3, r0
 800be90:	9004      	str	r0, [sp, #16]
 800be92:	2800      	cmp	r0, #0
 800be94:	f43f aeef 	beq.w	800bc76 <_strtod_l+0x47e>
 800be98:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800be9a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800be9c:	2d00      	cmp	r5, #0
 800be9e:	bfab      	itete	ge
 800bea0:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 800bea2:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 800bea4:	18ee      	addge	r6, r5, r3
 800bea6:	1b5c      	sublt	r4, r3, r5
 800bea8:	9b05      	ldr	r3, [sp, #20]
 800beaa:	bfa8      	it	ge
 800beac:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 800beae:	eba5 0503 	sub.w	r5, r5, r3
 800beb2:	4415      	add	r5, r2
 800beb4:	4b6e      	ldr	r3, [pc, #440]	; (800c070 <_strtod_l+0x878>)
 800beb6:	f105 35ff 	add.w	r5, r5, #4294967295
 800beba:	bfb8      	it	lt
 800bebc:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800bebe:	429d      	cmp	r5, r3
 800bec0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800bec4:	f280 80c4 	bge.w	800c050 <_strtod_l+0x858>
 800bec8:	1b5b      	subs	r3, r3, r5
 800beca:	2b1f      	cmp	r3, #31
 800becc:	f04f 0701 	mov.w	r7, #1
 800bed0:	eba2 0203 	sub.w	r2, r2, r3
 800bed4:	f300 80b1 	bgt.w	800c03a <_strtod_l+0x842>
 800bed8:	2500      	movs	r5, #0
 800beda:	fa07 f303 	lsl.w	r3, r7, r3
 800bede:	930f      	str	r3, [sp, #60]	; 0x3c
 800bee0:	18b7      	adds	r7, r6, r2
 800bee2:	9b05      	ldr	r3, [sp, #20]
 800bee4:	42be      	cmp	r6, r7
 800bee6:	4414      	add	r4, r2
 800bee8:	441c      	add	r4, r3
 800beea:	4633      	mov	r3, r6
 800beec:	bfa8      	it	ge
 800beee:	463b      	movge	r3, r7
 800bef0:	42a3      	cmp	r3, r4
 800bef2:	bfa8      	it	ge
 800bef4:	4623      	movge	r3, r4
 800bef6:	2b00      	cmp	r3, #0
 800bef8:	bfc2      	ittt	gt
 800befa:	1aff      	subgt	r7, r7, r3
 800befc:	1ae4      	subgt	r4, r4, r3
 800befe:	1af6      	subgt	r6, r6, r3
 800bf00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bf02:	2b00      	cmp	r3, #0
 800bf04:	dd17      	ble.n	800bf36 <_strtod_l+0x73e>
 800bf06:	461a      	mov	r2, r3
 800bf08:	4650      	mov	r0, sl
 800bf0a:	9904      	ldr	r1, [sp, #16]
 800bf0c:	f001 ff20 	bl	800dd50 <__pow5mult>
 800bf10:	9004      	str	r0, [sp, #16]
 800bf12:	2800      	cmp	r0, #0
 800bf14:	f43f aeaf 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf18:	4601      	mov	r1, r0
 800bf1a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800bf1c:	4650      	mov	r0, sl
 800bf1e:	f001 fe6f 	bl	800dc00 <__multiply>
 800bf22:	9009      	str	r0, [sp, #36]	; 0x24
 800bf24:	2800      	cmp	r0, #0
 800bf26:	f43f aea6 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf2a:	4650      	mov	r0, sl
 800bf2c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bf2e:	f001 fd51 	bl	800d9d4 <_Bfree>
 800bf32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf34:	931a      	str	r3, [sp, #104]	; 0x68
 800bf36:	2f00      	cmp	r7, #0
 800bf38:	f300 808e 	bgt.w	800c058 <_strtod_l+0x860>
 800bf3c:	9b07      	ldr	r3, [sp, #28]
 800bf3e:	2b00      	cmp	r3, #0
 800bf40:	dd08      	ble.n	800bf54 <_strtod_l+0x75c>
 800bf42:	4650      	mov	r0, sl
 800bf44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bf46:	9906      	ldr	r1, [sp, #24]
 800bf48:	f001 ff02 	bl	800dd50 <__pow5mult>
 800bf4c:	9006      	str	r0, [sp, #24]
 800bf4e:	2800      	cmp	r0, #0
 800bf50:	f43f ae91 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf54:	2c00      	cmp	r4, #0
 800bf56:	dd08      	ble.n	800bf6a <_strtod_l+0x772>
 800bf58:	4622      	mov	r2, r4
 800bf5a:	4650      	mov	r0, sl
 800bf5c:	9906      	ldr	r1, [sp, #24]
 800bf5e:	f001 ff51 	bl	800de04 <__lshift>
 800bf62:	9006      	str	r0, [sp, #24]
 800bf64:	2800      	cmp	r0, #0
 800bf66:	f43f ae86 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf6a:	2e00      	cmp	r6, #0
 800bf6c:	dd08      	ble.n	800bf80 <_strtod_l+0x788>
 800bf6e:	4632      	mov	r2, r6
 800bf70:	4650      	mov	r0, sl
 800bf72:	9904      	ldr	r1, [sp, #16]
 800bf74:	f001 ff46 	bl	800de04 <__lshift>
 800bf78:	9004      	str	r0, [sp, #16]
 800bf7a:	2800      	cmp	r0, #0
 800bf7c:	f43f ae7b 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf80:	4650      	mov	r0, sl
 800bf82:	9a06      	ldr	r2, [sp, #24]
 800bf84:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bf86:	f001 ffc9 	bl	800df1c <__mdiff>
 800bf8a:	4683      	mov	fp, r0
 800bf8c:	2800      	cmp	r0, #0
 800bf8e:	f43f ae72 	beq.w	800bc76 <_strtod_l+0x47e>
 800bf92:	2400      	movs	r4, #0
 800bf94:	68c3      	ldr	r3, [r0, #12]
 800bf96:	9904      	ldr	r1, [sp, #16]
 800bf98:	60c4      	str	r4, [r0, #12]
 800bf9a:	930b      	str	r3, [sp, #44]	; 0x2c
 800bf9c:	f001 ffa2 	bl	800dee4 <__mcmp>
 800bfa0:	42a0      	cmp	r0, r4
 800bfa2:	da6b      	bge.n	800c07c <_strtod_l+0x884>
 800bfa4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bfa6:	ea53 0308 	orrs.w	r3, r3, r8
 800bfaa:	f040 8091 	bne.w	800c0d0 <_strtod_l+0x8d8>
 800bfae:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800bfb2:	2b00      	cmp	r3, #0
 800bfb4:	f040 808c 	bne.w	800c0d0 <_strtod_l+0x8d8>
 800bfb8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800bfbc:	0d1b      	lsrs	r3, r3, #20
 800bfbe:	051b      	lsls	r3, r3, #20
 800bfc0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800bfc4:	f240 8084 	bls.w	800c0d0 <_strtod_l+0x8d8>
 800bfc8:	f8db 3014 	ldr.w	r3, [fp, #20]
 800bfcc:	b91b      	cbnz	r3, 800bfd6 <_strtod_l+0x7de>
 800bfce:	f8db 3010 	ldr.w	r3, [fp, #16]
 800bfd2:	2b01      	cmp	r3, #1
 800bfd4:	dd7c      	ble.n	800c0d0 <_strtod_l+0x8d8>
 800bfd6:	4659      	mov	r1, fp
 800bfd8:	2201      	movs	r2, #1
 800bfda:	4650      	mov	r0, sl
 800bfdc:	f001 ff12 	bl	800de04 <__lshift>
 800bfe0:	9904      	ldr	r1, [sp, #16]
 800bfe2:	4683      	mov	fp, r0
 800bfe4:	f001 ff7e 	bl	800dee4 <__mcmp>
 800bfe8:	2800      	cmp	r0, #0
 800bfea:	dd71      	ble.n	800c0d0 <_strtod_l+0x8d8>
 800bfec:	9905      	ldr	r1, [sp, #20]
 800bfee:	464b      	mov	r3, r9
 800bff0:	4a20      	ldr	r2, [pc, #128]	; (800c074 <_strtod_l+0x87c>)
 800bff2:	2900      	cmp	r1, #0
 800bff4:	f000 808c 	beq.w	800c110 <_strtod_l+0x918>
 800bff8:	ea02 0109 	and.w	r1, r2, r9
 800bffc:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800c000:	f300 8086 	bgt.w	800c110 <_strtod_l+0x918>
 800c004:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800c008:	f77f aeaa 	ble.w	800bd60 <_strtod_l+0x568>
 800c00c:	4640      	mov	r0, r8
 800c00e:	4649      	mov	r1, r9
 800c010:	4b19      	ldr	r3, [pc, #100]	; (800c078 <_strtod_l+0x880>)
 800c012:	2200      	movs	r2, #0
 800c014:	f7f4 fa82 	bl	800051c <__aeabi_dmul>
 800c018:	460b      	mov	r3, r1
 800c01a:	4303      	orrs	r3, r0
 800c01c:	bf08      	it	eq
 800c01e:	2322      	moveq	r3, #34	; 0x22
 800c020:	4680      	mov	r8, r0
 800c022:	4689      	mov	r9, r1
 800c024:	bf08      	it	eq
 800c026:	f8ca 3000 	streq.w	r3, [sl]
 800c02a:	e62f      	b.n	800bc8c <_strtod_l+0x494>
 800c02c:	f04f 32ff 	mov.w	r2, #4294967295
 800c030:	fa02 f303 	lsl.w	r3, r2, r3
 800c034:	ea03 0808 	and.w	r8, r3, r8
 800c038:	e6e0      	b.n	800bdfc <_strtod_l+0x604>
 800c03a:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800c03e:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800c042:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800c046:	35e2      	adds	r5, #226	; 0xe2
 800c048:	fa07 f505 	lsl.w	r5, r7, r5
 800c04c:	970f      	str	r7, [sp, #60]	; 0x3c
 800c04e:	e747      	b.n	800bee0 <_strtod_l+0x6e8>
 800c050:	2301      	movs	r3, #1
 800c052:	2500      	movs	r5, #0
 800c054:	930f      	str	r3, [sp, #60]	; 0x3c
 800c056:	e743      	b.n	800bee0 <_strtod_l+0x6e8>
 800c058:	463a      	mov	r2, r7
 800c05a:	4650      	mov	r0, sl
 800c05c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c05e:	f001 fed1 	bl	800de04 <__lshift>
 800c062:	901a      	str	r0, [sp, #104]	; 0x68
 800c064:	2800      	cmp	r0, #0
 800c066:	f47f af69 	bne.w	800bf3c <_strtod_l+0x744>
 800c06a:	e604      	b.n	800bc76 <_strtod_l+0x47e>
 800c06c:	080107b0 	.word	0x080107b0
 800c070:	fffffc02 	.word	0xfffffc02
 800c074:	7ff00000 	.word	0x7ff00000
 800c078:	39500000 	.word	0x39500000
 800c07c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800c080:	d165      	bne.n	800c14e <_strtod_l+0x956>
 800c082:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c084:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c088:	b35a      	cbz	r2, 800c0e2 <_strtod_l+0x8ea>
 800c08a:	4a99      	ldr	r2, [pc, #612]	; (800c2f0 <_strtod_l+0xaf8>)
 800c08c:	4293      	cmp	r3, r2
 800c08e:	d12b      	bne.n	800c0e8 <_strtod_l+0x8f0>
 800c090:	9b05      	ldr	r3, [sp, #20]
 800c092:	4641      	mov	r1, r8
 800c094:	b303      	cbz	r3, 800c0d8 <_strtod_l+0x8e0>
 800c096:	464a      	mov	r2, r9
 800c098:	4b96      	ldr	r3, [pc, #600]	; (800c2f4 <_strtod_l+0xafc>)
 800c09a:	4013      	ands	r3, r2
 800c09c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c0a0:	f04f 32ff 	mov.w	r2, #4294967295
 800c0a4:	d81b      	bhi.n	800c0de <_strtod_l+0x8e6>
 800c0a6:	0d1b      	lsrs	r3, r3, #20
 800c0a8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800c0ac:	fa02 f303 	lsl.w	r3, r2, r3
 800c0b0:	4299      	cmp	r1, r3
 800c0b2:	d119      	bne.n	800c0e8 <_strtod_l+0x8f0>
 800c0b4:	4b90      	ldr	r3, [pc, #576]	; (800c2f8 <_strtod_l+0xb00>)
 800c0b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c0b8:	429a      	cmp	r2, r3
 800c0ba:	d102      	bne.n	800c0c2 <_strtod_l+0x8ca>
 800c0bc:	3101      	adds	r1, #1
 800c0be:	f43f adda 	beq.w	800bc76 <_strtod_l+0x47e>
 800c0c2:	f04f 0800 	mov.w	r8, #0
 800c0c6:	4b8b      	ldr	r3, [pc, #556]	; (800c2f4 <_strtod_l+0xafc>)
 800c0c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c0ca:	401a      	ands	r2, r3
 800c0cc:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 800c0d0:	9b05      	ldr	r3, [sp, #20]
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	d19a      	bne.n	800c00c <_strtod_l+0x814>
 800c0d6:	e5d9      	b.n	800bc8c <_strtod_l+0x494>
 800c0d8:	f04f 33ff 	mov.w	r3, #4294967295
 800c0dc:	e7e8      	b.n	800c0b0 <_strtod_l+0x8b8>
 800c0de:	4613      	mov	r3, r2
 800c0e0:	e7e6      	b.n	800c0b0 <_strtod_l+0x8b8>
 800c0e2:	ea53 0308 	orrs.w	r3, r3, r8
 800c0e6:	d081      	beq.n	800bfec <_strtod_l+0x7f4>
 800c0e8:	b1e5      	cbz	r5, 800c124 <_strtod_l+0x92c>
 800c0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c0ec:	421d      	tst	r5, r3
 800c0ee:	d0ef      	beq.n	800c0d0 <_strtod_l+0x8d8>
 800c0f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c0f2:	4640      	mov	r0, r8
 800c0f4:	4649      	mov	r1, r9
 800c0f6:	9a05      	ldr	r2, [sp, #20]
 800c0f8:	b1c3      	cbz	r3, 800c12c <_strtod_l+0x934>
 800c0fa:	f7ff fb5a 	bl	800b7b2 <sulp>
 800c0fe:	4602      	mov	r2, r0
 800c100:	460b      	mov	r3, r1
 800c102:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c106:	f7f4 f853 	bl	80001b0 <__adddf3>
 800c10a:	4680      	mov	r8, r0
 800c10c:	4689      	mov	r9, r1
 800c10e:	e7df      	b.n	800c0d0 <_strtod_l+0x8d8>
 800c110:	4013      	ands	r3, r2
 800c112:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800c116:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800c11a:	f04f 38ff 	mov.w	r8, #4294967295
 800c11e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800c122:	e7d5      	b.n	800c0d0 <_strtod_l+0x8d8>
 800c124:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c126:	ea13 0f08 	tst.w	r3, r8
 800c12a:	e7e0      	b.n	800c0ee <_strtod_l+0x8f6>
 800c12c:	f7ff fb41 	bl	800b7b2 <sulp>
 800c130:	4602      	mov	r2, r0
 800c132:	460b      	mov	r3, r1
 800c134:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c138:	f7f4 f838 	bl	80001ac <__aeabi_dsub>
 800c13c:	2200      	movs	r2, #0
 800c13e:	2300      	movs	r3, #0
 800c140:	4680      	mov	r8, r0
 800c142:	4689      	mov	r9, r1
 800c144:	f7f4 fc52 	bl	80009ec <__aeabi_dcmpeq>
 800c148:	2800      	cmp	r0, #0
 800c14a:	d0c1      	beq.n	800c0d0 <_strtod_l+0x8d8>
 800c14c:	e608      	b.n	800bd60 <_strtod_l+0x568>
 800c14e:	4658      	mov	r0, fp
 800c150:	9904      	ldr	r1, [sp, #16]
 800c152:	f002 f845 	bl	800e1e0 <__ratio>
 800c156:	2200      	movs	r2, #0
 800c158:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c15c:	4606      	mov	r6, r0
 800c15e:	460f      	mov	r7, r1
 800c160:	f7f4 fc58 	bl	8000a14 <__aeabi_dcmple>
 800c164:	2800      	cmp	r0, #0
 800c166:	d070      	beq.n	800c24a <_strtod_l+0xa52>
 800c168:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	d042      	beq.n	800c1f4 <_strtod_l+0x9fc>
 800c16e:	2600      	movs	r6, #0
 800c170:	4f62      	ldr	r7, [pc, #392]	; (800c2fc <_strtod_l+0xb04>)
 800c172:	4d62      	ldr	r5, [pc, #392]	; (800c2fc <_strtod_l+0xb04>)
 800c174:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c176:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800c17a:	0d1b      	lsrs	r3, r3, #20
 800c17c:	051b      	lsls	r3, r3, #20
 800c17e:	930f      	str	r3, [sp, #60]	; 0x3c
 800c180:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c182:	4b5f      	ldr	r3, [pc, #380]	; (800c300 <_strtod_l+0xb08>)
 800c184:	429a      	cmp	r2, r3
 800c186:	f040 80c3 	bne.w	800c310 <_strtod_l+0xb18>
 800c18a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c18c:	4640      	mov	r0, r8
 800c18e:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800c192:	4649      	mov	r1, r9
 800c194:	f001 ff4e 	bl	800e034 <__ulp>
 800c198:	4602      	mov	r2, r0
 800c19a:	460b      	mov	r3, r1
 800c19c:	4630      	mov	r0, r6
 800c19e:	4639      	mov	r1, r7
 800c1a0:	f7f4 f9bc 	bl	800051c <__aeabi_dmul>
 800c1a4:	4642      	mov	r2, r8
 800c1a6:	464b      	mov	r3, r9
 800c1a8:	f7f4 f802 	bl	80001b0 <__adddf3>
 800c1ac:	460b      	mov	r3, r1
 800c1ae:	4951      	ldr	r1, [pc, #324]	; (800c2f4 <_strtod_l+0xafc>)
 800c1b0:	4a54      	ldr	r2, [pc, #336]	; (800c304 <_strtod_l+0xb0c>)
 800c1b2:	4019      	ands	r1, r3
 800c1b4:	4291      	cmp	r1, r2
 800c1b6:	4680      	mov	r8, r0
 800c1b8:	d95d      	bls.n	800c276 <_strtod_l+0xa7e>
 800c1ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c1bc:	4b4e      	ldr	r3, [pc, #312]	; (800c2f8 <_strtod_l+0xb00>)
 800c1be:	429a      	cmp	r2, r3
 800c1c0:	d103      	bne.n	800c1ca <_strtod_l+0x9d2>
 800c1c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c1c4:	3301      	adds	r3, #1
 800c1c6:	f43f ad56 	beq.w	800bc76 <_strtod_l+0x47e>
 800c1ca:	f04f 38ff 	mov.w	r8, #4294967295
 800c1ce:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800c2f8 <_strtod_l+0xb00>
 800c1d2:	4650      	mov	r0, sl
 800c1d4:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c1d6:	f001 fbfd 	bl	800d9d4 <_Bfree>
 800c1da:	4650      	mov	r0, sl
 800c1dc:	9906      	ldr	r1, [sp, #24]
 800c1de:	f001 fbf9 	bl	800d9d4 <_Bfree>
 800c1e2:	4650      	mov	r0, sl
 800c1e4:	9904      	ldr	r1, [sp, #16]
 800c1e6:	f001 fbf5 	bl	800d9d4 <_Bfree>
 800c1ea:	4659      	mov	r1, fp
 800c1ec:	4650      	mov	r0, sl
 800c1ee:	f001 fbf1 	bl	800d9d4 <_Bfree>
 800c1f2:	e627      	b.n	800be44 <_strtod_l+0x64c>
 800c1f4:	f1b8 0f00 	cmp.w	r8, #0
 800c1f8:	d119      	bne.n	800c22e <_strtod_l+0xa36>
 800c1fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c200:	b9e3      	cbnz	r3, 800c23c <_strtod_l+0xa44>
 800c202:	2200      	movs	r2, #0
 800c204:	4630      	mov	r0, r6
 800c206:	4639      	mov	r1, r7
 800c208:	4b3c      	ldr	r3, [pc, #240]	; (800c2fc <_strtod_l+0xb04>)
 800c20a:	f7f4 fbf9 	bl	8000a00 <__aeabi_dcmplt>
 800c20e:	b9c8      	cbnz	r0, 800c244 <_strtod_l+0xa4c>
 800c210:	2200      	movs	r2, #0
 800c212:	4630      	mov	r0, r6
 800c214:	4639      	mov	r1, r7
 800c216:	4b3c      	ldr	r3, [pc, #240]	; (800c308 <_strtod_l+0xb10>)
 800c218:	f7f4 f980 	bl	800051c <__aeabi_dmul>
 800c21c:	4604      	mov	r4, r0
 800c21e:	460d      	mov	r5, r1
 800c220:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800c224:	9416      	str	r4, [sp, #88]	; 0x58
 800c226:	9317      	str	r3, [sp, #92]	; 0x5c
 800c228:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800c22c:	e7a2      	b.n	800c174 <_strtod_l+0x97c>
 800c22e:	f1b8 0f01 	cmp.w	r8, #1
 800c232:	d103      	bne.n	800c23c <_strtod_l+0xa44>
 800c234:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c236:	2b00      	cmp	r3, #0
 800c238:	f43f ad92 	beq.w	800bd60 <_strtod_l+0x568>
 800c23c:	2600      	movs	r6, #0
 800c23e:	2400      	movs	r4, #0
 800c240:	4f32      	ldr	r7, [pc, #200]	; (800c30c <_strtod_l+0xb14>)
 800c242:	e796      	b.n	800c172 <_strtod_l+0x97a>
 800c244:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c246:	4d30      	ldr	r5, [pc, #192]	; (800c308 <_strtod_l+0xb10>)
 800c248:	e7ea      	b.n	800c220 <_strtod_l+0xa28>
 800c24a:	4b2f      	ldr	r3, [pc, #188]	; (800c308 <_strtod_l+0xb10>)
 800c24c:	2200      	movs	r2, #0
 800c24e:	4630      	mov	r0, r6
 800c250:	4639      	mov	r1, r7
 800c252:	f7f4 f963 	bl	800051c <__aeabi_dmul>
 800c256:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c258:	4604      	mov	r4, r0
 800c25a:	460d      	mov	r5, r1
 800c25c:	b933      	cbnz	r3, 800c26c <_strtod_l+0xa74>
 800c25e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c262:	9010      	str	r0, [sp, #64]	; 0x40
 800c264:	9311      	str	r3, [sp, #68]	; 0x44
 800c266:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800c26a:	e783      	b.n	800c174 <_strtod_l+0x97c>
 800c26c:	4602      	mov	r2, r0
 800c26e:	460b      	mov	r3, r1
 800c270:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800c274:	e7f7      	b.n	800c266 <_strtod_l+0xa6e>
 800c276:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800c27a:	9b05      	ldr	r3, [sp, #20]
 800c27c:	2b00      	cmp	r3, #0
 800c27e:	d1a8      	bne.n	800c1d2 <_strtod_l+0x9da>
 800c280:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c284:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c286:	0d1b      	lsrs	r3, r3, #20
 800c288:	051b      	lsls	r3, r3, #20
 800c28a:	429a      	cmp	r2, r3
 800c28c:	d1a1      	bne.n	800c1d2 <_strtod_l+0x9da>
 800c28e:	4620      	mov	r0, r4
 800c290:	4629      	mov	r1, r5
 800c292:	f7f4 ff97 	bl	80011c4 <__aeabi_d2lz>
 800c296:	f7f4 f913 	bl	80004c0 <__aeabi_l2d>
 800c29a:	4602      	mov	r2, r0
 800c29c:	460b      	mov	r3, r1
 800c29e:	4620      	mov	r0, r4
 800c2a0:	4629      	mov	r1, r5
 800c2a2:	f7f3 ff83 	bl	80001ac <__aeabi_dsub>
 800c2a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c2a8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c2ac:	ea43 0308 	orr.w	r3, r3, r8
 800c2b0:	4313      	orrs	r3, r2
 800c2b2:	4604      	mov	r4, r0
 800c2b4:	460d      	mov	r5, r1
 800c2b6:	d066      	beq.n	800c386 <_strtod_l+0xb8e>
 800c2b8:	a309      	add	r3, pc, #36	; (adr r3, 800c2e0 <_strtod_l+0xae8>)
 800c2ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2be:	f7f4 fb9f 	bl	8000a00 <__aeabi_dcmplt>
 800c2c2:	2800      	cmp	r0, #0
 800c2c4:	f47f ace2 	bne.w	800bc8c <_strtod_l+0x494>
 800c2c8:	a307      	add	r3, pc, #28	; (adr r3, 800c2e8 <_strtod_l+0xaf0>)
 800c2ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c2ce:	4620      	mov	r0, r4
 800c2d0:	4629      	mov	r1, r5
 800c2d2:	f7f4 fbb3 	bl	8000a3c <__aeabi_dcmpgt>
 800c2d6:	2800      	cmp	r0, #0
 800c2d8:	f43f af7b 	beq.w	800c1d2 <_strtod_l+0x9da>
 800c2dc:	e4d6      	b.n	800bc8c <_strtod_l+0x494>
 800c2de:	bf00      	nop
 800c2e0:	94a03595 	.word	0x94a03595
 800c2e4:	3fdfffff 	.word	0x3fdfffff
 800c2e8:	35afe535 	.word	0x35afe535
 800c2ec:	3fe00000 	.word	0x3fe00000
 800c2f0:	000fffff 	.word	0x000fffff
 800c2f4:	7ff00000 	.word	0x7ff00000
 800c2f8:	7fefffff 	.word	0x7fefffff
 800c2fc:	3ff00000 	.word	0x3ff00000
 800c300:	7fe00000 	.word	0x7fe00000
 800c304:	7c9fffff 	.word	0x7c9fffff
 800c308:	3fe00000 	.word	0x3fe00000
 800c30c:	bff00000 	.word	0xbff00000
 800c310:	9b05      	ldr	r3, [sp, #20]
 800c312:	b313      	cbz	r3, 800c35a <_strtod_l+0xb62>
 800c314:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c316:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c31a:	d81e      	bhi.n	800c35a <_strtod_l+0xb62>
 800c31c:	a326      	add	r3, pc, #152	; (adr r3, 800c3b8 <_strtod_l+0xbc0>)
 800c31e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c322:	4620      	mov	r0, r4
 800c324:	4629      	mov	r1, r5
 800c326:	f7f4 fb75 	bl	8000a14 <__aeabi_dcmple>
 800c32a:	b190      	cbz	r0, 800c352 <_strtod_l+0xb5a>
 800c32c:	4629      	mov	r1, r5
 800c32e:	4620      	mov	r0, r4
 800c330:	f7f4 fbcc 	bl	8000acc <__aeabi_d2uiz>
 800c334:	2801      	cmp	r0, #1
 800c336:	bf38      	it	cc
 800c338:	2001      	movcc	r0, #1
 800c33a:	f7f4 f875 	bl	8000428 <__aeabi_ui2d>
 800c33e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c340:	4604      	mov	r4, r0
 800c342:	460d      	mov	r5, r1
 800c344:	b9d3      	cbnz	r3, 800c37c <_strtod_l+0xb84>
 800c346:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c34a:	9012      	str	r0, [sp, #72]	; 0x48
 800c34c:	9313      	str	r3, [sp, #76]	; 0x4c
 800c34e:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800c352:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c354:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 800c358:	1a9f      	subs	r7, r3, r2
 800c35a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c35e:	f001 fe69 	bl	800e034 <__ulp>
 800c362:	4602      	mov	r2, r0
 800c364:	460b      	mov	r3, r1
 800c366:	4630      	mov	r0, r6
 800c368:	4639      	mov	r1, r7
 800c36a:	f7f4 f8d7 	bl	800051c <__aeabi_dmul>
 800c36e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800c372:	f7f3 ff1d 	bl	80001b0 <__adddf3>
 800c376:	4680      	mov	r8, r0
 800c378:	4689      	mov	r9, r1
 800c37a:	e77e      	b.n	800c27a <_strtod_l+0xa82>
 800c37c:	4602      	mov	r2, r0
 800c37e:	460b      	mov	r3, r1
 800c380:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800c384:	e7e3      	b.n	800c34e <_strtod_l+0xb56>
 800c386:	a30e      	add	r3, pc, #56	; (adr r3, 800c3c0 <_strtod_l+0xbc8>)
 800c388:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c38c:	f7f4 fb38 	bl	8000a00 <__aeabi_dcmplt>
 800c390:	e7a1      	b.n	800c2d6 <_strtod_l+0xade>
 800c392:	2300      	movs	r3, #0
 800c394:	930a      	str	r3, [sp, #40]	; 0x28
 800c396:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c398:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800c39a:	6013      	str	r3, [r2, #0]
 800c39c:	f7ff ba71 	b.w	800b882 <_strtod_l+0x8a>
 800c3a0:	2a65      	cmp	r2, #101	; 0x65
 800c3a2:	f43f ab63 	beq.w	800ba6c <_strtod_l+0x274>
 800c3a6:	2a45      	cmp	r2, #69	; 0x45
 800c3a8:	f43f ab60 	beq.w	800ba6c <_strtod_l+0x274>
 800c3ac:	2301      	movs	r3, #1
 800c3ae:	f7ff bb95 	b.w	800badc <_strtod_l+0x2e4>
 800c3b2:	bf00      	nop
 800c3b4:	f3af 8000 	nop.w
 800c3b8:	ffc00000 	.word	0xffc00000
 800c3bc:	41dfffff 	.word	0x41dfffff
 800c3c0:	94a03595 	.word	0x94a03595
 800c3c4:	3fcfffff 	.word	0x3fcfffff

0800c3c8 <_strtod_r>:
 800c3c8:	4b01      	ldr	r3, [pc, #4]	; (800c3d0 <_strtod_r+0x8>)
 800c3ca:	f7ff ba15 	b.w	800b7f8 <_strtod_l>
 800c3ce:	bf00      	nop
 800c3d0:	20000208 	.word	0x20000208

0800c3d4 <_strtol_l.constprop.0>:
 800c3d4:	2b01      	cmp	r3, #1
 800c3d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c3da:	4680      	mov	r8, r0
 800c3dc:	d001      	beq.n	800c3e2 <_strtol_l.constprop.0+0xe>
 800c3de:	2b24      	cmp	r3, #36	; 0x24
 800c3e0:	d906      	bls.n	800c3f0 <_strtol_l.constprop.0+0x1c>
 800c3e2:	f7fe faa5 	bl	800a930 <__errno>
 800c3e6:	2316      	movs	r3, #22
 800c3e8:	6003      	str	r3, [r0, #0]
 800c3ea:	2000      	movs	r0, #0
 800c3ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c3f0:	460d      	mov	r5, r1
 800c3f2:	4f35      	ldr	r7, [pc, #212]	; (800c4c8 <_strtol_l.constprop.0+0xf4>)
 800c3f4:	4628      	mov	r0, r5
 800c3f6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c3fa:	5de6      	ldrb	r6, [r4, r7]
 800c3fc:	f016 0608 	ands.w	r6, r6, #8
 800c400:	d1f8      	bne.n	800c3f4 <_strtol_l.constprop.0+0x20>
 800c402:	2c2d      	cmp	r4, #45	; 0x2d
 800c404:	d12f      	bne.n	800c466 <_strtol_l.constprop.0+0x92>
 800c406:	2601      	movs	r6, #1
 800c408:	782c      	ldrb	r4, [r5, #0]
 800c40a:	1c85      	adds	r5, r0, #2
 800c40c:	2b00      	cmp	r3, #0
 800c40e:	d057      	beq.n	800c4c0 <_strtol_l.constprop.0+0xec>
 800c410:	2b10      	cmp	r3, #16
 800c412:	d109      	bne.n	800c428 <_strtol_l.constprop.0+0x54>
 800c414:	2c30      	cmp	r4, #48	; 0x30
 800c416:	d107      	bne.n	800c428 <_strtol_l.constprop.0+0x54>
 800c418:	7828      	ldrb	r0, [r5, #0]
 800c41a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800c41e:	2858      	cmp	r0, #88	; 0x58
 800c420:	d149      	bne.n	800c4b6 <_strtol_l.constprop.0+0xe2>
 800c422:	2310      	movs	r3, #16
 800c424:	786c      	ldrb	r4, [r5, #1]
 800c426:	3502      	adds	r5, #2
 800c428:	2700      	movs	r7, #0
 800c42a:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800c42e:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c432:	fbbe f9f3 	udiv	r9, lr, r3
 800c436:	4638      	mov	r0, r7
 800c438:	fb03 ea19 	mls	sl, r3, r9, lr
 800c43c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800c440:	f1bc 0f09 	cmp.w	ip, #9
 800c444:	d814      	bhi.n	800c470 <_strtol_l.constprop.0+0x9c>
 800c446:	4664      	mov	r4, ip
 800c448:	42a3      	cmp	r3, r4
 800c44a:	dd22      	ble.n	800c492 <_strtol_l.constprop.0+0xbe>
 800c44c:	2f00      	cmp	r7, #0
 800c44e:	db1d      	blt.n	800c48c <_strtol_l.constprop.0+0xb8>
 800c450:	4581      	cmp	r9, r0
 800c452:	d31b      	bcc.n	800c48c <_strtol_l.constprop.0+0xb8>
 800c454:	d101      	bne.n	800c45a <_strtol_l.constprop.0+0x86>
 800c456:	45a2      	cmp	sl, r4
 800c458:	db18      	blt.n	800c48c <_strtol_l.constprop.0+0xb8>
 800c45a:	2701      	movs	r7, #1
 800c45c:	fb00 4003 	mla	r0, r0, r3, r4
 800c460:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c464:	e7ea      	b.n	800c43c <_strtol_l.constprop.0+0x68>
 800c466:	2c2b      	cmp	r4, #43	; 0x2b
 800c468:	bf04      	itt	eq
 800c46a:	782c      	ldrbeq	r4, [r5, #0]
 800c46c:	1c85      	addeq	r5, r0, #2
 800c46e:	e7cd      	b.n	800c40c <_strtol_l.constprop.0+0x38>
 800c470:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800c474:	f1bc 0f19 	cmp.w	ip, #25
 800c478:	d801      	bhi.n	800c47e <_strtol_l.constprop.0+0xaa>
 800c47a:	3c37      	subs	r4, #55	; 0x37
 800c47c:	e7e4      	b.n	800c448 <_strtol_l.constprop.0+0x74>
 800c47e:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800c482:	f1bc 0f19 	cmp.w	ip, #25
 800c486:	d804      	bhi.n	800c492 <_strtol_l.constprop.0+0xbe>
 800c488:	3c57      	subs	r4, #87	; 0x57
 800c48a:	e7dd      	b.n	800c448 <_strtol_l.constprop.0+0x74>
 800c48c:	f04f 37ff 	mov.w	r7, #4294967295
 800c490:	e7e6      	b.n	800c460 <_strtol_l.constprop.0+0x8c>
 800c492:	2f00      	cmp	r7, #0
 800c494:	da07      	bge.n	800c4a6 <_strtol_l.constprop.0+0xd2>
 800c496:	2322      	movs	r3, #34	; 0x22
 800c498:	4670      	mov	r0, lr
 800c49a:	f8c8 3000 	str.w	r3, [r8]
 800c49e:	2a00      	cmp	r2, #0
 800c4a0:	d0a4      	beq.n	800c3ec <_strtol_l.constprop.0+0x18>
 800c4a2:	1e69      	subs	r1, r5, #1
 800c4a4:	e005      	b.n	800c4b2 <_strtol_l.constprop.0+0xde>
 800c4a6:	b106      	cbz	r6, 800c4aa <_strtol_l.constprop.0+0xd6>
 800c4a8:	4240      	negs	r0, r0
 800c4aa:	2a00      	cmp	r2, #0
 800c4ac:	d09e      	beq.n	800c3ec <_strtol_l.constprop.0+0x18>
 800c4ae:	2f00      	cmp	r7, #0
 800c4b0:	d1f7      	bne.n	800c4a2 <_strtol_l.constprop.0+0xce>
 800c4b2:	6011      	str	r1, [r2, #0]
 800c4b4:	e79a      	b.n	800c3ec <_strtol_l.constprop.0+0x18>
 800c4b6:	2430      	movs	r4, #48	; 0x30
 800c4b8:	2b00      	cmp	r3, #0
 800c4ba:	d1b5      	bne.n	800c428 <_strtol_l.constprop.0+0x54>
 800c4bc:	2308      	movs	r3, #8
 800c4be:	e7b3      	b.n	800c428 <_strtol_l.constprop.0+0x54>
 800c4c0:	2c30      	cmp	r4, #48	; 0x30
 800c4c2:	d0a9      	beq.n	800c418 <_strtol_l.constprop.0+0x44>
 800c4c4:	230a      	movs	r3, #10
 800c4c6:	e7af      	b.n	800c428 <_strtol_l.constprop.0+0x54>
 800c4c8:	080107d9 	.word	0x080107d9

0800c4cc <_strtol_r>:
 800c4cc:	f7ff bf82 	b.w	800c3d4 <_strtol_l.constprop.0>

0800c4d0 <_write_r>:
 800c4d0:	b538      	push	{r3, r4, r5, lr}
 800c4d2:	4604      	mov	r4, r0
 800c4d4:	4608      	mov	r0, r1
 800c4d6:	4611      	mov	r1, r2
 800c4d8:	2200      	movs	r2, #0
 800c4da:	4d05      	ldr	r5, [pc, #20]	; (800c4f0 <_write_r+0x20>)
 800c4dc:	602a      	str	r2, [r5, #0]
 800c4de:	461a      	mov	r2, r3
 800c4e0:	f7f8 fce4 	bl	8004eac <_write>
 800c4e4:	1c43      	adds	r3, r0, #1
 800c4e6:	d102      	bne.n	800c4ee <_write_r+0x1e>
 800c4e8:	682b      	ldr	r3, [r5, #0]
 800c4ea:	b103      	cbz	r3, 800c4ee <_write_r+0x1e>
 800c4ec:	6023      	str	r3, [r4, #0]
 800c4ee:	bd38      	pop	{r3, r4, r5, pc}
 800c4f0:	20001438 	.word	0x20001438

0800c4f4 <_close_r>:
 800c4f4:	b538      	push	{r3, r4, r5, lr}
 800c4f6:	2300      	movs	r3, #0
 800c4f8:	4d05      	ldr	r5, [pc, #20]	; (800c510 <_close_r+0x1c>)
 800c4fa:	4604      	mov	r4, r0
 800c4fc:	4608      	mov	r0, r1
 800c4fe:	602b      	str	r3, [r5, #0]
 800c500:	f7f8 fcf0 	bl	8004ee4 <_close>
 800c504:	1c43      	adds	r3, r0, #1
 800c506:	d102      	bne.n	800c50e <_close_r+0x1a>
 800c508:	682b      	ldr	r3, [r5, #0]
 800c50a:	b103      	cbz	r3, 800c50e <_close_r+0x1a>
 800c50c:	6023      	str	r3, [r4, #0]
 800c50e:	bd38      	pop	{r3, r4, r5, pc}
 800c510:	20001438 	.word	0x20001438

0800c514 <quorem>:
 800c514:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c518:	6903      	ldr	r3, [r0, #16]
 800c51a:	690c      	ldr	r4, [r1, #16]
 800c51c:	4607      	mov	r7, r0
 800c51e:	42a3      	cmp	r3, r4
 800c520:	f2c0 8082 	blt.w	800c628 <quorem+0x114>
 800c524:	3c01      	subs	r4, #1
 800c526:	f100 0514 	add.w	r5, r0, #20
 800c52a:	f101 0814 	add.w	r8, r1, #20
 800c52e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c532:	9301      	str	r3, [sp, #4]
 800c534:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800c538:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c53c:	3301      	adds	r3, #1
 800c53e:	429a      	cmp	r2, r3
 800c540:	fbb2 f6f3 	udiv	r6, r2, r3
 800c544:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800c548:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800c54c:	d331      	bcc.n	800c5b2 <quorem+0x9e>
 800c54e:	f04f 0e00 	mov.w	lr, #0
 800c552:	4640      	mov	r0, r8
 800c554:	46ac      	mov	ip, r5
 800c556:	46f2      	mov	sl, lr
 800c558:	f850 2b04 	ldr.w	r2, [r0], #4
 800c55c:	b293      	uxth	r3, r2
 800c55e:	fb06 e303 	mla	r3, r6, r3, lr
 800c562:	0c12      	lsrs	r2, r2, #16
 800c564:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800c568:	b29b      	uxth	r3, r3
 800c56a:	fb06 e202 	mla	r2, r6, r2, lr
 800c56e:	ebaa 0303 	sub.w	r3, sl, r3
 800c572:	f8dc a000 	ldr.w	sl, [ip]
 800c576:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800c57a:	fa1f fa8a 	uxth.w	sl, sl
 800c57e:	4453      	add	r3, sl
 800c580:	f8dc a000 	ldr.w	sl, [ip]
 800c584:	b292      	uxth	r2, r2
 800c586:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800c58a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c58e:	b29b      	uxth	r3, r3
 800c590:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c594:	4581      	cmp	r9, r0
 800c596:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800c59a:	f84c 3b04 	str.w	r3, [ip], #4
 800c59e:	d2db      	bcs.n	800c558 <quorem+0x44>
 800c5a0:	f855 300b 	ldr.w	r3, [r5, fp]
 800c5a4:	b92b      	cbnz	r3, 800c5b2 <quorem+0x9e>
 800c5a6:	9b01      	ldr	r3, [sp, #4]
 800c5a8:	3b04      	subs	r3, #4
 800c5aa:	429d      	cmp	r5, r3
 800c5ac:	461a      	mov	r2, r3
 800c5ae:	d32f      	bcc.n	800c610 <quorem+0xfc>
 800c5b0:	613c      	str	r4, [r7, #16]
 800c5b2:	4638      	mov	r0, r7
 800c5b4:	f001 fc96 	bl	800dee4 <__mcmp>
 800c5b8:	2800      	cmp	r0, #0
 800c5ba:	db25      	blt.n	800c608 <quorem+0xf4>
 800c5bc:	4628      	mov	r0, r5
 800c5be:	f04f 0c00 	mov.w	ip, #0
 800c5c2:	3601      	adds	r6, #1
 800c5c4:	f858 1b04 	ldr.w	r1, [r8], #4
 800c5c8:	f8d0 e000 	ldr.w	lr, [r0]
 800c5cc:	b28b      	uxth	r3, r1
 800c5ce:	ebac 0303 	sub.w	r3, ip, r3
 800c5d2:	fa1f f28e 	uxth.w	r2, lr
 800c5d6:	4413      	add	r3, r2
 800c5d8:	0c0a      	lsrs	r2, r1, #16
 800c5da:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800c5de:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c5e2:	b29b      	uxth	r3, r3
 800c5e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c5e8:	45c1      	cmp	r9, r8
 800c5ea:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800c5ee:	f840 3b04 	str.w	r3, [r0], #4
 800c5f2:	d2e7      	bcs.n	800c5c4 <quorem+0xb0>
 800c5f4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c5f8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c5fc:	b922      	cbnz	r2, 800c608 <quorem+0xf4>
 800c5fe:	3b04      	subs	r3, #4
 800c600:	429d      	cmp	r5, r3
 800c602:	461a      	mov	r2, r3
 800c604:	d30a      	bcc.n	800c61c <quorem+0x108>
 800c606:	613c      	str	r4, [r7, #16]
 800c608:	4630      	mov	r0, r6
 800c60a:	b003      	add	sp, #12
 800c60c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c610:	6812      	ldr	r2, [r2, #0]
 800c612:	3b04      	subs	r3, #4
 800c614:	2a00      	cmp	r2, #0
 800c616:	d1cb      	bne.n	800c5b0 <quorem+0x9c>
 800c618:	3c01      	subs	r4, #1
 800c61a:	e7c6      	b.n	800c5aa <quorem+0x96>
 800c61c:	6812      	ldr	r2, [r2, #0]
 800c61e:	3b04      	subs	r3, #4
 800c620:	2a00      	cmp	r2, #0
 800c622:	d1f0      	bne.n	800c606 <quorem+0xf2>
 800c624:	3c01      	subs	r4, #1
 800c626:	e7eb      	b.n	800c600 <quorem+0xec>
 800c628:	2000      	movs	r0, #0
 800c62a:	e7ee      	b.n	800c60a <quorem+0xf6>
 800c62c:	0000      	movs	r0, r0
	...

0800c630 <_dtoa_r>:
 800c630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c634:	4616      	mov	r6, r2
 800c636:	461f      	mov	r7, r3
 800c638:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800c63a:	b099      	sub	sp, #100	; 0x64
 800c63c:	4605      	mov	r5, r0
 800c63e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800c642:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800c646:	b974      	cbnz	r4, 800c666 <_dtoa_r+0x36>
 800c648:	2010      	movs	r0, #16
 800c64a:	f001 f95b 	bl	800d904 <malloc>
 800c64e:	4602      	mov	r2, r0
 800c650:	6268      	str	r0, [r5, #36]	; 0x24
 800c652:	b920      	cbnz	r0, 800c65e <_dtoa_r+0x2e>
 800c654:	21ea      	movs	r1, #234	; 0xea
 800c656:	4ba8      	ldr	r3, [pc, #672]	; (800c8f8 <_dtoa_r+0x2c8>)
 800c658:	48a8      	ldr	r0, [pc, #672]	; (800c8fc <_dtoa_r+0x2cc>)
 800c65a:	f002 fcd3 	bl	800f004 <__assert_func>
 800c65e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c662:	6004      	str	r4, [r0, #0]
 800c664:	60c4      	str	r4, [r0, #12]
 800c666:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c668:	6819      	ldr	r1, [r3, #0]
 800c66a:	b151      	cbz	r1, 800c682 <_dtoa_r+0x52>
 800c66c:	685a      	ldr	r2, [r3, #4]
 800c66e:	2301      	movs	r3, #1
 800c670:	4093      	lsls	r3, r2
 800c672:	604a      	str	r2, [r1, #4]
 800c674:	608b      	str	r3, [r1, #8]
 800c676:	4628      	mov	r0, r5
 800c678:	f001 f9ac 	bl	800d9d4 <_Bfree>
 800c67c:	2200      	movs	r2, #0
 800c67e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c680:	601a      	str	r2, [r3, #0]
 800c682:	1e3b      	subs	r3, r7, #0
 800c684:	bfaf      	iteee	ge
 800c686:	2300      	movge	r3, #0
 800c688:	2201      	movlt	r2, #1
 800c68a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800c68e:	9305      	strlt	r3, [sp, #20]
 800c690:	bfa8      	it	ge
 800c692:	f8c8 3000 	strge.w	r3, [r8]
 800c696:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c69a:	4b99      	ldr	r3, [pc, #612]	; (800c900 <_dtoa_r+0x2d0>)
 800c69c:	bfb8      	it	lt
 800c69e:	f8c8 2000 	strlt.w	r2, [r8]
 800c6a2:	ea33 0309 	bics.w	r3, r3, r9
 800c6a6:	d119      	bne.n	800c6dc <_dtoa_r+0xac>
 800c6a8:	f242 730f 	movw	r3, #9999	; 0x270f
 800c6ac:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c6ae:	6013      	str	r3, [r2, #0]
 800c6b0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c6b4:	4333      	orrs	r3, r6
 800c6b6:	f000 857f 	beq.w	800d1b8 <_dtoa_r+0xb88>
 800c6ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800c6bc:	b953      	cbnz	r3, 800c6d4 <_dtoa_r+0xa4>
 800c6be:	4b91      	ldr	r3, [pc, #580]	; (800c904 <_dtoa_r+0x2d4>)
 800c6c0:	e022      	b.n	800c708 <_dtoa_r+0xd8>
 800c6c2:	4b91      	ldr	r3, [pc, #580]	; (800c908 <_dtoa_r+0x2d8>)
 800c6c4:	9303      	str	r3, [sp, #12]
 800c6c6:	3308      	adds	r3, #8
 800c6c8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800c6ca:	6013      	str	r3, [r2, #0]
 800c6cc:	9803      	ldr	r0, [sp, #12]
 800c6ce:	b019      	add	sp, #100	; 0x64
 800c6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6d4:	4b8b      	ldr	r3, [pc, #556]	; (800c904 <_dtoa_r+0x2d4>)
 800c6d6:	9303      	str	r3, [sp, #12]
 800c6d8:	3303      	adds	r3, #3
 800c6da:	e7f5      	b.n	800c6c8 <_dtoa_r+0x98>
 800c6dc:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800c6e0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800c6e4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c6e8:	2200      	movs	r2, #0
 800c6ea:	2300      	movs	r3, #0
 800c6ec:	f7f4 f97e 	bl	80009ec <__aeabi_dcmpeq>
 800c6f0:	4680      	mov	r8, r0
 800c6f2:	b158      	cbz	r0, 800c70c <_dtoa_r+0xdc>
 800c6f4:	2301      	movs	r3, #1
 800c6f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c6f8:	6013      	str	r3, [r2, #0]
 800c6fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800c6fc:	2b00      	cmp	r3, #0
 800c6fe:	f000 8558 	beq.w	800d1b2 <_dtoa_r+0xb82>
 800c702:	4882      	ldr	r0, [pc, #520]	; (800c90c <_dtoa_r+0x2dc>)
 800c704:	6018      	str	r0, [r3, #0]
 800c706:	1e43      	subs	r3, r0, #1
 800c708:	9303      	str	r3, [sp, #12]
 800c70a:	e7df      	b.n	800c6cc <_dtoa_r+0x9c>
 800c70c:	ab16      	add	r3, sp, #88	; 0x58
 800c70e:	9301      	str	r3, [sp, #4]
 800c710:	ab17      	add	r3, sp, #92	; 0x5c
 800c712:	9300      	str	r3, [sp, #0]
 800c714:	4628      	mov	r0, r5
 800c716:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800c71a:	f001 fd05 	bl	800e128 <__d2b>
 800c71e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800c722:	4683      	mov	fp, r0
 800c724:	2c00      	cmp	r4, #0
 800c726:	d07f      	beq.n	800c828 <_dtoa_r+0x1f8>
 800c728:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c72c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c72e:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800c732:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c736:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800c73a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800c73e:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800c742:	2200      	movs	r2, #0
 800c744:	4b72      	ldr	r3, [pc, #456]	; (800c910 <_dtoa_r+0x2e0>)
 800c746:	f7f3 fd31 	bl	80001ac <__aeabi_dsub>
 800c74a:	a365      	add	r3, pc, #404	; (adr r3, 800c8e0 <_dtoa_r+0x2b0>)
 800c74c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c750:	f7f3 fee4 	bl	800051c <__aeabi_dmul>
 800c754:	a364      	add	r3, pc, #400	; (adr r3, 800c8e8 <_dtoa_r+0x2b8>)
 800c756:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c75a:	f7f3 fd29 	bl	80001b0 <__adddf3>
 800c75e:	4606      	mov	r6, r0
 800c760:	4620      	mov	r0, r4
 800c762:	460f      	mov	r7, r1
 800c764:	f7f3 fe70 	bl	8000448 <__aeabi_i2d>
 800c768:	a361      	add	r3, pc, #388	; (adr r3, 800c8f0 <_dtoa_r+0x2c0>)
 800c76a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c76e:	f7f3 fed5 	bl	800051c <__aeabi_dmul>
 800c772:	4602      	mov	r2, r0
 800c774:	460b      	mov	r3, r1
 800c776:	4630      	mov	r0, r6
 800c778:	4639      	mov	r1, r7
 800c77a:	f7f3 fd19 	bl	80001b0 <__adddf3>
 800c77e:	4606      	mov	r6, r0
 800c780:	460f      	mov	r7, r1
 800c782:	f7f4 f97b 	bl	8000a7c <__aeabi_d2iz>
 800c786:	2200      	movs	r2, #0
 800c788:	4682      	mov	sl, r0
 800c78a:	2300      	movs	r3, #0
 800c78c:	4630      	mov	r0, r6
 800c78e:	4639      	mov	r1, r7
 800c790:	f7f4 f936 	bl	8000a00 <__aeabi_dcmplt>
 800c794:	b148      	cbz	r0, 800c7aa <_dtoa_r+0x17a>
 800c796:	4650      	mov	r0, sl
 800c798:	f7f3 fe56 	bl	8000448 <__aeabi_i2d>
 800c79c:	4632      	mov	r2, r6
 800c79e:	463b      	mov	r3, r7
 800c7a0:	f7f4 f924 	bl	80009ec <__aeabi_dcmpeq>
 800c7a4:	b908      	cbnz	r0, 800c7aa <_dtoa_r+0x17a>
 800c7a6:	f10a 3aff 	add.w	sl, sl, #4294967295
 800c7aa:	f1ba 0f16 	cmp.w	sl, #22
 800c7ae:	d858      	bhi.n	800c862 <_dtoa_r+0x232>
 800c7b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c7b4:	4b57      	ldr	r3, [pc, #348]	; (800c914 <_dtoa_r+0x2e4>)
 800c7b6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800c7ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7be:	f7f4 f91f 	bl	8000a00 <__aeabi_dcmplt>
 800c7c2:	2800      	cmp	r0, #0
 800c7c4:	d04f      	beq.n	800c866 <_dtoa_r+0x236>
 800c7c6:	2300      	movs	r3, #0
 800c7c8:	f10a 3aff 	add.w	sl, sl, #4294967295
 800c7cc:	930f      	str	r3, [sp, #60]	; 0x3c
 800c7ce:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800c7d0:	1b1c      	subs	r4, r3, r4
 800c7d2:	1e63      	subs	r3, r4, #1
 800c7d4:	9309      	str	r3, [sp, #36]	; 0x24
 800c7d6:	bf49      	itett	mi
 800c7d8:	f1c4 0301 	rsbmi	r3, r4, #1
 800c7dc:	2300      	movpl	r3, #0
 800c7de:	9306      	strmi	r3, [sp, #24]
 800c7e0:	2300      	movmi	r3, #0
 800c7e2:	bf54      	ite	pl
 800c7e4:	9306      	strpl	r3, [sp, #24]
 800c7e6:	9309      	strmi	r3, [sp, #36]	; 0x24
 800c7e8:	f1ba 0f00 	cmp.w	sl, #0
 800c7ec:	db3d      	blt.n	800c86a <_dtoa_r+0x23a>
 800c7ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c7f0:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800c7f4:	4453      	add	r3, sl
 800c7f6:	9309      	str	r3, [sp, #36]	; 0x24
 800c7f8:	2300      	movs	r3, #0
 800c7fa:	930a      	str	r3, [sp, #40]	; 0x28
 800c7fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800c7fe:	2b09      	cmp	r3, #9
 800c800:	f200 808c 	bhi.w	800c91c <_dtoa_r+0x2ec>
 800c804:	2b05      	cmp	r3, #5
 800c806:	bfc4      	itt	gt
 800c808:	3b04      	subgt	r3, #4
 800c80a:	9322      	strgt	r3, [sp, #136]	; 0x88
 800c80c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800c80e:	bfc8      	it	gt
 800c810:	2400      	movgt	r4, #0
 800c812:	f1a3 0302 	sub.w	r3, r3, #2
 800c816:	bfd8      	it	le
 800c818:	2401      	movle	r4, #1
 800c81a:	2b03      	cmp	r3, #3
 800c81c:	f200 808a 	bhi.w	800c934 <_dtoa_r+0x304>
 800c820:	e8df f003 	tbb	[pc, r3]
 800c824:	5b4d4f2d 	.word	0x5b4d4f2d
 800c828:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800c82c:	441c      	add	r4, r3
 800c82e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800c832:	2b20      	cmp	r3, #32
 800c834:	bfc3      	ittte	gt
 800c836:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800c83a:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800c83e:	fa09 f303 	lslgt.w	r3, r9, r3
 800c842:	f1c3 0320 	rsble	r3, r3, #32
 800c846:	bfc6      	itte	gt
 800c848:	fa26 f000 	lsrgt.w	r0, r6, r0
 800c84c:	4318      	orrgt	r0, r3
 800c84e:	fa06 f003 	lslle.w	r0, r6, r3
 800c852:	f7f3 fde9 	bl	8000428 <__aeabi_ui2d>
 800c856:	2301      	movs	r3, #1
 800c858:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800c85c:	3c01      	subs	r4, #1
 800c85e:	9313      	str	r3, [sp, #76]	; 0x4c
 800c860:	e76f      	b.n	800c742 <_dtoa_r+0x112>
 800c862:	2301      	movs	r3, #1
 800c864:	e7b2      	b.n	800c7cc <_dtoa_r+0x19c>
 800c866:	900f      	str	r0, [sp, #60]	; 0x3c
 800c868:	e7b1      	b.n	800c7ce <_dtoa_r+0x19e>
 800c86a:	9b06      	ldr	r3, [sp, #24]
 800c86c:	eba3 030a 	sub.w	r3, r3, sl
 800c870:	9306      	str	r3, [sp, #24]
 800c872:	f1ca 0300 	rsb	r3, sl, #0
 800c876:	930a      	str	r3, [sp, #40]	; 0x28
 800c878:	2300      	movs	r3, #0
 800c87a:	930e      	str	r3, [sp, #56]	; 0x38
 800c87c:	e7be      	b.n	800c7fc <_dtoa_r+0x1cc>
 800c87e:	2300      	movs	r3, #0
 800c880:	930b      	str	r3, [sp, #44]	; 0x2c
 800c882:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c884:	2b00      	cmp	r3, #0
 800c886:	dc58      	bgt.n	800c93a <_dtoa_r+0x30a>
 800c888:	f04f 0901 	mov.w	r9, #1
 800c88c:	464b      	mov	r3, r9
 800c88e:	f8cd 9020 	str.w	r9, [sp, #32]
 800c892:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800c896:	2200      	movs	r2, #0
 800c898:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800c89a:	6042      	str	r2, [r0, #4]
 800c89c:	2204      	movs	r2, #4
 800c89e:	f102 0614 	add.w	r6, r2, #20
 800c8a2:	429e      	cmp	r6, r3
 800c8a4:	6841      	ldr	r1, [r0, #4]
 800c8a6:	d94e      	bls.n	800c946 <_dtoa_r+0x316>
 800c8a8:	4628      	mov	r0, r5
 800c8aa:	f001 f853 	bl	800d954 <_Balloc>
 800c8ae:	9003      	str	r0, [sp, #12]
 800c8b0:	2800      	cmp	r0, #0
 800c8b2:	d14c      	bne.n	800c94e <_dtoa_r+0x31e>
 800c8b4:	4602      	mov	r2, r0
 800c8b6:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800c8ba:	4b17      	ldr	r3, [pc, #92]	; (800c918 <_dtoa_r+0x2e8>)
 800c8bc:	e6cc      	b.n	800c658 <_dtoa_r+0x28>
 800c8be:	2301      	movs	r3, #1
 800c8c0:	e7de      	b.n	800c880 <_dtoa_r+0x250>
 800c8c2:	2300      	movs	r3, #0
 800c8c4:	930b      	str	r3, [sp, #44]	; 0x2c
 800c8c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c8c8:	eb0a 0903 	add.w	r9, sl, r3
 800c8cc:	f109 0301 	add.w	r3, r9, #1
 800c8d0:	2b01      	cmp	r3, #1
 800c8d2:	9308      	str	r3, [sp, #32]
 800c8d4:	bfb8      	it	lt
 800c8d6:	2301      	movlt	r3, #1
 800c8d8:	e7dd      	b.n	800c896 <_dtoa_r+0x266>
 800c8da:	2301      	movs	r3, #1
 800c8dc:	e7f2      	b.n	800c8c4 <_dtoa_r+0x294>
 800c8de:	bf00      	nop
 800c8e0:	636f4361 	.word	0x636f4361
 800c8e4:	3fd287a7 	.word	0x3fd287a7
 800c8e8:	8b60c8b3 	.word	0x8b60c8b3
 800c8ec:	3fc68a28 	.word	0x3fc68a28
 800c8f0:	509f79fb 	.word	0x509f79fb
 800c8f4:	3fd34413 	.word	0x3fd34413
 800c8f8:	080108e6 	.word	0x080108e6
 800c8fc:	080108fd 	.word	0x080108fd
 800c900:	7ff00000 	.word	0x7ff00000
 800c904:	080108e2 	.word	0x080108e2
 800c908:	080108d9 	.word	0x080108d9
 800c90c:	08010b52 	.word	0x08010b52
 800c910:	3ff80000 	.word	0x3ff80000
 800c914:	08010a68 	.word	0x08010a68
 800c918:	08010958 	.word	0x08010958
 800c91c:	2401      	movs	r4, #1
 800c91e:	2300      	movs	r3, #0
 800c920:	940b      	str	r4, [sp, #44]	; 0x2c
 800c922:	9322      	str	r3, [sp, #136]	; 0x88
 800c924:	f04f 39ff 	mov.w	r9, #4294967295
 800c928:	2200      	movs	r2, #0
 800c92a:	2312      	movs	r3, #18
 800c92c:	f8cd 9020 	str.w	r9, [sp, #32]
 800c930:	9223      	str	r2, [sp, #140]	; 0x8c
 800c932:	e7b0      	b.n	800c896 <_dtoa_r+0x266>
 800c934:	2301      	movs	r3, #1
 800c936:	930b      	str	r3, [sp, #44]	; 0x2c
 800c938:	e7f4      	b.n	800c924 <_dtoa_r+0x2f4>
 800c93a:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 800c93e:	464b      	mov	r3, r9
 800c940:	f8cd 9020 	str.w	r9, [sp, #32]
 800c944:	e7a7      	b.n	800c896 <_dtoa_r+0x266>
 800c946:	3101      	adds	r1, #1
 800c948:	6041      	str	r1, [r0, #4]
 800c94a:	0052      	lsls	r2, r2, #1
 800c94c:	e7a7      	b.n	800c89e <_dtoa_r+0x26e>
 800c94e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c950:	9a03      	ldr	r2, [sp, #12]
 800c952:	601a      	str	r2, [r3, #0]
 800c954:	9b08      	ldr	r3, [sp, #32]
 800c956:	2b0e      	cmp	r3, #14
 800c958:	f200 80a8 	bhi.w	800caac <_dtoa_r+0x47c>
 800c95c:	2c00      	cmp	r4, #0
 800c95e:	f000 80a5 	beq.w	800caac <_dtoa_r+0x47c>
 800c962:	f1ba 0f00 	cmp.w	sl, #0
 800c966:	dd34      	ble.n	800c9d2 <_dtoa_r+0x3a2>
 800c968:	4a9a      	ldr	r2, [pc, #616]	; (800cbd4 <_dtoa_r+0x5a4>)
 800c96a:	f00a 030f 	and.w	r3, sl, #15
 800c96e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800c972:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800c976:	e9d3 3400 	ldrd	r3, r4, [r3]
 800c97a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800c97e:	ea4f 142a 	mov.w	r4, sl, asr #4
 800c982:	d016      	beq.n	800c9b2 <_dtoa_r+0x382>
 800c984:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c988:	4b93      	ldr	r3, [pc, #588]	; (800cbd8 <_dtoa_r+0x5a8>)
 800c98a:	2703      	movs	r7, #3
 800c98c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800c990:	f7f3 feee 	bl	8000770 <__aeabi_ddiv>
 800c994:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c998:	f004 040f 	and.w	r4, r4, #15
 800c99c:	4e8e      	ldr	r6, [pc, #568]	; (800cbd8 <_dtoa_r+0x5a8>)
 800c99e:	b954      	cbnz	r4, 800c9b6 <_dtoa_r+0x386>
 800c9a0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800c9a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c9a8:	f7f3 fee2 	bl	8000770 <__aeabi_ddiv>
 800c9ac:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c9b0:	e029      	b.n	800ca06 <_dtoa_r+0x3d6>
 800c9b2:	2702      	movs	r7, #2
 800c9b4:	e7f2      	b.n	800c99c <_dtoa_r+0x36c>
 800c9b6:	07e1      	lsls	r1, r4, #31
 800c9b8:	d508      	bpl.n	800c9cc <_dtoa_r+0x39c>
 800c9ba:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800c9be:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c9c2:	f7f3 fdab 	bl	800051c <__aeabi_dmul>
 800c9c6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800c9ca:	3701      	adds	r7, #1
 800c9cc:	1064      	asrs	r4, r4, #1
 800c9ce:	3608      	adds	r6, #8
 800c9d0:	e7e5      	b.n	800c99e <_dtoa_r+0x36e>
 800c9d2:	f000 80a5 	beq.w	800cb20 <_dtoa_r+0x4f0>
 800c9d6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c9da:	f1ca 0400 	rsb	r4, sl, #0
 800c9de:	4b7d      	ldr	r3, [pc, #500]	; (800cbd4 <_dtoa_r+0x5a4>)
 800c9e0:	f004 020f 	and.w	r2, r4, #15
 800c9e4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c9e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c9ec:	f7f3 fd96 	bl	800051c <__aeabi_dmul>
 800c9f0:	2702      	movs	r7, #2
 800c9f2:	2300      	movs	r3, #0
 800c9f4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c9f8:	4e77      	ldr	r6, [pc, #476]	; (800cbd8 <_dtoa_r+0x5a8>)
 800c9fa:	1124      	asrs	r4, r4, #4
 800c9fc:	2c00      	cmp	r4, #0
 800c9fe:	f040 8084 	bne.w	800cb0a <_dtoa_r+0x4da>
 800ca02:	2b00      	cmp	r3, #0
 800ca04:	d1d2      	bne.n	800c9ac <_dtoa_r+0x37c>
 800ca06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ca08:	2b00      	cmp	r3, #0
 800ca0a:	f000 808b 	beq.w	800cb24 <_dtoa_r+0x4f4>
 800ca0e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800ca12:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800ca16:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ca1a:	2200      	movs	r2, #0
 800ca1c:	4b6f      	ldr	r3, [pc, #444]	; (800cbdc <_dtoa_r+0x5ac>)
 800ca1e:	f7f3 ffef 	bl	8000a00 <__aeabi_dcmplt>
 800ca22:	2800      	cmp	r0, #0
 800ca24:	d07e      	beq.n	800cb24 <_dtoa_r+0x4f4>
 800ca26:	9b08      	ldr	r3, [sp, #32]
 800ca28:	2b00      	cmp	r3, #0
 800ca2a:	d07b      	beq.n	800cb24 <_dtoa_r+0x4f4>
 800ca2c:	f1b9 0f00 	cmp.w	r9, #0
 800ca30:	dd38      	ble.n	800caa4 <_dtoa_r+0x474>
 800ca32:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ca36:	2200      	movs	r2, #0
 800ca38:	4b69      	ldr	r3, [pc, #420]	; (800cbe0 <_dtoa_r+0x5b0>)
 800ca3a:	f7f3 fd6f 	bl	800051c <__aeabi_dmul>
 800ca3e:	464c      	mov	r4, r9
 800ca40:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800ca44:	f10a 38ff 	add.w	r8, sl, #4294967295
 800ca48:	3701      	adds	r7, #1
 800ca4a:	4638      	mov	r0, r7
 800ca4c:	f7f3 fcfc 	bl	8000448 <__aeabi_i2d>
 800ca50:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ca54:	f7f3 fd62 	bl	800051c <__aeabi_dmul>
 800ca58:	2200      	movs	r2, #0
 800ca5a:	4b62      	ldr	r3, [pc, #392]	; (800cbe4 <_dtoa_r+0x5b4>)
 800ca5c:	f7f3 fba8 	bl	80001b0 <__adddf3>
 800ca60:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800ca64:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800ca68:	9611      	str	r6, [sp, #68]	; 0x44
 800ca6a:	2c00      	cmp	r4, #0
 800ca6c:	d15d      	bne.n	800cb2a <_dtoa_r+0x4fa>
 800ca6e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ca72:	2200      	movs	r2, #0
 800ca74:	4b5c      	ldr	r3, [pc, #368]	; (800cbe8 <_dtoa_r+0x5b8>)
 800ca76:	f7f3 fb99 	bl	80001ac <__aeabi_dsub>
 800ca7a:	4602      	mov	r2, r0
 800ca7c:	460b      	mov	r3, r1
 800ca7e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800ca82:	4633      	mov	r3, r6
 800ca84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ca86:	f7f3 ffd9 	bl	8000a3c <__aeabi_dcmpgt>
 800ca8a:	2800      	cmp	r0, #0
 800ca8c:	f040 829c 	bne.w	800cfc8 <_dtoa_r+0x998>
 800ca90:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ca94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ca96:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800ca9a:	f7f3 ffb1 	bl	8000a00 <__aeabi_dcmplt>
 800ca9e:	2800      	cmp	r0, #0
 800caa0:	f040 8290 	bne.w	800cfc4 <_dtoa_r+0x994>
 800caa4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800caa8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800caac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800caae:	2b00      	cmp	r3, #0
 800cab0:	f2c0 8152 	blt.w	800cd58 <_dtoa_r+0x728>
 800cab4:	f1ba 0f0e 	cmp.w	sl, #14
 800cab8:	f300 814e 	bgt.w	800cd58 <_dtoa_r+0x728>
 800cabc:	4b45      	ldr	r3, [pc, #276]	; (800cbd4 <_dtoa_r+0x5a4>)
 800cabe:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800cac2:	e9d3 3400 	ldrd	r3, r4, [r3]
 800cac6:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800caca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cacc:	2b00      	cmp	r3, #0
 800cace:	f280 80db 	bge.w	800cc88 <_dtoa_r+0x658>
 800cad2:	9b08      	ldr	r3, [sp, #32]
 800cad4:	2b00      	cmp	r3, #0
 800cad6:	f300 80d7 	bgt.w	800cc88 <_dtoa_r+0x658>
 800cada:	f040 8272 	bne.w	800cfc2 <_dtoa_r+0x992>
 800cade:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800cae2:	2200      	movs	r2, #0
 800cae4:	4b40      	ldr	r3, [pc, #256]	; (800cbe8 <_dtoa_r+0x5b8>)
 800cae6:	f7f3 fd19 	bl	800051c <__aeabi_dmul>
 800caea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800caee:	f7f3 ff9b 	bl	8000a28 <__aeabi_dcmpge>
 800caf2:	9c08      	ldr	r4, [sp, #32]
 800caf4:	4626      	mov	r6, r4
 800caf6:	2800      	cmp	r0, #0
 800caf8:	f040 8248 	bne.w	800cf8c <_dtoa_r+0x95c>
 800cafc:	2331      	movs	r3, #49	; 0x31
 800cafe:	9f03      	ldr	r7, [sp, #12]
 800cb00:	f10a 0a01 	add.w	sl, sl, #1
 800cb04:	f807 3b01 	strb.w	r3, [r7], #1
 800cb08:	e244      	b.n	800cf94 <_dtoa_r+0x964>
 800cb0a:	07e2      	lsls	r2, r4, #31
 800cb0c:	d505      	bpl.n	800cb1a <_dtoa_r+0x4ea>
 800cb0e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800cb12:	f7f3 fd03 	bl	800051c <__aeabi_dmul>
 800cb16:	2301      	movs	r3, #1
 800cb18:	3701      	adds	r7, #1
 800cb1a:	1064      	asrs	r4, r4, #1
 800cb1c:	3608      	adds	r6, #8
 800cb1e:	e76d      	b.n	800c9fc <_dtoa_r+0x3cc>
 800cb20:	2702      	movs	r7, #2
 800cb22:	e770      	b.n	800ca06 <_dtoa_r+0x3d6>
 800cb24:	46d0      	mov	r8, sl
 800cb26:	9c08      	ldr	r4, [sp, #32]
 800cb28:	e78f      	b.n	800ca4a <_dtoa_r+0x41a>
 800cb2a:	9903      	ldr	r1, [sp, #12]
 800cb2c:	4b29      	ldr	r3, [pc, #164]	; (800cbd4 <_dtoa_r+0x5a4>)
 800cb2e:	4421      	add	r1, r4
 800cb30:	9112      	str	r1, [sp, #72]	; 0x48
 800cb32:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800cb34:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800cb38:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800cb3c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800cb40:	2900      	cmp	r1, #0
 800cb42:	d055      	beq.n	800cbf0 <_dtoa_r+0x5c0>
 800cb44:	2000      	movs	r0, #0
 800cb46:	4929      	ldr	r1, [pc, #164]	; (800cbec <_dtoa_r+0x5bc>)
 800cb48:	f7f3 fe12 	bl	8000770 <__aeabi_ddiv>
 800cb4c:	463b      	mov	r3, r7
 800cb4e:	4632      	mov	r2, r6
 800cb50:	f7f3 fb2c 	bl	80001ac <__aeabi_dsub>
 800cb54:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cb58:	9f03      	ldr	r7, [sp, #12]
 800cb5a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb5e:	f7f3 ff8d 	bl	8000a7c <__aeabi_d2iz>
 800cb62:	4604      	mov	r4, r0
 800cb64:	f7f3 fc70 	bl	8000448 <__aeabi_i2d>
 800cb68:	4602      	mov	r2, r0
 800cb6a:	460b      	mov	r3, r1
 800cb6c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb70:	f7f3 fb1c 	bl	80001ac <__aeabi_dsub>
 800cb74:	4602      	mov	r2, r0
 800cb76:	460b      	mov	r3, r1
 800cb78:	3430      	adds	r4, #48	; 0x30
 800cb7a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cb7e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cb82:	f807 4b01 	strb.w	r4, [r7], #1
 800cb86:	f7f3 ff3b 	bl	8000a00 <__aeabi_dcmplt>
 800cb8a:	2800      	cmp	r0, #0
 800cb8c:	d174      	bne.n	800cc78 <_dtoa_r+0x648>
 800cb8e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cb92:	2000      	movs	r0, #0
 800cb94:	4911      	ldr	r1, [pc, #68]	; (800cbdc <_dtoa_r+0x5ac>)
 800cb96:	f7f3 fb09 	bl	80001ac <__aeabi_dsub>
 800cb9a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cb9e:	f7f3 ff2f 	bl	8000a00 <__aeabi_dcmplt>
 800cba2:	2800      	cmp	r0, #0
 800cba4:	f040 80b7 	bne.w	800cd16 <_dtoa_r+0x6e6>
 800cba8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cbaa:	429f      	cmp	r7, r3
 800cbac:	f43f af7a 	beq.w	800caa4 <_dtoa_r+0x474>
 800cbb0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cbb4:	2200      	movs	r2, #0
 800cbb6:	4b0a      	ldr	r3, [pc, #40]	; (800cbe0 <_dtoa_r+0x5b0>)
 800cbb8:	f7f3 fcb0 	bl	800051c <__aeabi_dmul>
 800cbbc:	2200      	movs	r2, #0
 800cbbe:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cbc2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cbc6:	4b06      	ldr	r3, [pc, #24]	; (800cbe0 <_dtoa_r+0x5b0>)
 800cbc8:	f7f3 fca8 	bl	800051c <__aeabi_dmul>
 800cbcc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cbd0:	e7c3      	b.n	800cb5a <_dtoa_r+0x52a>
 800cbd2:	bf00      	nop
 800cbd4:	08010a68 	.word	0x08010a68
 800cbd8:	08010a40 	.word	0x08010a40
 800cbdc:	3ff00000 	.word	0x3ff00000
 800cbe0:	40240000 	.word	0x40240000
 800cbe4:	401c0000 	.word	0x401c0000
 800cbe8:	40140000 	.word	0x40140000
 800cbec:	3fe00000 	.word	0x3fe00000
 800cbf0:	4630      	mov	r0, r6
 800cbf2:	4639      	mov	r1, r7
 800cbf4:	f7f3 fc92 	bl	800051c <__aeabi_dmul>
 800cbf8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cbfa:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cbfe:	9c03      	ldr	r4, [sp, #12]
 800cc00:	9314      	str	r3, [sp, #80]	; 0x50
 800cc02:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc06:	f7f3 ff39 	bl	8000a7c <__aeabi_d2iz>
 800cc0a:	9015      	str	r0, [sp, #84]	; 0x54
 800cc0c:	f7f3 fc1c 	bl	8000448 <__aeabi_i2d>
 800cc10:	4602      	mov	r2, r0
 800cc12:	460b      	mov	r3, r1
 800cc14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc18:	f7f3 fac8 	bl	80001ac <__aeabi_dsub>
 800cc1c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cc1e:	4606      	mov	r6, r0
 800cc20:	3330      	adds	r3, #48	; 0x30
 800cc22:	f804 3b01 	strb.w	r3, [r4], #1
 800cc26:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cc28:	460f      	mov	r7, r1
 800cc2a:	429c      	cmp	r4, r3
 800cc2c:	f04f 0200 	mov.w	r2, #0
 800cc30:	d124      	bne.n	800cc7c <_dtoa_r+0x64c>
 800cc32:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cc36:	4bb0      	ldr	r3, [pc, #704]	; (800cef8 <_dtoa_r+0x8c8>)
 800cc38:	f7f3 faba 	bl	80001b0 <__adddf3>
 800cc3c:	4602      	mov	r2, r0
 800cc3e:	460b      	mov	r3, r1
 800cc40:	4630      	mov	r0, r6
 800cc42:	4639      	mov	r1, r7
 800cc44:	f7f3 fefa 	bl	8000a3c <__aeabi_dcmpgt>
 800cc48:	2800      	cmp	r0, #0
 800cc4a:	d163      	bne.n	800cd14 <_dtoa_r+0x6e4>
 800cc4c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cc50:	2000      	movs	r0, #0
 800cc52:	49a9      	ldr	r1, [pc, #676]	; (800cef8 <_dtoa_r+0x8c8>)
 800cc54:	f7f3 faaa 	bl	80001ac <__aeabi_dsub>
 800cc58:	4602      	mov	r2, r0
 800cc5a:	460b      	mov	r3, r1
 800cc5c:	4630      	mov	r0, r6
 800cc5e:	4639      	mov	r1, r7
 800cc60:	f7f3 fece 	bl	8000a00 <__aeabi_dcmplt>
 800cc64:	2800      	cmp	r0, #0
 800cc66:	f43f af1d 	beq.w	800caa4 <_dtoa_r+0x474>
 800cc6a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800cc6c:	1e7b      	subs	r3, r7, #1
 800cc6e:	9314      	str	r3, [sp, #80]	; 0x50
 800cc70:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800cc74:	2b30      	cmp	r3, #48	; 0x30
 800cc76:	d0f8      	beq.n	800cc6a <_dtoa_r+0x63a>
 800cc78:	46c2      	mov	sl, r8
 800cc7a:	e03b      	b.n	800ccf4 <_dtoa_r+0x6c4>
 800cc7c:	4b9f      	ldr	r3, [pc, #636]	; (800cefc <_dtoa_r+0x8cc>)
 800cc7e:	f7f3 fc4d 	bl	800051c <__aeabi_dmul>
 800cc82:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cc86:	e7bc      	b.n	800cc02 <_dtoa_r+0x5d2>
 800cc88:	9f03      	ldr	r7, [sp, #12]
 800cc8a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800cc8e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cc92:	4640      	mov	r0, r8
 800cc94:	4649      	mov	r1, r9
 800cc96:	f7f3 fd6b 	bl	8000770 <__aeabi_ddiv>
 800cc9a:	f7f3 feef 	bl	8000a7c <__aeabi_d2iz>
 800cc9e:	4604      	mov	r4, r0
 800cca0:	f7f3 fbd2 	bl	8000448 <__aeabi_i2d>
 800cca4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cca8:	f7f3 fc38 	bl	800051c <__aeabi_dmul>
 800ccac:	4602      	mov	r2, r0
 800ccae:	460b      	mov	r3, r1
 800ccb0:	4640      	mov	r0, r8
 800ccb2:	4649      	mov	r1, r9
 800ccb4:	f7f3 fa7a 	bl	80001ac <__aeabi_dsub>
 800ccb8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800ccbc:	f807 6b01 	strb.w	r6, [r7], #1
 800ccc0:	9e03      	ldr	r6, [sp, #12]
 800ccc2:	f8dd c020 	ldr.w	ip, [sp, #32]
 800ccc6:	1bbe      	subs	r6, r7, r6
 800ccc8:	45b4      	cmp	ip, r6
 800ccca:	4602      	mov	r2, r0
 800cccc:	460b      	mov	r3, r1
 800ccce:	d136      	bne.n	800cd3e <_dtoa_r+0x70e>
 800ccd0:	f7f3 fa6e 	bl	80001b0 <__adddf3>
 800ccd4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ccd8:	4680      	mov	r8, r0
 800ccda:	4689      	mov	r9, r1
 800ccdc:	f7f3 feae 	bl	8000a3c <__aeabi_dcmpgt>
 800cce0:	bb58      	cbnz	r0, 800cd3a <_dtoa_r+0x70a>
 800cce2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cce6:	4640      	mov	r0, r8
 800cce8:	4649      	mov	r1, r9
 800ccea:	f7f3 fe7f 	bl	80009ec <__aeabi_dcmpeq>
 800ccee:	b108      	cbz	r0, 800ccf4 <_dtoa_r+0x6c4>
 800ccf0:	07e1      	lsls	r1, r4, #31
 800ccf2:	d422      	bmi.n	800cd3a <_dtoa_r+0x70a>
 800ccf4:	4628      	mov	r0, r5
 800ccf6:	4659      	mov	r1, fp
 800ccf8:	f000 fe6c 	bl	800d9d4 <_Bfree>
 800ccfc:	2300      	movs	r3, #0
 800ccfe:	703b      	strb	r3, [r7, #0]
 800cd00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800cd02:	f10a 0001 	add.w	r0, sl, #1
 800cd06:	6018      	str	r0, [r3, #0]
 800cd08:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800cd0a:	2b00      	cmp	r3, #0
 800cd0c:	f43f acde 	beq.w	800c6cc <_dtoa_r+0x9c>
 800cd10:	601f      	str	r7, [r3, #0]
 800cd12:	e4db      	b.n	800c6cc <_dtoa_r+0x9c>
 800cd14:	4627      	mov	r7, r4
 800cd16:	463b      	mov	r3, r7
 800cd18:	461f      	mov	r7, r3
 800cd1a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800cd1e:	2a39      	cmp	r2, #57	; 0x39
 800cd20:	d107      	bne.n	800cd32 <_dtoa_r+0x702>
 800cd22:	9a03      	ldr	r2, [sp, #12]
 800cd24:	429a      	cmp	r2, r3
 800cd26:	d1f7      	bne.n	800cd18 <_dtoa_r+0x6e8>
 800cd28:	2230      	movs	r2, #48	; 0x30
 800cd2a:	9903      	ldr	r1, [sp, #12]
 800cd2c:	f108 0801 	add.w	r8, r8, #1
 800cd30:	700a      	strb	r2, [r1, #0]
 800cd32:	781a      	ldrb	r2, [r3, #0]
 800cd34:	3201      	adds	r2, #1
 800cd36:	701a      	strb	r2, [r3, #0]
 800cd38:	e79e      	b.n	800cc78 <_dtoa_r+0x648>
 800cd3a:	46d0      	mov	r8, sl
 800cd3c:	e7eb      	b.n	800cd16 <_dtoa_r+0x6e6>
 800cd3e:	2200      	movs	r2, #0
 800cd40:	4b6e      	ldr	r3, [pc, #440]	; (800cefc <_dtoa_r+0x8cc>)
 800cd42:	f7f3 fbeb 	bl	800051c <__aeabi_dmul>
 800cd46:	2200      	movs	r2, #0
 800cd48:	2300      	movs	r3, #0
 800cd4a:	4680      	mov	r8, r0
 800cd4c:	4689      	mov	r9, r1
 800cd4e:	f7f3 fe4d 	bl	80009ec <__aeabi_dcmpeq>
 800cd52:	2800      	cmp	r0, #0
 800cd54:	d09b      	beq.n	800cc8e <_dtoa_r+0x65e>
 800cd56:	e7cd      	b.n	800ccf4 <_dtoa_r+0x6c4>
 800cd58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cd5a:	2a00      	cmp	r2, #0
 800cd5c:	f000 80d0 	beq.w	800cf00 <_dtoa_r+0x8d0>
 800cd60:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800cd62:	2a01      	cmp	r2, #1
 800cd64:	f300 80ae 	bgt.w	800cec4 <_dtoa_r+0x894>
 800cd68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cd6a:	2a00      	cmp	r2, #0
 800cd6c:	f000 80a6 	beq.w	800cebc <_dtoa_r+0x88c>
 800cd70:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800cd74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cd76:	9f06      	ldr	r7, [sp, #24]
 800cd78:	9a06      	ldr	r2, [sp, #24]
 800cd7a:	2101      	movs	r1, #1
 800cd7c:	441a      	add	r2, r3
 800cd7e:	9206      	str	r2, [sp, #24]
 800cd80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cd82:	4628      	mov	r0, r5
 800cd84:	441a      	add	r2, r3
 800cd86:	9209      	str	r2, [sp, #36]	; 0x24
 800cd88:	f000 ff24 	bl	800dbd4 <__i2b>
 800cd8c:	4606      	mov	r6, r0
 800cd8e:	2f00      	cmp	r7, #0
 800cd90:	dd0c      	ble.n	800cdac <_dtoa_r+0x77c>
 800cd92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd94:	2b00      	cmp	r3, #0
 800cd96:	dd09      	ble.n	800cdac <_dtoa_r+0x77c>
 800cd98:	42bb      	cmp	r3, r7
 800cd9a:	bfa8      	it	ge
 800cd9c:	463b      	movge	r3, r7
 800cd9e:	9a06      	ldr	r2, [sp, #24]
 800cda0:	1aff      	subs	r7, r7, r3
 800cda2:	1ad2      	subs	r2, r2, r3
 800cda4:	9206      	str	r2, [sp, #24]
 800cda6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cda8:	1ad3      	subs	r3, r2, r3
 800cdaa:	9309      	str	r3, [sp, #36]	; 0x24
 800cdac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cdae:	b1f3      	cbz	r3, 800cdee <_dtoa_r+0x7be>
 800cdb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cdb2:	2b00      	cmp	r3, #0
 800cdb4:	f000 80a8 	beq.w	800cf08 <_dtoa_r+0x8d8>
 800cdb8:	2c00      	cmp	r4, #0
 800cdba:	dd10      	ble.n	800cdde <_dtoa_r+0x7ae>
 800cdbc:	4631      	mov	r1, r6
 800cdbe:	4622      	mov	r2, r4
 800cdc0:	4628      	mov	r0, r5
 800cdc2:	f000 ffc5 	bl	800dd50 <__pow5mult>
 800cdc6:	465a      	mov	r2, fp
 800cdc8:	4601      	mov	r1, r0
 800cdca:	4606      	mov	r6, r0
 800cdcc:	4628      	mov	r0, r5
 800cdce:	f000 ff17 	bl	800dc00 <__multiply>
 800cdd2:	4680      	mov	r8, r0
 800cdd4:	4659      	mov	r1, fp
 800cdd6:	4628      	mov	r0, r5
 800cdd8:	f000 fdfc 	bl	800d9d4 <_Bfree>
 800cddc:	46c3      	mov	fp, r8
 800cdde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cde0:	1b1a      	subs	r2, r3, r4
 800cde2:	d004      	beq.n	800cdee <_dtoa_r+0x7be>
 800cde4:	4659      	mov	r1, fp
 800cde6:	4628      	mov	r0, r5
 800cde8:	f000 ffb2 	bl	800dd50 <__pow5mult>
 800cdec:	4683      	mov	fp, r0
 800cdee:	2101      	movs	r1, #1
 800cdf0:	4628      	mov	r0, r5
 800cdf2:	f000 feef 	bl	800dbd4 <__i2b>
 800cdf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cdf8:	4604      	mov	r4, r0
 800cdfa:	2b00      	cmp	r3, #0
 800cdfc:	f340 8086 	ble.w	800cf0c <_dtoa_r+0x8dc>
 800ce00:	461a      	mov	r2, r3
 800ce02:	4601      	mov	r1, r0
 800ce04:	4628      	mov	r0, r5
 800ce06:	f000 ffa3 	bl	800dd50 <__pow5mult>
 800ce0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ce0c:	4604      	mov	r4, r0
 800ce0e:	2b01      	cmp	r3, #1
 800ce10:	dd7f      	ble.n	800cf12 <_dtoa_r+0x8e2>
 800ce12:	f04f 0800 	mov.w	r8, #0
 800ce16:	6923      	ldr	r3, [r4, #16]
 800ce18:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800ce1c:	6918      	ldr	r0, [r3, #16]
 800ce1e:	f000 fe8b 	bl	800db38 <__hi0bits>
 800ce22:	f1c0 0020 	rsb	r0, r0, #32
 800ce26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce28:	4418      	add	r0, r3
 800ce2a:	f010 001f 	ands.w	r0, r0, #31
 800ce2e:	f000 8092 	beq.w	800cf56 <_dtoa_r+0x926>
 800ce32:	f1c0 0320 	rsb	r3, r0, #32
 800ce36:	2b04      	cmp	r3, #4
 800ce38:	f340 808a 	ble.w	800cf50 <_dtoa_r+0x920>
 800ce3c:	f1c0 001c 	rsb	r0, r0, #28
 800ce40:	9b06      	ldr	r3, [sp, #24]
 800ce42:	4407      	add	r7, r0
 800ce44:	4403      	add	r3, r0
 800ce46:	9306      	str	r3, [sp, #24]
 800ce48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce4a:	4403      	add	r3, r0
 800ce4c:	9309      	str	r3, [sp, #36]	; 0x24
 800ce4e:	9b06      	ldr	r3, [sp, #24]
 800ce50:	2b00      	cmp	r3, #0
 800ce52:	dd05      	ble.n	800ce60 <_dtoa_r+0x830>
 800ce54:	4659      	mov	r1, fp
 800ce56:	461a      	mov	r2, r3
 800ce58:	4628      	mov	r0, r5
 800ce5a:	f000 ffd3 	bl	800de04 <__lshift>
 800ce5e:	4683      	mov	fp, r0
 800ce60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	dd05      	ble.n	800ce72 <_dtoa_r+0x842>
 800ce66:	4621      	mov	r1, r4
 800ce68:	461a      	mov	r2, r3
 800ce6a:	4628      	mov	r0, r5
 800ce6c:	f000 ffca 	bl	800de04 <__lshift>
 800ce70:	4604      	mov	r4, r0
 800ce72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ce74:	2b00      	cmp	r3, #0
 800ce76:	d070      	beq.n	800cf5a <_dtoa_r+0x92a>
 800ce78:	4621      	mov	r1, r4
 800ce7a:	4658      	mov	r0, fp
 800ce7c:	f001 f832 	bl	800dee4 <__mcmp>
 800ce80:	2800      	cmp	r0, #0
 800ce82:	da6a      	bge.n	800cf5a <_dtoa_r+0x92a>
 800ce84:	2300      	movs	r3, #0
 800ce86:	4659      	mov	r1, fp
 800ce88:	220a      	movs	r2, #10
 800ce8a:	4628      	mov	r0, r5
 800ce8c:	f000 fdc4 	bl	800da18 <__multadd>
 800ce90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ce92:	4683      	mov	fp, r0
 800ce94:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ce98:	2b00      	cmp	r3, #0
 800ce9a:	f000 8194 	beq.w	800d1c6 <_dtoa_r+0xb96>
 800ce9e:	4631      	mov	r1, r6
 800cea0:	2300      	movs	r3, #0
 800cea2:	220a      	movs	r2, #10
 800cea4:	4628      	mov	r0, r5
 800cea6:	f000 fdb7 	bl	800da18 <__multadd>
 800ceaa:	f1b9 0f00 	cmp.w	r9, #0
 800ceae:	4606      	mov	r6, r0
 800ceb0:	f300 8093 	bgt.w	800cfda <_dtoa_r+0x9aa>
 800ceb4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ceb6:	2b02      	cmp	r3, #2
 800ceb8:	dc57      	bgt.n	800cf6a <_dtoa_r+0x93a>
 800ceba:	e08e      	b.n	800cfda <_dtoa_r+0x9aa>
 800cebc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cebe:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800cec2:	e757      	b.n	800cd74 <_dtoa_r+0x744>
 800cec4:	9b08      	ldr	r3, [sp, #32]
 800cec6:	1e5c      	subs	r4, r3, #1
 800cec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ceca:	42a3      	cmp	r3, r4
 800cecc:	bfb7      	itett	lt
 800cece:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800ced0:	1b1c      	subge	r4, r3, r4
 800ced2:	1ae2      	sublt	r2, r4, r3
 800ced4:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800ced6:	bfbe      	ittt	lt
 800ced8:	940a      	strlt	r4, [sp, #40]	; 0x28
 800ceda:	189b      	addlt	r3, r3, r2
 800cedc:	930e      	strlt	r3, [sp, #56]	; 0x38
 800cede:	9b08      	ldr	r3, [sp, #32]
 800cee0:	bfb8      	it	lt
 800cee2:	2400      	movlt	r4, #0
 800cee4:	2b00      	cmp	r3, #0
 800cee6:	bfbb      	ittet	lt
 800cee8:	9b06      	ldrlt	r3, [sp, #24]
 800ceea:	9a08      	ldrlt	r2, [sp, #32]
 800ceec:	9f06      	ldrge	r7, [sp, #24]
 800ceee:	1a9f      	sublt	r7, r3, r2
 800cef0:	bfac      	ite	ge
 800cef2:	9b08      	ldrge	r3, [sp, #32]
 800cef4:	2300      	movlt	r3, #0
 800cef6:	e73f      	b.n	800cd78 <_dtoa_r+0x748>
 800cef8:	3fe00000 	.word	0x3fe00000
 800cefc:	40240000 	.word	0x40240000
 800cf00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cf02:	9f06      	ldr	r7, [sp, #24]
 800cf04:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800cf06:	e742      	b.n	800cd8e <_dtoa_r+0x75e>
 800cf08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cf0a:	e76b      	b.n	800cde4 <_dtoa_r+0x7b4>
 800cf0c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cf0e:	2b01      	cmp	r3, #1
 800cf10:	dc19      	bgt.n	800cf46 <_dtoa_r+0x916>
 800cf12:	9b04      	ldr	r3, [sp, #16]
 800cf14:	b9bb      	cbnz	r3, 800cf46 <_dtoa_r+0x916>
 800cf16:	9b05      	ldr	r3, [sp, #20]
 800cf18:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cf1c:	b99b      	cbnz	r3, 800cf46 <_dtoa_r+0x916>
 800cf1e:	9b05      	ldr	r3, [sp, #20]
 800cf20:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800cf24:	0d1b      	lsrs	r3, r3, #20
 800cf26:	051b      	lsls	r3, r3, #20
 800cf28:	b183      	cbz	r3, 800cf4c <_dtoa_r+0x91c>
 800cf2a:	f04f 0801 	mov.w	r8, #1
 800cf2e:	9b06      	ldr	r3, [sp, #24]
 800cf30:	3301      	adds	r3, #1
 800cf32:	9306      	str	r3, [sp, #24]
 800cf34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf36:	3301      	adds	r3, #1
 800cf38:	9309      	str	r3, [sp, #36]	; 0x24
 800cf3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cf3c:	2b00      	cmp	r3, #0
 800cf3e:	f47f af6a 	bne.w	800ce16 <_dtoa_r+0x7e6>
 800cf42:	2001      	movs	r0, #1
 800cf44:	e76f      	b.n	800ce26 <_dtoa_r+0x7f6>
 800cf46:	f04f 0800 	mov.w	r8, #0
 800cf4a:	e7f6      	b.n	800cf3a <_dtoa_r+0x90a>
 800cf4c:	4698      	mov	r8, r3
 800cf4e:	e7f4      	b.n	800cf3a <_dtoa_r+0x90a>
 800cf50:	f43f af7d 	beq.w	800ce4e <_dtoa_r+0x81e>
 800cf54:	4618      	mov	r0, r3
 800cf56:	301c      	adds	r0, #28
 800cf58:	e772      	b.n	800ce40 <_dtoa_r+0x810>
 800cf5a:	9b08      	ldr	r3, [sp, #32]
 800cf5c:	2b00      	cmp	r3, #0
 800cf5e:	dc36      	bgt.n	800cfce <_dtoa_r+0x99e>
 800cf60:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cf62:	2b02      	cmp	r3, #2
 800cf64:	dd33      	ble.n	800cfce <_dtoa_r+0x99e>
 800cf66:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800cf6a:	f1b9 0f00 	cmp.w	r9, #0
 800cf6e:	d10d      	bne.n	800cf8c <_dtoa_r+0x95c>
 800cf70:	4621      	mov	r1, r4
 800cf72:	464b      	mov	r3, r9
 800cf74:	2205      	movs	r2, #5
 800cf76:	4628      	mov	r0, r5
 800cf78:	f000 fd4e 	bl	800da18 <__multadd>
 800cf7c:	4601      	mov	r1, r0
 800cf7e:	4604      	mov	r4, r0
 800cf80:	4658      	mov	r0, fp
 800cf82:	f000 ffaf 	bl	800dee4 <__mcmp>
 800cf86:	2800      	cmp	r0, #0
 800cf88:	f73f adb8 	bgt.w	800cafc <_dtoa_r+0x4cc>
 800cf8c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cf8e:	9f03      	ldr	r7, [sp, #12]
 800cf90:	ea6f 0a03 	mvn.w	sl, r3
 800cf94:	f04f 0800 	mov.w	r8, #0
 800cf98:	4621      	mov	r1, r4
 800cf9a:	4628      	mov	r0, r5
 800cf9c:	f000 fd1a 	bl	800d9d4 <_Bfree>
 800cfa0:	2e00      	cmp	r6, #0
 800cfa2:	f43f aea7 	beq.w	800ccf4 <_dtoa_r+0x6c4>
 800cfa6:	f1b8 0f00 	cmp.w	r8, #0
 800cfaa:	d005      	beq.n	800cfb8 <_dtoa_r+0x988>
 800cfac:	45b0      	cmp	r8, r6
 800cfae:	d003      	beq.n	800cfb8 <_dtoa_r+0x988>
 800cfb0:	4641      	mov	r1, r8
 800cfb2:	4628      	mov	r0, r5
 800cfb4:	f000 fd0e 	bl	800d9d4 <_Bfree>
 800cfb8:	4631      	mov	r1, r6
 800cfba:	4628      	mov	r0, r5
 800cfbc:	f000 fd0a 	bl	800d9d4 <_Bfree>
 800cfc0:	e698      	b.n	800ccf4 <_dtoa_r+0x6c4>
 800cfc2:	2400      	movs	r4, #0
 800cfc4:	4626      	mov	r6, r4
 800cfc6:	e7e1      	b.n	800cf8c <_dtoa_r+0x95c>
 800cfc8:	46c2      	mov	sl, r8
 800cfca:	4626      	mov	r6, r4
 800cfcc:	e596      	b.n	800cafc <_dtoa_r+0x4cc>
 800cfce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cfd0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800cfd4:	2b00      	cmp	r3, #0
 800cfd6:	f000 80fd 	beq.w	800d1d4 <_dtoa_r+0xba4>
 800cfda:	2f00      	cmp	r7, #0
 800cfdc:	dd05      	ble.n	800cfea <_dtoa_r+0x9ba>
 800cfde:	4631      	mov	r1, r6
 800cfe0:	463a      	mov	r2, r7
 800cfe2:	4628      	mov	r0, r5
 800cfe4:	f000 ff0e 	bl	800de04 <__lshift>
 800cfe8:	4606      	mov	r6, r0
 800cfea:	f1b8 0f00 	cmp.w	r8, #0
 800cfee:	d05c      	beq.n	800d0aa <_dtoa_r+0xa7a>
 800cff0:	4628      	mov	r0, r5
 800cff2:	6871      	ldr	r1, [r6, #4]
 800cff4:	f000 fcae 	bl	800d954 <_Balloc>
 800cff8:	4607      	mov	r7, r0
 800cffa:	b928      	cbnz	r0, 800d008 <_dtoa_r+0x9d8>
 800cffc:	4602      	mov	r2, r0
 800cffe:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d002:	4b7f      	ldr	r3, [pc, #508]	; (800d200 <_dtoa_r+0xbd0>)
 800d004:	f7ff bb28 	b.w	800c658 <_dtoa_r+0x28>
 800d008:	6932      	ldr	r2, [r6, #16]
 800d00a:	f106 010c 	add.w	r1, r6, #12
 800d00e:	3202      	adds	r2, #2
 800d010:	0092      	lsls	r2, r2, #2
 800d012:	300c      	adds	r0, #12
 800d014:	f7fd fcb6 	bl	800a984 <memcpy>
 800d018:	2201      	movs	r2, #1
 800d01a:	4639      	mov	r1, r7
 800d01c:	4628      	mov	r0, r5
 800d01e:	f000 fef1 	bl	800de04 <__lshift>
 800d022:	46b0      	mov	r8, r6
 800d024:	4606      	mov	r6, r0
 800d026:	9b03      	ldr	r3, [sp, #12]
 800d028:	3301      	adds	r3, #1
 800d02a:	9308      	str	r3, [sp, #32]
 800d02c:	9b03      	ldr	r3, [sp, #12]
 800d02e:	444b      	add	r3, r9
 800d030:	930a      	str	r3, [sp, #40]	; 0x28
 800d032:	9b04      	ldr	r3, [sp, #16]
 800d034:	f003 0301 	and.w	r3, r3, #1
 800d038:	9309      	str	r3, [sp, #36]	; 0x24
 800d03a:	9b08      	ldr	r3, [sp, #32]
 800d03c:	4621      	mov	r1, r4
 800d03e:	3b01      	subs	r3, #1
 800d040:	4658      	mov	r0, fp
 800d042:	9304      	str	r3, [sp, #16]
 800d044:	f7ff fa66 	bl	800c514 <quorem>
 800d048:	4603      	mov	r3, r0
 800d04a:	4641      	mov	r1, r8
 800d04c:	3330      	adds	r3, #48	; 0x30
 800d04e:	9006      	str	r0, [sp, #24]
 800d050:	4658      	mov	r0, fp
 800d052:	930b      	str	r3, [sp, #44]	; 0x2c
 800d054:	f000 ff46 	bl	800dee4 <__mcmp>
 800d058:	4632      	mov	r2, r6
 800d05a:	4681      	mov	r9, r0
 800d05c:	4621      	mov	r1, r4
 800d05e:	4628      	mov	r0, r5
 800d060:	f000 ff5c 	bl	800df1c <__mdiff>
 800d064:	68c2      	ldr	r2, [r0, #12]
 800d066:	4607      	mov	r7, r0
 800d068:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d06a:	bb02      	cbnz	r2, 800d0ae <_dtoa_r+0xa7e>
 800d06c:	4601      	mov	r1, r0
 800d06e:	4658      	mov	r0, fp
 800d070:	f000 ff38 	bl	800dee4 <__mcmp>
 800d074:	4602      	mov	r2, r0
 800d076:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d078:	4639      	mov	r1, r7
 800d07a:	4628      	mov	r0, r5
 800d07c:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800d080:	f000 fca8 	bl	800d9d4 <_Bfree>
 800d084:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d086:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d088:	9f08      	ldr	r7, [sp, #32]
 800d08a:	ea43 0102 	orr.w	r1, r3, r2
 800d08e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d090:	430b      	orrs	r3, r1
 800d092:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d094:	d10d      	bne.n	800d0b2 <_dtoa_r+0xa82>
 800d096:	2b39      	cmp	r3, #57	; 0x39
 800d098:	d029      	beq.n	800d0ee <_dtoa_r+0xabe>
 800d09a:	f1b9 0f00 	cmp.w	r9, #0
 800d09e:	dd01      	ble.n	800d0a4 <_dtoa_r+0xa74>
 800d0a0:	9b06      	ldr	r3, [sp, #24]
 800d0a2:	3331      	adds	r3, #49	; 0x31
 800d0a4:	9a04      	ldr	r2, [sp, #16]
 800d0a6:	7013      	strb	r3, [r2, #0]
 800d0a8:	e776      	b.n	800cf98 <_dtoa_r+0x968>
 800d0aa:	4630      	mov	r0, r6
 800d0ac:	e7b9      	b.n	800d022 <_dtoa_r+0x9f2>
 800d0ae:	2201      	movs	r2, #1
 800d0b0:	e7e2      	b.n	800d078 <_dtoa_r+0xa48>
 800d0b2:	f1b9 0f00 	cmp.w	r9, #0
 800d0b6:	db06      	blt.n	800d0c6 <_dtoa_r+0xa96>
 800d0b8:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d0ba:	ea41 0909 	orr.w	r9, r1, r9
 800d0be:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d0c0:	ea59 0101 	orrs.w	r1, r9, r1
 800d0c4:	d120      	bne.n	800d108 <_dtoa_r+0xad8>
 800d0c6:	2a00      	cmp	r2, #0
 800d0c8:	ddec      	ble.n	800d0a4 <_dtoa_r+0xa74>
 800d0ca:	4659      	mov	r1, fp
 800d0cc:	2201      	movs	r2, #1
 800d0ce:	4628      	mov	r0, r5
 800d0d0:	9308      	str	r3, [sp, #32]
 800d0d2:	f000 fe97 	bl	800de04 <__lshift>
 800d0d6:	4621      	mov	r1, r4
 800d0d8:	4683      	mov	fp, r0
 800d0da:	f000 ff03 	bl	800dee4 <__mcmp>
 800d0de:	2800      	cmp	r0, #0
 800d0e0:	9b08      	ldr	r3, [sp, #32]
 800d0e2:	dc02      	bgt.n	800d0ea <_dtoa_r+0xaba>
 800d0e4:	d1de      	bne.n	800d0a4 <_dtoa_r+0xa74>
 800d0e6:	07da      	lsls	r2, r3, #31
 800d0e8:	d5dc      	bpl.n	800d0a4 <_dtoa_r+0xa74>
 800d0ea:	2b39      	cmp	r3, #57	; 0x39
 800d0ec:	d1d8      	bne.n	800d0a0 <_dtoa_r+0xa70>
 800d0ee:	2339      	movs	r3, #57	; 0x39
 800d0f0:	9a04      	ldr	r2, [sp, #16]
 800d0f2:	7013      	strb	r3, [r2, #0]
 800d0f4:	463b      	mov	r3, r7
 800d0f6:	461f      	mov	r7, r3
 800d0f8:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800d0fc:	3b01      	subs	r3, #1
 800d0fe:	2a39      	cmp	r2, #57	; 0x39
 800d100:	d050      	beq.n	800d1a4 <_dtoa_r+0xb74>
 800d102:	3201      	adds	r2, #1
 800d104:	701a      	strb	r2, [r3, #0]
 800d106:	e747      	b.n	800cf98 <_dtoa_r+0x968>
 800d108:	2a00      	cmp	r2, #0
 800d10a:	dd03      	ble.n	800d114 <_dtoa_r+0xae4>
 800d10c:	2b39      	cmp	r3, #57	; 0x39
 800d10e:	d0ee      	beq.n	800d0ee <_dtoa_r+0xabe>
 800d110:	3301      	adds	r3, #1
 800d112:	e7c7      	b.n	800d0a4 <_dtoa_r+0xa74>
 800d114:	9a08      	ldr	r2, [sp, #32]
 800d116:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d118:	f802 3c01 	strb.w	r3, [r2, #-1]
 800d11c:	428a      	cmp	r2, r1
 800d11e:	d02a      	beq.n	800d176 <_dtoa_r+0xb46>
 800d120:	4659      	mov	r1, fp
 800d122:	2300      	movs	r3, #0
 800d124:	220a      	movs	r2, #10
 800d126:	4628      	mov	r0, r5
 800d128:	f000 fc76 	bl	800da18 <__multadd>
 800d12c:	45b0      	cmp	r8, r6
 800d12e:	4683      	mov	fp, r0
 800d130:	f04f 0300 	mov.w	r3, #0
 800d134:	f04f 020a 	mov.w	r2, #10
 800d138:	4641      	mov	r1, r8
 800d13a:	4628      	mov	r0, r5
 800d13c:	d107      	bne.n	800d14e <_dtoa_r+0xb1e>
 800d13e:	f000 fc6b 	bl	800da18 <__multadd>
 800d142:	4680      	mov	r8, r0
 800d144:	4606      	mov	r6, r0
 800d146:	9b08      	ldr	r3, [sp, #32]
 800d148:	3301      	adds	r3, #1
 800d14a:	9308      	str	r3, [sp, #32]
 800d14c:	e775      	b.n	800d03a <_dtoa_r+0xa0a>
 800d14e:	f000 fc63 	bl	800da18 <__multadd>
 800d152:	4631      	mov	r1, r6
 800d154:	4680      	mov	r8, r0
 800d156:	2300      	movs	r3, #0
 800d158:	220a      	movs	r2, #10
 800d15a:	4628      	mov	r0, r5
 800d15c:	f000 fc5c 	bl	800da18 <__multadd>
 800d160:	4606      	mov	r6, r0
 800d162:	e7f0      	b.n	800d146 <_dtoa_r+0xb16>
 800d164:	f1b9 0f00 	cmp.w	r9, #0
 800d168:	bfcc      	ite	gt
 800d16a:	464f      	movgt	r7, r9
 800d16c:	2701      	movle	r7, #1
 800d16e:	f04f 0800 	mov.w	r8, #0
 800d172:	9a03      	ldr	r2, [sp, #12]
 800d174:	4417      	add	r7, r2
 800d176:	4659      	mov	r1, fp
 800d178:	2201      	movs	r2, #1
 800d17a:	4628      	mov	r0, r5
 800d17c:	9308      	str	r3, [sp, #32]
 800d17e:	f000 fe41 	bl	800de04 <__lshift>
 800d182:	4621      	mov	r1, r4
 800d184:	4683      	mov	fp, r0
 800d186:	f000 fead 	bl	800dee4 <__mcmp>
 800d18a:	2800      	cmp	r0, #0
 800d18c:	dcb2      	bgt.n	800d0f4 <_dtoa_r+0xac4>
 800d18e:	d102      	bne.n	800d196 <_dtoa_r+0xb66>
 800d190:	9b08      	ldr	r3, [sp, #32]
 800d192:	07db      	lsls	r3, r3, #31
 800d194:	d4ae      	bmi.n	800d0f4 <_dtoa_r+0xac4>
 800d196:	463b      	mov	r3, r7
 800d198:	461f      	mov	r7, r3
 800d19a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d19e:	2a30      	cmp	r2, #48	; 0x30
 800d1a0:	d0fa      	beq.n	800d198 <_dtoa_r+0xb68>
 800d1a2:	e6f9      	b.n	800cf98 <_dtoa_r+0x968>
 800d1a4:	9a03      	ldr	r2, [sp, #12]
 800d1a6:	429a      	cmp	r2, r3
 800d1a8:	d1a5      	bne.n	800d0f6 <_dtoa_r+0xac6>
 800d1aa:	2331      	movs	r3, #49	; 0x31
 800d1ac:	f10a 0a01 	add.w	sl, sl, #1
 800d1b0:	e779      	b.n	800d0a6 <_dtoa_r+0xa76>
 800d1b2:	4b14      	ldr	r3, [pc, #80]	; (800d204 <_dtoa_r+0xbd4>)
 800d1b4:	f7ff baa8 	b.w	800c708 <_dtoa_r+0xd8>
 800d1b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d1ba:	2b00      	cmp	r3, #0
 800d1bc:	f47f aa81 	bne.w	800c6c2 <_dtoa_r+0x92>
 800d1c0:	4b11      	ldr	r3, [pc, #68]	; (800d208 <_dtoa_r+0xbd8>)
 800d1c2:	f7ff baa1 	b.w	800c708 <_dtoa_r+0xd8>
 800d1c6:	f1b9 0f00 	cmp.w	r9, #0
 800d1ca:	dc03      	bgt.n	800d1d4 <_dtoa_r+0xba4>
 800d1cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d1ce:	2b02      	cmp	r3, #2
 800d1d0:	f73f aecb 	bgt.w	800cf6a <_dtoa_r+0x93a>
 800d1d4:	9f03      	ldr	r7, [sp, #12]
 800d1d6:	4621      	mov	r1, r4
 800d1d8:	4658      	mov	r0, fp
 800d1da:	f7ff f99b 	bl	800c514 <quorem>
 800d1de:	9a03      	ldr	r2, [sp, #12]
 800d1e0:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800d1e4:	f807 3b01 	strb.w	r3, [r7], #1
 800d1e8:	1aba      	subs	r2, r7, r2
 800d1ea:	4591      	cmp	r9, r2
 800d1ec:	ddba      	ble.n	800d164 <_dtoa_r+0xb34>
 800d1ee:	4659      	mov	r1, fp
 800d1f0:	2300      	movs	r3, #0
 800d1f2:	220a      	movs	r2, #10
 800d1f4:	4628      	mov	r0, r5
 800d1f6:	f000 fc0f 	bl	800da18 <__multadd>
 800d1fa:	4683      	mov	fp, r0
 800d1fc:	e7eb      	b.n	800d1d6 <_dtoa_r+0xba6>
 800d1fe:	bf00      	nop
 800d200:	08010958 	.word	0x08010958
 800d204:	08010b51 	.word	0x08010b51
 800d208:	080108d9 	.word	0x080108d9

0800d20c <rshift>:
 800d20c:	6903      	ldr	r3, [r0, #16]
 800d20e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d212:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800d216:	f100 0414 	add.w	r4, r0, #20
 800d21a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800d21e:	dd46      	ble.n	800d2ae <rshift+0xa2>
 800d220:	f011 011f 	ands.w	r1, r1, #31
 800d224:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800d228:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800d22c:	d10c      	bne.n	800d248 <rshift+0x3c>
 800d22e:	4629      	mov	r1, r5
 800d230:	f100 0710 	add.w	r7, r0, #16
 800d234:	42b1      	cmp	r1, r6
 800d236:	d335      	bcc.n	800d2a4 <rshift+0x98>
 800d238:	1a9b      	subs	r3, r3, r2
 800d23a:	009b      	lsls	r3, r3, #2
 800d23c:	1eea      	subs	r2, r5, #3
 800d23e:	4296      	cmp	r6, r2
 800d240:	bf38      	it	cc
 800d242:	2300      	movcc	r3, #0
 800d244:	4423      	add	r3, r4
 800d246:	e015      	b.n	800d274 <rshift+0x68>
 800d248:	46a1      	mov	r9, r4
 800d24a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800d24e:	f1c1 0820 	rsb	r8, r1, #32
 800d252:	40cf      	lsrs	r7, r1
 800d254:	f105 0e04 	add.w	lr, r5, #4
 800d258:	4576      	cmp	r6, lr
 800d25a:	46f4      	mov	ip, lr
 800d25c:	d816      	bhi.n	800d28c <rshift+0x80>
 800d25e:	1a9a      	subs	r2, r3, r2
 800d260:	0092      	lsls	r2, r2, #2
 800d262:	3a04      	subs	r2, #4
 800d264:	3501      	adds	r5, #1
 800d266:	42ae      	cmp	r6, r5
 800d268:	bf38      	it	cc
 800d26a:	2200      	movcc	r2, #0
 800d26c:	18a3      	adds	r3, r4, r2
 800d26e:	50a7      	str	r7, [r4, r2]
 800d270:	b107      	cbz	r7, 800d274 <rshift+0x68>
 800d272:	3304      	adds	r3, #4
 800d274:	42a3      	cmp	r3, r4
 800d276:	eba3 0204 	sub.w	r2, r3, r4
 800d27a:	bf08      	it	eq
 800d27c:	2300      	moveq	r3, #0
 800d27e:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800d282:	6102      	str	r2, [r0, #16]
 800d284:	bf08      	it	eq
 800d286:	6143      	streq	r3, [r0, #20]
 800d288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d28c:	f8dc c000 	ldr.w	ip, [ip]
 800d290:	fa0c fc08 	lsl.w	ip, ip, r8
 800d294:	ea4c 0707 	orr.w	r7, ip, r7
 800d298:	f849 7b04 	str.w	r7, [r9], #4
 800d29c:	f85e 7b04 	ldr.w	r7, [lr], #4
 800d2a0:	40cf      	lsrs	r7, r1
 800d2a2:	e7d9      	b.n	800d258 <rshift+0x4c>
 800d2a4:	f851 cb04 	ldr.w	ip, [r1], #4
 800d2a8:	f847 cf04 	str.w	ip, [r7, #4]!
 800d2ac:	e7c2      	b.n	800d234 <rshift+0x28>
 800d2ae:	4623      	mov	r3, r4
 800d2b0:	e7e0      	b.n	800d274 <rshift+0x68>

0800d2b2 <__hexdig_fun>:
 800d2b2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800d2b6:	2b09      	cmp	r3, #9
 800d2b8:	d802      	bhi.n	800d2c0 <__hexdig_fun+0xe>
 800d2ba:	3820      	subs	r0, #32
 800d2bc:	b2c0      	uxtb	r0, r0
 800d2be:	4770      	bx	lr
 800d2c0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800d2c4:	2b05      	cmp	r3, #5
 800d2c6:	d801      	bhi.n	800d2cc <__hexdig_fun+0x1a>
 800d2c8:	3847      	subs	r0, #71	; 0x47
 800d2ca:	e7f7      	b.n	800d2bc <__hexdig_fun+0xa>
 800d2cc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800d2d0:	2b05      	cmp	r3, #5
 800d2d2:	d801      	bhi.n	800d2d8 <__hexdig_fun+0x26>
 800d2d4:	3827      	subs	r0, #39	; 0x27
 800d2d6:	e7f1      	b.n	800d2bc <__hexdig_fun+0xa>
 800d2d8:	2000      	movs	r0, #0
 800d2da:	4770      	bx	lr

0800d2dc <__gethex>:
 800d2dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e0:	b08b      	sub	sp, #44	; 0x2c
 800d2e2:	9305      	str	r3, [sp, #20]
 800d2e4:	4bb2      	ldr	r3, [pc, #712]	; (800d5b0 <__gethex+0x2d4>)
 800d2e6:	9002      	str	r0, [sp, #8]
 800d2e8:	681b      	ldr	r3, [r3, #0]
 800d2ea:	468b      	mov	fp, r1
 800d2ec:	4618      	mov	r0, r3
 800d2ee:	4690      	mov	r8, r2
 800d2f0:	9303      	str	r3, [sp, #12]
 800d2f2:	f7f2 ff4f 	bl	8000194 <strlen>
 800d2f6:	4682      	mov	sl, r0
 800d2f8:	9b03      	ldr	r3, [sp, #12]
 800d2fa:	f8db 2000 	ldr.w	r2, [fp]
 800d2fe:	4403      	add	r3, r0
 800d300:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800d304:	9306      	str	r3, [sp, #24]
 800d306:	1c93      	adds	r3, r2, #2
 800d308:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800d30c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800d310:	32fe      	adds	r2, #254	; 0xfe
 800d312:	18d1      	adds	r1, r2, r3
 800d314:	461f      	mov	r7, r3
 800d316:	f813 0b01 	ldrb.w	r0, [r3], #1
 800d31a:	9101      	str	r1, [sp, #4]
 800d31c:	2830      	cmp	r0, #48	; 0x30
 800d31e:	d0f8      	beq.n	800d312 <__gethex+0x36>
 800d320:	f7ff ffc7 	bl	800d2b2 <__hexdig_fun>
 800d324:	4604      	mov	r4, r0
 800d326:	2800      	cmp	r0, #0
 800d328:	d13a      	bne.n	800d3a0 <__gethex+0xc4>
 800d32a:	4652      	mov	r2, sl
 800d32c:	4638      	mov	r0, r7
 800d32e:	9903      	ldr	r1, [sp, #12]
 800d330:	f001 fd9a 	bl	800ee68 <strncmp>
 800d334:	4605      	mov	r5, r0
 800d336:	2800      	cmp	r0, #0
 800d338:	d166      	bne.n	800d408 <__gethex+0x12c>
 800d33a:	f817 000a 	ldrb.w	r0, [r7, sl]
 800d33e:	eb07 060a 	add.w	r6, r7, sl
 800d342:	f7ff ffb6 	bl	800d2b2 <__hexdig_fun>
 800d346:	2800      	cmp	r0, #0
 800d348:	d060      	beq.n	800d40c <__gethex+0x130>
 800d34a:	4633      	mov	r3, r6
 800d34c:	7818      	ldrb	r0, [r3, #0]
 800d34e:	461f      	mov	r7, r3
 800d350:	2830      	cmp	r0, #48	; 0x30
 800d352:	f103 0301 	add.w	r3, r3, #1
 800d356:	d0f9      	beq.n	800d34c <__gethex+0x70>
 800d358:	f7ff ffab 	bl	800d2b2 <__hexdig_fun>
 800d35c:	2301      	movs	r3, #1
 800d35e:	fab0 f480 	clz	r4, r0
 800d362:	4635      	mov	r5, r6
 800d364:	0964      	lsrs	r4, r4, #5
 800d366:	9301      	str	r3, [sp, #4]
 800d368:	463a      	mov	r2, r7
 800d36a:	4616      	mov	r6, r2
 800d36c:	7830      	ldrb	r0, [r6, #0]
 800d36e:	3201      	adds	r2, #1
 800d370:	f7ff ff9f 	bl	800d2b2 <__hexdig_fun>
 800d374:	2800      	cmp	r0, #0
 800d376:	d1f8      	bne.n	800d36a <__gethex+0x8e>
 800d378:	4652      	mov	r2, sl
 800d37a:	4630      	mov	r0, r6
 800d37c:	9903      	ldr	r1, [sp, #12]
 800d37e:	f001 fd73 	bl	800ee68 <strncmp>
 800d382:	b980      	cbnz	r0, 800d3a6 <__gethex+0xca>
 800d384:	b94d      	cbnz	r5, 800d39a <__gethex+0xbe>
 800d386:	eb06 050a 	add.w	r5, r6, sl
 800d38a:	462a      	mov	r2, r5
 800d38c:	4616      	mov	r6, r2
 800d38e:	7830      	ldrb	r0, [r6, #0]
 800d390:	3201      	adds	r2, #1
 800d392:	f7ff ff8e 	bl	800d2b2 <__hexdig_fun>
 800d396:	2800      	cmp	r0, #0
 800d398:	d1f8      	bne.n	800d38c <__gethex+0xb0>
 800d39a:	1bad      	subs	r5, r5, r6
 800d39c:	00ad      	lsls	r5, r5, #2
 800d39e:	e004      	b.n	800d3aa <__gethex+0xce>
 800d3a0:	2400      	movs	r4, #0
 800d3a2:	4625      	mov	r5, r4
 800d3a4:	e7e0      	b.n	800d368 <__gethex+0x8c>
 800d3a6:	2d00      	cmp	r5, #0
 800d3a8:	d1f7      	bne.n	800d39a <__gethex+0xbe>
 800d3aa:	7833      	ldrb	r3, [r6, #0]
 800d3ac:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800d3b0:	2b50      	cmp	r3, #80	; 0x50
 800d3b2:	d139      	bne.n	800d428 <__gethex+0x14c>
 800d3b4:	7873      	ldrb	r3, [r6, #1]
 800d3b6:	2b2b      	cmp	r3, #43	; 0x2b
 800d3b8:	d02a      	beq.n	800d410 <__gethex+0x134>
 800d3ba:	2b2d      	cmp	r3, #45	; 0x2d
 800d3bc:	d02c      	beq.n	800d418 <__gethex+0x13c>
 800d3be:	f04f 0900 	mov.w	r9, #0
 800d3c2:	1c71      	adds	r1, r6, #1
 800d3c4:	7808      	ldrb	r0, [r1, #0]
 800d3c6:	f7ff ff74 	bl	800d2b2 <__hexdig_fun>
 800d3ca:	1e43      	subs	r3, r0, #1
 800d3cc:	b2db      	uxtb	r3, r3
 800d3ce:	2b18      	cmp	r3, #24
 800d3d0:	d82a      	bhi.n	800d428 <__gethex+0x14c>
 800d3d2:	f1a0 0210 	sub.w	r2, r0, #16
 800d3d6:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d3da:	f7ff ff6a 	bl	800d2b2 <__hexdig_fun>
 800d3de:	1e43      	subs	r3, r0, #1
 800d3e0:	b2db      	uxtb	r3, r3
 800d3e2:	2b18      	cmp	r3, #24
 800d3e4:	d91b      	bls.n	800d41e <__gethex+0x142>
 800d3e6:	f1b9 0f00 	cmp.w	r9, #0
 800d3ea:	d000      	beq.n	800d3ee <__gethex+0x112>
 800d3ec:	4252      	negs	r2, r2
 800d3ee:	4415      	add	r5, r2
 800d3f0:	f8cb 1000 	str.w	r1, [fp]
 800d3f4:	b1d4      	cbz	r4, 800d42c <__gethex+0x150>
 800d3f6:	9b01      	ldr	r3, [sp, #4]
 800d3f8:	2b00      	cmp	r3, #0
 800d3fa:	bf14      	ite	ne
 800d3fc:	2700      	movne	r7, #0
 800d3fe:	2706      	moveq	r7, #6
 800d400:	4638      	mov	r0, r7
 800d402:	b00b      	add	sp, #44	; 0x2c
 800d404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d408:	463e      	mov	r6, r7
 800d40a:	4625      	mov	r5, r4
 800d40c:	2401      	movs	r4, #1
 800d40e:	e7cc      	b.n	800d3aa <__gethex+0xce>
 800d410:	f04f 0900 	mov.w	r9, #0
 800d414:	1cb1      	adds	r1, r6, #2
 800d416:	e7d5      	b.n	800d3c4 <__gethex+0xe8>
 800d418:	f04f 0901 	mov.w	r9, #1
 800d41c:	e7fa      	b.n	800d414 <__gethex+0x138>
 800d41e:	230a      	movs	r3, #10
 800d420:	fb03 0202 	mla	r2, r3, r2, r0
 800d424:	3a10      	subs	r2, #16
 800d426:	e7d6      	b.n	800d3d6 <__gethex+0xfa>
 800d428:	4631      	mov	r1, r6
 800d42a:	e7e1      	b.n	800d3f0 <__gethex+0x114>
 800d42c:	4621      	mov	r1, r4
 800d42e:	1bf3      	subs	r3, r6, r7
 800d430:	3b01      	subs	r3, #1
 800d432:	2b07      	cmp	r3, #7
 800d434:	dc0a      	bgt.n	800d44c <__gethex+0x170>
 800d436:	9802      	ldr	r0, [sp, #8]
 800d438:	f000 fa8c 	bl	800d954 <_Balloc>
 800d43c:	4604      	mov	r4, r0
 800d43e:	b940      	cbnz	r0, 800d452 <__gethex+0x176>
 800d440:	4602      	mov	r2, r0
 800d442:	21de      	movs	r1, #222	; 0xde
 800d444:	4b5b      	ldr	r3, [pc, #364]	; (800d5b4 <__gethex+0x2d8>)
 800d446:	485c      	ldr	r0, [pc, #368]	; (800d5b8 <__gethex+0x2dc>)
 800d448:	f001 fddc 	bl	800f004 <__assert_func>
 800d44c:	3101      	adds	r1, #1
 800d44e:	105b      	asrs	r3, r3, #1
 800d450:	e7ef      	b.n	800d432 <__gethex+0x156>
 800d452:	f04f 0b00 	mov.w	fp, #0
 800d456:	f100 0914 	add.w	r9, r0, #20
 800d45a:	f1ca 0301 	rsb	r3, sl, #1
 800d45e:	f8cd 9010 	str.w	r9, [sp, #16]
 800d462:	f8cd b004 	str.w	fp, [sp, #4]
 800d466:	9308      	str	r3, [sp, #32]
 800d468:	42b7      	cmp	r7, r6
 800d46a:	d33f      	bcc.n	800d4ec <__gethex+0x210>
 800d46c:	9f04      	ldr	r7, [sp, #16]
 800d46e:	9b01      	ldr	r3, [sp, #4]
 800d470:	f847 3b04 	str.w	r3, [r7], #4
 800d474:	eba7 0709 	sub.w	r7, r7, r9
 800d478:	10bf      	asrs	r7, r7, #2
 800d47a:	6127      	str	r7, [r4, #16]
 800d47c:	4618      	mov	r0, r3
 800d47e:	f000 fb5b 	bl	800db38 <__hi0bits>
 800d482:	017f      	lsls	r7, r7, #5
 800d484:	f8d8 6000 	ldr.w	r6, [r8]
 800d488:	1a3f      	subs	r7, r7, r0
 800d48a:	42b7      	cmp	r7, r6
 800d48c:	dd62      	ble.n	800d554 <__gethex+0x278>
 800d48e:	1bbf      	subs	r7, r7, r6
 800d490:	4639      	mov	r1, r7
 800d492:	4620      	mov	r0, r4
 800d494:	f000 fef5 	bl	800e282 <__any_on>
 800d498:	4682      	mov	sl, r0
 800d49a:	b1a8      	cbz	r0, 800d4c8 <__gethex+0x1ec>
 800d49c:	f04f 0a01 	mov.w	sl, #1
 800d4a0:	1e7b      	subs	r3, r7, #1
 800d4a2:	1159      	asrs	r1, r3, #5
 800d4a4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d4a8:	f003 021f 	and.w	r2, r3, #31
 800d4ac:	fa0a f202 	lsl.w	r2, sl, r2
 800d4b0:	420a      	tst	r2, r1
 800d4b2:	d009      	beq.n	800d4c8 <__gethex+0x1ec>
 800d4b4:	4553      	cmp	r3, sl
 800d4b6:	dd05      	ble.n	800d4c4 <__gethex+0x1e8>
 800d4b8:	4620      	mov	r0, r4
 800d4ba:	1eb9      	subs	r1, r7, #2
 800d4bc:	f000 fee1 	bl	800e282 <__any_on>
 800d4c0:	2800      	cmp	r0, #0
 800d4c2:	d144      	bne.n	800d54e <__gethex+0x272>
 800d4c4:	f04f 0a02 	mov.w	sl, #2
 800d4c8:	4639      	mov	r1, r7
 800d4ca:	4620      	mov	r0, r4
 800d4cc:	f7ff fe9e 	bl	800d20c <rshift>
 800d4d0:	443d      	add	r5, r7
 800d4d2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d4d6:	42ab      	cmp	r3, r5
 800d4d8:	da4a      	bge.n	800d570 <__gethex+0x294>
 800d4da:	4621      	mov	r1, r4
 800d4dc:	9802      	ldr	r0, [sp, #8]
 800d4de:	f000 fa79 	bl	800d9d4 <_Bfree>
 800d4e2:	2300      	movs	r3, #0
 800d4e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d4e6:	27a3      	movs	r7, #163	; 0xa3
 800d4e8:	6013      	str	r3, [r2, #0]
 800d4ea:	e789      	b.n	800d400 <__gethex+0x124>
 800d4ec:	1e73      	subs	r3, r6, #1
 800d4ee:	9a06      	ldr	r2, [sp, #24]
 800d4f0:	9307      	str	r3, [sp, #28]
 800d4f2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800d4f6:	4293      	cmp	r3, r2
 800d4f8:	d019      	beq.n	800d52e <__gethex+0x252>
 800d4fa:	f1bb 0f20 	cmp.w	fp, #32
 800d4fe:	d107      	bne.n	800d510 <__gethex+0x234>
 800d500:	9b04      	ldr	r3, [sp, #16]
 800d502:	9a01      	ldr	r2, [sp, #4]
 800d504:	f843 2b04 	str.w	r2, [r3], #4
 800d508:	9304      	str	r3, [sp, #16]
 800d50a:	2300      	movs	r3, #0
 800d50c:	469b      	mov	fp, r3
 800d50e:	9301      	str	r3, [sp, #4]
 800d510:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800d514:	f7ff fecd 	bl	800d2b2 <__hexdig_fun>
 800d518:	9b01      	ldr	r3, [sp, #4]
 800d51a:	f000 000f 	and.w	r0, r0, #15
 800d51e:	fa00 f00b 	lsl.w	r0, r0, fp
 800d522:	4303      	orrs	r3, r0
 800d524:	9301      	str	r3, [sp, #4]
 800d526:	f10b 0b04 	add.w	fp, fp, #4
 800d52a:	9b07      	ldr	r3, [sp, #28]
 800d52c:	e00d      	b.n	800d54a <__gethex+0x26e>
 800d52e:	9a08      	ldr	r2, [sp, #32]
 800d530:	1e73      	subs	r3, r6, #1
 800d532:	4413      	add	r3, r2
 800d534:	42bb      	cmp	r3, r7
 800d536:	d3e0      	bcc.n	800d4fa <__gethex+0x21e>
 800d538:	4618      	mov	r0, r3
 800d53a:	4652      	mov	r2, sl
 800d53c:	9903      	ldr	r1, [sp, #12]
 800d53e:	9309      	str	r3, [sp, #36]	; 0x24
 800d540:	f001 fc92 	bl	800ee68 <strncmp>
 800d544:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d546:	2800      	cmp	r0, #0
 800d548:	d1d7      	bne.n	800d4fa <__gethex+0x21e>
 800d54a:	461e      	mov	r6, r3
 800d54c:	e78c      	b.n	800d468 <__gethex+0x18c>
 800d54e:	f04f 0a03 	mov.w	sl, #3
 800d552:	e7b9      	b.n	800d4c8 <__gethex+0x1ec>
 800d554:	da09      	bge.n	800d56a <__gethex+0x28e>
 800d556:	1bf7      	subs	r7, r6, r7
 800d558:	4621      	mov	r1, r4
 800d55a:	463a      	mov	r2, r7
 800d55c:	9802      	ldr	r0, [sp, #8]
 800d55e:	f000 fc51 	bl	800de04 <__lshift>
 800d562:	4604      	mov	r4, r0
 800d564:	1bed      	subs	r5, r5, r7
 800d566:	f100 0914 	add.w	r9, r0, #20
 800d56a:	f04f 0a00 	mov.w	sl, #0
 800d56e:	e7b0      	b.n	800d4d2 <__gethex+0x1f6>
 800d570:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d574:	42a8      	cmp	r0, r5
 800d576:	dd72      	ble.n	800d65e <__gethex+0x382>
 800d578:	1b45      	subs	r5, r0, r5
 800d57a:	42ae      	cmp	r6, r5
 800d57c:	dc35      	bgt.n	800d5ea <__gethex+0x30e>
 800d57e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d582:	2b02      	cmp	r3, #2
 800d584:	d029      	beq.n	800d5da <__gethex+0x2fe>
 800d586:	2b03      	cmp	r3, #3
 800d588:	d02b      	beq.n	800d5e2 <__gethex+0x306>
 800d58a:	2b01      	cmp	r3, #1
 800d58c:	d11c      	bne.n	800d5c8 <__gethex+0x2ec>
 800d58e:	42ae      	cmp	r6, r5
 800d590:	d11a      	bne.n	800d5c8 <__gethex+0x2ec>
 800d592:	2e01      	cmp	r6, #1
 800d594:	d112      	bne.n	800d5bc <__gethex+0x2e0>
 800d596:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d59a:	9a05      	ldr	r2, [sp, #20]
 800d59c:	2762      	movs	r7, #98	; 0x62
 800d59e:	6013      	str	r3, [r2, #0]
 800d5a0:	2301      	movs	r3, #1
 800d5a2:	6123      	str	r3, [r4, #16]
 800d5a4:	f8c9 3000 	str.w	r3, [r9]
 800d5a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d5aa:	601c      	str	r4, [r3, #0]
 800d5ac:	e728      	b.n	800d400 <__gethex+0x124>
 800d5ae:	bf00      	nop
 800d5b0:	080109d0 	.word	0x080109d0
 800d5b4:	08010958 	.word	0x08010958
 800d5b8:	08010969 	.word	0x08010969
 800d5bc:	4620      	mov	r0, r4
 800d5be:	1e71      	subs	r1, r6, #1
 800d5c0:	f000 fe5f 	bl	800e282 <__any_on>
 800d5c4:	2800      	cmp	r0, #0
 800d5c6:	d1e6      	bne.n	800d596 <__gethex+0x2ba>
 800d5c8:	4621      	mov	r1, r4
 800d5ca:	9802      	ldr	r0, [sp, #8]
 800d5cc:	f000 fa02 	bl	800d9d4 <_Bfree>
 800d5d0:	2300      	movs	r3, #0
 800d5d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d5d4:	2750      	movs	r7, #80	; 0x50
 800d5d6:	6013      	str	r3, [r2, #0]
 800d5d8:	e712      	b.n	800d400 <__gethex+0x124>
 800d5da:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d5dc:	2b00      	cmp	r3, #0
 800d5de:	d1f3      	bne.n	800d5c8 <__gethex+0x2ec>
 800d5e0:	e7d9      	b.n	800d596 <__gethex+0x2ba>
 800d5e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d5e4:	2b00      	cmp	r3, #0
 800d5e6:	d1d6      	bne.n	800d596 <__gethex+0x2ba>
 800d5e8:	e7ee      	b.n	800d5c8 <__gethex+0x2ec>
 800d5ea:	1e6f      	subs	r7, r5, #1
 800d5ec:	f1ba 0f00 	cmp.w	sl, #0
 800d5f0:	d132      	bne.n	800d658 <__gethex+0x37c>
 800d5f2:	b127      	cbz	r7, 800d5fe <__gethex+0x322>
 800d5f4:	4639      	mov	r1, r7
 800d5f6:	4620      	mov	r0, r4
 800d5f8:	f000 fe43 	bl	800e282 <__any_on>
 800d5fc:	4682      	mov	sl, r0
 800d5fe:	2101      	movs	r1, #1
 800d600:	117b      	asrs	r3, r7, #5
 800d602:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800d606:	f007 071f 	and.w	r7, r7, #31
 800d60a:	fa01 f707 	lsl.w	r7, r1, r7
 800d60e:	421f      	tst	r7, r3
 800d610:	f04f 0702 	mov.w	r7, #2
 800d614:	4629      	mov	r1, r5
 800d616:	4620      	mov	r0, r4
 800d618:	bf18      	it	ne
 800d61a:	f04a 0a02 	orrne.w	sl, sl, #2
 800d61e:	1b76      	subs	r6, r6, r5
 800d620:	f7ff fdf4 	bl	800d20c <rshift>
 800d624:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d628:	f1ba 0f00 	cmp.w	sl, #0
 800d62c:	d048      	beq.n	800d6c0 <__gethex+0x3e4>
 800d62e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d632:	2b02      	cmp	r3, #2
 800d634:	d015      	beq.n	800d662 <__gethex+0x386>
 800d636:	2b03      	cmp	r3, #3
 800d638:	d017      	beq.n	800d66a <__gethex+0x38e>
 800d63a:	2b01      	cmp	r3, #1
 800d63c:	d109      	bne.n	800d652 <__gethex+0x376>
 800d63e:	f01a 0f02 	tst.w	sl, #2
 800d642:	d006      	beq.n	800d652 <__gethex+0x376>
 800d644:	f8d9 0000 	ldr.w	r0, [r9]
 800d648:	ea4a 0a00 	orr.w	sl, sl, r0
 800d64c:	f01a 0f01 	tst.w	sl, #1
 800d650:	d10e      	bne.n	800d670 <__gethex+0x394>
 800d652:	f047 0710 	orr.w	r7, r7, #16
 800d656:	e033      	b.n	800d6c0 <__gethex+0x3e4>
 800d658:	f04f 0a01 	mov.w	sl, #1
 800d65c:	e7cf      	b.n	800d5fe <__gethex+0x322>
 800d65e:	2701      	movs	r7, #1
 800d660:	e7e2      	b.n	800d628 <__gethex+0x34c>
 800d662:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d664:	f1c3 0301 	rsb	r3, r3, #1
 800d668:	9315      	str	r3, [sp, #84]	; 0x54
 800d66a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d66c:	2b00      	cmp	r3, #0
 800d66e:	d0f0      	beq.n	800d652 <__gethex+0x376>
 800d670:	f04f 0c00 	mov.w	ip, #0
 800d674:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d678:	f104 0314 	add.w	r3, r4, #20
 800d67c:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d680:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d684:	4618      	mov	r0, r3
 800d686:	f853 2b04 	ldr.w	r2, [r3], #4
 800d68a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d68e:	d01c      	beq.n	800d6ca <__gethex+0x3ee>
 800d690:	3201      	adds	r2, #1
 800d692:	6002      	str	r2, [r0, #0]
 800d694:	2f02      	cmp	r7, #2
 800d696:	f104 0314 	add.w	r3, r4, #20
 800d69a:	d13d      	bne.n	800d718 <__gethex+0x43c>
 800d69c:	f8d8 2000 	ldr.w	r2, [r8]
 800d6a0:	3a01      	subs	r2, #1
 800d6a2:	42b2      	cmp	r2, r6
 800d6a4:	d10a      	bne.n	800d6bc <__gethex+0x3e0>
 800d6a6:	2201      	movs	r2, #1
 800d6a8:	1171      	asrs	r1, r6, #5
 800d6aa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d6ae:	f006 061f 	and.w	r6, r6, #31
 800d6b2:	fa02 f606 	lsl.w	r6, r2, r6
 800d6b6:	421e      	tst	r6, r3
 800d6b8:	bf18      	it	ne
 800d6ba:	4617      	movne	r7, r2
 800d6bc:	f047 0720 	orr.w	r7, r7, #32
 800d6c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d6c2:	601c      	str	r4, [r3, #0]
 800d6c4:	9b05      	ldr	r3, [sp, #20]
 800d6c6:	601d      	str	r5, [r3, #0]
 800d6c8:	e69a      	b.n	800d400 <__gethex+0x124>
 800d6ca:	4299      	cmp	r1, r3
 800d6cc:	f843 cc04 	str.w	ip, [r3, #-4]
 800d6d0:	d8d8      	bhi.n	800d684 <__gethex+0x3a8>
 800d6d2:	68a3      	ldr	r3, [r4, #8]
 800d6d4:	459b      	cmp	fp, r3
 800d6d6:	db17      	blt.n	800d708 <__gethex+0x42c>
 800d6d8:	6861      	ldr	r1, [r4, #4]
 800d6da:	9802      	ldr	r0, [sp, #8]
 800d6dc:	3101      	adds	r1, #1
 800d6de:	f000 f939 	bl	800d954 <_Balloc>
 800d6e2:	4681      	mov	r9, r0
 800d6e4:	b918      	cbnz	r0, 800d6ee <__gethex+0x412>
 800d6e6:	4602      	mov	r2, r0
 800d6e8:	2184      	movs	r1, #132	; 0x84
 800d6ea:	4b19      	ldr	r3, [pc, #100]	; (800d750 <__gethex+0x474>)
 800d6ec:	e6ab      	b.n	800d446 <__gethex+0x16a>
 800d6ee:	6922      	ldr	r2, [r4, #16]
 800d6f0:	f104 010c 	add.w	r1, r4, #12
 800d6f4:	3202      	adds	r2, #2
 800d6f6:	0092      	lsls	r2, r2, #2
 800d6f8:	300c      	adds	r0, #12
 800d6fa:	f7fd f943 	bl	800a984 <memcpy>
 800d6fe:	4621      	mov	r1, r4
 800d700:	9802      	ldr	r0, [sp, #8]
 800d702:	f000 f967 	bl	800d9d4 <_Bfree>
 800d706:	464c      	mov	r4, r9
 800d708:	6923      	ldr	r3, [r4, #16]
 800d70a:	1c5a      	adds	r2, r3, #1
 800d70c:	6122      	str	r2, [r4, #16]
 800d70e:	2201      	movs	r2, #1
 800d710:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d714:	615a      	str	r2, [r3, #20]
 800d716:	e7bd      	b.n	800d694 <__gethex+0x3b8>
 800d718:	6922      	ldr	r2, [r4, #16]
 800d71a:	455a      	cmp	r2, fp
 800d71c:	dd0b      	ble.n	800d736 <__gethex+0x45a>
 800d71e:	2101      	movs	r1, #1
 800d720:	4620      	mov	r0, r4
 800d722:	f7ff fd73 	bl	800d20c <rshift>
 800d726:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d72a:	3501      	adds	r5, #1
 800d72c:	42ab      	cmp	r3, r5
 800d72e:	f6ff aed4 	blt.w	800d4da <__gethex+0x1fe>
 800d732:	2701      	movs	r7, #1
 800d734:	e7c2      	b.n	800d6bc <__gethex+0x3e0>
 800d736:	f016 061f 	ands.w	r6, r6, #31
 800d73a:	d0fa      	beq.n	800d732 <__gethex+0x456>
 800d73c:	4453      	add	r3, sl
 800d73e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d742:	f000 f9f9 	bl	800db38 <__hi0bits>
 800d746:	f1c6 0620 	rsb	r6, r6, #32
 800d74a:	42b0      	cmp	r0, r6
 800d74c:	dbe7      	blt.n	800d71e <__gethex+0x442>
 800d74e:	e7f0      	b.n	800d732 <__gethex+0x456>
 800d750:	08010958 	.word	0x08010958

0800d754 <L_shift>:
 800d754:	f1c2 0208 	rsb	r2, r2, #8
 800d758:	0092      	lsls	r2, r2, #2
 800d75a:	b570      	push	{r4, r5, r6, lr}
 800d75c:	f1c2 0620 	rsb	r6, r2, #32
 800d760:	6843      	ldr	r3, [r0, #4]
 800d762:	6804      	ldr	r4, [r0, #0]
 800d764:	fa03 f506 	lsl.w	r5, r3, r6
 800d768:	432c      	orrs	r4, r5
 800d76a:	40d3      	lsrs	r3, r2
 800d76c:	6004      	str	r4, [r0, #0]
 800d76e:	f840 3f04 	str.w	r3, [r0, #4]!
 800d772:	4288      	cmp	r0, r1
 800d774:	d3f4      	bcc.n	800d760 <L_shift+0xc>
 800d776:	bd70      	pop	{r4, r5, r6, pc}

0800d778 <__match>:
 800d778:	b530      	push	{r4, r5, lr}
 800d77a:	6803      	ldr	r3, [r0, #0]
 800d77c:	3301      	adds	r3, #1
 800d77e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d782:	b914      	cbnz	r4, 800d78a <__match+0x12>
 800d784:	6003      	str	r3, [r0, #0]
 800d786:	2001      	movs	r0, #1
 800d788:	bd30      	pop	{r4, r5, pc}
 800d78a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d78e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800d792:	2d19      	cmp	r5, #25
 800d794:	bf98      	it	ls
 800d796:	3220      	addls	r2, #32
 800d798:	42a2      	cmp	r2, r4
 800d79a:	d0f0      	beq.n	800d77e <__match+0x6>
 800d79c:	2000      	movs	r0, #0
 800d79e:	e7f3      	b.n	800d788 <__match+0x10>

0800d7a0 <__hexnan>:
 800d7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7a4:	2500      	movs	r5, #0
 800d7a6:	680b      	ldr	r3, [r1, #0]
 800d7a8:	4682      	mov	sl, r0
 800d7aa:	115e      	asrs	r6, r3, #5
 800d7ac:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d7b0:	f013 031f 	ands.w	r3, r3, #31
 800d7b4:	bf18      	it	ne
 800d7b6:	3604      	addne	r6, #4
 800d7b8:	1f37      	subs	r7, r6, #4
 800d7ba:	46b9      	mov	r9, r7
 800d7bc:	463c      	mov	r4, r7
 800d7be:	46ab      	mov	fp, r5
 800d7c0:	b087      	sub	sp, #28
 800d7c2:	4690      	mov	r8, r2
 800d7c4:	6802      	ldr	r2, [r0, #0]
 800d7c6:	9301      	str	r3, [sp, #4]
 800d7c8:	f846 5c04 	str.w	r5, [r6, #-4]
 800d7cc:	9502      	str	r5, [sp, #8]
 800d7ce:	7851      	ldrb	r1, [r2, #1]
 800d7d0:	1c53      	adds	r3, r2, #1
 800d7d2:	9303      	str	r3, [sp, #12]
 800d7d4:	b341      	cbz	r1, 800d828 <__hexnan+0x88>
 800d7d6:	4608      	mov	r0, r1
 800d7d8:	9205      	str	r2, [sp, #20]
 800d7da:	9104      	str	r1, [sp, #16]
 800d7dc:	f7ff fd69 	bl	800d2b2 <__hexdig_fun>
 800d7e0:	2800      	cmp	r0, #0
 800d7e2:	d14f      	bne.n	800d884 <__hexnan+0xe4>
 800d7e4:	9904      	ldr	r1, [sp, #16]
 800d7e6:	9a05      	ldr	r2, [sp, #20]
 800d7e8:	2920      	cmp	r1, #32
 800d7ea:	d818      	bhi.n	800d81e <__hexnan+0x7e>
 800d7ec:	9b02      	ldr	r3, [sp, #8]
 800d7ee:	459b      	cmp	fp, r3
 800d7f0:	dd13      	ble.n	800d81a <__hexnan+0x7a>
 800d7f2:	454c      	cmp	r4, r9
 800d7f4:	d206      	bcs.n	800d804 <__hexnan+0x64>
 800d7f6:	2d07      	cmp	r5, #7
 800d7f8:	dc04      	bgt.n	800d804 <__hexnan+0x64>
 800d7fa:	462a      	mov	r2, r5
 800d7fc:	4649      	mov	r1, r9
 800d7fe:	4620      	mov	r0, r4
 800d800:	f7ff ffa8 	bl	800d754 <L_shift>
 800d804:	4544      	cmp	r4, r8
 800d806:	d950      	bls.n	800d8aa <__hexnan+0x10a>
 800d808:	2300      	movs	r3, #0
 800d80a:	f1a4 0904 	sub.w	r9, r4, #4
 800d80e:	f844 3c04 	str.w	r3, [r4, #-4]
 800d812:	461d      	mov	r5, r3
 800d814:	464c      	mov	r4, r9
 800d816:	f8cd b008 	str.w	fp, [sp, #8]
 800d81a:	9a03      	ldr	r2, [sp, #12]
 800d81c:	e7d7      	b.n	800d7ce <__hexnan+0x2e>
 800d81e:	2929      	cmp	r1, #41	; 0x29
 800d820:	d156      	bne.n	800d8d0 <__hexnan+0x130>
 800d822:	3202      	adds	r2, #2
 800d824:	f8ca 2000 	str.w	r2, [sl]
 800d828:	f1bb 0f00 	cmp.w	fp, #0
 800d82c:	d050      	beq.n	800d8d0 <__hexnan+0x130>
 800d82e:	454c      	cmp	r4, r9
 800d830:	d206      	bcs.n	800d840 <__hexnan+0xa0>
 800d832:	2d07      	cmp	r5, #7
 800d834:	dc04      	bgt.n	800d840 <__hexnan+0xa0>
 800d836:	462a      	mov	r2, r5
 800d838:	4649      	mov	r1, r9
 800d83a:	4620      	mov	r0, r4
 800d83c:	f7ff ff8a 	bl	800d754 <L_shift>
 800d840:	4544      	cmp	r4, r8
 800d842:	d934      	bls.n	800d8ae <__hexnan+0x10e>
 800d844:	4623      	mov	r3, r4
 800d846:	f1a8 0204 	sub.w	r2, r8, #4
 800d84a:	f853 1b04 	ldr.w	r1, [r3], #4
 800d84e:	429f      	cmp	r7, r3
 800d850:	f842 1f04 	str.w	r1, [r2, #4]!
 800d854:	d2f9      	bcs.n	800d84a <__hexnan+0xaa>
 800d856:	1b3b      	subs	r3, r7, r4
 800d858:	f023 0303 	bic.w	r3, r3, #3
 800d85c:	3304      	adds	r3, #4
 800d85e:	3401      	adds	r4, #1
 800d860:	3e03      	subs	r6, #3
 800d862:	42b4      	cmp	r4, r6
 800d864:	bf88      	it	hi
 800d866:	2304      	movhi	r3, #4
 800d868:	2200      	movs	r2, #0
 800d86a:	4443      	add	r3, r8
 800d86c:	f843 2b04 	str.w	r2, [r3], #4
 800d870:	429f      	cmp	r7, r3
 800d872:	d2fb      	bcs.n	800d86c <__hexnan+0xcc>
 800d874:	683b      	ldr	r3, [r7, #0]
 800d876:	b91b      	cbnz	r3, 800d880 <__hexnan+0xe0>
 800d878:	4547      	cmp	r7, r8
 800d87a:	d127      	bne.n	800d8cc <__hexnan+0x12c>
 800d87c:	2301      	movs	r3, #1
 800d87e:	603b      	str	r3, [r7, #0]
 800d880:	2005      	movs	r0, #5
 800d882:	e026      	b.n	800d8d2 <__hexnan+0x132>
 800d884:	3501      	adds	r5, #1
 800d886:	2d08      	cmp	r5, #8
 800d888:	f10b 0b01 	add.w	fp, fp, #1
 800d88c:	dd06      	ble.n	800d89c <__hexnan+0xfc>
 800d88e:	4544      	cmp	r4, r8
 800d890:	d9c3      	bls.n	800d81a <__hexnan+0x7a>
 800d892:	2300      	movs	r3, #0
 800d894:	2501      	movs	r5, #1
 800d896:	f844 3c04 	str.w	r3, [r4, #-4]
 800d89a:	3c04      	subs	r4, #4
 800d89c:	6822      	ldr	r2, [r4, #0]
 800d89e:	f000 000f 	and.w	r0, r0, #15
 800d8a2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800d8a6:	6022      	str	r2, [r4, #0]
 800d8a8:	e7b7      	b.n	800d81a <__hexnan+0x7a>
 800d8aa:	2508      	movs	r5, #8
 800d8ac:	e7b5      	b.n	800d81a <__hexnan+0x7a>
 800d8ae:	9b01      	ldr	r3, [sp, #4]
 800d8b0:	2b00      	cmp	r3, #0
 800d8b2:	d0df      	beq.n	800d874 <__hexnan+0xd4>
 800d8b4:	f04f 32ff 	mov.w	r2, #4294967295
 800d8b8:	f1c3 0320 	rsb	r3, r3, #32
 800d8bc:	fa22 f303 	lsr.w	r3, r2, r3
 800d8c0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800d8c4:	401a      	ands	r2, r3
 800d8c6:	f846 2c04 	str.w	r2, [r6, #-4]
 800d8ca:	e7d3      	b.n	800d874 <__hexnan+0xd4>
 800d8cc:	3f04      	subs	r7, #4
 800d8ce:	e7d1      	b.n	800d874 <__hexnan+0xd4>
 800d8d0:	2004      	movs	r0, #4
 800d8d2:	b007      	add	sp, #28
 800d8d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d8d8 <_localeconv_r>:
 800d8d8:	4800      	ldr	r0, [pc, #0]	; (800d8dc <_localeconv_r+0x4>)
 800d8da:	4770      	bx	lr
 800d8dc:	200002f8 	.word	0x200002f8

0800d8e0 <_lseek_r>:
 800d8e0:	b538      	push	{r3, r4, r5, lr}
 800d8e2:	4604      	mov	r4, r0
 800d8e4:	4608      	mov	r0, r1
 800d8e6:	4611      	mov	r1, r2
 800d8e8:	2200      	movs	r2, #0
 800d8ea:	4d05      	ldr	r5, [pc, #20]	; (800d900 <_lseek_r+0x20>)
 800d8ec:	602a      	str	r2, [r5, #0]
 800d8ee:	461a      	mov	r2, r3
 800d8f0:	f7f7 fb1c 	bl	8004f2c <_lseek>
 800d8f4:	1c43      	adds	r3, r0, #1
 800d8f6:	d102      	bne.n	800d8fe <_lseek_r+0x1e>
 800d8f8:	682b      	ldr	r3, [r5, #0]
 800d8fa:	b103      	cbz	r3, 800d8fe <_lseek_r+0x1e>
 800d8fc:	6023      	str	r3, [r4, #0]
 800d8fe:	bd38      	pop	{r3, r4, r5, pc}
 800d900:	20001438 	.word	0x20001438

0800d904 <malloc>:
 800d904:	4b02      	ldr	r3, [pc, #8]	; (800d910 <malloc+0xc>)
 800d906:	4601      	mov	r1, r0
 800d908:	6818      	ldr	r0, [r3, #0]
 800d90a:	f000 bd57 	b.w	800e3bc <_malloc_r>
 800d90e:	bf00      	nop
 800d910:	200001a0 	.word	0x200001a0

0800d914 <__ascii_mbtowc>:
 800d914:	b082      	sub	sp, #8
 800d916:	b901      	cbnz	r1, 800d91a <__ascii_mbtowc+0x6>
 800d918:	a901      	add	r1, sp, #4
 800d91a:	b142      	cbz	r2, 800d92e <__ascii_mbtowc+0x1a>
 800d91c:	b14b      	cbz	r3, 800d932 <__ascii_mbtowc+0x1e>
 800d91e:	7813      	ldrb	r3, [r2, #0]
 800d920:	600b      	str	r3, [r1, #0]
 800d922:	7812      	ldrb	r2, [r2, #0]
 800d924:	1e10      	subs	r0, r2, #0
 800d926:	bf18      	it	ne
 800d928:	2001      	movne	r0, #1
 800d92a:	b002      	add	sp, #8
 800d92c:	4770      	bx	lr
 800d92e:	4610      	mov	r0, r2
 800d930:	e7fb      	b.n	800d92a <__ascii_mbtowc+0x16>
 800d932:	f06f 0001 	mvn.w	r0, #1
 800d936:	e7f8      	b.n	800d92a <__ascii_mbtowc+0x16>

0800d938 <memchr>:
 800d938:	4603      	mov	r3, r0
 800d93a:	b510      	push	{r4, lr}
 800d93c:	b2c9      	uxtb	r1, r1
 800d93e:	4402      	add	r2, r0
 800d940:	4293      	cmp	r3, r2
 800d942:	4618      	mov	r0, r3
 800d944:	d101      	bne.n	800d94a <memchr+0x12>
 800d946:	2000      	movs	r0, #0
 800d948:	e003      	b.n	800d952 <memchr+0x1a>
 800d94a:	7804      	ldrb	r4, [r0, #0]
 800d94c:	3301      	adds	r3, #1
 800d94e:	428c      	cmp	r4, r1
 800d950:	d1f6      	bne.n	800d940 <memchr+0x8>
 800d952:	bd10      	pop	{r4, pc}

0800d954 <_Balloc>:
 800d954:	b570      	push	{r4, r5, r6, lr}
 800d956:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d958:	4604      	mov	r4, r0
 800d95a:	460d      	mov	r5, r1
 800d95c:	b976      	cbnz	r6, 800d97c <_Balloc+0x28>
 800d95e:	2010      	movs	r0, #16
 800d960:	f7ff ffd0 	bl	800d904 <malloc>
 800d964:	4602      	mov	r2, r0
 800d966:	6260      	str	r0, [r4, #36]	; 0x24
 800d968:	b920      	cbnz	r0, 800d974 <_Balloc+0x20>
 800d96a:	2166      	movs	r1, #102	; 0x66
 800d96c:	4b17      	ldr	r3, [pc, #92]	; (800d9cc <_Balloc+0x78>)
 800d96e:	4818      	ldr	r0, [pc, #96]	; (800d9d0 <_Balloc+0x7c>)
 800d970:	f001 fb48 	bl	800f004 <__assert_func>
 800d974:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d978:	6006      	str	r6, [r0, #0]
 800d97a:	60c6      	str	r6, [r0, #12]
 800d97c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d97e:	68f3      	ldr	r3, [r6, #12]
 800d980:	b183      	cbz	r3, 800d9a4 <_Balloc+0x50>
 800d982:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d984:	68db      	ldr	r3, [r3, #12]
 800d986:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d98a:	b9b8      	cbnz	r0, 800d9bc <_Balloc+0x68>
 800d98c:	2101      	movs	r1, #1
 800d98e:	fa01 f605 	lsl.w	r6, r1, r5
 800d992:	1d72      	adds	r2, r6, #5
 800d994:	4620      	mov	r0, r4
 800d996:	0092      	lsls	r2, r2, #2
 800d998:	f000 fc94 	bl	800e2c4 <_calloc_r>
 800d99c:	b160      	cbz	r0, 800d9b8 <_Balloc+0x64>
 800d99e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d9a2:	e00e      	b.n	800d9c2 <_Balloc+0x6e>
 800d9a4:	2221      	movs	r2, #33	; 0x21
 800d9a6:	2104      	movs	r1, #4
 800d9a8:	4620      	mov	r0, r4
 800d9aa:	f000 fc8b 	bl	800e2c4 <_calloc_r>
 800d9ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9b0:	60f0      	str	r0, [r6, #12]
 800d9b2:	68db      	ldr	r3, [r3, #12]
 800d9b4:	2b00      	cmp	r3, #0
 800d9b6:	d1e4      	bne.n	800d982 <_Balloc+0x2e>
 800d9b8:	2000      	movs	r0, #0
 800d9ba:	bd70      	pop	{r4, r5, r6, pc}
 800d9bc:	6802      	ldr	r2, [r0, #0]
 800d9be:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d9c2:	2300      	movs	r3, #0
 800d9c4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d9c8:	e7f7      	b.n	800d9ba <_Balloc+0x66>
 800d9ca:	bf00      	nop
 800d9cc:	080108e6 	.word	0x080108e6
 800d9d0:	080109e4 	.word	0x080109e4

0800d9d4 <_Bfree>:
 800d9d4:	b570      	push	{r4, r5, r6, lr}
 800d9d6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d9d8:	4605      	mov	r5, r0
 800d9da:	460c      	mov	r4, r1
 800d9dc:	b976      	cbnz	r6, 800d9fc <_Bfree+0x28>
 800d9de:	2010      	movs	r0, #16
 800d9e0:	f7ff ff90 	bl	800d904 <malloc>
 800d9e4:	4602      	mov	r2, r0
 800d9e6:	6268      	str	r0, [r5, #36]	; 0x24
 800d9e8:	b920      	cbnz	r0, 800d9f4 <_Bfree+0x20>
 800d9ea:	218a      	movs	r1, #138	; 0x8a
 800d9ec:	4b08      	ldr	r3, [pc, #32]	; (800da10 <_Bfree+0x3c>)
 800d9ee:	4809      	ldr	r0, [pc, #36]	; (800da14 <_Bfree+0x40>)
 800d9f0:	f001 fb08 	bl	800f004 <__assert_func>
 800d9f4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d9f8:	6006      	str	r6, [r0, #0]
 800d9fa:	60c6      	str	r6, [r0, #12]
 800d9fc:	b13c      	cbz	r4, 800da0e <_Bfree+0x3a>
 800d9fe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800da00:	6862      	ldr	r2, [r4, #4]
 800da02:	68db      	ldr	r3, [r3, #12]
 800da04:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800da08:	6021      	str	r1, [r4, #0]
 800da0a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800da0e:	bd70      	pop	{r4, r5, r6, pc}
 800da10:	080108e6 	.word	0x080108e6
 800da14:	080109e4 	.word	0x080109e4

0800da18 <__multadd>:
 800da18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da1c:	4607      	mov	r7, r0
 800da1e:	460c      	mov	r4, r1
 800da20:	461e      	mov	r6, r3
 800da22:	2000      	movs	r0, #0
 800da24:	690d      	ldr	r5, [r1, #16]
 800da26:	f101 0c14 	add.w	ip, r1, #20
 800da2a:	f8dc 3000 	ldr.w	r3, [ip]
 800da2e:	3001      	adds	r0, #1
 800da30:	b299      	uxth	r1, r3
 800da32:	fb02 6101 	mla	r1, r2, r1, r6
 800da36:	0c1e      	lsrs	r6, r3, #16
 800da38:	0c0b      	lsrs	r3, r1, #16
 800da3a:	fb02 3306 	mla	r3, r2, r6, r3
 800da3e:	b289      	uxth	r1, r1
 800da40:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800da44:	4285      	cmp	r5, r0
 800da46:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800da4a:	f84c 1b04 	str.w	r1, [ip], #4
 800da4e:	dcec      	bgt.n	800da2a <__multadd+0x12>
 800da50:	b30e      	cbz	r6, 800da96 <__multadd+0x7e>
 800da52:	68a3      	ldr	r3, [r4, #8]
 800da54:	42ab      	cmp	r3, r5
 800da56:	dc19      	bgt.n	800da8c <__multadd+0x74>
 800da58:	6861      	ldr	r1, [r4, #4]
 800da5a:	4638      	mov	r0, r7
 800da5c:	3101      	adds	r1, #1
 800da5e:	f7ff ff79 	bl	800d954 <_Balloc>
 800da62:	4680      	mov	r8, r0
 800da64:	b928      	cbnz	r0, 800da72 <__multadd+0x5a>
 800da66:	4602      	mov	r2, r0
 800da68:	21b5      	movs	r1, #181	; 0xb5
 800da6a:	4b0c      	ldr	r3, [pc, #48]	; (800da9c <__multadd+0x84>)
 800da6c:	480c      	ldr	r0, [pc, #48]	; (800daa0 <__multadd+0x88>)
 800da6e:	f001 fac9 	bl	800f004 <__assert_func>
 800da72:	6922      	ldr	r2, [r4, #16]
 800da74:	f104 010c 	add.w	r1, r4, #12
 800da78:	3202      	adds	r2, #2
 800da7a:	0092      	lsls	r2, r2, #2
 800da7c:	300c      	adds	r0, #12
 800da7e:	f7fc ff81 	bl	800a984 <memcpy>
 800da82:	4621      	mov	r1, r4
 800da84:	4638      	mov	r0, r7
 800da86:	f7ff ffa5 	bl	800d9d4 <_Bfree>
 800da8a:	4644      	mov	r4, r8
 800da8c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800da90:	3501      	adds	r5, #1
 800da92:	615e      	str	r6, [r3, #20]
 800da94:	6125      	str	r5, [r4, #16]
 800da96:	4620      	mov	r0, r4
 800da98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da9c:	08010958 	.word	0x08010958
 800daa0:	080109e4 	.word	0x080109e4

0800daa4 <__s2b>:
 800daa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800daa8:	4615      	mov	r5, r2
 800daaa:	2209      	movs	r2, #9
 800daac:	461f      	mov	r7, r3
 800daae:	3308      	adds	r3, #8
 800dab0:	460c      	mov	r4, r1
 800dab2:	fb93 f3f2 	sdiv	r3, r3, r2
 800dab6:	4606      	mov	r6, r0
 800dab8:	2201      	movs	r2, #1
 800daba:	2100      	movs	r1, #0
 800dabc:	429a      	cmp	r2, r3
 800dabe:	db09      	blt.n	800dad4 <__s2b+0x30>
 800dac0:	4630      	mov	r0, r6
 800dac2:	f7ff ff47 	bl	800d954 <_Balloc>
 800dac6:	b940      	cbnz	r0, 800dada <__s2b+0x36>
 800dac8:	4602      	mov	r2, r0
 800daca:	21ce      	movs	r1, #206	; 0xce
 800dacc:	4b18      	ldr	r3, [pc, #96]	; (800db30 <__s2b+0x8c>)
 800dace:	4819      	ldr	r0, [pc, #100]	; (800db34 <__s2b+0x90>)
 800dad0:	f001 fa98 	bl	800f004 <__assert_func>
 800dad4:	0052      	lsls	r2, r2, #1
 800dad6:	3101      	adds	r1, #1
 800dad8:	e7f0      	b.n	800dabc <__s2b+0x18>
 800dada:	9b08      	ldr	r3, [sp, #32]
 800dadc:	2d09      	cmp	r5, #9
 800dade:	6143      	str	r3, [r0, #20]
 800dae0:	f04f 0301 	mov.w	r3, #1
 800dae4:	6103      	str	r3, [r0, #16]
 800dae6:	dd16      	ble.n	800db16 <__s2b+0x72>
 800dae8:	f104 0909 	add.w	r9, r4, #9
 800daec:	46c8      	mov	r8, r9
 800daee:	442c      	add	r4, r5
 800daf0:	f818 3b01 	ldrb.w	r3, [r8], #1
 800daf4:	4601      	mov	r1, r0
 800daf6:	220a      	movs	r2, #10
 800daf8:	4630      	mov	r0, r6
 800dafa:	3b30      	subs	r3, #48	; 0x30
 800dafc:	f7ff ff8c 	bl	800da18 <__multadd>
 800db00:	45a0      	cmp	r8, r4
 800db02:	d1f5      	bne.n	800daf0 <__s2b+0x4c>
 800db04:	f1a5 0408 	sub.w	r4, r5, #8
 800db08:	444c      	add	r4, r9
 800db0a:	1b2d      	subs	r5, r5, r4
 800db0c:	1963      	adds	r3, r4, r5
 800db0e:	42bb      	cmp	r3, r7
 800db10:	db04      	blt.n	800db1c <__s2b+0x78>
 800db12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800db16:	2509      	movs	r5, #9
 800db18:	340a      	adds	r4, #10
 800db1a:	e7f6      	b.n	800db0a <__s2b+0x66>
 800db1c:	f814 3b01 	ldrb.w	r3, [r4], #1
 800db20:	4601      	mov	r1, r0
 800db22:	220a      	movs	r2, #10
 800db24:	4630      	mov	r0, r6
 800db26:	3b30      	subs	r3, #48	; 0x30
 800db28:	f7ff ff76 	bl	800da18 <__multadd>
 800db2c:	e7ee      	b.n	800db0c <__s2b+0x68>
 800db2e:	bf00      	nop
 800db30:	08010958 	.word	0x08010958
 800db34:	080109e4 	.word	0x080109e4

0800db38 <__hi0bits>:
 800db38:	0c02      	lsrs	r2, r0, #16
 800db3a:	0412      	lsls	r2, r2, #16
 800db3c:	4603      	mov	r3, r0
 800db3e:	b9ca      	cbnz	r2, 800db74 <__hi0bits+0x3c>
 800db40:	0403      	lsls	r3, r0, #16
 800db42:	2010      	movs	r0, #16
 800db44:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800db48:	bf04      	itt	eq
 800db4a:	021b      	lsleq	r3, r3, #8
 800db4c:	3008      	addeq	r0, #8
 800db4e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800db52:	bf04      	itt	eq
 800db54:	011b      	lsleq	r3, r3, #4
 800db56:	3004      	addeq	r0, #4
 800db58:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800db5c:	bf04      	itt	eq
 800db5e:	009b      	lsleq	r3, r3, #2
 800db60:	3002      	addeq	r0, #2
 800db62:	2b00      	cmp	r3, #0
 800db64:	db05      	blt.n	800db72 <__hi0bits+0x3a>
 800db66:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800db6a:	f100 0001 	add.w	r0, r0, #1
 800db6e:	bf08      	it	eq
 800db70:	2020      	moveq	r0, #32
 800db72:	4770      	bx	lr
 800db74:	2000      	movs	r0, #0
 800db76:	e7e5      	b.n	800db44 <__hi0bits+0xc>

0800db78 <__lo0bits>:
 800db78:	6803      	ldr	r3, [r0, #0]
 800db7a:	4602      	mov	r2, r0
 800db7c:	f013 0007 	ands.w	r0, r3, #7
 800db80:	d00b      	beq.n	800db9a <__lo0bits+0x22>
 800db82:	07d9      	lsls	r1, r3, #31
 800db84:	d421      	bmi.n	800dbca <__lo0bits+0x52>
 800db86:	0798      	lsls	r0, r3, #30
 800db88:	bf49      	itett	mi
 800db8a:	085b      	lsrmi	r3, r3, #1
 800db8c:	089b      	lsrpl	r3, r3, #2
 800db8e:	2001      	movmi	r0, #1
 800db90:	6013      	strmi	r3, [r2, #0]
 800db92:	bf5c      	itt	pl
 800db94:	2002      	movpl	r0, #2
 800db96:	6013      	strpl	r3, [r2, #0]
 800db98:	4770      	bx	lr
 800db9a:	b299      	uxth	r1, r3
 800db9c:	b909      	cbnz	r1, 800dba2 <__lo0bits+0x2a>
 800db9e:	2010      	movs	r0, #16
 800dba0:	0c1b      	lsrs	r3, r3, #16
 800dba2:	b2d9      	uxtb	r1, r3
 800dba4:	b909      	cbnz	r1, 800dbaa <__lo0bits+0x32>
 800dba6:	3008      	adds	r0, #8
 800dba8:	0a1b      	lsrs	r3, r3, #8
 800dbaa:	0719      	lsls	r1, r3, #28
 800dbac:	bf04      	itt	eq
 800dbae:	091b      	lsreq	r3, r3, #4
 800dbb0:	3004      	addeq	r0, #4
 800dbb2:	0799      	lsls	r1, r3, #30
 800dbb4:	bf04      	itt	eq
 800dbb6:	089b      	lsreq	r3, r3, #2
 800dbb8:	3002      	addeq	r0, #2
 800dbba:	07d9      	lsls	r1, r3, #31
 800dbbc:	d403      	bmi.n	800dbc6 <__lo0bits+0x4e>
 800dbbe:	085b      	lsrs	r3, r3, #1
 800dbc0:	f100 0001 	add.w	r0, r0, #1
 800dbc4:	d003      	beq.n	800dbce <__lo0bits+0x56>
 800dbc6:	6013      	str	r3, [r2, #0]
 800dbc8:	4770      	bx	lr
 800dbca:	2000      	movs	r0, #0
 800dbcc:	4770      	bx	lr
 800dbce:	2020      	movs	r0, #32
 800dbd0:	4770      	bx	lr
	...

0800dbd4 <__i2b>:
 800dbd4:	b510      	push	{r4, lr}
 800dbd6:	460c      	mov	r4, r1
 800dbd8:	2101      	movs	r1, #1
 800dbda:	f7ff febb 	bl	800d954 <_Balloc>
 800dbde:	4602      	mov	r2, r0
 800dbe0:	b928      	cbnz	r0, 800dbee <__i2b+0x1a>
 800dbe2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800dbe6:	4b04      	ldr	r3, [pc, #16]	; (800dbf8 <__i2b+0x24>)
 800dbe8:	4804      	ldr	r0, [pc, #16]	; (800dbfc <__i2b+0x28>)
 800dbea:	f001 fa0b 	bl	800f004 <__assert_func>
 800dbee:	2301      	movs	r3, #1
 800dbf0:	6144      	str	r4, [r0, #20]
 800dbf2:	6103      	str	r3, [r0, #16]
 800dbf4:	bd10      	pop	{r4, pc}
 800dbf6:	bf00      	nop
 800dbf8:	08010958 	.word	0x08010958
 800dbfc:	080109e4 	.word	0x080109e4

0800dc00 <__multiply>:
 800dc00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc04:	4691      	mov	r9, r2
 800dc06:	690a      	ldr	r2, [r1, #16]
 800dc08:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dc0c:	460c      	mov	r4, r1
 800dc0e:	429a      	cmp	r2, r3
 800dc10:	bfbe      	ittt	lt
 800dc12:	460b      	movlt	r3, r1
 800dc14:	464c      	movlt	r4, r9
 800dc16:	4699      	movlt	r9, r3
 800dc18:	6927      	ldr	r7, [r4, #16]
 800dc1a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800dc1e:	68a3      	ldr	r3, [r4, #8]
 800dc20:	6861      	ldr	r1, [r4, #4]
 800dc22:	eb07 060a 	add.w	r6, r7, sl
 800dc26:	42b3      	cmp	r3, r6
 800dc28:	b085      	sub	sp, #20
 800dc2a:	bfb8      	it	lt
 800dc2c:	3101      	addlt	r1, #1
 800dc2e:	f7ff fe91 	bl	800d954 <_Balloc>
 800dc32:	b930      	cbnz	r0, 800dc42 <__multiply+0x42>
 800dc34:	4602      	mov	r2, r0
 800dc36:	f240 115d 	movw	r1, #349	; 0x15d
 800dc3a:	4b43      	ldr	r3, [pc, #268]	; (800dd48 <__multiply+0x148>)
 800dc3c:	4843      	ldr	r0, [pc, #268]	; (800dd4c <__multiply+0x14c>)
 800dc3e:	f001 f9e1 	bl	800f004 <__assert_func>
 800dc42:	f100 0514 	add.w	r5, r0, #20
 800dc46:	462b      	mov	r3, r5
 800dc48:	2200      	movs	r2, #0
 800dc4a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800dc4e:	4543      	cmp	r3, r8
 800dc50:	d321      	bcc.n	800dc96 <__multiply+0x96>
 800dc52:	f104 0314 	add.w	r3, r4, #20
 800dc56:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800dc5a:	f109 0314 	add.w	r3, r9, #20
 800dc5e:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800dc62:	9202      	str	r2, [sp, #8]
 800dc64:	1b3a      	subs	r2, r7, r4
 800dc66:	3a15      	subs	r2, #21
 800dc68:	f022 0203 	bic.w	r2, r2, #3
 800dc6c:	3204      	adds	r2, #4
 800dc6e:	f104 0115 	add.w	r1, r4, #21
 800dc72:	428f      	cmp	r7, r1
 800dc74:	bf38      	it	cc
 800dc76:	2204      	movcc	r2, #4
 800dc78:	9201      	str	r2, [sp, #4]
 800dc7a:	9a02      	ldr	r2, [sp, #8]
 800dc7c:	9303      	str	r3, [sp, #12]
 800dc7e:	429a      	cmp	r2, r3
 800dc80:	d80c      	bhi.n	800dc9c <__multiply+0x9c>
 800dc82:	2e00      	cmp	r6, #0
 800dc84:	dd03      	ble.n	800dc8e <__multiply+0x8e>
 800dc86:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	d059      	beq.n	800dd42 <__multiply+0x142>
 800dc8e:	6106      	str	r6, [r0, #16]
 800dc90:	b005      	add	sp, #20
 800dc92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc96:	f843 2b04 	str.w	r2, [r3], #4
 800dc9a:	e7d8      	b.n	800dc4e <__multiply+0x4e>
 800dc9c:	f8b3 a000 	ldrh.w	sl, [r3]
 800dca0:	f1ba 0f00 	cmp.w	sl, #0
 800dca4:	d023      	beq.n	800dcee <__multiply+0xee>
 800dca6:	46a9      	mov	r9, r5
 800dca8:	f04f 0c00 	mov.w	ip, #0
 800dcac:	f104 0e14 	add.w	lr, r4, #20
 800dcb0:	f85e 2b04 	ldr.w	r2, [lr], #4
 800dcb4:	f8d9 1000 	ldr.w	r1, [r9]
 800dcb8:	fa1f fb82 	uxth.w	fp, r2
 800dcbc:	b289      	uxth	r1, r1
 800dcbe:	fb0a 110b 	mla	r1, sl, fp, r1
 800dcc2:	4461      	add	r1, ip
 800dcc4:	f8d9 c000 	ldr.w	ip, [r9]
 800dcc8:	0c12      	lsrs	r2, r2, #16
 800dcca:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800dcce:	fb0a c202 	mla	r2, sl, r2, ip
 800dcd2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800dcd6:	b289      	uxth	r1, r1
 800dcd8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800dcdc:	4577      	cmp	r7, lr
 800dcde:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800dce2:	f849 1b04 	str.w	r1, [r9], #4
 800dce6:	d8e3      	bhi.n	800dcb0 <__multiply+0xb0>
 800dce8:	9a01      	ldr	r2, [sp, #4]
 800dcea:	f845 c002 	str.w	ip, [r5, r2]
 800dcee:	9a03      	ldr	r2, [sp, #12]
 800dcf0:	3304      	adds	r3, #4
 800dcf2:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800dcf6:	f1b9 0f00 	cmp.w	r9, #0
 800dcfa:	d020      	beq.n	800dd3e <__multiply+0x13e>
 800dcfc:	46ae      	mov	lr, r5
 800dcfe:	f04f 0a00 	mov.w	sl, #0
 800dd02:	6829      	ldr	r1, [r5, #0]
 800dd04:	f104 0c14 	add.w	ip, r4, #20
 800dd08:	f8bc b000 	ldrh.w	fp, [ip]
 800dd0c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800dd10:	b289      	uxth	r1, r1
 800dd12:	fb09 220b 	mla	r2, r9, fp, r2
 800dd16:	4492      	add	sl, r2
 800dd18:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800dd1c:	f84e 1b04 	str.w	r1, [lr], #4
 800dd20:	f85c 2b04 	ldr.w	r2, [ip], #4
 800dd24:	f8be 1000 	ldrh.w	r1, [lr]
 800dd28:	0c12      	lsrs	r2, r2, #16
 800dd2a:	fb09 1102 	mla	r1, r9, r2, r1
 800dd2e:	4567      	cmp	r7, ip
 800dd30:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800dd34:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800dd38:	d8e6      	bhi.n	800dd08 <__multiply+0x108>
 800dd3a:	9a01      	ldr	r2, [sp, #4]
 800dd3c:	50a9      	str	r1, [r5, r2]
 800dd3e:	3504      	adds	r5, #4
 800dd40:	e79b      	b.n	800dc7a <__multiply+0x7a>
 800dd42:	3e01      	subs	r6, #1
 800dd44:	e79d      	b.n	800dc82 <__multiply+0x82>
 800dd46:	bf00      	nop
 800dd48:	08010958 	.word	0x08010958
 800dd4c:	080109e4 	.word	0x080109e4

0800dd50 <__pow5mult>:
 800dd50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd54:	4615      	mov	r5, r2
 800dd56:	f012 0203 	ands.w	r2, r2, #3
 800dd5a:	4606      	mov	r6, r0
 800dd5c:	460f      	mov	r7, r1
 800dd5e:	d007      	beq.n	800dd70 <__pow5mult+0x20>
 800dd60:	4c25      	ldr	r4, [pc, #148]	; (800ddf8 <__pow5mult+0xa8>)
 800dd62:	3a01      	subs	r2, #1
 800dd64:	2300      	movs	r3, #0
 800dd66:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800dd6a:	f7ff fe55 	bl	800da18 <__multadd>
 800dd6e:	4607      	mov	r7, r0
 800dd70:	10ad      	asrs	r5, r5, #2
 800dd72:	d03d      	beq.n	800ddf0 <__pow5mult+0xa0>
 800dd74:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800dd76:	b97c      	cbnz	r4, 800dd98 <__pow5mult+0x48>
 800dd78:	2010      	movs	r0, #16
 800dd7a:	f7ff fdc3 	bl	800d904 <malloc>
 800dd7e:	4602      	mov	r2, r0
 800dd80:	6270      	str	r0, [r6, #36]	; 0x24
 800dd82:	b928      	cbnz	r0, 800dd90 <__pow5mult+0x40>
 800dd84:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800dd88:	4b1c      	ldr	r3, [pc, #112]	; (800ddfc <__pow5mult+0xac>)
 800dd8a:	481d      	ldr	r0, [pc, #116]	; (800de00 <__pow5mult+0xb0>)
 800dd8c:	f001 f93a 	bl	800f004 <__assert_func>
 800dd90:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800dd94:	6004      	str	r4, [r0, #0]
 800dd96:	60c4      	str	r4, [r0, #12]
 800dd98:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800dd9c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800dda0:	b94c      	cbnz	r4, 800ddb6 <__pow5mult+0x66>
 800dda2:	f240 2171 	movw	r1, #625	; 0x271
 800dda6:	4630      	mov	r0, r6
 800dda8:	f7ff ff14 	bl	800dbd4 <__i2b>
 800ddac:	2300      	movs	r3, #0
 800ddae:	4604      	mov	r4, r0
 800ddb0:	f8c8 0008 	str.w	r0, [r8, #8]
 800ddb4:	6003      	str	r3, [r0, #0]
 800ddb6:	f04f 0900 	mov.w	r9, #0
 800ddba:	07eb      	lsls	r3, r5, #31
 800ddbc:	d50a      	bpl.n	800ddd4 <__pow5mult+0x84>
 800ddbe:	4639      	mov	r1, r7
 800ddc0:	4622      	mov	r2, r4
 800ddc2:	4630      	mov	r0, r6
 800ddc4:	f7ff ff1c 	bl	800dc00 <__multiply>
 800ddc8:	4680      	mov	r8, r0
 800ddca:	4639      	mov	r1, r7
 800ddcc:	4630      	mov	r0, r6
 800ddce:	f7ff fe01 	bl	800d9d4 <_Bfree>
 800ddd2:	4647      	mov	r7, r8
 800ddd4:	106d      	asrs	r5, r5, #1
 800ddd6:	d00b      	beq.n	800ddf0 <__pow5mult+0xa0>
 800ddd8:	6820      	ldr	r0, [r4, #0]
 800ddda:	b938      	cbnz	r0, 800ddec <__pow5mult+0x9c>
 800dddc:	4622      	mov	r2, r4
 800ddde:	4621      	mov	r1, r4
 800dde0:	4630      	mov	r0, r6
 800dde2:	f7ff ff0d 	bl	800dc00 <__multiply>
 800dde6:	6020      	str	r0, [r4, #0]
 800dde8:	f8c0 9000 	str.w	r9, [r0]
 800ddec:	4604      	mov	r4, r0
 800ddee:	e7e4      	b.n	800ddba <__pow5mult+0x6a>
 800ddf0:	4638      	mov	r0, r7
 800ddf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ddf6:	bf00      	nop
 800ddf8:	08010b30 	.word	0x08010b30
 800ddfc:	080108e6 	.word	0x080108e6
 800de00:	080109e4 	.word	0x080109e4

0800de04 <__lshift>:
 800de04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de08:	460c      	mov	r4, r1
 800de0a:	4607      	mov	r7, r0
 800de0c:	4691      	mov	r9, r2
 800de0e:	6923      	ldr	r3, [r4, #16]
 800de10:	6849      	ldr	r1, [r1, #4]
 800de12:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800de16:	68a3      	ldr	r3, [r4, #8]
 800de18:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800de1c:	f108 0601 	add.w	r6, r8, #1
 800de20:	42b3      	cmp	r3, r6
 800de22:	db0b      	blt.n	800de3c <__lshift+0x38>
 800de24:	4638      	mov	r0, r7
 800de26:	f7ff fd95 	bl	800d954 <_Balloc>
 800de2a:	4605      	mov	r5, r0
 800de2c:	b948      	cbnz	r0, 800de42 <__lshift+0x3e>
 800de2e:	4602      	mov	r2, r0
 800de30:	f240 11d9 	movw	r1, #473	; 0x1d9
 800de34:	4b29      	ldr	r3, [pc, #164]	; (800dedc <__lshift+0xd8>)
 800de36:	482a      	ldr	r0, [pc, #168]	; (800dee0 <__lshift+0xdc>)
 800de38:	f001 f8e4 	bl	800f004 <__assert_func>
 800de3c:	3101      	adds	r1, #1
 800de3e:	005b      	lsls	r3, r3, #1
 800de40:	e7ee      	b.n	800de20 <__lshift+0x1c>
 800de42:	2300      	movs	r3, #0
 800de44:	f100 0114 	add.w	r1, r0, #20
 800de48:	f100 0210 	add.w	r2, r0, #16
 800de4c:	4618      	mov	r0, r3
 800de4e:	4553      	cmp	r3, sl
 800de50:	db37      	blt.n	800dec2 <__lshift+0xbe>
 800de52:	6920      	ldr	r0, [r4, #16]
 800de54:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800de58:	f104 0314 	add.w	r3, r4, #20
 800de5c:	f019 091f 	ands.w	r9, r9, #31
 800de60:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800de64:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800de68:	d02f      	beq.n	800deca <__lshift+0xc6>
 800de6a:	468a      	mov	sl, r1
 800de6c:	f04f 0c00 	mov.w	ip, #0
 800de70:	f1c9 0e20 	rsb	lr, r9, #32
 800de74:	681a      	ldr	r2, [r3, #0]
 800de76:	fa02 f209 	lsl.w	r2, r2, r9
 800de7a:	ea42 020c 	orr.w	r2, r2, ip
 800de7e:	f84a 2b04 	str.w	r2, [sl], #4
 800de82:	f853 2b04 	ldr.w	r2, [r3], #4
 800de86:	4298      	cmp	r0, r3
 800de88:	fa22 fc0e 	lsr.w	ip, r2, lr
 800de8c:	d8f2      	bhi.n	800de74 <__lshift+0x70>
 800de8e:	1b03      	subs	r3, r0, r4
 800de90:	3b15      	subs	r3, #21
 800de92:	f023 0303 	bic.w	r3, r3, #3
 800de96:	3304      	adds	r3, #4
 800de98:	f104 0215 	add.w	r2, r4, #21
 800de9c:	4290      	cmp	r0, r2
 800de9e:	bf38      	it	cc
 800dea0:	2304      	movcc	r3, #4
 800dea2:	f841 c003 	str.w	ip, [r1, r3]
 800dea6:	f1bc 0f00 	cmp.w	ip, #0
 800deaa:	d001      	beq.n	800deb0 <__lshift+0xac>
 800deac:	f108 0602 	add.w	r6, r8, #2
 800deb0:	3e01      	subs	r6, #1
 800deb2:	4638      	mov	r0, r7
 800deb4:	4621      	mov	r1, r4
 800deb6:	612e      	str	r6, [r5, #16]
 800deb8:	f7ff fd8c 	bl	800d9d4 <_Bfree>
 800debc:	4628      	mov	r0, r5
 800debe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dec2:	f842 0f04 	str.w	r0, [r2, #4]!
 800dec6:	3301      	adds	r3, #1
 800dec8:	e7c1      	b.n	800de4e <__lshift+0x4a>
 800deca:	3904      	subs	r1, #4
 800decc:	f853 2b04 	ldr.w	r2, [r3], #4
 800ded0:	4298      	cmp	r0, r3
 800ded2:	f841 2f04 	str.w	r2, [r1, #4]!
 800ded6:	d8f9      	bhi.n	800decc <__lshift+0xc8>
 800ded8:	e7ea      	b.n	800deb0 <__lshift+0xac>
 800deda:	bf00      	nop
 800dedc:	08010958 	.word	0x08010958
 800dee0:	080109e4 	.word	0x080109e4

0800dee4 <__mcmp>:
 800dee4:	4603      	mov	r3, r0
 800dee6:	690a      	ldr	r2, [r1, #16]
 800dee8:	6900      	ldr	r0, [r0, #16]
 800deea:	b530      	push	{r4, r5, lr}
 800deec:	1a80      	subs	r0, r0, r2
 800deee:	d10d      	bne.n	800df0c <__mcmp+0x28>
 800def0:	3314      	adds	r3, #20
 800def2:	3114      	adds	r1, #20
 800def4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800def8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800defc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800df00:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800df04:	4295      	cmp	r5, r2
 800df06:	d002      	beq.n	800df0e <__mcmp+0x2a>
 800df08:	d304      	bcc.n	800df14 <__mcmp+0x30>
 800df0a:	2001      	movs	r0, #1
 800df0c:	bd30      	pop	{r4, r5, pc}
 800df0e:	42a3      	cmp	r3, r4
 800df10:	d3f4      	bcc.n	800defc <__mcmp+0x18>
 800df12:	e7fb      	b.n	800df0c <__mcmp+0x28>
 800df14:	f04f 30ff 	mov.w	r0, #4294967295
 800df18:	e7f8      	b.n	800df0c <__mcmp+0x28>
	...

0800df1c <__mdiff>:
 800df1c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df20:	460d      	mov	r5, r1
 800df22:	4607      	mov	r7, r0
 800df24:	4611      	mov	r1, r2
 800df26:	4628      	mov	r0, r5
 800df28:	4614      	mov	r4, r2
 800df2a:	f7ff ffdb 	bl	800dee4 <__mcmp>
 800df2e:	1e06      	subs	r6, r0, #0
 800df30:	d111      	bne.n	800df56 <__mdiff+0x3a>
 800df32:	4631      	mov	r1, r6
 800df34:	4638      	mov	r0, r7
 800df36:	f7ff fd0d 	bl	800d954 <_Balloc>
 800df3a:	4602      	mov	r2, r0
 800df3c:	b928      	cbnz	r0, 800df4a <__mdiff+0x2e>
 800df3e:	f240 2132 	movw	r1, #562	; 0x232
 800df42:	4b3a      	ldr	r3, [pc, #232]	; (800e02c <__mdiff+0x110>)
 800df44:	483a      	ldr	r0, [pc, #232]	; (800e030 <__mdiff+0x114>)
 800df46:	f001 f85d 	bl	800f004 <__assert_func>
 800df4a:	2301      	movs	r3, #1
 800df4c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800df50:	4610      	mov	r0, r2
 800df52:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df56:	bfa4      	itt	ge
 800df58:	4623      	movge	r3, r4
 800df5a:	462c      	movge	r4, r5
 800df5c:	4638      	mov	r0, r7
 800df5e:	6861      	ldr	r1, [r4, #4]
 800df60:	bfa6      	itte	ge
 800df62:	461d      	movge	r5, r3
 800df64:	2600      	movge	r6, #0
 800df66:	2601      	movlt	r6, #1
 800df68:	f7ff fcf4 	bl	800d954 <_Balloc>
 800df6c:	4602      	mov	r2, r0
 800df6e:	b918      	cbnz	r0, 800df78 <__mdiff+0x5c>
 800df70:	f44f 7110 	mov.w	r1, #576	; 0x240
 800df74:	4b2d      	ldr	r3, [pc, #180]	; (800e02c <__mdiff+0x110>)
 800df76:	e7e5      	b.n	800df44 <__mdiff+0x28>
 800df78:	f102 0814 	add.w	r8, r2, #20
 800df7c:	46c2      	mov	sl, r8
 800df7e:	f04f 0c00 	mov.w	ip, #0
 800df82:	6927      	ldr	r7, [r4, #16]
 800df84:	60c6      	str	r6, [r0, #12]
 800df86:	692e      	ldr	r6, [r5, #16]
 800df88:	f104 0014 	add.w	r0, r4, #20
 800df8c:	f105 0914 	add.w	r9, r5, #20
 800df90:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 800df94:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800df98:	3410      	adds	r4, #16
 800df9a:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800df9e:	f859 3b04 	ldr.w	r3, [r9], #4
 800dfa2:	fa1f f18b 	uxth.w	r1, fp
 800dfa6:	448c      	add	ip, r1
 800dfa8:	b299      	uxth	r1, r3
 800dfaa:	0c1b      	lsrs	r3, r3, #16
 800dfac:	ebac 0101 	sub.w	r1, ip, r1
 800dfb0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800dfb4:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800dfb8:	b289      	uxth	r1, r1
 800dfba:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800dfbe:	454e      	cmp	r6, r9
 800dfc0:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800dfc4:	f84a 3b04 	str.w	r3, [sl], #4
 800dfc8:	d8e7      	bhi.n	800df9a <__mdiff+0x7e>
 800dfca:	1b73      	subs	r3, r6, r5
 800dfcc:	3b15      	subs	r3, #21
 800dfce:	f023 0303 	bic.w	r3, r3, #3
 800dfd2:	3515      	adds	r5, #21
 800dfd4:	3304      	adds	r3, #4
 800dfd6:	42ae      	cmp	r6, r5
 800dfd8:	bf38      	it	cc
 800dfda:	2304      	movcc	r3, #4
 800dfdc:	4418      	add	r0, r3
 800dfde:	4443      	add	r3, r8
 800dfe0:	461e      	mov	r6, r3
 800dfe2:	4605      	mov	r5, r0
 800dfe4:	4575      	cmp	r5, lr
 800dfe6:	d30e      	bcc.n	800e006 <__mdiff+0xea>
 800dfe8:	f10e 0103 	add.w	r1, lr, #3
 800dfec:	1a09      	subs	r1, r1, r0
 800dfee:	f021 0103 	bic.w	r1, r1, #3
 800dff2:	3803      	subs	r0, #3
 800dff4:	4586      	cmp	lr, r0
 800dff6:	bf38      	it	cc
 800dff8:	2100      	movcc	r1, #0
 800dffa:	4419      	add	r1, r3
 800dffc:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800e000:	b18b      	cbz	r3, 800e026 <__mdiff+0x10a>
 800e002:	6117      	str	r7, [r2, #16]
 800e004:	e7a4      	b.n	800df50 <__mdiff+0x34>
 800e006:	f855 8b04 	ldr.w	r8, [r5], #4
 800e00a:	fa1f f188 	uxth.w	r1, r8
 800e00e:	4461      	add	r1, ip
 800e010:	140c      	asrs	r4, r1, #16
 800e012:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800e016:	b289      	uxth	r1, r1
 800e018:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800e01c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800e020:	f846 1b04 	str.w	r1, [r6], #4
 800e024:	e7de      	b.n	800dfe4 <__mdiff+0xc8>
 800e026:	3f01      	subs	r7, #1
 800e028:	e7e8      	b.n	800dffc <__mdiff+0xe0>
 800e02a:	bf00      	nop
 800e02c:	08010958 	.word	0x08010958
 800e030:	080109e4 	.word	0x080109e4

0800e034 <__ulp>:
 800e034:	4b11      	ldr	r3, [pc, #68]	; (800e07c <__ulp+0x48>)
 800e036:	400b      	ands	r3, r1
 800e038:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800e03c:	2b00      	cmp	r3, #0
 800e03e:	dd02      	ble.n	800e046 <__ulp+0x12>
 800e040:	2000      	movs	r0, #0
 800e042:	4619      	mov	r1, r3
 800e044:	4770      	bx	lr
 800e046:	425b      	negs	r3, r3
 800e048:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800e04c:	f04f 0000 	mov.w	r0, #0
 800e050:	f04f 0100 	mov.w	r1, #0
 800e054:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e058:	da04      	bge.n	800e064 <__ulp+0x30>
 800e05a:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800e05e:	fa43 f102 	asr.w	r1, r3, r2
 800e062:	4770      	bx	lr
 800e064:	f1a2 0314 	sub.w	r3, r2, #20
 800e068:	2b1e      	cmp	r3, #30
 800e06a:	bfd6      	itet	le
 800e06c:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800e070:	2301      	movgt	r3, #1
 800e072:	fa22 f303 	lsrle.w	r3, r2, r3
 800e076:	4618      	mov	r0, r3
 800e078:	4770      	bx	lr
 800e07a:	bf00      	nop
 800e07c:	7ff00000 	.word	0x7ff00000

0800e080 <__b2d>:
 800e080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e084:	6907      	ldr	r7, [r0, #16]
 800e086:	f100 0914 	add.w	r9, r0, #20
 800e08a:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 800e08e:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800e092:	f1a7 0804 	sub.w	r8, r7, #4
 800e096:	4630      	mov	r0, r6
 800e098:	f7ff fd4e 	bl	800db38 <__hi0bits>
 800e09c:	f1c0 0320 	rsb	r3, r0, #32
 800e0a0:	280a      	cmp	r0, #10
 800e0a2:	600b      	str	r3, [r1, #0]
 800e0a4:	491f      	ldr	r1, [pc, #124]	; (800e124 <__b2d+0xa4>)
 800e0a6:	dc17      	bgt.n	800e0d8 <__b2d+0x58>
 800e0a8:	45c1      	cmp	r9, r8
 800e0aa:	bf28      	it	cs
 800e0ac:	2200      	movcs	r2, #0
 800e0ae:	f1c0 0c0b 	rsb	ip, r0, #11
 800e0b2:	fa26 f30c 	lsr.w	r3, r6, ip
 800e0b6:	bf38      	it	cc
 800e0b8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e0bc:	ea43 0501 	orr.w	r5, r3, r1
 800e0c0:	f100 0315 	add.w	r3, r0, #21
 800e0c4:	fa06 f303 	lsl.w	r3, r6, r3
 800e0c8:	fa22 f20c 	lsr.w	r2, r2, ip
 800e0cc:	ea43 0402 	orr.w	r4, r3, r2
 800e0d0:	4620      	mov	r0, r4
 800e0d2:	4629      	mov	r1, r5
 800e0d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e0d8:	45c1      	cmp	r9, r8
 800e0da:	bf2e      	itee	cs
 800e0dc:	2200      	movcs	r2, #0
 800e0de:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e0e2:	f1a7 0808 	subcc.w	r8, r7, #8
 800e0e6:	f1b0 030b 	subs.w	r3, r0, #11
 800e0ea:	d016      	beq.n	800e11a <__b2d+0x9a>
 800e0ec:	f1c3 0720 	rsb	r7, r3, #32
 800e0f0:	fa22 f107 	lsr.w	r1, r2, r7
 800e0f4:	45c8      	cmp	r8, r9
 800e0f6:	fa06 f603 	lsl.w	r6, r6, r3
 800e0fa:	ea46 0601 	orr.w	r6, r6, r1
 800e0fe:	bf94      	ite	ls
 800e100:	2100      	movls	r1, #0
 800e102:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800e106:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 800e10a:	fa02 f003 	lsl.w	r0, r2, r3
 800e10e:	40f9      	lsrs	r1, r7
 800e110:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800e114:	ea40 0401 	orr.w	r4, r0, r1
 800e118:	e7da      	b.n	800e0d0 <__b2d+0x50>
 800e11a:	4614      	mov	r4, r2
 800e11c:	ea46 0501 	orr.w	r5, r6, r1
 800e120:	e7d6      	b.n	800e0d0 <__b2d+0x50>
 800e122:	bf00      	nop
 800e124:	3ff00000 	.word	0x3ff00000

0800e128 <__d2b>:
 800e128:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e12c:	2101      	movs	r1, #1
 800e12e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800e132:	4690      	mov	r8, r2
 800e134:	461d      	mov	r5, r3
 800e136:	f7ff fc0d 	bl	800d954 <_Balloc>
 800e13a:	4604      	mov	r4, r0
 800e13c:	b930      	cbnz	r0, 800e14c <__d2b+0x24>
 800e13e:	4602      	mov	r2, r0
 800e140:	f240 310a 	movw	r1, #778	; 0x30a
 800e144:	4b24      	ldr	r3, [pc, #144]	; (800e1d8 <__d2b+0xb0>)
 800e146:	4825      	ldr	r0, [pc, #148]	; (800e1dc <__d2b+0xb4>)
 800e148:	f000 ff5c 	bl	800f004 <__assert_func>
 800e14c:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800e150:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800e154:	bb2d      	cbnz	r5, 800e1a2 <__d2b+0x7a>
 800e156:	9301      	str	r3, [sp, #4]
 800e158:	f1b8 0300 	subs.w	r3, r8, #0
 800e15c:	d026      	beq.n	800e1ac <__d2b+0x84>
 800e15e:	4668      	mov	r0, sp
 800e160:	9300      	str	r3, [sp, #0]
 800e162:	f7ff fd09 	bl	800db78 <__lo0bits>
 800e166:	9900      	ldr	r1, [sp, #0]
 800e168:	b1f0      	cbz	r0, 800e1a8 <__d2b+0x80>
 800e16a:	9a01      	ldr	r2, [sp, #4]
 800e16c:	f1c0 0320 	rsb	r3, r0, #32
 800e170:	fa02 f303 	lsl.w	r3, r2, r3
 800e174:	430b      	orrs	r3, r1
 800e176:	40c2      	lsrs	r2, r0
 800e178:	6163      	str	r3, [r4, #20]
 800e17a:	9201      	str	r2, [sp, #4]
 800e17c:	9b01      	ldr	r3, [sp, #4]
 800e17e:	2b00      	cmp	r3, #0
 800e180:	bf14      	ite	ne
 800e182:	2102      	movne	r1, #2
 800e184:	2101      	moveq	r1, #1
 800e186:	61a3      	str	r3, [r4, #24]
 800e188:	6121      	str	r1, [r4, #16]
 800e18a:	b1c5      	cbz	r5, 800e1be <__d2b+0x96>
 800e18c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800e190:	4405      	add	r5, r0
 800e192:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800e196:	603d      	str	r5, [r7, #0]
 800e198:	6030      	str	r0, [r6, #0]
 800e19a:	4620      	mov	r0, r4
 800e19c:	b002      	add	sp, #8
 800e19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1a2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800e1a6:	e7d6      	b.n	800e156 <__d2b+0x2e>
 800e1a8:	6161      	str	r1, [r4, #20]
 800e1aa:	e7e7      	b.n	800e17c <__d2b+0x54>
 800e1ac:	a801      	add	r0, sp, #4
 800e1ae:	f7ff fce3 	bl	800db78 <__lo0bits>
 800e1b2:	2101      	movs	r1, #1
 800e1b4:	9b01      	ldr	r3, [sp, #4]
 800e1b6:	6121      	str	r1, [r4, #16]
 800e1b8:	6163      	str	r3, [r4, #20]
 800e1ba:	3020      	adds	r0, #32
 800e1bc:	e7e5      	b.n	800e18a <__d2b+0x62>
 800e1be:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e1c2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800e1c6:	6038      	str	r0, [r7, #0]
 800e1c8:	6918      	ldr	r0, [r3, #16]
 800e1ca:	f7ff fcb5 	bl	800db38 <__hi0bits>
 800e1ce:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800e1d2:	6031      	str	r1, [r6, #0]
 800e1d4:	e7e1      	b.n	800e19a <__d2b+0x72>
 800e1d6:	bf00      	nop
 800e1d8:	08010958 	.word	0x08010958
 800e1dc:	080109e4 	.word	0x080109e4

0800e1e0 <__ratio>:
 800e1e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1e4:	4688      	mov	r8, r1
 800e1e6:	4669      	mov	r1, sp
 800e1e8:	4681      	mov	r9, r0
 800e1ea:	f7ff ff49 	bl	800e080 <__b2d>
 800e1ee:	460f      	mov	r7, r1
 800e1f0:	4604      	mov	r4, r0
 800e1f2:	460d      	mov	r5, r1
 800e1f4:	4640      	mov	r0, r8
 800e1f6:	a901      	add	r1, sp, #4
 800e1f8:	f7ff ff42 	bl	800e080 <__b2d>
 800e1fc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e200:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800e204:	468b      	mov	fp, r1
 800e206:	eba3 0c02 	sub.w	ip, r3, r2
 800e20a:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e20e:	1a9b      	subs	r3, r3, r2
 800e210:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800e214:	2b00      	cmp	r3, #0
 800e216:	bfd5      	itete	le
 800e218:	460a      	movle	r2, r1
 800e21a:	462a      	movgt	r2, r5
 800e21c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800e220:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800e224:	bfd8      	it	le
 800e226:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800e22a:	465b      	mov	r3, fp
 800e22c:	4602      	mov	r2, r0
 800e22e:	4639      	mov	r1, r7
 800e230:	4620      	mov	r0, r4
 800e232:	f7f2 fa9d 	bl	8000770 <__aeabi_ddiv>
 800e236:	b003      	add	sp, #12
 800e238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e23c <__copybits>:
 800e23c:	3901      	subs	r1, #1
 800e23e:	b570      	push	{r4, r5, r6, lr}
 800e240:	1149      	asrs	r1, r1, #5
 800e242:	6914      	ldr	r4, [r2, #16]
 800e244:	3101      	adds	r1, #1
 800e246:	f102 0314 	add.w	r3, r2, #20
 800e24a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e24e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e252:	1f05      	subs	r5, r0, #4
 800e254:	42a3      	cmp	r3, r4
 800e256:	d30c      	bcc.n	800e272 <__copybits+0x36>
 800e258:	1aa3      	subs	r3, r4, r2
 800e25a:	3b11      	subs	r3, #17
 800e25c:	f023 0303 	bic.w	r3, r3, #3
 800e260:	3211      	adds	r2, #17
 800e262:	42a2      	cmp	r2, r4
 800e264:	bf88      	it	hi
 800e266:	2300      	movhi	r3, #0
 800e268:	4418      	add	r0, r3
 800e26a:	2300      	movs	r3, #0
 800e26c:	4288      	cmp	r0, r1
 800e26e:	d305      	bcc.n	800e27c <__copybits+0x40>
 800e270:	bd70      	pop	{r4, r5, r6, pc}
 800e272:	f853 6b04 	ldr.w	r6, [r3], #4
 800e276:	f845 6f04 	str.w	r6, [r5, #4]!
 800e27a:	e7eb      	b.n	800e254 <__copybits+0x18>
 800e27c:	f840 3b04 	str.w	r3, [r0], #4
 800e280:	e7f4      	b.n	800e26c <__copybits+0x30>

0800e282 <__any_on>:
 800e282:	f100 0214 	add.w	r2, r0, #20
 800e286:	6900      	ldr	r0, [r0, #16]
 800e288:	114b      	asrs	r3, r1, #5
 800e28a:	4298      	cmp	r0, r3
 800e28c:	b510      	push	{r4, lr}
 800e28e:	db11      	blt.n	800e2b4 <__any_on+0x32>
 800e290:	dd0a      	ble.n	800e2a8 <__any_on+0x26>
 800e292:	f011 011f 	ands.w	r1, r1, #31
 800e296:	d007      	beq.n	800e2a8 <__any_on+0x26>
 800e298:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e29c:	fa24 f001 	lsr.w	r0, r4, r1
 800e2a0:	fa00 f101 	lsl.w	r1, r0, r1
 800e2a4:	428c      	cmp	r4, r1
 800e2a6:	d10b      	bne.n	800e2c0 <__any_on+0x3e>
 800e2a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e2ac:	4293      	cmp	r3, r2
 800e2ae:	d803      	bhi.n	800e2b8 <__any_on+0x36>
 800e2b0:	2000      	movs	r0, #0
 800e2b2:	bd10      	pop	{r4, pc}
 800e2b4:	4603      	mov	r3, r0
 800e2b6:	e7f7      	b.n	800e2a8 <__any_on+0x26>
 800e2b8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e2bc:	2900      	cmp	r1, #0
 800e2be:	d0f5      	beq.n	800e2ac <__any_on+0x2a>
 800e2c0:	2001      	movs	r0, #1
 800e2c2:	e7f6      	b.n	800e2b2 <__any_on+0x30>

0800e2c4 <_calloc_r>:
 800e2c4:	b570      	push	{r4, r5, r6, lr}
 800e2c6:	fba1 5402 	umull	r5, r4, r1, r2
 800e2ca:	b934      	cbnz	r4, 800e2da <_calloc_r+0x16>
 800e2cc:	4629      	mov	r1, r5
 800e2ce:	f000 f875 	bl	800e3bc <_malloc_r>
 800e2d2:	4606      	mov	r6, r0
 800e2d4:	b928      	cbnz	r0, 800e2e2 <_calloc_r+0x1e>
 800e2d6:	4630      	mov	r0, r6
 800e2d8:	bd70      	pop	{r4, r5, r6, pc}
 800e2da:	220c      	movs	r2, #12
 800e2dc:	2600      	movs	r6, #0
 800e2de:	6002      	str	r2, [r0, #0]
 800e2e0:	e7f9      	b.n	800e2d6 <_calloc_r+0x12>
 800e2e2:	462a      	mov	r2, r5
 800e2e4:	4621      	mov	r1, r4
 800e2e6:	f7fc fb5b 	bl	800a9a0 <memset>
 800e2ea:	e7f4      	b.n	800e2d6 <_calloc_r+0x12>

0800e2ec <_free_r>:
 800e2ec:	b538      	push	{r3, r4, r5, lr}
 800e2ee:	4605      	mov	r5, r0
 800e2f0:	2900      	cmp	r1, #0
 800e2f2:	d040      	beq.n	800e376 <_free_r+0x8a>
 800e2f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e2f8:	1f0c      	subs	r4, r1, #4
 800e2fa:	2b00      	cmp	r3, #0
 800e2fc:	bfb8      	it	lt
 800e2fe:	18e4      	addlt	r4, r4, r3
 800e300:	f001 f880 	bl	800f404 <__malloc_lock>
 800e304:	4a1c      	ldr	r2, [pc, #112]	; (800e378 <_free_r+0x8c>)
 800e306:	6813      	ldr	r3, [r2, #0]
 800e308:	b933      	cbnz	r3, 800e318 <_free_r+0x2c>
 800e30a:	6063      	str	r3, [r4, #4]
 800e30c:	6014      	str	r4, [r2, #0]
 800e30e:	4628      	mov	r0, r5
 800e310:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e314:	f001 b87c 	b.w	800f410 <__malloc_unlock>
 800e318:	42a3      	cmp	r3, r4
 800e31a:	d908      	bls.n	800e32e <_free_r+0x42>
 800e31c:	6820      	ldr	r0, [r4, #0]
 800e31e:	1821      	adds	r1, r4, r0
 800e320:	428b      	cmp	r3, r1
 800e322:	bf01      	itttt	eq
 800e324:	6819      	ldreq	r1, [r3, #0]
 800e326:	685b      	ldreq	r3, [r3, #4]
 800e328:	1809      	addeq	r1, r1, r0
 800e32a:	6021      	streq	r1, [r4, #0]
 800e32c:	e7ed      	b.n	800e30a <_free_r+0x1e>
 800e32e:	461a      	mov	r2, r3
 800e330:	685b      	ldr	r3, [r3, #4]
 800e332:	b10b      	cbz	r3, 800e338 <_free_r+0x4c>
 800e334:	42a3      	cmp	r3, r4
 800e336:	d9fa      	bls.n	800e32e <_free_r+0x42>
 800e338:	6811      	ldr	r1, [r2, #0]
 800e33a:	1850      	adds	r0, r2, r1
 800e33c:	42a0      	cmp	r0, r4
 800e33e:	d10b      	bne.n	800e358 <_free_r+0x6c>
 800e340:	6820      	ldr	r0, [r4, #0]
 800e342:	4401      	add	r1, r0
 800e344:	1850      	adds	r0, r2, r1
 800e346:	4283      	cmp	r3, r0
 800e348:	6011      	str	r1, [r2, #0]
 800e34a:	d1e0      	bne.n	800e30e <_free_r+0x22>
 800e34c:	6818      	ldr	r0, [r3, #0]
 800e34e:	685b      	ldr	r3, [r3, #4]
 800e350:	4401      	add	r1, r0
 800e352:	6011      	str	r1, [r2, #0]
 800e354:	6053      	str	r3, [r2, #4]
 800e356:	e7da      	b.n	800e30e <_free_r+0x22>
 800e358:	d902      	bls.n	800e360 <_free_r+0x74>
 800e35a:	230c      	movs	r3, #12
 800e35c:	602b      	str	r3, [r5, #0]
 800e35e:	e7d6      	b.n	800e30e <_free_r+0x22>
 800e360:	6820      	ldr	r0, [r4, #0]
 800e362:	1821      	adds	r1, r4, r0
 800e364:	428b      	cmp	r3, r1
 800e366:	bf01      	itttt	eq
 800e368:	6819      	ldreq	r1, [r3, #0]
 800e36a:	685b      	ldreq	r3, [r3, #4]
 800e36c:	1809      	addeq	r1, r1, r0
 800e36e:	6021      	streq	r1, [r4, #0]
 800e370:	6063      	str	r3, [r4, #4]
 800e372:	6054      	str	r4, [r2, #4]
 800e374:	e7cb      	b.n	800e30e <_free_r+0x22>
 800e376:	bd38      	pop	{r3, r4, r5, pc}
 800e378:	20001430 	.word	0x20001430

0800e37c <sbrk_aligned>:
 800e37c:	b570      	push	{r4, r5, r6, lr}
 800e37e:	4e0e      	ldr	r6, [pc, #56]	; (800e3b8 <sbrk_aligned+0x3c>)
 800e380:	460c      	mov	r4, r1
 800e382:	6831      	ldr	r1, [r6, #0]
 800e384:	4605      	mov	r5, r0
 800e386:	b911      	cbnz	r1, 800e38e <sbrk_aligned+0x12>
 800e388:	f000 fd26 	bl	800edd8 <_sbrk_r>
 800e38c:	6030      	str	r0, [r6, #0]
 800e38e:	4621      	mov	r1, r4
 800e390:	4628      	mov	r0, r5
 800e392:	f000 fd21 	bl	800edd8 <_sbrk_r>
 800e396:	1c43      	adds	r3, r0, #1
 800e398:	d00a      	beq.n	800e3b0 <sbrk_aligned+0x34>
 800e39a:	1cc4      	adds	r4, r0, #3
 800e39c:	f024 0403 	bic.w	r4, r4, #3
 800e3a0:	42a0      	cmp	r0, r4
 800e3a2:	d007      	beq.n	800e3b4 <sbrk_aligned+0x38>
 800e3a4:	1a21      	subs	r1, r4, r0
 800e3a6:	4628      	mov	r0, r5
 800e3a8:	f000 fd16 	bl	800edd8 <_sbrk_r>
 800e3ac:	3001      	adds	r0, #1
 800e3ae:	d101      	bne.n	800e3b4 <sbrk_aligned+0x38>
 800e3b0:	f04f 34ff 	mov.w	r4, #4294967295
 800e3b4:	4620      	mov	r0, r4
 800e3b6:	bd70      	pop	{r4, r5, r6, pc}
 800e3b8:	20001434 	.word	0x20001434

0800e3bc <_malloc_r>:
 800e3bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3c0:	1ccd      	adds	r5, r1, #3
 800e3c2:	f025 0503 	bic.w	r5, r5, #3
 800e3c6:	3508      	adds	r5, #8
 800e3c8:	2d0c      	cmp	r5, #12
 800e3ca:	bf38      	it	cc
 800e3cc:	250c      	movcc	r5, #12
 800e3ce:	2d00      	cmp	r5, #0
 800e3d0:	4607      	mov	r7, r0
 800e3d2:	db01      	blt.n	800e3d8 <_malloc_r+0x1c>
 800e3d4:	42a9      	cmp	r1, r5
 800e3d6:	d905      	bls.n	800e3e4 <_malloc_r+0x28>
 800e3d8:	230c      	movs	r3, #12
 800e3da:	2600      	movs	r6, #0
 800e3dc:	603b      	str	r3, [r7, #0]
 800e3de:	4630      	mov	r0, r6
 800e3e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e3e4:	4e2e      	ldr	r6, [pc, #184]	; (800e4a0 <_malloc_r+0xe4>)
 800e3e6:	f001 f80d 	bl	800f404 <__malloc_lock>
 800e3ea:	6833      	ldr	r3, [r6, #0]
 800e3ec:	461c      	mov	r4, r3
 800e3ee:	bb34      	cbnz	r4, 800e43e <_malloc_r+0x82>
 800e3f0:	4629      	mov	r1, r5
 800e3f2:	4638      	mov	r0, r7
 800e3f4:	f7ff ffc2 	bl	800e37c <sbrk_aligned>
 800e3f8:	1c43      	adds	r3, r0, #1
 800e3fa:	4604      	mov	r4, r0
 800e3fc:	d14d      	bne.n	800e49a <_malloc_r+0xde>
 800e3fe:	6834      	ldr	r4, [r6, #0]
 800e400:	4626      	mov	r6, r4
 800e402:	2e00      	cmp	r6, #0
 800e404:	d140      	bne.n	800e488 <_malloc_r+0xcc>
 800e406:	6823      	ldr	r3, [r4, #0]
 800e408:	4631      	mov	r1, r6
 800e40a:	4638      	mov	r0, r7
 800e40c:	eb04 0803 	add.w	r8, r4, r3
 800e410:	f000 fce2 	bl	800edd8 <_sbrk_r>
 800e414:	4580      	cmp	r8, r0
 800e416:	d13a      	bne.n	800e48e <_malloc_r+0xd2>
 800e418:	6821      	ldr	r1, [r4, #0]
 800e41a:	3503      	adds	r5, #3
 800e41c:	1a6d      	subs	r5, r5, r1
 800e41e:	f025 0503 	bic.w	r5, r5, #3
 800e422:	3508      	adds	r5, #8
 800e424:	2d0c      	cmp	r5, #12
 800e426:	bf38      	it	cc
 800e428:	250c      	movcc	r5, #12
 800e42a:	4638      	mov	r0, r7
 800e42c:	4629      	mov	r1, r5
 800e42e:	f7ff ffa5 	bl	800e37c <sbrk_aligned>
 800e432:	3001      	adds	r0, #1
 800e434:	d02b      	beq.n	800e48e <_malloc_r+0xd2>
 800e436:	6823      	ldr	r3, [r4, #0]
 800e438:	442b      	add	r3, r5
 800e43a:	6023      	str	r3, [r4, #0]
 800e43c:	e00e      	b.n	800e45c <_malloc_r+0xa0>
 800e43e:	6822      	ldr	r2, [r4, #0]
 800e440:	1b52      	subs	r2, r2, r5
 800e442:	d41e      	bmi.n	800e482 <_malloc_r+0xc6>
 800e444:	2a0b      	cmp	r2, #11
 800e446:	d916      	bls.n	800e476 <_malloc_r+0xba>
 800e448:	1961      	adds	r1, r4, r5
 800e44a:	42a3      	cmp	r3, r4
 800e44c:	6025      	str	r5, [r4, #0]
 800e44e:	bf18      	it	ne
 800e450:	6059      	strne	r1, [r3, #4]
 800e452:	6863      	ldr	r3, [r4, #4]
 800e454:	bf08      	it	eq
 800e456:	6031      	streq	r1, [r6, #0]
 800e458:	5162      	str	r2, [r4, r5]
 800e45a:	604b      	str	r3, [r1, #4]
 800e45c:	4638      	mov	r0, r7
 800e45e:	f104 060b 	add.w	r6, r4, #11
 800e462:	f000 ffd5 	bl	800f410 <__malloc_unlock>
 800e466:	f026 0607 	bic.w	r6, r6, #7
 800e46a:	1d23      	adds	r3, r4, #4
 800e46c:	1af2      	subs	r2, r6, r3
 800e46e:	d0b6      	beq.n	800e3de <_malloc_r+0x22>
 800e470:	1b9b      	subs	r3, r3, r6
 800e472:	50a3      	str	r3, [r4, r2]
 800e474:	e7b3      	b.n	800e3de <_malloc_r+0x22>
 800e476:	6862      	ldr	r2, [r4, #4]
 800e478:	42a3      	cmp	r3, r4
 800e47a:	bf0c      	ite	eq
 800e47c:	6032      	streq	r2, [r6, #0]
 800e47e:	605a      	strne	r2, [r3, #4]
 800e480:	e7ec      	b.n	800e45c <_malloc_r+0xa0>
 800e482:	4623      	mov	r3, r4
 800e484:	6864      	ldr	r4, [r4, #4]
 800e486:	e7b2      	b.n	800e3ee <_malloc_r+0x32>
 800e488:	4634      	mov	r4, r6
 800e48a:	6876      	ldr	r6, [r6, #4]
 800e48c:	e7b9      	b.n	800e402 <_malloc_r+0x46>
 800e48e:	230c      	movs	r3, #12
 800e490:	4638      	mov	r0, r7
 800e492:	603b      	str	r3, [r7, #0]
 800e494:	f000 ffbc 	bl	800f410 <__malloc_unlock>
 800e498:	e7a1      	b.n	800e3de <_malloc_r+0x22>
 800e49a:	6025      	str	r5, [r4, #0]
 800e49c:	e7de      	b.n	800e45c <_malloc_r+0xa0>
 800e49e:	bf00      	nop
 800e4a0:	20001430 	.word	0x20001430

0800e4a4 <__ssputs_r>:
 800e4a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e4a8:	688e      	ldr	r6, [r1, #8]
 800e4aa:	4682      	mov	sl, r0
 800e4ac:	429e      	cmp	r6, r3
 800e4ae:	460c      	mov	r4, r1
 800e4b0:	4690      	mov	r8, r2
 800e4b2:	461f      	mov	r7, r3
 800e4b4:	d838      	bhi.n	800e528 <__ssputs_r+0x84>
 800e4b6:	898a      	ldrh	r2, [r1, #12]
 800e4b8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e4bc:	d032      	beq.n	800e524 <__ssputs_r+0x80>
 800e4be:	6825      	ldr	r5, [r4, #0]
 800e4c0:	6909      	ldr	r1, [r1, #16]
 800e4c2:	3301      	adds	r3, #1
 800e4c4:	eba5 0901 	sub.w	r9, r5, r1
 800e4c8:	6965      	ldr	r5, [r4, #20]
 800e4ca:	444b      	add	r3, r9
 800e4cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e4d0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e4d4:	106d      	asrs	r5, r5, #1
 800e4d6:	429d      	cmp	r5, r3
 800e4d8:	bf38      	it	cc
 800e4da:	461d      	movcc	r5, r3
 800e4dc:	0553      	lsls	r3, r2, #21
 800e4de:	d531      	bpl.n	800e544 <__ssputs_r+0xa0>
 800e4e0:	4629      	mov	r1, r5
 800e4e2:	f7ff ff6b 	bl	800e3bc <_malloc_r>
 800e4e6:	4606      	mov	r6, r0
 800e4e8:	b950      	cbnz	r0, 800e500 <__ssputs_r+0x5c>
 800e4ea:	230c      	movs	r3, #12
 800e4ec:	f04f 30ff 	mov.w	r0, #4294967295
 800e4f0:	f8ca 3000 	str.w	r3, [sl]
 800e4f4:	89a3      	ldrh	r3, [r4, #12]
 800e4f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e4fa:	81a3      	strh	r3, [r4, #12]
 800e4fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e500:	464a      	mov	r2, r9
 800e502:	6921      	ldr	r1, [r4, #16]
 800e504:	f7fc fa3e 	bl	800a984 <memcpy>
 800e508:	89a3      	ldrh	r3, [r4, #12]
 800e50a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e50e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e512:	81a3      	strh	r3, [r4, #12]
 800e514:	6126      	str	r6, [r4, #16]
 800e516:	444e      	add	r6, r9
 800e518:	6026      	str	r6, [r4, #0]
 800e51a:	463e      	mov	r6, r7
 800e51c:	6165      	str	r5, [r4, #20]
 800e51e:	eba5 0509 	sub.w	r5, r5, r9
 800e522:	60a5      	str	r5, [r4, #8]
 800e524:	42be      	cmp	r6, r7
 800e526:	d900      	bls.n	800e52a <__ssputs_r+0x86>
 800e528:	463e      	mov	r6, r7
 800e52a:	4632      	mov	r2, r6
 800e52c:	4641      	mov	r1, r8
 800e52e:	6820      	ldr	r0, [r4, #0]
 800e530:	f000 ff4e 	bl	800f3d0 <memmove>
 800e534:	68a3      	ldr	r3, [r4, #8]
 800e536:	2000      	movs	r0, #0
 800e538:	1b9b      	subs	r3, r3, r6
 800e53a:	60a3      	str	r3, [r4, #8]
 800e53c:	6823      	ldr	r3, [r4, #0]
 800e53e:	4433      	add	r3, r6
 800e540:	6023      	str	r3, [r4, #0]
 800e542:	e7db      	b.n	800e4fc <__ssputs_r+0x58>
 800e544:	462a      	mov	r2, r5
 800e546:	f000 ff69 	bl	800f41c <_realloc_r>
 800e54a:	4606      	mov	r6, r0
 800e54c:	2800      	cmp	r0, #0
 800e54e:	d1e1      	bne.n	800e514 <__ssputs_r+0x70>
 800e550:	4650      	mov	r0, sl
 800e552:	6921      	ldr	r1, [r4, #16]
 800e554:	f7ff feca 	bl	800e2ec <_free_r>
 800e558:	e7c7      	b.n	800e4ea <__ssputs_r+0x46>
	...

0800e55c <_svfiprintf_r>:
 800e55c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e560:	4698      	mov	r8, r3
 800e562:	898b      	ldrh	r3, [r1, #12]
 800e564:	4607      	mov	r7, r0
 800e566:	061b      	lsls	r3, r3, #24
 800e568:	460d      	mov	r5, r1
 800e56a:	4614      	mov	r4, r2
 800e56c:	b09d      	sub	sp, #116	; 0x74
 800e56e:	d50e      	bpl.n	800e58e <_svfiprintf_r+0x32>
 800e570:	690b      	ldr	r3, [r1, #16]
 800e572:	b963      	cbnz	r3, 800e58e <_svfiprintf_r+0x32>
 800e574:	2140      	movs	r1, #64	; 0x40
 800e576:	f7ff ff21 	bl	800e3bc <_malloc_r>
 800e57a:	6028      	str	r0, [r5, #0]
 800e57c:	6128      	str	r0, [r5, #16]
 800e57e:	b920      	cbnz	r0, 800e58a <_svfiprintf_r+0x2e>
 800e580:	230c      	movs	r3, #12
 800e582:	603b      	str	r3, [r7, #0]
 800e584:	f04f 30ff 	mov.w	r0, #4294967295
 800e588:	e0d1      	b.n	800e72e <_svfiprintf_r+0x1d2>
 800e58a:	2340      	movs	r3, #64	; 0x40
 800e58c:	616b      	str	r3, [r5, #20]
 800e58e:	2300      	movs	r3, #0
 800e590:	9309      	str	r3, [sp, #36]	; 0x24
 800e592:	2320      	movs	r3, #32
 800e594:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e598:	2330      	movs	r3, #48	; 0x30
 800e59a:	f04f 0901 	mov.w	r9, #1
 800e59e:	f8cd 800c 	str.w	r8, [sp, #12]
 800e5a2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800e748 <_svfiprintf_r+0x1ec>
 800e5a6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e5aa:	4623      	mov	r3, r4
 800e5ac:	469a      	mov	sl, r3
 800e5ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e5b2:	b10a      	cbz	r2, 800e5b8 <_svfiprintf_r+0x5c>
 800e5b4:	2a25      	cmp	r2, #37	; 0x25
 800e5b6:	d1f9      	bne.n	800e5ac <_svfiprintf_r+0x50>
 800e5b8:	ebba 0b04 	subs.w	fp, sl, r4
 800e5bc:	d00b      	beq.n	800e5d6 <_svfiprintf_r+0x7a>
 800e5be:	465b      	mov	r3, fp
 800e5c0:	4622      	mov	r2, r4
 800e5c2:	4629      	mov	r1, r5
 800e5c4:	4638      	mov	r0, r7
 800e5c6:	f7ff ff6d 	bl	800e4a4 <__ssputs_r>
 800e5ca:	3001      	adds	r0, #1
 800e5cc:	f000 80aa 	beq.w	800e724 <_svfiprintf_r+0x1c8>
 800e5d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e5d2:	445a      	add	r2, fp
 800e5d4:	9209      	str	r2, [sp, #36]	; 0x24
 800e5d6:	f89a 3000 	ldrb.w	r3, [sl]
 800e5da:	2b00      	cmp	r3, #0
 800e5dc:	f000 80a2 	beq.w	800e724 <_svfiprintf_r+0x1c8>
 800e5e0:	2300      	movs	r3, #0
 800e5e2:	f04f 32ff 	mov.w	r2, #4294967295
 800e5e6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e5ea:	f10a 0a01 	add.w	sl, sl, #1
 800e5ee:	9304      	str	r3, [sp, #16]
 800e5f0:	9307      	str	r3, [sp, #28]
 800e5f2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e5f6:	931a      	str	r3, [sp, #104]	; 0x68
 800e5f8:	4654      	mov	r4, sl
 800e5fa:	2205      	movs	r2, #5
 800e5fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e600:	4851      	ldr	r0, [pc, #324]	; (800e748 <_svfiprintf_r+0x1ec>)
 800e602:	f7ff f999 	bl	800d938 <memchr>
 800e606:	9a04      	ldr	r2, [sp, #16]
 800e608:	b9d8      	cbnz	r0, 800e642 <_svfiprintf_r+0xe6>
 800e60a:	06d0      	lsls	r0, r2, #27
 800e60c:	bf44      	itt	mi
 800e60e:	2320      	movmi	r3, #32
 800e610:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e614:	0711      	lsls	r1, r2, #28
 800e616:	bf44      	itt	mi
 800e618:	232b      	movmi	r3, #43	; 0x2b
 800e61a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e61e:	f89a 3000 	ldrb.w	r3, [sl]
 800e622:	2b2a      	cmp	r3, #42	; 0x2a
 800e624:	d015      	beq.n	800e652 <_svfiprintf_r+0xf6>
 800e626:	4654      	mov	r4, sl
 800e628:	2000      	movs	r0, #0
 800e62a:	f04f 0c0a 	mov.w	ip, #10
 800e62e:	9a07      	ldr	r2, [sp, #28]
 800e630:	4621      	mov	r1, r4
 800e632:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e636:	3b30      	subs	r3, #48	; 0x30
 800e638:	2b09      	cmp	r3, #9
 800e63a:	d94e      	bls.n	800e6da <_svfiprintf_r+0x17e>
 800e63c:	b1b0      	cbz	r0, 800e66c <_svfiprintf_r+0x110>
 800e63e:	9207      	str	r2, [sp, #28]
 800e640:	e014      	b.n	800e66c <_svfiprintf_r+0x110>
 800e642:	eba0 0308 	sub.w	r3, r0, r8
 800e646:	fa09 f303 	lsl.w	r3, r9, r3
 800e64a:	4313      	orrs	r3, r2
 800e64c:	46a2      	mov	sl, r4
 800e64e:	9304      	str	r3, [sp, #16]
 800e650:	e7d2      	b.n	800e5f8 <_svfiprintf_r+0x9c>
 800e652:	9b03      	ldr	r3, [sp, #12]
 800e654:	1d19      	adds	r1, r3, #4
 800e656:	681b      	ldr	r3, [r3, #0]
 800e658:	9103      	str	r1, [sp, #12]
 800e65a:	2b00      	cmp	r3, #0
 800e65c:	bfbb      	ittet	lt
 800e65e:	425b      	neglt	r3, r3
 800e660:	f042 0202 	orrlt.w	r2, r2, #2
 800e664:	9307      	strge	r3, [sp, #28]
 800e666:	9307      	strlt	r3, [sp, #28]
 800e668:	bfb8      	it	lt
 800e66a:	9204      	strlt	r2, [sp, #16]
 800e66c:	7823      	ldrb	r3, [r4, #0]
 800e66e:	2b2e      	cmp	r3, #46	; 0x2e
 800e670:	d10c      	bne.n	800e68c <_svfiprintf_r+0x130>
 800e672:	7863      	ldrb	r3, [r4, #1]
 800e674:	2b2a      	cmp	r3, #42	; 0x2a
 800e676:	d135      	bne.n	800e6e4 <_svfiprintf_r+0x188>
 800e678:	9b03      	ldr	r3, [sp, #12]
 800e67a:	3402      	adds	r4, #2
 800e67c:	1d1a      	adds	r2, r3, #4
 800e67e:	681b      	ldr	r3, [r3, #0]
 800e680:	9203      	str	r2, [sp, #12]
 800e682:	2b00      	cmp	r3, #0
 800e684:	bfb8      	it	lt
 800e686:	f04f 33ff 	movlt.w	r3, #4294967295
 800e68a:	9305      	str	r3, [sp, #20]
 800e68c:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800e74c <_svfiprintf_r+0x1f0>
 800e690:	2203      	movs	r2, #3
 800e692:	4650      	mov	r0, sl
 800e694:	7821      	ldrb	r1, [r4, #0]
 800e696:	f7ff f94f 	bl	800d938 <memchr>
 800e69a:	b140      	cbz	r0, 800e6ae <_svfiprintf_r+0x152>
 800e69c:	2340      	movs	r3, #64	; 0x40
 800e69e:	eba0 000a 	sub.w	r0, r0, sl
 800e6a2:	fa03 f000 	lsl.w	r0, r3, r0
 800e6a6:	9b04      	ldr	r3, [sp, #16]
 800e6a8:	3401      	adds	r4, #1
 800e6aa:	4303      	orrs	r3, r0
 800e6ac:	9304      	str	r3, [sp, #16]
 800e6ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e6b2:	2206      	movs	r2, #6
 800e6b4:	4826      	ldr	r0, [pc, #152]	; (800e750 <_svfiprintf_r+0x1f4>)
 800e6b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e6ba:	f7ff f93d 	bl	800d938 <memchr>
 800e6be:	2800      	cmp	r0, #0
 800e6c0:	d038      	beq.n	800e734 <_svfiprintf_r+0x1d8>
 800e6c2:	4b24      	ldr	r3, [pc, #144]	; (800e754 <_svfiprintf_r+0x1f8>)
 800e6c4:	bb1b      	cbnz	r3, 800e70e <_svfiprintf_r+0x1b2>
 800e6c6:	9b03      	ldr	r3, [sp, #12]
 800e6c8:	3307      	adds	r3, #7
 800e6ca:	f023 0307 	bic.w	r3, r3, #7
 800e6ce:	3308      	adds	r3, #8
 800e6d0:	9303      	str	r3, [sp, #12]
 800e6d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e6d4:	4433      	add	r3, r6
 800e6d6:	9309      	str	r3, [sp, #36]	; 0x24
 800e6d8:	e767      	b.n	800e5aa <_svfiprintf_r+0x4e>
 800e6da:	460c      	mov	r4, r1
 800e6dc:	2001      	movs	r0, #1
 800e6de:	fb0c 3202 	mla	r2, ip, r2, r3
 800e6e2:	e7a5      	b.n	800e630 <_svfiprintf_r+0xd4>
 800e6e4:	2300      	movs	r3, #0
 800e6e6:	f04f 0c0a 	mov.w	ip, #10
 800e6ea:	4619      	mov	r1, r3
 800e6ec:	3401      	adds	r4, #1
 800e6ee:	9305      	str	r3, [sp, #20]
 800e6f0:	4620      	mov	r0, r4
 800e6f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e6f6:	3a30      	subs	r2, #48	; 0x30
 800e6f8:	2a09      	cmp	r2, #9
 800e6fa:	d903      	bls.n	800e704 <_svfiprintf_r+0x1a8>
 800e6fc:	2b00      	cmp	r3, #0
 800e6fe:	d0c5      	beq.n	800e68c <_svfiprintf_r+0x130>
 800e700:	9105      	str	r1, [sp, #20]
 800e702:	e7c3      	b.n	800e68c <_svfiprintf_r+0x130>
 800e704:	4604      	mov	r4, r0
 800e706:	2301      	movs	r3, #1
 800e708:	fb0c 2101 	mla	r1, ip, r1, r2
 800e70c:	e7f0      	b.n	800e6f0 <_svfiprintf_r+0x194>
 800e70e:	ab03      	add	r3, sp, #12
 800e710:	9300      	str	r3, [sp, #0]
 800e712:	462a      	mov	r2, r5
 800e714:	4638      	mov	r0, r7
 800e716:	4b10      	ldr	r3, [pc, #64]	; (800e758 <_svfiprintf_r+0x1fc>)
 800e718:	a904      	add	r1, sp, #16
 800e71a:	f7fc f9e7 	bl	800aaec <_printf_float>
 800e71e:	1c42      	adds	r2, r0, #1
 800e720:	4606      	mov	r6, r0
 800e722:	d1d6      	bne.n	800e6d2 <_svfiprintf_r+0x176>
 800e724:	89ab      	ldrh	r3, [r5, #12]
 800e726:	065b      	lsls	r3, r3, #25
 800e728:	f53f af2c 	bmi.w	800e584 <_svfiprintf_r+0x28>
 800e72c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e72e:	b01d      	add	sp, #116	; 0x74
 800e730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e734:	ab03      	add	r3, sp, #12
 800e736:	9300      	str	r3, [sp, #0]
 800e738:	462a      	mov	r2, r5
 800e73a:	4638      	mov	r0, r7
 800e73c:	4b06      	ldr	r3, [pc, #24]	; (800e758 <_svfiprintf_r+0x1fc>)
 800e73e:	a904      	add	r1, sp, #16
 800e740:	f7fc fc70 	bl	800b024 <_printf_i>
 800e744:	e7eb      	b.n	800e71e <_svfiprintf_r+0x1c2>
 800e746:	bf00      	nop
 800e748:	08010b3c 	.word	0x08010b3c
 800e74c:	08010b42 	.word	0x08010b42
 800e750:	08010b46 	.word	0x08010b46
 800e754:	0800aaed 	.word	0x0800aaed
 800e758:	0800e4a5 	.word	0x0800e4a5

0800e75c <_sungetc_r>:
 800e75c:	b538      	push	{r3, r4, r5, lr}
 800e75e:	1c4b      	adds	r3, r1, #1
 800e760:	4614      	mov	r4, r2
 800e762:	d103      	bne.n	800e76c <_sungetc_r+0x10>
 800e764:	f04f 35ff 	mov.w	r5, #4294967295
 800e768:	4628      	mov	r0, r5
 800e76a:	bd38      	pop	{r3, r4, r5, pc}
 800e76c:	8993      	ldrh	r3, [r2, #12]
 800e76e:	b2cd      	uxtb	r5, r1
 800e770:	f023 0320 	bic.w	r3, r3, #32
 800e774:	8193      	strh	r3, [r2, #12]
 800e776:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e778:	6852      	ldr	r2, [r2, #4]
 800e77a:	b18b      	cbz	r3, 800e7a0 <_sungetc_r+0x44>
 800e77c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e77e:	4293      	cmp	r3, r2
 800e780:	dd08      	ble.n	800e794 <_sungetc_r+0x38>
 800e782:	6823      	ldr	r3, [r4, #0]
 800e784:	1e5a      	subs	r2, r3, #1
 800e786:	6022      	str	r2, [r4, #0]
 800e788:	f803 5c01 	strb.w	r5, [r3, #-1]
 800e78c:	6863      	ldr	r3, [r4, #4]
 800e78e:	3301      	adds	r3, #1
 800e790:	6063      	str	r3, [r4, #4]
 800e792:	e7e9      	b.n	800e768 <_sungetc_r+0xc>
 800e794:	4621      	mov	r1, r4
 800e796:	f000 fbef 	bl	800ef78 <__submore>
 800e79a:	2800      	cmp	r0, #0
 800e79c:	d0f1      	beq.n	800e782 <_sungetc_r+0x26>
 800e79e:	e7e1      	b.n	800e764 <_sungetc_r+0x8>
 800e7a0:	6921      	ldr	r1, [r4, #16]
 800e7a2:	6823      	ldr	r3, [r4, #0]
 800e7a4:	b151      	cbz	r1, 800e7bc <_sungetc_r+0x60>
 800e7a6:	4299      	cmp	r1, r3
 800e7a8:	d208      	bcs.n	800e7bc <_sungetc_r+0x60>
 800e7aa:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800e7ae:	42a9      	cmp	r1, r5
 800e7b0:	d104      	bne.n	800e7bc <_sungetc_r+0x60>
 800e7b2:	3b01      	subs	r3, #1
 800e7b4:	3201      	adds	r2, #1
 800e7b6:	6023      	str	r3, [r4, #0]
 800e7b8:	6062      	str	r2, [r4, #4]
 800e7ba:	e7d5      	b.n	800e768 <_sungetc_r+0xc>
 800e7bc:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800e7c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e7c4:	6363      	str	r3, [r4, #52]	; 0x34
 800e7c6:	2303      	movs	r3, #3
 800e7c8:	63a3      	str	r3, [r4, #56]	; 0x38
 800e7ca:	4623      	mov	r3, r4
 800e7cc:	f803 5f46 	strb.w	r5, [r3, #70]!
 800e7d0:	6023      	str	r3, [r4, #0]
 800e7d2:	2301      	movs	r3, #1
 800e7d4:	e7dc      	b.n	800e790 <_sungetc_r+0x34>

0800e7d6 <__ssrefill_r>:
 800e7d6:	b510      	push	{r4, lr}
 800e7d8:	460c      	mov	r4, r1
 800e7da:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800e7dc:	b169      	cbz	r1, 800e7fa <__ssrefill_r+0x24>
 800e7de:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e7e2:	4299      	cmp	r1, r3
 800e7e4:	d001      	beq.n	800e7ea <__ssrefill_r+0x14>
 800e7e6:	f7ff fd81 	bl	800e2ec <_free_r>
 800e7ea:	2000      	movs	r0, #0
 800e7ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e7ee:	6360      	str	r0, [r4, #52]	; 0x34
 800e7f0:	6063      	str	r3, [r4, #4]
 800e7f2:	b113      	cbz	r3, 800e7fa <__ssrefill_r+0x24>
 800e7f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e7f6:	6023      	str	r3, [r4, #0]
 800e7f8:	bd10      	pop	{r4, pc}
 800e7fa:	6923      	ldr	r3, [r4, #16]
 800e7fc:	f04f 30ff 	mov.w	r0, #4294967295
 800e800:	6023      	str	r3, [r4, #0]
 800e802:	2300      	movs	r3, #0
 800e804:	6063      	str	r3, [r4, #4]
 800e806:	89a3      	ldrh	r3, [r4, #12]
 800e808:	f043 0320 	orr.w	r3, r3, #32
 800e80c:	81a3      	strh	r3, [r4, #12]
 800e80e:	e7f3      	b.n	800e7f8 <__ssrefill_r+0x22>

0800e810 <__ssvfiscanf_r>:
 800e810:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e814:	460c      	mov	r4, r1
 800e816:	2100      	movs	r1, #0
 800e818:	4606      	mov	r6, r0
 800e81a:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800e81e:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800e822:	49a7      	ldr	r1, [pc, #668]	; (800eac0 <__ssvfiscanf_r+0x2b0>)
 800e824:	f10d 0804 	add.w	r8, sp, #4
 800e828:	91a0      	str	r1, [sp, #640]	; 0x280
 800e82a:	49a6      	ldr	r1, [pc, #664]	; (800eac4 <__ssvfiscanf_r+0x2b4>)
 800e82c:	4fa6      	ldr	r7, [pc, #664]	; (800eac8 <__ssvfiscanf_r+0x2b8>)
 800e82e:	f8df 929c 	ldr.w	r9, [pc, #668]	; 800eacc <__ssvfiscanf_r+0x2bc>
 800e832:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800e836:	91a1      	str	r1, [sp, #644]	; 0x284
 800e838:	9300      	str	r3, [sp, #0]
 800e83a:	7813      	ldrb	r3, [r2, #0]
 800e83c:	2b00      	cmp	r3, #0
 800e83e:	f000 815c 	beq.w	800eafa <__ssvfiscanf_r+0x2ea>
 800e842:	5dd9      	ldrb	r1, [r3, r7]
 800e844:	1c55      	adds	r5, r2, #1
 800e846:	f011 0108 	ands.w	r1, r1, #8
 800e84a:	d019      	beq.n	800e880 <__ssvfiscanf_r+0x70>
 800e84c:	6863      	ldr	r3, [r4, #4]
 800e84e:	2b00      	cmp	r3, #0
 800e850:	dd0f      	ble.n	800e872 <__ssvfiscanf_r+0x62>
 800e852:	6823      	ldr	r3, [r4, #0]
 800e854:	781a      	ldrb	r2, [r3, #0]
 800e856:	5cba      	ldrb	r2, [r7, r2]
 800e858:	0712      	lsls	r2, r2, #28
 800e85a:	d401      	bmi.n	800e860 <__ssvfiscanf_r+0x50>
 800e85c:	462a      	mov	r2, r5
 800e85e:	e7ec      	b.n	800e83a <__ssvfiscanf_r+0x2a>
 800e860:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e862:	3301      	adds	r3, #1
 800e864:	3201      	adds	r2, #1
 800e866:	9245      	str	r2, [sp, #276]	; 0x114
 800e868:	6862      	ldr	r2, [r4, #4]
 800e86a:	6023      	str	r3, [r4, #0]
 800e86c:	3a01      	subs	r2, #1
 800e86e:	6062      	str	r2, [r4, #4]
 800e870:	e7ec      	b.n	800e84c <__ssvfiscanf_r+0x3c>
 800e872:	4621      	mov	r1, r4
 800e874:	4630      	mov	r0, r6
 800e876:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e878:	4798      	blx	r3
 800e87a:	2800      	cmp	r0, #0
 800e87c:	d0e9      	beq.n	800e852 <__ssvfiscanf_r+0x42>
 800e87e:	e7ed      	b.n	800e85c <__ssvfiscanf_r+0x4c>
 800e880:	2b25      	cmp	r3, #37	; 0x25
 800e882:	d012      	beq.n	800e8aa <__ssvfiscanf_r+0x9a>
 800e884:	469a      	mov	sl, r3
 800e886:	6863      	ldr	r3, [r4, #4]
 800e888:	2b00      	cmp	r3, #0
 800e88a:	f340 8094 	ble.w	800e9b6 <__ssvfiscanf_r+0x1a6>
 800e88e:	6822      	ldr	r2, [r4, #0]
 800e890:	7813      	ldrb	r3, [r2, #0]
 800e892:	4553      	cmp	r3, sl
 800e894:	f040 8131 	bne.w	800eafa <__ssvfiscanf_r+0x2ea>
 800e898:	6863      	ldr	r3, [r4, #4]
 800e89a:	3201      	adds	r2, #1
 800e89c:	3b01      	subs	r3, #1
 800e89e:	6063      	str	r3, [r4, #4]
 800e8a0:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800e8a2:	6022      	str	r2, [r4, #0]
 800e8a4:	3301      	adds	r3, #1
 800e8a6:	9345      	str	r3, [sp, #276]	; 0x114
 800e8a8:	e7d8      	b.n	800e85c <__ssvfiscanf_r+0x4c>
 800e8aa:	9141      	str	r1, [sp, #260]	; 0x104
 800e8ac:	9143      	str	r1, [sp, #268]	; 0x10c
 800e8ae:	7853      	ldrb	r3, [r2, #1]
 800e8b0:	2b2a      	cmp	r3, #42	; 0x2a
 800e8b2:	bf04      	itt	eq
 800e8b4:	2310      	moveq	r3, #16
 800e8b6:	1c95      	addeq	r5, r2, #2
 800e8b8:	f04f 020a 	mov.w	r2, #10
 800e8bc:	bf08      	it	eq
 800e8be:	9341      	streq	r3, [sp, #260]	; 0x104
 800e8c0:	46aa      	mov	sl, r5
 800e8c2:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800e8c6:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800e8ca:	2b09      	cmp	r3, #9
 800e8cc:	d91d      	bls.n	800e90a <__ssvfiscanf_r+0xfa>
 800e8ce:	2203      	movs	r2, #3
 800e8d0:	487e      	ldr	r0, [pc, #504]	; (800eacc <__ssvfiscanf_r+0x2bc>)
 800e8d2:	f7ff f831 	bl	800d938 <memchr>
 800e8d6:	b140      	cbz	r0, 800e8ea <__ssvfiscanf_r+0xda>
 800e8d8:	2301      	movs	r3, #1
 800e8da:	4655      	mov	r5, sl
 800e8dc:	eba0 0009 	sub.w	r0, r0, r9
 800e8e0:	fa03 f000 	lsl.w	r0, r3, r0
 800e8e4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e8e6:	4318      	orrs	r0, r3
 800e8e8:	9041      	str	r0, [sp, #260]	; 0x104
 800e8ea:	f815 3b01 	ldrb.w	r3, [r5], #1
 800e8ee:	2b78      	cmp	r3, #120	; 0x78
 800e8f0:	d806      	bhi.n	800e900 <__ssvfiscanf_r+0xf0>
 800e8f2:	2b57      	cmp	r3, #87	; 0x57
 800e8f4:	d810      	bhi.n	800e918 <__ssvfiscanf_r+0x108>
 800e8f6:	2b25      	cmp	r3, #37	; 0x25
 800e8f8:	d0c4      	beq.n	800e884 <__ssvfiscanf_r+0x74>
 800e8fa:	d857      	bhi.n	800e9ac <__ssvfiscanf_r+0x19c>
 800e8fc:	2b00      	cmp	r3, #0
 800e8fe:	d065      	beq.n	800e9cc <__ssvfiscanf_r+0x1bc>
 800e900:	2303      	movs	r3, #3
 800e902:	9347      	str	r3, [sp, #284]	; 0x11c
 800e904:	230a      	movs	r3, #10
 800e906:	9342      	str	r3, [sp, #264]	; 0x108
 800e908:	e072      	b.n	800e9f0 <__ssvfiscanf_r+0x1e0>
 800e90a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800e90c:	4655      	mov	r5, sl
 800e90e:	fb02 1103 	mla	r1, r2, r3, r1
 800e912:	3930      	subs	r1, #48	; 0x30
 800e914:	9143      	str	r1, [sp, #268]	; 0x10c
 800e916:	e7d3      	b.n	800e8c0 <__ssvfiscanf_r+0xb0>
 800e918:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800e91c:	2a20      	cmp	r2, #32
 800e91e:	d8ef      	bhi.n	800e900 <__ssvfiscanf_r+0xf0>
 800e920:	a101      	add	r1, pc, #4	; (adr r1, 800e928 <__ssvfiscanf_r+0x118>)
 800e922:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800e926:	bf00      	nop
 800e928:	0800e9db 	.word	0x0800e9db
 800e92c:	0800e901 	.word	0x0800e901
 800e930:	0800e901 	.word	0x0800e901
 800e934:	0800ea39 	.word	0x0800ea39
 800e938:	0800e901 	.word	0x0800e901
 800e93c:	0800e901 	.word	0x0800e901
 800e940:	0800e901 	.word	0x0800e901
 800e944:	0800e901 	.word	0x0800e901
 800e948:	0800e901 	.word	0x0800e901
 800e94c:	0800e901 	.word	0x0800e901
 800e950:	0800e901 	.word	0x0800e901
 800e954:	0800ea4f 	.word	0x0800ea4f
 800e958:	0800ea25 	.word	0x0800ea25
 800e95c:	0800e9b3 	.word	0x0800e9b3
 800e960:	0800e9b3 	.word	0x0800e9b3
 800e964:	0800e9b3 	.word	0x0800e9b3
 800e968:	0800e901 	.word	0x0800e901
 800e96c:	0800ea29 	.word	0x0800ea29
 800e970:	0800e901 	.word	0x0800e901
 800e974:	0800e901 	.word	0x0800e901
 800e978:	0800e901 	.word	0x0800e901
 800e97c:	0800e901 	.word	0x0800e901
 800e980:	0800ea5f 	.word	0x0800ea5f
 800e984:	0800ea31 	.word	0x0800ea31
 800e988:	0800e9d3 	.word	0x0800e9d3
 800e98c:	0800e901 	.word	0x0800e901
 800e990:	0800e901 	.word	0x0800e901
 800e994:	0800ea5b 	.word	0x0800ea5b
 800e998:	0800e901 	.word	0x0800e901
 800e99c:	0800ea25 	.word	0x0800ea25
 800e9a0:	0800e901 	.word	0x0800e901
 800e9a4:	0800e901 	.word	0x0800e901
 800e9a8:	0800e9db 	.word	0x0800e9db
 800e9ac:	3b45      	subs	r3, #69	; 0x45
 800e9ae:	2b02      	cmp	r3, #2
 800e9b0:	d8a6      	bhi.n	800e900 <__ssvfiscanf_r+0xf0>
 800e9b2:	2305      	movs	r3, #5
 800e9b4:	e01b      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800e9b6:	4621      	mov	r1, r4
 800e9b8:	4630      	mov	r0, r6
 800e9ba:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e9bc:	4798      	blx	r3
 800e9be:	2800      	cmp	r0, #0
 800e9c0:	f43f af65 	beq.w	800e88e <__ssvfiscanf_r+0x7e>
 800e9c4:	9844      	ldr	r0, [sp, #272]	; 0x110
 800e9c6:	2800      	cmp	r0, #0
 800e9c8:	f040 808d 	bne.w	800eae6 <__ssvfiscanf_r+0x2d6>
 800e9cc:	f04f 30ff 	mov.w	r0, #4294967295
 800e9d0:	e08f      	b.n	800eaf2 <__ssvfiscanf_r+0x2e2>
 800e9d2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e9d4:	f042 0220 	orr.w	r2, r2, #32
 800e9d8:	9241      	str	r2, [sp, #260]	; 0x104
 800e9da:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800e9dc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800e9e0:	9241      	str	r2, [sp, #260]	; 0x104
 800e9e2:	2210      	movs	r2, #16
 800e9e4:	2b6f      	cmp	r3, #111	; 0x6f
 800e9e6:	bf34      	ite	cc
 800e9e8:	2303      	movcc	r3, #3
 800e9ea:	2304      	movcs	r3, #4
 800e9ec:	9242      	str	r2, [sp, #264]	; 0x108
 800e9ee:	9347      	str	r3, [sp, #284]	; 0x11c
 800e9f0:	6863      	ldr	r3, [r4, #4]
 800e9f2:	2b00      	cmp	r3, #0
 800e9f4:	dd42      	ble.n	800ea7c <__ssvfiscanf_r+0x26c>
 800e9f6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e9f8:	0659      	lsls	r1, r3, #25
 800e9fa:	d404      	bmi.n	800ea06 <__ssvfiscanf_r+0x1f6>
 800e9fc:	6823      	ldr	r3, [r4, #0]
 800e9fe:	781a      	ldrb	r2, [r3, #0]
 800ea00:	5cba      	ldrb	r2, [r7, r2]
 800ea02:	0712      	lsls	r2, r2, #28
 800ea04:	d441      	bmi.n	800ea8a <__ssvfiscanf_r+0x27a>
 800ea06:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800ea08:	2b02      	cmp	r3, #2
 800ea0a:	dc50      	bgt.n	800eaae <__ssvfiscanf_r+0x29e>
 800ea0c:	466b      	mov	r3, sp
 800ea0e:	4622      	mov	r2, r4
 800ea10:	4630      	mov	r0, r6
 800ea12:	a941      	add	r1, sp, #260	; 0x104
 800ea14:	f000 f876 	bl	800eb04 <_scanf_chars>
 800ea18:	2801      	cmp	r0, #1
 800ea1a:	d06e      	beq.n	800eafa <__ssvfiscanf_r+0x2ea>
 800ea1c:	2802      	cmp	r0, #2
 800ea1e:	f47f af1d 	bne.w	800e85c <__ssvfiscanf_r+0x4c>
 800ea22:	e7cf      	b.n	800e9c4 <__ssvfiscanf_r+0x1b4>
 800ea24:	220a      	movs	r2, #10
 800ea26:	e7dd      	b.n	800e9e4 <__ssvfiscanf_r+0x1d4>
 800ea28:	2300      	movs	r3, #0
 800ea2a:	9342      	str	r3, [sp, #264]	; 0x108
 800ea2c:	2303      	movs	r3, #3
 800ea2e:	e7de      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800ea30:	2308      	movs	r3, #8
 800ea32:	9342      	str	r3, [sp, #264]	; 0x108
 800ea34:	2304      	movs	r3, #4
 800ea36:	e7da      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800ea38:	4629      	mov	r1, r5
 800ea3a:	4640      	mov	r0, r8
 800ea3c:	f000 f9dc 	bl	800edf8 <__sccl>
 800ea40:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ea42:	4605      	mov	r5, r0
 800ea44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ea48:	9341      	str	r3, [sp, #260]	; 0x104
 800ea4a:	2301      	movs	r3, #1
 800ea4c:	e7cf      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800ea4e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ea50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ea54:	9341      	str	r3, [sp, #260]	; 0x104
 800ea56:	2300      	movs	r3, #0
 800ea58:	e7c9      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800ea5a:	2302      	movs	r3, #2
 800ea5c:	e7c7      	b.n	800e9ee <__ssvfiscanf_r+0x1de>
 800ea5e:	9841      	ldr	r0, [sp, #260]	; 0x104
 800ea60:	06c3      	lsls	r3, r0, #27
 800ea62:	f53f aefb 	bmi.w	800e85c <__ssvfiscanf_r+0x4c>
 800ea66:	9b00      	ldr	r3, [sp, #0]
 800ea68:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800ea6a:	1d19      	adds	r1, r3, #4
 800ea6c:	9100      	str	r1, [sp, #0]
 800ea6e:	681b      	ldr	r3, [r3, #0]
 800ea70:	f010 0f01 	tst.w	r0, #1
 800ea74:	bf14      	ite	ne
 800ea76:	801a      	strhne	r2, [r3, #0]
 800ea78:	601a      	streq	r2, [r3, #0]
 800ea7a:	e6ef      	b.n	800e85c <__ssvfiscanf_r+0x4c>
 800ea7c:	4621      	mov	r1, r4
 800ea7e:	4630      	mov	r0, r6
 800ea80:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800ea82:	4798      	blx	r3
 800ea84:	2800      	cmp	r0, #0
 800ea86:	d0b6      	beq.n	800e9f6 <__ssvfiscanf_r+0x1e6>
 800ea88:	e79c      	b.n	800e9c4 <__ssvfiscanf_r+0x1b4>
 800ea8a:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800ea8c:	3201      	adds	r2, #1
 800ea8e:	9245      	str	r2, [sp, #276]	; 0x114
 800ea90:	6862      	ldr	r2, [r4, #4]
 800ea92:	3a01      	subs	r2, #1
 800ea94:	2a00      	cmp	r2, #0
 800ea96:	6062      	str	r2, [r4, #4]
 800ea98:	dd02      	ble.n	800eaa0 <__ssvfiscanf_r+0x290>
 800ea9a:	3301      	adds	r3, #1
 800ea9c:	6023      	str	r3, [r4, #0]
 800ea9e:	e7ad      	b.n	800e9fc <__ssvfiscanf_r+0x1ec>
 800eaa0:	4621      	mov	r1, r4
 800eaa2:	4630      	mov	r0, r6
 800eaa4:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800eaa6:	4798      	blx	r3
 800eaa8:	2800      	cmp	r0, #0
 800eaaa:	d0a7      	beq.n	800e9fc <__ssvfiscanf_r+0x1ec>
 800eaac:	e78a      	b.n	800e9c4 <__ssvfiscanf_r+0x1b4>
 800eaae:	2b04      	cmp	r3, #4
 800eab0:	dc0e      	bgt.n	800ead0 <__ssvfiscanf_r+0x2c0>
 800eab2:	466b      	mov	r3, sp
 800eab4:	4622      	mov	r2, r4
 800eab6:	4630      	mov	r0, r6
 800eab8:	a941      	add	r1, sp, #260	; 0x104
 800eaba:	f000 f87d 	bl	800ebb8 <_scanf_i>
 800eabe:	e7ab      	b.n	800ea18 <__ssvfiscanf_r+0x208>
 800eac0:	0800e75d 	.word	0x0800e75d
 800eac4:	0800e7d7 	.word	0x0800e7d7
 800eac8:	080107d9 	.word	0x080107d9
 800eacc:	08010b42 	.word	0x08010b42
 800ead0:	4b0b      	ldr	r3, [pc, #44]	; (800eb00 <__ssvfiscanf_r+0x2f0>)
 800ead2:	2b00      	cmp	r3, #0
 800ead4:	f43f aec2 	beq.w	800e85c <__ssvfiscanf_r+0x4c>
 800ead8:	466b      	mov	r3, sp
 800eada:	4622      	mov	r2, r4
 800eadc:	4630      	mov	r0, r6
 800eade:	a941      	add	r1, sp, #260	; 0x104
 800eae0:	f7fc fbc6 	bl	800b270 <_scanf_float>
 800eae4:	e798      	b.n	800ea18 <__ssvfiscanf_r+0x208>
 800eae6:	89a3      	ldrh	r3, [r4, #12]
 800eae8:	f013 0f40 	tst.w	r3, #64	; 0x40
 800eaec:	bf18      	it	ne
 800eaee:	f04f 30ff 	movne.w	r0, #4294967295
 800eaf2:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800eaf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eafa:	9844      	ldr	r0, [sp, #272]	; 0x110
 800eafc:	e7f9      	b.n	800eaf2 <__ssvfiscanf_r+0x2e2>
 800eafe:	bf00      	nop
 800eb00:	0800b271 	.word	0x0800b271

0800eb04 <_scanf_chars>:
 800eb04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb08:	4615      	mov	r5, r2
 800eb0a:	688a      	ldr	r2, [r1, #8]
 800eb0c:	4680      	mov	r8, r0
 800eb0e:	460c      	mov	r4, r1
 800eb10:	b932      	cbnz	r2, 800eb20 <_scanf_chars+0x1c>
 800eb12:	698a      	ldr	r2, [r1, #24]
 800eb14:	2a00      	cmp	r2, #0
 800eb16:	bf0c      	ite	eq
 800eb18:	2201      	moveq	r2, #1
 800eb1a:	f04f 32ff 	movne.w	r2, #4294967295
 800eb1e:	608a      	str	r2, [r1, #8]
 800eb20:	2700      	movs	r7, #0
 800eb22:	6822      	ldr	r2, [r4, #0]
 800eb24:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ebb4 <_scanf_chars+0xb0>
 800eb28:	06d1      	lsls	r1, r2, #27
 800eb2a:	bf5f      	itttt	pl
 800eb2c:	681a      	ldrpl	r2, [r3, #0]
 800eb2e:	1d11      	addpl	r1, r2, #4
 800eb30:	6019      	strpl	r1, [r3, #0]
 800eb32:	6816      	ldrpl	r6, [r2, #0]
 800eb34:	69a0      	ldr	r0, [r4, #24]
 800eb36:	b188      	cbz	r0, 800eb5c <_scanf_chars+0x58>
 800eb38:	2801      	cmp	r0, #1
 800eb3a:	d107      	bne.n	800eb4c <_scanf_chars+0x48>
 800eb3c:	682b      	ldr	r3, [r5, #0]
 800eb3e:	781a      	ldrb	r2, [r3, #0]
 800eb40:	6963      	ldr	r3, [r4, #20]
 800eb42:	5c9b      	ldrb	r3, [r3, r2]
 800eb44:	b953      	cbnz	r3, 800eb5c <_scanf_chars+0x58>
 800eb46:	2f00      	cmp	r7, #0
 800eb48:	d031      	beq.n	800ebae <_scanf_chars+0xaa>
 800eb4a:	e022      	b.n	800eb92 <_scanf_chars+0x8e>
 800eb4c:	2802      	cmp	r0, #2
 800eb4e:	d120      	bne.n	800eb92 <_scanf_chars+0x8e>
 800eb50:	682b      	ldr	r3, [r5, #0]
 800eb52:	781b      	ldrb	r3, [r3, #0]
 800eb54:	f813 3009 	ldrb.w	r3, [r3, r9]
 800eb58:	071b      	lsls	r3, r3, #28
 800eb5a:	d41a      	bmi.n	800eb92 <_scanf_chars+0x8e>
 800eb5c:	6823      	ldr	r3, [r4, #0]
 800eb5e:	3701      	adds	r7, #1
 800eb60:	06da      	lsls	r2, r3, #27
 800eb62:	bf5e      	ittt	pl
 800eb64:	682b      	ldrpl	r3, [r5, #0]
 800eb66:	781b      	ldrbpl	r3, [r3, #0]
 800eb68:	f806 3b01 	strbpl.w	r3, [r6], #1
 800eb6c:	682a      	ldr	r2, [r5, #0]
 800eb6e:	686b      	ldr	r3, [r5, #4]
 800eb70:	3201      	adds	r2, #1
 800eb72:	602a      	str	r2, [r5, #0]
 800eb74:	68a2      	ldr	r2, [r4, #8]
 800eb76:	3b01      	subs	r3, #1
 800eb78:	3a01      	subs	r2, #1
 800eb7a:	606b      	str	r3, [r5, #4]
 800eb7c:	60a2      	str	r2, [r4, #8]
 800eb7e:	b142      	cbz	r2, 800eb92 <_scanf_chars+0x8e>
 800eb80:	2b00      	cmp	r3, #0
 800eb82:	dcd7      	bgt.n	800eb34 <_scanf_chars+0x30>
 800eb84:	4629      	mov	r1, r5
 800eb86:	4640      	mov	r0, r8
 800eb88:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800eb8c:	4798      	blx	r3
 800eb8e:	2800      	cmp	r0, #0
 800eb90:	d0d0      	beq.n	800eb34 <_scanf_chars+0x30>
 800eb92:	6823      	ldr	r3, [r4, #0]
 800eb94:	f013 0310 	ands.w	r3, r3, #16
 800eb98:	d105      	bne.n	800eba6 <_scanf_chars+0xa2>
 800eb9a:	68e2      	ldr	r2, [r4, #12]
 800eb9c:	3201      	adds	r2, #1
 800eb9e:	60e2      	str	r2, [r4, #12]
 800eba0:	69a2      	ldr	r2, [r4, #24]
 800eba2:	b102      	cbz	r2, 800eba6 <_scanf_chars+0xa2>
 800eba4:	7033      	strb	r3, [r6, #0]
 800eba6:	2000      	movs	r0, #0
 800eba8:	6923      	ldr	r3, [r4, #16]
 800ebaa:	443b      	add	r3, r7
 800ebac:	6123      	str	r3, [r4, #16]
 800ebae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ebb2:	bf00      	nop
 800ebb4:	080107d9 	.word	0x080107d9

0800ebb8 <_scanf_i>:
 800ebb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebbc:	460c      	mov	r4, r1
 800ebbe:	4698      	mov	r8, r3
 800ebc0:	4b75      	ldr	r3, [pc, #468]	; (800ed98 <_scanf_i+0x1e0>)
 800ebc2:	b087      	sub	sp, #28
 800ebc4:	4682      	mov	sl, r0
 800ebc6:	4616      	mov	r6, r2
 800ebc8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800ebcc:	ab03      	add	r3, sp, #12
 800ebce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800ebd2:	4b72      	ldr	r3, [pc, #456]	; (800ed9c <_scanf_i+0x1e4>)
 800ebd4:	69a1      	ldr	r1, [r4, #24]
 800ebd6:	4a72      	ldr	r2, [pc, #456]	; (800eda0 <_scanf_i+0x1e8>)
 800ebd8:	4627      	mov	r7, r4
 800ebda:	2903      	cmp	r1, #3
 800ebdc:	bf18      	it	ne
 800ebde:	461a      	movne	r2, r3
 800ebe0:	68a3      	ldr	r3, [r4, #8]
 800ebe2:	9201      	str	r2, [sp, #4]
 800ebe4:	1e5a      	subs	r2, r3, #1
 800ebe6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800ebea:	bf81      	itttt	hi
 800ebec:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800ebf0:	eb03 0905 	addhi.w	r9, r3, r5
 800ebf4:	f240 135d 	movwhi	r3, #349	; 0x15d
 800ebf8:	60a3      	strhi	r3, [r4, #8]
 800ebfa:	f857 3b1c 	ldr.w	r3, [r7], #28
 800ebfe:	bf98      	it	ls
 800ec00:	f04f 0900 	movls.w	r9, #0
 800ec04:	463d      	mov	r5, r7
 800ec06:	f04f 0b00 	mov.w	fp, #0
 800ec0a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800ec0e:	6023      	str	r3, [r4, #0]
 800ec10:	6831      	ldr	r1, [r6, #0]
 800ec12:	ab03      	add	r3, sp, #12
 800ec14:	2202      	movs	r2, #2
 800ec16:	7809      	ldrb	r1, [r1, #0]
 800ec18:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800ec1c:	f7fe fe8c 	bl	800d938 <memchr>
 800ec20:	b328      	cbz	r0, 800ec6e <_scanf_i+0xb6>
 800ec22:	f1bb 0f01 	cmp.w	fp, #1
 800ec26:	d159      	bne.n	800ecdc <_scanf_i+0x124>
 800ec28:	6862      	ldr	r2, [r4, #4]
 800ec2a:	b92a      	cbnz	r2, 800ec38 <_scanf_i+0x80>
 800ec2c:	2308      	movs	r3, #8
 800ec2e:	6822      	ldr	r2, [r4, #0]
 800ec30:	6063      	str	r3, [r4, #4]
 800ec32:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ec36:	6022      	str	r2, [r4, #0]
 800ec38:	6822      	ldr	r2, [r4, #0]
 800ec3a:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800ec3e:	6022      	str	r2, [r4, #0]
 800ec40:	68a2      	ldr	r2, [r4, #8]
 800ec42:	1e51      	subs	r1, r2, #1
 800ec44:	60a1      	str	r1, [r4, #8]
 800ec46:	b192      	cbz	r2, 800ec6e <_scanf_i+0xb6>
 800ec48:	6832      	ldr	r2, [r6, #0]
 800ec4a:	1c51      	adds	r1, r2, #1
 800ec4c:	6031      	str	r1, [r6, #0]
 800ec4e:	7812      	ldrb	r2, [r2, #0]
 800ec50:	f805 2b01 	strb.w	r2, [r5], #1
 800ec54:	6872      	ldr	r2, [r6, #4]
 800ec56:	3a01      	subs	r2, #1
 800ec58:	2a00      	cmp	r2, #0
 800ec5a:	6072      	str	r2, [r6, #4]
 800ec5c:	dc07      	bgt.n	800ec6e <_scanf_i+0xb6>
 800ec5e:	4631      	mov	r1, r6
 800ec60:	4650      	mov	r0, sl
 800ec62:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800ec66:	4790      	blx	r2
 800ec68:	2800      	cmp	r0, #0
 800ec6a:	f040 8085 	bne.w	800ed78 <_scanf_i+0x1c0>
 800ec6e:	f10b 0b01 	add.w	fp, fp, #1
 800ec72:	f1bb 0f03 	cmp.w	fp, #3
 800ec76:	d1cb      	bne.n	800ec10 <_scanf_i+0x58>
 800ec78:	6863      	ldr	r3, [r4, #4]
 800ec7a:	b90b      	cbnz	r3, 800ec80 <_scanf_i+0xc8>
 800ec7c:	230a      	movs	r3, #10
 800ec7e:	6063      	str	r3, [r4, #4]
 800ec80:	6863      	ldr	r3, [r4, #4]
 800ec82:	4948      	ldr	r1, [pc, #288]	; (800eda4 <_scanf_i+0x1ec>)
 800ec84:	6960      	ldr	r0, [r4, #20]
 800ec86:	1ac9      	subs	r1, r1, r3
 800ec88:	f000 f8b6 	bl	800edf8 <__sccl>
 800ec8c:	f04f 0b00 	mov.w	fp, #0
 800ec90:	68a3      	ldr	r3, [r4, #8]
 800ec92:	6822      	ldr	r2, [r4, #0]
 800ec94:	2b00      	cmp	r3, #0
 800ec96:	d03d      	beq.n	800ed14 <_scanf_i+0x15c>
 800ec98:	6831      	ldr	r1, [r6, #0]
 800ec9a:	6960      	ldr	r0, [r4, #20]
 800ec9c:	f891 c000 	ldrb.w	ip, [r1]
 800eca0:	f810 000c 	ldrb.w	r0, [r0, ip]
 800eca4:	2800      	cmp	r0, #0
 800eca6:	d035      	beq.n	800ed14 <_scanf_i+0x15c>
 800eca8:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800ecac:	d124      	bne.n	800ecf8 <_scanf_i+0x140>
 800ecae:	0510      	lsls	r0, r2, #20
 800ecb0:	d522      	bpl.n	800ecf8 <_scanf_i+0x140>
 800ecb2:	f10b 0b01 	add.w	fp, fp, #1
 800ecb6:	f1b9 0f00 	cmp.w	r9, #0
 800ecba:	d003      	beq.n	800ecc4 <_scanf_i+0x10c>
 800ecbc:	3301      	adds	r3, #1
 800ecbe:	f109 39ff 	add.w	r9, r9, #4294967295
 800ecc2:	60a3      	str	r3, [r4, #8]
 800ecc4:	6873      	ldr	r3, [r6, #4]
 800ecc6:	3b01      	subs	r3, #1
 800ecc8:	2b00      	cmp	r3, #0
 800ecca:	6073      	str	r3, [r6, #4]
 800eccc:	dd1b      	ble.n	800ed06 <_scanf_i+0x14e>
 800ecce:	6833      	ldr	r3, [r6, #0]
 800ecd0:	3301      	adds	r3, #1
 800ecd2:	6033      	str	r3, [r6, #0]
 800ecd4:	68a3      	ldr	r3, [r4, #8]
 800ecd6:	3b01      	subs	r3, #1
 800ecd8:	60a3      	str	r3, [r4, #8]
 800ecda:	e7d9      	b.n	800ec90 <_scanf_i+0xd8>
 800ecdc:	f1bb 0f02 	cmp.w	fp, #2
 800ece0:	d1ae      	bne.n	800ec40 <_scanf_i+0x88>
 800ece2:	6822      	ldr	r2, [r4, #0]
 800ece4:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800ece8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800ecec:	d1bf      	bne.n	800ec6e <_scanf_i+0xb6>
 800ecee:	2310      	movs	r3, #16
 800ecf0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ecf4:	6063      	str	r3, [r4, #4]
 800ecf6:	e7a2      	b.n	800ec3e <_scanf_i+0x86>
 800ecf8:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800ecfc:	6022      	str	r2, [r4, #0]
 800ecfe:	780b      	ldrb	r3, [r1, #0]
 800ed00:	f805 3b01 	strb.w	r3, [r5], #1
 800ed04:	e7de      	b.n	800ecc4 <_scanf_i+0x10c>
 800ed06:	4631      	mov	r1, r6
 800ed08:	4650      	mov	r0, sl
 800ed0a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ed0e:	4798      	blx	r3
 800ed10:	2800      	cmp	r0, #0
 800ed12:	d0df      	beq.n	800ecd4 <_scanf_i+0x11c>
 800ed14:	6823      	ldr	r3, [r4, #0]
 800ed16:	05db      	lsls	r3, r3, #23
 800ed18:	d50d      	bpl.n	800ed36 <_scanf_i+0x17e>
 800ed1a:	42bd      	cmp	r5, r7
 800ed1c:	d909      	bls.n	800ed32 <_scanf_i+0x17a>
 800ed1e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800ed22:	4632      	mov	r2, r6
 800ed24:	4650      	mov	r0, sl
 800ed26:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ed2a:	f105 39ff 	add.w	r9, r5, #4294967295
 800ed2e:	4798      	blx	r3
 800ed30:	464d      	mov	r5, r9
 800ed32:	42bd      	cmp	r5, r7
 800ed34:	d02d      	beq.n	800ed92 <_scanf_i+0x1da>
 800ed36:	6822      	ldr	r2, [r4, #0]
 800ed38:	f012 0210 	ands.w	r2, r2, #16
 800ed3c:	d113      	bne.n	800ed66 <_scanf_i+0x1ae>
 800ed3e:	702a      	strb	r2, [r5, #0]
 800ed40:	4639      	mov	r1, r7
 800ed42:	6863      	ldr	r3, [r4, #4]
 800ed44:	4650      	mov	r0, sl
 800ed46:	9e01      	ldr	r6, [sp, #4]
 800ed48:	47b0      	blx	r6
 800ed4a:	6821      	ldr	r1, [r4, #0]
 800ed4c:	f8d8 3000 	ldr.w	r3, [r8]
 800ed50:	f011 0f20 	tst.w	r1, #32
 800ed54:	d013      	beq.n	800ed7e <_scanf_i+0x1c6>
 800ed56:	1d1a      	adds	r2, r3, #4
 800ed58:	f8c8 2000 	str.w	r2, [r8]
 800ed5c:	681b      	ldr	r3, [r3, #0]
 800ed5e:	6018      	str	r0, [r3, #0]
 800ed60:	68e3      	ldr	r3, [r4, #12]
 800ed62:	3301      	adds	r3, #1
 800ed64:	60e3      	str	r3, [r4, #12]
 800ed66:	2000      	movs	r0, #0
 800ed68:	1bed      	subs	r5, r5, r7
 800ed6a:	44ab      	add	fp, r5
 800ed6c:	6925      	ldr	r5, [r4, #16]
 800ed6e:	445d      	add	r5, fp
 800ed70:	6125      	str	r5, [r4, #16]
 800ed72:	b007      	add	sp, #28
 800ed74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed78:	f04f 0b00 	mov.w	fp, #0
 800ed7c:	e7ca      	b.n	800ed14 <_scanf_i+0x15c>
 800ed7e:	1d1a      	adds	r2, r3, #4
 800ed80:	f8c8 2000 	str.w	r2, [r8]
 800ed84:	681b      	ldr	r3, [r3, #0]
 800ed86:	f011 0f01 	tst.w	r1, #1
 800ed8a:	bf14      	ite	ne
 800ed8c:	8018      	strhne	r0, [r3, #0]
 800ed8e:	6018      	streq	r0, [r3, #0]
 800ed90:	e7e6      	b.n	800ed60 <_scanf_i+0x1a8>
 800ed92:	2001      	movs	r0, #1
 800ed94:	e7ed      	b.n	800ed72 <_scanf_i+0x1ba>
 800ed96:	bf00      	nop
 800ed98:	0800fe48 	.word	0x0800fe48
 800ed9c:	0800ef75 	.word	0x0800ef75
 800eda0:	0800c4cd 	.word	0x0800c4cd
 800eda4:	08010b66 	.word	0x08010b66

0800eda8 <_read_r>:
 800eda8:	b538      	push	{r3, r4, r5, lr}
 800edaa:	4604      	mov	r4, r0
 800edac:	4608      	mov	r0, r1
 800edae:	4611      	mov	r1, r2
 800edb0:	2200      	movs	r2, #0
 800edb2:	4d05      	ldr	r5, [pc, #20]	; (800edc8 <_read_r+0x20>)
 800edb4:	602a      	str	r2, [r5, #0]
 800edb6:	461a      	mov	r2, r3
 800edb8:	f7f6 f85b 	bl	8004e72 <_read>
 800edbc:	1c43      	adds	r3, r0, #1
 800edbe:	d102      	bne.n	800edc6 <_read_r+0x1e>
 800edc0:	682b      	ldr	r3, [r5, #0]
 800edc2:	b103      	cbz	r3, 800edc6 <_read_r+0x1e>
 800edc4:	6023      	str	r3, [r4, #0]
 800edc6:	bd38      	pop	{r3, r4, r5, pc}
 800edc8:	20001438 	.word	0x20001438

0800edcc <nan>:
 800edcc:	2000      	movs	r0, #0
 800edce:	4901      	ldr	r1, [pc, #4]	; (800edd4 <nan+0x8>)
 800edd0:	4770      	bx	lr
 800edd2:	bf00      	nop
 800edd4:	7ff80000 	.word	0x7ff80000

0800edd8 <_sbrk_r>:
 800edd8:	b538      	push	{r3, r4, r5, lr}
 800edda:	2300      	movs	r3, #0
 800eddc:	4d05      	ldr	r5, [pc, #20]	; (800edf4 <_sbrk_r+0x1c>)
 800edde:	4604      	mov	r4, r0
 800ede0:	4608      	mov	r0, r1
 800ede2:	602b      	str	r3, [r5, #0]
 800ede4:	f7f6 f8ae 	bl	8004f44 <_sbrk>
 800ede8:	1c43      	adds	r3, r0, #1
 800edea:	d102      	bne.n	800edf2 <_sbrk_r+0x1a>
 800edec:	682b      	ldr	r3, [r5, #0]
 800edee:	b103      	cbz	r3, 800edf2 <_sbrk_r+0x1a>
 800edf0:	6023      	str	r3, [r4, #0]
 800edf2:	bd38      	pop	{r3, r4, r5, pc}
 800edf4:	20001438 	.word	0x20001438

0800edf8 <__sccl>:
 800edf8:	b570      	push	{r4, r5, r6, lr}
 800edfa:	780b      	ldrb	r3, [r1, #0]
 800edfc:	4604      	mov	r4, r0
 800edfe:	2b5e      	cmp	r3, #94	; 0x5e
 800ee00:	bf13      	iteet	ne
 800ee02:	2200      	movne	r2, #0
 800ee04:	2201      	moveq	r2, #1
 800ee06:	784b      	ldrbeq	r3, [r1, #1]
 800ee08:	1c48      	addne	r0, r1, #1
 800ee0a:	bf08      	it	eq
 800ee0c:	1c88      	addeq	r0, r1, #2
 800ee0e:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800ee12:	1e61      	subs	r1, r4, #1
 800ee14:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ee18:	42a9      	cmp	r1, r5
 800ee1a:	d1fb      	bne.n	800ee14 <__sccl+0x1c>
 800ee1c:	b90b      	cbnz	r3, 800ee22 <__sccl+0x2a>
 800ee1e:	3801      	subs	r0, #1
 800ee20:	bd70      	pop	{r4, r5, r6, pc}
 800ee22:	f082 0201 	eor.w	r2, r2, #1
 800ee26:	4605      	mov	r5, r0
 800ee28:	54e2      	strb	r2, [r4, r3]
 800ee2a:	4628      	mov	r0, r5
 800ee2c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ee30:	292d      	cmp	r1, #45	; 0x2d
 800ee32:	d006      	beq.n	800ee42 <__sccl+0x4a>
 800ee34:	295d      	cmp	r1, #93	; 0x5d
 800ee36:	d0f3      	beq.n	800ee20 <__sccl+0x28>
 800ee38:	b909      	cbnz	r1, 800ee3e <__sccl+0x46>
 800ee3a:	4628      	mov	r0, r5
 800ee3c:	e7f0      	b.n	800ee20 <__sccl+0x28>
 800ee3e:	460b      	mov	r3, r1
 800ee40:	e7f1      	b.n	800ee26 <__sccl+0x2e>
 800ee42:	786e      	ldrb	r6, [r5, #1]
 800ee44:	2e5d      	cmp	r6, #93	; 0x5d
 800ee46:	d0fa      	beq.n	800ee3e <__sccl+0x46>
 800ee48:	42b3      	cmp	r3, r6
 800ee4a:	dcf8      	bgt.n	800ee3e <__sccl+0x46>
 800ee4c:	4619      	mov	r1, r3
 800ee4e:	3502      	adds	r5, #2
 800ee50:	3101      	adds	r1, #1
 800ee52:	428e      	cmp	r6, r1
 800ee54:	5462      	strb	r2, [r4, r1]
 800ee56:	dcfb      	bgt.n	800ee50 <__sccl+0x58>
 800ee58:	1af1      	subs	r1, r6, r3
 800ee5a:	3901      	subs	r1, #1
 800ee5c:	42b3      	cmp	r3, r6
 800ee5e:	bfa8      	it	ge
 800ee60:	2100      	movge	r1, #0
 800ee62:	1c58      	adds	r0, r3, #1
 800ee64:	1843      	adds	r3, r0, r1
 800ee66:	e7e0      	b.n	800ee2a <__sccl+0x32>

0800ee68 <strncmp>:
 800ee68:	4603      	mov	r3, r0
 800ee6a:	b510      	push	{r4, lr}
 800ee6c:	b172      	cbz	r2, 800ee8c <strncmp+0x24>
 800ee6e:	3901      	subs	r1, #1
 800ee70:	1884      	adds	r4, r0, r2
 800ee72:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ee76:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ee7a:	4290      	cmp	r0, r2
 800ee7c:	d101      	bne.n	800ee82 <strncmp+0x1a>
 800ee7e:	42a3      	cmp	r3, r4
 800ee80:	d101      	bne.n	800ee86 <strncmp+0x1e>
 800ee82:	1a80      	subs	r0, r0, r2
 800ee84:	bd10      	pop	{r4, pc}
 800ee86:	2800      	cmp	r0, #0
 800ee88:	d1f3      	bne.n	800ee72 <strncmp+0xa>
 800ee8a:	e7fa      	b.n	800ee82 <strncmp+0x1a>
 800ee8c:	4610      	mov	r0, r2
 800ee8e:	e7f9      	b.n	800ee84 <strncmp+0x1c>

0800ee90 <_strtoul_l.constprop.0>:
 800ee90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee94:	4686      	mov	lr, r0
 800ee96:	460d      	mov	r5, r1
 800ee98:	4f35      	ldr	r7, [pc, #212]	; (800ef70 <_strtoul_l.constprop.0+0xe0>)
 800ee9a:	4628      	mov	r0, r5
 800ee9c:	f815 4b01 	ldrb.w	r4, [r5], #1
 800eea0:	5de6      	ldrb	r6, [r4, r7]
 800eea2:	f016 0608 	ands.w	r6, r6, #8
 800eea6:	d1f8      	bne.n	800ee9a <_strtoul_l.constprop.0+0xa>
 800eea8:	2c2d      	cmp	r4, #45	; 0x2d
 800eeaa:	d12f      	bne.n	800ef0c <_strtoul_l.constprop.0+0x7c>
 800eeac:	2601      	movs	r6, #1
 800eeae:	782c      	ldrb	r4, [r5, #0]
 800eeb0:	1c85      	adds	r5, r0, #2
 800eeb2:	2b00      	cmp	r3, #0
 800eeb4:	d057      	beq.n	800ef66 <_strtoul_l.constprop.0+0xd6>
 800eeb6:	2b10      	cmp	r3, #16
 800eeb8:	d109      	bne.n	800eece <_strtoul_l.constprop.0+0x3e>
 800eeba:	2c30      	cmp	r4, #48	; 0x30
 800eebc:	d107      	bne.n	800eece <_strtoul_l.constprop.0+0x3e>
 800eebe:	7828      	ldrb	r0, [r5, #0]
 800eec0:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800eec4:	2858      	cmp	r0, #88	; 0x58
 800eec6:	d149      	bne.n	800ef5c <_strtoul_l.constprop.0+0xcc>
 800eec8:	2310      	movs	r3, #16
 800eeca:	786c      	ldrb	r4, [r5, #1]
 800eecc:	3502      	adds	r5, #2
 800eece:	f04f 38ff 	mov.w	r8, #4294967295
 800eed2:	fbb8 f8f3 	udiv	r8, r8, r3
 800eed6:	2700      	movs	r7, #0
 800eed8:	fb03 f908 	mul.w	r9, r3, r8
 800eedc:	4638      	mov	r0, r7
 800eede:	ea6f 0909 	mvn.w	r9, r9
 800eee2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800eee6:	f1bc 0f09 	cmp.w	ip, #9
 800eeea:	d814      	bhi.n	800ef16 <_strtoul_l.constprop.0+0x86>
 800eeec:	4664      	mov	r4, ip
 800eeee:	42a3      	cmp	r3, r4
 800eef0:	dd22      	ble.n	800ef38 <_strtoul_l.constprop.0+0xa8>
 800eef2:	2f00      	cmp	r7, #0
 800eef4:	db1d      	blt.n	800ef32 <_strtoul_l.constprop.0+0xa2>
 800eef6:	4580      	cmp	r8, r0
 800eef8:	d31b      	bcc.n	800ef32 <_strtoul_l.constprop.0+0xa2>
 800eefa:	d101      	bne.n	800ef00 <_strtoul_l.constprop.0+0x70>
 800eefc:	45a1      	cmp	r9, r4
 800eefe:	db18      	blt.n	800ef32 <_strtoul_l.constprop.0+0xa2>
 800ef00:	2701      	movs	r7, #1
 800ef02:	fb00 4003 	mla	r0, r0, r3, r4
 800ef06:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ef0a:	e7ea      	b.n	800eee2 <_strtoul_l.constprop.0+0x52>
 800ef0c:	2c2b      	cmp	r4, #43	; 0x2b
 800ef0e:	bf04      	itt	eq
 800ef10:	782c      	ldrbeq	r4, [r5, #0]
 800ef12:	1c85      	addeq	r5, r0, #2
 800ef14:	e7cd      	b.n	800eeb2 <_strtoul_l.constprop.0+0x22>
 800ef16:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800ef1a:	f1bc 0f19 	cmp.w	ip, #25
 800ef1e:	d801      	bhi.n	800ef24 <_strtoul_l.constprop.0+0x94>
 800ef20:	3c37      	subs	r4, #55	; 0x37
 800ef22:	e7e4      	b.n	800eeee <_strtoul_l.constprop.0+0x5e>
 800ef24:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800ef28:	f1bc 0f19 	cmp.w	ip, #25
 800ef2c:	d804      	bhi.n	800ef38 <_strtoul_l.constprop.0+0xa8>
 800ef2e:	3c57      	subs	r4, #87	; 0x57
 800ef30:	e7dd      	b.n	800eeee <_strtoul_l.constprop.0+0x5e>
 800ef32:	f04f 37ff 	mov.w	r7, #4294967295
 800ef36:	e7e6      	b.n	800ef06 <_strtoul_l.constprop.0+0x76>
 800ef38:	2f00      	cmp	r7, #0
 800ef3a:	da07      	bge.n	800ef4c <_strtoul_l.constprop.0+0xbc>
 800ef3c:	2322      	movs	r3, #34	; 0x22
 800ef3e:	f04f 30ff 	mov.w	r0, #4294967295
 800ef42:	f8ce 3000 	str.w	r3, [lr]
 800ef46:	b932      	cbnz	r2, 800ef56 <_strtoul_l.constprop.0+0xc6>
 800ef48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ef4c:	b106      	cbz	r6, 800ef50 <_strtoul_l.constprop.0+0xc0>
 800ef4e:	4240      	negs	r0, r0
 800ef50:	2a00      	cmp	r2, #0
 800ef52:	d0f9      	beq.n	800ef48 <_strtoul_l.constprop.0+0xb8>
 800ef54:	b107      	cbz	r7, 800ef58 <_strtoul_l.constprop.0+0xc8>
 800ef56:	1e69      	subs	r1, r5, #1
 800ef58:	6011      	str	r1, [r2, #0]
 800ef5a:	e7f5      	b.n	800ef48 <_strtoul_l.constprop.0+0xb8>
 800ef5c:	2430      	movs	r4, #48	; 0x30
 800ef5e:	2b00      	cmp	r3, #0
 800ef60:	d1b5      	bne.n	800eece <_strtoul_l.constprop.0+0x3e>
 800ef62:	2308      	movs	r3, #8
 800ef64:	e7b3      	b.n	800eece <_strtoul_l.constprop.0+0x3e>
 800ef66:	2c30      	cmp	r4, #48	; 0x30
 800ef68:	d0a9      	beq.n	800eebe <_strtoul_l.constprop.0+0x2e>
 800ef6a:	230a      	movs	r3, #10
 800ef6c:	e7af      	b.n	800eece <_strtoul_l.constprop.0+0x3e>
 800ef6e:	bf00      	nop
 800ef70:	080107d9 	.word	0x080107d9

0800ef74 <_strtoul_r>:
 800ef74:	f7ff bf8c 	b.w	800ee90 <_strtoul_l.constprop.0>

0800ef78 <__submore>:
 800ef78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef7c:	460c      	mov	r4, r1
 800ef7e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800ef80:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ef84:	4299      	cmp	r1, r3
 800ef86:	d11b      	bne.n	800efc0 <__submore+0x48>
 800ef88:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800ef8c:	f7ff fa16 	bl	800e3bc <_malloc_r>
 800ef90:	b918      	cbnz	r0, 800ef9a <__submore+0x22>
 800ef92:	f04f 30ff 	mov.w	r0, #4294967295
 800ef96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ef9e:	63a3      	str	r3, [r4, #56]	; 0x38
 800efa0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800efa4:	6360      	str	r0, [r4, #52]	; 0x34
 800efa6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800efaa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800efae:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800efb2:	7043      	strb	r3, [r0, #1]
 800efb4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800efb8:	7003      	strb	r3, [r0, #0]
 800efba:	6020      	str	r0, [r4, #0]
 800efbc:	2000      	movs	r0, #0
 800efbe:	e7ea      	b.n	800ef96 <__submore+0x1e>
 800efc0:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800efc2:	0077      	lsls	r7, r6, #1
 800efc4:	463a      	mov	r2, r7
 800efc6:	f000 fa29 	bl	800f41c <_realloc_r>
 800efca:	4605      	mov	r5, r0
 800efcc:	2800      	cmp	r0, #0
 800efce:	d0e0      	beq.n	800ef92 <__submore+0x1a>
 800efd0:	eb00 0806 	add.w	r8, r0, r6
 800efd4:	4601      	mov	r1, r0
 800efd6:	4632      	mov	r2, r6
 800efd8:	4640      	mov	r0, r8
 800efda:	f7fb fcd3 	bl	800a984 <memcpy>
 800efde:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800efe2:	f8c4 8000 	str.w	r8, [r4]
 800efe6:	e7e9      	b.n	800efbc <__submore+0x44>

0800efe8 <__ascii_wctomb>:
 800efe8:	4603      	mov	r3, r0
 800efea:	4608      	mov	r0, r1
 800efec:	b141      	cbz	r1, 800f000 <__ascii_wctomb+0x18>
 800efee:	2aff      	cmp	r2, #255	; 0xff
 800eff0:	d904      	bls.n	800effc <__ascii_wctomb+0x14>
 800eff2:	228a      	movs	r2, #138	; 0x8a
 800eff4:	f04f 30ff 	mov.w	r0, #4294967295
 800eff8:	601a      	str	r2, [r3, #0]
 800effa:	4770      	bx	lr
 800effc:	2001      	movs	r0, #1
 800effe:	700a      	strb	r2, [r1, #0]
 800f000:	4770      	bx	lr
	...

0800f004 <__assert_func>:
 800f004:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f006:	4614      	mov	r4, r2
 800f008:	461a      	mov	r2, r3
 800f00a:	4b09      	ldr	r3, [pc, #36]	; (800f030 <__assert_func+0x2c>)
 800f00c:	4605      	mov	r5, r0
 800f00e:	681b      	ldr	r3, [r3, #0]
 800f010:	68d8      	ldr	r0, [r3, #12]
 800f012:	b14c      	cbz	r4, 800f028 <__assert_func+0x24>
 800f014:	4b07      	ldr	r3, [pc, #28]	; (800f034 <__assert_func+0x30>)
 800f016:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f01a:	9100      	str	r1, [sp, #0]
 800f01c:	462b      	mov	r3, r5
 800f01e:	4906      	ldr	r1, [pc, #24]	; (800f038 <__assert_func+0x34>)
 800f020:	f000 f9a2 	bl	800f368 <fiprintf>
 800f024:	f000 fc40 	bl	800f8a8 <abort>
 800f028:	4b04      	ldr	r3, [pc, #16]	; (800f03c <__assert_func+0x38>)
 800f02a:	461c      	mov	r4, r3
 800f02c:	e7f3      	b.n	800f016 <__assert_func+0x12>
 800f02e:	bf00      	nop
 800f030:	200001a0 	.word	0x200001a0
 800f034:	08010b68 	.word	0x08010b68
 800f038:	08010b75 	.word	0x08010b75
 800f03c:	08010ba3 	.word	0x08010ba3

0800f040 <__sflush_r>:
 800f040:	898a      	ldrh	r2, [r1, #12]
 800f042:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f044:	4605      	mov	r5, r0
 800f046:	0710      	lsls	r0, r2, #28
 800f048:	460c      	mov	r4, r1
 800f04a:	d457      	bmi.n	800f0fc <__sflush_r+0xbc>
 800f04c:	684b      	ldr	r3, [r1, #4]
 800f04e:	2b00      	cmp	r3, #0
 800f050:	dc04      	bgt.n	800f05c <__sflush_r+0x1c>
 800f052:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f054:	2b00      	cmp	r3, #0
 800f056:	dc01      	bgt.n	800f05c <__sflush_r+0x1c>
 800f058:	2000      	movs	r0, #0
 800f05a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f05c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f05e:	2e00      	cmp	r6, #0
 800f060:	d0fa      	beq.n	800f058 <__sflush_r+0x18>
 800f062:	2300      	movs	r3, #0
 800f064:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f068:	682f      	ldr	r7, [r5, #0]
 800f06a:	602b      	str	r3, [r5, #0]
 800f06c:	d032      	beq.n	800f0d4 <__sflush_r+0x94>
 800f06e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f070:	89a3      	ldrh	r3, [r4, #12]
 800f072:	075a      	lsls	r2, r3, #29
 800f074:	d505      	bpl.n	800f082 <__sflush_r+0x42>
 800f076:	6863      	ldr	r3, [r4, #4]
 800f078:	1ac0      	subs	r0, r0, r3
 800f07a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f07c:	b10b      	cbz	r3, 800f082 <__sflush_r+0x42>
 800f07e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f080:	1ac0      	subs	r0, r0, r3
 800f082:	2300      	movs	r3, #0
 800f084:	4602      	mov	r2, r0
 800f086:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f088:	4628      	mov	r0, r5
 800f08a:	6a21      	ldr	r1, [r4, #32]
 800f08c:	47b0      	blx	r6
 800f08e:	1c43      	adds	r3, r0, #1
 800f090:	89a3      	ldrh	r3, [r4, #12]
 800f092:	d106      	bne.n	800f0a2 <__sflush_r+0x62>
 800f094:	6829      	ldr	r1, [r5, #0]
 800f096:	291d      	cmp	r1, #29
 800f098:	d82c      	bhi.n	800f0f4 <__sflush_r+0xb4>
 800f09a:	4a29      	ldr	r2, [pc, #164]	; (800f140 <__sflush_r+0x100>)
 800f09c:	40ca      	lsrs	r2, r1
 800f09e:	07d6      	lsls	r6, r2, #31
 800f0a0:	d528      	bpl.n	800f0f4 <__sflush_r+0xb4>
 800f0a2:	2200      	movs	r2, #0
 800f0a4:	6062      	str	r2, [r4, #4]
 800f0a6:	6922      	ldr	r2, [r4, #16]
 800f0a8:	04d9      	lsls	r1, r3, #19
 800f0aa:	6022      	str	r2, [r4, #0]
 800f0ac:	d504      	bpl.n	800f0b8 <__sflush_r+0x78>
 800f0ae:	1c42      	adds	r2, r0, #1
 800f0b0:	d101      	bne.n	800f0b6 <__sflush_r+0x76>
 800f0b2:	682b      	ldr	r3, [r5, #0]
 800f0b4:	b903      	cbnz	r3, 800f0b8 <__sflush_r+0x78>
 800f0b6:	6560      	str	r0, [r4, #84]	; 0x54
 800f0b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f0ba:	602f      	str	r7, [r5, #0]
 800f0bc:	2900      	cmp	r1, #0
 800f0be:	d0cb      	beq.n	800f058 <__sflush_r+0x18>
 800f0c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f0c4:	4299      	cmp	r1, r3
 800f0c6:	d002      	beq.n	800f0ce <__sflush_r+0x8e>
 800f0c8:	4628      	mov	r0, r5
 800f0ca:	f7ff f90f 	bl	800e2ec <_free_r>
 800f0ce:	2000      	movs	r0, #0
 800f0d0:	6360      	str	r0, [r4, #52]	; 0x34
 800f0d2:	e7c2      	b.n	800f05a <__sflush_r+0x1a>
 800f0d4:	6a21      	ldr	r1, [r4, #32]
 800f0d6:	2301      	movs	r3, #1
 800f0d8:	4628      	mov	r0, r5
 800f0da:	47b0      	blx	r6
 800f0dc:	1c41      	adds	r1, r0, #1
 800f0de:	d1c7      	bne.n	800f070 <__sflush_r+0x30>
 800f0e0:	682b      	ldr	r3, [r5, #0]
 800f0e2:	2b00      	cmp	r3, #0
 800f0e4:	d0c4      	beq.n	800f070 <__sflush_r+0x30>
 800f0e6:	2b1d      	cmp	r3, #29
 800f0e8:	d001      	beq.n	800f0ee <__sflush_r+0xae>
 800f0ea:	2b16      	cmp	r3, #22
 800f0ec:	d101      	bne.n	800f0f2 <__sflush_r+0xb2>
 800f0ee:	602f      	str	r7, [r5, #0]
 800f0f0:	e7b2      	b.n	800f058 <__sflush_r+0x18>
 800f0f2:	89a3      	ldrh	r3, [r4, #12]
 800f0f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f0f8:	81a3      	strh	r3, [r4, #12]
 800f0fa:	e7ae      	b.n	800f05a <__sflush_r+0x1a>
 800f0fc:	690f      	ldr	r7, [r1, #16]
 800f0fe:	2f00      	cmp	r7, #0
 800f100:	d0aa      	beq.n	800f058 <__sflush_r+0x18>
 800f102:	0793      	lsls	r3, r2, #30
 800f104:	bf18      	it	ne
 800f106:	2300      	movne	r3, #0
 800f108:	680e      	ldr	r6, [r1, #0]
 800f10a:	bf08      	it	eq
 800f10c:	694b      	ldreq	r3, [r1, #20]
 800f10e:	1bf6      	subs	r6, r6, r7
 800f110:	600f      	str	r7, [r1, #0]
 800f112:	608b      	str	r3, [r1, #8]
 800f114:	2e00      	cmp	r6, #0
 800f116:	dd9f      	ble.n	800f058 <__sflush_r+0x18>
 800f118:	4633      	mov	r3, r6
 800f11a:	463a      	mov	r2, r7
 800f11c:	4628      	mov	r0, r5
 800f11e:	6a21      	ldr	r1, [r4, #32]
 800f120:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800f124:	47e0      	blx	ip
 800f126:	2800      	cmp	r0, #0
 800f128:	dc06      	bgt.n	800f138 <__sflush_r+0xf8>
 800f12a:	89a3      	ldrh	r3, [r4, #12]
 800f12c:	f04f 30ff 	mov.w	r0, #4294967295
 800f130:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f134:	81a3      	strh	r3, [r4, #12]
 800f136:	e790      	b.n	800f05a <__sflush_r+0x1a>
 800f138:	4407      	add	r7, r0
 800f13a:	1a36      	subs	r6, r6, r0
 800f13c:	e7ea      	b.n	800f114 <__sflush_r+0xd4>
 800f13e:	bf00      	nop
 800f140:	20400001 	.word	0x20400001

0800f144 <_fflush_r>:
 800f144:	b538      	push	{r3, r4, r5, lr}
 800f146:	690b      	ldr	r3, [r1, #16]
 800f148:	4605      	mov	r5, r0
 800f14a:	460c      	mov	r4, r1
 800f14c:	b913      	cbnz	r3, 800f154 <_fflush_r+0x10>
 800f14e:	2500      	movs	r5, #0
 800f150:	4628      	mov	r0, r5
 800f152:	bd38      	pop	{r3, r4, r5, pc}
 800f154:	b118      	cbz	r0, 800f15e <_fflush_r+0x1a>
 800f156:	6983      	ldr	r3, [r0, #24]
 800f158:	b90b      	cbnz	r3, 800f15e <_fflush_r+0x1a>
 800f15a:	f000 f887 	bl	800f26c <__sinit>
 800f15e:	4b14      	ldr	r3, [pc, #80]	; (800f1b0 <_fflush_r+0x6c>)
 800f160:	429c      	cmp	r4, r3
 800f162:	d11b      	bne.n	800f19c <_fflush_r+0x58>
 800f164:	686c      	ldr	r4, [r5, #4]
 800f166:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	d0ef      	beq.n	800f14e <_fflush_r+0xa>
 800f16e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f170:	07d0      	lsls	r0, r2, #31
 800f172:	d404      	bmi.n	800f17e <_fflush_r+0x3a>
 800f174:	0599      	lsls	r1, r3, #22
 800f176:	d402      	bmi.n	800f17e <_fflush_r+0x3a>
 800f178:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f17a:	f000 f927 	bl	800f3cc <__retarget_lock_acquire_recursive>
 800f17e:	4628      	mov	r0, r5
 800f180:	4621      	mov	r1, r4
 800f182:	f7ff ff5d 	bl	800f040 <__sflush_r>
 800f186:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f188:	4605      	mov	r5, r0
 800f18a:	07da      	lsls	r2, r3, #31
 800f18c:	d4e0      	bmi.n	800f150 <_fflush_r+0xc>
 800f18e:	89a3      	ldrh	r3, [r4, #12]
 800f190:	059b      	lsls	r3, r3, #22
 800f192:	d4dd      	bmi.n	800f150 <_fflush_r+0xc>
 800f194:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f196:	f000 f91a 	bl	800f3ce <__retarget_lock_release_recursive>
 800f19a:	e7d9      	b.n	800f150 <_fflush_r+0xc>
 800f19c:	4b05      	ldr	r3, [pc, #20]	; (800f1b4 <_fflush_r+0x70>)
 800f19e:	429c      	cmp	r4, r3
 800f1a0:	d101      	bne.n	800f1a6 <_fflush_r+0x62>
 800f1a2:	68ac      	ldr	r4, [r5, #8]
 800f1a4:	e7df      	b.n	800f166 <_fflush_r+0x22>
 800f1a6:	4b04      	ldr	r3, [pc, #16]	; (800f1b8 <_fflush_r+0x74>)
 800f1a8:	429c      	cmp	r4, r3
 800f1aa:	bf08      	it	eq
 800f1ac:	68ec      	ldreq	r4, [r5, #12]
 800f1ae:	e7da      	b.n	800f166 <_fflush_r+0x22>
 800f1b0:	08010bc4 	.word	0x08010bc4
 800f1b4:	08010be4 	.word	0x08010be4
 800f1b8:	08010ba4 	.word	0x08010ba4

0800f1bc <std>:
 800f1bc:	2300      	movs	r3, #0
 800f1be:	b510      	push	{r4, lr}
 800f1c0:	4604      	mov	r4, r0
 800f1c2:	e9c0 3300 	strd	r3, r3, [r0]
 800f1c6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f1ca:	6083      	str	r3, [r0, #8]
 800f1cc:	8181      	strh	r1, [r0, #12]
 800f1ce:	6643      	str	r3, [r0, #100]	; 0x64
 800f1d0:	81c2      	strh	r2, [r0, #14]
 800f1d2:	6183      	str	r3, [r0, #24]
 800f1d4:	4619      	mov	r1, r3
 800f1d6:	2208      	movs	r2, #8
 800f1d8:	305c      	adds	r0, #92	; 0x5c
 800f1da:	f7fb fbe1 	bl	800a9a0 <memset>
 800f1de:	4b05      	ldr	r3, [pc, #20]	; (800f1f4 <std+0x38>)
 800f1e0:	6224      	str	r4, [r4, #32]
 800f1e2:	6263      	str	r3, [r4, #36]	; 0x24
 800f1e4:	4b04      	ldr	r3, [pc, #16]	; (800f1f8 <std+0x3c>)
 800f1e6:	62a3      	str	r3, [r4, #40]	; 0x28
 800f1e8:	4b04      	ldr	r3, [pc, #16]	; (800f1fc <std+0x40>)
 800f1ea:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f1ec:	4b04      	ldr	r3, [pc, #16]	; (800f200 <std+0x44>)
 800f1ee:	6323      	str	r3, [r4, #48]	; 0x30
 800f1f0:	bd10      	pop	{r4, pc}
 800f1f2:	bf00      	nop
 800f1f4:	0800b729 	.word	0x0800b729
 800f1f8:	0800b74f 	.word	0x0800b74f
 800f1fc:	0800b787 	.word	0x0800b787
 800f200:	0800b7ab 	.word	0x0800b7ab

0800f204 <_cleanup_r>:
 800f204:	4901      	ldr	r1, [pc, #4]	; (800f20c <_cleanup_r+0x8>)
 800f206:	f000 b8c1 	b.w	800f38c <_fwalk_reent>
 800f20a:	bf00      	nop
 800f20c:	0800f145 	.word	0x0800f145

0800f210 <__sfmoreglue>:
 800f210:	2268      	movs	r2, #104	; 0x68
 800f212:	b570      	push	{r4, r5, r6, lr}
 800f214:	1e4d      	subs	r5, r1, #1
 800f216:	4355      	muls	r5, r2
 800f218:	460e      	mov	r6, r1
 800f21a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f21e:	f7ff f8cd 	bl	800e3bc <_malloc_r>
 800f222:	4604      	mov	r4, r0
 800f224:	b140      	cbz	r0, 800f238 <__sfmoreglue+0x28>
 800f226:	2100      	movs	r1, #0
 800f228:	e9c0 1600 	strd	r1, r6, [r0]
 800f22c:	300c      	adds	r0, #12
 800f22e:	60a0      	str	r0, [r4, #8]
 800f230:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f234:	f7fb fbb4 	bl	800a9a0 <memset>
 800f238:	4620      	mov	r0, r4
 800f23a:	bd70      	pop	{r4, r5, r6, pc}

0800f23c <__sfp_lock_acquire>:
 800f23c:	4801      	ldr	r0, [pc, #4]	; (800f244 <__sfp_lock_acquire+0x8>)
 800f23e:	f000 b8c5 	b.w	800f3cc <__retarget_lock_acquire_recursive>
 800f242:	bf00      	nop
 800f244:	2000143d 	.word	0x2000143d

0800f248 <__sfp_lock_release>:
 800f248:	4801      	ldr	r0, [pc, #4]	; (800f250 <__sfp_lock_release+0x8>)
 800f24a:	f000 b8c0 	b.w	800f3ce <__retarget_lock_release_recursive>
 800f24e:	bf00      	nop
 800f250:	2000143d 	.word	0x2000143d

0800f254 <__sinit_lock_acquire>:
 800f254:	4801      	ldr	r0, [pc, #4]	; (800f25c <__sinit_lock_acquire+0x8>)
 800f256:	f000 b8b9 	b.w	800f3cc <__retarget_lock_acquire_recursive>
 800f25a:	bf00      	nop
 800f25c:	2000143e 	.word	0x2000143e

0800f260 <__sinit_lock_release>:
 800f260:	4801      	ldr	r0, [pc, #4]	; (800f268 <__sinit_lock_release+0x8>)
 800f262:	f000 b8b4 	b.w	800f3ce <__retarget_lock_release_recursive>
 800f266:	bf00      	nop
 800f268:	2000143e 	.word	0x2000143e

0800f26c <__sinit>:
 800f26c:	b510      	push	{r4, lr}
 800f26e:	4604      	mov	r4, r0
 800f270:	f7ff fff0 	bl	800f254 <__sinit_lock_acquire>
 800f274:	69a3      	ldr	r3, [r4, #24]
 800f276:	b11b      	cbz	r3, 800f280 <__sinit+0x14>
 800f278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f27c:	f7ff bff0 	b.w	800f260 <__sinit_lock_release>
 800f280:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f284:	6523      	str	r3, [r4, #80]	; 0x50
 800f286:	4b13      	ldr	r3, [pc, #76]	; (800f2d4 <__sinit+0x68>)
 800f288:	4a13      	ldr	r2, [pc, #76]	; (800f2d8 <__sinit+0x6c>)
 800f28a:	681b      	ldr	r3, [r3, #0]
 800f28c:	62a2      	str	r2, [r4, #40]	; 0x28
 800f28e:	42a3      	cmp	r3, r4
 800f290:	bf08      	it	eq
 800f292:	2301      	moveq	r3, #1
 800f294:	4620      	mov	r0, r4
 800f296:	bf08      	it	eq
 800f298:	61a3      	streq	r3, [r4, #24]
 800f29a:	f000 f81f 	bl	800f2dc <__sfp>
 800f29e:	6060      	str	r0, [r4, #4]
 800f2a0:	4620      	mov	r0, r4
 800f2a2:	f000 f81b 	bl	800f2dc <__sfp>
 800f2a6:	60a0      	str	r0, [r4, #8]
 800f2a8:	4620      	mov	r0, r4
 800f2aa:	f000 f817 	bl	800f2dc <__sfp>
 800f2ae:	2200      	movs	r2, #0
 800f2b0:	2104      	movs	r1, #4
 800f2b2:	60e0      	str	r0, [r4, #12]
 800f2b4:	6860      	ldr	r0, [r4, #4]
 800f2b6:	f7ff ff81 	bl	800f1bc <std>
 800f2ba:	2201      	movs	r2, #1
 800f2bc:	2109      	movs	r1, #9
 800f2be:	68a0      	ldr	r0, [r4, #8]
 800f2c0:	f7ff ff7c 	bl	800f1bc <std>
 800f2c4:	2202      	movs	r2, #2
 800f2c6:	2112      	movs	r1, #18
 800f2c8:	68e0      	ldr	r0, [r4, #12]
 800f2ca:	f7ff ff77 	bl	800f1bc <std>
 800f2ce:	2301      	movs	r3, #1
 800f2d0:	61a3      	str	r3, [r4, #24]
 800f2d2:	e7d1      	b.n	800f278 <__sinit+0xc>
 800f2d4:	08010748 	.word	0x08010748
 800f2d8:	0800f205 	.word	0x0800f205

0800f2dc <__sfp>:
 800f2dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2de:	4607      	mov	r7, r0
 800f2e0:	f7ff ffac 	bl	800f23c <__sfp_lock_acquire>
 800f2e4:	4b1e      	ldr	r3, [pc, #120]	; (800f360 <__sfp+0x84>)
 800f2e6:	681e      	ldr	r6, [r3, #0]
 800f2e8:	69b3      	ldr	r3, [r6, #24]
 800f2ea:	b913      	cbnz	r3, 800f2f2 <__sfp+0x16>
 800f2ec:	4630      	mov	r0, r6
 800f2ee:	f7ff ffbd 	bl	800f26c <__sinit>
 800f2f2:	3648      	adds	r6, #72	; 0x48
 800f2f4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f2f8:	3b01      	subs	r3, #1
 800f2fa:	d503      	bpl.n	800f304 <__sfp+0x28>
 800f2fc:	6833      	ldr	r3, [r6, #0]
 800f2fe:	b30b      	cbz	r3, 800f344 <__sfp+0x68>
 800f300:	6836      	ldr	r6, [r6, #0]
 800f302:	e7f7      	b.n	800f2f4 <__sfp+0x18>
 800f304:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f308:	b9d5      	cbnz	r5, 800f340 <__sfp+0x64>
 800f30a:	4b16      	ldr	r3, [pc, #88]	; (800f364 <__sfp+0x88>)
 800f30c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f310:	60e3      	str	r3, [r4, #12]
 800f312:	6665      	str	r5, [r4, #100]	; 0x64
 800f314:	f000 f859 	bl	800f3ca <__retarget_lock_init_recursive>
 800f318:	f7ff ff96 	bl	800f248 <__sfp_lock_release>
 800f31c:	2208      	movs	r2, #8
 800f31e:	4629      	mov	r1, r5
 800f320:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f324:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f328:	6025      	str	r5, [r4, #0]
 800f32a:	61a5      	str	r5, [r4, #24]
 800f32c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f330:	f7fb fb36 	bl	800a9a0 <memset>
 800f334:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f338:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f33c:	4620      	mov	r0, r4
 800f33e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f340:	3468      	adds	r4, #104	; 0x68
 800f342:	e7d9      	b.n	800f2f8 <__sfp+0x1c>
 800f344:	2104      	movs	r1, #4
 800f346:	4638      	mov	r0, r7
 800f348:	f7ff ff62 	bl	800f210 <__sfmoreglue>
 800f34c:	4604      	mov	r4, r0
 800f34e:	6030      	str	r0, [r6, #0]
 800f350:	2800      	cmp	r0, #0
 800f352:	d1d5      	bne.n	800f300 <__sfp+0x24>
 800f354:	f7ff ff78 	bl	800f248 <__sfp_lock_release>
 800f358:	230c      	movs	r3, #12
 800f35a:	603b      	str	r3, [r7, #0]
 800f35c:	e7ee      	b.n	800f33c <__sfp+0x60>
 800f35e:	bf00      	nop
 800f360:	08010748 	.word	0x08010748
 800f364:	ffff0001 	.word	0xffff0001

0800f368 <fiprintf>:
 800f368:	b40e      	push	{r1, r2, r3}
 800f36a:	b503      	push	{r0, r1, lr}
 800f36c:	4601      	mov	r1, r0
 800f36e:	ab03      	add	r3, sp, #12
 800f370:	4805      	ldr	r0, [pc, #20]	; (800f388 <fiprintf+0x20>)
 800f372:	f853 2b04 	ldr.w	r2, [r3], #4
 800f376:	6800      	ldr	r0, [r0, #0]
 800f378:	9301      	str	r3, [sp, #4]
 800f37a:	f000 f8a5 	bl	800f4c8 <_vfiprintf_r>
 800f37e:	b002      	add	sp, #8
 800f380:	f85d eb04 	ldr.w	lr, [sp], #4
 800f384:	b003      	add	sp, #12
 800f386:	4770      	bx	lr
 800f388:	200001a0 	.word	0x200001a0

0800f38c <_fwalk_reent>:
 800f38c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f390:	4606      	mov	r6, r0
 800f392:	4688      	mov	r8, r1
 800f394:	2700      	movs	r7, #0
 800f396:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f39a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f39e:	f1b9 0901 	subs.w	r9, r9, #1
 800f3a2:	d505      	bpl.n	800f3b0 <_fwalk_reent+0x24>
 800f3a4:	6824      	ldr	r4, [r4, #0]
 800f3a6:	2c00      	cmp	r4, #0
 800f3a8:	d1f7      	bne.n	800f39a <_fwalk_reent+0xe>
 800f3aa:	4638      	mov	r0, r7
 800f3ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f3b0:	89ab      	ldrh	r3, [r5, #12]
 800f3b2:	2b01      	cmp	r3, #1
 800f3b4:	d907      	bls.n	800f3c6 <_fwalk_reent+0x3a>
 800f3b6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f3ba:	3301      	adds	r3, #1
 800f3bc:	d003      	beq.n	800f3c6 <_fwalk_reent+0x3a>
 800f3be:	4629      	mov	r1, r5
 800f3c0:	4630      	mov	r0, r6
 800f3c2:	47c0      	blx	r8
 800f3c4:	4307      	orrs	r7, r0
 800f3c6:	3568      	adds	r5, #104	; 0x68
 800f3c8:	e7e9      	b.n	800f39e <_fwalk_reent+0x12>

0800f3ca <__retarget_lock_init_recursive>:
 800f3ca:	4770      	bx	lr

0800f3cc <__retarget_lock_acquire_recursive>:
 800f3cc:	4770      	bx	lr

0800f3ce <__retarget_lock_release_recursive>:
 800f3ce:	4770      	bx	lr

0800f3d0 <memmove>:
 800f3d0:	4288      	cmp	r0, r1
 800f3d2:	b510      	push	{r4, lr}
 800f3d4:	eb01 0402 	add.w	r4, r1, r2
 800f3d8:	d902      	bls.n	800f3e0 <memmove+0x10>
 800f3da:	4284      	cmp	r4, r0
 800f3dc:	4623      	mov	r3, r4
 800f3de:	d807      	bhi.n	800f3f0 <memmove+0x20>
 800f3e0:	1e43      	subs	r3, r0, #1
 800f3e2:	42a1      	cmp	r1, r4
 800f3e4:	d008      	beq.n	800f3f8 <memmove+0x28>
 800f3e6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f3ea:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f3ee:	e7f8      	b.n	800f3e2 <memmove+0x12>
 800f3f0:	4601      	mov	r1, r0
 800f3f2:	4402      	add	r2, r0
 800f3f4:	428a      	cmp	r2, r1
 800f3f6:	d100      	bne.n	800f3fa <memmove+0x2a>
 800f3f8:	bd10      	pop	{r4, pc}
 800f3fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f3fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f402:	e7f7      	b.n	800f3f4 <memmove+0x24>

0800f404 <__malloc_lock>:
 800f404:	4801      	ldr	r0, [pc, #4]	; (800f40c <__malloc_lock+0x8>)
 800f406:	f7ff bfe1 	b.w	800f3cc <__retarget_lock_acquire_recursive>
 800f40a:	bf00      	nop
 800f40c:	2000143c 	.word	0x2000143c

0800f410 <__malloc_unlock>:
 800f410:	4801      	ldr	r0, [pc, #4]	; (800f418 <__malloc_unlock+0x8>)
 800f412:	f7ff bfdc 	b.w	800f3ce <__retarget_lock_release_recursive>
 800f416:	bf00      	nop
 800f418:	2000143c 	.word	0x2000143c

0800f41c <_realloc_r>:
 800f41c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f420:	4680      	mov	r8, r0
 800f422:	4614      	mov	r4, r2
 800f424:	460e      	mov	r6, r1
 800f426:	b921      	cbnz	r1, 800f432 <_realloc_r+0x16>
 800f428:	4611      	mov	r1, r2
 800f42a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f42e:	f7fe bfc5 	b.w	800e3bc <_malloc_r>
 800f432:	b92a      	cbnz	r2, 800f440 <_realloc_r+0x24>
 800f434:	f7fe ff5a 	bl	800e2ec <_free_r>
 800f438:	4625      	mov	r5, r4
 800f43a:	4628      	mov	r0, r5
 800f43c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f440:	f000 fa9e 	bl	800f980 <_malloc_usable_size_r>
 800f444:	4284      	cmp	r4, r0
 800f446:	4607      	mov	r7, r0
 800f448:	d802      	bhi.n	800f450 <_realloc_r+0x34>
 800f44a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f44e:	d812      	bhi.n	800f476 <_realloc_r+0x5a>
 800f450:	4621      	mov	r1, r4
 800f452:	4640      	mov	r0, r8
 800f454:	f7fe ffb2 	bl	800e3bc <_malloc_r>
 800f458:	4605      	mov	r5, r0
 800f45a:	2800      	cmp	r0, #0
 800f45c:	d0ed      	beq.n	800f43a <_realloc_r+0x1e>
 800f45e:	42bc      	cmp	r4, r7
 800f460:	4622      	mov	r2, r4
 800f462:	4631      	mov	r1, r6
 800f464:	bf28      	it	cs
 800f466:	463a      	movcs	r2, r7
 800f468:	f7fb fa8c 	bl	800a984 <memcpy>
 800f46c:	4631      	mov	r1, r6
 800f46e:	4640      	mov	r0, r8
 800f470:	f7fe ff3c 	bl	800e2ec <_free_r>
 800f474:	e7e1      	b.n	800f43a <_realloc_r+0x1e>
 800f476:	4635      	mov	r5, r6
 800f478:	e7df      	b.n	800f43a <_realloc_r+0x1e>

0800f47a <__sfputc_r>:
 800f47a:	6893      	ldr	r3, [r2, #8]
 800f47c:	b410      	push	{r4}
 800f47e:	3b01      	subs	r3, #1
 800f480:	2b00      	cmp	r3, #0
 800f482:	6093      	str	r3, [r2, #8]
 800f484:	da07      	bge.n	800f496 <__sfputc_r+0x1c>
 800f486:	6994      	ldr	r4, [r2, #24]
 800f488:	42a3      	cmp	r3, r4
 800f48a:	db01      	blt.n	800f490 <__sfputc_r+0x16>
 800f48c:	290a      	cmp	r1, #10
 800f48e:	d102      	bne.n	800f496 <__sfputc_r+0x1c>
 800f490:	bc10      	pop	{r4}
 800f492:	f000 b949 	b.w	800f728 <__swbuf_r>
 800f496:	6813      	ldr	r3, [r2, #0]
 800f498:	1c58      	adds	r0, r3, #1
 800f49a:	6010      	str	r0, [r2, #0]
 800f49c:	7019      	strb	r1, [r3, #0]
 800f49e:	4608      	mov	r0, r1
 800f4a0:	bc10      	pop	{r4}
 800f4a2:	4770      	bx	lr

0800f4a4 <__sfputs_r>:
 800f4a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4a6:	4606      	mov	r6, r0
 800f4a8:	460f      	mov	r7, r1
 800f4aa:	4614      	mov	r4, r2
 800f4ac:	18d5      	adds	r5, r2, r3
 800f4ae:	42ac      	cmp	r4, r5
 800f4b0:	d101      	bne.n	800f4b6 <__sfputs_r+0x12>
 800f4b2:	2000      	movs	r0, #0
 800f4b4:	e007      	b.n	800f4c6 <__sfputs_r+0x22>
 800f4b6:	463a      	mov	r2, r7
 800f4b8:	4630      	mov	r0, r6
 800f4ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f4be:	f7ff ffdc 	bl	800f47a <__sfputc_r>
 800f4c2:	1c43      	adds	r3, r0, #1
 800f4c4:	d1f3      	bne.n	800f4ae <__sfputs_r+0xa>
 800f4c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f4c8 <_vfiprintf_r>:
 800f4c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4cc:	460d      	mov	r5, r1
 800f4ce:	4614      	mov	r4, r2
 800f4d0:	4698      	mov	r8, r3
 800f4d2:	4606      	mov	r6, r0
 800f4d4:	b09d      	sub	sp, #116	; 0x74
 800f4d6:	b118      	cbz	r0, 800f4e0 <_vfiprintf_r+0x18>
 800f4d8:	6983      	ldr	r3, [r0, #24]
 800f4da:	b90b      	cbnz	r3, 800f4e0 <_vfiprintf_r+0x18>
 800f4dc:	f7ff fec6 	bl	800f26c <__sinit>
 800f4e0:	4b89      	ldr	r3, [pc, #548]	; (800f708 <_vfiprintf_r+0x240>)
 800f4e2:	429d      	cmp	r5, r3
 800f4e4:	d11b      	bne.n	800f51e <_vfiprintf_r+0x56>
 800f4e6:	6875      	ldr	r5, [r6, #4]
 800f4e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f4ea:	07d9      	lsls	r1, r3, #31
 800f4ec:	d405      	bmi.n	800f4fa <_vfiprintf_r+0x32>
 800f4ee:	89ab      	ldrh	r3, [r5, #12]
 800f4f0:	059a      	lsls	r2, r3, #22
 800f4f2:	d402      	bmi.n	800f4fa <_vfiprintf_r+0x32>
 800f4f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f4f6:	f7ff ff69 	bl	800f3cc <__retarget_lock_acquire_recursive>
 800f4fa:	89ab      	ldrh	r3, [r5, #12]
 800f4fc:	071b      	lsls	r3, r3, #28
 800f4fe:	d501      	bpl.n	800f504 <_vfiprintf_r+0x3c>
 800f500:	692b      	ldr	r3, [r5, #16]
 800f502:	b9eb      	cbnz	r3, 800f540 <_vfiprintf_r+0x78>
 800f504:	4629      	mov	r1, r5
 800f506:	4630      	mov	r0, r6
 800f508:	f000 f960 	bl	800f7cc <__swsetup_r>
 800f50c:	b1c0      	cbz	r0, 800f540 <_vfiprintf_r+0x78>
 800f50e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f510:	07dc      	lsls	r4, r3, #31
 800f512:	d50e      	bpl.n	800f532 <_vfiprintf_r+0x6a>
 800f514:	f04f 30ff 	mov.w	r0, #4294967295
 800f518:	b01d      	add	sp, #116	; 0x74
 800f51a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f51e:	4b7b      	ldr	r3, [pc, #492]	; (800f70c <_vfiprintf_r+0x244>)
 800f520:	429d      	cmp	r5, r3
 800f522:	d101      	bne.n	800f528 <_vfiprintf_r+0x60>
 800f524:	68b5      	ldr	r5, [r6, #8]
 800f526:	e7df      	b.n	800f4e8 <_vfiprintf_r+0x20>
 800f528:	4b79      	ldr	r3, [pc, #484]	; (800f710 <_vfiprintf_r+0x248>)
 800f52a:	429d      	cmp	r5, r3
 800f52c:	bf08      	it	eq
 800f52e:	68f5      	ldreq	r5, [r6, #12]
 800f530:	e7da      	b.n	800f4e8 <_vfiprintf_r+0x20>
 800f532:	89ab      	ldrh	r3, [r5, #12]
 800f534:	0598      	lsls	r0, r3, #22
 800f536:	d4ed      	bmi.n	800f514 <_vfiprintf_r+0x4c>
 800f538:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f53a:	f7ff ff48 	bl	800f3ce <__retarget_lock_release_recursive>
 800f53e:	e7e9      	b.n	800f514 <_vfiprintf_r+0x4c>
 800f540:	2300      	movs	r3, #0
 800f542:	9309      	str	r3, [sp, #36]	; 0x24
 800f544:	2320      	movs	r3, #32
 800f546:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f54a:	2330      	movs	r3, #48	; 0x30
 800f54c:	f04f 0901 	mov.w	r9, #1
 800f550:	f8cd 800c 	str.w	r8, [sp, #12]
 800f554:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 800f714 <_vfiprintf_r+0x24c>
 800f558:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f55c:	4623      	mov	r3, r4
 800f55e:	469a      	mov	sl, r3
 800f560:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f564:	b10a      	cbz	r2, 800f56a <_vfiprintf_r+0xa2>
 800f566:	2a25      	cmp	r2, #37	; 0x25
 800f568:	d1f9      	bne.n	800f55e <_vfiprintf_r+0x96>
 800f56a:	ebba 0b04 	subs.w	fp, sl, r4
 800f56e:	d00b      	beq.n	800f588 <_vfiprintf_r+0xc0>
 800f570:	465b      	mov	r3, fp
 800f572:	4622      	mov	r2, r4
 800f574:	4629      	mov	r1, r5
 800f576:	4630      	mov	r0, r6
 800f578:	f7ff ff94 	bl	800f4a4 <__sfputs_r>
 800f57c:	3001      	adds	r0, #1
 800f57e:	f000 80aa 	beq.w	800f6d6 <_vfiprintf_r+0x20e>
 800f582:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f584:	445a      	add	r2, fp
 800f586:	9209      	str	r2, [sp, #36]	; 0x24
 800f588:	f89a 3000 	ldrb.w	r3, [sl]
 800f58c:	2b00      	cmp	r3, #0
 800f58e:	f000 80a2 	beq.w	800f6d6 <_vfiprintf_r+0x20e>
 800f592:	2300      	movs	r3, #0
 800f594:	f04f 32ff 	mov.w	r2, #4294967295
 800f598:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f59c:	f10a 0a01 	add.w	sl, sl, #1
 800f5a0:	9304      	str	r3, [sp, #16]
 800f5a2:	9307      	str	r3, [sp, #28]
 800f5a4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f5a8:	931a      	str	r3, [sp, #104]	; 0x68
 800f5aa:	4654      	mov	r4, sl
 800f5ac:	2205      	movs	r2, #5
 800f5ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f5b2:	4858      	ldr	r0, [pc, #352]	; (800f714 <_vfiprintf_r+0x24c>)
 800f5b4:	f7fe f9c0 	bl	800d938 <memchr>
 800f5b8:	9a04      	ldr	r2, [sp, #16]
 800f5ba:	b9d8      	cbnz	r0, 800f5f4 <_vfiprintf_r+0x12c>
 800f5bc:	06d1      	lsls	r1, r2, #27
 800f5be:	bf44      	itt	mi
 800f5c0:	2320      	movmi	r3, #32
 800f5c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f5c6:	0713      	lsls	r3, r2, #28
 800f5c8:	bf44      	itt	mi
 800f5ca:	232b      	movmi	r3, #43	; 0x2b
 800f5cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f5d0:	f89a 3000 	ldrb.w	r3, [sl]
 800f5d4:	2b2a      	cmp	r3, #42	; 0x2a
 800f5d6:	d015      	beq.n	800f604 <_vfiprintf_r+0x13c>
 800f5d8:	4654      	mov	r4, sl
 800f5da:	2000      	movs	r0, #0
 800f5dc:	f04f 0c0a 	mov.w	ip, #10
 800f5e0:	9a07      	ldr	r2, [sp, #28]
 800f5e2:	4621      	mov	r1, r4
 800f5e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f5e8:	3b30      	subs	r3, #48	; 0x30
 800f5ea:	2b09      	cmp	r3, #9
 800f5ec:	d94e      	bls.n	800f68c <_vfiprintf_r+0x1c4>
 800f5ee:	b1b0      	cbz	r0, 800f61e <_vfiprintf_r+0x156>
 800f5f0:	9207      	str	r2, [sp, #28]
 800f5f2:	e014      	b.n	800f61e <_vfiprintf_r+0x156>
 800f5f4:	eba0 0308 	sub.w	r3, r0, r8
 800f5f8:	fa09 f303 	lsl.w	r3, r9, r3
 800f5fc:	4313      	orrs	r3, r2
 800f5fe:	46a2      	mov	sl, r4
 800f600:	9304      	str	r3, [sp, #16]
 800f602:	e7d2      	b.n	800f5aa <_vfiprintf_r+0xe2>
 800f604:	9b03      	ldr	r3, [sp, #12]
 800f606:	1d19      	adds	r1, r3, #4
 800f608:	681b      	ldr	r3, [r3, #0]
 800f60a:	9103      	str	r1, [sp, #12]
 800f60c:	2b00      	cmp	r3, #0
 800f60e:	bfbb      	ittet	lt
 800f610:	425b      	neglt	r3, r3
 800f612:	f042 0202 	orrlt.w	r2, r2, #2
 800f616:	9307      	strge	r3, [sp, #28]
 800f618:	9307      	strlt	r3, [sp, #28]
 800f61a:	bfb8      	it	lt
 800f61c:	9204      	strlt	r2, [sp, #16]
 800f61e:	7823      	ldrb	r3, [r4, #0]
 800f620:	2b2e      	cmp	r3, #46	; 0x2e
 800f622:	d10c      	bne.n	800f63e <_vfiprintf_r+0x176>
 800f624:	7863      	ldrb	r3, [r4, #1]
 800f626:	2b2a      	cmp	r3, #42	; 0x2a
 800f628:	d135      	bne.n	800f696 <_vfiprintf_r+0x1ce>
 800f62a:	9b03      	ldr	r3, [sp, #12]
 800f62c:	3402      	adds	r4, #2
 800f62e:	1d1a      	adds	r2, r3, #4
 800f630:	681b      	ldr	r3, [r3, #0]
 800f632:	9203      	str	r2, [sp, #12]
 800f634:	2b00      	cmp	r3, #0
 800f636:	bfb8      	it	lt
 800f638:	f04f 33ff 	movlt.w	r3, #4294967295
 800f63c:	9305      	str	r3, [sp, #20]
 800f63e:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800f718 <_vfiprintf_r+0x250>
 800f642:	2203      	movs	r2, #3
 800f644:	4650      	mov	r0, sl
 800f646:	7821      	ldrb	r1, [r4, #0]
 800f648:	f7fe f976 	bl	800d938 <memchr>
 800f64c:	b140      	cbz	r0, 800f660 <_vfiprintf_r+0x198>
 800f64e:	2340      	movs	r3, #64	; 0x40
 800f650:	eba0 000a 	sub.w	r0, r0, sl
 800f654:	fa03 f000 	lsl.w	r0, r3, r0
 800f658:	9b04      	ldr	r3, [sp, #16]
 800f65a:	3401      	adds	r4, #1
 800f65c:	4303      	orrs	r3, r0
 800f65e:	9304      	str	r3, [sp, #16]
 800f660:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f664:	2206      	movs	r2, #6
 800f666:	482d      	ldr	r0, [pc, #180]	; (800f71c <_vfiprintf_r+0x254>)
 800f668:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f66c:	f7fe f964 	bl	800d938 <memchr>
 800f670:	2800      	cmp	r0, #0
 800f672:	d03f      	beq.n	800f6f4 <_vfiprintf_r+0x22c>
 800f674:	4b2a      	ldr	r3, [pc, #168]	; (800f720 <_vfiprintf_r+0x258>)
 800f676:	bb1b      	cbnz	r3, 800f6c0 <_vfiprintf_r+0x1f8>
 800f678:	9b03      	ldr	r3, [sp, #12]
 800f67a:	3307      	adds	r3, #7
 800f67c:	f023 0307 	bic.w	r3, r3, #7
 800f680:	3308      	adds	r3, #8
 800f682:	9303      	str	r3, [sp, #12]
 800f684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f686:	443b      	add	r3, r7
 800f688:	9309      	str	r3, [sp, #36]	; 0x24
 800f68a:	e767      	b.n	800f55c <_vfiprintf_r+0x94>
 800f68c:	460c      	mov	r4, r1
 800f68e:	2001      	movs	r0, #1
 800f690:	fb0c 3202 	mla	r2, ip, r2, r3
 800f694:	e7a5      	b.n	800f5e2 <_vfiprintf_r+0x11a>
 800f696:	2300      	movs	r3, #0
 800f698:	f04f 0c0a 	mov.w	ip, #10
 800f69c:	4619      	mov	r1, r3
 800f69e:	3401      	adds	r4, #1
 800f6a0:	9305      	str	r3, [sp, #20]
 800f6a2:	4620      	mov	r0, r4
 800f6a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f6a8:	3a30      	subs	r2, #48	; 0x30
 800f6aa:	2a09      	cmp	r2, #9
 800f6ac:	d903      	bls.n	800f6b6 <_vfiprintf_r+0x1ee>
 800f6ae:	2b00      	cmp	r3, #0
 800f6b0:	d0c5      	beq.n	800f63e <_vfiprintf_r+0x176>
 800f6b2:	9105      	str	r1, [sp, #20]
 800f6b4:	e7c3      	b.n	800f63e <_vfiprintf_r+0x176>
 800f6b6:	4604      	mov	r4, r0
 800f6b8:	2301      	movs	r3, #1
 800f6ba:	fb0c 2101 	mla	r1, ip, r1, r2
 800f6be:	e7f0      	b.n	800f6a2 <_vfiprintf_r+0x1da>
 800f6c0:	ab03      	add	r3, sp, #12
 800f6c2:	9300      	str	r3, [sp, #0]
 800f6c4:	462a      	mov	r2, r5
 800f6c6:	4630      	mov	r0, r6
 800f6c8:	4b16      	ldr	r3, [pc, #88]	; (800f724 <_vfiprintf_r+0x25c>)
 800f6ca:	a904      	add	r1, sp, #16
 800f6cc:	f7fb fa0e 	bl	800aaec <_printf_float>
 800f6d0:	4607      	mov	r7, r0
 800f6d2:	1c78      	adds	r0, r7, #1
 800f6d4:	d1d6      	bne.n	800f684 <_vfiprintf_r+0x1bc>
 800f6d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f6d8:	07d9      	lsls	r1, r3, #31
 800f6da:	d405      	bmi.n	800f6e8 <_vfiprintf_r+0x220>
 800f6dc:	89ab      	ldrh	r3, [r5, #12]
 800f6de:	059a      	lsls	r2, r3, #22
 800f6e0:	d402      	bmi.n	800f6e8 <_vfiprintf_r+0x220>
 800f6e2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f6e4:	f7ff fe73 	bl	800f3ce <__retarget_lock_release_recursive>
 800f6e8:	89ab      	ldrh	r3, [r5, #12]
 800f6ea:	065b      	lsls	r3, r3, #25
 800f6ec:	f53f af12 	bmi.w	800f514 <_vfiprintf_r+0x4c>
 800f6f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f6f2:	e711      	b.n	800f518 <_vfiprintf_r+0x50>
 800f6f4:	ab03      	add	r3, sp, #12
 800f6f6:	9300      	str	r3, [sp, #0]
 800f6f8:	462a      	mov	r2, r5
 800f6fa:	4630      	mov	r0, r6
 800f6fc:	4b09      	ldr	r3, [pc, #36]	; (800f724 <_vfiprintf_r+0x25c>)
 800f6fe:	a904      	add	r1, sp, #16
 800f700:	f7fb fc90 	bl	800b024 <_printf_i>
 800f704:	e7e4      	b.n	800f6d0 <_vfiprintf_r+0x208>
 800f706:	bf00      	nop
 800f708:	08010bc4 	.word	0x08010bc4
 800f70c:	08010be4 	.word	0x08010be4
 800f710:	08010ba4 	.word	0x08010ba4
 800f714:	08010b3c 	.word	0x08010b3c
 800f718:	08010b42 	.word	0x08010b42
 800f71c:	08010b46 	.word	0x08010b46
 800f720:	0800aaed 	.word	0x0800aaed
 800f724:	0800f4a5 	.word	0x0800f4a5

0800f728 <__swbuf_r>:
 800f728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f72a:	460e      	mov	r6, r1
 800f72c:	4614      	mov	r4, r2
 800f72e:	4605      	mov	r5, r0
 800f730:	b118      	cbz	r0, 800f73a <__swbuf_r+0x12>
 800f732:	6983      	ldr	r3, [r0, #24]
 800f734:	b90b      	cbnz	r3, 800f73a <__swbuf_r+0x12>
 800f736:	f7ff fd99 	bl	800f26c <__sinit>
 800f73a:	4b21      	ldr	r3, [pc, #132]	; (800f7c0 <__swbuf_r+0x98>)
 800f73c:	429c      	cmp	r4, r3
 800f73e:	d12b      	bne.n	800f798 <__swbuf_r+0x70>
 800f740:	686c      	ldr	r4, [r5, #4]
 800f742:	69a3      	ldr	r3, [r4, #24]
 800f744:	60a3      	str	r3, [r4, #8]
 800f746:	89a3      	ldrh	r3, [r4, #12]
 800f748:	071a      	lsls	r2, r3, #28
 800f74a:	d52f      	bpl.n	800f7ac <__swbuf_r+0x84>
 800f74c:	6923      	ldr	r3, [r4, #16]
 800f74e:	b36b      	cbz	r3, 800f7ac <__swbuf_r+0x84>
 800f750:	6923      	ldr	r3, [r4, #16]
 800f752:	6820      	ldr	r0, [r4, #0]
 800f754:	b2f6      	uxtb	r6, r6
 800f756:	1ac0      	subs	r0, r0, r3
 800f758:	6963      	ldr	r3, [r4, #20]
 800f75a:	4637      	mov	r7, r6
 800f75c:	4283      	cmp	r3, r0
 800f75e:	dc04      	bgt.n	800f76a <__swbuf_r+0x42>
 800f760:	4621      	mov	r1, r4
 800f762:	4628      	mov	r0, r5
 800f764:	f7ff fcee 	bl	800f144 <_fflush_r>
 800f768:	bb30      	cbnz	r0, 800f7b8 <__swbuf_r+0x90>
 800f76a:	68a3      	ldr	r3, [r4, #8]
 800f76c:	3001      	adds	r0, #1
 800f76e:	3b01      	subs	r3, #1
 800f770:	60a3      	str	r3, [r4, #8]
 800f772:	6823      	ldr	r3, [r4, #0]
 800f774:	1c5a      	adds	r2, r3, #1
 800f776:	6022      	str	r2, [r4, #0]
 800f778:	701e      	strb	r6, [r3, #0]
 800f77a:	6963      	ldr	r3, [r4, #20]
 800f77c:	4283      	cmp	r3, r0
 800f77e:	d004      	beq.n	800f78a <__swbuf_r+0x62>
 800f780:	89a3      	ldrh	r3, [r4, #12]
 800f782:	07db      	lsls	r3, r3, #31
 800f784:	d506      	bpl.n	800f794 <__swbuf_r+0x6c>
 800f786:	2e0a      	cmp	r6, #10
 800f788:	d104      	bne.n	800f794 <__swbuf_r+0x6c>
 800f78a:	4621      	mov	r1, r4
 800f78c:	4628      	mov	r0, r5
 800f78e:	f7ff fcd9 	bl	800f144 <_fflush_r>
 800f792:	b988      	cbnz	r0, 800f7b8 <__swbuf_r+0x90>
 800f794:	4638      	mov	r0, r7
 800f796:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f798:	4b0a      	ldr	r3, [pc, #40]	; (800f7c4 <__swbuf_r+0x9c>)
 800f79a:	429c      	cmp	r4, r3
 800f79c:	d101      	bne.n	800f7a2 <__swbuf_r+0x7a>
 800f79e:	68ac      	ldr	r4, [r5, #8]
 800f7a0:	e7cf      	b.n	800f742 <__swbuf_r+0x1a>
 800f7a2:	4b09      	ldr	r3, [pc, #36]	; (800f7c8 <__swbuf_r+0xa0>)
 800f7a4:	429c      	cmp	r4, r3
 800f7a6:	bf08      	it	eq
 800f7a8:	68ec      	ldreq	r4, [r5, #12]
 800f7aa:	e7ca      	b.n	800f742 <__swbuf_r+0x1a>
 800f7ac:	4621      	mov	r1, r4
 800f7ae:	4628      	mov	r0, r5
 800f7b0:	f000 f80c 	bl	800f7cc <__swsetup_r>
 800f7b4:	2800      	cmp	r0, #0
 800f7b6:	d0cb      	beq.n	800f750 <__swbuf_r+0x28>
 800f7b8:	f04f 37ff 	mov.w	r7, #4294967295
 800f7bc:	e7ea      	b.n	800f794 <__swbuf_r+0x6c>
 800f7be:	bf00      	nop
 800f7c0:	08010bc4 	.word	0x08010bc4
 800f7c4:	08010be4 	.word	0x08010be4
 800f7c8:	08010ba4 	.word	0x08010ba4

0800f7cc <__swsetup_r>:
 800f7cc:	4b32      	ldr	r3, [pc, #200]	; (800f898 <__swsetup_r+0xcc>)
 800f7ce:	b570      	push	{r4, r5, r6, lr}
 800f7d0:	681d      	ldr	r5, [r3, #0]
 800f7d2:	4606      	mov	r6, r0
 800f7d4:	460c      	mov	r4, r1
 800f7d6:	b125      	cbz	r5, 800f7e2 <__swsetup_r+0x16>
 800f7d8:	69ab      	ldr	r3, [r5, #24]
 800f7da:	b913      	cbnz	r3, 800f7e2 <__swsetup_r+0x16>
 800f7dc:	4628      	mov	r0, r5
 800f7de:	f7ff fd45 	bl	800f26c <__sinit>
 800f7e2:	4b2e      	ldr	r3, [pc, #184]	; (800f89c <__swsetup_r+0xd0>)
 800f7e4:	429c      	cmp	r4, r3
 800f7e6:	d10f      	bne.n	800f808 <__swsetup_r+0x3c>
 800f7e8:	686c      	ldr	r4, [r5, #4]
 800f7ea:	89a3      	ldrh	r3, [r4, #12]
 800f7ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f7f0:	0719      	lsls	r1, r3, #28
 800f7f2:	d42c      	bmi.n	800f84e <__swsetup_r+0x82>
 800f7f4:	06dd      	lsls	r5, r3, #27
 800f7f6:	d411      	bmi.n	800f81c <__swsetup_r+0x50>
 800f7f8:	2309      	movs	r3, #9
 800f7fa:	6033      	str	r3, [r6, #0]
 800f7fc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f800:	f04f 30ff 	mov.w	r0, #4294967295
 800f804:	81a3      	strh	r3, [r4, #12]
 800f806:	e03e      	b.n	800f886 <__swsetup_r+0xba>
 800f808:	4b25      	ldr	r3, [pc, #148]	; (800f8a0 <__swsetup_r+0xd4>)
 800f80a:	429c      	cmp	r4, r3
 800f80c:	d101      	bne.n	800f812 <__swsetup_r+0x46>
 800f80e:	68ac      	ldr	r4, [r5, #8]
 800f810:	e7eb      	b.n	800f7ea <__swsetup_r+0x1e>
 800f812:	4b24      	ldr	r3, [pc, #144]	; (800f8a4 <__swsetup_r+0xd8>)
 800f814:	429c      	cmp	r4, r3
 800f816:	bf08      	it	eq
 800f818:	68ec      	ldreq	r4, [r5, #12]
 800f81a:	e7e6      	b.n	800f7ea <__swsetup_r+0x1e>
 800f81c:	0758      	lsls	r0, r3, #29
 800f81e:	d512      	bpl.n	800f846 <__swsetup_r+0x7a>
 800f820:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f822:	b141      	cbz	r1, 800f836 <__swsetup_r+0x6a>
 800f824:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f828:	4299      	cmp	r1, r3
 800f82a:	d002      	beq.n	800f832 <__swsetup_r+0x66>
 800f82c:	4630      	mov	r0, r6
 800f82e:	f7fe fd5d 	bl	800e2ec <_free_r>
 800f832:	2300      	movs	r3, #0
 800f834:	6363      	str	r3, [r4, #52]	; 0x34
 800f836:	89a3      	ldrh	r3, [r4, #12]
 800f838:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f83c:	81a3      	strh	r3, [r4, #12]
 800f83e:	2300      	movs	r3, #0
 800f840:	6063      	str	r3, [r4, #4]
 800f842:	6923      	ldr	r3, [r4, #16]
 800f844:	6023      	str	r3, [r4, #0]
 800f846:	89a3      	ldrh	r3, [r4, #12]
 800f848:	f043 0308 	orr.w	r3, r3, #8
 800f84c:	81a3      	strh	r3, [r4, #12]
 800f84e:	6923      	ldr	r3, [r4, #16]
 800f850:	b94b      	cbnz	r3, 800f866 <__swsetup_r+0x9a>
 800f852:	89a3      	ldrh	r3, [r4, #12]
 800f854:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f858:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f85c:	d003      	beq.n	800f866 <__swsetup_r+0x9a>
 800f85e:	4621      	mov	r1, r4
 800f860:	4630      	mov	r0, r6
 800f862:	f000 f84d 	bl	800f900 <__smakebuf_r>
 800f866:	89a0      	ldrh	r0, [r4, #12]
 800f868:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f86c:	f010 0301 	ands.w	r3, r0, #1
 800f870:	d00a      	beq.n	800f888 <__swsetup_r+0xbc>
 800f872:	2300      	movs	r3, #0
 800f874:	60a3      	str	r3, [r4, #8]
 800f876:	6963      	ldr	r3, [r4, #20]
 800f878:	425b      	negs	r3, r3
 800f87a:	61a3      	str	r3, [r4, #24]
 800f87c:	6923      	ldr	r3, [r4, #16]
 800f87e:	b943      	cbnz	r3, 800f892 <__swsetup_r+0xc6>
 800f880:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f884:	d1ba      	bne.n	800f7fc <__swsetup_r+0x30>
 800f886:	bd70      	pop	{r4, r5, r6, pc}
 800f888:	0781      	lsls	r1, r0, #30
 800f88a:	bf58      	it	pl
 800f88c:	6963      	ldrpl	r3, [r4, #20]
 800f88e:	60a3      	str	r3, [r4, #8]
 800f890:	e7f4      	b.n	800f87c <__swsetup_r+0xb0>
 800f892:	2000      	movs	r0, #0
 800f894:	e7f7      	b.n	800f886 <__swsetup_r+0xba>
 800f896:	bf00      	nop
 800f898:	200001a0 	.word	0x200001a0
 800f89c:	08010bc4 	.word	0x08010bc4
 800f8a0:	08010be4 	.word	0x08010be4
 800f8a4:	08010ba4 	.word	0x08010ba4

0800f8a8 <abort>:
 800f8a8:	2006      	movs	r0, #6
 800f8aa:	b508      	push	{r3, lr}
 800f8ac:	f000 f898 	bl	800f9e0 <raise>
 800f8b0:	2001      	movs	r0, #1
 800f8b2:	f7f5 fad4 	bl	8004e5e <_exit>

0800f8b6 <__swhatbuf_r>:
 800f8b6:	b570      	push	{r4, r5, r6, lr}
 800f8b8:	460e      	mov	r6, r1
 800f8ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f8be:	4614      	mov	r4, r2
 800f8c0:	2900      	cmp	r1, #0
 800f8c2:	461d      	mov	r5, r3
 800f8c4:	b096      	sub	sp, #88	; 0x58
 800f8c6:	da08      	bge.n	800f8da <__swhatbuf_r+0x24>
 800f8c8:	2200      	movs	r2, #0
 800f8ca:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800f8ce:	602a      	str	r2, [r5, #0]
 800f8d0:	061a      	lsls	r2, r3, #24
 800f8d2:	d410      	bmi.n	800f8f6 <__swhatbuf_r+0x40>
 800f8d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f8d8:	e00e      	b.n	800f8f8 <__swhatbuf_r+0x42>
 800f8da:	466a      	mov	r2, sp
 800f8dc:	f000 f89c 	bl	800fa18 <_fstat_r>
 800f8e0:	2800      	cmp	r0, #0
 800f8e2:	dbf1      	blt.n	800f8c8 <__swhatbuf_r+0x12>
 800f8e4:	9a01      	ldr	r2, [sp, #4]
 800f8e6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800f8ea:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800f8ee:	425a      	negs	r2, r3
 800f8f0:	415a      	adcs	r2, r3
 800f8f2:	602a      	str	r2, [r5, #0]
 800f8f4:	e7ee      	b.n	800f8d4 <__swhatbuf_r+0x1e>
 800f8f6:	2340      	movs	r3, #64	; 0x40
 800f8f8:	2000      	movs	r0, #0
 800f8fa:	6023      	str	r3, [r4, #0]
 800f8fc:	b016      	add	sp, #88	; 0x58
 800f8fe:	bd70      	pop	{r4, r5, r6, pc}

0800f900 <__smakebuf_r>:
 800f900:	898b      	ldrh	r3, [r1, #12]
 800f902:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f904:	079d      	lsls	r5, r3, #30
 800f906:	4606      	mov	r6, r0
 800f908:	460c      	mov	r4, r1
 800f90a:	d507      	bpl.n	800f91c <__smakebuf_r+0x1c>
 800f90c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800f910:	6023      	str	r3, [r4, #0]
 800f912:	6123      	str	r3, [r4, #16]
 800f914:	2301      	movs	r3, #1
 800f916:	6163      	str	r3, [r4, #20]
 800f918:	b002      	add	sp, #8
 800f91a:	bd70      	pop	{r4, r5, r6, pc}
 800f91c:	466a      	mov	r2, sp
 800f91e:	ab01      	add	r3, sp, #4
 800f920:	f7ff ffc9 	bl	800f8b6 <__swhatbuf_r>
 800f924:	9900      	ldr	r1, [sp, #0]
 800f926:	4605      	mov	r5, r0
 800f928:	4630      	mov	r0, r6
 800f92a:	f7fe fd47 	bl	800e3bc <_malloc_r>
 800f92e:	b948      	cbnz	r0, 800f944 <__smakebuf_r+0x44>
 800f930:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f934:	059a      	lsls	r2, r3, #22
 800f936:	d4ef      	bmi.n	800f918 <__smakebuf_r+0x18>
 800f938:	f023 0303 	bic.w	r3, r3, #3
 800f93c:	f043 0302 	orr.w	r3, r3, #2
 800f940:	81a3      	strh	r3, [r4, #12]
 800f942:	e7e3      	b.n	800f90c <__smakebuf_r+0xc>
 800f944:	4b0d      	ldr	r3, [pc, #52]	; (800f97c <__smakebuf_r+0x7c>)
 800f946:	62b3      	str	r3, [r6, #40]	; 0x28
 800f948:	89a3      	ldrh	r3, [r4, #12]
 800f94a:	6020      	str	r0, [r4, #0]
 800f94c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f950:	81a3      	strh	r3, [r4, #12]
 800f952:	9b00      	ldr	r3, [sp, #0]
 800f954:	6120      	str	r0, [r4, #16]
 800f956:	6163      	str	r3, [r4, #20]
 800f958:	9b01      	ldr	r3, [sp, #4]
 800f95a:	b15b      	cbz	r3, 800f974 <__smakebuf_r+0x74>
 800f95c:	4630      	mov	r0, r6
 800f95e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f962:	f000 f86b 	bl	800fa3c <_isatty_r>
 800f966:	b128      	cbz	r0, 800f974 <__smakebuf_r+0x74>
 800f968:	89a3      	ldrh	r3, [r4, #12]
 800f96a:	f023 0303 	bic.w	r3, r3, #3
 800f96e:	f043 0301 	orr.w	r3, r3, #1
 800f972:	81a3      	strh	r3, [r4, #12]
 800f974:	89a0      	ldrh	r0, [r4, #12]
 800f976:	4305      	orrs	r5, r0
 800f978:	81a5      	strh	r5, [r4, #12]
 800f97a:	e7cd      	b.n	800f918 <__smakebuf_r+0x18>
 800f97c:	0800f205 	.word	0x0800f205

0800f980 <_malloc_usable_size_r>:
 800f980:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800f984:	1f18      	subs	r0, r3, #4
 800f986:	2b00      	cmp	r3, #0
 800f988:	bfbc      	itt	lt
 800f98a:	580b      	ldrlt	r3, [r1, r0]
 800f98c:	18c0      	addlt	r0, r0, r3
 800f98e:	4770      	bx	lr

0800f990 <_raise_r>:
 800f990:	291f      	cmp	r1, #31
 800f992:	b538      	push	{r3, r4, r5, lr}
 800f994:	4604      	mov	r4, r0
 800f996:	460d      	mov	r5, r1
 800f998:	d904      	bls.n	800f9a4 <_raise_r+0x14>
 800f99a:	2316      	movs	r3, #22
 800f99c:	6003      	str	r3, [r0, #0]
 800f99e:	f04f 30ff 	mov.w	r0, #4294967295
 800f9a2:	bd38      	pop	{r3, r4, r5, pc}
 800f9a4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800f9a6:	b112      	cbz	r2, 800f9ae <_raise_r+0x1e>
 800f9a8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800f9ac:	b94b      	cbnz	r3, 800f9c2 <_raise_r+0x32>
 800f9ae:	4620      	mov	r0, r4
 800f9b0:	f000 f830 	bl	800fa14 <_getpid_r>
 800f9b4:	462a      	mov	r2, r5
 800f9b6:	4601      	mov	r1, r0
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f9be:	f000 b817 	b.w	800f9f0 <_kill_r>
 800f9c2:	2b01      	cmp	r3, #1
 800f9c4:	d00a      	beq.n	800f9dc <_raise_r+0x4c>
 800f9c6:	1c59      	adds	r1, r3, #1
 800f9c8:	d103      	bne.n	800f9d2 <_raise_r+0x42>
 800f9ca:	2316      	movs	r3, #22
 800f9cc:	6003      	str	r3, [r0, #0]
 800f9ce:	2001      	movs	r0, #1
 800f9d0:	e7e7      	b.n	800f9a2 <_raise_r+0x12>
 800f9d2:	2400      	movs	r4, #0
 800f9d4:	4628      	mov	r0, r5
 800f9d6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800f9da:	4798      	blx	r3
 800f9dc:	2000      	movs	r0, #0
 800f9de:	e7e0      	b.n	800f9a2 <_raise_r+0x12>

0800f9e0 <raise>:
 800f9e0:	4b02      	ldr	r3, [pc, #8]	; (800f9ec <raise+0xc>)
 800f9e2:	4601      	mov	r1, r0
 800f9e4:	6818      	ldr	r0, [r3, #0]
 800f9e6:	f7ff bfd3 	b.w	800f990 <_raise_r>
 800f9ea:	bf00      	nop
 800f9ec:	200001a0 	.word	0x200001a0

0800f9f0 <_kill_r>:
 800f9f0:	b538      	push	{r3, r4, r5, lr}
 800f9f2:	2300      	movs	r3, #0
 800f9f4:	4d06      	ldr	r5, [pc, #24]	; (800fa10 <_kill_r+0x20>)
 800f9f6:	4604      	mov	r4, r0
 800f9f8:	4608      	mov	r0, r1
 800f9fa:	4611      	mov	r1, r2
 800f9fc:	602b      	str	r3, [r5, #0]
 800f9fe:	f7f5 fa1e 	bl	8004e3e <_kill>
 800fa02:	1c43      	adds	r3, r0, #1
 800fa04:	d102      	bne.n	800fa0c <_kill_r+0x1c>
 800fa06:	682b      	ldr	r3, [r5, #0]
 800fa08:	b103      	cbz	r3, 800fa0c <_kill_r+0x1c>
 800fa0a:	6023      	str	r3, [r4, #0]
 800fa0c:	bd38      	pop	{r3, r4, r5, pc}
 800fa0e:	bf00      	nop
 800fa10:	20001438 	.word	0x20001438

0800fa14 <_getpid_r>:
 800fa14:	f7f5 ba0c 	b.w	8004e30 <_getpid>

0800fa18 <_fstat_r>:
 800fa18:	b538      	push	{r3, r4, r5, lr}
 800fa1a:	2300      	movs	r3, #0
 800fa1c:	4d06      	ldr	r5, [pc, #24]	; (800fa38 <_fstat_r+0x20>)
 800fa1e:	4604      	mov	r4, r0
 800fa20:	4608      	mov	r0, r1
 800fa22:	4611      	mov	r1, r2
 800fa24:	602b      	str	r3, [r5, #0]
 800fa26:	f7f5 fa68 	bl	8004efa <_fstat>
 800fa2a:	1c43      	adds	r3, r0, #1
 800fa2c:	d102      	bne.n	800fa34 <_fstat_r+0x1c>
 800fa2e:	682b      	ldr	r3, [r5, #0]
 800fa30:	b103      	cbz	r3, 800fa34 <_fstat_r+0x1c>
 800fa32:	6023      	str	r3, [r4, #0]
 800fa34:	bd38      	pop	{r3, r4, r5, pc}
 800fa36:	bf00      	nop
 800fa38:	20001438 	.word	0x20001438

0800fa3c <_isatty_r>:
 800fa3c:	b538      	push	{r3, r4, r5, lr}
 800fa3e:	2300      	movs	r3, #0
 800fa40:	4d05      	ldr	r5, [pc, #20]	; (800fa58 <_isatty_r+0x1c>)
 800fa42:	4604      	mov	r4, r0
 800fa44:	4608      	mov	r0, r1
 800fa46:	602b      	str	r3, [r5, #0]
 800fa48:	f7f5 fa66 	bl	8004f18 <_isatty>
 800fa4c:	1c43      	adds	r3, r0, #1
 800fa4e:	d102      	bne.n	800fa56 <_isatty_r+0x1a>
 800fa50:	682b      	ldr	r3, [r5, #0]
 800fa52:	b103      	cbz	r3, 800fa56 <_isatty_r+0x1a>
 800fa54:	6023      	str	r3, [r4, #0]
 800fa56:	bd38      	pop	{r3, r4, r5, pc}
 800fa58:	20001438 	.word	0x20001438

0800fa5c <_init>:
 800fa5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa5e:	bf00      	nop
 800fa60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fa62:	bc08      	pop	{r3}
 800fa64:	469e      	mov	lr, r3
 800fa66:	4770      	bx	lr

0800fa68 <_fini>:
 800fa68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa6a:	bf00      	nop
 800fa6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fa6e:	bc08      	pop	{r3}
 800fa70:	469e      	mov	lr, r3
 800fa72:	4770      	bx	lr
 800fa74:	0000      	movs	r0, r0
	...

0800fa78 <__HAL_GPIO_EXTI_Callback_veneer>:
 800fa78:	f85f f000 	ldr.w	pc, [pc]	; 800fa7c <__HAL_GPIO_EXTI_Callback_veneer+0x4>
 800fa7c:	200003a9 	.word	0x200003a9

Disassembly of section .data:

20000000 <USB_rx_command_buffer>:
20000000:	20000708 00000000 0001001e              ... ........

2000000c <amp_target_speed>:
2000000c:	2b8cbccc                                ...+

20000010 <ramp_target_speed>:
20000010:	3dcccccd                                ...=

20000014 <DDS_target_multipiller>:
20000014:	00000001                                ....

20000018 <DDS_clock_frequecny>:
20000018:	4b189680                                ...K

2000001c <Display_need_wakeup>:
2000001c:	                                         .

2000001d <CAL_STATE>:
2000001d:	                                         ...

20000020 <SystemCoreClock>:
20000020:	001fff68                                h...

20000024 <TMP117_DeviceID>:
20000024:	00000092                                ....

20000028 <uwTickFreq>:
20000028:	00000001                                ....

2000002c <uwTickPrio>:
2000002c:	00000010                                ....

20000030 <USBD_CDC>:
20000030:	080098f9 080098b5 080097f1 00000000     ................
20000040:	0800970d 080097a9 08009779 00000000     ........y.......
	...
20000058:	08009749 08009739 08009759 08009769     I...9...Y...i...

20000068 <USBD_CDC_CfgFSDesc>:
20000068:	00430209 c0000102 00040932 02020100     ..C.....2.......
20000078:	24050001 05011000 01000124 02022404     ...$....$....$..
20000088:	00062405 82050701 10000803 00010409     .$..............
20000098:	00000a02 01050700 00004002 02810507     .........@......
200000a8:	00000040                                @...

200000ac <USBD_CDC_CfgHSDesc>:
200000ac:	00430209 c0000102 00040932 02020100     ..C.....2.......
200000bc:	24050001 05011000 01000124 02022404     ...$....$....$..
200000cc:	00062405 82050701 10000803 00010409     .$..............
200000dc:	00000a02 01050700 00020002 02810507     ................
200000ec:	00000200                                ....

200000f0 <USBD_CDC_DeviceQualifierDesc>:
200000f0:	0200060a 40000000 00000001              .......@....

200000fc <USBD_CDC_OtherSpeedCfgDesc>:
200000fc:	00430709 c0040102 00040932 02020100     ..C.....2.......
2000010c:	24050001 05011000 01000124 02022404     ...$....$....$..
2000011c:	00062405 82050701 10000803 00010409     .$..............
2000012c:	00000a02 01050700 00004002 02810507     .........@......
2000013c:	00000040                                @...

20000140 <USBD_Interface_fops_FS>:
20000140:	0800a31d 0800a319 0800a345 0800a361     ........E...a...

20000150 <FS_Desc>:
20000150:	0800a405 0800a411 0800a41d 0800a439     ............9...
20000160:	0800a48d 0800a455 0800a471              ....U...q...

2000016c <USBD_FS_DeviceDesc>:
2000016c:	02000112 40000202 57400483 02010200     .......@..@W....
2000017c:	00000103                                ....

20000180 <USBD_LangIDDesc>:
20000180:	04090304                                ....

20000184 <USBD_StringSerial>:
20000184:	0000031a 00000000 00000000 00000000     ................
	...

200001a0 <_impure_ptr>:
200001a0:	200001a4                                ... 

200001a4 <impure_data>:
200001a4:	00000000 08010bc4 08010be4 08010ba4     ................
	...

20000204 <numempty>:
20000204:	000000ff                                ....

20000208 <__global_locale>:
20000208:	00000043 00000000 00000000 00000000     C...............
	...
20000228:	00000043 00000000 00000000 00000000     C...............
	...
20000248:	00000043 00000000 00000000 00000000     C...............
	...
20000268:	00000043 00000000 00000000 00000000     C...............
	...
20000288:	00000043 00000000 00000000 00000000     C...............
	...
200002a8:	00000043 00000000 00000000 00000000     C...............
	...
200002c8:	00000043 00000000 00000000 00000000     C...............
	...
200002e8:	0800efe9 0800d915 00000000 080107d8     ................
200002f8:	080109cc 08010ba3 08010ba3 08010ba3     ................
20000308:	08010ba3 08010ba3 08010ba3 08010ba3     ................
20000318:	08010ba3 08010ba3 ffffffff ffffffff     ................
20000328:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000350:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000374 <DAC_Write_FAST>:
{
20000374:	b580      	push	{r7, lr}
20000376:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
20000378:	2200      	movs	r2, #0
2000037a:	2110      	movs	r1, #16
2000037c:	4807      	ldr	r0, [pc, #28]	; (2000039c <DAC_Write_FAST+0x28>)
2000037e:	f000 f8c3 	bl	20000508 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
20000382:	2302      	movs	r3, #2
20000384:	2202      	movs	r2, #2
20000386:	4906      	ldr	r1, [pc, #24]	; (200003a0 <DAC_Write_FAST+0x2c>)
20000388:	4806      	ldr	r0, [pc, #24]	; (200003a4 <DAC_Write_FAST+0x30>)
2000038a:	f000 f8b5 	bl	200004f8 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
2000038e:	2201      	movs	r2, #1
20000390:	2110      	movs	r1, #16
20000392:	4802      	ldr	r0, [pc, #8]	; (2000039c <DAC_Write_FAST+0x28>)
20000394:	f000 f8b8 	bl	20000508 <__HAL_GPIO_WritePin_veneer>
}
20000398:	bf00      	nop
2000039a:	bd80      	pop	{r7, pc}
2000039c:	40020000 	.word	0x40020000
200003a0:	2000072c 	.word	0x2000072c
200003a4:	2000076c 	.word	0x2000076c

200003a8 <HAL_GPIO_EXTI_Callback>:
{
200003a8:	b580      	push	{r7, lr}
200003aa:	b082      	sub	sp, #8
200003ac:	af00      	add	r7, sp, #0
200003ae:	4603      	mov	r3, r0
200003b0:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == CPU_IRQ_Pin) // CPU_IRQ signal from Timebase CPLD
200003b2:	88fb      	ldrh	r3, [r7, #6]
200003b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
200003b8:	d17d      	bne.n	200004b6 <HAL_GPIO_EXTI_Callback+0x10e>
		DAC_Write_FAST(); // Сначала стреляем, а потом уже разговариваем
200003ba:	f7ff ffdb 	bl	20000374 <DAC_Write_FAST>
		Ramp_dac_step_complete=1;
200003be:	4b45      	ldr	r3, [pc, #276]	; (200004d4 <HAL_GPIO_EXTI_Callback+0x12c>)
200003c0:	2201      	movs	r2, #1
200003c2:	701a      	strb	r2, [r3, #0]
		switch(DAC_code_direction)
200003c4:	4b44      	ldr	r3, [pc, #272]	; (200004d8 <HAL_GPIO_EXTI_Callback+0x130>)
200003c6:	781b      	ldrb	r3, [r3, #0]
200003c8:	2b02      	cmp	r3, #2
200003ca:	d02d      	beq.n	20000428 <HAL_GPIO_EXTI_Callback+0x80>
200003cc:	2b02      	cmp	r3, #2
200003ce:	dc57      	bgt.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
200003d0:	2b00      	cmp	r3, #0
200003d2:	d017      	beq.n	20000404 <HAL_GPIO_EXTI_Callback+0x5c>
200003d4:	2b01      	cmp	r3, #1
200003d6:	d153      	bne.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
			if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
200003d8:	4b40      	ldr	r3, [pc, #256]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
200003da:	681b      	ldr	r3, [r3, #0]
200003dc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
200003e0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
200003e4:	4a3e      	ldr	r2, [pc, #248]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003e6:	6812      	ldr	r2, [r2, #0]
200003e8:	4293      	cmp	r3, r2
200003ea:	d307      	bcc.n	200003fc <HAL_GPIO_EXTI_Callback+0x54>
				DAC_code+=DDS_target_multipiller;
200003ec:	4b3c      	ldr	r3, [pc, #240]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003ee:	681a      	ldr	r2, [r3, #0]
200003f0:	4b3a      	ldr	r3, [pc, #232]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
200003f2:	681b      	ldr	r3, [r3, #0]
200003f4:	4413      	add	r3, r2
200003f6:	4a3a      	ldr	r2, [pc, #232]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003f8:	6013      	str	r3, [r2, #0]
			break;
200003fa:	e041      	b.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
200003fc:	2000      	movs	r0, #0
200003fe:	f000 f87f 	bl	20000500 <__CPLD_control_veneer>
				return;
20000402:	e063      	b.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
			if(DAC_code>=DDS_target_multipiller)
20000404:	4b36      	ldr	r3, [pc, #216]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000406:	681a      	ldr	r2, [r3, #0]
20000408:	4b34      	ldr	r3, [pc, #208]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000040a:	681b      	ldr	r3, [r3, #0]
2000040c:	429a      	cmp	r2, r3
2000040e:	d307      	bcc.n	20000420 <HAL_GPIO_EXTI_Callback+0x78>
				DAC_code-=DDS_target_multipiller;
20000410:	4b33      	ldr	r3, [pc, #204]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000412:	681a      	ldr	r2, [r3, #0]
20000414:	4b31      	ldr	r3, [pc, #196]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000416:	681b      	ldr	r3, [r3, #0]
20000418:	1ad3      	subs	r3, r2, r3
2000041a:	4a31      	ldr	r2, [pc, #196]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000041c:	6013      	str	r3, [r2, #0]
			break;
2000041e:	e02f      	b.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
20000420:	2000      	movs	r0, #0
20000422:	f000 f86d 	bl	20000500 <__CPLD_control_veneer>
				return;
20000426:	e051      	b.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
			if(DAC_code_direction_for_cycle_mode == 1)
20000428:	4b2e      	ldr	r3, [pc, #184]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
2000042a:	781b      	ldrb	r3, [r3, #0]
2000042c:	2b01      	cmp	r3, #1
2000042e:	d115      	bne.n	2000045c <HAL_GPIO_EXTI_Callback+0xb4>
				if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
20000430:	4b2a      	ldr	r3, [pc, #168]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000432:	681b      	ldr	r3, [r3, #0]
20000434:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
20000438:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
2000043c:	4a28      	ldr	r2, [pc, #160]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000043e:	6812      	ldr	r2, [r2, #0]
20000440:	4293      	cmp	r3, r2
20000442:	d307      	bcc.n	20000454 <HAL_GPIO_EXTI_Callback+0xac>
					DAC_code+=DDS_target_multipiller;
20000444:	4b26      	ldr	r3, [pc, #152]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000446:	681a      	ldr	r2, [r3, #0]
20000448:	4b24      	ldr	r3, [pc, #144]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000044a:	681b      	ldr	r3, [r3, #0]
2000044c:	4413      	add	r3, r2
2000044e:	4a24      	ldr	r2, [pc, #144]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000450:	6013      	str	r3, [r2, #0]
			break;
20000452:	e014      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				} else  DAC_code_direction_for_cycle_mode=0;
20000454:	4b23      	ldr	r3, [pc, #140]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
20000456:	2200      	movs	r2, #0
20000458:	701a      	strb	r2, [r3, #0]
			break;
2000045a:	e010      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				if(DAC_code>=DDS_target_multipiller)
2000045c:	4b20      	ldr	r3, [pc, #128]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000045e:	681a      	ldr	r2, [r3, #0]
20000460:	4b1e      	ldr	r3, [pc, #120]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000462:	681b      	ldr	r3, [r3, #0]
20000464:	429a      	cmp	r2, r3
20000466:	d307      	bcc.n	20000478 <HAL_GPIO_EXTI_Callback+0xd0>
					DAC_code-=DDS_target_multipiller;
20000468:	4b1d      	ldr	r3, [pc, #116]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000046a:	681a      	ldr	r2, [r3, #0]
2000046c:	4b1b      	ldr	r3, [pc, #108]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000046e:	681b      	ldr	r3, [r3, #0]
20000470:	1ad3      	subs	r3, r2, r3
20000472:	4a1b      	ldr	r2, [pc, #108]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000474:	6013      	str	r3, [r2, #0]
			break;
20000476:	e002      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				} else DAC_code_direction_for_cycle_mode=1;
20000478:	4b1a      	ldr	r3, [pc, #104]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
2000047a:	2201      	movs	r2, #1
2000047c:	701a      	strb	r2, [r3, #0]
			break;
2000047e:	bf00      	nop
		DAC_tx_buffer=0x01000000; // Write DAC-DATA
20000480:	4b19      	ldr	r3, [pc, #100]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
20000482:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
20000486:	601a      	str	r2, [r3, #0]
		DAC_tx_buffer+=(DAC_code & 0xFFFFF)<<4;
20000488:	4b15      	ldr	r3, [pc, #84]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000048a:	681b      	ldr	r3, [r3, #0]
2000048c:	011b      	lsls	r3, r3, #4
2000048e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
20000492:	f023 030f 	bic.w	r3, r3, #15
20000496:	4a14      	ldr	r2, [pc, #80]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
20000498:	6812      	ldr	r2, [r2, #0]
2000049a:	4413      	add	r3, r2
2000049c:	4a12      	ldr	r2, [pc, #72]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
2000049e:	6013      	str	r3, [r2, #0]
		DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
200004a0:	4b11      	ldr	r3, [pc, #68]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
200004a2:	681b      	ldr	r3, [r3, #0]
200004a4:	0c1b      	lsrs	r3, r3, #16
200004a6:	b29a      	uxth	r2, r3
200004a8:	4b10      	ldr	r3, [pc, #64]	; (200004ec <HAL_GPIO_EXTI_Callback+0x144>)
200004aa:	801a      	strh	r2, [r3, #0]
		DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
200004ac:	4b0e      	ldr	r3, [pc, #56]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
200004ae:	681b      	ldr	r3, [r3, #0]
200004b0:	b29a      	uxth	r2, r3
200004b2:	4b0e      	ldr	r3, [pc, #56]	; (200004ec <HAL_GPIO_EXTI_Callback+0x144>)
200004b4:	805a      	strh	r2, [r3, #2]
	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
200004b6:	88fb      	ldrh	r3, [r7, #6]
200004b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
200004bc:	d003      	beq.n	200004c6 <HAL_GPIO_EXTI_Callback+0x11e>
200004be:	88fb      	ldrh	r3, [r7, #6]
200004c0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
200004c4:	d102      	bne.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
200004c6:	4b0a      	ldr	r3, [pc, #40]	; (200004f0 <HAL_GPIO_EXTI_Callback+0x148>)
200004c8:	2201      	movs	r2, #1
200004ca:	701a      	strb	r2, [r3, #0]
}
200004cc:	3708      	adds	r7, #8
200004ce:	46bd      	mov	sp, r7
200004d0:	bd80      	pop	{r7, pc}
200004d2:	bf00      	nop
200004d4:	20000769 	.word	0x20000769
200004d8:	20000764 	.word	0x20000764
200004dc:	20000014 	.word	0x20000014
200004e0:	20000760 	.word	0x20000760
200004e4:	20000765 	.word	0x20000765
200004e8:	20000728 	.word	0x20000728
200004ec:	2000072c 	.word	0x2000072c
200004f0:	2000001c 	.word	0x2000001c
200004f4:	00000000 	.word	0x00000000

200004f8 <__HAL_SPI_Transmit_veneer>:
200004f8:	f85f f000 	ldr.w	pc, [pc]	; 200004fc <__HAL_SPI_Transmit_veneer+0x4>
200004fc:	08007c61 	.word	0x08007c61

20000500 <__CPLD_control_veneer>:
20000500:	f85f f000 	ldr.w	pc, [pc]	; 20000504 <__CPLD_control_veneer+0x4>
20000504:	080017c1 	.word	0x080017c1

20000508 <__HAL_GPIO_WritePin_veneer>:
20000508:	f85f f000 	ldr.w	pc, [pc]	; 2000050c <__HAL_GPIO_WritePin_veneer+0x4>
2000050c:	08005b59 	.word	0x08005b59
