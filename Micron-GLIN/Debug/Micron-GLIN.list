
Micron-GLIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fe70  08000140  08000140  00010140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001244  0800ffb0  0800ffb0  0001ffb0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080111f4  080111f4  00030550  2**0
                  CONTENTS
  4 .ARM          00000008  080111f4  080111f4  000211f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080111fc  080111fc  00030550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080111fc  080111fc  000211fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011200  08011200  00021200  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000550  20000000  08011204  00030000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .bss          00000fa4  20000550  08011754  00030550  2**2
                  ALLOC
 10 ._user_heap_stack 00001c04  200014f4  08011754  000314f4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00030550  2**0
                  CONTENTS, READONLY
 12 .debug_info   000087a9  00000000  00000000  00030579  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ba4  00000000  00000000  00038d22  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005e8  00000000  00000000  0003a8c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004f0  00000000  00000000  0003aeb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016859  00000000  00000000  0003b3a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00009882  00000000  00000000  00051bf9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083e3c  00000000  00000000  0005b47b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000df2b7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002ef8  00000000  00000000  000df308  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000550 	.word	0x20000550
 800015c:	00000000 	.word	0x00000000
 8000160:	0800ff8c 	.word	0x0800ff8c

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000554 	.word	0x20000554
 800017c:	0800ff8c 	.word	0x0800ff8c

08000180 <strcmp>:
 8000180:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000184:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000188:	2a01      	cmp	r2, #1
 800018a:	bf28      	it	cs
 800018c:	429a      	cmpcs	r2, r3
 800018e:	d0f7      	beq.n	8000180 <strcmp>
 8000190:	1ad0      	subs	r0, r2, r3
 8000192:	4770      	bx	lr

08000194 <strlen>:
 8000194:	4603      	mov	r3, r0
 8000196:	f813 2b01 	ldrb.w	r2, [r3], #1
 800019a:	2a00      	cmp	r2, #0
 800019c:	d1fb      	bne.n	8000196 <strlen+0x2>
 800019e:	1a18      	subs	r0, r3, r0
 80001a0:	3801      	subs	r0, #1
 80001a2:	4770      	bx	lr

080001a4 <__aeabi_drsub>:
 80001a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001a8:	e002      	b.n	80001b0 <__adddf3>
 80001aa:	bf00      	nop

080001ac <__aeabi_dsub>:
 80001ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001b0 <__adddf3>:
 80001b0:	b530      	push	{r4, r5, lr}
 80001b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ba:	ea94 0f05 	teq	r4, r5
 80001be:	bf08      	it	eq
 80001c0:	ea90 0f02 	teqeq	r0, r2
 80001c4:	bf1f      	itttt	ne
 80001c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001d6:	f000 80e2 	beq.w	800039e <__adddf3+0x1ee>
 80001da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001e2:	bfb8      	it	lt
 80001e4:	426d      	neglt	r5, r5
 80001e6:	dd0c      	ble.n	8000202 <__adddf3+0x52>
 80001e8:	442c      	add	r4, r5
 80001ea:	ea80 0202 	eor.w	r2, r0, r2
 80001ee:	ea81 0303 	eor.w	r3, r1, r3
 80001f2:	ea82 0000 	eor.w	r0, r2, r0
 80001f6:	ea83 0101 	eor.w	r1, r3, r1
 80001fa:	ea80 0202 	eor.w	r2, r0, r2
 80001fe:	ea81 0303 	eor.w	r3, r1, r3
 8000202:	2d36      	cmp	r5, #54	; 0x36
 8000204:	bf88      	it	hi
 8000206:	bd30      	pophi	{r4, r5, pc}
 8000208:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800020c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000210:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000214:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x70>
 800021a:	4240      	negs	r0, r0
 800021c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000220:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000224:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000228:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800022c:	d002      	beq.n	8000234 <__adddf3+0x84>
 800022e:	4252      	negs	r2, r2
 8000230:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000234:	ea94 0f05 	teq	r4, r5
 8000238:	f000 80a7 	beq.w	800038a <__adddf3+0x1da>
 800023c:	f1a4 0401 	sub.w	r4, r4, #1
 8000240:	f1d5 0e20 	rsbs	lr, r5, #32
 8000244:	db0d      	blt.n	8000262 <__adddf3+0xb2>
 8000246:	fa02 fc0e 	lsl.w	ip, r2, lr
 800024a:	fa22 f205 	lsr.w	r2, r2, r5
 800024e:	1880      	adds	r0, r0, r2
 8000250:	f141 0100 	adc.w	r1, r1, #0
 8000254:	fa03 f20e 	lsl.w	r2, r3, lr
 8000258:	1880      	adds	r0, r0, r2
 800025a:	fa43 f305 	asr.w	r3, r3, r5
 800025e:	4159      	adcs	r1, r3
 8000260:	e00e      	b.n	8000280 <__adddf3+0xd0>
 8000262:	f1a5 0520 	sub.w	r5, r5, #32
 8000266:	f10e 0e20 	add.w	lr, lr, #32
 800026a:	2a01      	cmp	r2, #1
 800026c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000270:	bf28      	it	cs
 8000272:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000276:	fa43 f305 	asr.w	r3, r3, r5
 800027a:	18c0      	adds	r0, r0, r3
 800027c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000280:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000284:	d507      	bpl.n	8000296 <__adddf3+0xe6>
 8000286:	f04f 0e00 	mov.w	lr, #0
 800028a:	f1dc 0c00 	rsbs	ip, ip, #0
 800028e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000292:	eb6e 0101 	sbc.w	r1, lr, r1
 8000296:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800029a:	d31b      	bcc.n	80002d4 <__adddf3+0x124>
 800029c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002a0:	d30c      	bcc.n	80002bc <__adddf3+0x10c>
 80002a2:	0849      	lsrs	r1, r1, #1
 80002a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80002a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002ac:	f104 0401 	add.w	r4, r4, #1
 80002b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002b8:	f080 809a 	bcs.w	80003f0 <__adddf3+0x240>
 80002bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002c0:	bf08      	it	eq
 80002c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002c6:	f150 0000 	adcs.w	r0, r0, #0
 80002ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ce:	ea41 0105 	orr.w	r1, r1, r5
 80002d2:	bd30      	pop	{r4, r5, pc}
 80002d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002d8:	4140      	adcs	r0, r0
 80002da:	eb41 0101 	adc.w	r1, r1, r1
 80002de:	3c01      	subs	r4, #1
 80002e0:	bf28      	it	cs
 80002e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002e6:	d2e9      	bcs.n	80002bc <__adddf3+0x10c>
 80002e8:	f091 0f00 	teq	r1, #0
 80002ec:	bf04      	itt	eq
 80002ee:	4601      	moveq	r1, r0
 80002f0:	2000      	moveq	r0, #0
 80002f2:	fab1 f381 	clz	r3, r1
 80002f6:	bf08      	it	eq
 80002f8:	3320      	addeq	r3, #32
 80002fa:	f1a3 030b 	sub.w	r3, r3, #11
 80002fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000302:	da0c      	bge.n	800031e <__adddf3+0x16e>
 8000304:	320c      	adds	r2, #12
 8000306:	dd08      	ble.n	800031a <__adddf3+0x16a>
 8000308:	f102 0c14 	add.w	ip, r2, #20
 800030c:	f1c2 020c 	rsb	r2, r2, #12
 8000310:	fa01 f00c 	lsl.w	r0, r1, ip
 8000314:	fa21 f102 	lsr.w	r1, r1, r2
 8000318:	e00c      	b.n	8000334 <__adddf3+0x184>
 800031a:	f102 0214 	add.w	r2, r2, #20
 800031e:	bfd8      	it	le
 8000320:	f1c2 0c20 	rsble	ip, r2, #32
 8000324:	fa01 f102 	lsl.w	r1, r1, r2
 8000328:	fa20 fc0c 	lsr.w	ip, r0, ip
 800032c:	bfdc      	itt	le
 800032e:	ea41 010c 	orrle.w	r1, r1, ip
 8000332:	4090      	lslle	r0, r2
 8000334:	1ae4      	subs	r4, r4, r3
 8000336:	bfa2      	ittt	ge
 8000338:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800033c:	4329      	orrge	r1, r5
 800033e:	bd30      	popge	{r4, r5, pc}
 8000340:	ea6f 0404 	mvn.w	r4, r4
 8000344:	3c1f      	subs	r4, #31
 8000346:	da1c      	bge.n	8000382 <__adddf3+0x1d2>
 8000348:	340c      	adds	r4, #12
 800034a:	dc0e      	bgt.n	800036a <__adddf3+0x1ba>
 800034c:	f104 0414 	add.w	r4, r4, #20
 8000350:	f1c4 0220 	rsb	r2, r4, #32
 8000354:	fa20 f004 	lsr.w	r0, r0, r4
 8000358:	fa01 f302 	lsl.w	r3, r1, r2
 800035c:	ea40 0003 	orr.w	r0, r0, r3
 8000360:	fa21 f304 	lsr.w	r3, r1, r4
 8000364:	ea45 0103 	orr.w	r1, r5, r3
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	f1c4 040c 	rsb	r4, r4, #12
 800036e:	f1c4 0220 	rsb	r2, r4, #32
 8000372:	fa20 f002 	lsr.w	r0, r0, r2
 8000376:	fa01 f304 	lsl.w	r3, r1, r4
 800037a:	ea40 0003 	orr.w	r0, r0, r3
 800037e:	4629      	mov	r1, r5
 8000380:	bd30      	pop	{r4, r5, pc}
 8000382:	fa21 f004 	lsr.w	r0, r1, r4
 8000386:	4629      	mov	r1, r5
 8000388:	bd30      	pop	{r4, r5, pc}
 800038a:	f094 0f00 	teq	r4, #0
 800038e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000392:	bf06      	itte	eq
 8000394:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000398:	3401      	addeq	r4, #1
 800039a:	3d01      	subne	r5, #1
 800039c:	e74e      	b.n	800023c <__adddf3+0x8c>
 800039e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003a2:	bf18      	it	ne
 80003a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003a8:	d029      	beq.n	80003fe <__adddf3+0x24e>
 80003aa:	ea94 0f05 	teq	r4, r5
 80003ae:	bf08      	it	eq
 80003b0:	ea90 0f02 	teqeq	r0, r2
 80003b4:	d005      	beq.n	80003c2 <__adddf3+0x212>
 80003b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ba:	bf04      	itt	eq
 80003bc:	4619      	moveq	r1, r3
 80003be:	4610      	moveq	r0, r2
 80003c0:	bd30      	pop	{r4, r5, pc}
 80003c2:	ea91 0f03 	teq	r1, r3
 80003c6:	bf1e      	ittt	ne
 80003c8:	2100      	movne	r1, #0
 80003ca:	2000      	movne	r0, #0
 80003cc:	bd30      	popne	{r4, r5, pc}
 80003ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003d2:	d105      	bne.n	80003e0 <__adddf3+0x230>
 80003d4:	0040      	lsls	r0, r0, #1
 80003d6:	4149      	adcs	r1, r1
 80003d8:	bf28      	it	cs
 80003da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003e4:	bf3c      	itt	cc
 80003e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003ea:	bd30      	popcc	{r4, r5, pc}
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003f8:	f04f 0000 	mov.w	r0, #0
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000402:	bf1a      	itte	ne
 8000404:	4619      	movne	r1, r3
 8000406:	4610      	movne	r0, r2
 8000408:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800040c:	bf1c      	itt	ne
 800040e:	460b      	movne	r3, r1
 8000410:	4602      	movne	r2, r0
 8000412:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000416:	bf06      	itte	eq
 8000418:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800041c:	ea91 0f03 	teqeq	r1, r3
 8000420:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	bf00      	nop

08000428 <__aeabi_ui2d>:
 8000428:	f090 0f00 	teq	r0, #0
 800042c:	bf04      	itt	eq
 800042e:	2100      	moveq	r1, #0
 8000430:	4770      	bxeq	lr
 8000432:	b530      	push	{r4, r5, lr}
 8000434:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000438:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800043c:	f04f 0500 	mov.w	r5, #0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e750      	b.n	80002e8 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_i2d>:
 8000448:	f090 0f00 	teq	r0, #0
 800044c:	bf04      	itt	eq
 800044e:	2100      	moveq	r1, #0
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000458:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800045c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000460:	bf48      	it	mi
 8000462:	4240      	negmi	r0, r0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e73e      	b.n	80002e8 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_f2d>:
 800046c:	0042      	lsls	r2, r0, #1
 800046e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000472:	ea4f 0131 	mov.w	r1, r1, rrx
 8000476:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800047a:	bf1f      	itttt	ne
 800047c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000480:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000484:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000488:	4770      	bxne	lr
 800048a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800048e:	bf08      	it	eq
 8000490:	4770      	bxeq	lr
 8000492:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000496:	bf04      	itt	eq
 8000498:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800049c:	4770      	bxeq	lr
 800049e:	b530      	push	{r4, r5, lr}
 80004a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004ac:	e71c      	b.n	80002e8 <__adddf3+0x138>
 80004ae:	bf00      	nop

080004b0 <__aeabi_ul2d>:
 80004b0:	ea50 0201 	orrs.w	r2, r0, r1
 80004b4:	bf08      	it	eq
 80004b6:	4770      	bxeq	lr
 80004b8:	b530      	push	{r4, r5, lr}
 80004ba:	f04f 0500 	mov.w	r5, #0
 80004be:	e00a      	b.n	80004d6 <__aeabi_l2d+0x16>

080004c0 <__aeabi_l2d>:
 80004c0:	ea50 0201 	orrs.w	r2, r0, r1
 80004c4:	bf08      	it	eq
 80004c6:	4770      	bxeq	lr
 80004c8:	b530      	push	{r4, r5, lr}
 80004ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004ce:	d502      	bpl.n	80004d6 <__aeabi_l2d+0x16>
 80004d0:	4240      	negs	r0, r0
 80004d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004e2:	f43f aed8 	beq.w	8000296 <__adddf3+0xe6>
 80004e6:	f04f 0203 	mov.w	r2, #3
 80004ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ee:	bf18      	it	ne
 80004f0:	3203      	addne	r2, #3
 80004f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004f6:	bf18      	it	ne
 80004f8:	3203      	addne	r2, #3
 80004fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004fe:	f1c2 0320 	rsb	r3, r2, #32
 8000502:	fa00 fc03 	lsl.w	ip, r0, r3
 8000506:	fa20 f002 	lsr.w	r0, r0, r2
 800050a:	fa01 fe03 	lsl.w	lr, r1, r3
 800050e:	ea40 000e 	orr.w	r0, r0, lr
 8000512:	fa21 f102 	lsr.w	r1, r1, r2
 8000516:	4414      	add	r4, r2
 8000518:	e6bd      	b.n	8000296 <__adddf3+0xe6>
 800051a:	bf00      	nop

0800051c <__aeabi_dmul>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000522:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000526:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800052a:	bf1d      	ittte	ne
 800052c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000530:	ea94 0f0c 	teqne	r4, ip
 8000534:	ea95 0f0c 	teqne	r5, ip
 8000538:	f000 f8de 	bleq	80006f8 <__aeabi_dmul+0x1dc>
 800053c:	442c      	add	r4, r5
 800053e:	ea81 0603 	eor.w	r6, r1, r3
 8000542:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000546:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800054a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800054e:	bf18      	it	ne
 8000550:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000554:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000558:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800055c:	d038      	beq.n	80005d0 <__aeabi_dmul+0xb4>
 800055e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000562:	f04f 0500 	mov.w	r5, #0
 8000566:	fbe1 e502 	umlal	lr, r5, r1, r2
 800056a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800056e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000572:	f04f 0600 	mov.w	r6, #0
 8000576:	fbe1 5603 	umlal	r5, r6, r1, r3
 800057a:	f09c 0f00 	teq	ip, #0
 800057e:	bf18      	it	ne
 8000580:	f04e 0e01 	orrne.w	lr, lr, #1
 8000584:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000588:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800058c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000590:	d204      	bcs.n	800059c <__aeabi_dmul+0x80>
 8000592:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000596:	416d      	adcs	r5, r5
 8000598:	eb46 0606 	adc.w	r6, r6, r6
 800059c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005b0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005b4:	bf88      	it	hi
 80005b6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ba:	d81e      	bhi.n	80005fa <__aeabi_dmul+0xde>
 80005bc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005c0:	bf08      	it	eq
 80005c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005c6:	f150 0000 	adcs.w	r0, r0, #0
 80005ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ce:	bd70      	pop	{r4, r5, r6, pc}
 80005d0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005d4:	ea46 0101 	orr.w	r1, r6, r1
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	ea81 0103 	eor.w	r1, r1, r3
 80005e0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005e4:	bfc2      	ittt	gt
 80005e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ee:	bd70      	popgt	{r4, r5, r6, pc}
 80005f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005f4:	f04f 0e00 	mov.w	lr, #0
 80005f8:	3c01      	subs	r4, #1
 80005fa:	f300 80ab 	bgt.w	8000754 <__aeabi_dmul+0x238>
 80005fe:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000602:	bfde      	ittt	le
 8000604:	2000      	movle	r0, #0
 8000606:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800060a:	bd70      	pople	{r4, r5, r6, pc}
 800060c:	f1c4 0400 	rsb	r4, r4, #0
 8000610:	3c20      	subs	r4, #32
 8000612:	da35      	bge.n	8000680 <__aeabi_dmul+0x164>
 8000614:	340c      	adds	r4, #12
 8000616:	dc1b      	bgt.n	8000650 <__aeabi_dmul+0x134>
 8000618:	f104 0414 	add.w	r4, r4, #20
 800061c:	f1c4 0520 	rsb	r5, r4, #32
 8000620:	fa00 f305 	lsl.w	r3, r0, r5
 8000624:	fa20 f004 	lsr.w	r0, r0, r4
 8000628:	fa01 f205 	lsl.w	r2, r1, r5
 800062c:	ea40 0002 	orr.w	r0, r0, r2
 8000630:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000634:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	fa21 f604 	lsr.w	r6, r1, r4
 8000640:	eb42 0106 	adc.w	r1, r2, r6
 8000644:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000648:	bf08      	it	eq
 800064a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f1c4 040c 	rsb	r4, r4, #12
 8000654:	f1c4 0520 	rsb	r5, r4, #32
 8000658:	fa00 f304 	lsl.w	r3, r0, r4
 800065c:	fa20 f005 	lsr.w	r0, r0, r5
 8000660:	fa01 f204 	lsl.w	r2, r1, r4
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	f141 0100 	adc.w	r1, r1, #0
 8000674:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000678:	bf08      	it	eq
 800067a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067e:	bd70      	pop	{r4, r5, r6, pc}
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f205 	lsl.w	r2, r0, r5
 8000688:	ea4e 0e02 	orr.w	lr, lr, r2
 800068c:	fa20 f304 	lsr.w	r3, r0, r4
 8000690:	fa01 f205 	lsl.w	r2, r1, r5
 8000694:	ea43 0302 	orr.w	r3, r3, r2
 8000698:	fa21 f004 	lsr.w	r0, r1, r4
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	fa21 f204 	lsr.w	r2, r1, r4
 80006a4:	ea20 0002 	bic.w	r0, r0, r2
 80006a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006b0:	bf08      	it	eq
 80006b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b6:	bd70      	pop	{r4, r5, r6, pc}
 80006b8:	f094 0f00 	teq	r4, #0
 80006bc:	d10f      	bne.n	80006de <__aeabi_dmul+0x1c2>
 80006be:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006c2:	0040      	lsls	r0, r0, #1
 80006c4:	eb41 0101 	adc.w	r1, r1, r1
 80006c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006cc:	bf08      	it	eq
 80006ce:	3c01      	subeq	r4, #1
 80006d0:	d0f7      	beq.n	80006c2 <__aeabi_dmul+0x1a6>
 80006d2:	ea41 0106 	orr.w	r1, r1, r6
 80006d6:	f095 0f00 	teq	r5, #0
 80006da:	bf18      	it	ne
 80006dc:	4770      	bxne	lr
 80006de:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006e2:	0052      	lsls	r2, r2, #1
 80006e4:	eb43 0303 	adc.w	r3, r3, r3
 80006e8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006ec:	bf08      	it	eq
 80006ee:	3d01      	subeq	r5, #1
 80006f0:	d0f7      	beq.n	80006e2 <__aeabi_dmul+0x1c6>
 80006f2:	ea43 0306 	orr.w	r3, r3, r6
 80006f6:	4770      	bx	lr
 80006f8:	ea94 0f0c 	teq	r4, ip
 80006fc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000700:	bf18      	it	ne
 8000702:	ea95 0f0c 	teqne	r5, ip
 8000706:	d00c      	beq.n	8000722 <__aeabi_dmul+0x206>
 8000708:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800070c:	bf18      	it	ne
 800070e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000712:	d1d1      	bne.n	80006b8 <__aeabi_dmul+0x19c>
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000726:	bf06      	itte	eq
 8000728:	4610      	moveq	r0, r2
 800072a:	4619      	moveq	r1, r3
 800072c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000730:	d019      	beq.n	8000766 <__aeabi_dmul+0x24a>
 8000732:	ea94 0f0c 	teq	r4, ip
 8000736:	d102      	bne.n	800073e <__aeabi_dmul+0x222>
 8000738:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800073c:	d113      	bne.n	8000766 <__aeabi_dmul+0x24a>
 800073e:	ea95 0f0c 	teq	r5, ip
 8000742:	d105      	bne.n	8000750 <__aeabi_dmul+0x234>
 8000744:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000748:	bf1c      	itt	ne
 800074a:	4610      	movne	r0, r2
 800074c:	4619      	movne	r1, r3
 800074e:	d10a      	bne.n	8000766 <__aeabi_dmul+0x24a>
 8000750:	ea81 0103 	eor.w	r1, r1, r3
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800075c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800076a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800076e:	bd70      	pop	{r4, r5, r6, pc}

08000770 <__aeabi_ddiv>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8a7 	bleq	80008de <__aeabi_ddiv+0x16e>
 8000790:	eba4 0405 	sub.w	r4, r4, r5
 8000794:	ea81 0e03 	eor.w	lr, r1, r3
 8000798:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800079c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007a0:	f000 8088 	beq.w	80008b4 <__aeabi_ddiv+0x144>
 80007a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007a8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007c4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007c8:	429d      	cmp	r5, r3
 80007ca:	bf08      	it	eq
 80007cc:	4296      	cmpeq	r6, r2
 80007ce:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007d2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007d6:	d202      	bcs.n	80007de <__aeabi_ddiv+0x6e>
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	1ab6      	subs	r6, r6, r2
 80007e0:	eb65 0503 	sbc.w	r5, r5, r3
 80007e4:	085b      	lsrs	r3, r3, #1
 80007e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ee:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fa:	bf22      	ittt	cs
 80007fc:	1ab6      	subcs	r6, r6, r2
 80007fe:	4675      	movcs	r5, lr
 8000800:	ea40 000c 	orrcs.w	r0, r0, ip
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	ebb6 0e02 	subs.w	lr, r6, r2
 800080e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000812:	bf22      	ittt	cs
 8000814:	1ab6      	subcs	r6, r6, r2
 8000816:	4675      	movcs	r5, lr
 8000818:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800081c:	085b      	lsrs	r3, r3, #1
 800081e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000822:	ebb6 0e02 	subs.w	lr, r6, r2
 8000826:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082a:	bf22      	ittt	cs
 800082c:	1ab6      	subcs	r6, r6, r2
 800082e:	4675      	movcs	r5, lr
 8000830:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000834:	085b      	lsrs	r3, r3, #1
 8000836:	ea4f 0232 	mov.w	r2, r2, rrx
 800083a:	ebb6 0e02 	subs.w	lr, r6, r2
 800083e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000842:	bf22      	ittt	cs
 8000844:	1ab6      	subcs	r6, r6, r2
 8000846:	4675      	movcs	r5, lr
 8000848:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800084c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000850:	d018      	beq.n	8000884 <__aeabi_ddiv+0x114>
 8000852:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000856:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800085a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800085e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000862:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000866:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800086a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800086e:	d1c0      	bne.n	80007f2 <__aeabi_ddiv+0x82>
 8000870:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000874:	d10b      	bne.n	800088e <__aeabi_ddiv+0x11e>
 8000876:	ea41 0100 	orr.w	r1, r1, r0
 800087a:	f04f 0000 	mov.w	r0, #0
 800087e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000882:	e7b6      	b.n	80007f2 <__aeabi_ddiv+0x82>
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf04      	itt	eq
 800088a:	4301      	orreq	r1, r0
 800088c:	2000      	moveq	r0, #0
 800088e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000892:	bf88      	it	hi
 8000894:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000898:	f63f aeaf 	bhi.w	80005fa <__aeabi_dmul+0xde>
 800089c:	ebb5 0c03 	subs.w	ip, r5, r3
 80008a0:	bf04      	itt	eq
 80008a2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008aa:	f150 0000 	adcs.w	r0, r0, #0
 80008ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008c0:	bfc2      	ittt	gt
 80008c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ca:	bd70      	popgt	{r4, r5, r6, pc}
 80008cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008d0:	f04f 0e00 	mov.w	lr, #0
 80008d4:	3c01      	subs	r4, #1
 80008d6:	e690      	b.n	80005fa <__aeabi_dmul+0xde>
 80008d8:	ea45 0e06 	orr.w	lr, r5, r6
 80008dc:	e68d      	b.n	80005fa <__aeabi_dmul+0xde>
 80008de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008e2:	ea94 0f0c 	teq	r4, ip
 80008e6:	bf08      	it	eq
 80008e8:	ea95 0f0c 	teqeq	r5, ip
 80008ec:	f43f af3b 	beq.w	8000766 <__aeabi_dmul+0x24a>
 80008f0:	ea94 0f0c 	teq	r4, ip
 80008f4:	d10a      	bne.n	800090c <__aeabi_ddiv+0x19c>
 80008f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008fa:	f47f af34 	bne.w	8000766 <__aeabi_dmul+0x24a>
 80008fe:	ea95 0f0c 	teq	r5, ip
 8000902:	f47f af25 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000906:	4610      	mov	r0, r2
 8000908:	4619      	mov	r1, r3
 800090a:	e72c      	b.n	8000766 <__aeabi_dmul+0x24a>
 800090c:	ea95 0f0c 	teq	r5, ip
 8000910:	d106      	bne.n	8000920 <__aeabi_ddiv+0x1b0>
 8000912:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000916:	f43f aefd 	beq.w	8000714 <__aeabi_dmul+0x1f8>
 800091a:	4610      	mov	r0, r2
 800091c:	4619      	mov	r1, r3
 800091e:	e722      	b.n	8000766 <__aeabi_dmul+0x24a>
 8000920:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000924:	bf18      	it	ne
 8000926:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800092a:	f47f aec5 	bne.w	80006b8 <__aeabi_dmul+0x19c>
 800092e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000932:	f47f af0d 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000936:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800093a:	f47f aeeb 	bne.w	8000714 <__aeabi_dmul+0x1f8>
 800093e:	e712      	b.n	8000766 <__aeabi_dmul+0x24a>

08000940 <__gedf2>:
 8000940:	f04f 3cff 	mov.w	ip, #4294967295
 8000944:	e006      	b.n	8000954 <__cmpdf2+0x4>
 8000946:	bf00      	nop

08000948 <__ledf2>:
 8000948:	f04f 0c01 	mov.w	ip, #1
 800094c:	e002      	b.n	8000954 <__cmpdf2+0x4>
 800094e:	bf00      	nop

08000950 <__cmpdf2>:
 8000950:	f04f 0c01 	mov.w	ip, #1
 8000954:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	bf18      	it	ne
 8000966:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800096a:	d01b      	beq.n	80009a4 <__cmpdf2+0x54>
 800096c:	b001      	add	sp, #4
 800096e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000972:	bf0c      	ite	eq
 8000974:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000978:	ea91 0f03 	teqne	r1, r3
 800097c:	bf02      	ittt	eq
 800097e:	ea90 0f02 	teqeq	r0, r2
 8000982:	2000      	moveq	r0, #0
 8000984:	4770      	bxeq	lr
 8000986:	f110 0f00 	cmn.w	r0, #0
 800098a:	ea91 0f03 	teq	r1, r3
 800098e:	bf58      	it	pl
 8000990:	4299      	cmppl	r1, r3
 8000992:	bf08      	it	eq
 8000994:	4290      	cmpeq	r0, r2
 8000996:	bf2c      	ite	cs
 8000998:	17d8      	asrcs	r0, r3, #31
 800099a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800099e:	f040 0001 	orr.w	r0, r0, #1
 80009a2:	4770      	bx	lr
 80009a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ac:	d102      	bne.n	80009b4 <__cmpdf2+0x64>
 80009ae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009b2:	d107      	bne.n	80009c4 <__cmpdf2+0x74>
 80009b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009bc:	d1d6      	bne.n	800096c <__cmpdf2+0x1c>
 80009be:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009c2:	d0d3      	beq.n	800096c <__cmpdf2+0x1c>
 80009c4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_cdrcmple>:
 80009cc:	4684      	mov	ip, r0
 80009ce:	4610      	mov	r0, r2
 80009d0:	4662      	mov	r2, ip
 80009d2:	468c      	mov	ip, r1
 80009d4:	4619      	mov	r1, r3
 80009d6:	4663      	mov	r3, ip
 80009d8:	e000      	b.n	80009dc <__aeabi_cdcmpeq>
 80009da:	bf00      	nop

080009dc <__aeabi_cdcmpeq>:
 80009dc:	b501      	push	{r0, lr}
 80009de:	f7ff ffb7 	bl	8000950 <__cmpdf2>
 80009e2:	2800      	cmp	r0, #0
 80009e4:	bf48      	it	mi
 80009e6:	f110 0f00 	cmnmi.w	r0, #0
 80009ea:	bd01      	pop	{r0, pc}

080009ec <__aeabi_dcmpeq>:
 80009ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f0:	f7ff fff4 	bl	80009dc <__aeabi_cdcmpeq>
 80009f4:	bf0c      	ite	eq
 80009f6:	2001      	moveq	r0, #1
 80009f8:	2000      	movne	r0, #0
 80009fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fe:	bf00      	nop

08000a00 <__aeabi_dcmplt>:
 8000a00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a04:	f7ff ffea 	bl	80009dc <__aeabi_cdcmpeq>
 8000a08:	bf34      	ite	cc
 8000a0a:	2001      	movcc	r0, #1
 8000a0c:	2000      	movcs	r0, #0
 8000a0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a12:	bf00      	nop

08000a14 <__aeabi_dcmple>:
 8000a14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a18:	f7ff ffe0 	bl	80009dc <__aeabi_cdcmpeq>
 8000a1c:	bf94      	ite	ls
 8000a1e:	2001      	movls	r0, #1
 8000a20:	2000      	movhi	r0, #0
 8000a22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a26:	bf00      	nop

08000a28 <__aeabi_dcmpge>:
 8000a28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a2c:	f7ff ffce 	bl	80009cc <__aeabi_cdrcmple>
 8000a30:	bf94      	ite	ls
 8000a32:	2001      	movls	r0, #1
 8000a34:	2000      	movhi	r0, #0
 8000a36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dcmpgt>:
 8000a3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a40:	f7ff ffc4 	bl	80009cc <__aeabi_cdrcmple>
 8000a44:	bf34      	ite	cc
 8000a46:	2001      	movcc	r0, #1
 8000a48:	2000      	movcs	r0, #0
 8000a4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4e:	bf00      	nop

08000a50 <__aeabi_dcmpun>:
 8000a50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d102      	bne.n	8000a60 <__aeabi_dcmpun+0x10>
 8000a5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a5e:	d10a      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d102      	bne.n	8000a70 <__aeabi_dcmpun+0x20>
 8000a6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a6e:	d102      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a70:	f04f 0000 	mov.w	r0, #0
 8000a74:	4770      	bx	lr
 8000a76:	f04f 0001 	mov.w	r0, #1
 8000a7a:	4770      	bx	lr

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2uiz>:
 8000acc:	004a      	lsls	r2, r1, #1
 8000ace:	d211      	bcs.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ad4:	d211      	bcs.n	8000afa <__aeabi_d2uiz+0x2e>
 8000ad6:	d50d      	bpl.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000adc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ae0:	d40e      	bmi.n	8000b00 <__aeabi_d2uiz+0x34>
 8000ae2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aee:	fa23 f002 	lsr.w	r0, r3, r2
 8000af2:	4770      	bx	lr
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000afe:	d102      	bne.n	8000b06 <__aeabi_d2uiz+0x3a>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	4770      	bx	lr
 8000b06:	f04f 0000 	mov.w	r0, #0
 8000b0a:	4770      	bx	lr

08000b0c <__aeabi_d2f>:
 8000b0c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b10:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b14:	bf24      	itt	cs
 8000b16:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b1a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b1e:	d90d      	bls.n	8000b3c <__aeabi_d2f+0x30>
 8000b20:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b24:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b28:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b2c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b30:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b34:	bf08      	it	eq
 8000b36:	f020 0001 	biceq.w	r0, r0, #1
 8000b3a:	4770      	bx	lr
 8000b3c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b40:	d121      	bne.n	8000b86 <__aeabi_d2f+0x7a>
 8000b42:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b46:	bfbc      	itt	lt
 8000b48:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b4c:	4770      	bxlt	lr
 8000b4e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b52:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b56:	f1c2 0218 	rsb	r2, r2, #24
 8000b5a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b5e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b62:	fa20 f002 	lsr.w	r0, r0, r2
 8000b66:	bf18      	it	ne
 8000b68:	f040 0001 	orrne.w	r0, r0, #1
 8000b6c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b70:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b74:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b78:	ea40 000c 	orr.w	r0, r0, ip
 8000b7c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b84:	e7cc      	b.n	8000b20 <__aeabi_d2f+0x14>
 8000b86:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b8a:	d107      	bne.n	8000b9c <__aeabi_d2f+0x90>
 8000b8c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b90:	bf1e      	ittt	ne
 8000b92:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b96:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b9a:	4770      	bxne	lr
 8000b9c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ba4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <__aeabi_frsub>:
 8000bac:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bb0:	e002      	b.n	8000bb8 <__addsf3>
 8000bb2:	bf00      	nop

08000bb4 <__aeabi_fsub>:
 8000bb4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000bb8 <__addsf3>:
 8000bb8:	0042      	lsls	r2, r0, #1
 8000bba:	bf1f      	itttt	ne
 8000bbc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bc0:	ea92 0f03 	teqne	r2, r3
 8000bc4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bc8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bcc:	d06a      	beq.n	8000ca4 <__addsf3+0xec>
 8000bce:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bd2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bd6:	bfc1      	itttt	gt
 8000bd8:	18d2      	addgt	r2, r2, r3
 8000bda:	4041      	eorgt	r1, r0
 8000bdc:	4048      	eorgt	r0, r1
 8000bde:	4041      	eorgt	r1, r0
 8000be0:	bfb8      	it	lt
 8000be2:	425b      	neglt	r3, r3
 8000be4:	2b19      	cmp	r3, #25
 8000be6:	bf88      	it	hi
 8000be8:	4770      	bxhi	lr
 8000bea:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bf6:	bf18      	it	ne
 8000bf8:	4240      	negne	r0, r0
 8000bfa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bfe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c02:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c06:	bf18      	it	ne
 8000c08:	4249      	negne	r1, r1
 8000c0a:	ea92 0f03 	teq	r2, r3
 8000c0e:	d03f      	beq.n	8000c90 <__addsf3+0xd8>
 8000c10:	f1a2 0201 	sub.w	r2, r2, #1
 8000c14:	fa41 fc03 	asr.w	ip, r1, r3
 8000c18:	eb10 000c 	adds.w	r0, r0, ip
 8000c1c:	f1c3 0320 	rsb	r3, r3, #32
 8000c20:	fa01 f103 	lsl.w	r1, r1, r3
 8000c24:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c28:	d502      	bpl.n	8000c30 <__addsf3+0x78>
 8000c2a:	4249      	negs	r1, r1
 8000c2c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c30:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c34:	d313      	bcc.n	8000c5e <__addsf3+0xa6>
 8000c36:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c3a:	d306      	bcc.n	8000c4a <__addsf3+0x92>
 8000c3c:	0840      	lsrs	r0, r0, #1
 8000c3e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c42:	f102 0201 	add.w	r2, r2, #1
 8000c46:	2afe      	cmp	r2, #254	; 0xfe
 8000c48:	d251      	bcs.n	8000cee <__addsf3+0x136>
 8000c4a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c4e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c52:	bf08      	it	eq
 8000c54:	f020 0001 	biceq.w	r0, r0, #1
 8000c58:	ea40 0003 	orr.w	r0, r0, r3
 8000c5c:	4770      	bx	lr
 8000c5e:	0049      	lsls	r1, r1, #1
 8000c60:	eb40 0000 	adc.w	r0, r0, r0
 8000c64:	3a01      	subs	r2, #1
 8000c66:	bf28      	it	cs
 8000c68:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c6c:	d2ed      	bcs.n	8000c4a <__addsf3+0x92>
 8000c6e:	fab0 fc80 	clz	ip, r0
 8000c72:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c76:	ebb2 020c 	subs.w	r2, r2, ip
 8000c7a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c7e:	bfaa      	itet	ge
 8000c80:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c84:	4252      	neglt	r2, r2
 8000c86:	4318      	orrge	r0, r3
 8000c88:	bfbc      	itt	lt
 8000c8a:	40d0      	lsrlt	r0, r2
 8000c8c:	4318      	orrlt	r0, r3
 8000c8e:	4770      	bx	lr
 8000c90:	f092 0f00 	teq	r2, #0
 8000c94:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c98:	bf06      	itte	eq
 8000c9a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c9e:	3201      	addeq	r2, #1
 8000ca0:	3b01      	subne	r3, #1
 8000ca2:	e7b5      	b.n	8000c10 <__addsf3+0x58>
 8000ca4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ca8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cac:	bf18      	it	ne
 8000cae:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb2:	d021      	beq.n	8000cf8 <__addsf3+0x140>
 8000cb4:	ea92 0f03 	teq	r2, r3
 8000cb8:	d004      	beq.n	8000cc4 <__addsf3+0x10c>
 8000cba:	f092 0f00 	teq	r2, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	4608      	moveq	r0, r1
 8000cc2:	4770      	bx	lr
 8000cc4:	ea90 0f01 	teq	r0, r1
 8000cc8:	bf1c      	itt	ne
 8000cca:	2000      	movne	r0, #0
 8000ccc:	4770      	bxne	lr
 8000cce:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cd2:	d104      	bne.n	8000cde <__addsf3+0x126>
 8000cd4:	0040      	lsls	r0, r0, #1
 8000cd6:	bf28      	it	cs
 8000cd8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cdc:	4770      	bx	lr
 8000cde:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ce2:	bf3c      	itt	cc
 8000ce4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ce8:	4770      	bxcc	lr
 8000cea:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cee:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cf2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cf6:	4770      	bx	lr
 8000cf8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cfc:	bf16      	itet	ne
 8000cfe:	4608      	movne	r0, r1
 8000d00:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d04:	4601      	movne	r1, r0
 8000d06:	0242      	lsls	r2, r0, #9
 8000d08:	bf06      	itte	eq
 8000d0a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d0e:	ea90 0f01 	teqeq	r0, r1
 8000d12:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d16:	4770      	bx	lr

08000d18 <__aeabi_ui2f>:
 8000d18:	f04f 0300 	mov.w	r3, #0
 8000d1c:	e004      	b.n	8000d28 <__aeabi_i2f+0x8>
 8000d1e:	bf00      	nop

08000d20 <__aeabi_i2f>:
 8000d20:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d24:	bf48      	it	mi
 8000d26:	4240      	negmi	r0, r0
 8000d28:	ea5f 0c00 	movs.w	ip, r0
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d34:	4601      	mov	r1, r0
 8000d36:	f04f 0000 	mov.w	r0, #0
 8000d3a:	e01c      	b.n	8000d76 <__aeabi_l2f+0x2a>

08000d3c <__aeabi_ul2f>:
 8000d3c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d40:	bf08      	it	eq
 8000d42:	4770      	bxeq	lr
 8000d44:	f04f 0300 	mov.w	r3, #0
 8000d48:	e00a      	b.n	8000d60 <__aeabi_l2f+0x14>
 8000d4a:	bf00      	nop

08000d4c <__aeabi_l2f>:
 8000d4c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d50:	bf08      	it	eq
 8000d52:	4770      	bxeq	lr
 8000d54:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__aeabi_l2f+0x14>
 8000d5a:	4240      	negs	r0, r0
 8000d5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d60:	ea5f 0c01 	movs.w	ip, r1
 8000d64:	bf02      	ittt	eq
 8000d66:	4684      	moveq	ip, r0
 8000d68:	4601      	moveq	r1, r0
 8000d6a:	2000      	moveq	r0, #0
 8000d6c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d70:	bf08      	it	eq
 8000d72:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d76:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d7a:	fabc f28c 	clz	r2, ip
 8000d7e:	3a08      	subs	r2, #8
 8000d80:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d84:	db10      	blt.n	8000da8 <__aeabi_l2f+0x5c>
 8000d86:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8a:	4463      	add	r3, ip
 8000d8c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d90:	f1c2 0220 	rsb	r2, r2, #32
 8000d94:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d98:	fa20 f202 	lsr.w	r2, r0, r2
 8000d9c:	eb43 0002 	adc.w	r0, r3, r2
 8000da0:	bf08      	it	eq
 8000da2:	f020 0001 	biceq.w	r0, r0, #1
 8000da6:	4770      	bx	lr
 8000da8:	f102 0220 	add.w	r2, r2, #32
 8000dac:	fa01 fc02 	lsl.w	ip, r1, r2
 8000db0:	f1c2 0220 	rsb	r2, r2, #32
 8000db4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000db8:	fa21 f202 	lsr.w	r2, r1, r2
 8000dbc:	eb43 0002 	adc.w	r0, r3, r2
 8000dc0:	bf08      	it	eq
 8000dc2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dc6:	4770      	bx	lr

08000dc8 <__aeabi_fmul>:
 8000dc8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000dcc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dd0:	bf1e      	ittt	ne
 8000dd2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dd6:	ea92 0f0c 	teqne	r2, ip
 8000dda:	ea93 0f0c 	teqne	r3, ip
 8000dde:	d06f      	beq.n	8000ec0 <__aeabi_fmul+0xf8>
 8000de0:	441a      	add	r2, r3
 8000de2:	ea80 0c01 	eor.w	ip, r0, r1
 8000de6:	0240      	lsls	r0, r0, #9
 8000de8:	bf18      	it	ne
 8000dea:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dee:	d01e      	beq.n	8000e2e <__aeabi_fmul+0x66>
 8000df0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000df4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000df8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dfc:	fba0 3101 	umull	r3, r1, r0, r1
 8000e00:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e04:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e08:	bf3e      	ittt	cc
 8000e0a:	0049      	lslcc	r1, r1, #1
 8000e0c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e10:	005b      	lslcc	r3, r3, #1
 8000e12:	ea40 0001 	orr.w	r0, r0, r1
 8000e16:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e1a:	2afd      	cmp	r2, #253	; 0xfd
 8000e1c:	d81d      	bhi.n	8000e5a <__aeabi_fmul+0x92>
 8000e1e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e22:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e26:	bf08      	it	eq
 8000e28:	f020 0001 	biceq.w	r0, r0, #1
 8000e2c:	4770      	bx	lr
 8000e2e:	f090 0f00 	teq	r0, #0
 8000e32:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e36:	bf08      	it	eq
 8000e38:	0249      	lsleq	r1, r1, #9
 8000e3a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e3e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e42:	3a7f      	subs	r2, #127	; 0x7f
 8000e44:	bfc2      	ittt	gt
 8000e46:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e4a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e4e:	4770      	bxgt	lr
 8000e50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e54:	f04f 0300 	mov.w	r3, #0
 8000e58:	3a01      	subs	r2, #1
 8000e5a:	dc5d      	bgt.n	8000f18 <__aeabi_fmul+0x150>
 8000e5c:	f112 0f19 	cmn.w	r2, #25
 8000e60:	bfdc      	itt	le
 8000e62:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e66:	4770      	bxle	lr
 8000e68:	f1c2 0200 	rsb	r2, r2, #0
 8000e6c:	0041      	lsls	r1, r0, #1
 8000e6e:	fa21 f102 	lsr.w	r1, r1, r2
 8000e72:	f1c2 0220 	rsb	r2, r2, #32
 8000e76:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e7a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e7e:	f140 0000 	adc.w	r0, r0, #0
 8000e82:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e86:	bf08      	it	eq
 8000e88:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e8c:	4770      	bx	lr
 8000e8e:	f092 0f00 	teq	r2, #0
 8000e92:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e96:	bf02      	ittt	eq
 8000e98:	0040      	lsleq	r0, r0, #1
 8000e9a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e9e:	3a01      	subeq	r2, #1
 8000ea0:	d0f9      	beq.n	8000e96 <__aeabi_fmul+0xce>
 8000ea2:	ea40 000c 	orr.w	r0, r0, ip
 8000ea6:	f093 0f00 	teq	r3, #0
 8000eaa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eae:	bf02      	ittt	eq
 8000eb0:	0049      	lsleq	r1, r1, #1
 8000eb2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000eb6:	3b01      	subeq	r3, #1
 8000eb8:	d0f9      	beq.n	8000eae <__aeabi_fmul+0xe6>
 8000eba:	ea41 010c 	orr.w	r1, r1, ip
 8000ebe:	e78f      	b.n	8000de0 <__aeabi_fmul+0x18>
 8000ec0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ec4:	ea92 0f0c 	teq	r2, ip
 8000ec8:	bf18      	it	ne
 8000eca:	ea93 0f0c 	teqne	r3, ip
 8000ece:	d00a      	beq.n	8000ee6 <__aeabi_fmul+0x11e>
 8000ed0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000ed4:	bf18      	it	ne
 8000ed6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eda:	d1d8      	bne.n	8000e8e <__aeabi_fmul+0xc6>
 8000edc:	ea80 0001 	eor.w	r0, r0, r1
 8000ee0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ee4:	4770      	bx	lr
 8000ee6:	f090 0f00 	teq	r0, #0
 8000eea:	bf17      	itett	ne
 8000eec:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ef0:	4608      	moveq	r0, r1
 8000ef2:	f091 0f00 	teqne	r1, #0
 8000ef6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000efa:	d014      	beq.n	8000f26 <__aeabi_fmul+0x15e>
 8000efc:	ea92 0f0c 	teq	r2, ip
 8000f00:	d101      	bne.n	8000f06 <__aeabi_fmul+0x13e>
 8000f02:	0242      	lsls	r2, r0, #9
 8000f04:	d10f      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f06:	ea93 0f0c 	teq	r3, ip
 8000f0a:	d103      	bne.n	8000f14 <__aeabi_fmul+0x14c>
 8000f0c:	024b      	lsls	r3, r1, #9
 8000f0e:	bf18      	it	ne
 8000f10:	4608      	movne	r0, r1
 8000f12:	d108      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f14:	ea80 0001 	eor.w	r0, r0, r1
 8000f18:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f24:	4770      	bx	lr
 8000f26:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f2a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f2e:	4770      	bx	lr

08000f30 <__aeabi_fdiv>:
 8000f30:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f34:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f38:	bf1e      	ittt	ne
 8000f3a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f3e:	ea92 0f0c 	teqne	r2, ip
 8000f42:	ea93 0f0c 	teqne	r3, ip
 8000f46:	d069      	beq.n	800101c <__aeabi_fdiv+0xec>
 8000f48:	eba2 0203 	sub.w	r2, r2, r3
 8000f4c:	ea80 0c01 	eor.w	ip, r0, r1
 8000f50:	0249      	lsls	r1, r1, #9
 8000f52:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f56:	d037      	beq.n	8000fc8 <__aeabi_fdiv+0x98>
 8000f58:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f5c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f60:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f64:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f68:	428b      	cmp	r3, r1
 8000f6a:	bf38      	it	cc
 8000f6c:	005b      	lslcc	r3, r3, #1
 8000f6e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f72:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f76:	428b      	cmp	r3, r1
 8000f78:	bf24      	itt	cs
 8000f7a:	1a5b      	subcs	r3, r3, r1
 8000f7c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f80:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f84:	bf24      	itt	cs
 8000f86:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f8a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f8e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f92:	bf24      	itt	cs
 8000f94:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f9c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fa0:	bf24      	itt	cs
 8000fa2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fa6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000faa:	011b      	lsls	r3, r3, #4
 8000fac:	bf18      	it	ne
 8000fae:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fb2:	d1e0      	bne.n	8000f76 <__aeabi_fdiv+0x46>
 8000fb4:	2afd      	cmp	r2, #253	; 0xfd
 8000fb6:	f63f af50 	bhi.w	8000e5a <__aeabi_fmul+0x92>
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fc0:	bf08      	it	eq
 8000fc2:	f020 0001 	biceq.w	r0, r0, #1
 8000fc6:	4770      	bx	lr
 8000fc8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fcc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fd0:	327f      	adds	r2, #127	; 0x7f
 8000fd2:	bfc2      	ittt	gt
 8000fd4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fd8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fdc:	4770      	bxgt	lr
 8000fde:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fe2:	f04f 0300 	mov.w	r3, #0
 8000fe6:	3a01      	subs	r2, #1
 8000fe8:	e737      	b.n	8000e5a <__aeabi_fmul+0x92>
 8000fea:	f092 0f00 	teq	r2, #0
 8000fee:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ff2:	bf02      	ittt	eq
 8000ff4:	0040      	lsleq	r0, r0, #1
 8000ff6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ffa:	3a01      	subeq	r2, #1
 8000ffc:	d0f9      	beq.n	8000ff2 <__aeabi_fdiv+0xc2>
 8000ffe:	ea40 000c 	orr.w	r0, r0, ip
 8001002:	f093 0f00 	teq	r3, #0
 8001006:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800100a:	bf02      	ittt	eq
 800100c:	0049      	lsleq	r1, r1, #1
 800100e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001012:	3b01      	subeq	r3, #1
 8001014:	d0f9      	beq.n	800100a <__aeabi_fdiv+0xda>
 8001016:	ea41 010c 	orr.w	r1, r1, ip
 800101a:	e795      	b.n	8000f48 <__aeabi_fdiv+0x18>
 800101c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001020:	ea92 0f0c 	teq	r2, ip
 8001024:	d108      	bne.n	8001038 <__aeabi_fdiv+0x108>
 8001026:	0242      	lsls	r2, r0, #9
 8001028:	f47f af7d 	bne.w	8000f26 <__aeabi_fmul+0x15e>
 800102c:	ea93 0f0c 	teq	r3, ip
 8001030:	f47f af70 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 8001034:	4608      	mov	r0, r1
 8001036:	e776      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001038:	ea93 0f0c 	teq	r3, ip
 800103c:	d104      	bne.n	8001048 <__aeabi_fdiv+0x118>
 800103e:	024b      	lsls	r3, r1, #9
 8001040:	f43f af4c 	beq.w	8000edc <__aeabi_fmul+0x114>
 8001044:	4608      	mov	r0, r1
 8001046:	e76e      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001048:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800104c:	bf18      	it	ne
 800104e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001052:	d1ca      	bne.n	8000fea <__aeabi_fdiv+0xba>
 8001054:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001058:	f47f af5c 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 800105c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001060:	f47f af3c 	bne.w	8000edc <__aeabi_fmul+0x114>
 8001064:	e75f      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001066:	bf00      	nop

08001068 <__gesf2>:
 8001068:	f04f 3cff 	mov.w	ip, #4294967295
 800106c:	e006      	b.n	800107c <__cmpsf2+0x4>
 800106e:	bf00      	nop

08001070 <__lesf2>:
 8001070:	f04f 0c01 	mov.w	ip, #1
 8001074:	e002      	b.n	800107c <__cmpsf2+0x4>
 8001076:	bf00      	nop

08001078 <__cmpsf2>:
 8001078:	f04f 0c01 	mov.w	ip, #1
 800107c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8001080:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001084:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001088:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800108c:	bf18      	it	ne
 800108e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8001092:	d011      	beq.n	80010b8 <__cmpsf2+0x40>
 8001094:	b001      	add	sp, #4
 8001096:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800109a:	bf18      	it	ne
 800109c:	ea90 0f01 	teqne	r0, r1
 80010a0:	bf58      	it	pl
 80010a2:	ebb2 0003 	subspl.w	r0, r2, r3
 80010a6:	bf88      	it	hi
 80010a8:	17c8      	asrhi	r0, r1, #31
 80010aa:	bf38      	it	cc
 80010ac:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010b0:	bf18      	it	ne
 80010b2:	f040 0001 	orrne.w	r0, r0, #1
 80010b6:	4770      	bx	lr
 80010b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010bc:	d102      	bne.n	80010c4 <__cmpsf2+0x4c>
 80010be:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010c2:	d105      	bne.n	80010d0 <__cmpsf2+0x58>
 80010c4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010c8:	d1e4      	bne.n	8001094 <__cmpsf2+0x1c>
 80010ca:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ce:	d0e1      	beq.n	8001094 <__cmpsf2+0x1c>
 80010d0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <__aeabi_cfrcmple>:
 80010d8:	4684      	mov	ip, r0
 80010da:	4608      	mov	r0, r1
 80010dc:	4661      	mov	r1, ip
 80010de:	e7ff      	b.n	80010e0 <__aeabi_cfcmpeq>

080010e0 <__aeabi_cfcmpeq>:
 80010e0:	b50f      	push	{r0, r1, r2, r3, lr}
 80010e2:	f7ff ffc9 	bl	8001078 <__cmpsf2>
 80010e6:	2800      	cmp	r0, #0
 80010e8:	bf48      	it	mi
 80010ea:	f110 0f00 	cmnmi.w	r0, #0
 80010ee:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010f0 <__aeabi_fcmpeq>:
 80010f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f4:	f7ff fff4 	bl	80010e0 <__aeabi_cfcmpeq>
 80010f8:	bf0c      	ite	eq
 80010fa:	2001      	moveq	r0, #1
 80010fc:	2000      	movne	r0, #0
 80010fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8001102:	bf00      	nop

08001104 <__aeabi_fcmplt>:
 8001104:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001108:	f7ff ffea 	bl	80010e0 <__aeabi_cfcmpeq>
 800110c:	bf34      	ite	cc
 800110e:	2001      	movcc	r0, #1
 8001110:	2000      	movcs	r0, #0
 8001112:	f85d fb08 	ldr.w	pc, [sp], #8
 8001116:	bf00      	nop

08001118 <__aeabi_fcmple>:
 8001118:	f84d ed08 	str.w	lr, [sp, #-8]!
 800111c:	f7ff ffe0 	bl	80010e0 <__aeabi_cfcmpeq>
 8001120:	bf94      	ite	ls
 8001122:	2001      	movls	r0, #1
 8001124:	2000      	movhi	r0, #0
 8001126:	f85d fb08 	ldr.w	pc, [sp], #8
 800112a:	bf00      	nop

0800112c <__aeabi_fcmpge>:
 800112c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001130:	f7ff ffd2 	bl	80010d8 <__aeabi_cfrcmple>
 8001134:	bf94      	ite	ls
 8001136:	2001      	movls	r0, #1
 8001138:	2000      	movhi	r0, #0
 800113a:	f85d fb08 	ldr.w	pc, [sp], #8
 800113e:	bf00      	nop

08001140 <__aeabi_fcmpgt>:
 8001140:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001144:	f7ff ffc8 	bl	80010d8 <__aeabi_cfrcmple>
 8001148:	bf34      	ite	cc
 800114a:	2001      	movcc	r0, #1
 800114c:	2000      	movcs	r0, #0
 800114e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001152:	bf00      	nop

08001154 <__aeabi_f2uiz>:
 8001154:	0042      	lsls	r2, r0, #1
 8001156:	d20e      	bcs.n	8001176 <__aeabi_f2uiz+0x22>
 8001158:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800115c:	d30b      	bcc.n	8001176 <__aeabi_f2uiz+0x22>
 800115e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001162:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001166:	d409      	bmi.n	800117c <__aeabi_f2uiz+0x28>
 8001168:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800116c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001170:	fa23 f002 	lsr.w	r0, r3, r2
 8001174:	4770      	bx	lr
 8001176:	f04f 0000 	mov.w	r0, #0
 800117a:	4770      	bx	lr
 800117c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001180:	d101      	bne.n	8001186 <__aeabi_f2uiz+0x32>
 8001182:	0242      	lsls	r2, r0, #9
 8001184:	d102      	bne.n	800118c <__aeabi_f2uiz+0x38>
 8001186:	f04f 30ff 	mov.w	r0, #4294967295
 800118a:	4770      	bx	lr
 800118c:	f04f 0000 	mov.w	r0, #0
 8001190:	4770      	bx	lr
 8001192:	bf00      	nop

08001194 <__aeabi_uldivmod>:
 8001194:	b953      	cbnz	r3, 80011ac <__aeabi_uldivmod+0x18>
 8001196:	b94a      	cbnz	r2, 80011ac <__aeabi_uldivmod+0x18>
 8001198:	2900      	cmp	r1, #0
 800119a:	bf08      	it	eq
 800119c:	2800      	cmpeq	r0, #0
 800119e:	bf1c      	itt	ne
 80011a0:	f04f 31ff 	movne.w	r1, #4294967295
 80011a4:	f04f 30ff 	movne.w	r0, #4294967295
 80011a8:	f000 b9ae 	b.w	8001508 <__aeabi_idiv0>
 80011ac:	f1ad 0c08 	sub.w	ip, sp, #8
 80011b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80011b4:	f000 f83e 	bl	8001234 <__udivmoddi4>
 80011b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80011bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80011c0:	b004      	add	sp, #16
 80011c2:	4770      	bx	lr

080011c4 <__aeabi_d2lz>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4605      	mov	r5, r0
 80011c8:	460c      	mov	r4, r1
 80011ca:	2200      	movs	r2, #0
 80011cc:	2300      	movs	r3, #0
 80011ce:	4628      	mov	r0, r5
 80011d0:	4621      	mov	r1, r4
 80011d2:	f7ff fc15 	bl	8000a00 <__aeabi_dcmplt>
 80011d6:	b928      	cbnz	r0, 80011e4 <__aeabi_d2lz+0x20>
 80011d8:	4628      	mov	r0, r5
 80011da:	4621      	mov	r1, r4
 80011dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011e0:	f000 b80a 	b.w	80011f8 <__aeabi_d2ulz>
 80011e4:	4628      	mov	r0, r5
 80011e6:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 80011ea:	f000 f805 	bl	80011f8 <__aeabi_d2ulz>
 80011ee:	4240      	negs	r0, r0
 80011f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011f4:	bd38      	pop	{r3, r4, r5, pc}
 80011f6:	bf00      	nop

080011f8 <__aeabi_d2ulz>:
 80011f8:	b5d0      	push	{r4, r6, r7, lr}
 80011fa:	2200      	movs	r2, #0
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <__aeabi_d2ulz+0x34>)
 80011fe:	4606      	mov	r6, r0
 8001200:	460f      	mov	r7, r1
 8001202:	f7ff f98b 	bl	800051c <__aeabi_dmul>
 8001206:	f7ff fc61 	bl	8000acc <__aeabi_d2uiz>
 800120a:	4604      	mov	r4, r0
 800120c:	f7ff f90c 	bl	8000428 <__aeabi_ui2d>
 8001210:	2200      	movs	r2, #0
 8001212:	4b07      	ldr	r3, [pc, #28]	; (8001230 <__aeabi_d2ulz+0x38>)
 8001214:	f7ff f982 	bl	800051c <__aeabi_dmul>
 8001218:	4602      	mov	r2, r0
 800121a:	460b      	mov	r3, r1
 800121c:	4630      	mov	r0, r6
 800121e:	4639      	mov	r1, r7
 8001220:	f7fe ffc4 	bl	80001ac <__aeabi_dsub>
 8001224:	f7ff fc52 	bl	8000acc <__aeabi_d2uiz>
 8001228:	4621      	mov	r1, r4
 800122a:	bdd0      	pop	{r4, r6, r7, pc}
 800122c:	3df00000 	.word	0x3df00000
 8001230:	41f00000 	.word	0x41f00000

08001234 <__udivmoddi4>:
 8001234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001238:	9e08      	ldr	r6, [sp, #32]
 800123a:	460d      	mov	r5, r1
 800123c:	4604      	mov	r4, r0
 800123e:	4688      	mov	r8, r1
 8001240:	2b00      	cmp	r3, #0
 8001242:	d14d      	bne.n	80012e0 <__udivmoddi4+0xac>
 8001244:	428a      	cmp	r2, r1
 8001246:	4694      	mov	ip, r2
 8001248:	d968      	bls.n	800131c <__udivmoddi4+0xe8>
 800124a:	fab2 f282 	clz	r2, r2
 800124e:	b152      	cbz	r2, 8001266 <__udivmoddi4+0x32>
 8001250:	fa01 f302 	lsl.w	r3, r1, r2
 8001254:	f1c2 0120 	rsb	r1, r2, #32
 8001258:	fa20 f101 	lsr.w	r1, r0, r1
 800125c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001260:	ea41 0803 	orr.w	r8, r1, r3
 8001264:	4094      	lsls	r4, r2
 8001266:	ea4f 411c 	mov.w	r1, ip, lsr #16
 800126a:	fbb8 f7f1 	udiv	r7, r8, r1
 800126e:	fa1f fe8c 	uxth.w	lr, ip
 8001272:	fb01 8817 	mls	r8, r1, r7, r8
 8001276:	fb07 f00e 	mul.w	r0, r7, lr
 800127a:	0c23      	lsrs	r3, r4, #16
 800127c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8001280:	4298      	cmp	r0, r3
 8001282:	d90a      	bls.n	800129a <__udivmoddi4+0x66>
 8001284:	eb1c 0303 	adds.w	r3, ip, r3
 8001288:	f107 35ff 	add.w	r5, r7, #4294967295
 800128c:	f080 811e 	bcs.w	80014cc <__udivmoddi4+0x298>
 8001290:	4298      	cmp	r0, r3
 8001292:	f240 811b 	bls.w	80014cc <__udivmoddi4+0x298>
 8001296:	3f02      	subs	r7, #2
 8001298:	4463      	add	r3, ip
 800129a:	1a1b      	subs	r3, r3, r0
 800129c:	fbb3 f0f1 	udiv	r0, r3, r1
 80012a0:	fb01 3310 	mls	r3, r1, r0, r3
 80012a4:	fb00 fe0e 	mul.w	lr, r0, lr
 80012a8:	b2a4      	uxth	r4, r4
 80012aa:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80012ae:	45a6      	cmp	lr, r4
 80012b0:	d90a      	bls.n	80012c8 <__udivmoddi4+0x94>
 80012b2:	eb1c 0404 	adds.w	r4, ip, r4
 80012b6:	f100 33ff 	add.w	r3, r0, #4294967295
 80012ba:	f080 8109 	bcs.w	80014d0 <__udivmoddi4+0x29c>
 80012be:	45a6      	cmp	lr, r4
 80012c0:	f240 8106 	bls.w	80014d0 <__udivmoddi4+0x29c>
 80012c4:	4464      	add	r4, ip
 80012c6:	3802      	subs	r0, #2
 80012c8:	2100      	movs	r1, #0
 80012ca:	eba4 040e 	sub.w	r4, r4, lr
 80012ce:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80012d2:	b11e      	cbz	r6, 80012dc <__udivmoddi4+0xa8>
 80012d4:	2300      	movs	r3, #0
 80012d6:	40d4      	lsrs	r4, r2
 80012d8:	e9c6 4300 	strd	r4, r3, [r6]
 80012dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012e0:	428b      	cmp	r3, r1
 80012e2:	d908      	bls.n	80012f6 <__udivmoddi4+0xc2>
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	f000 80ee 	beq.w	80014c6 <__udivmoddi4+0x292>
 80012ea:	2100      	movs	r1, #0
 80012ec:	e9c6 0500 	strd	r0, r5, [r6]
 80012f0:	4608      	mov	r0, r1
 80012f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012f6:	fab3 f183 	clz	r1, r3
 80012fa:	2900      	cmp	r1, #0
 80012fc:	d14a      	bne.n	8001394 <__udivmoddi4+0x160>
 80012fe:	42ab      	cmp	r3, r5
 8001300:	d302      	bcc.n	8001308 <__udivmoddi4+0xd4>
 8001302:	4282      	cmp	r2, r0
 8001304:	f200 80fc 	bhi.w	8001500 <__udivmoddi4+0x2cc>
 8001308:	1a84      	subs	r4, r0, r2
 800130a:	eb65 0303 	sbc.w	r3, r5, r3
 800130e:	2001      	movs	r0, #1
 8001310:	4698      	mov	r8, r3
 8001312:	2e00      	cmp	r6, #0
 8001314:	d0e2      	beq.n	80012dc <__udivmoddi4+0xa8>
 8001316:	e9c6 4800 	strd	r4, r8, [r6]
 800131a:	e7df      	b.n	80012dc <__udivmoddi4+0xa8>
 800131c:	b902      	cbnz	r2, 8001320 <__udivmoddi4+0xec>
 800131e:	deff      	udf	#255	; 0xff
 8001320:	fab2 f282 	clz	r2, r2
 8001324:	2a00      	cmp	r2, #0
 8001326:	f040 8091 	bne.w	800144c <__udivmoddi4+0x218>
 800132a:	eba1 000c 	sub.w	r0, r1, ip
 800132e:	2101      	movs	r1, #1
 8001330:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001334:	fa1f fe8c 	uxth.w	lr, ip
 8001338:	fbb0 f3f7 	udiv	r3, r0, r7
 800133c:	fb07 0013 	mls	r0, r7, r3, r0
 8001340:	0c25      	lsrs	r5, r4, #16
 8001342:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8001346:	fb0e f003 	mul.w	r0, lr, r3
 800134a:	42a8      	cmp	r0, r5
 800134c:	d908      	bls.n	8001360 <__udivmoddi4+0x12c>
 800134e:	eb1c 0505 	adds.w	r5, ip, r5
 8001352:	f103 38ff 	add.w	r8, r3, #4294967295
 8001356:	d202      	bcs.n	800135e <__udivmoddi4+0x12a>
 8001358:	42a8      	cmp	r0, r5
 800135a:	f200 80ce 	bhi.w	80014fa <__udivmoddi4+0x2c6>
 800135e:	4643      	mov	r3, r8
 8001360:	1a2d      	subs	r5, r5, r0
 8001362:	fbb5 f0f7 	udiv	r0, r5, r7
 8001366:	fb07 5510 	mls	r5, r7, r0, r5
 800136a:	fb0e fe00 	mul.w	lr, lr, r0
 800136e:	b2a4      	uxth	r4, r4
 8001370:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8001374:	45a6      	cmp	lr, r4
 8001376:	d908      	bls.n	800138a <__udivmoddi4+0x156>
 8001378:	eb1c 0404 	adds.w	r4, ip, r4
 800137c:	f100 35ff 	add.w	r5, r0, #4294967295
 8001380:	d202      	bcs.n	8001388 <__udivmoddi4+0x154>
 8001382:	45a6      	cmp	lr, r4
 8001384:	f200 80b6 	bhi.w	80014f4 <__udivmoddi4+0x2c0>
 8001388:	4628      	mov	r0, r5
 800138a:	eba4 040e 	sub.w	r4, r4, lr
 800138e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001392:	e79e      	b.n	80012d2 <__udivmoddi4+0x9e>
 8001394:	f1c1 0720 	rsb	r7, r1, #32
 8001398:	408b      	lsls	r3, r1
 800139a:	fa22 fc07 	lsr.w	ip, r2, r7
 800139e:	ea4c 0c03 	orr.w	ip, ip, r3
 80013a2:	fa25 fa07 	lsr.w	sl, r5, r7
 80013a6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80013aa:	fbba f8f9 	udiv	r8, sl, r9
 80013ae:	fa20 f307 	lsr.w	r3, r0, r7
 80013b2:	fb09 aa18 	mls	sl, r9, r8, sl
 80013b6:	408d      	lsls	r5, r1
 80013b8:	fa1f fe8c 	uxth.w	lr, ip
 80013bc:	431d      	orrs	r5, r3
 80013be:	fa00 f301 	lsl.w	r3, r0, r1
 80013c2:	fb08 f00e 	mul.w	r0, r8, lr
 80013c6:	0c2c      	lsrs	r4, r5, #16
 80013c8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80013cc:	42a0      	cmp	r0, r4
 80013ce:	fa02 f201 	lsl.w	r2, r2, r1
 80013d2:	d90b      	bls.n	80013ec <__udivmoddi4+0x1b8>
 80013d4:	eb1c 0404 	adds.w	r4, ip, r4
 80013d8:	f108 3aff 	add.w	sl, r8, #4294967295
 80013dc:	f080 8088 	bcs.w	80014f0 <__udivmoddi4+0x2bc>
 80013e0:	42a0      	cmp	r0, r4
 80013e2:	f240 8085 	bls.w	80014f0 <__udivmoddi4+0x2bc>
 80013e6:	f1a8 0802 	sub.w	r8, r8, #2
 80013ea:	4464      	add	r4, ip
 80013ec:	1a24      	subs	r4, r4, r0
 80013ee:	fbb4 f0f9 	udiv	r0, r4, r9
 80013f2:	fb09 4410 	mls	r4, r9, r0, r4
 80013f6:	fb00 fe0e 	mul.w	lr, r0, lr
 80013fa:	b2ad      	uxth	r5, r5
 80013fc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001400:	45a6      	cmp	lr, r4
 8001402:	d908      	bls.n	8001416 <__udivmoddi4+0x1e2>
 8001404:	eb1c 0404 	adds.w	r4, ip, r4
 8001408:	f100 35ff 	add.w	r5, r0, #4294967295
 800140c:	d26c      	bcs.n	80014e8 <__udivmoddi4+0x2b4>
 800140e:	45a6      	cmp	lr, r4
 8001410:	d96a      	bls.n	80014e8 <__udivmoddi4+0x2b4>
 8001412:	3802      	subs	r0, #2
 8001414:	4464      	add	r4, ip
 8001416:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800141a:	fba0 9502 	umull	r9, r5, r0, r2
 800141e:	eba4 040e 	sub.w	r4, r4, lr
 8001422:	42ac      	cmp	r4, r5
 8001424:	46c8      	mov	r8, r9
 8001426:	46ae      	mov	lr, r5
 8001428:	d356      	bcc.n	80014d8 <__udivmoddi4+0x2a4>
 800142a:	d053      	beq.n	80014d4 <__udivmoddi4+0x2a0>
 800142c:	2e00      	cmp	r6, #0
 800142e:	d069      	beq.n	8001504 <__udivmoddi4+0x2d0>
 8001430:	ebb3 0208 	subs.w	r2, r3, r8
 8001434:	eb64 040e 	sbc.w	r4, r4, lr
 8001438:	fa22 f301 	lsr.w	r3, r2, r1
 800143c:	fa04 f707 	lsl.w	r7, r4, r7
 8001440:	431f      	orrs	r7, r3
 8001442:	40cc      	lsrs	r4, r1
 8001444:	e9c6 7400 	strd	r7, r4, [r6]
 8001448:	2100      	movs	r1, #0
 800144a:	e747      	b.n	80012dc <__udivmoddi4+0xa8>
 800144c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001450:	f1c2 0120 	rsb	r1, r2, #32
 8001454:	fa25 f301 	lsr.w	r3, r5, r1
 8001458:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800145c:	fa20 f101 	lsr.w	r1, r0, r1
 8001460:	4095      	lsls	r5, r2
 8001462:	430d      	orrs	r5, r1
 8001464:	fbb3 f1f7 	udiv	r1, r3, r7
 8001468:	fb07 3311 	mls	r3, r7, r1, r3
 800146c:	fa1f fe8c 	uxth.w	lr, ip
 8001470:	0c28      	lsrs	r0, r5, #16
 8001472:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001476:	fb01 f30e 	mul.w	r3, r1, lr
 800147a:	4283      	cmp	r3, r0
 800147c:	fa04 f402 	lsl.w	r4, r4, r2
 8001480:	d908      	bls.n	8001494 <__udivmoddi4+0x260>
 8001482:	eb1c 0000 	adds.w	r0, ip, r0
 8001486:	f101 38ff 	add.w	r8, r1, #4294967295
 800148a:	d22f      	bcs.n	80014ec <__udivmoddi4+0x2b8>
 800148c:	4283      	cmp	r3, r0
 800148e:	d92d      	bls.n	80014ec <__udivmoddi4+0x2b8>
 8001490:	3902      	subs	r1, #2
 8001492:	4460      	add	r0, ip
 8001494:	1ac0      	subs	r0, r0, r3
 8001496:	fbb0 f3f7 	udiv	r3, r0, r7
 800149a:	fb07 0013 	mls	r0, r7, r3, r0
 800149e:	b2ad      	uxth	r5, r5
 80014a0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80014a4:	fb03 f00e 	mul.w	r0, r3, lr
 80014a8:	42a8      	cmp	r0, r5
 80014aa:	d908      	bls.n	80014be <__udivmoddi4+0x28a>
 80014ac:	eb1c 0505 	adds.w	r5, ip, r5
 80014b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80014b4:	d216      	bcs.n	80014e4 <__udivmoddi4+0x2b0>
 80014b6:	42a8      	cmp	r0, r5
 80014b8:	d914      	bls.n	80014e4 <__udivmoddi4+0x2b0>
 80014ba:	3b02      	subs	r3, #2
 80014bc:	4465      	add	r5, ip
 80014be:	1a28      	subs	r0, r5, r0
 80014c0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80014c4:	e738      	b.n	8001338 <__udivmoddi4+0x104>
 80014c6:	4631      	mov	r1, r6
 80014c8:	4630      	mov	r0, r6
 80014ca:	e707      	b.n	80012dc <__udivmoddi4+0xa8>
 80014cc:	462f      	mov	r7, r5
 80014ce:	e6e4      	b.n	800129a <__udivmoddi4+0x66>
 80014d0:	4618      	mov	r0, r3
 80014d2:	e6f9      	b.n	80012c8 <__udivmoddi4+0x94>
 80014d4:	454b      	cmp	r3, r9
 80014d6:	d2a9      	bcs.n	800142c <__udivmoddi4+0x1f8>
 80014d8:	ebb9 0802 	subs.w	r8, r9, r2
 80014dc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80014e0:	3801      	subs	r0, #1
 80014e2:	e7a3      	b.n	800142c <__udivmoddi4+0x1f8>
 80014e4:	4643      	mov	r3, r8
 80014e6:	e7ea      	b.n	80014be <__udivmoddi4+0x28a>
 80014e8:	4628      	mov	r0, r5
 80014ea:	e794      	b.n	8001416 <__udivmoddi4+0x1e2>
 80014ec:	4641      	mov	r1, r8
 80014ee:	e7d1      	b.n	8001494 <__udivmoddi4+0x260>
 80014f0:	46d0      	mov	r8, sl
 80014f2:	e77b      	b.n	80013ec <__udivmoddi4+0x1b8>
 80014f4:	4464      	add	r4, ip
 80014f6:	3802      	subs	r0, #2
 80014f8:	e747      	b.n	800138a <__udivmoddi4+0x156>
 80014fa:	3b02      	subs	r3, #2
 80014fc:	4465      	add	r5, ip
 80014fe:	e72f      	b.n	8001360 <__udivmoddi4+0x12c>
 8001500:	4608      	mov	r0, r1
 8001502:	e706      	b.n	8001312 <__udivmoddi4+0xde>
 8001504:	4631      	mov	r1, r6
 8001506:	e6e9      	b.n	80012dc <__udivmoddi4+0xa8>

08001508 <__aeabi_idiv0>:
 8001508:	4770      	bx	lr
 800150a:	bf00      	nop

0800150c <__circ_gbuf_pop>:
#include <string.h>

#include <circular_buffer.h>

int __circ_gbuf_pop(circ_gbuf_t *circ_buf, void *elem, int read_only)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b086      	sub	sp, #24
 8001510:	af00      	add	r7, sp, #0
 8001512:	60f8      	str	r0, [r7, #12]
 8001514:	60b9      	str	r1, [r7, #8]
 8001516:	607a      	str	r2, [r7, #4]
	int total;
	char *tail;

	total = circ_buf->push_count - circ_buf->pop_count;
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	889b      	ldrh	r3, [r3, #4]
 800151c:	461a      	mov	r2, r3
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	88db      	ldrh	r3, [r3, #6]
 8001522:	1ad3      	subs	r3, r2, r3
 8001524:	617b      	str	r3, [r7, #20]
	if (total < 0)
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	2b00      	cmp	r3, #0
 800152a:	da05      	bge.n	8001538 <__circ_gbuf_pop+0x2c>
		total += (2 * circ_buf->size);
 800152c:	68fb      	ldr	r3, [r7, #12]
 800152e:	891b      	ldrh	r3, [r3, #8]
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	697a      	ldr	r2, [r7, #20]
 8001534:	4413      	add	r3, r2
 8001536:	617b      	str	r3, [r7, #20]

	if (total == 0)
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	2b00      	cmp	r3, #0
 800153c:	d102      	bne.n	8001544 <__circ_gbuf_pop+0x38>
		return -1; // Empty
 800153e:	f04f 33ff 	mov.w	r3, #4294967295
 8001542:	e031      	b.n	80015a8 <__circ_gbuf_pop+0x9c>

	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	6819      	ldr	r1, [r3, #0]
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	88db      	ldrh	r3, [r3, #6]
 800154c:	68fa      	ldr	r2, [r7, #12]
 800154e:	8912      	ldrh	r2, [r2, #8]
 8001550:	fbb3 f0f2 	udiv	r0, r3, r2
 8001554:	fb00 f202 	mul.w	r2, r0, r2
 8001558:	1a9b      	subs	r3, r3, r2
 800155a:	b29b      	uxth	r3, r3
 800155c:	461a      	mov	r2, r3
			* circ_buf->element_size);
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	895b      	ldrh	r3, [r3, #10]
 8001562:	fb02 f303 	mul.w	r3, r2, r3
	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001566:	440b      	add	r3, r1
 8001568:	613b      	str	r3, [r7, #16]

	if (elem)
 800156a:	68bb      	ldr	r3, [r7, #8]
 800156c:	2b00      	cmp	r3, #0
 800156e:	d006      	beq.n	800157e <__circ_gbuf_pop+0x72>
		memcpy(elem, tail, circ_buf->element_size);
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	895b      	ldrh	r3, [r3, #10]
 8001574:	461a      	mov	r2, r3
 8001576:	6939      	ldr	r1, [r7, #16]
 8001578:	68b8      	ldr	r0, [r7, #8]
 800157a:	f009 fc9b 	bl	800aeb4 <memcpy>

	if (!read_only) {
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	2b00      	cmp	r3, #0
 8001582:	d110      	bne.n	80015a6 <__circ_gbuf_pop+0x9a>
#ifdef CRICBUF_CLEAN_ON_POP
		memset(tail, 0, circ_buf->element_size);
#endif
		circ_buf->pop_count++;
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	88db      	ldrh	r3, [r3, #6]
 8001588:	3301      	adds	r3, #1
 800158a:	b29a      	uxth	r2, r3
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	80da      	strh	r2, [r3, #6]
		if (circ_buf->pop_count >= (2*circ_buf->size))
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	88db      	ldrh	r3, [r3, #6]
 8001594:	461a      	mov	r2, r3
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	891b      	ldrh	r3, [r3, #8]
 800159a:	005b      	lsls	r3, r3, #1
 800159c:	429a      	cmp	r2, r3
 800159e:	db02      	blt.n	80015a6 <__circ_gbuf_pop+0x9a>
			circ_buf->pop_count = 0;
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	2200      	movs	r2, #0
 80015a4:	80da      	strh	r2, [r3, #6]
	}
	return 0;
 80015a6:	2300      	movs	r3, #0
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3718      	adds	r7, #24
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <__circ_gbuf_push>:

int __circ_gbuf_push(circ_gbuf_t *circ_buf, void *elem)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b084      	sub	sp, #16
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	6039      	str	r1, [r7, #0]
	int total;
	char *head;

	total = circ_buf->push_count - circ_buf->pop_count;
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	889b      	ldrh	r3, [r3, #4]
 80015be:	461a      	mov	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	88db      	ldrh	r3, [r3, #6]
 80015c4:	1ad3      	subs	r3, r2, r3
 80015c6:	60fb      	str	r3, [r7, #12]
	if (total < 0)
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	da05      	bge.n	80015da <__circ_gbuf_push+0x2a>
		total += (2 * circ_buf->size);
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	891b      	ldrh	r3, [r3, #8]
 80015d2:	005b      	lsls	r3, r3, #1
 80015d4:	68fa      	ldr	r2, [r7, #12]
 80015d6:	4413      	add	r3, r2
 80015d8:	60fb      	str	r3, [r7, #12]

	if (total >=  circ_buf->size)
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	891b      	ldrh	r3, [r3, #8]
 80015de:	461a      	mov	r2, r3
 80015e0:	68fb      	ldr	r3, [r7, #12]
 80015e2:	4293      	cmp	r3, r2
 80015e4:	db02      	blt.n	80015ec <__circ_gbuf_push+0x3c>
		return -1; // Full
 80015e6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ea:	e02b      	b.n	8001644 <__circ_gbuf_push+0x94>

	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	6819      	ldr	r1, [r3, #0]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	889b      	ldrh	r3, [r3, #4]
 80015f4:	687a      	ldr	r2, [r7, #4]
 80015f6:	8912      	ldrh	r2, [r2, #8]
 80015f8:	fbb3 f0f2 	udiv	r0, r3, r2
 80015fc:	fb00 f202 	mul.w	r2, r0, r2
 8001600:	1a9b      	subs	r3, r3, r2
 8001602:	b29b      	uxth	r3, r3
 8001604:	461a      	mov	r2, r3
			* circ_buf->element_size );
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	895b      	ldrh	r3, [r3, #10]
 800160a:	fb02 f303 	mul.w	r3, r2, r3
	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 800160e:	440b      	add	r3, r1
 8001610:	60bb      	str	r3, [r7, #8]
	memcpy(head, elem, circ_buf->element_size);
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	895b      	ldrh	r3, [r3, #10]
 8001616:	461a      	mov	r2, r3
 8001618:	6839      	ldr	r1, [r7, #0]
 800161a:	68b8      	ldr	r0, [r7, #8]
 800161c:	f009 fc4a 	bl	800aeb4 <memcpy>
	circ_buf->push_count++;
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	889b      	ldrh	r3, [r3, #4]
 8001624:	3301      	adds	r3, #1
 8001626:	b29a      	uxth	r2, r3
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	809a      	strh	r2, [r3, #4]
	if (circ_buf->push_count >= (2*circ_buf->size))
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	889b      	ldrh	r3, [r3, #4]
 8001630:	461a      	mov	r2, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	891b      	ldrh	r3, [r3, #8]
 8001636:	005b      	lsls	r3, r3, #1
 8001638:	429a      	cmp	r2, r3
 800163a:	db02      	blt.n	8001642 <__circ_gbuf_push+0x92>
		circ_buf->push_count = 0;
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	2200      	movs	r2, #0
 8001640:	809a      	strh	r2, [r3, #4]
	return 0;
 8001642:	2300      	movs	r3, #0
}
 8001644:	4618      	mov	r0, r3
 8001646:	3710      	adds	r7, #16
 8001648:	46bd      	mov	sp, r7
 800164a:	bd80      	pop	{r7, pc}

0800164c <Relay_control>:
extern uint16_t DAC_tx_tmp_buffer[2];
extern float DDS_FTW;


//==============================================================================================
void Relay_control(uint8_t relay,uint8_t state){
 800164c:	b580      	push	{r7, lr}
 800164e:	b084      	sub	sp, #16
 8001650:	af00      	add	r7, sp, #0
 8001652:	4603      	mov	r3, r0
 8001654:	460a      	mov	r2, r1
 8001656:	71fb      	strb	r3, [r7, #7]
 8001658:	4613      	mov	r3, r2
 800165a:	71bb      	strb	r3, [r7, #6]
	int Relay_address=0;
 800165c:	2300      	movs	r3, #0
 800165e:	60fb      	str	r3, [r7, #12]
	if(relay>3 || state>1) return;
 8001660:	79fb      	ldrb	r3, [r7, #7]
 8001662:	2b03      	cmp	r3, #3
 8001664:	f200 80a3 	bhi.w	80017ae <Relay_control+0x162>
 8001668:	79bb      	ldrb	r3, [r7, #6]
 800166a:	2b01      	cmp	r3, #1
 800166c:	f200 809f 	bhi.w	80017ae <Relay_control+0x162>

	if(relay==0x00 && state==0x00)
 8001670:	79fb      	ldrb	r3, [r7, #7]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d141      	bne.n	80016fa <Relay_control+0xae>
 8001676:	79bb      	ldrb	r3, [r7, #6]
 8001678:	2b00      	cmp	r3, #0
 800167a:	d13e      	bne.n	80016fa <Relay_control+0xae>
	{
		while(Relay_address<=0x5) // Set all OUTx to zero
 800167c:	e039      	b.n	80016f2 <Relay_control+0xa6>
		{
			HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 800167e:	68fb      	ldr	r3, [r7, #12]
 8001680:	b2db      	uxtb	r3, r3
 8001682:	f003 0301 	and.w	r3, r3, #1
 8001686:	b2db      	uxtb	r3, r3
 8001688:	461a      	mov	r2, r3
 800168a:	2102      	movs	r1, #2
 800168c:	484a      	ldr	r0, [pc, #296]	; (80017b8 <Relay_control+0x16c>)
 800168e:	f004 fcb1 	bl	8005ff4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001692:	68fb      	ldr	r3, [r7, #12]
 8001694:	105b      	asrs	r3, r3, #1
 8001696:	b2db      	uxtb	r3, r3
 8001698:	f003 0301 	and.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	461a      	mov	r2, r3
 80016a0:	2104      	movs	r1, #4
 80016a2:	4845      	ldr	r0, [pc, #276]	; (80017b8 <Relay_control+0x16c>)
 80016a4:	f004 fca6 	bl	8005ff4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	109b      	asrs	r3, r3, #2
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	f003 0301 	and.w	r3, r3, #1
 80016b2:	b2db      	uxtb	r3, r3
 80016b4:	461a      	mov	r2, r3
 80016b6:	2108      	movs	r1, #8
 80016b8:	483f      	ldr	r0, [pc, #252]	; (80017b8 <Relay_control+0x16c>)
 80016ba:	f004 fc9b 	bl	8005ff4 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 0); // LVL 0
 80016be:	2200      	movs	r2, #0
 80016c0:	2101      	movs	r1, #1
 80016c2:	483d      	ldr	r0, [pc, #244]	; (80017b8 <Relay_control+0x16c>)
 80016c4:	f004 fc96 	bl	8005ff4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 80016c8:	2200      	movs	r2, #0
 80016ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016ce:	483b      	ldr	r0, [pc, #236]	; (80017bc <Relay_control+0x170>)
 80016d0:	f004 fc90 	bl	8005ff4 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016d4:	2001      	movs	r0, #1
 80016d6:	f004 f93d 	bl	8005954 <HAL_Delay>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1);
 80016da:	2201      	movs	r2, #1
 80016dc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016e0:	4836      	ldr	r0, [pc, #216]	; (80017bc <Relay_control+0x170>)
 80016e2:	f004 fc87 	bl	8005ff4 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016e6:	2001      	movs	r0, #1
 80016e8:	f004 f934 	bl	8005954 <HAL_Delay>
			Relay_address++;
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	3301      	adds	r3, #1
 80016f0:	60fb      	str	r3, [r7, #12]
		while(Relay_address<=0x5) // Set all OUTx to zero
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	2b05      	cmp	r3, #5
 80016f6:	ddc2      	ble.n	800167e <Relay_control+0x32>
		}
		return;
 80016f8:	e05a      	b.n	80017b0 <Relay_control+0x164>
	}


	switch (relay)
 80016fa:	79fb      	ldrb	r3, [r7, #7]
 80016fc:	2b03      	cmp	r3, #3
 80016fe:	d006      	beq.n	800170e <Relay_control+0xc2>
 8001700:	2b03      	cmp	r3, #3
 8001702:	dc1f      	bgt.n	8001744 <Relay_control+0xf8>
 8001704:	2b01      	cmp	r3, #1
 8001706:	d014      	beq.n	8001732 <Relay_control+0xe6>
 8001708:	2b02      	cmp	r3, #2
 800170a:	d009      	beq.n	8001720 <Relay_control+0xd4>
 800170c:	e01a      	b.n	8001744 <Relay_control+0xf8>
	{
	case 3:
		if (state==1){
 800170e:	79bb      	ldrb	r3, [r7, #6]
 8001710:	2b01      	cmp	r3, #1
 8001712:	d102      	bne.n	800171a <Relay_control+0xce>
			Relay_address=0x5; //OUT6
 8001714:	2305      	movs	r3, #5
 8001716:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x4; //OUT5
		} break;
 8001718:	e014      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x4; //OUT5
 800171a:	2304      	movs	r3, #4
 800171c:	60fb      	str	r3, [r7, #12]
		} break;
 800171e:	e011      	b.n	8001744 <Relay_control+0xf8>
	case 2:
		if (state==1){
 8001720:	79bb      	ldrb	r3, [r7, #6]
 8001722:	2b01      	cmp	r3, #1
 8001724:	d102      	bne.n	800172c <Relay_control+0xe0>
			Relay_address=0x3; //OUT4
 8001726:	2303      	movs	r3, #3
 8001728:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x2; //OUT3
		} break;
 800172a:	e00b      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x2; //OUT3
 800172c:	2302      	movs	r3, #2
 800172e:	60fb      	str	r3, [r7, #12]
		} break;
 8001730:	e008      	b.n	8001744 <Relay_control+0xf8>
	case 1:
		if (state==1){
 8001732:	79bb      	ldrb	r3, [r7, #6]
 8001734:	2b01      	cmp	r3, #1
 8001736:	d102      	bne.n	800173e <Relay_control+0xf2>
			Relay_address=0x1; //OUT2
 8001738:	2301      	movs	r3, #1
 800173a:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x0; //OUT1
		} break;
 800173c:	e001      	b.n	8001742 <Relay_control+0xf6>
			Relay_address=0x0; //OUT1
 800173e:	2300      	movs	r3, #0
 8001740:	60fb      	str	r3, [r7, #12]
		} break;
 8001742:	bf00      	nop
	}

	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	b2db      	uxtb	r3, r3
 8001748:	f003 0301 	and.w	r3, r3, #1
 800174c:	b2db      	uxtb	r3, r3
 800174e:	461a      	mov	r2, r3
 8001750:	2102      	movs	r1, #2
 8001752:	4819      	ldr	r0, [pc, #100]	; (80017b8 <Relay_control+0x16c>)
 8001754:	f004 fc4e 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	105b      	asrs	r3, r3, #1
 800175c:	b2db      	uxtb	r3, r3
 800175e:	f003 0301 	and.w	r3, r3, #1
 8001762:	b2db      	uxtb	r3, r3
 8001764:	461a      	mov	r2, r3
 8001766:	2104      	movs	r1, #4
 8001768:	4813      	ldr	r0, [pc, #76]	; (80017b8 <Relay_control+0x16c>)
 800176a:	f004 fc43 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	109b      	asrs	r3, r3, #2
 8001772:	b2db      	uxtb	r3, r3
 8001774:	f003 0301 	and.w	r3, r3, #1
 8001778:	b2db      	uxtb	r3, r3
 800177a:	461a      	mov	r2, r3
 800177c:	2108      	movs	r1, #8
 800177e:	480e      	ldr	r0, [pc, #56]	; (80017b8 <Relay_control+0x16c>)
 8001780:	f004 fc38 	bl	8005ff4 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 1); // LVL 1
 8001784:	2201      	movs	r2, #1
 8001786:	2101      	movs	r1, #1
 8001788:	480b      	ldr	r0, [pc, #44]	; (80017b8 <Relay_control+0x16c>)
 800178a:	f004 fc33 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 800178e:	2200      	movs	r2, #0
 8001790:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001794:	4809      	ldr	r0, [pc, #36]	; (80017bc <Relay_control+0x170>)
 8001796:	f004 fc2d 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_Delay(1); // wait 1ms
 800179a:	2001      	movs	r0, #1
 800179c:	f004 f8da 	bl	8005954 <HAL_Delay>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1); // End strobe
 80017a0:	2201      	movs	r2, #1
 80017a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80017a6:	4805      	ldr	r0, [pc, #20]	; (80017bc <Relay_control+0x170>)
 80017a8:	f004 fc24 	bl	8005ff4 <HAL_GPIO_WritePin>
 80017ac:	e000      	b.n	80017b0 <Relay_control+0x164>
	if(relay>3 || state>1) return;
 80017ae:	bf00      	nop
}
 80017b0:	3710      	adds	r7, #16
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020800 	.word	0x40020800

080017c0 <CPLD_control>:
//==============================================================================================



//==============================================================================================
void CPLD_control(FunctionalState state){
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	4603      	mov	r3, r0
 80017c8:	71fb      	strb	r3, [r7, #7]
	uint8_t send_word=0x00;
 80017ca:	2300      	movs	r3, #0
 80017cc:	75fb      	strb	r3, [r7, #23]

	// Calculate CPLD divider to expand DDS FTW to 0.1 ppm
	float dds_tmp_calc=DDS_clock_frequecny;
 80017ce:	4b3f      	ldr	r3, [pc, #252]	; (80018cc <CPLD_control+0x10c>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc/=(float)0xFFFFFFFF; // 10MHz / 2^32 = 0.0023283 Hz DDS FTW resolution
 80017d4:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 80017d8:	68f8      	ldr	r0, [r7, #12]
 80017da:	f7ff fba9 	bl	8000f30 <__aeabi_fdiv>
 80017de:	4603      	mov	r3, r0
 80017e0:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc=dds_tmp_calc/(DDS_target_frequecny/(float)1E7); // 0.0023283 Hz / (74.898214 Hz / 1E7) = 310.86 minimum CPLD divider
 80017e2:	4b3b      	ldr	r3, [pc, #236]	; (80018d0 <CPLD_control+0x110>)
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	493b      	ldr	r1, [pc, #236]	; (80018d4 <CPLD_control+0x114>)
 80017e8:	4618      	mov	r0, r3
 80017ea:	f7ff fba1 	bl	8000f30 <__aeabi_fdiv>
 80017ee:	4603      	mov	r3, r0
 80017f0:	4619      	mov	r1, r3
 80017f2:	68f8      	ldr	r0, [r7, #12]
 80017f4:	f7ff fb9c 	bl	8000f30 <__aeabi_fdiv>
 80017f8:	4603      	mov	r3, r0
 80017fa:	60fb      	str	r3, [r7, #12]

	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 80017fc:	2301      	movs	r3, #1
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	e017      	b.n	8001832 <CPLD_control+0x72>
	{
		if(((1<<i)+1) > dds_tmp_calc)
 8001802:	2201      	movs	r2, #1
 8001804:	693b      	ldr	r3, [r7, #16]
 8001806:	fa02 f303 	lsl.w	r3, r2, r3
 800180a:	3301      	adds	r3, #1
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fa87 	bl	8000d20 <__aeabi_i2f>
 8001812:	4603      	mov	r3, r0
 8001814:	4619      	mov	r1, r3
 8001816:	68f8      	ldr	r0, [r7, #12]
 8001818:	f7ff fc74 	bl	8001104 <__aeabi_fcmplt>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d004      	beq.n	800182c <CPLD_control+0x6c>
		{
			CPLD_WORD=i;
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	b2da      	uxtb	r2, r3
 8001826:	4b2c      	ldr	r3, [pc, #176]	; (80018d8 <CPLD_control+0x118>)
 8001828:	701a      	strb	r2, [r3, #0]
			break;
 800182a:	e005      	b.n	8001838 <CPLD_control+0x78>
	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 800182c:	693b      	ldr	r3, [r7, #16]
 800182e:	3301      	adds	r3, #1
 8001830:	613b      	str	r3, [r7, #16]
 8001832:	693b      	ldr	r3, [r7, #16]
 8001834:	2b0e      	cmp	r3, #14
 8001836:	dde4      	ble.n	8001802 <CPLD_control+0x42>
		}
	}

	if(state==CPLD_ON_STATE)send_word=CPLD_WORD;
 8001838:	79fb      	ldrb	r3, [r7, #7]
 800183a:	2b01      	cmp	r3, #1
 800183c:	d102      	bne.n	8001844 <CPLD_control+0x84>
 800183e:	4b26      	ldr	r3, [pc, #152]	; (80018d8 <CPLD_control+0x118>)
 8001840:	781b      	ldrb	r3, [r3, #0]
 8001842:	75fb      	strb	r3, [r7, #23]
	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin,  send_word & 0x1     );
 8001844:	7dfb      	ldrb	r3, [r7, #23]
 8001846:	f003 0301 	and.w	r3, r3, #1
 800184a:	b2db      	uxtb	r3, r3
 800184c:	461a      	mov	r2, r3
 800184e:	2101      	movs	r1, #1
 8001850:	4822      	ldr	r0, [pc, #136]	; (80018dc <CPLD_control+0x11c>)
 8001852:	f004 fbcf 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin, (send_word & 0x2) >>1);
 8001856:	7dfb      	ldrb	r3, [r7, #23]
 8001858:	105b      	asrs	r3, r3, #1
 800185a:	b2db      	uxtb	r3, r3
 800185c:	f003 0301 	and.w	r3, r3, #1
 8001860:	b2db      	uxtb	r3, r3
 8001862:	461a      	mov	r2, r3
 8001864:	2102      	movs	r1, #2
 8001866:	481d      	ldr	r0, [pc, #116]	; (80018dc <CPLD_control+0x11c>)
 8001868:	f004 fbc4 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (send_word & 0x4) >>2);
 800186c:	7dfb      	ldrb	r3, [r7, #23]
 800186e:	109b      	asrs	r3, r3, #2
 8001870:	b2db      	uxtb	r3, r3
 8001872:	f003 0301 	and.w	r3, r3, #1
 8001876:	b2db      	uxtb	r3, r3
 8001878:	461a      	mov	r2, r3
 800187a:	2104      	movs	r1, #4
 800187c:	4817      	ldr	r0, [pc, #92]	; (80018dc <CPLD_control+0x11c>)
 800187e:	f004 fbb9 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (send_word & 0x8) >>3);
 8001882:	7dfb      	ldrb	r3, [r7, #23]
 8001884:	10db      	asrs	r3, r3, #3
 8001886:	b2db      	uxtb	r3, r3
 8001888:	f003 0301 	and.w	r3, r3, #1
 800188c:	b2db      	uxtb	r3, r3
 800188e:	461a      	mov	r2, r3
 8001890:	2108      	movs	r1, #8
 8001892:	4812      	ldr	r0, [pc, #72]	; (80018dc <CPLD_control+0x11c>)
 8001894:	f004 fbae 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_SET); // Send strobe
 8001898:	2201      	movs	r2, #1
 800189a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800189e:	4810      	ldr	r0, [pc, #64]	; (80018e0 <CPLD_control+0x120>)
 80018a0:	f004 fba8 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80018a4:	2200      	movs	r2, #0
 80018a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80018aa:	480d      	ldr	r0, [pc, #52]	; (80018e0 <CPLD_control+0x120>)
 80018ac:	f004 fba2 	bl	8005ff4 <HAL_GPIO_WritePin>

	if(state==CPLD_OFF_STATE)
 80018b0:	79fb      	ldrb	r3, [r7, #7]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d103      	bne.n	80018be <CPLD_control+0xfe>
	{
		cfg.LDACMODE=0;
 80018b6:	4b0b      	ldr	r3, [pc, #44]	; (80018e4 <CPLD_control+0x124>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	709a      	strb	r2, [r3, #2]
	}
	else
	{
		cfg.LDACMODE=1;
	}
}
 80018bc:	e002      	b.n	80018c4 <CPLD_control+0x104>
		cfg.LDACMODE=1;
 80018be:	4b09      	ldr	r3, [pc, #36]	; (80018e4 <CPLD_control+0x124>)
 80018c0:	2201      	movs	r2, #1
 80018c2:	709a      	strb	r2, [r3, #2]
}
 80018c4:	bf00      	nop
 80018c6:	3718      	adds	r7, #24
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}
 80018cc:	2000001c 	.word	0x2000001c
 80018d0:	200007f0 	.word	0x200007f0
 80018d4:	4b189680 	.word	0x4b189680
 80018d8:	200007ea 	.word	0x200007ea
 80018dc:	40020000 	.word	0x40020000
 80018e0:	40020800 	.word	0x40020800
 80018e4:	200007e0 	.word	0x200007e0

080018e8 <DAC_Write>:



//==============================================================================================
void DAC_Write(uint32_t value)
{
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b082      	sub	sp, #8
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	6078      	str	r0, [r7, #4]
	DAC_tx_buffer=0x01000000; // Write DAC-DATA
 80018f0:	4b18      	ldr	r3, [pc, #96]	; (8001954 <DAC_Write+0x6c>)
 80018f2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80018f6:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(value & 0xFFFFF)<<4;
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	011b      	lsls	r3, r3, #4
 80018fc:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001900:	f023 030f 	bic.w	r3, r3, #15
 8001904:	4a13      	ldr	r2, [pc, #76]	; (8001954 <DAC_Write+0x6c>)
 8001906:	6812      	ldr	r2, [r2, #0]
 8001908:	4413      	add	r3, r2
 800190a:	4a12      	ldr	r2, [pc, #72]	; (8001954 <DAC_Write+0x6c>)
 800190c:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 800190e:	4b11      	ldr	r3, [pc, #68]	; (8001954 <DAC_Write+0x6c>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	0c1b      	lsrs	r3, r3, #16
 8001914:	b29a      	uxth	r2, r3
 8001916:	4b10      	ldr	r3, [pc, #64]	; (8001958 <DAC_Write+0x70>)
 8001918:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 800191a:	4b0e      	ldr	r3, [pc, #56]	; (8001954 <DAC_Write+0x6c>)
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	b29a      	uxth	r2, r3
 8001920:	4b0d      	ldr	r3, [pc, #52]	; (8001958 <DAC_Write+0x70>)
 8001922:	805a      	strh	r2, [r3, #2]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001924:	2200      	movs	r2, #0
 8001926:	2110      	movs	r1, #16
 8001928:	480c      	ldr	r0, [pc, #48]	; (800195c <DAC_Write+0x74>)
 800192a:	f004 fb63 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 800192e:	2302      	movs	r3, #2
 8001930:	2202      	movs	r2, #2
 8001932:	4909      	ldr	r1, [pc, #36]	; (8001958 <DAC_Write+0x70>)
 8001934:	480a      	ldr	r0, [pc, #40]	; (8001960 <DAC_Write+0x78>)
 8001936:	f006 fbe1 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 800193a:	2201      	movs	r2, #1
 800193c:	2110      	movs	r1, #16
 800193e:	4807      	ldr	r0, [pc, #28]	; (800195c <DAC_Write+0x74>)
 8001940:	f004 fb58 	bl	8005ff4 <HAL_GPIO_WritePin>
	DAC_code=value;
 8001944:	4a07      	ldr	r2, [pc, #28]	; (8001964 <DAC_Write+0x7c>)
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	6013      	str	r3, [r2, #0]
}
 800194a:	bf00      	nop
 800194c:	3708      	adds	r7, #8
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	200007d8 	.word	0x200007d8
 8001958:	200007dc 	.word	0x200007dc
 800195c:	40020000 	.word	0x40020000
 8001960:	20000820 	.word	0x20000820
 8001964:	20000810 	.word	0x20000810

08001968 <DAC_SendInit>:
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
}

//==============================================================================================
void DAC_SendInit(void)
{
 8001968:	b580      	push	{r7, lr}
 800196a:	af00      	add	r7, sp, #0

	DAC_tx_buffer=0x02000000; // Write CONFIG1
 800196c:	4b3d      	ldr	r3, [pc, #244]	; (8001a64 <DAC_SendInit+0xfc>)
 800196e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001972:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(cfg.PDN & 0x01)<<4;
 8001974:	4b3c      	ldr	r3, [pc, #240]	; (8001a68 <DAC_SendInit+0x100>)
 8001976:	7a1b      	ldrb	r3, [r3, #8]
 8001978:	011b      	lsls	r3, r3, #4
 800197a:	f003 0210 	and.w	r2, r3, #16
 800197e:	4b39      	ldr	r3, [pc, #228]	; (8001a64 <DAC_SendInit+0xfc>)
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	4413      	add	r3, r2
 8001984:	4a37      	ldr	r2, [pc, #220]	; (8001a64 <DAC_SendInit+0xfc>)
 8001986:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.VREFVAL & 0x06)<<6;
 8001988:	4b37      	ldr	r3, [pc, #220]	; (8001a68 <DAC_SendInit+0x100>)
 800198a:	79db      	ldrb	r3, [r3, #7]
 800198c:	019b      	lsls	r3, r3, #6
 800198e:	f403 72c0 	and.w	r2, r3, #384	; 0x180
 8001992:	4b34      	ldr	r3, [pc, #208]	; (8001a64 <DAC_SendInit+0xfc>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	4413      	add	r3, r2
 8001998:	4a32      	ldr	r2, [pc, #200]	; (8001a64 <DAC_SendInit+0xfc>)
 800199a:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSET & 0x01)<<10;
 800199c:	4b32      	ldr	r3, [pc, #200]	; (8001a68 <DAC_SendInit+0x100>)
 800199e:	799b      	ldrb	r3, [r3, #6]
 80019a0:	029b      	lsls	r3, r3, #10
 80019a2:	f403 6280 	and.w	r2, r3, #1024	; 0x400
 80019a6:	4b2f      	ldr	r3, [pc, #188]	; (8001a64 <DAC_SendInit+0xfc>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	4413      	add	r3, r2
 80019ac:	4a2d      	ldr	r2, [pc, #180]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ae:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.DSDO & 0x01)<<11;
 80019b0:	4b2d      	ldr	r3, [pc, #180]	; (8001a68 <DAC_SendInit+0x100>)
 80019b2:	795b      	ldrb	r3, [r3, #5]
 80019b4:	02db      	lsls	r3, r3, #11
 80019b6:	f403 6200 	and.w	r2, r3, #2048	; 0x800
 80019ba:	4b2a      	ldr	r3, [pc, #168]	; (8001a64 <DAC_SendInit+0xfc>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	4413      	add	r3, r2
 80019c0:	4a28      	ldr	r2, [pc, #160]	; (8001a64 <DAC_SendInit+0xfc>)
 80019c2:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.ENALMP & 0x01)<<12;
 80019c4:	4b28      	ldr	r3, [pc, #160]	; (8001a68 <DAC_SendInit+0x100>)
 80019c6:	791b      	ldrb	r3, [r3, #4]
 80019c8:	031b      	lsls	r3, r3, #12
 80019ca:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 80019ce:	4b25      	ldr	r3, [pc, #148]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	4413      	add	r3, r2
 80019d4:	4a23      	ldr	r2, [pc, #140]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d6:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSDO & 0x01)<<13;
 80019d8:	4b23      	ldr	r3, [pc, #140]	; (8001a68 <DAC_SendInit+0x100>)
 80019da:	78db      	ldrb	r3, [r3, #3]
 80019dc:	035b      	lsls	r3, r3, #13
 80019de:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80019e2:	4b20      	ldr	r3, [pc, #128]	; (8001a64 <DAC_SendInit+0xfc>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	4413      	add	r3, r2
 80019e8:	4a1e      	ldr	r2, [pc, #120]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ea:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.LDACMODE & 0x01)<<14;
 80019ec:	4b1e      	ldr	r3, [pc, #120]	; (8001a68 <DAC_SendInit+0x100>)
 80019ee:	789b      	ldrb	r3, [r3, #2]
 80019f0:	039b      	lsls	r3, r3, #14
 80019f2:	f403 4280 	and.w	r2, r3, #16384	; 0x4000
 80019f6:	4b1b      	ldr	r3, [pc, #108]	; (8001a64 <DAC_SendInit+0xfc>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	4413      	add	r3, r2
 80019fc:	4a19      	ldr	r2, [pc, #100]	; (8001a64 <DAC_SendInit+0xfc>)
 80019fe:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.TNH_MASK & 0x03)<<18;
 8001a00:	4b19      	ldr	r3, [pc, #100]	; (8001a68 <DAC_SendInit+0x100>)
 8001a02:	785b      	ldrb	r3, [r3, #1]
 8001a04:	049b      	lsls	r3, r3, #18
 8001a06:	f403 2240 	and.w	r2, r3, #786432	; 0xc0000
 8001a0a:	4b16      	ldr	r3, [pc, #88]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	4413      	add	r3, r2
 8001a10:	4a14      	ldr	r2, [pc, #80]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a12:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.EN_TMP_CAL & 0x01)<<23;
 8001a14:	4b14      	ldr	r3, [pc, #80]	; (8001a68 <DAC_SendInit+0x100>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	05db      	lsls	r3, r3, #23
 8001a1a:	f403 0200 	and.w	r2, r3, #8388608	; 0x800000
 8001a1e:	4b11      	ldr	r3, [pc, #68]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	4413      	add	r3, r2
 8001a24:	4a0f      	ldr	r2, [pc, #60]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a26:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a28:	4b0e      	ldr	r3, [pc, #56]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	0c1b      	lsrs	r3, r3, #16
 8001a2e:	b29a      	uxth	r2, r3
 8001a30:	4b0e      	ldr	r3, [pc, #56]	; (8001a6c <DAC_SendInit+0x104>)
 8001a32:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	b29a      	uxth	r2, r3
 8001a3a:	4b0c      	ldr	r3, [pc, #48]	; (8001a6c <DAC_SendInit+0x104>)
 8001a3c:	805a      	strh	r2, [r3, #2]


	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001a3e:	2200      	movs	r2, #0
 8001a40:	2110      	movs	r1, #16
 8001a42:	480b      	ldr	r0, [pc, #44]	; (8001a70 <DAC_SendInit+0x108>)
 8001a44:	f004 fad6 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,5);
 8001a48:	2305      	movs	r3, #5
 8001a4a:	2202      	movs	r2, #2
 8001a4c:	4907      	ldr	r1, [pc, #28]	; (8001a6c <DAC_SendInit+0x104>)
 8001a4e:	4809      	ldr	r0, [pc, #36]	; (8001a74 <DAC_SendInit+0x10c>)
 8001a50:	f006 fb54 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001a54:	2201      	movs	r2, #1
 8001a56:	2110      	movs	r1, #16
 8001a58:	4805      	ldr	r0, [pc, #20]	; (8001a70 <DAC_SendInit+0x108>)
 8001a5a:	f004 facb 	bl	8005ff4 <HAL_GPIO_WritePin>

}
 8001a5e:	bf00      	nop
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	bf00      	nop
 8001a64:	200007d8 	.word	0x200007d8
 8001a68:	200007e0 	.word	0x200007e0
 8001a6c:	200007dc 	.word	0x200007dc
 8001a70:	40020000 	.word	0x40020000
 8001a74:	20000820 	.word	0x20000820

08001a78 <DAC_TEMP_CAL>:

//==============================================================================================
void DAC_TEMP_CAL(void)
{
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b086      	sub	sp, #24
 8001a7c:	af00      	add	r7, sp, #0
	uint32_t DAC_tx_buffer;
	uint16_t DAC_tx_tmp_buffer[2];

	uint16_t spi_receive[2]={0x0,0x0},DAC_tx_tmp_buffer2[2],ALM=0;
 8001a7e:	2300      	movs	r3, #0
 8001a80:	813b      	strh	r3, [r7, #8]
 8001a82:	2300      	movs	r3, #0
 8001a84:	817b      	strh	r3, [r7, #10]
 8001a86:	2300      	movs	r3, #0
 8001a88:	82fb      	strh	r3, [r7, #22]

	//CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal

	cfg.EN_TMP_CAL=1;
 8001a8a:	4b2f      	ldr	r3, [pc, #188]	; (8001b48 <DAC_TEMP_CAL+0xd0>)
 8001a8c:	2201      	movs	r2, #1
 8001a8e:	701a      	strb	r2, [r3, #0]
	DAC_SendInit();
 8001a90:	f7ff ff6a 	bl	8001968 <DAC_SendInit>

	DAC_tx_buffer=0x04000100; // Write TRIGGER RCLTMP
 8001a94:	4b2d      	ldr	r3, [pc, #180]	; (8001b4c <DAC_TEMP_CAL+0xd4>)
 8001a96:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	0c1b      	lsrs	r3, r3, #16
 8001a9c:	b29b      	uxth	r3, r3
 8001a9e:	81bb      	strh	r3, [r7, #12]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001aa0:	693b      	ldr	r3, [r7, #16]
 8001aa2:	b29b      	uxth	r3, r3
 8001aa4:	81fb      	strh	r3, [r7, #14]

	DAC_tx_buffer=0x85000000; // read status register
 8001aa6:	f04f 4305 	mov.w	r3, #2231369728	; 0x85000000
 8001aaa:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer2[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001aac:	693b      	ldr	r3, [r7, #16]
 8001aae:	0c1b      	lsrs	r3, r3, #16
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	80bb      	strh	r3, [r7, #4]
	DAC_tx_tmp_buffer2[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001ab4:	693b      	ldr	r3, [r7, #16]
 8001ab6:	b29b      	uxth	r3, r3
 8001ab8:	80fb      	strh	r3, [r7, #6]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001aba:	2200      	movs	r2, #0
 8001abc:	2110      	movs	r1, #16
 8001abe:	4824      	ldr	r0, [pc, #144]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ac0:	f004 fa98 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 8001ac4:	f107 010c 	add.w	r1, r7, #12
 8001ac8:	2302      	movs	r3, #2
 8001aca:	2202      	movs	r2, #2
 8001acc:	4821      	ldr	r0, [pc, #132]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001ace:	f006 fb15 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	2110      	movs	r1, #16
 8001ad6:	481e      	ldr	r0, [pc, #120]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ad8:	f004 fa8c 	bl	8005ff4 <HAL_GPIO_WritePin>

	do{ // Check complete flag
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001adc:	2200      	movs	r2, #0
 8001ade:	2110      	movs	r1, #16
 8001ae0:	481b      	ldr	r0, [pc, #108]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ae2:	f004 fa87 	bl	8005ff4 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer2,2,2);
 8001ae6:	1d39      	adds	r1, r7, #4
 8001ae8:	2302      	movs	r3, #2
 8001aea:	2202      	movs	r2, #2
 8001aec:	4819      	ldr	r0, [pc, #100]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001aee:	f006 fb05 	bl	80080fc <HAL_SPI_Transmit>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001af2:	2201      	movs	r2, #1
 8001af4:	2110      	movs	r1, #16
 8001af6:	4816      	ldr	r0, [pc, #88]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001af8:	f004 fa7c 	bl	8005ff4 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001afc:	2200      	movs	r2, #0
 8001afe:	2110      	movs	r1, #16
 8001b00:	4813      	ldr	r0, [pc, #76]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b02:	f004 fa77 	bl	8005ff4 <HAL_GPIO_WritePin>
		HAL_SPI_Receive(&hspi1,(uint8_t *)spi_receive, 2, 2);
 8001b06:	f107 0108 	add.w	r1, r7, #8
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	2202      	movs	r2, #2
 8001b0e:	4811      	ldr	r0, [pc, #68]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001b10:	f006 fd98 	bl	8008644 <HAL_SPI_Receive>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001b14:	2201      	movs	r2, #1
 8001b16:	2110      	movs	r1, #16
 8001b18:	480d      	ldr	r0, [pc, #52]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b1a:	f004 fa6b 	bl	8005ff4 <HAL_GPIO_WritePin>
		ALM=(spi_receive[1] & 0x1000) >> 12;
 8001b1e:	897b      	ldrh	r3, [r7, #10]
 8001b20:	131b      	asrs	r3, r3, #12
 8001b22:	b29b      	uxth	r3, r3
 8001b24:	f003 0301 	and.w	r3, r3, #1
 8001b28:	82fb      	strh	r3, [r7, #22]
		if(ALM!=1)HAL_Delay(10);
 8001b2a:	8afb      	ldrh	r3, [r7, #22]
 8001b2c:	2b01      	cmp	r3, #1
 8001b2e:	d002      	beq.n	8001b36 <DAC_TEMP_CAL+0xbe>
 8001b30:	200a      	movs	r0, #10
 8001b32:	f003 ff0f 	bl	8005954 <HAL_Delay>
	}while(ALM!=1);
 8001b36:	8afb      	ldrh	r3, [r7, #22]
 8001b38:	2b01      	cmp	r3, #1
 8001b3a:	d1cf      	bne.n	8001adc <DAC_TEMP_CAL+0x64>
}
 8001b3c:	bf00      	nop
 8001b3e:	bf00      	nop
 8001b40:	3718      	adds	r7, #24
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	200007e0 	.word	0x200007e0
 8001b4c:	04000100 	.word	0x04000100
 8001b50:	40020000 	.word	0x40020000
 8001b54:	20000820 	.word	0x20000820

08001b58 <DDS_Calculation>:

void DDS_Calculation(void)
{
 8001b58:	b590      	push	{r4, r7, lr}
 8001b5a:	b087      	sub	sp, #28
 8001b5c:	af00      	add	r7, sp, #0
	float hw_limit=1000; // 1kHz hardware optimized limit
 8001b5e:	4b87      	ldr	r3, [pc, #540]	; (8001d7c <DDS_Calculation+0x224>)
 8001b60:	613b      	str	r3, [r7, #16]
	float dac_counts=DAC_CODE_TOP-1;
 8001b62:	4b87      	ldr	r3, [pc, #540]	; (8001d80 <DDS_Calculation+0x228>)
 8001b64:	60fb      	str	r3, [r7, #12]
	float corr_coeff;
	float dac_tmp=DAC_code;
 8001b66:	4b87      	ldr	r3, [pc, #540]	; (8001d84 <DDS_Calculation+0x22c>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f7ff f8d4 	bl	8000d18 <__aeabi_ui2f>
 8001b70:	4603      	mov	r3, r0
 8001b72:	60bb      	str	r3, [r7, #8]
	float second_left;
	uint32_t codes_left=0;
 8001b74:	2300      	movs	r3, #0
 8001b76:	617b      	str	r3, [r7, #20]

	// Linearity correction
	corr_coeff=corr_coeff_1*dac_tmp*dac_tmp;
 8001b78:	4b83      	ldr	r3, [pc, #524]	; (8001d88 <DDS_Calculation+0x230>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	68b9      	ldr	r1, [r7, #8]
 8001b7e:	4618      	mov	r0, r3
 8001b80:	f7ff f922 	bl	8000dc8 <__aeabi_fmul>
 8001b84:	4603      	mov	r3, r0
 8001b86:	4619      	mov	r1, r3
 8001b88:	68b8      	ldr	r0, [r7, #8]
 8001b8a:	f7ff f91d 	bl	8000dc8 <__aeabi_fmul>
 8001b8e:	4603      	mov	r3, r0
 8001b90:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_2*dac_tmp;
 8001b92:	4b7e      	ldr	r3, [pc, #504]	; (8001d8c <DDS_Calculation+0x234>)
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	68b9      	ldr	r1, [r7, #8]
 8001b98:	4618      	mov	r0, r3
 8001b9a:	f7ff f915 	bl	8000dc8 <__aeabi_fmul>
 8001b9e:	4603      	mov	r3, r0
 8001ba0:	4619      	mov	r1, r3
 8001ba2:	6878      	ldr	r0, [r7, #4]
 8001ba4:	f7ff f808 	bl	8000bb8 <__addsf3>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_3;
 8001bac:	4b78      	ldr	r3, [pc, #480]	; (8001d90 <DDS_Calculation+0x238>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	4619      	mov	r1, r3
 8001bb2:	6878      	ldr	r0, [r7, #4]
 8001bb4:	f7ff f800 	bl	8000bb8 <__addsf3>
 8001bb8:	4603      	mov	r3, r0
 8001bba:	607b      	str	r3, [r7, #4]

	DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed); // 1048575 / (14V / 0.01V/s) = 74.898214 Hz
 8001bbc:	4b75      	ldr	r3, [pc, #468]	; (8001d94 <DDS_Calculation+0x23c>)
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a75      	ldr	r2, [pc, #468]	; (8001d98 <DDS_Calculation+0x240>)
 8001bc2:	6812      	ldr	r2, [r2, #0]
 8001bc4:	4611      	mov	r1, r2
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f7ff f9b2 	bl	8000f30 <__aeabi_fdiv>
 8001bcc:	4603      	mov	r3, r0
 8001bce:	4619      	mov	r1, r3
 8001bd0:	68f8      	ldr	r0, [r7, #12]
 8001bd2:	f7ff f9ad 	bl	8000f30 <__aeabi_fdiv>
 8001bd6:	4603      	mov	r3, r0
 8001bd8:	461a      	mov	r2, r3
 8001bda:	4b70      	ldr	r3, [pc, #448]	; (8001d9c <DDS_Calculation+0x244>)
 8001bdc:	601a      	str	r2, [r3, #0]

	if(DDS_target_frequecny>hw_limit)
 8001bde:	4b6f      	ldr	r3, [pc, #444]	; (8001d9c <DDS_Calculation+0x244>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	4619      	mov	r1, r3
 8001be4:	6938      	ldr	r0, [r7, #16]
 8001be6:	f7ff fa8d 	bl	8001104 <__aeabi_fcmplt>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d02e      	beq.n	8001c4e <DDS_Calculation+0xf6>
	{
		DDS_target_multipiller=DDS_target_frequecny/hw_limit;
 8001bf0:	4b6a      	ldr	r3, [pc, #424]	; (8001d9c <DDS_Calculation+0x244>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	6939      	ldr	r1, [r7, #16]
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	f7ff f99a 	bl	8000f30 <__aeabi_fdiv>
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	4618      	mov	r0, r3
 8001c00:	f7ff faa8 	bl	8001154 <__aeabi_f2uiz>
 8001c04:	4603      	mov	r3, r0
 8001c06:	4a66      	ldr	r2, [pc, #408]	; (8001da0 <DDS_Calculation+0x248>)
 8001c08:	6013      	str	r3, [r2, #0]
		DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed);
 8001c0a:	4b62      	ldr	r3, [pc, #392]	; (8001d94 <DDS_Calculation+0x23c>)
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	4a62      	ldr	r2, [pc, #392]	; (8001d98 <DDS_Calculation+0x240>)
 8001c10:	6812      	ldr	r2, [r2, #0]
 8001c12:	4611      	mov	r1, r2
 8001c14:	4618      	mov	r0, r3
 8001c16:	f7ff f98b 	bl	8000f30 <__aeabi_fdiv>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	4619      	mov	r1, r3
 8001c1e:	68f8      	ldr	r0, [r7, #12]
 8001c20:	f7ff f986 	bl	8000f30 <__aeabi_fdiv>
 8001c24:	4603      	mov	r3, r0
 8001c26:	461a      	mov	r2, r3
 8001c28:	4b5c      	ldr	r3, [pc, #368]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2a:	601a      	str	r2, [r3, #0]
		DDS_target_frequecny/=(float)DDS_target_multipiller;
 8001c2c:	4b5b      	ldr	r3, [pc, #364]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2e:	681c      	ldr	r4, [r3, #0]
 8001c30:	4b5b      	ldr	r3, [pc, #364]	; (8001da0 <DDS_Calculation+0x248>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff f86f 	bl	8000d18 <__aeabi_ui2f>
 8001c3a:	4603      	mov	r3, r0
 8001c3c:	4619      	mov	r1, r3
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f7ff f976 	bl	8000f30 <__aeabi_fdiv>
 8001c44:	4603      	mov	r3, r0
 8001c46:	461a      	mov	r2, r3
 8001c48:	4b54      	ldr	r3, [pc, #336]	; (8001d9c <DDS_Calculation+0x244>)
 8001c4a:	601a      	str	r2, [r3, #0]
 8001c4c:	e002      	b.n	8001c54 <DDS_Calculation+0xfc>
	} else DDS_target_multipiller = 1;
 8001c4e:	4b54      	ldr	r3, [pc, #336]	; (8001da0 <DDS_Calculation+0x248>)
 8001c50:	2201      	movs	r2, #1
 8001c52:	601a      	str	r2, [r3, #0]

	DDS_FTW=(((DDS_target_frequecny/corr_coeff)*((1<<CPLD_WORD)+1))/DDS_clock_frequecny)*(float)0xFFFFFFFF;
 8001c54:	4b51      	ldr	r3, [pc, #324]	; (8001d9c <DDS_Calculation+0x244>)
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	6879      	ldr	r1, [r7, #4]
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	f7ff f968 	bl	8000f30 <__aeabi_fdiv>
 8001c60:	4603      	mov	r3, r0
 8001c62:	461c      	mov	r4, r3
 8001c64:	4b4f      	ldr	r3, [pc, #316]	; (8001da4 <DDS_Calculation+0x24c>)
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	461a      	mov	r2, r3
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	4093      	lsls	r3, r2
 8001c6e:	3301      	adds	r3, #1
 8001c70:	4618      	mov	r0, r3
 8001c72:	f7ff f855 	bl	8000d20 <__aeabi_i2f>
 8001c76:	4603      	mov	r3, r0
 8001c78:	4619      	mov	r1, r3
 8001c7a:	4620      	mov	r0, r4
 8001c7c:	f7ff f8a4 	bl	8000dc8 <__aeabi_fmul>
 8001c80:	4603      	mov	r3, r0
 8001c82:	461a      	mov	r2, r3
 8001c84:	4b48      	ldr	r3, [pc, #288]	; (8001da8 <DDS_Calculation+0x250>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	4619      	mov	r1, r3
 8001c8a:	4610      	mov	r0, r2
 8001c8c:	f7ff f950 	bl	8000f30 <__aeabi_fdiv>
 8001c90:	4603      	mov	r3, r0
 8001c92:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 8001c96:	4618      	mov	r0, r3
 8001c98:	f7ff f896 	bl	8000dc8 <__aeabi_fmul>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	461a      	mov	r2, r3
 8001ca0:	4b42      	ldr	r3, [pc, #264]	; (8001dac <DDS_Calculation+0x254>)
 8001ca2:	601a      	str	r2, [r3, #0]

	switch(DAC_code_direction)
 8001ca4:	4b42      	ldr	r3, [pc, #264]	; (8001db0 <DDS_Calculation+0x258>)
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	2b02      	cmp	r3, #2
 8001caa:	d011      	beq.n	8001cd0 <DDS_Calculation+0x178>
 8001cac:	2b02      	cmp	r3, #2
 8001cae:	dc1f      	bgt.n	8001cf0 <DDS_Calculation+0x198>
 8001cb0:	2b00      	cmp	r3, #0
 8001cb2:	d009      	beq.n	8001cc8 <DDS_Calculation+0x170>
 8001cb4:	2b01      	cmp	r3, #1
 8001cb6:	d11b      	bne.n	8001cf0 <DDS_Calculation+0x198>
	{
	//----------------------------------------------------------//
	case DIRECTION_UP_STATE:
		codes_left=0xFFFFF-DAC_code;
 8001cb8:	4b32      	ldr	r3, [pc, #200]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001cc0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001cc4:	617b      	str	r3, [r7, #20]
		break;
 8001cc6:	e013      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_DOWN_STATE:
		codes_left=DAC_code;
 8001cc8:	4b2e      	ldr	r3, [pc, #184]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	617b      	str	r3, [r7, #20]
		break;
 8001cce:	e00f      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_CYCLE_STATE:
		if(DAC_code_direction_for_cycle_mode == 1)
 8001cd0:	4b38      	ldr	r3, [pc, #224]	; (8001db4 <DDS_Calculation+0x25c>)
 8001cd2:	781b      	ldrb	r3, [r3, #0]
 8001cd4:	2b01      	cmp	r3, #1
 8001cd6:	d107      	bne.n	8001ce8 <DDS_Calculation+0x190>
		{
			codes_left=0xFFFFF-DAC_code;
 8001cd8:	4b2a      	ldr	r3, [pc, #168]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001ce0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001ce4:	617b      	str	r3, [r7, #20]
		}
		else
		{
			codes_left=DAC_code;
		}
		break;
 8001ce6:	e002      	b.n	8001cee <DDS_Calculation+0x196>
			codes_left=DAC_code;
 8001ce8:	4b26      	ldr	r3, [pc, #152]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	617b      	str	r3, [r7, #20]
		break;
 8001cee:	bf00      	nop
	}

	second_left=codes_left/DDS_target_multipiller/DDS_target_frequecny;
 8001cf0:	4b2b      	ldr	r3, [pc, #172]	; (8001da0 <DDS_Calculation+0x248>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	697a      	ldr	r2, [r7, #20]
 8001cf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	f7ff f80c 	bl	8000d18 <__aeabi_ui2f>
 8001d00:	4602      	mov	r2, r0
 8001d02:	4b26      	ldr	r3, [pc, #152]	; (8001d9c <DDS_Calculation+0x244>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	4619      	mov	r1, r3
 8001d08:	4610      	mov	r0, r2
 8001d0a:	f7ff f911 	bl	8000f30 <__aeabi_fdiv>
 8001d0e:	4603      	mov	r3, r0
 8001d10:	603b      	str	r3, [r7, #0]
	eta_second=(uint32_t)second_left % 60;
 8001d12:	6838      	ldr	r0, [r7, #0]
 8001d14:	f7ff fa1e 	bl	8001154 <__aeabi_f2uiz>
 8001d18:	4601      	mov	r1, r0
 8001d1a:	4b27      	ldr	r3, [pc, #156]	; (8001db8 <DDS_Calculation+0x260>)
 8001d1c:	fba3 2301 	umull	r2, r3, r3, r1
 8001d20:	095a      	lsrs	r2, r3, #5
 8001d22:	4613      	mov	r3, r2
 8001d24:	011b      	lsls	r3, r3, #4
 8001d26:	1a9b      	subs	r3, r3, r2
 8001d28:	009b      	lsls	r3, r3, #2
 8001d2a:	1aca      	subs	r2, r1, r3
 8001d2c:	b2d2      	uxtb	r2, r2
 8001d2e:	4b23      	ldr	r3, [pc, #140]	; (8001dbc <DDS_Calculation+0x264>)
 8001d30:	701a      	strb	r2, [r3, #0]
	eta_minute=(uint32_t)(second_left / 60) % 60;
 8001d32:	4923      	ldr	r1, [pc, #140]	; (8001dc0 <DDS_Calculation+0x268>)
 8001d34:	6838      	ldr	r0, [r7, #0]
 8001d36:	f7ff f8fb 	bl	8000f30 <__aeabi_fdiv>
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	4618      	mov	r0, r3
 8001d3e:	f7ff fa09 	bl	8001154 <__aeabi_f2uiz>
 8001d42:	4601      	mov	r1, r0
 8001d44:	4b1c      	ldr	r3, [pc, #112]	; (8001db8 <DDS_Calculation+0x260>)
 8001d46:	fba3 2301 	umull	r2, r3, r3, r1
 8001d4a:	095a      	lsrs	r2, r3, #5
 8001d4c:	4613      	mov	r3, r2
 8001d4e:	011b      	lsls	r3, r3, #4
 8001d50:	1a9b      	subs	r3, r3, r2
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	1aca      	subs	r2, r1, r3
 8001d56:	b2d2      	uxtb	r2, r2
 8001d58:	4b1a      	ldr	r3, [pc, #104]	; (8001dc4 <DDS_Calculation+0x26c>)
 8001d5a:	701a      	strb	r2, [r3, #0]
	eta_hours=(uint32_t) second_left / 3600;
 8001d5c:	6838      	ldr	r0, [r7, #0]
 8001d5e:	f7ff f9f9 	bl	8001154 <__aeabi_f2uiz>
 8001d62:	4603      	mov	r3, r0
 8001d64:	4a18      	ldr	r2, [pc, #96]	; (8001dc8 <DDS_Calculation+0x270>)
 8001d66:	fba2 2303 	umull	r2, r3, r2, r3
 8001d6a:	0adb      	lsrs	r3, r3, #11
 8001d6c:	b2da      	uxtb	r2, r3
 8001d6e:	4b17      	ldr	r3, [pc, #92]	; (8001dcc <DDS_Calculation+0x274>)
 8001d70:	701a      	strb	r2, [r3, #0]
}
 8001d72:	bf00      	nop
 8001d74:	371c      	adds	r7, #28
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd90      	pop	{r4, r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	447a0000 	.word	0x447a0000
 8001d80:	497fffe0 	.word	0x497fffe0
 8001d84:	20000810 	.word	0x20000810
 8001d88:	2000056c 	.word	0x2000056c
 8001d8c:	20000570 	.word	0x20000570
 8001d90:	20000574 	.word	0x20000574
 8001d94:	20000800 	.word	0x20000800
 8001d98:	200007f4 	.word	0x200007f4
 8001d9c:	200007f0 	.word	0x200007f0
 8001da0:	20000014 	.word	0x20000014
 8001da4:	200007ea 	.word	0x200007ea
 8001da8:	2000001c 	.word	0x2000001c
 8001dac:	200007ec 	.word	0x200007ec
 8001db0:	20000814 	.word	0x20000814
 8001db4:	20000815 	.word	0x20000815
 8001db8:	88888889 	.word	0x88888889
 8001dbc:	2000078e 	.word	0x2000078e
 8001dc0:	42700000 	.word	0x42700000
 8001dc4:	2000078d 	.word	0x2000078d
 8001dc8:	91a2b3c5 	.word	0x91a2b3c5
 8001dcc:	2000078c 	.word	0x2000078c

08001dd0 <DDS_Init>:

//==============================================================================================
void DDS_Init(void)
{
 8001dd0:	b590      	push	{r4, r7, lr}
 8001dd2:	b083      	sub	sp, #12
 8001dd4:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];
	DDS_Calculation();
 8001dd6:	f7ff febf 	bl	8001b58 <DDS_Calculation>

	HAL_Delay(100);
 8001dda:	2064      	movs	r0, #100	; 0x64
 8001ddc:	f003 fdba 	bl	8005954 <HAL_Delay>

	//CONTROL REGISTER WRITE SLEEP =1 ,	RESET = 1,	CLR = 1
	DDS_tx_buffer[0]=0xC000; // Control DDS (D15=1, D14=1)
 8001de0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001de4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=0x7 << 11; //  SLEEP = 1 , RESET = 1,	CLR = 1
 8001de6:	88bb      	ldrh	r3, [r7, #4]
 8001de8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8001dec:	b29b      	uxth	r3, r3
 8001dee:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001df0:	2200      	movs	r2, #0
 8001df2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001df6:	4861      	ldr	r0, [pc, #388]	; (8001f7c <DDS_Init+0x1ac>)
 8001df8:	f004 f8fc 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001dfc:	1d39      	adds	r1, r7, #4
 8001dfe:	2305      	movs	r3, #5
 8001e00:	2201      	movs	r2, #1
 8001e02:	485f      	ldr	r0, [pc, #380]	; (8001f80 <DDS_Init+0x1b0>)
 8001e04:	f006 f97a 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e08:	2201      	movs	r2, #1
 8001e0a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e0e:	485b      	ldr	r0, [pc, #364]	; (8001f7c <DDS_Init+0x1ac>)
 8001e10:	f004 f8f0 	bl	8005ff4 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001e14:	2064      	movs	r0, #100	; 0x64
 8001e16:	f003 fd9d 	bl	8005954 <HAL_Delay>
	//DO NOT !!! SET SYNC AND/OR SELSRC TO 1

	//WRITE INITIAL DATA

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001e1a:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001e1e:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001e20:	88bc      	ldrh	r4, [r7, #4]
 8001e22:	4b58      	ldr	r3, [pc, #352]	; (8001f84 <DDS_Init+0x1b4>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	4618      	mov	r0, r3
 8001e28:	f7ff f994 	bl	8001154 <__aeabi_f2uiz>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	0e1b      	lsrs	r3, r3, #24
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	4423      	add	r3, r4
 8001e34:	b29b      	uxth	r3, r3
 8001e36:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e38:	2200      	movs	r2, #0
 8001e3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e3e:	484f      	ldr	r0, [pc, #316]	; (8001f7c <DDS_Init+0x1ac>)
 8001e40:	f004 f8d8 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e44:	1d39      	adds	r1, r7, #4
 8001e46:	2305      	movs	r3, #5
 8001e48:	2201      	movs	r2, #1
 8001e4a:	484d      	ldr	r0, [pc, #308]	; (8001f80 <DDS_Init+0x1b0>)
 8001e4c:	f006 f956 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e50:	2201      	movs	r2, #1
 8001e52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e56:	4849      	ldr	r0, [pc, #292]	; (8001f7c <DDS_Init+0x1ac>)
 8001e58:	f004 f8cc 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001e5c:	2032      	movs	r0, #50	; 0x32
 8001e5e:	f003 fd79 	bl	8005954 <HAL_Delay>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001e62:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001e66:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001e68:	88bc      	ldrh	r4, [r7, #4]
 8001e6a:	4b46      	ldr	r3, [pc, #280]	; (8001f84 <DDS_Init+0x1b4>)
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f7ff f970 	bl	8001154 <__aeabi_f2uiz>
 8001e74:	4603      	mov	r3, r0
 8001e76:	0c1b      	lsrs	r3, r3, #16
 8001e78:	b29b      	uxth	r3, r3
 8001e7a:	b2db      	uxtb	r3, r3
 8001e7c:	b29b      	uxth	r3, r3
 8001e7e:	4423      	add	r3, r4
 8001e80:	b29b      	uxth	r3, r3
 8001e82:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e84:	2200      	movs	r2, #0
 8001e86:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e8a:	483c      	ldr	r0, [pc, #240]	; (8001f7c <DDS_Init+0x1ac>)
 8001e8c:	f004 f8b2 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e90:	1d39      	adds	r1, r7, #4
 8001e92:	2305      	movs	r3, #5
 8001e94:	2201      	movs	r2, #1
 8001e96:	483a      	ldr	r0, [pc, #232]	; (8001f80 <DDS_Init+0x1b0>)
 8001e98:	f006 f930 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e9c:	2201      	movs	r2, #1
 8001e9e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ea2:	4836      	ldr	r0, [pc, #216]	; (8001f7c <DDS_Init+0x1ac>)
 8001ea4:	f004 f8a6 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ea8:	2032      	movs	r0, #50	; 0x32
 8001eaa:	f003 fd53 	bl	8005954 <HAL_Delay>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8001eae:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 8001eb2:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 8001eb4:	88bc      	ldrh	r4, [r7, #4]
 8001eb6:	4b33      	ldr	r3, [pc, #204]	; (8001f84 <DDS_Init+0x1b4>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f7ff f94a 	bl	8001154 <__aeabi_f2uiz>
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	0a1b      	lsrs	r3, r3, #8
 8001ec4:	b29b      	uxth	r3, r3
 8001ec6:	b2db      	uxtb	r3, r3
 8001ec8:	b29b      	uxth	r3, r3
 8001eca:	4423      	add	r3, r4
 8001ecc:	b29b      	uxth	r3, r3
 8001ece:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ed6:	4829      	ldr	r0, [pc, #164]	; (8001f7c <DDS_Init+0x1ac>)
 8001ed8:	f004 f88c 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001edc:	1d39      	adds	r1, r7, #4
 8001ede:	2305      	movs	r3, #5
 8001ee0:	2201      	movs	r2, #1
 8001ee2:	4827      	ldr	r0, [pc, #156]	; (8001f80 <DDS_Init+0x1b0>)
 8001ee4:	f006 f90a 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001ee8:	2201      	movs	r2, #1
 8001eea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001eee:	4823      	ldr	r0, [pc, #140]	; (8001f7c <DDS_Init+0x1ac>)
 8001ef0:	f004 f880 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ef4:	2032      	movs	r0, #50	; 0x32
 8001ef6:	f003 fd2d 	bl	8005954 <HAL_Delay>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 8001efa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001efe:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8001f00:	88bc      	ldrh	r4, [r7, #4]
 8001f02:	4b20      	ldr	r3, [pc, #128]	; (8001f84 <DDS_Init+0x1b4>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4618      	mov	r0, r3
 8001f08:	f7ff f924 	bl	8001154 <__aeabi_f2uiz>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	b29b      	uxth	r3, r3
 8001f10:	b2db      	uxtb	r3, r3
 8001f12:	b29b      	uxth	r3, r3
 8001f14:	4423      	add	r3, r4
 8001f16:	b29b      	uxth	r3, r3
 8001f18:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f20:	4816      	ldr	r0, [pc, #88]	; (8001f7c <DDS_Init+0x1ac>)
 8001f22:	f004 f867 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f26:	1d39      	adds	r1, r7, #4
 8001f28:	2305      	movs	r3, #5
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	4814      	ldr	r0, [pc, #80]	; (8001f80 <DDS_Init+0x1b0>)
 8001f2e:	f006 f8e5 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f32:	2201      	movs	r2, #1
 8001f34:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f38:	4810      	ldr	r0, [pc, #64]	; (8001f7c <DDS_Init+0x1ac>)
 8001f3a:	f004 f85b 	bl	8005ff4 <HAL_GPIO_WritePin>


	HAL_Delay(100);
 8001f3e:	2064      	movs	r0, #100	; 0x64
 8001f40:	f003 fd08 	bl	8005954 <HAL_Delay>

	// CONTROL REGISTER WRITE, 	SLEEP = 0,	RESET = 0, CLR = 0

	// Control DDS (D15=1, D14=1)
	DDS_tx_buffer[0]=0xC000; // Exit DAC from Sleep+Reset mode
 8001f44:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001f48:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f50:	480a      	ldr	r0, [pc, #40]	; (8001f7c <DDS_Init+0x1ac>)
 8001f52:	f004 f84f 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f56:	1d39      	adds	r1, r7, #4
 8001f58:	2305      	movs	r3, #5
 8001f5a:	2201      	movs	r2, #1
 8001f5c:	4808      	ldr	r0, [pc, #32]	; (8001f80 <DDS_Init+0x1b0>)
 8001f5e:	f006 f8cd 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f62:	2201      	movs	r2, #1
 8001f64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f68:	4804      	ldr	r0, [pc, #16]	; (8001f7c <DDS_Init+0x1ac>)
 8001f6a:	f004 f843 	bl	8005ff4 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001f6e:	2064      	movs	r0, #100	; 0x64
 8001f70:	f003 fcf0 	bl	8005954 <HAL_Delay>

}
 8001f74:	bf00      	nop
 8001f76:	370c      	adds	r7, #12
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bd90      	pop	{r4, r7, pc}
 8001f7c:	40020400 	.word	0x40020400
 8001f80:	20000878 	.word	0x20000878
 8001f84:	200007ec 	.word	0x200007ec

08001f88 <DDS_Update>:

//==============================================================================================
void DDS_Update(void)
{
 8001f88:	b590      	push	{r4, r7, lr}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001f8e:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001f92:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001f94:	88bc      	ldrh	r4, [r7, #4]
 8001f96:	4b44      	ldr	r3, [pc, #272]	; (80020a8 <DDS_Update+0x120>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f7ff f8da 	bl	8001154 <__aeabi_f2uiz>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	0e1b      	lsrs	r3, r3, #24
 8001fa4:	b29b      	uxth	r3, r3
 8001fa6:	4423      	add	r3, r4
 8001fa8:	b29b      	uxth	r3, r3
 8001faa:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001fac:	2200      	movs	r2, #0
 8001fae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fb2:	483e      	ldr	r0, [pc, #248]	; (80020ac <DDS_Update+0x124>)
 8001fb4:	f004 f81e 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001fb8:	1d39      	adds	r1, r7, #4
 8001fba:	2305      	movs	r3, #5
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	483c      	ldr	r0, [pc, #240]	; (80020b0 <DDS_Update+0x128>)
 8001fc0:	f006 f89c 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001fc4:	2201      	movs	r2, #1
 8001fc6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fca:	4838      	ldr	r0, [pc, #224]	; (80020ac <DDS_Update+0x124>)
 8001fcc:	f004 f812 	bl	8005ff4 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001fd0:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001fd4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001fd6:	88bc      	ldrh	r4, [r7, #4]
 8001fd8:	4b33      	ldr	r3, [pc, #204]	; (80020a8 <DDS_Update+0x120>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4618      	mov	r0, r3
 8001fde:	f7ff f8b9 	bl	8001154 <__aeabi_f2uiz>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	0c1b      	lsrs	r3, r3, #16
 8001fe6:	b29b      	uxth	r3, r3
 8001fe8:	b2db      	uxtb	r3, r3
 8001fea:	b29b      	uxth	r3, r3
 8001fec:	4423      	add	r3, r4
 8001fee:	b29b      	uxth	r3, r3
 8001ff0:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ff8:	482c      	ldr	r0, [pc, #176]	; (80020ac <DDS_Update+0x124>)
 8001ffa:	f003 fffb 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001ffe:	1d39      	adds	r1, r7, #4
 8002000:	2305      	movs	r3, #5
 8002002:	2201      	movs	r2, #1
 8002004:	482a      	ldr	r0, [pc, #168]	; (80020b0 <DDS_Update+0x128>)
 8002006:	f006 f879 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 800200a:	2201      	movs	r2, #1
 800200c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002010:	4826      	ldr	r0, [pc, #152]	; (80020ac <DDS_Update+0x124>)
 8002012:	f003 ffef 	bl	8005ff4 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8002016:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 800201a:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 800201c:	88bc      	ldrh	r4, [r7, #4]
 800201e:	4b22      	ldr	r3, [pc, #136]	; (80020a8 <DDS_Update+0x120>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	4618      	mov	r0, r3
 8002024:	f7ff f896 	bl	8001154 <__aeabi_f2uiz>
 8002028:	4603      	mov	r3, r0
 800202a:	0a1b      	lsrs	r3, r3, #8
 800202c:	b29b      	uxth	r3, r3
 800202e:	b2db      	uxtb	r3, r3
 8002030:	b29b      	uxth	r3, r3
 8002032:	4423      	add	r3, r4
 8002034:	b29b      	uxth	r3, r3
 8002036:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8002038:	2200      	movs	r2, #0
 800203a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800203e:	481b      	ldr	r0, [pc, #108]	; (80020ac <DDS_Update+0x124>)
 8002040:	f003 ffd8 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002044:	1d39      	adds	r1, r7, #4
 8002046:	2305      	movs	r3, #5
 8002048:	2201      	movs	r2, #1
 800204a:	4819      	ldr	r0, [pc, #100]	; (80020b0 <DDS_Update+0x128>)
 800204c:	f006 f856 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002050:	2201      	movs	r2, #1
 8002052:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002056:	4815      	ldr	r0, [pc, #84]	; (80020ac <DDS_Update+0x124>)
 8002058:	f003 ffcc 	bl	8005ff4 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 800205c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002060:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8002062:	88bc      	ldrh	r4, [r7, #4]
 8002064:	4b10      	ldr	r3, [pc, #64]	; (80020a8 <DDS_Update+0x120>)
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	4618      	mov	r0, r3
 800206a:	f7ff f873 	bl	8001154 <__aeabi_f2uiz>
 800206e:	4603      	mov	r3, r0
 8002070:	b29b      	uxth	r3, r3
 8002072:	b2db      	uxtb	r3, r3
 8002074:	b29b      	uxth	r3, r3
 8002076:	4423      	add	r3, r4
 8002078:	b29b      	uxth	r3, r3
 800207a:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 800207c:	2200      	movs	r2, #0
 800207e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002082:	480a      	ldr	r0, [pc, #40]	; (80020ac <DDS_Update+0x124>)
 8002084:	f003 ffb6 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002088:	1d39      	adds	r1, r7, #4
 800208a:	2305      	movs	r3, #5
 800208c:	2201      	movs	r2, #1
 800208e:	4808      	ldr	r0, [pc, #32]	; (80020b0 <DDS_Update+0x128>)
 8002090:	f006 f834 	bl	80080fc <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002094:	2201      	movs	r2, #1
 8002096:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800209a:	4804      	ldr	r0, [pc, #16]	; (80020ac <DDS_Update+0x124>)
 800209c:	f003 ffaa 	bl	8005ff4 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
	 */
}
 80020a0:	bf00      	nop
 80020a2:	370c      	adds	r7, #12
 80020a4:	46bd      	mov	sp, r7
 80020a6:	bd90      	pop	{r4, r7, pc}
 80020a8:	200007ec 	.word	0x200007ec
 80020ac:	40020400 	.word	0x40020400
 80020b0:	20000878 	.word	0x20000878

080020b4 <LcdSend>:
extern FunctionalState Display_need_wakeup;
extern FunctionalState Display_status;
extern uint8_t Need_update_Display;

void LcdSend(uint8_t data, uint8_t cmd) //Sends data to display controller
{
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b084      	sub	sp, #16
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	460a      	mov	r2, r1
 80020be:	71fb      	strb	r3, [r7, #7]
 80020c0:	4613      	mov	r3, r2
 80020c2:	71bb      	strb	r3, [r7, #6]
	uint8_t sdata = 0;
 80020c4:	2300      	movs	r3, #0
 80020c6:	73fb      	strb	r3, [r7, #15]

	lcd44780_RW_0;
 80020c8:	2200      	movs	r2, #0
 80020ca:	2102      	movs	r1, #2
 80020cc:	4811      	ldr	r0, [pc, #68]	; (8002114 <LcdSend+0x60>)
 80020ce:	f003 ff91 	bl	8005ff4 <HAL_GPIO_WritePin>

	sdata = data;
 80020d2:	79fb      	ldrb	r3, [r7, #7]
 80020d4:	73fb      	strb	r3, [r7, #15]
	if(cmd == lcd_CMD)
 80020d6:	79bb      	ldrb	r3, [r7, #6]
 80020d8:	2b01      	cmp	r3, #1
 80020da:	d105      	bne.n	80020e8 <LcdSend+0x34>
	{
		lcd44780_RS_0;
 80020dc:	2201      	movs	r2, #1
 80020de:	2101      	movs	r1, #1
 80020e0:	480c      	ldr	r0, [pc, #48]	; (8002114 <LcdSend+0x60>)
 80020e2:	f003 ff87 	bl	8005ff4 <HAL_GPIO_WritePin>
 80020e6:	e004      	b.n	80020f2 <LcdSend+0x3e>
	}                             //идентефикатор кода
	else
	{
		lcd44780_RS_1;
 80020e8:	2200      	movs	r2, #0
 80020ea:	2101      	movs	r1, #1
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LcdSend+0x60>)
 80020ee:	f003 ff81 	bl	8005ff4 <HAL_GPIO_WritePin>
	}                             //идентефикатор данных
	send_data(sdata);
 80020f2:	7bfb      	ldrb	r3, [r7, #15]
 80020f4:	4618      	mov	r0, r3
 80020f6:	f000 f983 	bl	8002400 <send_data>

	if(cmd == lcd_CMD)while(check_busy_flag());
 80020fa:	79bb      	ldrb	r3, [r7, #6]
 80020fc:	2b01      	cmp	r3, #1
 80020fe:	d105      	bne.n	800210c <LcdSend+0x58>
 8002100:	bf00      	nop
 8002102:	f000 f9bd 	bl	8002480 <check_busy_flag>
 8002106:	4603      	mov	r3, r0
 8002108:	2b00      	cmp	r3, #0
 800210a:	d1fa      	bne.n	8002102 <LcdSend+0x4e>
}
 800210c:	bf00      	nop
 800210e:	3710      	adds	r7, #16
 8002110:	46bd      	mov	sp, r7
 8002112:	bd80      	pop	{r7, pc}
 8002114:	40020400 	.word	0x40020400

08002118 <LcdUpdate>:

void LcdUpdate(void)            //Copies the LCD cache into the device RAM
{
 8002118:	b580      	push	{r7, lr}
 800211a:	b082      	sub	sp, #8
 800211c:	af00      	add	r7, sp, #0
	int i = 0, j = 0;
 800211e:	2300      	movs	r3, #0
 8002120:	607b      	str	r3, [r7, #4]
 8002122:	2300      	movs	r3, #0
 8002124:	603b      	str	r3, [r7, #0]

	Need_update_Display=0;
 8002126:	4b17      	ldr	r3, [pc, #92]	; (8002184 <LcdUpdate+0x6c>)
 8002128:	2200      	movs	r2, #0
 800212a:	701a      	strb	r2, [r3, #0]
	LcdSend(HD44780_SET_CGRAM_ADD, lcd_CMD);//Позицианируем курсор на начало координат
 800212c:	2101      	movs	r1, #1
 800212e:	2040      	movs	r0, #64	; 0x40
 8002130:	f7ff ffc0 	bl	80020b4 <LcdSend>
	LcdSend(HD44780_SET_DDRAM_ADD, lcd_CMD);
 8002134:	2101      	movs	r1, #1
 8002136:	2080      	movs	r0, #128	; 0x80
 8002138:	f7ff ffbc 	bl	80020b4 <LcdSend>

	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800213c:	2300      	movs	r3, #0
 800213e:	607b      	str	r3, [r7, #4]
 8002140:	e017      	b.n	8002172 <LcdUpdate+0x5a>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002142:	2300      	movs	r3, #0
 8002144:	603b      	str	r3, [r7, #0]
 8002146:	e00e      	b.n	8002166 <LcdUpdate+0x4e>
		{
			LcdSend(LcdCache[((i * LCD_X_RES) + j)], lcd_DATA);       //вычисляем адрес в фрейм буфере, и данные от туда грузим в дисплей.
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2264      	movs	r2, #100	; 0x64
 800214c:	fb03 f202 	mul.w	r2, r3, r2
 8002150:	683b      	ldr	r3, [r7, #0]
 8002152:	4413      	add	r3, r2
 8002154:	4a0c      	ldr	r2, [pc, #48]	; (8002188 <LcdUpdate+0x70>)
 8002156:	5cd3      	ldrb	r3, [r2, r3]
 8002158:	2102      	movs	r1, #2
 800215a:	4618      	mov	r0, r3
 800215c:	f7ff ffaa 	bl	80020b4 <LcdSend>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002160:	683b      	ldr	r3, [r7, #0]
 8002162:	3301      	adds	r3, #1
 8002164:	603b      	str	r3, [r7, #0]
 8002166:	683b      	ldr	r3, [r7, #0]
 8002168:	2b63      	cmp	r3, #99	; 0x63
 800216a:	dded      	ble.n	8002148 <LcdUpdate+0x30>
	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	3301      	adds	r3, #1
 8002170:	607b      	str	r3, [r7, #4]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	2b01      	cmp	r3, #1
 8002176:	dde4      	ble.n	8002142 <LcdUpdate+0x2a>
		}
}
 8002178:	bf00      	nop
 800217a:	bf00      	nop
 800217c:	3708      	adds	r7, #8
 800217e:	46bd      	mov	sp, r7
 8002180:	bd80      	pop	{r7, pc}
 8002182:	bf00      	nop
 8002184:	20000817 	.word	0x20000817
 8002188:	20000594 	.word	0x20000594

0800218c <LcdClear_massive>:
	LcdUpdate();
}


void LcdClear_massive(void)     //Clears the display
{
 800218c:	b480      	push	{r7}
 800218e:	b083      	sub	sp, #12
 8002190:	af00      	add	r7, sp, #0
	int i = 0;
 8002192:	2300      	movs	r3, #0
 8002194:	607b      	str	r3, [r7, #4]

	for (i = 0; i < LCD_CACHSIZE; i++)
 8002196:	2300      	movs	r3, #0
 8002198:	607b      	str	r3, [r7, #4]
 800219a:	e007      	b.n	80021ac <LcdClear_massive+0x20>
		LcdCache[i] = 0;            //забиваем всю память 0
 800219c:	4a08      	ldr	r2, [pc, #32]	; (80021c0 <LcdClear_massive+0x34>)
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	4413      	add	r3, r2
 80021a2:	2200      	movs	r2, #0
 80021a4:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < LCD_CACHSIZE; i++)
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	3301      	adds	r3, #1
 80021aa:	607b      	str	r3, [r7, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	2bc7      	cmp	r3, #199	; 0xc7
 80021b0:	ddf4      	ble.n	800219c <LcdClear_massive+0x10>
}
 80021b2:	bf00      	nop
 80021b4:	bf00      	nop
 80021b6:	370c      	adds	r7, #12
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bc80      	pop	{r7}
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	20000594 	.word	0x20000594

080021c4 <LcdGotoXYFont>:
	}
}


void LcdGotoXYFont(unsigned char x, unsigned char y)    //Sets cursor location to xy location. Range: 1,1 .. 14,6
{
 80021c4:	b480      	push	{r7}
 80021c6:	b083      	sub	sp, #12
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	4603      	mov	r3, r0
 80021cc:	460a      	mov	r2, r1
 80021ce:	71fb      	strb	r3, [r7, #7]
 80021d0:	4613      	mov	r3, r2
 80021d2:	71bb      	strb	r3, [r7, #6]
	LcdCacheIdx = ((int) (y) - 1) * Cntr_X_RES + ((int) (x) - 1) * Cntr_Y_RES;
 80021d4:	79bb      	ldrb	r3, [r7, #6]
 80021d6:	3b01      	subs	r3, #1
 80021d8:	2264      	movs	r2, #100	; 0x64
 80021da:	fb03 f202 	mul.w	r2, r3, r2
 80021de:	79fb      	ldrb	r3, [r7, #7]
 80021e0:	3b01      	subs	r3, #1
 80021e2:	011b      	lsls	r3, r3, #4
 80021e4:	4413      	add	r3, r2
 80021e6:	461a      	mov	r2, r3
 80021e8:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <LcdGotoXYFont+0x34>)
 80021ea:	601a      	str	r2, [r3, #0]
}
 80021ec:	bf00      	nop
 80021ee:	370c      	adds	r7, #12
 80021f0:	46bd      	mov	sp, r7
 80021f2:	bc80      	pop	{r7}
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop
 80021f8:	2000065c 	.word	0x2000065c

080021fc <clean_lcd_buf>:

void clean_lcd_buf(void)        //очистка текстового буфера
{
 80021fc:	b480      	push	{r7}
 80021fe:	b083      	sub	sp, #12
 8002200:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 8002202:	2300      	movs	r3, #0
 8002204:	71fb      	strb	r3, [r7, #7]

	for (i = 0; i < 20; i++)
 8002206:	2300      	movs	r3, #0
 8002208:	71fb      	strb	r3, [r7, #7]
 800220a:	e006      	b.n	800221a <clean_lcd_buf+0x1e>
		lcd_buf[i] = 0;
 800220c:	79fb      	ldrb	r3, [r7, #7]
 800220e:	4a07      	ldr	r2, [pc, #28]	; (800222c <clean_lcd_buf+0x30>)
 8002210:	2100      	movs	r1, #0
 8002212:	54d1      	strb	r1, [r2, r3]
	for (i = 0; i < 20; i++)
 8002214:	79fb      	ldrb	r3, [r7, #7]
 8002216:	3301      	adds	r3, #1
 8002218:	71fb      	strb	r3, [r7, #7]
 800221a:	79fb      	ldrb	r3, [r7, #7]
 800221c:	2b13      	cmp	r3, #19
 800221e:	d9f5      	bls.n	800220c <clean_lcd_buf+0x10>
}
 8002220:	bf00      	nop
 8002222:	bf00      	nop
 8002224:	370c      	adds	r7, #12
 8002226:	46bd      	mov	sp, r7
 8002228:	bc80      	pop	{r7}
 800222a:	4770      	bx	lr
 800222c:	20000580 	.word	0x20000580

08002230 <LcdChr>:

void LcdChr(int ch)             //Displays a character at current cursor location and increment cursor location
{
 8002230:	b480      	push	{r7}
 8002232:	b085      	sub	sp, #20
 8002234:	af00      	add	r7, sp, #0
 8002236:	6078      	str	r0, [r7, #4]
	char i = 0;
 8002238:	2300      	movs	r3, #0
 800223a:	73fb      	strb	r3, [r7, #15]
	if(ch > 0x7f)
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	2b7f      	cmp	r3, #127	; 0x7f
 8002240:	dd1a      	ble.n	8002278 <LcdChr+0x48>
	{
		for (i = 0; i < 5; i++)
 8002242:	2300      	movs	r3, #0
 8002244:	73fb      	strb	r3, [r7, #15]
 8002246:	e013      	b.n	8002270 <LcdChr+0x40>
			LcdCache[LcdCacheIdx++] = lcd_font_table_rus[(ch * 5 + (i) - 0x3C0)];     //выделяем байт-столбик из символа и грузим в массив - 5 раз
 8002248:	687a      	ldr	r2, [r7, #4]
 800224a:	4613      	mov	r3, r2
 800224c:	009b      	lsls	r3, r3, #2
 800224e:	441a      	add	r2, r3
 8002250:	7bfb      	ldrb	r3, [r7, #15]
 8002252:	4413      	add	r3, r2
 8002254:	f5a3 7270 	sub.w	r2, r3, #960	; 0x3c0
 8002258:	4b1b      	ldr	r3, [pc, #108]	; (80022c8 <LcdChr+0x98>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	1c59      	adds	r1, r3, #1
 800225e:	481a      	ldr	r0, [pc, #104]	; (80022c8 <LcdChr+0x98>)
 8002260:	6001      	str	r1, [r0, #0]
 8002262:	491a      	ldr	r1, [pc, #104]	; (80022cc <LcdChr+0x9c>)
 8002264:	5c89      	ldrb	r1, [r1, r2]
 8002266:	4a1a      	ldr	r2, [pc, #104]	; (80022d0 <LcdChr+0xa0>)
 8002268:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 800226a:	7bfb      	ldrb	r3, [r7, #15]
 800226c:	3301      	adds	r3, #1
 800226e:	73fb      	strb	r3, [r7, #15]
 8002270:	7bfb      	ldrb	r3, [r7, #15]
 8002272:	2b04      	cmp	r3, #4
 8002274:	d9e8      	bls.n	8002248 <LcdChr+0x18>
 8002276:	e019      	b.n	80022ac <LcdChr+0x7c>
	} else
	{
		for (i = 0; i < 5; i++)
 8002278:	2300      	movs	r3, #0
 800227a:	73fb      	strb	r3, [r7, #15]
 800227c:	e013      	b.n	80022a6 <LcdChr+0x76>
			LcdCache[LcdCacheIdx++] = lcd_font_table[(ch * 5 + (i) - 0xA0)];  //выделяем байт-столбик из символа и грузим в массив - 5 раз
 800227e:	687a      	ldr	r2, [r7, #4]
 8002280:	4613      	mov	r3, r2
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	441a      	add	r2, r3
 8002286:	7bfb      	ldrb	r3, [r7, #15]
 8002288:	4413      	add	r3, r2
 800228a:	f1a3 02a0 	sub.w	r2, r3, #160	; 0xa0
 800228e:	4b0e      	ldr	r3, [pc, #56]	; (80022c8 <LcdChr+0x98>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	1c59      	adds	r1, r3, #1
 8002294:	480c      	ldr	r0, [pc, #48]	; (80022c8 <LcdChr+0x98>)
 8002296:	6001      	str	r1, [r0, #0]
 8002298:	490e      	ldr	r1, [pc, #56]	; (80022d4 <LcdChr+0xa4>)
 800229a:	5c89      	ldrb	r1, [r1, r2]
 800229c:	4a0c      	ldr	r2, [pc, #48]	; (80022d0 <LcdChr+0xa0>)
 800229e:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 80022a0:	7bfb      	ldrb	r3, [r7, #15]
 80022a2:	3301      	adds	r3, #1
 80022a4:	73fb      	strb	r3, [r7, #15]
 80022a6:	7bfb      	ldrb	r3, [r7, #15]
 80022a8:	2b04      	cmp	r3, #4
 80022aa:	d9e8      	bls.n	800227e <LcdChr+0x4e>
	}
	LcdCache[LcdCacheIdx++] = 0x00;       //добавляем пробел между символами
 80022ac:	4b06      	ldr	r3, [pc, #24]	; (80022c8 <LcdChr+0x98>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	1c5a      	adds	r2, r3, #1
 80022b2:	4905      	ldr	r1, [pc, #20]	; (80022c8 <LcdChr+0x98>)
 80022b4:	600a      	str	r2, [r1, #0]
 80022b6:	4a06      	ldr	r2, [pc, #24]	; (80022d0 <LcdChr+0xa0>)
 80022b8:	2100      	movs	r1, #0
 80022ba:	54d1      	strb	r1, [r2, r3]
}
 80022bc:	bf00      	nop
 80022be:	3714      	adds	r7, #20
 80022c0:	46bd      	mov	sp, r7
 80022c2:	bc80      	pop	{r7}
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	2000065c 	.word	0x2000065c
 80022cc:	08010588 	.word	0x08010588
 80022d0:	20000594 	.word	0x20000594
 80022d4:	080103a8 	.word	0x080103a8

080022d8 <LcdString>:
	}
	LcdCache[LcdCacheIdx++] = 0xFF;       //добавляем пробел между символами
}

void LcdString(unsigned char x, unsigned char y)        //Displays a string at current cursor location
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b084      	sub	sp, #16
 80022dc:	af00      	add	r7, sp, #0
 80022de:	4603      	mov	r3, r0
 80022e0:	460a      	mov	r2, r1
 80022e2:	71fb      	strb	r3, [r7, #7]
 80022e4:	4613      	mov	r3, r2
 80022e6:	71bb      	strb	r3, [r7, #6]
	unsigned char i = 0;
 80022e8:	2300      	movs	r3, #0
 80022ea:	73fb      	strb	r3, [r7, #15]

	if(x > 17 || y > 8)
 80022ec:	79fb      	ldrb	r3, [r7, #7]
 80022ee:	2b11      	cmp	r3, #17
 80022f0:	d81f      	bhi.n	8002332 <LcdString+0x5a>
 80022f2:	79bb      	ldrb	r3, [r7, #6]
 80022f4:	2b08      	cmp	r3, #8
 80022f6:	d81c      	bhi.n	8002332 <LcdString+0x5a>
		return;
	LcdGotoXYFont(x, y);
 80022f8:	79ba      	ldrb	r2, [r7, #6]
 80022fa:	79fb      	ldrb	r3, [r7, #7]
 80022fc:	4611      	mov	r1, r2
 80022fe:	4618      	mov	r0, r3
 8002300:	f7ff ff60 	bl	80021c4 <LcdGotoXYFont>
	for (i = 0; i < 17; i++)
 8002304:	2300      	movs	r3, #0
 8002306:	73fb      	strb	r3, [r7, #15]
 8002308:	e00d      	b.n	8002326 <LcdString+0x4e>
		if(lcd_buf[i])
 800230a:	7bfb      	ldrb	r3, [r7, #15]
 800230c:	4a0b      	ldr	r2, [pc, #44]	; (800233c <LcdString+0x64>)
 800230e:	5cd3      	ldrb	r3, [r2, r3]
 8002310:	2b00      	cmp	r3, #0
 8002312:	d005      	beq.n	8002320 <LcdString+0x48>
			LcdChr(lcd_buf[i]);
 8002314:	7bfb      	ldrb	r3, [r7, #15]
 8002316:	4a09      	ldr	r2, [pc, #36]	; (800233c <LcdString+0x64>)
 8002318:	5cd3      	ldrb	r3, [r2, r3]
 800231a:	4618      	mov	r0, r3
 800231c:	f7ff ff88 	bl	8002230 <LcdChr>
	for (i = 0; i < 17; i++)
 8002320:	7bfb      	ldrb	r3, [r7, #15]
 8002322:	3301      	adds	r3, #1
 8002324:	73fb      	strb	r3, [r7, #15]
 8002326:	7bfb      	ldrb	r3, [r7, #15]
 8002328:	2b10      	cmp	r3, #16
 800232a:	d9ee      	bls.n	800230a <LcdString+0x32>
	clean_lcd_buf();
 800232c:	f7ff ff66 	bl	80021fc <clean_lcd_buf>
 8002330:	e000      	b.n	8002334 <LcdString+0x5c>
		return;
 8002332:	bf00      	nop
}
 8002334:	3710      	adds	r7, #16
 8002336:	46bd      	mov	sp, r7
 8002338:	bd80      	pop	{r7, pc}
 800233a:	bf00      	nop
 800233c:	20000580 	.word	0x20000580

08002340 <pulse_e>:
//////////////////////////////////////////////////////////////////////////////////////



void pulse_e() //импульс на вход Е индикатора
{
 8002340:	b580      	push	{r7, lr}
 8002342:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_SET);//    PIN_ON(PIN_E);
 8002344:	2201      	movs	r2, #1
 8002346:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800234a:	4805      	ldr	r0, [pc, #20]	; (8002360 <pulse_e+0x20>)
 800234c:	f003 fe52 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002350:	2200      	movs	r2, #0
 8002352:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002356:	4802      	ldr	r0, [pc, #8]	; (8002360 <pulse_e+0x20>)
 8002358:	f003 fe4c 	bl	8005ff4 <HAL_GPIO_WritePin>
}
 800235c:	bf00      	nop
 800235e:	bd80      	pop	{r7, pc}
 8002360:	40020400 	.word	0x40020400

08002364 <send_nibble>:

void send_nibble(unsigned char data) //полубайтовый вывод
{
 8002364:	b580      	push	{r7, lr}
 8002366:	b082      	sub	sp, #8
 8002368:	af00      	add	r7, sp, #0
 800236a:	4603      	mov	r3, r0
 800236c:	71fb      	strb	r3, [r7, #7]
	//выводим половину байта на соответствующие контакты
	if(data & 0x01)
 800236e:	79fb      	ldrb	r3, [r7, #7]
 8002370:	f003 0301 	and.w	r3, r3, #1
 8002374:	2b00      	cmp	r3, #0
 8002376:	d005      	beq.n	8002384 <send_nibble+0x20>
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB4);
 8002378:	2201      	movs	r2, #1
 800237a:	2104      	movs	r1, #4
 800237c:	481f      	ldr	r0, [pc, #124]	; (80023fc <send_nibble+0x98>)
 800237e:	f003 fe39 	bl	8005ff4 <HAL_GPIO_WritePin>
 8002382:	e004      	b.n	800238e <send_nibble+0x2a>
	else
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 8002384:	2200      	movs	r2, #0
 8002386:	2104      	movs	r1, #4
 8002388:	481c      	ldr	r0, [pc, #112]	; (80023fc <send_nibble+0x98>)
 800238a:	f003 fe33 	bl	8005ff4 <HAL_GPIO_WritePin>

	if(data & 0x02)
 800238e:	79fb      	ldrb	r3, [r7, #7]
 8002390:	f003 0302 	and.w	r3, r3, #2
 8002394:	2b00      	cmp	r3, #0
 8002396:	d005      	beq.n	80023a4 <send_nibble+0x40>
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB5);
 8002398:	2201      	movs	r2, #1
 800239a:	2108      	movs	r1, #8
 800239c:	4817      	ldr	r0, [pc, #92]	; (80023fc <send_nibble+0x98>)
 800239e:	f003 fe29 	bl	8005ff4 <HAL_GPIO_WritePin>
 80023a2:	e004      	b.n	80023ae <send_nibble+0x4a>
	else
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80023a4:	2200      	movs	r2, #0
 80023a6:	2108      	movs	r1, #8
 80023a8:	4814      	ldr	r0, [pc, #80]	; (80023fc <send_nibble+0x98>)
 80023aa:	f003 fe23 	bl	8005ff4 <HAL_GPIO_WritePin>

	if(data & 0x04)
 80023ae:	79fb      	ldrb	r3, [r7, #7]
 80023b0:	f003 0304 	and.w	r3, r3, #4
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d005      	beq.n	80023c4 <send_nibble+0x60>
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB6);
 80023b8:	2201      	movs	r2, #1
 80023ba:	2110      	movs	r1, #16
 80023bc:	480f      	ldr	r0, [pc, #60]	; (80023fc <send_nibble+0x98>)
 80023be:	f003 fe19 	bl	8005ff4 <HAL_GPIO_WritePin>
 80023c2:	e004      	b.n	80023ce <send_nibble+0x6a>
	else
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80023c4:	2200      	movs	r2, #0
 80023c6:	2110      	movs	r1, #16
 80023c8:	480c      	ldr	r0, [pc, #48]	; (80023fc <send_nibble+0x98>)
 80023ca:	f003 fe13 	bl	8005ff4 <HAL_GPIO_WritePin>

	if(data & 0x08)
 80023ce:	79fb      	ldrb	r3, [r7, #7]
 80023d0:	f003 0308 	and.w	r3, r3, #8
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d005      	beq.n	80023e4 <send_nibble+0x80>
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB7);
 80023d8:	2201      	movs	r2, #1
 80023da:	2120      	movs	r1, #32
 80023dc:	4807      	ldr	r0, [pc, #28]	; (80023fc <send_nibble+0x98>)
 80023de:	f003 fe09 	bl	8005ff4 <HAL_GPIO_WritePin>
 80023e2:	e004      	b.n	80023ee <send_nibble+0x8a>
	else
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80023e4:	2200      	movs	r2, #0
 80023e6:	2120      	movs	r1, #32
 80023e8:	4804      	ldr	r0, [pc, #16]	; (80023fc <send_nibble+0x98>)
 80023ea:	f003 fe03 	bl	8005ff4 <HAL_GPIO_WritePin>

	pulse_e(); //чтобы индикатор проглотил данные
 80023ee:	f7ff ffa7 	bl	8002340 <pulse_e>
}
 80023f2:	bf00      	nop
 80023f4:	3708      	adds	r7, #8
 80023f6:	46bd      	mov	sp, r7
 80023f8:	bd80      	pop	{r7, pc}
 80023fa:	bf00      	nop
 80023fc:	40020400 	.word	0x40020400

08002400 <send_data>:

void send_data(unsigned char data) //вывод 2хполбайта на индикатор
{
 8002400:	b580      	push	{r7, lr}
 8002402:	b082      	sub	sp, #8
 8002404:	af00      	add	r7, sp, #0
 8002406:	4603      	mov	r3, r0
 8002408:	71fb      	strb	r3, [r7, #7]
	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800240a:	79fb      	ldrb	r3, [r7, #7]
 800240c:	091b      	lsrs	r3, r3, #4
 800240e:	b2db      	uxtb	r3, r3
 8002410:	4618      	mov	r0, r3
 8002412:	f7ff ffa7 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002416:	79fb      	ldrb	r3, [r7, #7]
 8002418:	f003 030f 	and.w	r3, r3, #15
 800241c:	b2db      	uxtb	r3, r3
 800241e:	4618      	mov	r0, r3
 8002420:	f7ff ffa0 	bl	8002364 <send_nibble>
}
 8002424:	bf00      	nop
 8002426:	3708      	adds	r7, #8
 8002428:	46bd      	mov	sp, r7
 800242a:	bd80      	pop	{r7, pc}

0800242c <send_command>:

void send_command(unsigned char data) //вывод 2хполбайта на индикатор
{
 800242c:	b580      	push	{r7, lr}
 800242e:	b082      	sub	sp, #8
 8002430:	af00      	add	r7, sp, #0
 8002432:	4603      	mov	r3, r0
 8002434:	71fb      	strb	r3, [r7, #7]
	lcd44780_RS_0;
 8002436:	2201      	movs	r2, #1
 8002438:	2101      	movs	r1, #1
 800243a:	4810      	ldr	r0, [pc, #64]	; (800247c <send_command+0x50>)
 800243c:	f003 fdda 	bl	8005ff4 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 8002440:	2200      	movs	r2, #0
 8002442:	2102      	movs	r1, #2
 8002444:	480d      	ldr	r0, [pc, #52]	; (800247c <send_command+0x50>)
 8002446:	f003 fdd5 	bl	8005ff4 <HAL_GPIO_WritePin>

	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800244a:	79fb      	ldrb	r3, [r7, #7]
 800244c:	091b      	lsrs	r3, r3, #4
 800244e:	b2db      	uxtb	r3, r3
 8002450:	4618      	mov	r0, r3
 8002452:	f7ff ff87 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002456:	79fb      	ldrb	r3, [r7, #7]
 8002458:	f003 030f 	and.w	r3, r3, #15
 800245c:	b2db      	uxtb	r3, r3
 800245e:	4618      	mov	r0, r3
 8002460:	f7ff ff80 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 8002464:	bf00      	nop
 8002466:	f000 f80b 	bl	8002480 <check_busy_flag>
 800246a:	4603      	mov	r3, r0
 800246c:	2b00      	cmp	r3, #0
 800246e:	d1fa      	bne.n	8002466 <send_command+0x3a>
}
 8002470:	bf00      	nop
 8002472:	bf00      	nop
 8002474:	3708      	adds	r7, #8
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
 800247a:	bf00      	nop
 800247c:	40020400 	.word	0x40020400

08002480 <check_busy_flag>:

int check_busy_flag(void)
{
 8002480:	b580      	push	{r7, lr}
 8002482:	b086      	sub	sp, #24
 8002484:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002486:	463b      	mov	r3, r7
 8002488:	2200      	movs	r2, #0
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	605a      	str	r2, [r3, #4]
 800248e:	609a      	str	r2, [r3, #8]
 8002490:	60da      	str	r2, [r3, #12]
 8002492:	611a      	str	r2, [r3, #16]
	GPIO_PinState status;

	lcd44780_RW_1; // Read
 8002494:	2201      	movs	r2, #1
 8002496:	2102      	movs	r1, #2
 8002498:	4822      	ldr	r0, [pc, #136]	; (8002524 <check_busy_flag+0xa4>)
 800249a:	f003 fdab 	bl	8005ff4 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 800249e:	2320      	movs	r3, #32
 80024a0:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80024a2:	2300      	movs	r3, #0
 80024a4:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a6:	2300      	movs	r3, #0
 80024a8:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024aa:	2302      	movs	r3, #2
 80024ac:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ae:	463b      	mov	r3, r7
 80024b0:	4619      	mov	r1, r3
 80024b2:	481c      	ldr	r0, [pc, #112]	; (8002524 <check_busy_flag+0xa4>)
 80024b4:	f003 fcae 	bl	8005e14 <HAL_GPIO_Init>

	lcd44780_E_1;
 80024b8:	2201      	movs	r2, #1
 80024ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024be:	4819      	ldr	r0, [pc, #100]	; (8002524 <check_busy_flag+0xa4>)
 80024c0:	f003 fd98 	bl	8005ff4 <HAL_GPIO_WritePin>
	status=HAL_GPIO_ReadPin(Display_DB7_GPIO_Port, Display_DB7_Pin);
 80024c4:	2120      	movs	r1, #32
 80024c6:	4817      	ldr	r0, [pc, #92]	; (8002524 <check_busy_flag+0xa4>)
 80024c8:	f003 fd8e 	bl	8005fe8 <HAL_GPIO_ReadPin>
 80024cc:	4603      	mov	r3, r0
 80024ce:	75fb      	strb	r3, [r7, #23]
	lcd44780_E_0;
 80024d0:	2200      	movs	r2, #0
 80024d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024d6:	4813      	ldr	r0, [pc, #76]	; (8002524 <check_busy_flag+0xa4>)
 80024d8:	f003 fd8c 	bl	8005ff4 <HAL_GPIO_WritePin>
	lcd44780_E_1;
 80024dc:	2201      	movs	r2, #1
 80024de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024e2:	4810      	ldr	r0, [pc, #64]	; (8002524 <check_busy_flag+0xa4>)
 80024e4:	f003 fd86 	bl	8005ff4 <HAL_GPIO_WritePin>
	lcd44780_E_0;
 80024e8:	2200      	movs	r2, #0
 80024ea:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024ee:	480d      	ldr	r0, [pc, #52]	; (8002524 <check_busy_flag+0xa4>)
 80024f0:	f003 fd80 	bl	8005ff4 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 80024f4:	2320      	movs	r3, #32
 80024f6:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80024f8:	2311      	movs	r3, #17
 80024fa:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024fc:	2300      	movs	r3, #0
 80024fe:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002500:	2302      	movs	r3, #2
 8002502:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002504:	463b      	mov	r3, r7
 8002506:	4619      	mov	r1, r3
 8002508:	4806      	ldr	r0, [pc, #24]	; (8002524 <check_busy_flag+0xa4>)
 800250a:	f003 fc83 	bl	8005e14 <HAL_GPIO_Init>
	lcd44780_RW_0;
 800250e:	2200      	movs	r2, #0
 8002510:	2102      	movs	r1, #2
 8002512:	4804      	ldr	r0, [pc, #16]	; (8002524 <check_busy_flag+0xa4>)
 8002514:	f003 fd6e 	bl	8005ff4 <HAL_GPIO_WritePin>
	return status;
 8002518:	7dfb      	ldrb	r3, [r7, #23]
}
 800251a:	4618      	mov	r0, r3
 800251c:	3718      	adds	r7, #24
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}
 8002522:	bf00      	nop
 8002524:	40020400 	.word	0x40020400

08002528 <Poweroff_LCD>:

void Poweroff_LCD() //выключение ЖК
{
 8002528:	b580      	push	{r7, lr}
 800252a:	af00      	add	r7, sp, #0
	Display_status=0;
 800252c:	4b06      	ldr	r3, [pc, #24]	; (8002548 <Poweroff_LCD+0x20>)
 800252e:	2200      	movs	r2, #0
 8002530:	701a      	strb	r2, [r3, #0]

	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002532:	2001      	movs	r0, #1
 8002534:	f7ff ff7a 	bl	800242c <send_command>
	send_command(0x0A); // Display off
 8002538:	200a      	movs	r0, #10
 800253a:	f7ff ff77 	bl	800242c <send_command>
	send_command(0x1B); // Internal DCDC off
 800253e:	201b      	movs	r0, #27
 8002540:	f7ff ff74 	bl	800242c <send_command>
}
 8002544:	bf00      	nop
 8002546:	bd80      	pop	{r7, pc}
 8002548:	20000816 	.word	0x20000816

0800254c <Poweron_LCD>:

void Poweron_LCD() //включение ЖК
{
 800254c:	b580      	push	{r7, lr}
 800254e:	af00      	add	r7, sp, #0
	Display_status=1;
 8002550:	4b06      	ldr	r3, [pc, #24]	; (800256c <Poweron_LCD+0x20>)
 8002552:	2201      	movs	r2, #1
 8002554:	701a      	strb	r2, [r3, #0]

	send_command(0x0E); // Display on
 8002556:	200e      	movs	r0, #14
 8002558:	f7ff ff68 	bl	800242c <send_command>
	send_command(0x1F); // Internal DCDC on
 800255c:	201f      	movs	r0, #31
 800255e:	f7ff ff65 	bl	800242c <send_command>
	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002562:	2001      	movs	r0, #1
 8002564:	f7ff ff62 	bl	800242c <send_command>
}
 8002568:	bf00      	nop
 800256a:	bd80      	pop	{r7, pc}
 800256c:	20000816 	.word	0x20000816

08002570 <init_LCD>:


void init_LCD() //инициализация ЖК
{
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	Display_status=1;
 8002574:	4b2f      	ldr	r3, [pc, #188]	; (8002634 <init_LCD+0xc4>)
 8002576:	2201      	movs	r2, #1
 8002578:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(Display_Power_GPIO_Port, Display_Power_Pin, GPIO_PIN_RESET); // подаем питание на дисплей
 800257a:	2200      	movs	r2, #0
 800257c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002580:	482d      	ldr	r0, [pc, #180]	; (8002638 <init_LCD+0xc8>)
 8002582:	f003 fd37 	bl	8005ff4 <HAL_GPIO_WritePin>
	//Выводы в 0
	HAL_GPIO_WritePin(Display_RS_GPIO_Port, Display_RS_Pin, GPIO_PIN_SET);//  PIN_OFF(PIN_RS); !!!
 8002586:	2201      	movs	r2, #1
 8002588:	2101      	movs	r1, #1
 800258a:	482b      	ldr	r0, [pc, #172]	; (8002638 <init_LCD+0xc8>)
 800258c:	f003 fd32 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002590:	2200      	movs	r2, #0
 8002592:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002596:	4828      	ldr	r0, [pc, #160]	; (8002638 <init_LCD+0xc8>)
 8002598:	f003 fd2c 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 800259c:	2200      	movs	r2, #0
 800259e:	2104      	movs	r1, #4
 80025a0:	4825      	ldr	r0, [pc, #148]	; (8002638 <init_LCD+0xc8>)
 80025a2:	f003 fd27 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80025a6:	2200      	movs	r2, #0
 80025a8:	2108      	movs	r1, #8
 80025aa:	4823      	ldr	r0, [pc, #140]	; (8002638 <init_LCD+0xc8>)
 80025ac:	f003 fd22 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80025b0:	2200      	movs	r2, #0
 80025b2:	2110      	movs	r1, #16
 80025b4:	4820      	ldr	r0, [pc, #128]	; (8002638 <init_LCD+0xc8>)
 80025b6:	f003 fd1d 	bl	8005ff4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80025ba:	2200      	movs	r2, #0
 80025bc:	2120      	movs	r1, #32
 80025be:	481e      	ldr	r0, [pc, #120]	; (8002638 <init_LCD+0xc8>)
 80025c0:	f003 fd18 	bl	8005ff4 <HAL_GPIO_WritePin>

	//Ждем включения ЖКИ
	HAL_Delay(500);
 80025c4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80025c8:	f003 f9c4 	bl	8005954 <HAL_Delay>
	lcd44780_RS_0;
 80025cc:	2201      	movs	r2, #1
 80025ce:	2101      	movs	r1, #1
 80025d0:	4819      	ldr	r0, [pc, #100]	; (8002638 <init_LCD+0xc8>)
 80025d2:	f003 fd0f 	bl	8005ff4 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 80025d6:	2200      	movs	r2, #0
 80025d8:	2102      	movs	r1, #2
 80025da:	4817      	ldr	r0, [pc, #92]	; (8002638 <init_LCD+0xc8>)
 80025dc:	f003 fd0a 	bl	8005ff4 <HAL_GPIO_WritePin>
	send_nibble(0x02);
 80025e0:	2002      	movs	r0, #2
 80025e2:	f7ff febf 	bl	8002364 <send_nibble>
	send_nibble(0x02);
 80025e6:	2002      	movs	r0, #2
 80025e8:	f7ff febc 	bl	8002364 <send_nibble>
	send_nibble(0x08);// N=1 F=0
 80025ec:	2008      	movs	r0, #8
 80025ee:	f7ff feb9 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 80025f2:	bf00      	nop
 80025f4:	f7ff ff44 	bl	8002480 <check_busy_flag>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d1fa      	bne.n	80025f4 <init_LCD+0x84>

	send_command(0x0E);// D=1 C=1 B=0
 80025fe:	200e      	movs	r0, #14
 8002600:	f7ff ff14 	bl	800242c <send_command>
	send_command(0x01);
 8002604:	2001      	movs	r0, #1
 8002606:	f7ff ff11 	bl	800242c <send_command>
	send_command(0x06); // I/D=1  S/H=0
 800260a:	2006      	movs	r0, #6
 800260c:	f7ff ff0e 	bl	800242c <send_command>
	send_command(0x2A);// DL=0 N=1 F=0 FT1=1 FT0=0
 8002610:	202a      	movs	r0, #42	; 0x2a
 8002612:	f7ff ff0b 	bl	800242c <send_command>
	send_command(0x1F); //переключение в графику
 8002616:	201f      	movs	r0, #31
 8002618:	f7ff ff08 	bl	800242c <send_command>
	send_command(0x01); //очистили от мусора ОЗУ (т.с. что clear())
 800261c:	2001      	movs	r0, #1
 800261e:	f7ff ff05 	bl	800242c <send_command>

	lcd44780_RS_1;
 8002622:	2200      	movs	r2, #0
 8002624:	2101      	movs	r1, #1
 8002626:	4804      	ldr	r0, [pc, #16]	; (8002638 <init_LCD+0xc8>)
 8002628:	f003 fce4 	bl	8005ff4 <HAL_GPIO_WritePin>

	LcdClear_massive();
 800262c:	f7ff fdae 	bl	800218c <LcdClear_massive>

}
 8002630:	bf00      	nop
 8002632:	bd80      	pop	{r7, pc}
 8002634:	20000816 	.word	0x20000816
 8002638:	40020400 	.word	0x40020400

0800263c <LcdBarLine>:
	while(check_busy_flag());

}

void LcdBarLine(uint32_t fill)    // рисуем прогресс-бар в второй строке
{
 800263c:	b5b0      	push	{r4, r5, r7, lr}
 800263e:	b086      	sub	sp, #24
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
	uint16_t i, full_fill_position;
	float y;

	if(fill>0xFFFFF)return;
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800264a:	f080 808f 	bcs.w	800276c <LcdBarLine+0x130>

	// поиск свободного места в массиве кеша дисплея
	//	for (i = LCD_CACHSIZE-1; i > LCD_X_RES; i--) // поиск свободного места в массиве кеша дисплея, в указанной строке
	//		if(LcdCache[i]==0x00)
	//			found_free_position=i;
	y=LCD_X_RES;
 800264e:	4b49      	ldr	r3, [pc, #292]	; (8002774 <LcdBarLine+0x138>)
 8002650:	613b      	str	r3, [r7, #16]
	y*=8; //сколько всего диступно места
 8002652:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002656:	6938      	ldr	r0, [r7, #16]
 8002658:	f7fe fbb6 	bl	8000dc8 <__aeabi_fmul>
 800265c:	4603      	mov	r3, r0
 800265e:	613b      	str	r3, [r7, #16]
	y/=(float)0xFFFFF;
 8002660:	4945      	ldr	r1, [pc, #276]	; (8002778 <LcdBarLine+0x13c>)
 8002662:	6938      	ldr	r0, [r7, #16]
 8002664:	f7fe fc64 	bl	8000f30 <__aeabi_fdiv>
 8002668:	4603      	mov	r3, r0
 800266a:	613b      	str	r3, [r7, #16]
	y*=(float)fill;// получаем коэфицент заполнения прогрессбара
 800266c:	6878      	ldr	r0, [r7, #4]
 800266e:	f7fe fb53 	bl	8000d18 <__aeabi_ui2f>
 8002672:	4603      	mov	r3, r0
 8002674:	4619      	mov	r1, r3
 8002676:	6938      	ldr	r0, [r7, #16]
 8002678:	f7fe fba6 	bl	8000dc8 <__aeabi_fmul>
 800267c:	4603      	mov	r3, r0
 800267e:	613b      	str	r3, [r7, #16]
	full_fill_position=floor(y/8);
 8002680:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002684:	6938      	ldr	r0, [r7, #16]
 8002686:	f7fe fc53 	bl	8000f30 <__aeabi_fdiv>
 800268a:	4603      	mov	r3, r0
 800268c:	4618      	mov	r0, r3
 800268e:	f7fd feed 	bl	800046c <__aeabi_f2d>
 8002692:	4602      	mov	r2, r0
 8002694:	460b      	mov	r3, r1
 8002696:	4610      	mov	r0, r2
 8002698:	4619      	mov	r1, r3
 800269a:	f008 fb19 	bl	800acd0 <floor>
 800269e:	4602      	mov	r2, r0
 80026a0:	460b      	mov	r3, r1
 80026a2:	4610      	mov	r0, r2
 80026a4:	4619      	mov	r1, r3
 80026a6:	f7fe fa11 	bl	8000acc <__aeabi_d2uiz>
 80026aa:	4603      	mov	r3, r0
 80026ac:	81fb      	strh	r3, [r7, #14]
	//need_to_be_filled=(LCD_CACHSIZE-1-found_free_position)*8 - ;
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 80026ae:	2364      	movs	r3, #100	; 0x64
 80026b0:	82fb      	strh	r3, [r7, #22]
 80026b2:	e057      	b.n	8002764 <LcdBarLine+0x128>
		if(y!=0)
 80026b4:	f04f 0100 	mov.w	r1, #0
 80026b8:	6938      	ldr	r0, [r7, #16]
 80026ba:	f7fe fd19 	bl	80010f0 <__aeabi_fcmpeq>
 80026be:	4603      	mov	r3, r0
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d14c      	bne.n	800275e <LcdBarLine+0x122>
		{
			if(full_fill_position>(i-LCD_X_RES))
 80026c4:	8afb      	ldrh	r3, [r7, #22]
 80026c6:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80026ca:	89fb      	ldrh	r3, [r7, #14]
 80026cc:	429a      	cmp	r2, r3
 80026ce:	dc08      	bgt.n	80026e2 <LcdBarLine+0xa6>
			{
				LcdCache[i]=LcdCache[i]^0xFF;
 80026d0:	8afb      	ldrh	r3, [r7, #22]
 80026d2:	4a2a      	ldr	r2, [pc, #168]	; (800277c <LcdBarLine+0x140>)
 80026d4:	5cd2      	ldrb	r2, [r2, r3]
 80026d6:	8afb      	ldrh	r3, [r7, #22]
 80026d8:	43d2      	mvns	r2, r2
 80026da:	b2d1      	uxtb	r1, r2
 80026dc:	4a27      	ldr	r2, [pc, #156]	; (800277c <LcdBarLine+0x140>)
 80026de:	54d1      	strb	r1, [r2, r3]
 80026e0:	e03d      	b.n	800275e <LcdBarLine+0x122>
			} else
			{
				y-=floor(y/8)*8;
 80026e2:	6938      	ldr	r0, [r7, #16]
 80026e4:	f7fd fec2 	bl	800046c <__aeabi_f2d>
 80026e8:	4604      	mov	r4, r0
 80026ea:	460d      	mov	r5, r1
 80026ec:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 80026f0:	6938      	ldr	r0, [r7, #16]
 80026f2:	f7fe fc1d 	bl	8000f30 <__aeabi_fdiv>
 80026f6:	4603      	mov	r3, r0
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7fd feb7 	bl	800046c <__aeabi_f2d>
 80026fe:	4602      	mov	r2, r0
 8002700:	460b      	mov	r3, r1
 8002702:	4610      	mov	r0, r2
 8002704:	4619      	mov	r1, r3
 8002706:	f008 fae3 	bl	800acd0 <floor>
 800270a:	f04f 0200 	mov.w	r2, #0
 800270e:	4b1c      	ldr	r3, [pc, #112]	; (8002780 <LcdBarLine+0x144>)
 8002710:	f7fd ff04 	bl	800051c <__aeabi_dmul>
 8002714:	4602      	mov	r2, r0
 8002716:	460b      	mov	r3, r1
 8002718:	4620      	mov	r0, r4
 800271a:	4629      	mov	r1, r5
 800271c:	f7fd fd46 	bl	80001ac <__aeabi_dsub>
 8002720:	4602      	mov	r2, r0
 8002722:	460b      	mov	r3, r1
 8002724:	4610      	mov	r0, r2
 8002726:	4619      	mov	r1, r3
 8002728:	f7fe f9f0 	bl	8000b0c <__aeabi_d2f>
 800272c:	4603      	mov	r3, r0
 800272e:	613b      	str	r3, [r7, #16]
				LcdCache[i]=LcdCache[i]^((1<<(uint16_t)y)-1);
 8002730:	8afb      	ldrh	r3, [r7, #22]
 8002732:	4a12      	ldr	r2, [pc, #72]	; (800277c <LcdBarLine+0x140>)
 8002734:	5cd3      	ldrb	r3, [r2, r3]
 8002736:	b25c      	sxtb	r4, r3
 8002738:	6938      	ldr	r0, [r7, #16]
 800273a:	f7fe fd0b 	bl	8001154 <__aeabi_f2uiz>
 800273e:	4603      	mov	r3, r0
 8002740:	b29b      	uxth	r3, r3
 8002742:	461a      	mov	r2, r3
 8002744:	2301      	movs	r3, #1
 8002746:	4093      	lsls	r3, r2
 8002748:	b2db      	uxtb	r3, r3
 800274a:	3b01      	subs	r3, #1
 800274c:	b2db      	uxtb	r3, r3
 800274e:	b25b      	sxtb	r3, r3
 8002750:	4063      	eors	r3, r4
 8002752:	b25a      	sxtb	r2, r3
 8002754:	8afb      	ldrh	r3, [r7, #22]
 8002756:	b2d1      	uxtb	r1, r2
 8002758:	4a08      	ldr	r2, [pc, #32]	; (800277c <LcdBarLine+0x140>)
 800275a:	54d1      	strb	r1, [r2, r3]
				break;
 800275c:	e007      	b.n	800276e <LcdBarLine+0x132>
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 800275e:	8afb      	ldrh	r3, [r7, #22]
 8002760:	3301      	adds	r3, #1
 8002762:	82fb      	strh	r3, [r7, #22]
 8002764:	8afb      	ldrh	r3, [r7, #22]
 8002766:	2bc7      	cmp	r3, #199	; 0xc7
 8002768:	d9a4      	bls.n	80026b4 <LcdBarLine+0x78>
 800276a:	e000      	b.n	800276e <LcdBarLine+0x132>
	if(fill>0xFFFFF)return;
 800276c:	bf00      	nop
			}
		}
	}

}
 800276e:	3718      	adds	r7, #24
 8002770:	46bd      	mov	sp, r7
 8002772:	bdb0      	pop	{r4, r5, r7, pc}
 8002774:	42c80000 	.word	0x42c80000
 8002778:	497ffff0 	.word	0x497ffff0
 800277c:	20000594 	.word	0x20000594
 8002780:	40200000 	.word	0x40200000

08002784 <output_state>:
//==============================================================================================


//==============================================================================================
void output_state(uint8_t type)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	b084      	sub	sp, #16
 8002788:	af00      	add	r7, sp, #0
 800278a:	4603      	mov	r3, r0
 800278c:	71fb      	strb	r3, [r7, #7]
	int relay_settling_time_ms=50;
 800278e:	2332      	movs	r3, #50	; 0x32
 8002790:	60fb      	str	r3, [r7, #12]
	switch(type)
 8002792:	79fb      	ldrb	r3, [r7, #7]
 8002794:	2b04      	cmp	r3, #4
 8002796:	f200 80f2 	bhi.w	800297e <output_state+0x1fa>
 800279a:	a201      	add	r2, pc, #4	; (adr r2, 80027a0 <output_state+0x1c>)
 800279c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027a0:	080027b5 	.word	0x080027b5
 80027a4:	080027ed 	.word	0x080027ed
 80027a8:	0800283d 	.word	0x0800283d
 80027ac:	0800289d 	.word	0x0800289d
 80027b0:	080028fd 	.word	0x080028fd
	{
	//----------------------------------------------------------//
	case Output_off_STATE:
		Relay_control(0,0); // set all coils off
 80027b4:	2100      	movs	r1, #0
 80027b6:	2000      	movs	r0, #0
 80027b8:	f7fe ff48 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027bc:	2100      	movs	r1, #0
 80027be:	2001      	movs	r0, #1
 80027c0:	f7fe ff44 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027c4:	2100      	movs	r1, #0
 80027c6:	2002      	movs	r0, #2
 80027c8:	f7fe ff40 	bl	800164c <Relay_control>
		Relay_control(3,0); // Output Enable
 80027cc:	2100      	movs	r1, #0
 80027ce:	2003      	movs	r0, #3
 80027d0:	f7fe ff3c 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	4618      	mov	r0, r3
 80027d8:	f003 f8bc 	bl	8005954 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80027dc:	2100      	movs	r1, #0
 80027de:	2000      	movs	r0, #0
 80027e0:	f7fe ff34 	bl	800164c <Relay_control>
		Current_output_status=Output_off_STATE;
 80027e4:	4b68      	ldr	r3, [pc, #416]	; (8002988 <output_state+0x204>)
 80027e6:	2200      	movs	r2, #0
 80027e8:	701a      	strb	r2, [r3, #0]
		break;
 80027ea:	e0c8      	b.n	800297e <output_state+0x1fa>

	case Output_x1_STATE:
		Relay_control(0,0); // set all coils off
 80027ec:	2100      	movs	r1, #0
 80027ee:	2000      	movs	r0, #0
 80027f0:	f7fe ff2c 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027f4:	2100      	movs	r1, #0
 80027f6:	2001      	movs	r0, #1
 80027f8:	f7fe ff28 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027fc:	2100      	movs	r1, #0
 80027fe:	2002      	movs	r0, #2
 8002800:	f7fe ff24 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002804:	2101      	movs	r1, #1
 8002806:	2003      	movs	r0, #3
 8002808:	f7fe ff20 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4618      	mov	r0, r3
 8002810:	f003 f8a0 	bl	8005954 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002814:	2100      	movs	r1, #0
 8002816:	2000      	movs	r0, #0
 8002818:	f7fe ff18 	bl	800164c <Relay_control>
		Current_output_status=Output_x1_STATE;
 800281c:	4b5a      	ldr	r3, [pc, #360]	; (8002988 <output_state+0x204>)
 800281e:	2201      	movs	r2, #1
 8002820:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8002822:	4b5a      	ldr	r3, [pc, #360]	; (800298c <output_state+0x208>)
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	4a5a      	ldr	r2, [pc, #360]	; (8002990 <output_state+0x20c>)
 8002828:	6812      	ldr	r2, [r2, #0]
 800282a:	4611      	mov	r1, r2
 800282c:	4618      	mov	r0, r3
 800282e:	f7fe f9c1 	bl	8000bb4 <__aeabi_fsub>
 8002832:	4603      	mov	r3, r0
 8002834:	461a      	mov	r2, r3
 8002836:	4b57      	ldr	r3, [pc, #348]	; (8002994 <output_state+0x210>)
 8002838:	601a      	str	r2, [r3, #0]
		break;
 800283a:	e0a0      	b.n	800297e <output_state+0x1fa>

	case Output_x2_STATE:
		Relay_control(0,0); // set all coils off
 800283c:	2100      	movs	r1, #0
 800283e:	2000      	movs	r0, #0
 8002840:	f7fe ff04 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 8002844:	2101      	movs	r1, #1
 8002846:	2001      	movs	r0, #1
 8002848:	f7fe ff00 	bl	800164c <Relay_control>
		Relay_control(2,1); // x2/x4 mode
 800284c:	2101      	movs	r1, #1
 800284e:	2002      	movs	r0, #2
 8002850:	f7fe fefc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002854:	2101      	movs	r1, #1
 8002856:	2003      	movs	r0, #3
 8002858:	f7fe fef8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	4618      	mov	r0, r3
 8002860:	f003 f878 	bl	8005954 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002864:	2100      	movs	r1, #0
 8002866:	2000      	movs	r0, #0
 8002868:	f7fe fef0 	bl	800164c <Relay_control>
		Current_output_status=Output_x2_STATE;
 800286c:	4b46      	ldr	r3, [pc, #280]	; (8002988 <output_state+0x204>)
 800286e:	2202      	movs	r2, #2
 8002870:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x2_coeff;
 8002872:	4b46      	ldr	r3, [pc, #280]	; (800298c <output_state+0x208>)
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4a46      	ldr	r2, [pc, #280]	; (8002990 <output_state+0x20c>)
 8002878:	6812      	ldr	r2, [r2, #0]
 800287a:	4611      	mov	r1, r2
 800287c:	4618      	mov	r0, r3
 800287e:	f7fe f999 	bl	8000bb4 <__aeabi_fsub>
 8002882:	4603      	mov	r3, r0
 8002884:	461a      	mov	r2, r3
 8002886:	4b44      	ldr	r3, [pc, #272]	; (8002998 <output_state+0x214>)
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	4619      	mov	r1, r3
 800288c:	4610      	mov	r0, r2
 800288e:	f7fe fa9b 	bl	8000dc8 <__aeabi_fmul>
 8002892:	4603      	mov	r3, r0
 8002894:	461a      	mov	r2, r3
 8002896:	4b3f      	ldr	r3, [pc, #252]	; (8002994 <output_state+0x210>)
 8002898:	601a      	str	r2, [r3, #0]
		break;
 800289a:	e070      	b.n	800297e <output_state+0x1fa>

	case Output_x4_STATE:
		Relay_control(0,0); // set all coils off
 800289c:	2100      	movs	r1, #0
 800289e:	2000      	movs	r0, #0
 80028a0:	f7fe fed4 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 80028a4:	2101      	movs	r1, #1
 80028a6:	2001      	movs	r0, #1
 80028a8:	f7fe fed0 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80028ac:	2100      	movs	r1, #0
 80028ae:	2002      	movs	r0, #2
 80028b0:	f7fe fecc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 80028b4:	2101      	movs	r1, #1
 80028b6:	2003      	movs	r0, #3
 80028b8:	f7fe fec8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	4618      	mov	r0, r3
 80028c0:	f003 f848 	bl	8005954 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80028c4:	2100      	movs	r1, #0
 80028c6:	2000      	movs	r0, #0
 80028c8:	f7fe fec0 	bl	800164c <Relay_control>
		Current_output_status=Output_x4_STATE;
 80028cc:	4b2e      	ldr	r3, [pc, #184]	; (8002988 <output_state+0x204>)
 80028ce:	2203      	movs	r2, #3
 80028d0:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x4_coeff;
 80028d2:	4b2e      	ldr	r3, [pc, #184]	; (800298c <output_state+0x208>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a2e      	ldr	r2, [pc, #184]	; (8002990 <output_state+0x20c>)
 80028d8:	6812      	ldr	r2, [r2, #0]
 80028da:	4611      	mov	r1, r2
 80028dc:	4618      	mov	r0, r3
 80028de:	f7fe f969 	bl	8000bb4 <__aeabi_fsub>
 80028e2:	4603      	mov	r3, r0
 80028e4:	461a      	mov	r2, r3
 80028e6:	4b2d      	ldr	r3, [pc, #180]	; (800299c <output_state+0x218>)
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	4619      	mov	r1, r3
 80028ec:	4610      	mov	r0, r2
 80028ee:	f7fe fa6b 	bl	8000dc8 <__aeabi_fmul>
 80028f2:	4603      	mov	r3, r0
 80028f4:	461a      	mov	r2, r3
 80028f6:	4b27      	ldr	r3, [pc, #156]	; (8002994 <output_state+0x210>)
 80028f8:	601a      	str	r2, [r3, #0]
		break;
 80028fa:	e040      	b.n	800297e <output_state+0x1fa>

	case Output_auto_STATE:
		if((cal_DAC_up_voltage-cal_DAC_down_voltage)/DAC_target_speed > 600)
 80028fc:	4b23      	ldr	r3, [pc, #140]	; (800298c <output_state+0x208>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	4a23      	ldr	r2, [pc, #140]	; (8002990 <output_state+0x20c>)
 8002902:	6812      	ldr	r2, [r2, #0]
 8002904:	4611      	mov	r1, r2
 8002906:	4618      	mov	r0, r3
 8002908:	f7fe f954 	bl	8000bb4 <__aeabi_fsub>
 800290c:	4603      	mov	r3, r0
 800290e:	461a      	mov	r2, r3
 8002910:	4b23      	ldr	r3, [pc, #140]	; (80029a0 <output_state+0x21c>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	4619      	mov	r1, r3
 8002916:	4610      	mov	r0, r2
 8002918:	f7fe fb0a 	bl	8000f30 <__aeabi_fdiv>
 800291c:	4603      	mov	r3, r0
 800291e:	4921      	ldr	r1, [pc, #132]	; (80029a4 <output_state+0x220>)
 8002920:	4618      	mov	r0, r3
 8002922:	f7fe fc0d 	bl	8001140 <__aeabi_fcmpgt>
 8002926:	4603      	mov	r3, r0
 8002928:	2b00      	cmp	r3, #0
 800292a:	d003      	beq.n	8002934 <output_state+0x1b0>
		{
			output_state(Output_x1_STATE);
 800292c:	2001      	movs	r0, #1
 800292e:	f7ff ff29 	bl	8002784 <output_state>
				output_state(Output_x2_STATE);
			}
			else
				output_state(Output_x4_STATE);

		break;
 8002932:	e023      	b.n	800297c <output_state+0x1f8>
			if (((cal_DAC_up_voltage-cal_DAC_down_voltage)*2)/DAC_target_speed > 600)
 8002934:	4b15      	ldr	r3, [pc, #84]	; (800298c <output_state+0x208>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4a15      	ldr	r2, [pc, #84]	; (8002990 <output_state+0x20c>)
 800293a:	6812      	ldr	r2, [r2, #0]
 800293c:	4611      	mov	r1, r2
 800293e:	4618      	mov	r0, r3
 8002940:	f7fe f938 	bl	8000bb4 <__aeabi_fsub>
 8002944:	4603      	mov	r3, r0
 8002946:	4619      	mov	r1, r3
 8002948:	4618      	mov	r0, r3
 800294a:	f7fe f935 	bl	8000bb8 <__addsf3>
 800294e:	4603      	mov	r3, r0
 8002950:	461a      	mov	r2, r3
 8002952:	4b13      	ldr	r3, [pc, #76]	; (80029a0 <output_state+0x21c>)
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	4619      	mov	r1, r3
 8002958:	4610      	mov	r0, r2
 800295a:	f7fe fae9 	bl	8000f30 <__aeabi_fdiv>
 800295e:	4603      	mov	r3, r0
 8002960:	4910      	ldr	r1, [pc, #64]	; (80029a4 <output_state+0x220>)
 8002962:	4618      	mov	r0, r3
 8002964:	f7fe fbec 	bl	8001140 <__aeabi_fcmpgt>
 8002968:	4603      	mov	r3, r0
 800296a:	2b00      	cmp	r3, #0
 800296c:	d003      	beq.n	8002976 <output_state+0x1f2>
				output_state(Output_x2_STATE);
 800296e:	2002      	movs	r0, #2
 8002970:	f7ff ff08 	bl	8002784 <output_state>
		break;
 8002974:	e002      	b.n	800297c <output_state+0x1f8>
				output_state(Output_x4_STATE);
 8002976:	2003      	movs	r0, #3
 8002978:	f7ff ff04 	bl	8002784 <output_state>
		break;
 800297c:	bf00      	nop
	}
}
 800297e:	bf00      	nop
 8002980:	3710      	adds	r7, #16
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}
 8002986:	bf00      	nop
 8002988:	2000080c 	.word	0x2000080c
 800298c:	20000804 	.word	0x20000804
 8002990:	20000808 	.word	0x20000808
 8002994:	20000800 	.word	0x20000800
 8002998:	20000578 	.word	0x20000578
 800299c:	2000057c 	.word	0x2000057c
 80029a0:	200007f4 	.word	0x200007f4
 80029a4:	44160000 	.word	0x44160000

080029a8 <display_screen>:
//==============================================================================================


//==============================================================================================
void display_screen(uint8_t type)
{
 80029a8:	b590      	push	{r4, r7, lr}
 80029aa:	b087      	sub	sp, #28
 80029ac:	af02      	add	r7, sp, #8
 80029ae:	4603      	mov	r3, r0
 80029b0:	71fb      	strb	r3, [r7, #7]
	char sign;
	switch(type)
 80029b2:	79fb      	ldrb	r3, [r7, #7]
 80029b4:	2b05      	cmp	r3, #5
 80029b6:	f200 812f 	bhi.w	8002c18 <display_screen+0x270>
 80029ba:	a201      	add	r2, pc, #4	; (adr r2, 80029c0 <display_screen+0x18>)
 80029bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80029c0:	08002bb1 	.word	0x08002bb1
 80029c4:	08002bd3 	.word	0x08002bd3
 80029c8:	08002bf5 	.word	0x08002bf5
 80029cc:	08002b07 	.word	0x08002b07
 80029d0:	080029d9 	.word	0x080029d9
 80029d4:	08002a83 	.word	0x08002a83
	{
	//----------------------------------------------------------//
	case AMP_SCREEN:
		if(DAC_code_direction==DIRECTION_UP_STATE)
 80029d8:	4b91      	ldr	r3, [pc, #580]	; (8002c20 <display_screen+0x278>)
 80029da:	781b      	ldrb	r3, [r3, #0]
 80029dc:	2b01      	cmp	r3, #1
 80029de:	d102      	bne.n	80029e6 <display_screen+0x3e>
		{
			sign='+';
 80029e0:	232b      	movs	r3, #43	; 0x2b
 80029e2:	73fb      	strb	r3, [r7, #15]
 80029e4:	e008      	b.n	80029f8 <display_screen+0x50>
		}
		else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 80029e6:	4b8e      	ldr	r3, [pc, #568]	; (8002c20 <display_screen+0x278>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d102      	bne.n	80029f4 <display_screen+0x4c>
		{
			sign='-';
 80029ee:	232d      	movs	r3, #45	; 0x2d
 80029f0:	73fb      	strb	r3, [r7, #15]
 80029f2:	e001      	b.n	80029f8 <display_screen+0x50>
		} else
		{
			sign='*';
 80029f4:	232a      	movs	r3, #42	; 0x2a
 80029f6:	73fb      	strb	r3, [r7, #15]
		}

		sprintf(lcd_buf,"I %c%1.4EA",sign, amp_target_speed);
 80029f8:	7bfc      	ldrb	r4, [r7, #15]
 80029fa:	4b8a      	ldr	r3, [pc, #552]	; (8002c24 <display_screen+0x27c>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	4618      	mov	r0, r3
 8002a00:	f7fd fd34 	bl	800046c <__aeabi_f2d>
 8002a04:	4602      	mov	r2, r0
 8002a06:	460b      	mov	r3, r1
 8002a08:	e9cd 2300 	strd	r2, r3, [sp]
 8002a0c:	4622      	mov	r2, r4
 8002a0e:	4986      	ldr	r1, [pc, #536]	; (8002c28 <display_screen+0x280>)
 8002a10:	4886      	ldr	r0, [pc, #536]	; (8002c2c <display_screen+0x284>)
 8002a12:	f009 f8d7 	bl	800bbc4 <siprintf>
		LcdString(1, 1);
 8002a16:	2101      	movs	r1, #1
 8002a18:	2001      	movs	r0, #1
 8002a1a:	f7ff fc5d 	bl	80022d8 <LcdString>

		if(cfg.LDACMODE==1){
 8002a1e:	4b84      	ldr	r3, [pc, #528]	; (8002c30 <display_screen+0x288>)
 8002a20:	789b      	ldrb	r3, [r3, #2]
 8002a22:	2b01      	cmp	r3, #1
 8002a24:	d117      	bne.n	8002a56 <display_screen+0xae>
			sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002a26:	4b83      	ldr	r3, [pc, #524]	; (8002c34 <display_screen+0x28c>)
 8002a28:	781b      	ldrb	r3, [r3, #0]
 8002a2a:	461a      	mov	r2, r3
 8002a2c:	4b82      	ldr	r3, [pc, #520]	; (8002c38 <display_screen+0x290>)
 8002a2e:	781b      	ldrb	r3, [r3, #0]
 8002a30:	4619      	mov	r1, r3
 8002a32:	4b82      	ldr	r3, [pc, #520]	; (8002c3c <display_screen+0x294>)
 8002a34:	781b      	ldrb	r3, [r3, #0]
 8002a36:	9300      	str	r3, [sp, #0]
 8002a38:	460b      	mov	r3, r1
 8002a3a:	4981      	ldr	r1, [pc, #516]	; (8002c40 <display_screen+0x298>)
 8002a3c:	487b      	ldr	r0, [pc, #492]	; (8002c2c <display_screen+0x284>)
 8002a3e:	f009 f8c1 	bl	800bbc4 <siprintf>
			LcdString(1, 2);
 8002a42:	2102      	movs	r1, #2
 8002a44:	2001      	movs	r0, #1
 8002a46:	f7ff fc47 	bl	80022d8 <LcdString>
			LcdBarLine(DAC_code);
 8002a4a:	4b7e      	ldr	r3, [pc, #504]	; (8002c44 <display_screen+0x29c>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	4618      	mov	r0, r3
 8002a50:	f7ff fdf4 	bl	800263c <LcdBarLine>
			{
				sprintf(lcd_buf,"READY TO GO");
				LcdString(1, 2);
			}
		}
		break;
 8002a54:	e0e0      	b.n	8002c18 <display_screen+0x270>
			if(Current_output_status==Output_off_STATE)
 8002a56:	4b7c      	ldr	r3, [pc, #496]	; (8002c48 <display_screen+0x2a0>)
 8002a58:	781b      	ldrb	r3, [r3, #0]
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d108      	bne.n	8002a70 <display_screen+0xc8>
				sprintf(lcd_buf,"OUTPUT DISABLED");
 8002a5e:	497b      	ldr	r1, [pc, #492]	; (8002c4c <display_screen+0x2a4>)
 8002a60:	4872      	ldr	r0, [pc, #456]	; (8002c2c <display_screen+0x284>)
 8002a62:	f009 f8af 	bl	800bbc4 <siprintf>
				LcdString(1, 2);
 8002a66:	2102      	movs	r1, #2
 8002a68:	2001      	movs	r0, #1
 8002a6a:	f7ff fc35 	bl	80022d8 <LcdString>
		break;
 8002a6e:	e0d3      	b.n	8002c18 <display_screen+0x270>
				sprintf(lcd_buf,"READY TO GO");
 8002a70:	4977      	ldr	r1, [pc, #476]	; (8002c50 <display_screen+0x2a8>)
 8002a72:	486e      	ldr	r0, [pc, #440]	; (8002c2c <display_screen+0x284>)
 8002a74:	f009 f8a6 	bl	800bbc4 <siprintf>
				LcdString(1, 2);
 8002a78:	2102      	movs	r1, #2
 8002a7a:	2001      	movs	r0, #1
 8002a7c:	f7ff fc2c 	bl	80022d8 <LcdString>
		break;
 8002a80:	e0ca      	b.n	8002c18 <display_screen+0x270>

	//----------------------------------------------------------//
	case VOLT_SCREEN:

		sprintf(lcd_buf,"Vout %2.5fV",calculate_output_voltage());
 8002a82:	f000 f8ff 	bl	8002c84 <calculate_output_voltage>
 8002a86:	4603      	mov	r3, r0
 8002a88:	4618      	mov	r0, r3
 8002a8a:	f7fd fcef 	bl	800046c <__aeabi_f2d>
 8002a8e:	4602      	mov	r2, r0
 8002a90:	460b      	mov	r3, r1
 8002a92:	4970      	ldr	r1, [pc, #448]	; (8002c54 <display_screen+0x2ac>)
 8002a94:	4865      	ldr	r0, [pc, #404]	; (8002c2c <display_screen+0x284>)
 8002a96:	f009 f895 	bl	800bbc4 <siprintf>
		LcdString(1, 1);
 8002a9a:	2101      	movs	r1, #1
 8002a9c:	2001      	movs	r0, #1
 8002a9e:	f7ff fc1b 	bl	80022d8 <LcdString>

		if(Current_output_status==Output_off_STATE)
 8002aa2:	4b69      	ldr	r3, [pc, #420]	; (8002c48 <display_screen+0x2a0>)
 8002aa4:	781b      	ldrb	r3, [r3, #0]
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	d107      	bne.n	8002aba <display_screen+0x112>
		{
			sprintf(lcd_buf,"OUTPUT DISABLED");
 8002aaa:	4968      	ldr	r1, [pc, #416]	; (8002c4c <display_screen+0x2a4>)
 8002aac:	485f      	ldr	r0, [pc, #380]	; (8002c2c <display_screen+0x284>)
 8002aae:	f009 f889 	bl	800bbc4 <siprintf>
			LcdString(1, 2);
 8002ab2:	2102      	movs	r1, #2
 8002ab4:	2001      	movs	r0, #1
 8002ab6:	f7ff fc0f 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x1_STATE)
 8002aba:	4b63      	ldr	r3, [pc, #396]	; (8002c48 <display_screen+0x2a0>)
 8002abc:	781b      	ldrb	r3, [r3, #0]
 8002abe:	2b01      	cmp	r3, #1
 8002ac0:	d107      	bne.n	8002ad2 <display_screen+0x12a>
		{
			sprintf(lcd_buf,"X1 MODE");
 8002ac2:	4965      	ldr	r1, [pc, #404]	; (8002c58 <display_screen+0x2b0>)
 8002ac4:	4859      	ldr	r0, [pc, #356]	; (8002c2c <display_screen+0x284>)
 8002ac6:	f009 f87d 	bl	800bbc4 <siprintf>
			LcdString(1, 2);
 8002aca:	2102      	movs	r1, #2
 8002acc:	2001      	movs	r0, #1
 8002ace:	f7ff fc03 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x2_STATE)
 8002ad2:	4b5d      	ldr	r3, [pc, #372]	; (8002c48 <display_screen+0x2a0>)
 8002ad4:	781b      	ldrb	r3, [r3, #0]
 8002ad6:	2b02      	cmp	r3, #2
 8002ad8:	d107      	bne.n	8002aea <display_screen+0x142>
		{
			sprintf(lcd_buf,"X2 MODE");
 8002ada:	4960      	ldr	r1, [pc, #384]	; (8002c5c <display_screen+0x2b4>)
 8002adc:	4853      	ldr	r0, [pc, #332]	; (8002c2c <display_screen+0x284>)
 8002ade:	f009 f871 	bl	800bbc4 <siprintf>
			LcdString(1, 2);
 8002ae2:	2102      	movs	r1, #2
 8002ae4:	2001      	movs	r0, #1
 8002ae6:	f7ff fbf7 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x4_STATE)
 8002aea:	4b57      	ldr	r3, [pc, #348]	; (8002c48 <display_screen+0x2a0>)
 8002aec:	781b      	ldrb	r3, [r3, #0]
 8002aee:	2b03      	cmp	r3, #3
 8002af0:	f040 8091 	bne.w	8002c16 <display_screen+0x26e>
		{
			sprintf(lcd_buf,"X4 MODE");
 8002af4:	495a      	ldr	r1, [pc, #360]	; (8002c60 <display_screen+0x2b8>)
 8002af6:	484d      	ldr	r0, [pc, #308]	; (8002c2c <display_screen+0x284>)
 8002af8:	f009 f864 	bl	800bbc4 <siprintf>
			LcdString(1, 2);
 8002afc:	2102      	movs	r1, #2
 8002afe:	2001      	movs	r0, #1
 8002b00:	f7ff fbea 	bl	80022d8 <LcdString>
		}
		break;
 8002b04:	e087      	b.n	8002c16 <display_screen+0x26e>
	//----------------------------------------------------------//
		case dU_dt_SCREEN:
			if(DAC_code_direction==DIRECTION_UP_STATE)
 8002b06:	4b46      	ldr	r3, [pc, #280]	; (8002c20 <display_screen+0x278>)
 8002b08:	781b      	ldrb	r3, [r3, #0]
 8002b0a:	2b01      	cmp	r3, #1
 8002b0c:	d102      	bne.n	8002b14 <display_screen+0x16c>
			{
				sign='+';
 8002b0e:	232b      	movs	r3, #43	; 0x2b
 8002b10:	73fb      	strb	r3, [r7, #15]
 8002b12:	e008      	b.n	8002b26 <display_screen+0x17e>
			}
			else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002b14:	4b42      	ldr	r3, [pc, #264]	; (8002c20 <display_screen+0x278>)
 8002b16:	781b      	ldrb	r3, [r3, #0]
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d102      	bne.n	8002b22 <display_screen+0x17a>
			{
				sign='-';
 8002b1c:	232d      	movs	r3, #45	; 0x2d
 8002b1e:	73fb      	strb	r3, [r7, #15]
 8002b20:	e001      	b.n	8002b26 <display_screen+0x17e>
			} else
			{
				sign='*';
 8002b22:	232a      	movs	r3, #42	; 0x2a
 8002b24:	73fb      	strb	r3, [r7, #15]
			}

			sprintf(lcd_buf,"' %c%1.4EV/s",sign, ramp_target_speed);
 8002b26:	7bfc      	ldrb	r4, [r7, #15]
 8002b28:	4b4e      	ldr	r3, [pc, #312]	; (8002c64 <display_screen+0x2bc>)
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	f7fd fc9d 	bl	800046c <__aeabi_f2d>
 8002b32:	4602      	mov	r2, r0
 8002b34:	460b      	mov	r3, r1
 8002b36:	e9cd 2300 	strd	r2, r3, [sp]
 8002b3a:	4622      	mov	r2, r4
 8002b3c:	494a      	ldr	r1, [pc, #296]	; (8002c68 <display_screen+0x2c0>)
 8002b3e:	483b      	ldr	r0, [pc, #236]	; (8002c2c <display_screen+0x284>)
 8002b40:	f009 f840 	bl	800bbc4 <siprintf>
			LcdString(1, 1);
 8002b44:	2101      	movs	r1, #1
 8002b46:	2001      	movs	r0, #1
 8002b48:	f7ff fbc6 	bl	80022d8 <LcdString>

			if(cfg.LDACMODE==1){
 8002b4c:	4b38      	ldr	r3, [pc, #224]	; (8002c30 <display_screen+0x288>)
 8002b4e:	789b      	ldrb	r3, [r3, #2]
 8002b50:	2b01      	cmp	r3, #1
 8002b52:	d117      	bne.n	8002b84 <display_screen+0x1dc>
				sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002b54:	4b37      	ldr	r3, [pc, #220]	; (8002c34 <display_screen+0x28c>)
 8002b56:	781b      	ldrb	r3, [r3, #0]
 8002b58:	461a      	mov	r2, r3
 8002b5a:	4b37      	ldr	r3, [pc, #220]	; (8002c38 <display_screen+0x290>)
 8002b5c:	781b      	ldrb	r3, [r3, #0]
 8002b5e:	4619      	mov	r1, r3
 8002b60:	4b36      	ldr	r3, [pc, #216]	; (8002c3c <display_screen+0x294>)
 8002b62:	781b      	ldrb	r3, [r3, #0]
 8002b64:	9300      	str	r3, [sp, #0]
 8002b66:	460b      	mov	r3, r1
 8002b68:	4935      	ldr	r1, [pc, #212]	; (8002c40 <display_screen+0x298>)
 8002b6a:	4830      	ldr	r0, [pc, #192]	; (8002c2c <display_screen+0x284>)
 8002b6c:	f009 f82a 	bl	800bbc4 <siprintf>
				LcdString(1, 2);
 8002b70:	2102      	movs	r1, #2
 8002b72:	2001      	movs	r0, #1
 8002b74:	f7ff fbb0 	bl	80022d8 <LcdString>
				LcdBarLine(DAC_code);
 8002b78:	4b32      	ldr	r3, [pc, #200]	; (8002c44 <display_screen+0x29c>)
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	f7ff fd5d 	bl	800263c <LcdBarLine>
				{
					sprintf(lcd_buf,"READY TO GO");
					LcdString(1, 2);
				}
			}
			break;
 8002b82:	e049      	b.n	8002c18 <display_screen+0x270>
				if(Current_output_status==Output_off_STATE)
 8002b84:	4b30      	ldr	r3, [pc, #192]	; (8002c48 <display_screen+0x2a0>)
 8002b86:	781b      	ldrb	r3, [r3, #0]
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d108      	bne.n	8002b9e <display_screen+0x1f6>
					sprintf(lcd_buf,"OUTPUT DISABLED");
 8002b8c:	492f      	ldr	r1, [pc, #188]	; (8002c4c <display_screen+0x2a4>)
 8002b8e:	4827      	ldr	r0, [pc, #156]	; (8002c2c <display_screen+0x284>)
 8002b90:	f009 f818 	bl	800bbc4 <siprintf>
					LcdString(1, 2);
 8002b94:	2102      	movs	r1, #2
 8002b96:	2001      	movs	r0, #1
 8002b98:	f7ff fb9e 	bl	80022d8 <LcdString>
			break;
 8002b9c:	e03c      	b.n	8002c18 <display_screen+0x270>
					sprintf(lcd_buf,"READY TO GO");
 8002b9e:	492c      	ldr	r1, [pc, #176]	; (8002c50 <display_screen+0x2a8>)
 8002ba0:	4822      	ldr	r0, [pc, #136]	; (8002c2c <display_screen+0x284>)
 8002ba2:	f009 f80f 	bl	800bbc4 <siprintf>
					LcdString(1, 2);
 8002ba6:	2102      	movs	r1, #2
 8002ba8:	2001      	movs	r0, #1
 8002baa:	f7ff fb95 	bl	80022d8 <LcdString>
			break;
 8002bae:	e033      	b.n	8002c18 <display_screen+0x270>
			//----------------------------------------------------------//
	case Hello_SCREEN:
		sprintf(lcd_buf,"Hello AmpNuts!");
 8002bb0:	492e      	ldr	r1, [pc, #184]	; (8002c6c <display_screen+0x2c4>)
 8002bb2:	481e      	ldr	r0, [pc, #120]	; (8002c2c <display_screen+0x284>)
 8002bb4:	f009 f806 	bl	800bbc4 <siprintf>
		LcdString(1, 1);
 8002bb8:	2101      	movs	r1, #1
 8002bba:	2001      	movs	r0, #1
 8002bbc:	f7ff fb8c 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"I`m Micron-GLIN");
 8002bc0:	492b      	ldr	r1, [pc, #172]	; (8002c70 <display_screen+0x2c8>)
 8002bc2:	481a      	ldr	r0, [pc, #104]	; (8002c2c <display_screen+0x284>)
 8002bc4:	f008 fffe 	bl	800bbc4 <siprintf>
		LcdString(1, 2);
 8002bc8:	2102      	movs	r1, #2
 8002bca:	2001      	movs	r0, #1
 8002bcc:	f7ff fb84 	bl	80022d8 <LcdString>
		break;
 8002bd0:	e022      	b.n	8002c18 <display_screen+0x270>
		//----------------------------------------------------------//
	case Warm_up_SCREEN:
		sprintf(lcd_buf,"need time to");
 8002bd2:	4928      	ldr	r1, [pc, #160]	; (8002c74 <display_screen+0x2cc>)
 8002bd4:	4815      	ldr	r0, [pc, #84]	; (8002c2c <display_screen+0x284>)
 8002bd6:	f008 fff5 	bl	800bbc4 <siprintf>
		LcdString(1, 1);
 8002bda:	2101      	movs	r1, #1
 8002bdc:	2001      	movs	r0, #1
 8002bde:	f7ff fb7b 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"warm-up my refs");
 8002be2:	4925      	ldr	r1, [pc, #148]	; (8002c78 <display_screen+0x2d0>)
 8002be4:	4811      	ldr	r0, [pc, #68]	; (8002c2c <display_screen+0x284>)
 8002be6:	f008 ffed 	bl	800bbc4 <siprintf>
		LcdString(1, 2);
 8002bea:	2102      	movs	r1, #2
 8002bec:	2001      	movs	r0, #1
 8002bee:	f7ff fb73 	bl	80022d8 <LcdString>
		break;
 8002bf2:	e011      	b.n	8002c18 <display_screen+0x270>
		//----------------------------------------------------------//
	case Ready_SCREEN:
		sprintf(lcd_buf,"I`m ready...");
 8002bf4:	4921      	ldr	r1, [pc, #132]	; (8002c7c <display_screen+0x2d4>)
 8002bf6:	480d      	ldr	r0, [pc, #52]	; (8002c2c <display_screen+0x284>)
 8002bf8:	f008 ffe4 	bl	800bbc4 <siprintf>
		LcdString(1, 1);
 8002bfc:	2101      	movs	r1, #1
 8002bfe:	2001      	movs	r0, #1
 8002c00:	f7ff fb6a 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"      Let`s start!");
 8002c04:	491e      	ldr	r1, [pc, #120]	; (8002c80 <display_screen+0x2d8>)
 8002c06:	4809      	ldr	r0, [pc, #36]	; (8002c2c <display_screen+0x284>)
 8002c08:	f008 ffdc 	bl	800bbc4 <siprintf>
		LcdString(1, 2);
 8002c0c:	2102      	movs	r1, #2
 8002c0e:	2001      	movs	r0, #1
 8002c10:	f7ff fb62 	bl	80022d8 <LcdString>
		break;
 8002c14:	e000      	b.n	8002c18 <display_screen+0x270>
		break;
 8002c16:	bf00      	nop
	}

}
 8002c18:	bf00      	nop
 8002c1a:	3714      	adds	r7, #20
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	bd90      	pop	{r4, r7, pc}
 8002c20:	20000814 	.word	0x20000814
 8002c24:	2000000c 	.word	0x2000000c
 8002c28:	0800ffb0 	.word	0x0800ffb0
 8002c2c:	20000580 	.word	0x20000580
 8002c30:	200007e0 	.word	0x200007e0
 8002c34:	2000078c 	.word	0x2000078c
 8002c38:	2000078d 	.word	0x2000078d
 8002c3c:	2000078e 	.word	0x2000078e
 8002c40:	0800ffbc 	.word	0x0800ffbc
 8002c44:	20000810 	.word	0x20000810
 8002c48:	2000080c 	.word	0x2000080c
 8002c4c:	0800ffd4 	.word	0x0800ffd4
 8002c50:	0800ffe4 	.word	0x0800ffe4
 8002c54:	0800fff0 	.word	0x0800fff0
 8002c58:	0800fffc 	.word	0x0800fffc
 8002c5c:	08010004 	.word	0x08010004
 8002c60:	0801000c 	.word	0x0801000c
 8002c64:	20000010 	.word	0x20000010
 8002c68:	08010014 	.word	0x08010014
 8002c6c:	08010024 	.word	0x08010024
 8002c70:	08010034 	.word	0x08010034
 8002c74:	08010044 	.word	0x08010044
 8002c78:	08010054 	.word	0x08010054
 8002c7c:	08010064 	.word	0x08010064
 8002c80:	08010074 	.word	0x08010074

08002c84 <calculate_output_voltage>:



//==============================================================================================
float calculate_output_voltage(void)
{
 8002c84:	b580      	push	{r7, lr}
 8002c86:	b082      	sub	sp, #8
 8002c88:	af00      	add	r7, sp, #0
	float tmp=0;
 8002c8a:	f04f 0300 	mov.w	r3, #0
 8002c8e:	607b      	str	r3, [r7, #4]

	if(Current_output_status==Output_x4_STATE)
 8002c90:	4b34      	ldr	r3, [pc, #208]	; (8002d64 <calculate_output_voltage+0xe0>)
 8002c92:	781b      	ldrb	r3, [r3, #0]
 8002c94:	2b03      	cmp	r3, #3
 8002c96:	d11d      	bne.n	8002cd4 <calculate_output_voltage+0x50>
		tmp=(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x4_coeff;
 8002c98:	4b33      	ldr	r3, [pc, #204]	; (8002d68 <calculate_output_voltage+0xe4>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	f7fe f83b 	bl	8000d18 <__aeabi_ui2f>
 8002ca2:	4602      	mov	r2, r0
 8002ca4:	4b31      	ldr	r3, [pc, #196]	; (8002d6c <calculate_output_voltage+0xe8>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4619      	mov	r1, r3
 8002caa:	4610      	mov	r0, r2
 8002cac:	f7fe f88c 	bl	8000dc8 <__aeabi_fmul>
 8002cb0:	4603      	mov	r3, r0
 8002cb2:	461a      	mov	r2, r3
 8002cb4:	4b2e      	ldr	r3, [pc, #184]	; (8002d70 <calculate_output_voltage+0xec>)
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	4619      	mov	r1, r3
 8002cba:	4610      	mov	r0, r2
 8002cbc:	f7fd ff7c 	bl	8000bb8 <__addsf3>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	461a      	mov	r2, r3
 8002cc4:	4b2b      	ldr	r3, [pc, #172]	; (8002d74 <calculate_output_voltage+0xf0>)
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	4619      	mov	r1, r3
 8002cca:	4610      	mov	r0, r2
 8002ccc:	f7fe f87c 	bl	8000dc8 <__aeabi_fmul>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_x2_STATE)
 8002cd4:	4b23      	ldr	r3, [pc, #140]	; (8002d64 <calculate_output_voltage+0xe0>)
 8002cd6:	781b      	ldrb	r3, [r3, #0]
 8002cd8:	2b02      	cmp	r3, #2
 8002cda:	d11d      	bne.n	8002d18 <calculate_output_voltage+0x94>
		tmp=(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x2_coeff;
 8002cdc:	4b22      	ldr	r3, [pc, #136]	; (8002d68 <calculate_output_voltage+0xe4>)
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	4618      	mov	r0, r3
 8002ce2:	f7fe f819 	bl	8000d18 <__aeabi_ui2f>
 8002ce6:	4602      	mov	r2, r0
 8002ce8:	4b20      	ldr	r3, [pc, #128]	; (8002d6c <calculate_output_voltage+0xe8>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	4619      	mov	r1, r3
 8002cee:	4610      	mov	r0, r2
 8002cf0:	f7fe f86a 	bl	8000dc8 <__aeabi_fmul>
 8002cf4:	4603      	mov	r3, r0
 8002cf6:	461a      	mov	r2, r3
 8002cf8:	4b1d      	ldr	r3, [pc, #116]	; (8002d70 <calculate_output_voltage+0xec>)
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	4619      	mov	r1, r3
 8002cfe:	4610      	mov	r0, r2
 8002d00:	f7fd ff5a 	bl	8000bb8 <__addsf3>
 8002d04:	4603      	mov	r3, r0
 8002d06:	461a      	mov	r2, r3
 8002d08:	4b1b      	ldr	r3, [pc, #108]	; (8002d78 <calculate_output_voltage+0xf4>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4619      	mov	r1, r3
 8002d0e:	4610      	mov	r0, r2
 8002d10:	f7fe f85a 	bl	8000dc8 <__aeabi_fmul>
 8002d14:	4603      	mov	r3, r0
 8002d16:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_x1_STATE)
 8002d18:	4b12      	ldr	r3, [pc, #72]	; (8002d64 <calculate_output_voltage+0xe0>)
 8002d1a:	781b      	ldrb	r3, [r3, #0]
 8002d1c:	2b01      	cmp	r3, #1
 8002d1e:	d115      	bne.n	8002d4c <calculate_output_voltage+0xc8>
		tmp=cal_DAC_down_voltage+(DAC_code*dac_resolution);
 8002d20:	4b11      	ldr	r3, [pc, #68]	; (8002d68 <calculate_output_voltage+0xe4>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	4618      	mov	r0, r3
 8002d26:	f7fd fff7 	bl	8000d18 <__aeabi_ui2f>
 8002d2a:	4602      	mov	r2, r0
 8002d2c:	4b0f      	ldr	r3, [pc, #60]	; (8002d6c <calculate_output_voltage+0xe8>)
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	4619      	mov	r1, r3
 8002d32:	4610      	mov	r0, r2
 8002d34:	f7fe f848 	bl	8000dc8 <__aeabi_fmul>
 8002d38:	4603      	mov	r3, r0
 8002d3a:	461a      	mov	r2, r3
 8002d3c:	4b0c      	ldr	r3, [pc, #48]	; (8002d70 <calculate_output_voltage+0xec>)
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	4619      	mov	r1, r3
 8002d42:	4610      	mov	r0, r2
 8002d44:	f7fd ff38 	bl	8000bb8 <__addsf3>
 8002d48:	4603      	mov	r3, r0
 8002d4a:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_off_STATE)
 8002d4c:	4b05      	ldr	r3, [pc, #20]	; (8002d64 <calculate_output_voltage+0xe0>)
 8002d4e:	781b      	ldrb	r3, [r3, #0]
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d102      	bne.n	8002d5a <calculate_output_voltage+0xd6>
		tmp=0;
 8002d54:	f04f 0300 	mov.w	r3, #0
 8002d58:	607b      	str	r3, [r7, #4]
	return tmp;
 8002d5a:	687b      	ldr	r3, [r7, #4]
}
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	3708      	adds	r7, #8
 8002d60:	46bd      	mov	sp, r7
 8002d62:	bd80      	pop	{r7, pc}
 8002d64:	2000080c 	.word	0x2000080c
 8002d68:	20000810 	.word	0x20000810
 8002d6c:	200006b0 	.word	0x200006b0
 8002d70:	20000808 	.word	0x20000808
 8002d74:	2000057c 	.word	0x2000057c
 8002d78:	20000578 	.word	0x20000578

08002d7c <send_answer_to_CDC>:



//==============================================================================================
void send_answer_to_CDC(uint8_t type)
{
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	b084      	sub	sp, #16
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	4603      	mov	r3, r0
 8002d84:	71fb      	strb	r3, [r7, #7]
	uint8_t cdc_counter=0;
 8002d86:	2300      	movs	r3, #0
 8002d88:	73fb      	strb	r3, [r7, #15]

	switch(type)
 8002d8a:	79fb      	ldrb	r3, [r7, #7]
 8002d8c:	2b10      	cmp	r3, #16
 8002d8e:	f200 80a6 	bhi.w	8002ede <send_answer_to_CDC+0x162>
 8002d92:	a201      	add	r2, pc, #4	; (adr r2, 8002d98 <send_answer_to_CDC+0x1c>)
 8002d94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d98:	08002de3 	.word	0x08002de3
 8002d9c:	08002e01 	.word	0x08002e01
 8002da0:	08002e1d 	.word	0x08002e1d
 8002da4:	08002e39 	.word	0x08002e39
 8002da8:	08002e73 	.word	0x08002e73
 8002dac:	08002e8f 	.word	0x08002e8f
 8002db0:	08002edf 	.word	0x08002edf
 8002db4:	08002edf 	.word	0x08002edf
 8002db8:	08002edf 	.word	0x08002edf
 8002dbc:	08002edf 	.word	0x08002edf
 8002dc0:	08002edf 	.word	0x08002edf
 8002dc4:	08002edf 	.word	0x08002edf
 8002dc8:	08002edf 	.word	0x08002edf
 8002dcc:	08002edf 	.word	0x08002edf
 8002dd0:	08002edf 	.word	0x08002edf
 8002dd4:	08002eab 	.word	0x08002eab
 8002dd8:	08002e55 	.word	0x08002e55
	{
	case ERROR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Error1, strlen((const char *)Error1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002ddc:	7bfb      	ldrb	r3, [r7, #15]
 8002dde:	3301      	adds	r3, #1
 8002de0:	73fb      	strb	r3, [r7, #15]
 8002de2:	f240 21dd 	movw	r1, #733	; 0x2dd
 8002de6:	4840      	ldr	r0, [pc, #256]	; (8002ee8 <send_answer_to_CDC+0x16c>)
 8002de8:	f007 fd44 	bl	800a874 <CDC_Transmit_FS>
 8002dec:	4603      	mov	r3, r0
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d066      	beq.n	8002ec0 <send_answer_to_CDC+0x144>
 8002df2:	7bfb      	ldrb	r3, [r7, #15]
 8002df4:	2bff      	cmp	r3, #255	; 0xff
 8002df6:	d1f1      	bne.n	8002ddc <send_answer_to_CDC+0x60>
		break;
 8002df8:	e062      	b.n	8002ec0 <send_answer_to_CDC+0x144>
	case ERROR_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)Error2, strlen((const char *)Error2))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002dfa:	7bfb      	ldrb	r3, [r7, #15]
 8002dfc:	3301      	adds	r3, #1
 8002dfe:	73fb      	strb	r3, [r7, #15]
 8002e00:	2129      	movs	r1, #41	; 0x29
 8002e02:	483a      	ldr	r0, [pc, #232]	; (8002eec <send_answer_to_CDC+0x170>)
 8002e04:	f007 fd36 	bl	800a874 <CDC_Transmit_FS>
 8002e08:	4603      	mov	r3, r0
 8002e0a:	2b00      	cmp	r3, #0
 8002e0c:	d05a      	beq.n	8002ec4 <send_answer_to_CDC+0x148>
 8002e0e:	7bfb      	ldrb	r3, [r7, #15]
 8002e10:	2bff      	cmp	r3, #255	; 0xff
 8002e12:	d1f2      	bne.n	8002dfa <send_answer_to_CDC+0x7e>
		break;
 8002e14:	e056      	b.n	8002ec4 <send_answer_to_CDC+0x148>
	case OK_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)OK, strlen((const char *)OK))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e16:	7bfb      	ldrb	r3, [r7, #15]
 8002e18:	3301      	adds	r3, #1
 8002e1a:	73fb      	strb	r3, [r7, #15]
 8002e1c:	2104      	movs	r1, #4
 8002e1e:	4834      	ldr	r0, [pc, #208]	; (8002ef0 <send_answer_to_CDC+0x174>)
 8002e20:	f007 fd28 	bl	800a874 <CDC_Transmit_FS>
 8002e24:	4603      	mov	r3, r0
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d04e      	beq.n	8002ec8 <send_answer_to_CDC+0x14c>
 8002e2a:	7bfb      	ldrb	r3, [r7, #15]
 8002e2c:	2bff      	cmp	r3, #255	; 0xff
 8002e2e:	d1f2      	bne.n	8002e16 <send_answer_to_CDC+0x9a>
		break;
 8002e30:	e04a      	b.n	8002ec8 <send_answer_to_CDC+0x14c>
	case OK_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)OK_Enter, strlen((const char *)OK_Enter))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e32:	7bfb      	ldrb	r3, [r7, #15]
 8002e34:	3301      	adds	r3, #1
 8002e36:	73fb      	strb	r3, [r7, #15]
 8002e38:	2117      	movs	r1, #23
 8002e3a:	482e      	ldr	r0, [pc, #184]	; (8002ef4 <send_answer_to_CDC+0x178>)
 8002e3c:	f007 fd1a 	bl	800a874 <CDC_Transmit_FS>
 8002e40:	4603      	mov	r3, r0
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d042      	beq.n	8002ecc <send_answer_to_CDC+0x150>
 8002e46:	7bfb      	ldrb	r3, [r7, #15]
 8002e48:	2bff      	cmp	r3, #255	; 0xff
 8002e4a:	d1f2      	bne.n	8002e32 <send_answer_to_CDC+0xb6>
		break;
 8002e4c:	e03e      	b.n	8002ecc <send_answer_to_CDC+0x150>
	case EXTENDED_HELP:
		while((CDC_Transmit_FS((uint8_t *)extended_help1, strlen((const char *)extended_help1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e4e:	7bfb      	ldrb	r3, [r7, #15]
 8002e50:	3301      	adds	r3, #1
 8002e52:	73fb      	strb	r3, [r7, #15]
 8002e54:	f240 21ab 	movw	r1, #683	; 0x2ab
 8002e58:	4827      	ldr	r0, [pc, #156]	; (8002ef8 <send_answer_to_CDC+0x17c>)
 8002e5a:	f007 fd0b 	bl	800a874 <CDC_Transmit_FS>
 8002e5e:	4603      	mov	r3, r0
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d035      	beq.n	8002ed0 <send_answer_to_CDC+0x154>
 8002e64:	7bfb      	ldrb	r3, [r7, #15]
 8002e66:	2bff      	cmp	r3, #255	; 0xff
 8002e68:	d1f1      	bne.n	8002e4e <send_answer_to_CDC+0xd2>
		break;
 8002e6a:	e031      	b.n	8002ed0 <send_answer_to_CDC+0x154>
	case CLEAR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)clear, strlen((const char *)clear))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e6c:	7bfb      	ldrb	r3, [r7, #15]
 8002e6e:	3301      	adds	r3, #1
 8002e70:	73fb      	strb	r3, [r7, #15]
 8002e72:	2105      	movs	r1, #5
 8002e74:	4821      	ldr	r0, [pc, #132]	; (8002efc <send_answer_to_CDC+0x180>)
 8002e76:	f007 fcfd 	bl	800a874 <CDC_Transmit_FS>
 8002e7a:	4603      	mov	r3, r0
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	d029      	beq.n	8002ed4 <send_answer_to_CDC+0x158>
 8002e80:	7bfb      	ldrb	r3, [r7, #15]
 8002e82:	2bff      	cmp	r3, #255	; 0xff
 8002e84:	d1f2      	bne.n	8002e6c <send_answer_to_CDC+0xf0>
		break;
 8002e86:	e025      	b.n	8002ed4 <send_answer_to_CDC+0x158>
	case DONE_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Done, strlen((const char *)Done))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e88:	7bfb      	ldrb	r3, [r7, #15]
 8002e8a:	3301      	adds	r3, #1
 8002e8c:	73fb      	strb	r3, [r7, #15]
 8002e8e:	2116      	movs	r1, #22
 8002e90:	481b      	ldr	r0, [pc, #108]	; (8002f00 <send_answer_to_CDC+0x184>)
 8002e92:	f007 fcef 	bl	800a874 <CDC_Transmit_FS>
 8002e96:	4603      	mov	r3, r0
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d01d      	beq.n	8002ed8 <send_answer_to_CDC+0x15c>
 8002e9c:	7bfb      	ldrb	r3, [r7, #15]
 8002e9e:	2bff      	cmp	r3, #255	; 0xff
 8002ea0:	d1f2      	bne.n	8002e88 <send_answer_to_CDC+0x10c>
		break;
 8002ea2:	e019      	b.n	8002ed8 <send_answer_to_CDC+0x15c>
	case RUN_CAL_TYPE_TEMP:
		while((CDC_Transmit_FS((uint8_t *)run_cal, strlen((const char *)run_cal))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002ea4:	7bfb      	ldrb	r3, [r7, #15]
 8002ea6:	3301      	adds	r3, #1
 8002ea8:	73fb      	strb	r3, [r7, #15]
 8002eaa:	211b      	movs	r1, #27
 8002eac:	4815      	ldr	r0, [pc, #84]	; (8002f04 <send_answer_to_CDC+0x188>)
 8002eae:	f007 fce1 	bl	800a874 <CDC_Transmit_FS>
 8002eb2:	4603      	mov	r3, r0
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d011      	beq.n	8002edc <send_answer_to_CDC+0x160>
 8002eb8:	7bfb      	ldrb	r3, [r7, #15]
 8002eba:	2bff      	cmp	r3, #255	; 0xff
 8002ebc:	d1f2      	bne.n	8002ea4 <send_answer_to_CDC+0x128>
		break;
 8002ebe:	e00d      	b.n	8002edc <send_answer_to_CDC+0x160>
		break;
 8002ec0:	bf00      	nop
 8002ec2:	e00c      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ec4:	bf00      	nop
 8002ec6:	e00a      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ec8:	bf00      	nop
 8002eca:	e008      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ecc:	bf00      	nop
 8002ece:	e006      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ed0:	bf00      	nop
 8002ed2:	e004      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ed4:	bf00      	nop
 8002ed6:	e002      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002ed8:	bf00      	nop
 8002eda:	e000      	b.n	8002ede <send_answer_to_CDC+0x162>
		break;
 8002edc:	bf00      	nop
	}
}
 8002ede:	bf00      	nop
 8002ee0:	3710      	adds	r7, #16
 8002ee2:	46bd      	mov	sp, r7
 8002ee4:	bd80      	pop	{r7, pc}
 8002ee6:	bf00      	nop
 8002ee8:	080106f4 	.word	0x080106f4
 8002eec:	08010c98 	.word	0x08010c98
 8002ef0:	080106c8 	.word	0x080106c8
 8002ef4:	08010c80 	.word	0x08010c80
 8002ef8:	080109d4 	.word	0x080109d4
 8002efc:	080106ec 	.word	0x080106ec
 8002f00:	08010cc4 	.word	0x08010cc4
 8002f04:	080106d0 	.word	0x080106d0

08002f08 <cmd_SWEEP_START>:



//==============================================================================================
void cmd_SWEEP_START()
{
 8002f08:	b580      	push	{r7, lr}
 8002f0a:	af00      	add	r7, sp, #0
	output_state(Output_auto_STATE);
 8002f0c:	2004      	movs	r0, #4
 8002f0e:	f7ff fc39 	bl	8002784 <output_state>
	DDS_Calculation();
 8002f12:	f7fe fe21 	bl	8001b58 <DDS_Calculation>
	DAC_TEMP_CAL();
 8002f16:	f7fe fdaf 	bl	8001a78 <DAC_TEMP_CAL>
	CPLD_control(CPLD_ON_STATE); // Enable LDAC signal
 8002f1a:	2001      	movs	r0, #1
 8002f1c:	f7fe fc50 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f20:	f7fe fd22 	bl	8001968 <DAC_SendInit>
}
 8002f24:	bf00      	nop
 8002f26:	bd80      	pop	{r7, pc}

08002f28 <cmd_SWEEP_STOP>:
//==============================================================================================


//==============================================================================================
void cmd_SWEEP_STOP()
{
 8002f28:	b580      	push	{r7, lr}
 8002f2a:	af00      	add	r7, sp, #0
	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002f2c:	2000      	movs	r0, #0
 8002f2e:	f7fe fc47 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f32:	f7fe fd19 	bl	8001968 <DAC_SendInit>
}
 8002f36:	bf00      	nop
 8002f38:	bd80      	pop	{r7, pc}
	...

08002f3c <cmd_DAC_SET>:
//==============================================================================================


//==============================================================================================
void cmd_DAC_SET(uint32_t code)
{
 8002f3c:	b580      	push	{r7, lr}
 8002f3e:	b082      	sub	sp, #8
 8002f40:	af00      	add	r7, sp, #0
 8002f42:	6078      	str	r0, [r7, #4]
	if (code>0xFFFFF)return;
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002f4a:	d21f      	bcs.n	8002f8c <cmd_DAC_SET+0x50>

	if(DAC_code_direction!=DIRECTION_CYCLE_STATE)
 8002f4c:	4b11      	ldr	r3, [pc, #68]	; (8002f94 <cmd_DAC_SET+0x58>)
 8002f4e:	781b      	ldrb	r3, [r3, #0]
 8002f50:	2b02      	cmp	r3, #2
 8002f52:	d00f      	beq.n	8002f74 <cmd_DAC_SET+0x38>
	{
		switch(code)
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d004      	beq.n	8002f64 <cmd_DAC_SET+0x28>
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	4a0e      	ldr	r2, [pc, #56]	; (8002f98 <cmd_DAC_SET+0x5c>)
 8002f5e:	4293      	cmp	r3, r2
 8002f60:	d004      	beq.n	8002f6c <cmd_DAC_SET+0x30>
 8002f62:	e008      	b.n	8002f76 <cmd_DAC_SET+0x3a>
		{
		case DAC_CODE_DOWN:
			DAC_code_direction=DIRECTION_UP_STATE;
 8002f64:	4b0b      	ldr	r3, [pc, #44]	; (8002f94 <cmd_DAC_SET+0x58>)
 8002f66:	2201      	movs	r2, #1
 8002f68:	701a      	strb	r2, [r3, #0]
			break;
 8002f6a:	e004      	b.n	8002f76 <cmd_DAC_SET+0x3a>
		case DAC_CODE_TOP:
			DAC_code_direction=DIRECTION_DOWN_STATE;
 8002f6c:	4b09      	ldr	r3, [pc, #36]	; (8002f94 <cmd_DAC_SET+0x58>)
 8002f6e:	2200      	movs	r2, #0
 8002f70:	701a      	strb	r2, [r3, #0]
			break;
 8002f72:	e000      	b.n	8002f76 <cmd_DAC_SET+0x3a>
		}
	}
 8002f74:	bf00      	nop

	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002f76:	2000      	movs	r0, #0
 8002f78:	f7fe fc22 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f7c:	f7fe fcf4 	bl	8001968 <DAC_SendInit>
	DAC_TEMP_CAL();
 8002f80:	f7fe fd7a 	bl	8001a78 <DAC_TEMP_CAL>
	DAC_Write(code);
 8002f84:	6878      	ldr	r0, [r7, #4]
 8002f86:	f7fe fcaf 	bl	80018e8 <DAC_Write>
 8002f8a:	e000      	b.n	8002f8e <cmd_DAC_SET+0x52>
	if (code>0xFFFFF)return;
 8002f8c:	bf00      	nop
}
 8002f8e:	3708      	adds	r7, #8
 8002f90:	46bd      	mov	sp, r7
 8002f92:	bd80      	pop	{r7, pc}
 8002f94:	20000814 	.word	0x20000814
 8002f98:	000fffff 	.word	0x000fffff

08002f9c <cmd_SET_OUTPUT_VOLTAGE>:
//==============================================================================================


//==============================================================================================
FunctionalState cmd_SET_OUTPUT_VOLTAGE(float volt)
{
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b082      	sub	sp, #8
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
	if(volt>=cal_DAC_down_voltage && volt<=cal_DAC_up_voltage)
 8002fa4:	4b85      	ldr	r3, [pc, #532]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	4619      	mov	r1, r3
 8002faa:	6878      	ldr	r0, [r7, #4]
 8002fac:	f7fe f8be 	bl	800112c <__aeabi_fcmpge>
 8002fb0:	4603      	mov	r3, r0
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d03f      	beq.n	8003036 <cmd_SET_OUTPUT_VOLTAGE+0x9a>
 8002fb6:	4b82      	ldr	r3, [pc, #520]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	4619      	mov	r1, r3
 8002fbc:	6878      	ldr	r0, [r7, #4]
 8002fbe:	f7fe f8ab 	bl	8001118 <__aeabi_fcmple>
 8002fc2:	4603      	mov	r3, r0
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d036      	beq.n	8003036 <cmd_SET_OUTPUT_VOLTAGE+0x9a>
	{
		if(Current_output_status!=Output_x1_STATE)output_state(Output_x1_STATE);
 8002fc8:	4b7e      	ldr	r3, [pc, #504]	; (80031c4 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8002fca:	781b      	ldrb	r3, [r3, #0]
 8002fcc:	2b01      	cmp	r3, #1
 8002fce:	d002      	beq.n	8002fd6 <cmd_SET_OUTPUT_VOLTAGE+0x3a>
 8002fd0:	2001      	movs	r0, #1
 8002fd2:	f7ff fbd7 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8002fd6:	4b7a      	ldr	r3, [pc, #488]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	4a78      	ldr	r2, [pc, #480]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002fdc:	6812      	ldr	r2, [r2, #0]
 8002fde:	4611      	mov	r1, r2
 8002fe0:	4618      	mov	r0, r3
 8002fe2:	f7fd fde7 	bl	8000bb4 <__aeabi_fsub>
 8002fe6:	4603      	mov	r3, r0
 8002fe8:	4977      	ldr	r1, [pc, #476]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002fea:	4618      	mov	r0, r3
 8002fec:	f7fd ffa0 	bl	8000f30 <__aeabi_fdiv>
 8002ff0:	4603      	mov	r3, r0
 8002ff2:	461a      	mov	r2, r3
 8002ff4:	4b75      	ldr	r3, [pc, #468]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8002ff6:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt-cal_DAC_down_voltage)/dac_resolution);
 8002ff8:	4b70      	ldr	r3, [pc, #448]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	4619      	mov	r1, r3
 8002ffe:	6878      	ldr	r0, [r7, #4]
 8003000:	f7fd fdd8 	bl	8000bb4 <__aeabi_fsub>
 8003004:	4603      	mov	r3, r0
 8003006:	461a      	mov	r2, r3
 8003008:	4b70      	ldr	r3, [pc, #448]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 800300a:	681b      	ldr	r3, [r3, #0]
 800300c:	4619      	mov	r1, r3
 800300e:	4610      	mov	r0, r2
 8003010:	f7fd ff8e 	bl	8000f30 <__aeabi_fdiv>
 8003014:	4603      	mov	r3, r0
 8003016:	4618      	mov	r0, r3
 8003018:	f7fe f89c 	bl	8001154 <__aeabi_f2uiz>
 800301c:	4603      	mov	r3, r0
 800301e:	4a6c      	ldr	r2, [pc, #432]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8003020:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 8003022:	4b6b      	ldr	r3, [pc, #428]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	4618      	mov	r0, r3
 8003028:	f7ff ff88 	bl	8002f3c <cmd_DAC_SET>
		Voltage=volt;
 800302c:	4a69      	ldr	r2, [pc, #420]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	6013      	str	r3, [r2, #0]
		return ret_OK;
 8003032:	2301      	movs	r3, #1
 8003034:	e0be      	b.n	80031b4 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x2_coeff) && volt<=(cal_DAC_up_voltage*gain_x2_coeff))
 8003036:	4b61      	ldr	r3, [pc, #388]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	4a67      	ldr	r2, [pc, #412]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 800303c:	6812      	ldr	r2, [r2, #0]
 800303e:	4611      	mov	r1, r2
 8003040:	4618      	mov	r0, r3
 8003042:	f7fd fec1 	bl	8000dc8 <__aeabi_fmul>
 8003046:	4603      	mov	r3, r0
 8003048:	4619      	mov	r1, r3
 800304a:	6878      	ldr	r0, [r7, #4]
 800304c:	f7fe f86e 	bl	800112c <__aeabi_fcmpge>
 8003050:	4603      	mov	r3, r0
 8003052:	2b00      	cmp	r3, #0
 8003054:	d04e      	beq.n	80030f4 <cmd_SET_OUTPUT_VOLTAGE+0x158>
 8003056:	4b5a      	ldr	r3, [pc, #360]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	4a5f      	ldr	r2, [pc, #380]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 800305c:	6812      	ldr	r2, [r2, #0]
 800305e:	4611      	mov	r1, r2
 8003060:	4618      	mov	r0, r3
 8003062:	f7fd feb1 	bl	8000dc8 <__aeabi_fmul>
 8003066:	4603      	mov	r3, r0
 8003068:	4619      	mov	r1, r3
 800306a:	6878      	ldr	r0, [r7, #4]
 800306c:	f7fe f854 	bl	8001118 <__aeabi_fcmple>
 8003070:	4603      	mov	r3, r0
 8003072:	2b00      	cmp	r3, #0
 8003074:	d03e      	beq.n	80030f4 <cmd_SET_OUTPUT_VOLTAGE+0x158>
	{
		if(Current_output_status!=Output_x2_STATE)output_state(Output_x2_STATE);
 8003076:	4b53      	ldr	r3, [pc, #332]	; (80031c4 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8003078:	781b      	ldrb	r3, [r3, #0]
 800307a:	2b02      	cmp	r3, #2
 800307c:	d002      	beq.n	8003084 <cmd_SET_OUTPUT_VOLTAGE+0xe8>
 800307e:	2002      	movs	r0, #2
 8003080:	f7ff fb80 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8003084:	4b4e      	ldr	r3, [pc, #312]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	4a4c      	ldr	r2, [pc, #304]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 800308a:	6812      	ldr	r2, [r2, #0]
 800308c:	4611      	mov	r1, r2
 800308e:	4618      	mov	r0, r3
 8003090:	f7fd fd90 	bl	8000bb4 <__aeabi_fsub>
 8003094:	4603      	mov	r3, r0
 8003096:	494c      	ldr	r1, [pc, #304]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8003098:	4618      	mov	r0, r3
 800309a:	f7fd ff49 	bl	8000f30 <__aeabi_fdiv>
 800309e:	4603      	mov	r3, r0
 80030a0:	461a      	mov	r2, r3
 80030a2:	4b4a      	ldr	r3, [pc, #296]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030a4:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x2_coeff-cal_DAC_down_voltage)/dac_resolution);
 80030a6:	4b4c      	ldr	r3, [pc, #304]	; (80031d8 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	4619      	mov	r1, r3
 80030ac:	6878      	ldr	r0, [r7, #4]
 80030ae:	f7fd ff3f 	bl	8000f30 <__aeabi_fdiv>
 80030b2:	4603      	mov	r3, r0
 80030b4:	461a      	mov	r2, r3
 80030b6:	4b41      	ldr	r3, [pc, #260]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	4619      	mov	r1, r3
 80030bc:	4610      	mov	r0, r2
 80030be:	f7fd fd79 	bl	8000bb4 <__aeabi_fsub>
 80030c2:	4603      	mov	r3, r0
 80030c4:	461a      	mov	r2, r3
 80030c6:	4b41      	ldr	r3, [pc, #260]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	4619      	mov	r1, r3
 80030cc:	4610      	mov	r0, r2
 80030ce:	f7fd ff2f 	bl	8000f30 <__aeabi_fdiv>
 80030d2:	4603      	mov	r3, r0
 80030d4:	4618      	mov	r0, r3
 80030d6:	f7fe f83d 	bl	8001154 <__aeabi_f2uiz>
 80030da:	4603      	mov	r3, r0
 80030dc:	4a3c      	ldr	r2, [pc, #240]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80030de:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 80030e0:	4b3b      	ldr	r3, [pc, #236]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	4618      	mov	r0, r3
 80030e6:	f7ff ff29 	bl	8002f3c <cmd_DAC_SET>
		Voltage=volt;
 80030ea:	4a3a      	ldr	r2, [pc, #232]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	6013      	str	r3, [r2, #0]
		return ret_OK;
 80030f0:	2301      	movs	r3, #1
 80030f2:	e05f      	b.n	80031b4 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x4_coeff) && volt<=(cal_DAC_up_voltage*gain_x4_coeff))
 80030f4:	4b31      	ldr	r3, [pc, #196]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	4a38      	ldr	r2, [pc, #224]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 80030fa:	6812      	ldr	r2, [r2, #0]
 80030fc:	4611      	mov	r1, r2
 80030fe:	4618      	mov	r0, r3
 8003100:	f7fd fe62 	bl	8000dc8 <__aeabi_fmul>
 8003104:	4603      	mov	r3, r0
 8003106:	4619      	mov	r1, r3
 8003108:	6878      	ldr	r0, [r7, #4]
 800310a:	f7fe f80f 	bl	800112c <__aeabi_fcmpge>
 800310e:	4603      	mov	r3, r0
 8003110:	2b00      	cmp	r3, #0
 8003112:	d04e      	beq.n	80031b2 <cmd_SET_OUTPUT_VOLTAGE+0x216>
 8003114:	4b2a      	ldr	r3, [pc, #168]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	4a30      	ldr	r2, [pc, #192]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 800311a:	6812      	ldr	r2, [r2, #0]
 800311c:	4611      	mov	r1, r2
 800311e:	4618      	mov	r0, r3
 8003120:	f7fd fe52 	bl	8000dc8 <__aeabi_fmul>
 8003124:	4603      	mov	r3, r0
 8003126:	4619      	mov	r1, r3
 8003128:	6878      	ldr	r0, [r7, #4]
 800312a:	f7fd fff5 	bl	8001118 <__aeabi_fcmple>
 800312e:	4603      	mov	r3, r0
 8003130:	2b00      	cmp	r3, #0
 8003132:	d03e      	beq.n	80031b2 <cmd_SET_OUTPUT_VOLTAGE+0x216>
	{
		if(Current_output_status!=Output_x4_STATE)output_state(Output_x4_STATE);
 8003134:	4b23      	ldr	r3, [pc, #140]	; (80031c4 <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8003136:	781b      	ldrb	r3, [r3, #0]
 8003138:	2b03      	cmp	r3, #3
 800313a:	d002      	beq.n	8003142 <cmd_SET_OUTPUT_VOLTAGE+0x1a6>
 800313c:	2003      	movs	r0, #3
 800313e:	f7ff fb21 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8003142:	4b1f      	ldr	r3, [pc, #124]	; (80031c0 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	4a1d      	ldr	r2, [pc, #116]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003148:	6812      	ldr	r2, [r2, #0]
 800314a:	4611      	mov	r1, r2
 800314c:	4618      	mov	r0, r3
 800314e:	f7fd fd31 	bl	8000bb4 <__aeabi_fsub>
 8003152:	4603      	mov	r3, r0
 8003154:	491c      	ldr	r1, [pc, #112]	; (80031c8 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8003156:	4618      	mov	r0, r3
 8003158:	f7fd feea 	bl	8000f30 <__aeabi_fdiv>
 800315c:	4603      	mov	r3, r0
 800315e:	461a      	mov	r2, r3
 8003160:	4b1a      	ldr	r3, [pc, #104]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003162:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x4_coeff-cal_DAC_down_voltage)/dac_resolution);
 8003164:	4b1d      	ldr	r3, [pc, #116]	; (80031dc <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	4619      	mov	r1, r3
 800316a:	6878      	ldr	r0, [r7, #4]
 800316c:	f7fd fee0 	bl	8000f30 <__aeabi_fdiv>
 8003170:	4603      	mov	r3, r0
 8003172:	461a      	mov	r2, r3
 8003174:	4b11      	ldr	r3, [pc, #68]	; (80031bc <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	4619      	mov	r1, r3
 800317a:	4610      	mov	r0, r2
 800317c:	f7fd fd1a 	bl	8000bb4 <__aeabi_fsub>
 8003180:	4603      	mov	r3, r0
 8003182:	461a      	mov	r2, r3
 8003184:	4b11      	ldr	r3, [pc, #68]	; (80031cc <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	4619      	mov	r1, r3
 800318a:	4610      	mov	r0, r2
 800318c:	f7fd fed0 	bl	8000f30 <__aeabi_fdiv>
 8003190:	4603      	mov	r3, r0
 8003192:	4618      	mov	r0, r3
 8003194:	f7fd ffde 	bl	8001154 <__aeabi_f2uiz>
 8003198:	4603      	mov	r3, r0
 800319a:	4a0d      	ldr	r2, [pc, #52]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 800319c:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 800319e:	4b0c      	ldr	r3, [pc, #48]	; (80031d0 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	4618      	mov	r0, r3
 80031a4:	f7ff feca 	bl	8002f3c <cmd_DAC_SET>
		Voltage=volt;
 80031a8:	4a0a      	ldr	r2, [pc, #40]	; (80031d4 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	6013      	str	r3, [r2, #0]
		return ret_OK;
 80031ae:	2301      	movs	r3, #1
 80031b0:	e000      	b.n	80031b4 <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}

	return ret_ERROR;
 80031b2:	2300      	movs	r3, #0
}
 80031b4:	4618      	mov	r0, r3
 80031b6:	3708      	adds	r7, #8
 80031b8:	46bd      	mov	sp, r7
 80031ba:	bd80      	pop	{r7, pc}
 80031bc:	20000808 	.word	0x20000808
 80031c0:	20000804 	.word	0x20000804
 80031c4:	2000080c 	.word	0x2000080c
 80031c8:	497ffff0 	.word	0x497ffff0
 80031cc:	200006b0 	.word	0x200006b0
 80031d0:	20000810 	.word	0x20000810
 80031d4:	200007fc 	.word	0x200007fc
 80031d8:	20000578 	.word	0x20000578
 80031dc:	2000057c 	.word	0x2000057c

080031e0 <cmd_CAP_SET>:



//==============================================================================================
FunctionalState cmd_CAP_SET(uint8_t value)
{
 80031e0:	b580      	push	{r7, lr}
 80031e2:	b082      	sub	sp, #8
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	4603      	mov	r3, r0
 80031e8:	71fb      	strb	r3, [r7, #7]
	if(value>=C_value_max_count)
 80031ea:	79fb      	ldrb	r3, [r7, #7]
 80031ec:	2b09      	cmp	r3, #9
 80031ee:	d901      	bls.n	80031f4 <cmd_CAP_SET+0x14>
		return ret_ERROR;
 80031f0:	2300      	movs	r3, #0
 80031f2:	e011      	b.n	8003218 <cmd_CAP_SET+0x38>
	C_ref=value;
 80031f4:	4a0a      	ldr	r2, [pc, #40]	; (8003220 <cmd_CAP_SET+0x40>)
 80031f6:	79fb      	ldrb	r3, [r7, #7]
 80031f8:	7013      	strb	r3, [r2, #0]
	if(mode==AMP_SCREEN)return Recalculate_ramp_speed(mode,amp_target_speed);
 80031fa:	4b0a      	ldr	r3, [pc, #40]	; (8003224 <cmd_CAP_SET+0x44>)
 80031fc:	781b      	ldrb	r3, [r3, #0]
 80031fe:	2b04      	cmp	r3, #4
 8003200:	d109      	bne.n	8003216 <cmd_CAP_SET+0x36>
 8003202:	4b08      	ldr	r3, [pc, #32]	; (8003224 <cmd_CAP_SET+0x44>)
 8003204:	781b      	ldrb	r3, [r3, #0]
 8003206:	4a08      	ldr	r2, [pc, #32]	; (8003228 <cmd_CAP_SET+0x48>)
 8003208:	6812      	ldr	r2, [r2, #0]
 800320a:	4611      	mov	r1, r2
 800320c:	4618      	mov	r0, r3
 800320e:	f000 f80f 	bl	8003230 <Recalculate_ramp_speed>
 8003212:	4603      	mov	r3, r0
 8003214:	e000      	b.n	8003218 <cmd_CAP_SET+0x38>
	return ret_OK;
 8003216:	2301      	movs	r3, #1
}
 8003218:	4618      	mov	r0, r3
 800321a:	3708      	adds	r7, #8
 800321c:	46bd      	mov	sp, r7
 800321e:	bd80      	pop	{r7, pc}
 8003220:	200007f8 	.word	0x200007f8
 8003224:	20000018 	.word	0x20000018
 8003228:	2000000c 	.word	0x2000000c
 800322c:	00000000 	.word	0x00000000

08003230 <Recalculate_ramp_speed>:



//==============================================================================================
FunctionalState Recalculate_ramp_speed(uint8_t new_state, float new_speed)
{
 8003230:	b5b0      	push	{r4, r5, r7, lr}
 8003232:	b084      	sub	sp, #16
 8003234:	af00      	add	r7, sp, #0
 8003236:	4603      	mov	r3, r0
 8003238:	6039      	str	r1, [r7, #0]
 800323a:	71fb      	strb	r3, [r7, #7]
	float tmp_speed=0;
 800323c:	f04f 0300 	mov.w	r3, #0
 8003240:	60fb      	str	r3, [r7, #12]

	if(new_state==AMP_SCREEN) // check current
 8003242:	79fb      	ldrb	r3, [r7, #7]
 8003244:	2b04      	cmp	r3, #4
 8003246:	d133      	bne.n	80032b0 <Recalculate_ramp_speed+0x80>
		tmp_speed=(new_speed+(calculate_output_voltage()*C_leakage[C_ref]))/(C_value[C_ref]*1E-12);
 8003248:	f7ff fd1c 	bl	8002c84 <calculate_output_voltage>
 800324c:	4602      	mov	r2, r0
 800324e:	4b42      	ldr	r3, [pc, #264]	; (8003358 <Recalculate_ramp_speed+0x128>)
 8003250:	781b      	ldrb	r3, [r3, #0]
 8003252:	4619      	mov	r1, r3
 8003254:	4b41      	ldr	r3, [pc, #260]	; (800335c <Recalculate_ramp_speed+0x12c>)
 8003256:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800325a:	4619      	mov	r1, r3
 800325c:	4610      	mov	r0, r2
 800325e:	f7fd fdb3 	bl	8000dc8 <__aeabi_fmul>
 8003262:	4603      	mov	r3, r0
 8003264:	6839      	ldr	r1, [r7, #0]
 8003266:	4618      	mov	r0, r3
 8003268:	f7fd fca6 	bl	8000bb8 <__addsf3>
 800326c:	4603      	mov	r3, r0
 800326e:	4618      	mov	r0, r3
 8003270:	f7fd f8fc 	bl	800046c <__aeabi_f2d>
 8003274:	4604      	mov	r4, r0
 8003276:	460d      	mov	r5, r1
 8003278:	4b37      	ldr	r3, [pc, #220]	; (8003358 <Recalculate_ramp_speed+0x128>)
 800327a:	781b      	ldrb	r3, [r3, #0]
 800327c:	461a      	mov	r2, r3
 800327e:	4b38      	ldr	r3, [pc, #224]	; (8003360 <Recalculate_ramp_speed+0x130>)
 8003280:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003284:	4618      	mov	r0, r3
 8003286:	f7fd f8f1 	bl	800046c <__aeabi_f2d>
 800328a:	a32d      	add	r3, pc, #180	; (adr r3, 8003340 <Recalculate_ramp_speed+0x110>)
 800328c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003290:	f7fd f944 	bl	800051c <__aeabi_dmul>
 8003294:	4602      	mov	r2, r0
 8003296:	460b      	mov	r3, r1
 8003298:	4620      	mov	r0, r4
 800329a:	4629      	mov	r1, r5
 800329c:	f7fd fa68 	bl	8000770 <__aeabi_ddiv>
 80032a0:	4602      	mov	r2, r0
 80032a2:	460b      	mov	r3, r1
 80032a4:	4610      	mov	r0, r2
 80032a6:	4619      	mov	r1, r3
 80032a8:	f7fd fc30 	bl	8000b0c <__aeabi_d2f>
 80032ac:	4603      	mov	r3, r0
 80032ae:	60fb      	str	r3, [r7, #12]
	if(new_state==dU_dt_SCREEN) // check speed
 80032b0:	79fb      	ldrb	r3, [r7, #7]
 80032b2:	2b03      	cmp	r3, #3
 80032b4:	d101      	bne.n	80032ba <Recalculate_ramp_speed+0x8a>
		tmp_speed=new_speed;
 80032b6:	683b      	ldr	r3, [r7, #0]
 80032b8:	60fb      	str	r3, [r7, #12]

	if(tmp_speed<0.0009 || tmp_speed>1.1) // limit V/s
 80032ba:	68f8      	ldr	r0, [r7, #12]
 80032bc:	f7fd f8d6 	bl	800046c <__aeabi_f2d>
 80032c0:	a321      	add	r3, pc, #132	; (adr r3, 8003348 <Recalculate_ramp_speed+0x118>)
 80032c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032c6:	f7fd fb9b 	bl	8000a00 <__aeabi_dcmplt>
 80032ca:	4603      	mov	r3, r0
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d10a      	bne.n	80032e6 <Recalculate_ramp_speed+0xb6>
 80032d0:	68f8      	ldr	r0, [r7, #12]
 80032d2:	f7fd f8cb 	bl	800046c <__aeabi_f2d>
 80032d6:	a31e      	add	r3, pc, #120	; (adr r3, 8003350 <Recalculate_ramp_speed+0x120>)
 80032d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032dc:	f7fd fbae 	bl	8000a3c <__aeabi_dcmpgt>
 80032e0:	4603      	mov	r3, r0
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	d001      	beq.n	80032ea <Recalculate_ramp_speed+0xba>
		return ret_ERROR;
 80032e6:	2300      	movs	r3, #0
 80032e8:	e025      	b.n	8003336 <Recalculate_ramp_speed+0x106>

	if(new_state==AMP_SCREEN) // check current
 80032ea:	79fb      	ldrb	r3, [r7, #7]
 80032ec:	2b04      	cmp	r3, #4
 80032ee:	d108      	bne.n	8003302 <Recalculate_ramp_speed+0xd2>
	{
		amp_target_speed=new_speed;
 80032f0:	4a1c      	ldr	r2, [pc, #112]	; (8003364 <Recalculate_ramp_speed+0x134>)
 80032f2:	683b      	ldr	r3, [r7, #0]
 80032f4:	6013      	str	r3, [r2, #0]
		ramp_target_speed=tmp_speed;
 80032f6:	4a1c      	ldr	r2, [pc, #112]	; (8003368 <Recalculate_ramp_speed+0x138>)
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	6013      	str	r3, [r2, #0]
		mode=AMP_SCREEN;
 80032fc:	4b1b      	ldr	r3, [pc, #108]	; (800336c <Recalculate_ramp_speed+0x13c>)
 80032fe:	2204      	movs	r2, #4
 8003300:	701a      	strb	r2, [r3, #0]
	}

	if(new_state==dU_dt_SCREEN) // check speed
 8003302:	79fb      	ldrb	r3, [r7, #7]
 8003304:	2b03      	cmp	r3, #3
 8003306:	d105      	bne.n	8003314 <Recalculate_ramp_speed+0xe4>
	{
		ramp_target_speed=new_speed;
 8003308:	4a17      	ldr	r2, [pc, #92]	; (8003368 <Recalculate_ramp_speed+0x138>)
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	6013      	str	r3, [r2, #0]
		mode=dU_dt_SCREEN;
 800330e:	4b17      	ldr	r3, [pc, #92]	; (800336c <Recalculate_ramp_speed+0x13c>)
 8003310:	2203      	movs	r2, #3
 8003312:	701a      	strb	r2, [r3, #0]
	}

	DAC_target_speed=tmp_speed;
 8003314:	4a16      	ldr	r2, [pc, #88]	; (8003370 <Recalculate_ramp_speed+0x140>)
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	6013      	str	r3, [r2, #0]
	if(cfg.LDACMODE==0)
 800331a:	4b16      	ldr	r3, [pc, #88]	; (8003374 <Recalculate_ramp_speed+0x144>)
 800331c:	789b      	ldrb	r3, [r3, #2]
 800331e:	2b00      	cmp	r3, #0
 8003320:	d103      	bne.n	800332a <Recalculate_ramp_speed+0xfa>
	{
		CPLD_control(CPLD_OFF_STATE);
 8003322:	2000      	movs	r0, #0
 8003324:	f7fe fa4c 	bl	80017c0 <CPLD_control>
 8003328:	e002      	b.n	8003330 <Recalculate_ramp_speed+0x100>
	}
	else
	{
		CPLD_control(CPLD_ON_STATE);
 800332a:	2001      	movs	r0, #1
 800332c:	f7fe fa48 	bl	80017c0 <CPLD_control>
	}
	DDS_Calculation();
 8003330:	f7fe fc12 	bl	8001b58 <DDS_Calculation>
	return ret_OK;
 8003334:	2301      	movs	r3, #1
}
 8003336:	4618      	mov	r0, r3
 8003338:	3710      	adds	r7, #16
 800333a:	46bd      	mov	sp, r7
 800333c:	bdb0      	pop	{r4, r5, r7, pc}
 800333e:	bf00      	nop
 8003340:	812dea11 	.word	0x812dea11
 8003344:	3d719799 	.word	0x3d719799
 8003348:	487fcb92 	.word	0x487fcb92
 800334c:	3f4d7dbf 	.word	0x3f4d7dbf
 8003350:	9999999a 	.word	0x9999999a
 8003354:	3ff19999 	.word	0x3ff19999
 8003358:	200007f8 	.word	0x200007f8
 800335c:	20000688 	.word	0x20000688
 8003360:	20000660 	.word	0x20000660
 8003364:	2000000c 	.word	0x2000000c
 8003368:	20000010 	.word	0x20000010
 800336c:	20000018 	.word	0x20000018
 8003370:	200007f4 	.word	0x200007f4
 8003374:	200007e0 	.word	0x200007e0

08003378 <cmd_CAL>:



//==============================================================================================
FunctionalState cmd_CAL(uint8_t cmd, float coeff)
{
 8003378:	b580      	push	{r7, lr}
 800337a:	b084      	sub	sp, #16
 800337c:	af00      	add	r7, sp, #0
 800337e:	4603      	mov	r3, r0
 8003380:	6039      	str	r1, [r7, #0]
 8003382:	71fb      	strb	r3, [r7, #7]
	float tmpx;

	if(CAL_STATE==LOCK_STATE) return 0;
 8003384:	4b96      	ldr	r3, [pc, #600]	; (80035e0 <cmd_CAL+0x268>)
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	2b01      	cmp	r3, #1
 800338a:	d101      	bne.n	8003390 <cmd_CAL+0x18>
 800338c:	2300      	movs	r3, #0
 800338e:	e0f0      	b.n	8003572 <cmd_CAL+0x1fa>

	tmpx=coeff;
 8003390:	683b      	ldr	r3, [r7, #0]
 8003392:	60fb      	str	r3, [r7, #12]

	switch(cmd)
 8003394:	79fb      	ldrb	r3, [r7, #7]
 8003396:	3b06      	subs	r3, #6
 8003398:	2b07      	cmp	r3, #7
 800339a:	f200 80e7 	bhi.w	800356c <cmd_CAL+0x1f4>
 800339e:	a201      	add	r2, pc, #4	; (adr r2, 80033a4 <cmd_CAL+0x2c>)
 80033a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80033a4:	080033c5 	.word	0x080033c5
 80033a8:	080033d7 	.word	0x080033d7
 80033ac:	080033e9 	.word	0x080033e9
 80033b0:	080033fb 	.word	0x080033fb
 80033b4:	08003491 	.word	0x08003491
 80033b8:	080034ff 	.word	0x080034ff
 80033bc:	0800340d 	.word	0x0800340d
 80033c0:	0800344f 	.word	0x0800344f
	{
	case DAC_CAL_TEMP:
		DAC_Write(DAC_CODE_MIDDLE);
 80033c4:	4887      	ldr	r0, [pc, #540]	; (80035e4 <cmd_CAL+0x26c>)
 80033c6:	f7fe fa8f 	bl	80018e8 <DAC_Write>
		DAC_TEMP_CAL();
 80033ca:	f7fe fb55 	bl	8001a78 <DAC_TEMP_CAL>
		DAC_Write(DAC_CODE_MIDDLE);
 80033ce:	4885      	ldr	r0, [pc, #532]	; (80035e4 <cmd_CAL+0x26c>)
 80033d0:	f7fe fa8a 	bl	80018e8 <DAC_Write>
		break;
 80033d4:	e0ca      	b.n	800356c <cmd_CAL+0x1f4>

	case DAC_CAL_POLY_A:
		EEPROM_write(corr_coeff_1_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033d6:	68f8      	ldr	r0, [r7, #12]
 80033d8:	f000 f9e3 	bl	80037a2 <float_to_binary>
 80033dc:	4603      	mov	r3, r0
 80033de:	4619      	mov	r1, r3
 80033e0:	2010      	movs	r0, #16
 80033e2:	f000 fa1d 	bl	8003820 <EEPROM_write>
		break;
 80033e6:	e0c1      	b.n	800356c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_B:
		EEPROM_write(corr_coeff_2_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033e8:	68f8      	ldr	r0, [r7, #12]
 80033ea:	f000 f9da 	bl	80037a2 <float_to_binary>
 80033ee:	4603      	mov	r3, r0
 80033f0:	4619      	mov	r1, r3
 80033f2:	2018      	movs	r0, #24
 80033f4:	f000 fa14 	bl	8003820 <EEPROM_write>
		break;
 80033f8:	e0b8      	b.n	800356c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_C:
		EEPROM_write(corr_coeff_3_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033fa:	68f8      	ldr	r0, [r7, #12]
 80033fc:	f000 f9d1 	bl	80037a2 <float_to_binary>
 8003400:	4603      	mov	r3, r0
 8003402:	4619      	mov	r1, r3
 8003404:	2020      	movs	r0, #32
 8003406:	f000 fa0b 	bl	8003820 <EEPROM_write>
		break;
 800340a:	e0af      	b.n	800356c <cmd_CAL+0x1f4>

	case GAIN_X2_CAL:
		if((tmpx<2.1 && tmpx>1.9))
 800340c:	68f8      	ldr	r0, [r7, #12]
 800340e:	f7fd f82d 	bl	800046c <__aeabi_f2d>
 8003412:	a35b      	add	r3, pc, #364	; (adr r3, 8003580 <cmd_CAL+0x208>)
 8003414:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003418:	f7fd faf2 	bl	8000a00 <__aeabi_dcmplt>
 800341c:	4603      	mov	r3, r0
 800341e:	2b00      	cmp	r3, #0
 8003420:	d013      	beq.n	800344a <cmd_CAL+0xd2>
 8003422:	68f8      	ldr	r0, [r7, #12]
 8003424:	f7fd f822 	bl	800046c <__aeabi_f2d>
 8003428:	a357      	add	r3, pc, #348	; (adr r3, 8003588 <cmd_CAL+0x210>)
 800342a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800342e:	f7fd fb05 	bl	8000a3c <__aeabi_dcmpgt>
 8003432:	4603      	mov	r3, r0
 8003434:	2b00      	cmp	r3, #0
 8003436:	d008      	beq.n	800344a <cmd_CAL+0xd2>
		{
			EEPROM_write(gain_x2_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003438:	68f8      	ldr	r0, [r7, #12]
 800343a:	f000 f9b2 	bl	80037a2 <float_to_binary>
 800343e:	4603      	mov	r3, r0
 8003440:	4619      	mov	r1, r3
 8003442:	2028      	movs	r0, #40	; 0x28
 8003444:	f000 f9ec 	bl	8003820 <EEPROM_write>
		}
		else return 0;
		break;
 8003448:	e090      	b.n	800356c <cmd_CAL+0x1f4>
		else return 0;
 800344a:	2300      	movs	r3, #0
 800344c:	e091      	b.n	8003572 <cmd_CAL+0x1fa>
	case GAIN_X4_CAL:
		if((tmpx<4.1 && tmpx>3.9))
 800344e:	68f8      	ldr	r0, [r7, #12]
 8003450:	f7fd f80c 	bl	800046c <__aeabi_f2d>
 8003454:	a34e      	add	r3, pc, #312	; (adr r3, 8003590 <cmd_CAL+0x218>)
 8003456:	e9d3 2300 	ldrd	r2, r3, [r3]
 800345a:	f7fd fad1 	bl	8000a00 <__aeabi_dcmplt>
 800345e:	4603      	mov	r3, r0
 8003460:	2b00      	cmp	r3, #0
 8003462:	d013      	beq.n	800348c <cmd_CAL+0x114>
 8003464:	68f8      	ldr	r0, [r7, #12]
 8003466:	f7fd f801 	bl	800046c <__aeabi_f2d>
 800346a:	a34b      	add	r3, pc, #300	; (adr r3, 8003598 <cmd_CAL+0x220>)
 800346c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003470:	f7fd fae4 	bl	8000a3c <__aeabi_dcmpgt>
 8003474:	4603      	mov	r3, r0
 8003476:	2b00      	cmp	r3, #0
 8003478:	d008      	beq.n	800348c <cmd_CAL+0x114>
		{
			EEPROM_write(gain_x4_EEPROM_ADDRESS,float_to_binary(tmpx));
 800347a:	68f8      	ldr	r0, [r7, #12]
 800347c:	f000 f991 	bl	80037a2 <float_to_binary>
 8003480:	4603      	mov	r3, r0
 8003482:	4619      	mov	r1, r3
 8003484:	2030      	movs	r0, #48	; 0x30
 8003486:	f000 f9cb 	bl	8003820 <EEPROM_write>
		}
		else return 0;
		break;
 800348a:	e06f      	b.n	800356c <cmd_CAL+0x1f4>
		else return 0;
 800348c:	2300      	movs	r3, #0
 800348e:	e070      	b.n	8003572 <cmd_CAL+0x1fa>
	case DAC_CAL_TOP:
		if((tmpx<10.1 && tmpx>9.9) || (tmpx>6.8 && tmpx<7.1))
 8003490:	68f8      	ldr	r0, [r7, #12]
 8003492:	f7fc ffeb 	bl	800046c <__aeabi_f2d>
 8003496:	a342      	add	r3, pc, #264	; (adr r3, 80035a0 <cmd_CAL+0x228>)
 8003498:	e9d3 2300 	ldrd	r2, r3, [r3]
 800349c:	f7fd fab0 	bl	8000a00 <__aeabi_dcmplt>
 80034a0:	4603      	mov	r3, r0
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	d00a      	beq.n	80034bc <cmd_CAL+0x144>
 80034a6:	68f8      	ldr	r0, [r7, #12]
 80034a8:	f7fc ffe0 	bl	800046c <__aeabi_f2d>
 80034ac:	a33e      	add	r3, pc, #248	; (adr r3, 80035a8 <cmd_CAL+0x230>)
 80034ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034b2:	f7fd fac3 	bl	8000a3c <__aeabi_dcmpgt>
 80034b6:	4603      	mov	r3, r0
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d115      	bne.n	80034e8 <cmd_CAL+0x170>
 80034bc:	68f8      	ldr	r0, [r7, #12]
 80034be:	f7fc ffd5 	bl	800046c <__aeabi_f2d>
 80034c2:	a33b      	add	r3, pc, #236	; (adr r3, 80035b0 <cmd_CAL+0x238>)
 80034c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034c8:	f7fd fab8 	bl	8000a3c <__aeabi_dcmpgt>
 80034cc:	4603      	mov	r3, r0
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d013      	beq.n	80034fa <cmd_CAL+0x182>
 80034d2:	68f8      	ldr	r0, [r7, #12]
 80034d4:	f7fc ffca 	bl	800046c <__aeabi_f2d>
 80034d8:	a337      	add	r3, pc, #220	; (adr r3, 80035b8 <cmd_CAL+0x240>)
 80034da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034de:	f7fd fa8f 	bl	8000a00 <__aeabi_dcmplt>
 80034e2:	4603      	mov	r3, r0
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d008      	beq.n	80034fa <cmd_CAL+0x182>
		{
			EEPROM_write(cal_DAC_up_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 80034e8:	68f8      	ldr	r0, [r7, #12]
 80034ea:	f000 f95a 	bl	80037a2 <float_to_binary>
 80034ee:	4603      	mov	r3, r0
 80034f0:	4619      	mov	r1, r3
 80034f2:	2000      	movs	r0, #0
 80034f4:	f000 f994 	bl	8003820 <EEPROM_write>
		}
		else return 0;
		break;
 80034f8:	e038      	b.n	800356c <cmd_CAL+0x1f4>
		else return 0;
 80034fa:	2300      	movs	r3, #0
 80034fc:	e039      	b.n	8003572 <cmd_CAL+0x1fa>
	case DAC_CAL_DOWN:
		if((tmpx>-10.1 && tmpx<-9.9) || (tmpx<-6.8 && tmpx>-7.1))
 80034fe:	68f8      	ldr	r0, [r7, #12]
 8003500:	f7fc ffb4 	bl	800046c <__aeabi_f2d>
 8003504:	a32e      	add	r3, pc, #184	; (adr r3, 80035c0 <cmd_CAL+0x248>)
 8003506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800350a:	f7fd fa97 	bl	8000a3c <__aeabi_dcmpgt>
 800350e:	4603      	mov	r3, r0
 8003510:	2b00      	cmp	r3, #0
 8003512:	d00a      	beq.n	800352a <cmd_CAL+0x1b2>
 8003514:	68f8      	ldr	r0, [r7, #12]
 8003516:	f7fc ffa9 	bl	800046c <__aeabi_f2d>
 800351a:	a32b      	add	r3, pc, #172	; (adr r3, 80035c8 <cmd_CAL+0x250>)
 800351c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003520:	f7fd fa6e 	bl	8000a00 <__aeabi_dcmplt>
 8003524:	4603      	mov	r3, r0
 8003526:	2b00      	cmp	r3, #0
 8003528:	d115      	bne.n	8003556 <cmd_CAL+0x1de>
 800352a:	68f8      	ldr	r0, [r7, #12]
 800352c:	f7fc ff9e 	bl	800046c <__aeabi_f2d>
 8003530:	a327      	add	r3, pc, #156	; (adr r3, 80035d0 <cmd_CAL+0x258>)
 8003532:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003536:	f7fd fa63 	bl	8000a00 <__aeabi_dcmplt>
 800353a:	4603      	mov	r3, r0
 800353c:	2b00      	cmp	r3, #0
 800353e:	d013      	beq.n	8003568 <cmd_CAL+0x1f0>
 8003540:	68f8      	ldr	r0, [r7, #12]
 8003542:	f7fc ff93 	bl	800046c <__aeabi_f2d>
 8003546:	a324      	add	r3, pc, #144	; (adr r3, 80035d8 <cmd_CAL+0x260>)
 8003548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800354c:	f7fd fa76 	bl	8000a3c <__aeabi_dcmpgt>
 8003550:	4603      	mov	r3, r0
 8003552:	2b00      	cmp	r3, #0
 8003554:	d008      	beq.n	8003568 <cmd_CAL+0x1f0>
		{
			EEPROM_write(cal_DAC_down_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 8003556:	68f8      	ldr	r0, [r7, #12]
 8003558:	f000 f923 	bl	80037a2 <float_to_binary>
 800355c:	4603      	mov	r3, r0
 800355e:	4619      	mov	r1, r3
 8003560:	2008      	movs	r0, #8
 8003562:	f000 f95d 	bl	8003820 <EEPROM_write>
		}
		else return 0;
		break;
 8003566:	e001      	b.n	800356c <cmd_CAL+0x1f4>
		else return 0;
 8003568:	2300      	movs	r3, #0
 800356a:	e002      	b.n	8003572 <cmd_CAL+0x1fa>
	}

	load_data_from_EEPROM();
 800356c:	f000 f83c 	bl	80035e8 <load_data_from_EEPROM>
	return 1;
 8003570:	2301      	movs	r3, #1
}
 8003572:	4618      	mov	r0, r3
 8003574:	3710      	adds	r7, #16
 8003576:	46bd      	mov	sp, r7
 8003578:	bd80      	pop	{r7, pc}
 800357a:	bf00      	nop
 800357c:	f3af 8000 	nop.w
 8003580:	cccccccd 	.word	0xcccccccd
 8003584:	4000cccc 	.word	0x4000cccc
 8003588:	66666666 	.word	0x66666666
 800358c:	3ffe6666 	.word	0x3ffe6666
 8003590:	66666666 	.word	0x66666666
 8003594:	40106666 	.word	0x40106666
 8003598:	33333333 	.word	0x33333333
 800359c:	400f3333 	.word	0x400f3333
 80035a0:	33333333 	.word	0x33333333
 80035a4:	40243333 	.word	0x40243333
 80035a8:	cccccccd 	.word	0xcccccccd
 80035ac:	4023cccc 	.word	0x4023cccc
 80035b0:	33333333 	.word	0x33333333
 80035b4:	401b3333 	.word	0x401b3333
 80035b8:	66666666 	.word	0x66666666
 80035bc:	401c6666 	.word	0x401c6666
 80035c0:	33333333 	.word	0x33333333
 80035c4:	c0243333 	.word	0xc0243333
 80035c8:	cccccccd 	.word	0xcccccccd
 80035cc:	c023cccc 	.word	0xc023cccc
 80035d0:	33333333 	.word	0x33333333
 80035d4:	c01b3333 	.word	0xc01b3333
 80035d8:	66666666 	.word	0x66666666
 80035dc:	c01c6666 	.word	0xc01c6666
 80035e0:	20000021 	.word	0x20000021
 80035e4:	0007ffff 	.word	0x0007ffff

080035e8 <load_data_from_EEPROM>:
//==============================================================================================


//==============================================================================================
void load_data_from_EEPROM(void)
{
 80035e8:	b580      	push	{r7, lr}
 80035ea:	b082      	sub	sp, #8
 80035ec:	af00      	add	r7, sp, #0
	uint32_t addr_i,addr_hex;
	cal_DAC_up_voltage=binary_to_float(EEPROM_read(cal_DAC_up_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 80035ee:	2000      	movs	r0, #0
 80035f0:	f000 f8fc 	bl	80037ec <EEPROM_read>
 80035f4:	4603      	mov	r3, r0
 80035f6:	4618      	mov	r0, r3
 80035f8:	f000 f8c0 	bl	800377c <binary_to_float>
 80035fc:	4603      	mov	r3, r0
 80035fe:	4a3b      	ldr	r2, [pc, #236]	; (80036ec <load_data_from_EEPROM+0x104>)
 8003600:	6013      	str	r3, [r2, #0]
	cal_DAC_down_voltage=binary_to_float(EEPROM_read(cal_DAC_down_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 8003602:	2008      	movs	r0, #8
 8003604:	f000 f8f2 	bl	80037ec <EEPROM_read>
 8003608:	4603      	mov	r3, r0
 800360a:	4618      	mov	r0, r3
 800360c:	f000 f8b6 	bl	800377c <binary_to_float>
 8003610:	4603      	mov	r3, r0
 8003612:	4a37      	ldr	r2, [pc, #220]	; (80036f0 <load_data_from_EEPROM+0x108>)
 8003614:	6013      	str	r3, [r2, #0]
	DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8003616:	4b35      	ldr	r3, [pc, #212]	; (80036ec <load_data_from_EEPROM+0x104>)
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	4a35      	ldr	r2, [pc, #212]	; (80036f0 <load_data_from_EEPROM+0x108>)
 800361c:	6812      	ldr	r2, [r2, #0]
 800361e:	4611      	mov	r1, r2
 8003620:	4618      	mov	r0, r3
 8003622:	f7fd fac7 	bl	8000bb4 <__aeabi_fsub>
 8003626:	4603      	mov	r3, r0
 8003628:	461a      	mov	r2, r3
 800362a:	4b32      	ldr	r3, [pc, #200]	; (80036f4 <load_data_from_EEPROM+0x10c>)
 800362c:	601a      	str	r2, [r3, #0]

	corr_coeff_1=binary_to_float(EEPROM_read(corr_coeff_1_EEPROM_ADDRESS));
 800362e:	2010      	movs	r0, #16
 8003630:	f000 f8dc 	bl	80037ec <EEPROM_read>
 8003634:	4603      	mov	r3, r0
 8003636:	4618      	mov	r0, r3
 8003638:	f000 f8a0 	bl	800377c <binary_to_float>
 800363c:	4603      	mov	r3, r0
 800363e:	4a2e      	ldr	r2, [pc, #184]	; (80036f8 <load_data_from_EEPROM+0x110>)
 8003640:	6013      	str	r3, [r2, #0]
	corr_coeff_2=binary_to_float(EEPROM_read(corr_coeff_2_EEPROM_ADDRESS));
 8003642:	2018      	movs	r0, #24
 8003644:	f000 f8d2 	bl	80037ec <EEPROM_read>
 8003648:	4603      	mov	r3, r0
 800364a:	4618      	mov	r0, r3
 800364c:	f000 f896 	bl	800377c <binary_to_float>
 8003650:	4603      	mov	r3, r0
 8003652:	4a2a      	ldr	r2, [pc, #168]	; (80036fc <load_data_from_EEPROM+0x114>)
 8003654:	6013      	str	r3, [r2, #0]
	corr_coeff_3=binary_to_float(EEPROM_read(corr_coeff_3_EEPROM_ADDRESS));
 8003656:	2020      	movs	r0, #32
 8003658:	f000 f8c8 	bl	80037ec <EEPROM_read>
 800365c:	4603      	mov	r3, r0
 800365e:	4618      	mov	r0, r3
 8003660:	f000 f88c 	bl	800377c <binary_to_float>
 8003664:	4603      	mov	r3, r0
 8003666:	4a26      	ldr	r2, [pc, #152]	; (8003700 <load_data_from_EEPROM+0x118>)
 8003668:	6013      	str	r3, [r2, #0]
	gain_x2_coeff=binary_to_float(EEPROM_read(gain_x2_EEPROM_ADDRESS));
 800366a:	2028      	movs	r0, #40	; 0x28
 800366c:	f000 f8be 	bl	80037ec <EEPROM_read>
 8003670:	4603      	mov	r3, r0
 8003672:	4618      	mov	r0, r3
 8003674:	f000 f882 	bl	800377c <binary_to_float>
 8003678:	4603      	mov	r3, r0
 800367a:	4a22      	ldr	r2, [pc, #136]	; (8003704 <load_data_from_EEPROM+0x11c>)
 800367c:	6013      	str	r3, [r2, #0]
	gain_x4_coeff=binary_to_float(EEPROM_read(gain_x4_EEPROM_ADDRESS));
 800367e:	2030      	movs	r0, #48	; 0x30
 8003680:	f000 f8b4 	bl	80037ec <EEPROM_read>
 8003684:	4603      	mov	r3, r0
 8003686:	4618      	mov	r0, r3
 8003688:	f000 f878 	bl	800377c <binary_to_float>
 800368c:	4603      	mov	r3, r0
 800368e:	4a1e      	ldr	r2, [pc, #120]	; (8003708 <load_data_from_EEPROM+0x120>)
 8003690:	6013      	str	r3, [r2, #0]

	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 8003692:	2300      	movs	r3, #0
 8003694:	607b      	str	r3, [r7, #4]
 8003696:	e020      	b.n	80036da <load_data_from_EEPROM+0xf2>
	{
		addr_hex=C_value_base_EEPROM_ADDRESS+(0x10*addr_i);
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	011b      	lsls	r3, r3, #4
 800369c:	3338      	adds	r3, #56	; 0x38
 800369e:	603b      	str	r3, [r7, #0]
		C_value[addr_i]=binary_to_float(EEPROM_read(addr_hex));
 80036a0:	6838      	ldr	r0, [r7, #0]
 80036a2:	f000 f8a3 	bl	80037ec <EEPROM_read>
 80036a6:	4603      	mov	r3, r0
 80036a8:	4618      	mov	r0, r3
 80036aa:	f000 f867 	bl	800377c <binary_to_float>
 80036ae:	4602      	mov	r2, r0
 80036b0:	4916      	ldr	r1, [pc, #88]	; (800370c <load_data_from_EEPROM+0x124>)
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		C_leakage[addr_i]=binary_to_float(EEPROM_read(addr_hex+0x08));
 80036b8:	683b      	ldr	r3, [r7, #0]
 80036ba:	3308      	adds	r3, #8
 80036bc:	4618      	mov	r0, r3
 80036be:	f000 f895 	bl	80037ec <EEPROM_read>
 80036c2:	4603      	mov	r3, r0
 80036c4:	4618      	mov	r0, r3
 80036c6:	f000 f859 	bl	800377c <binary_to_float>
 80036ca:	4602      	mov	r2, r0
 80036cc:	4910      	ldr	r1, [pc, #64]	; (8003710 <load_data_from_EEPROM+0x128>)
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	3301      	adds	r3, #1
 80036d8:	607b      	str	r3, [r7, #4]
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	2b09      	cmp	r3, #9
 80036de:	d9db      	bls.n	8003698 <load_data_from_EEPROM+0xb0>
	}
}
 80036e0:	bf00      	nop
 80036e2:	bf00      	nop
 80036e4:	3708      	adds	r7, #8
 80036e6:	46bd      	mov	sp, r7
 80036e8:	bd80      	pop	{r7, pc}
 80036ea:	bf00      	nop
 80036ec:	20000804 	.word	0x20000804
 80036f0:	20000808 	.word	0x20000808
 80036f4:	20000800 	.word	0x20000800
 80036f8:	2000056c 	.word	0x2000056c
 80036fc:	20000570 	.word	0x20000570
 8003700:	20000574 	.word	0x20000574
 8003704:	20000578 	.word	0x20000578
 8003708:	2000057c 	.word	0x2000057c
 800370c:	20000660 	.word	0x20000660
 8003710:	20000688 	.word	0x20000688

08003714 <write_c_value_to_EEPROM>:
//==============================================================================================


//==============================================================================================
void write_c_value_to_EEPROM(uint32_t addr_i, float value,float leakage)
{
 8003714:	b590      	push	{r4, r7, lr}
 8003716:	b087      	sub	sp, #28
 8003718:	af00      	add	r7, sp, #0
 800371a:	60f8      	str	r0, [r7, #12]
 800371c:	60b9      	str	r1, [r7, #8]
 800371e:	607a      	str	r2, [r7, #4]
	uint32_t addr_hex=C_value_base_EEPROM_ADDRESS+(0x10*addr_i);
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	011b      	lsls	r3, r3, #4
 8003724:	3338      	adds	r3, #56	; 0x38
 8003726:	617b      	str	r3, [r7, #20]

	if(addr_i>=C_value_max_count)return;
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	2b09      	cmp	r3, #9
 800372c:	d81d      	bhi.n	800376a <write_c_value_to_EEPROM+0x56>

	C_value[addr_i]=value;
 800372e:	4911      	ldr	r1, [pc, #68]	; (8003774 <write_c_value_to_EEPROM+0x60>)
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	68ba      	ldr	r2, [r7, #8]
 8003734:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex,float_to_binary(value));
 8003738:	68b8      	ldr	r0, [r7, #8]
 800373a:	f000 f832 	bl	80037a2 <float_to_binary>
 800373e:	4603      	mov	r3, r0
 8003740:	4619      	mov	r1, r3
 8003742:	6978      	ldr	r0, [r7, #20]
 8003744:	f000 f86c 	bl	8003820 <EEPROM_write>
	C_leakage[addr_i]=leakage;
 8003748:	490b      	ldr	r1, [pc, #44]	; (8003778 <write_c_value_to_EEPROM+0x64>)
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	687a      	ldr	r2, [r7, #4]
 800374e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex+0x08,float_to_binary(leakage));
 8003752:	697b      	ldr	r3, [r7, #20]
 8003754:	f103 0408 	add.w	r4, r3, #8
 8003758:	6878      	ldr	r0, [r7, #4]
 800375a:	f000 f822 	bl	80037a2 <float_to_binary>
 800375e:	4603      	mov	r3, r0
 8003760:	4619      	mov	r1, r3
 8003762:	4620      	mov	r0, r4
 8003764:	f000 f85c 	bl	8003820 <EEPROM_write>
 8003768:	e000      	b.n	800376c <write_c_value_to_EEPROM+0x58>
	if(addr_i>=C_value_max_count)return;
 800376a:	bf00      	nop
}
 800376c:	371c      	adds	r7, #28
 800376e:	46bd      	mov	sp, r7
 8003770:	bd90      	pop	{r4, r7, pc}
 8003772:	bf00      	nop
 8003774:	20000660 	.word	0x20000660
 8003778:	20000688 	.word	0x20000688

0800377c <binary_to_float>:
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC push_options
#pragma GCC optimize ("O0")

float binary_to_float(uint32_t a)
{
 800377c:	b480      	push	{r7}
 800377e:	b085      	sub	sp, #20
 8003780:	af00      	add	r7, sp, #0
 8003782:	6078      	str	r0, [r7, #4]
	int * p;
	float out=0;
 8003784:	f04f 0300 	mov.w	r3, #0
 8003788:	60bb      	str	r3, [r7, #8]

	p = &out;
 800378a:	f107 0308 	add.w	r3, r7, #8
 800378e:	60fb      	str	r3, [r7, #12]
	(*p)=a;
 8003790:	687a      	ldr	r2, [r7, #4]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	601a      	str	r2, [r3, #0]
	return out;
 8003796:	68bb      	ldr	r3, [r7, #8]
}
 8003798:	4618      	mov	r0, r3
 800379a:	3714      	adds	r7, #20
 800379c:	46bd      	mov	sp, r7
 800379e:	bc80      	pop	{r7}
 80037a0:	4770      	bx	lr

080037a2 <float_to_binary>:


uint32_t float_to_binary(float a)
{
 80037a2:	b480      	push	{r7}
 80037a4:	b087      	sub	sp, #28
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	6078      	str	r0, [r7, #4]
	int i;
	int * p;
	uint32_t out=0;
 80037aa:	2300      	movs	r3, #0
 80037ac:	613b      	str	r3, [r7, #16]

	p = &a;
 80037ae:	1d3b      	adds	r3, r7, #4
 80037b0:	60fb      	str	r3, [r7, #12]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 80037b2:	231f      	movs	r3, #31
 80037b4:	617b      	str	r3, [r7, #20]
 80037b6:	e010      	b.n	80037da <float_to_binary+0x38>
	{
		out+=((*p) >> i & 1)<<i;
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	681a      	ldr	r2, [r3, #0]
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	fa42 f303 	asr.w	r3, r2, r3
 80037c2:	f003 0201 	and.w	r2, r3, #1
 80037c6:	697b      	ldr	r3, [r7, #20]
 80037c8:	fa02 f303 	lsl.w	r3, r2, r3
 80037cc:	461a      	mov	r2, r3
 80037ce:	693b      	ldr	r3, [r7, #16]
 80037d0:	4413      	add	r3, r2
 80037d2:	613b      	str	r3, [r7, #16]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 80037d4:	697b      	ldr	r3, [r7, #20]
 80037d6:	3b01      	subs	r3, #1
 80037d8:	617b      	str	r3, [r7, #20]
 80037da:	697b      	ldr	r3, [r7, #20]
 80037dc:	2b00      	cmp	r3, #0
 80037de:	daeb      	bge.n	80037b8 <float_to_binary+0x16>
	}

	return out;
 80037e0:	693b      	ldr	r3, [r7, #16]
}
 80037e2:	4618      	mov	r0, r3
 80037e4:	371c      	adds	r7, #28
 80037e6:	46bd      	mov	sp, r7
 80037e8:	bc80      	pop	{r7}
 80037ea:	4770      	bx	lr

080037ec <EEPROM_read>:
//==============================================================================================


//==============================================================================================
uint32_t EEPROM_read(uint32_t address_of_read)
{
 80037ec:	b480      	push	{r7}
 80037ee:	b085      	sub	sp, #20
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
	uint32_t Address;

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80037fa:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 80037fe:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	4a06      	ldr	r2, [pc, #24]	; (800381c <EEPROM_read+0x30>)
 8003804:	4293      	cmp	r3, r2
 8003806:	d301      	bcc.n	800380c <EEPROM_read+0x20>
	{
		return 0x00;
 8003808:	2300      	movs	r3, #0
 800380a:	e001      	b.n	8003810 <EEPROM_read+0x24>
	}
	return *(__IO uint32_t *) Address;
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	681b      	ldr	r3, [r3, #0]
}
 8003810:	4618      	mov	r0, r3
 8003812:	3714      	adds	r7, #20
 8003814:	46bd      	mov	sp, r7
 8003816:	bc80      	pop	{r7}
 8003818:	4770      	bx	lr
 800381a:	bf00      	nop
 800381c:	08082800 	.word	0x08082800

08003820 <EEPROM_write>:
//==============================================================================================


//==============================================================================================
void EEPROM_write(uint32_t address_of_read, uint32_t data)
{
 8003820:	b580      	push	{r7, lr}
 8003822:	b084      	sub	sp, #16
 8003824:	af00      	add	r7, sp, #0
 8003826:	6078      	str	r0, [r7, #4]
 8003828:	6039      	str	r1, [r7, #0]
	/* Clear all pending flags */
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
	     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8003830:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 8003834:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	4a0d      	ldr	r2, [pc, #52]	; (8003870 <EEPROM_write+0x50>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d212      	bcs.n	8003864 <EEPROM_write+0x44>
	{
		return;
	}

	HAL_FLASHEx_DATAEEPROM_Unlock();
 800383e:	f002 f9bf 	bl	8005bc0 <HAL_FLASHEx_DATAEEPROM_Unlock>
	FLASHStatus = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_WORD, Address, data);
 8003842:	683a      	ldr	r2, [r7, #0]
 8003844:	68f9      	ldr	r1, [r7, #12]
 8003846:	2002      	movs	r0, #2
 8003848:	f002 f9d6 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 800384c:	4603      	mov	r3, r0
 800384e:	72fb      	strb	r3, [r7, #11]
	HAL_FLASHEx_DATAEEPROM_Lock();
 8003850:	f002 f9c8 	bl	8005be4 <HAL_FLASHEx_DATAEEPROM_Lock>

	if(FLASHStatus != HAL_OK)
 8003854:	7afb      	ldrb	r3, [r7, #11]
 8003856:	2b00      	cmp	r3, #0
 8003858:	d106      	bne.n	8003868 <EEPROM_write+0x48>
	{
		return;
	}
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);

	if(*(__IO uint32_t *) Address != data)
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	683a      	ldr	r2, [r7, #0]
 8003860:	429a      	cmp	r2, r3
 8003862:	e002      	b.n	800386a <EEPROM_write+0x4a>
		return;
 8003864:	bf00      	nop
 8003866:	e000      	b.n	800386a <EEPROM_write+0x4a>
		return;
 8003868:	bf00      	nop
	{
		return;
	}

}
 800386a:	3710      	adds	r7, #16
 800386c:	46bd      	mov	sp, r7
 800386e:	bd80      	pop	{r7, pc}
 8003870:	08082800 	.word	0x08082800

08003874 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8003874:	b580      	push	{r7, lr}
 8003876:	b08a      	sub	sp, #40	; 0x28
 8003878:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800387a:	f107 0314 	add.w	r3, r7, #20
 800387e:	2200      	movs	r2, #0
 8003880:	601a      	str	r2, [r3, #0]
 8003882:	605a      	str	r2, [r3, #4]
 8003884:	609a      	str	r2, [r3, #8]
 8003886:	60da      	str	r2, [r3, #12]
 8003888:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800388a:	4b7c      	ldr	r3, [pc, #496]	; (8003a7c <MX_GPIO_Init+0x208>)
 800388c:	69db      	ldr	r3, [r3, #28]
 800388e:	4a7b      	ldr	r2, [pc, #492]	; (8003a7c <MX_GPIO_Init+0x208>)
 8003890:	f043 0304 	orr.w	r3, r3, #4
 8003894:	61d3      	str	r3, [r2, #28]
 8003896:	4b79      	ldr	r3, [pc, #484]	; (8003a7c <MX_GPIO_Init+0x208>)
 8003898:	69db      	ldr	r3, [r3, #28]
 800389a:	f003 0304 	and.w	r3, r3, #4
 800389e:	613b      	str	r3, [r7, #16]
 80038a0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80038a2:	4b76      	ldr	r3, [pc, #472]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038a4:	69db      	ldr	r3, [r3, #28]
 80038a6:	4a75      	ldr	r2, [pc, #468]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038a8:	f043 0320 	orr.w	r3, r3, #32
 80038ac:	61d3      	str	r3, [r2, #28]
 80038ae:	4b73      	ldr	r3, [pc, #460]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038b0:	69db      	ldr	r3, [r3, #28]
 80038b2:	f003 0320 	and.w	r3, r3, #32
 80038b6:	60fb      	str	r3, [r7, #12]
 80038b8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80038ba:	4b70      	ldr	r3, [pc, #448]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038bc:	69db      	ldr	r3, [r3, #28]
 80038be:	4a6f      	ldr	r2, [pc, #444]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038c0:	f043 0301 	orr.w	r3, r3, #1
 80038c4:	61d3      	str	r3, [r2, #28]
 80038c6:	4b6d      	ldr	r3, [pc, #436]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038c8:	69db      	ldr	r3, [r3, #28]
 80038ca:	f003 0301 	and.w	r3, r3, #1
 80038ce:	60bb      	str	r3, [r7, #8]
 80038d0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80038d2:	4b6a      	ldr	r3, [pc, #424]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038d4:	69db      	ldr	r3, [r3, #28]
 80038d6:	4a69      	ldr	r2, [pc, #420]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038d8:	f043 0302 	orr.w	r3, r3, #2
 80038dc:	61d3      	str	r3, [r2, #28]
 80038de:	4b67      	ldr	r3, [pc, #412]	; (8003a7c <MX_GPIO_Init+0x208>)
 80038e0:	69db      	ldr	r3, [r3, #28]
 80038e2:	f003 0302 	and.w	r3, r3, #2
 80038e6:	607b      	str	r3, [r7, #4]
 80038e8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80038ea:	2200      	movs	r2, #0
 80038ec:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80038f0:	4863      	ldr	r0, [pc, #396]	; (8003a80 <MX_GPIO_Init+0x20c>)
 80038f2:	f002 fb7f 	bl	8005ff4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, GPIO_PIN_SET);
 80038f6:	2201      	movs	r2, #1
 80038f8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80038fc:	4860      	ldr	r0, [pc, #384]	; (8003a80 <MX_GPIO_Init+0x20c>)
 80038fe:	f002 fb79 	bl	8005ff4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 8003902:	2201      	movs	r2, #1
 8003904:	f248 011f 	movw	r1, #32799	; 0x801f
 8003908:	485e      	ldr	r0, [pc, #376]	; (8003a84 <MX_GPIO_Init+0x210>)
 800390a:	f002 fb73 	bl	8005ff4 <HAL_GPIO_WritePin>
                          |DAC_SYNC_Pin|DAC_CLR_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RS_Pin|Display_Power_Pin, GPIO_PIN_RESET);
 800390e:	2200      	movs	r2, #0
 8003910:	f640 0101 	movw	r1, #2049	; 0x801
 8003914:	485c      	ldr	r0, [pc, #368]	; (8003a88 <MX_GPIO_Init+0x214>)
 8003916:	f002 fb6d 	bl	8005ff4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|SPI2_NSS_Pin
 800391a:	2201      	movs	r2, #1
 800391c:	f241 413e 	movw	r1, #5182	; 0x143e
 8003920:	4859      	ldr	r0, [pc, #356]	; (8003a88 <MX_GPIO_Init+0x214>)
 8003922:	f002 fb67 	bl	8005ff4 <HAL_GPIO_WritePin>
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Start_button_Pin;
 8003926:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800392a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800392c:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8003930:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003932:	2301      	movs	r3, #1
 8003934:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Start_button_GPIO_Port, &GPIO_InitStruct);
 8003936:	f107 0314 	add.w	r3, r7, #20
 800393a:	4619      	mov	r1, r3
 800393c:	4850      	ldr	r0, [pc, #320]	; (8003a80 <MX_GPIO_Init+0x20c>)
 800393e:	f002 fa69 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Count_EN_Pin;
 8003942:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003946:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003948:	2301      	movs	r3, #1
 800394a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800394c:	2300      	movs	r3, #0
 800394e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003950:	2302      	movs	r3, #2
 8003952:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Count_EN_GPIO_Port, &GPIO_InitStruct);
 8003954:	f107 0314 	add.w	r3, r7, #20
 8003958:	4619      	mov	r1, r3
 800395a:	4849      	ldr	r0, [pc, #292]	; (8003a80 <MX_GPIO_Init+0x20c>)
 800395c:	f002 fa5a 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Relay_cs_Pin;
 8003960:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003964:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003966:	2301      	movs	r3, #1
 8003968:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800396a:	2300      	movs	r3, #0
 800396c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800396e:	2303      	movs	r3, #3
 8003970:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Relay_cs_GPIO_Port, &GPIO_InitStruct);
 8003972:	f107 0314 	add.w	r3, r7, #20
 8003976:	4619      	mov	r1, r3
 8003978:	4841      	ldr	r0, [pc, #260]	; (8003a80 <MX_GPIO_Init+0x20c>)
 800397a:	f002 fa4b 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin
                           PAPin */
  GPIO_InitStruct.Pin = Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 800397e:	f248 030f 	movw	r3, #32783	; 0x800f
 8003982:	617b      	str	r3, [r7, #20]
                          |DAC_CLR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003984:	2301      	movs	r3, #1
 8003986:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003988:	2300      	movs	r3, #0
 800398a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800398c:	2303      	movs	r3, #3
 800398e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003990:	f107 0314 	add.w	r3, r7, #20
 8003994:	4619      	mov	r1, r3
 8003996:	483b      	ldr	r0, [pc, #236]	; (8003a84 <MX_GPIO_Init+0x210>)
 8003998:	f002 fa3c 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_SYNC_Pin;
 800399c:	2310      	movs	r3, #16
 800399e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039a0:	2301      	movs	r3, #1
 80039a2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80039a4:	2301      	movs	r3, #1
 80039a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80039a8:	2303      	movs	r3, #3
 80039aa:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DAC_SYNC_GPIO_Port, &GPIO_InitStruct);
 80039ac:	f107 0314 	add.w	r3, r7, #20
 80039b0:	4619      	mov	r1, r3
 80039b2:	4834      	ldr	r0, [pc, #208]	; (8003a84 <MX_GPIO_Init+0x210>)
 80039b4:	f002 fa2e 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Display_RS_Pin;
 80039b8:	2301      	movs	r3, #1
 80039ba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039bc:	2301      	movs	r3, #1
 80039be:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039c0:	2300      	movs	r3, #0
 80039c2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80039c4:	2302      	movs	r3, #2
 80039c6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Display_RS_GPIO_Port, &GPIO_InitStruct);
 80039c8:	f107 0314 	add.w	r3, r7, #20
 80039cc:	4619      	mov	r1, r3
 80039ce:	482e      	ldr	r0, [pc, #184]	; (8003a88 <MX_GPIO_Init+0x214>)
 80039d0:	f002 fa20 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin
                           PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|Display_Power_Pin
 80039d4:	f640 433e 	movw	r3, #3134	; 0xc3e
 80039d8:	617b      	str	r3, [r7, #20]
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80039da:	2311      	movs	r3, #17
 80039dc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039de:	2300      	movs	r3, #0
 80039e0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80039e2:	2302      	movs	r3, #2
 80039e4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80039e6:	f107 0314 	add.w	r3, r7, #20
 80039ea:	4619      	mov	r1, r3
 80039ec:	4826      	ldr	r0, [pc, #152]	; (8003a88 <MX_GPIO_Init+0x214>)
 80039ee:	f002 fa11 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI2_NSS_Pin;
 80039f2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80039f6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039f8:	2301      	movs	r3, #1
 80039fa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039fc:	2300      	movs	r3, #0
 80039fe:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003a00:	2303      	movs	r3, #3
 8003a02:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI2_NSS_GPIO_Port, &GPIO_InitStruct);
 8003a04:	f107 0314 	add.w	r3, r7, #20
 8003a08:	4619      	mov	r1, r3
 8003a0a:	481f      	ldr	r0, [pc, #124]	; (8003a88 <MX_GPIO_Init+0x214>)
 8003a0c:	f002 fa02 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Encode_Push_Pin;
 8003a10:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a14:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003a16:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8003a1a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003a1c:	2301      	movs	r3, #1
 8003a1e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Encode_Push_GPIO_Port, &GPIO_InitStruct);
 8003a20:	f107 0314 	add.w	r3, r7, #20
 8003a24:	4619      	mov	r1, r3
 8003a26:	4817      	ldr	r0, [pc, #92]	; (8003a84 <MX_GPIO_Init+0x210>)
 8003a28:	f002 f9f4 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = CPU_IRQ_Pin;
 8003a2c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003a30:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003a32:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8003a36:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a38:	2300      	movs	r3, #0
 8003a3a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(CPU_IRQ_GPIO_Port, &GPIO_InitStruct);
 8003a3c:	f107 0314 	add.w	r3, r7, #20
 8003a40:	4619      	mov	r1, r3
 8003a42:	4810      	ldr	r0, [pc, #64]	; (8003a84 <MX_GPIO_Init+0x210>)
 8003a44:	f002 f9e6 	bl	8005e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_ALARM_Pin;
 8003a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003a4c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003a4e:	2300      	movs	r3, #0
 8003a50:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003a52:	2301      	movs	r3, #1
 8003a54:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DAC_ALARM_GPIO_Port, &GPIO_InitStruct);
 8003a56:	f107 0314 	add.w	r3, r7, #20
 8003a5a:	4619      	mov	r1, r3
 8003a5c:	4809      	ldr	r0, [pc, #36]	; (8003a84 <MX_GPIO_Init+0x210>)
 8003a5e:	f002 f9d9 	bl	8005e14 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 8003a62:	2200      	movs	r2, #0
 8003a64:	2101      	movs	r1, #1
 8003a66:	2028      	movs	r0, #40	; 0x28
 8003a68:	f001 ff98 	bl	800599c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8003a6c:	2028      	movs	r0, #40	; 0x28
 8003a6e:	f001 ffd3 	bl	8005a18 <HAL_NVIC_EnableIRQ>

}
 8003a72:	bf00      	nop
 8003a74:	3728      	adds	r7, #40	; 0x28
 8003a76:	46bd      	mov	sp, r7
 8003a78:	bd80      	pop	{r7, pc}
 8003a7a:	bf00      	nop
 8003a7c:	40023800 	.word	0x40023800
 8003a80:	40020800 	.word	0x40020800
 8003a84:	40020000 	.word	0x40020000
 8003a88:	40020400 	.word	0x40020400

08003a8c <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8003a8c:	b580      	push	{r7, lr}
 8003a8e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8003a90:	4b12      	ldr	r3, [pc, #72]	; (8003adc <MX_I2C1_Init+0x50>)
 8003a92:	4a13      	ldr	r2, [pc, #76]	; (8003ae0 <MX_I2C1_Init+0x54>)
 8003a94:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8003a96:	4b11      	ldr	r3, [pc, #68]	; (8003adc <MX_I2C1_Init+0x50>)
 8003a98:	4a12      	ldr	r2, [pc, #72]	; (8003ae4 <MX_I2C1_Init+0x58>)
 8003a9a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003a9c:	4b0f      	ldr	r3, [pc, #60]	; (8003adc <MX_I2C1_Init+0x50>)
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8003aa2:	4b0e      	ldr	r3, [pc, #56]	; (8003adc <MX_I2C1_Init+0x50>)
 8003aa4:	2200      	movs	r2, #0
 8003aa6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003aa8:	4b0c      	ldr	r3, [pc, #48]	; (8003adc <MX_I2C1_Init+0x50>)
 8003aaa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003aae:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003ab0:	4b0a      	ldr	r3, [pc, #40]	; (8003adc <MX_I2C1_Init+0x50>)
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8003ab6:	4b09      	ldr	r3, [pc, #36]	; (8003adc <MX_I2C1_Init+0x50>)
 8003ab8:	2200      	movs	r2, #0
 8003aba:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003abc:	4b07      	ldr	r3, [pc, #28]	; (8003adc <MX_I2C1_Init+0x50>)
 8003abe:	2200      	movs	r2, #0
 8003ac0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003ac2:	4b06      	ldr	r3, [pc, #24]	; (8003adc <MX_I2C1_Init+0x50>)
 8003ac4:	2200      	movs	r2, #0
 8003ac6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003ac8:	4804      	ldr	r0, [pc, #16]	; (8003adc <MX_I2C1_Init+0x50>)
 8003aca:	f002 faa3 	bl	8006014 <HAL_I2C_Init>
 8003ace:	4603      	mov	r3, r0
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d001      	beq.n	8003ad8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003ad4:	f001 fa58 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003ad8:	bf00      	nop
 8003ada:	bd80      	pop	{r7, pc}
 8003adc:	200006f8 	.word	0x200006f8
 8003ae0:	40005400 	.word	0x40005400
 8003ae4:	000186a0 	.word	0x000186a0

08003ae8 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8003ae8:	b580      	push	{r7, lr}
 8003aea:	b08a      	sub	sp, #40	; 0x28
 8003aec:	af00      	add	r7, sp, #0
 8003aee:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003af0:	f107 0314 	add.w	r3, r7, #20
 8003af4:	2200      	movs	r2, #0
 8003af6:	601a      	str	r2, [r3, #0]
 8003af8:	605a      	str	r2, [r3, #4]
 8003afa:	609a      	str	r2, [r3, #8]
 8003afc:	60da      	str	r2, [r3, #12]
 8003afe:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	4a17      	ldr	r2, [pc, #92]	; (8003b64 <HAL_I2C_MspInit+0x7c>)
 8003b06:	4293      	cmp	r3, r2
 8003b08:	d128      	bne.n	8003b5c <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003b0a:	4b17      	ldr	r3, [pc, #92]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b0c:	69db      	ldr	r3, [r3, #28]
 8003b0e:	4a16      	ldr	r2, [pc, #88]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b10:	f043 0302 	orr.w	r3, r3, #2
 8003b14:	61d3      	str	r3, [r2, #28]
 8003b16:	4b14      	ldr	r3, [pc, #80]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b18:	69db      	ldr	r3, [r3, #28]
 8003b1a:	f003 0302 	and.w	r3, r3, #2
 8003b1e:	613b      	str	r3, [r7, #16]
 8003b20:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = TMP117_SCL_Pin|TMP117_SDA_Pin;
 8003b22:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003b26:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003b28:	2312      	movs	r3, #18
 8003b2a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003b2c:	2301      	movs	r3, #1
 8003b2e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003b30:	2303      	movs	r3, #3
 8003b32:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003b34:	2304      	movs	r3, #4
 8003b36:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003b38:	f107 0314 	add.w	r3, r7, #20
 8003b3c:	4619      	mov	r1, r3
 8003b3e:	480b      	ldr	r0, [pc, #44]	; (8003b6c <HAL_I2C_MspInit+0x84>)
 8003b40:	f002 f968 	bl	8005e14 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003b44:	4b08      	ldr	r3, [pc, #32]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b48:	4a07      	ldr	r2, [pc, #28]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b4a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b4e:	6253      	str	r3, [r2, #36]	; 0x24
 8003b50:	4b05      	ldr	r3, [pc, #20]	; (8003b68 <HAL_I2C_MspInit+0x80>)
 8003b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b54:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b58:	60fb      	str	r3, [r7, #12]
 8003b5a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8003b5c:	bf00      	nop
 8003b5e:	3728      	adds	r7, #40	; 0x28
 8003b60:	46bd      	mov	sp, r7
 8003b62:	bd80      	pop	{r7, pc}
 8003b64:	40005400 	.word	0x40005400
 8003b68:	40023800 	.word	0x40023800
 8003b6c:	40020400 	.word	0x40020400

08003b70 <USB_rx_command_buffer_push_refd>:
uint8_t eta_hours,eta_minute,eta_second;

int16_t Enc_Counter = 0;
uint32_t Display_timeout=0;

CIRC_GBUF_DEF(uint8_t, USB_rx_command_buffer, command_buffer_len);
 8003b70:	b580      	push	{r7, lr}
 8003b72:	b082      	sub	sp, #8
 8003b74:	af00      	add	r7, sp, #0
 8003b76:	6078      	str	r0, [r7, #4]
 8003b78:	6879      	ldr	r1, [r7, #4]
 8003b7a:	4804      	ldr	r0, [pc, #16]	; (8003b8c <USB_rx_command_buffer_push_refd+0x1c>)
 8003b7c:	f7fd fd18 	bl	80015b0 <__circ_gbuf_push>
 8003b80:	4603      	mov	r3, r0
 8003b82:	4618      	mov	r0, r3
 8003b84:	3708      	adds	r7, #8
 8003b86:	46bd      	mov	sp, r7
 8003b88:	bd80      	pop	{r7, pc}
 8003b8a:	bf00      	nop
 8003b8c:	20000000 	.word	0x20000000

08003b90 <USB_rx_command_buffer_pop_refd>:
 8003b90:	b580      	push	{r7, lr}
 8003b92:	b082      	sub	sp, #8
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	6078      	str	r0, [r7, #4]
 8003b98:	2200      	movs	r2, #0
 8003b9a:	6879      	ldr	r1, [r7, #4]
 8003b9c:	4803      	ldr	r0, [pc, #12]	; (8003bac <USB_rx_command_buffer_pop_refd+0x1c>)
 8003b9e:	f7fd fcb5 	bl	800150c <__circ_gbuf_pop>
 8003ba2:	4603      	mov	r3, r0
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	3708      	adds	r7, #8
 8003ba8:	46bd      	mov	sp, r7
 8003baa:	bd80      	pop	{r7, pc}
 8003bac:	20000000 	.word	0x20000000

08003bb0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003bb0:	b5b0      	push	{r4, r5, r7, lr}
 8003bb2:	b094      	sub	sp, #80	; 0x50
 8003bb4:	af12      	add	r7, sp, #72	; 0x48
  /* USER CODE BEGIN 1 */
	cfg.PDN=0; // DAC power up
 8003bb6:	4ba5      	ldr	r3, [pc, #660]	; (8003e4c <main+0x29c>)
 8003bb8:	2200      	movs	r2, #0
 8003bba:	721a      	strb	r2, [r3, #8]
	cfg.VREFVAL=0x08; // 20 V ± 1.25 V
 8003bbc:	4ba3      	ldr	r3, [pc, #652]	; (8003e4c <main+0x29c>)
 8003bbe:	2208      	movs	r2, #8
 8003bc0:	71da      	strb	r2, [r3, #7]
	cfg.FSET=1; // Enhanced THD
 8003bc2:	4ba2      	ldr	r3, [pc, #648]	; (8003e4c <main+0x29c>)
 8003bc4:	2201      	movs	r2, #1
 8003bc6:	719a      	strb	r2, [r3, #6]
	cfg.DSDO=1; // SDO enabled
 8003bc8:	4ba0      	ldr	r3, [pc, #640]	; (8003e4c <main+0x29c>)
 8003bca:	2201      	movs	r2, #1
 8003bcc:	715a      	strb	r2, [r3, #5]
	cfg.ENALMP=0; // Indicates end of temperature calibration cycle. ALARM pin pulled low
 8003bce:	4b9f      	ldr	r3, [pc, #636]	; (8003e4c <main+0x29c>)
 8003bd0:	2200      	movs	r2, #0
 8003bd2:	711a      	strb	r2, [r3, #4]
	cfg.FSDO=0; // Fast SDO disabled
 8003bd4:	4b9d      	ldr	r3, [pc, #628]	; (8003e4c <main+0x29c>)
 8003bd6:	2200      	movs	r2, #0
 8003bd8:	70da      	strb	r2, [r3, #3]
	cfg.LDACMODE=0; // DAC *NOT* updated on LDAC !!!!falling edge!!!!
 8003bda:	4b9c      	ldr	r3, [pc, #624]	; (8003e4c <main+0x29c>)
 8003bdc:	2200      	movs	r2, #0
 8003bde:	709a      	strb	r2, [r3, #2]
	cfg.TNH_MASK=0x00; // This bit is writable only when FSET = 0
 8003be0:	4b9a      	ldr	r3, [pc, #616]	; (8003e4c <main+0x29c>)
 8003be2:	2200      	movs	r2, #0
 8003be4:	705a      	strb	r2, [r3, #1]
	cfg.EN_TMP_CAL=0; // Temperature calibration feature enabled
 8003be6:	4b99      	ldr	r3, [pc, #612]	; (8003e4c <main+0x29c>)
 8003be8:	2200      	movs	r2, #0
 8003bea:	701a      	strb	r2, [r3, #0]

	DAC_target_speed=0.1; //  V/s
 8003bec:	4b98      	ldr	r3, [pc, #608]	; (8003e50 <main+0x2a0>)
 8003bee:	4a99      	ldr	r2, [pc, #612]	; (8003e54 <main+0x2a4>)
 8003bf0:	601a      	str	r2, [r3, #0]
	DAC_code=DAC_CODE_MIDDLE;
 8003bf2:	4b99      	ldr	r3, [pc, #612]	; (8003e58 <main+0x2a8>)
 8003bf4:	4a99      	ldr	r2, [pc, #612]	; (8003e5c <main+0x2ac>)
 8003bf6:	601a      	str	r2, [r3, #0]
	DAC_code_direction=DIRECTION_UP_STATE;
 8003bf8:	4b99      	ldr	r3, [pc, #612]	; (8003e60 <main+0x2b0>)
 8003bfa:	2201      	movs	r2, #1
 8003bfc:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003bfe:	f001 fe87 	bl	8005910 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003c02:	f000 faa7 	bl	8004154 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003c06:	f7ff fe35 	bl	8003874 <MX_GPIO_Init>
  MX_SPI1_Init();
 8003c0a:	f001 f9c3 	bl	8004f94 <MX_SPI1_Init>
  MX_SPI2_Init();
 8003c0e:	f001 f9f5 	bl	8004ffc <MX_SPI2_Init>
  MX_USB_DEVICE_Init();
 8003c12:	f006 fd95 	bl	800a740 <MX_USB_DEVICE_Init>
  MX_TIM3_Init();
 8003c16:	f001 fc6b 	bl	80054f0 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003c1a:	f001 fcb7 	bl	800558c <MX_TIM4_Init>
  MX_I2C1_Init();
 8003c1e:	f7ff ff35 	bl	8003a8c <MX_I2C1_Init>
  MX_TIM2_Init();
 8003c22:	f001 fc19 	bl	8005458 <MX_TIM2_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8003c26:	f000 fae1 	bl	80041ec <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */

	init_LCD();
 8003c2a:	f7fe fca1 	bl	8002570 <init_LCD>
  LcdUpdate();
  LcdClear_massive();
  HAL_Delay(3000); //WarmUP
	 */

	load_data_from_EEPROM();
 8003c2e:	f7ff fcdb 	bl	80035e8 <load_data_from_EEPROM>
	TMP117_Initialization(hi2c1);
 8003c32:	4c8c      	ldr	r4, [pc, #560]	; (8003e64 <main+0x2b4>)
 8003c34:	4668      	mov	r0, sp
 8003c36:	f104 0310 	add.w	r3, r4, #16
 8003c3a:	2244      	movs	r2, #68	; 0x44
 8003c3c:	4619      	mov	r1, r3
 8003c3e:	f007 f939 	bl	800aeb4 <memcpy>
 8003c42:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003c46:	f001 fde5 	bl	8005814 <TMP117_Initialization>
	DDS_Init();
 8003c4a:	f7fe f8c1 	bl	8001dd0 <DDS_Init>
	DAC_SendInit();
 8003c4e:	f7fd fe8b 	bl	8001968 <DAC_SendInit>
	DAC_Write(DAC_code);
 8003c52:	4b81      	ldr	r3, [pc, #516]	; (8003e58 <main+0x2a8>)
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	4618      	mov	r0, r3
 8003c58:	f7fd fe46 	bl	80018e8 <DAC_Write>

	HAL_TIM_Base_Start_IT(&htim3);
 8003c5c:	4882      	ldr	r0, [pc, #520]	; (8003e68 <main+0x2b8>)
 8003c5e:	f004 ff13 	bl	8008a88 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim2);
 8003c62:	4882      	ldr	r0, [pc, #520]	; (8003e6c <main+0x2bc>)
 8003c64:	f004 ff10 	bl	8008a88 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8003c68:	213c      	movs	r1, #60	; 0x3c
 8003c6a:	4881      	ldr	r0, [pc, #516]	; (8003e70 <main+0x2c0>)
 8003c6c:	f004 ffb4 	bl	8008bd8 <HAL_TIM_Encoder_Start>


	output_state(Output_off_STATE);
 8003c70:	2000      	movs	r0, #0
 8003c72:	f7fe fd87 	bl	8002784 <output_state>
	CPLD_control(CPLD_OFF_STATE);
 8003c76:	2000      	movs	r0, #0
 8003c78:	f7fd fda2 	bl	80017c0 <CPLD_control>

	send_answer_to_CDC(CLEAR_TYPE_1);
 8003c7c:	2004      	movs	r0, #4
 8003c7e:	f7ff f87d 	bl	8002d7c <send_answer_to_CDC>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		if(USB_CDC_End_Line_Received)
 8003c82:	4b7c      	ldr	r3, [pc, #496]	; (8003e74 <main+0x2c4>)
 8003c84:	781b      	ldrb	r3, [r3, #0]
 8003c86:	b2db      	uxtb	r3, r3
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d062      	beq.n	8003d52 <main+0x1a2>
		{
			uint8_t i=0,x=0;
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	71fb      	strb	r3, [r7, #7]
 8003c90:	2300      	movs	r3, #0
 8003c92:	71bb      	strb	r3, [r7, #6]
			USB_CDC_End_Line_Received=0;
 8003c94:	4b77      	ldr	r3, [pc, #476]	; (8003e74 <main+0x2c4>)
 8003c96:	2200      	movs	r2, #0
 8003c98:	701a      	strb	r2, [r3, #0]
			while (1) {
				if (i>=command_buffer_len) break;
 8003c9a:	79fb      	ldrb	r3, [r7, #7]
 8003c9c:	2b3f      	cmp	r3, #63	; 0x3f
 8003c9e:	d81a      	bhi.n	8003cd6 <main+0x126>
				if (CIRC_GBUF_POP(USB_rx_command_buffer,&command_buffer[i])) command_buffer[i]='\n';
 8003ca0:	79fb      	ldrb	r3, [r7, #7]
 8003ca2:	4a75      	ldr	r2, [pc, #468]	; (8003e78 <main+0x2c8>)
 8003ca4:	4413      	add	r3, r2
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	f7ff ff72 	bl	8003b90 <USB_rx_command_buffer_pop_refd>
 8003cac:	4603      	mov	r3, r0
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d003      	beq.n	8003cba <main+0x10a>
 8003cb2:	79fb      	ldrb	r3, [r7, #7]
 8003cb4:	4a70      	ldr	r2, [pc, #448]	; (8003e78 <main+0x2c8>)
 8003cb6:	210a      	movs	r1, #10
 8003cb8:	54d1      	strb	r1, [r2, r3]
				if (command_buffer[i]=='\n' || command_buffer[i]=='\r') break;
 8003cba:	79fb      	ldrb	r3, [r7, #7]
 8003cbc:	4a6e      	ldr	r2, [pc, #440]	; (8003e78 <main+0x2c8>)
 8003cbe:	5cd3      	ldrb	r3, [r2, r3]
 8003cc0:	2b0a      	cmp	r3, #10
 8003cc2:	d009      	beq.n	8003cd8 <main+0x128>
 8003cc4:	79fb      	ldrb	r3, [r7, #7]
 8003cc6:	4a6c      	ldr	r2, [pc, #432]	; (8003e78 <main+0x2c8>)
 8003cc8:	5cd3      	ldrb	r3, [r2, r3]
 8003cca:	2b0d      	cmp	r3, #13
 8003ccc:	d004      	beq.n	8003cd8 <main+0x128>
				i++;
 8003cce:	79fb      	ldrb	r3, [r7, #7]
 8003cd0:	3301      	adds	r3, #1
 8003cd2:	71fb      	strb	r3, [r7, #7]
				if (i>=command_buffer_len) break;
 8003cd4:	e7e1      	b.n	8003c9a <main+0xea>
 8003cd6:	bf00      	nop
			}
			i=0;
 8003cd8:	2300      	movs	r3, #0
 8003cda:	71fb      	strb	r3, [r7, #7]
			x=0;
 8003cdc:	2300      	movs	r3, #0
 8003cde:	71bb      	strb	r3, [r7, #6]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003ce0:	e017      	b.n	8003d12 <main+0x162>
			{
				if (command_buffer[i]=='\177') // Backspace
 8003ce2:	79fb      	ldrb	r3, [r7, #7]
 8003ce4:	4a64      	ldr	r2, [pc, #400]	; (8003e78 <main+0x2c8>)
 8003ce6:	5cd3      	ldrb	r3, [r2, r3]
 8003ce8:	2b7f      	cmp	r3, #127	; 0x7f
 8003cea:	d106      	bne.n	8003cfa <main+0x14a>
				{
					if(x>0)x--;
 8003cec:	79bb      	ldrb	r3, [r7, #6]
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d00c      	beq.n	8003d0c <main+0x15c>
 8003cf2:	79bb      	ldrb	r3, [r7, #6]
 8003cf4:	3b01      	subs	r3, #1
 8003cf6:	71bb      	strb	r3, [r7, #6]
 8003cf8:	e008      	b.n	8003d0c <main+0x15c>
				}
				else
				{
					command_buffer[x]=command_buffer[i];
 8003cfa:	79fa      	ldrb	r2, [r7, #7]
 8003cfc:	79bb      	ldrb	r3, [r7, #6]
 8003cfe:	495e      	ldr	r1, [pc, #376]	; (8003e78 <main+0x2c8>)
 8003d00:	5c89      	ldrb	r1, [r1, r2]
 8003d02:	4a5d      	ldr	r2, [pc, #372]	; (8003e78 <main+0x2c8>)
 8003d04:	54d1      	strb	r1, [r2, r3]
					x++;
 8003d06:	79bb      	ldrb	r3, [r7, #6]
 8003d08:	3301      	adds	r3, #1
 8003d0a:	71bb      	strb	r3, [r7, #6]
				}
				i++;
 8003d0c:	79fb      	ldrb	r3, [r7, #7]
 8003d0e:	3301      	adds	r3, #1
 8003d10:	71fb      	strb	r3, [r7, #7]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003d12:	79fb      	ldrb	r3, [r7, #7]
 8003d14:	4a58      	ldr	r2, [pc, #352]	; (8003e78 <main+0x2c8>)
 8003d16:	5cd3      	ldrb	r3, [r2, r3]
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d00a      	beq.n	8003d32 <main+0x182>
 8003d1c:	79fb      	ldrb	r3, [r7, #7]
 8003d1e:	2b3f      	cmp	r3, #63	; 0x3f
 8003d20:	d9df      	bls.n	8003ce2 <main+0x132>
			}
			while (x<command_buffer_len)
 8003d22:	e006      	b.n	8003d32 <main+0x182>
			{
				command_buffer[x]='\0';
 8003d24:	79bb      	ldrb	r3, [r7, #6]
 8003d26:	4a54      	ldr	r2, [pc, #336]	; (8003e78 <main+0x2c8>)
 8003d28:	2100      	movs	r1, #0
 8003d2a:	54d1      	strb	r1, [r2, r3]
				x++;
 8003d2c:	79bb      	ldrb	r3, [r7, #6]
 8003d2e:	3301      	adds	r3, #1
 8003d30:	71bb      	strb	r3, [r7, #6]
			while (x<command_buffer_len)
 8003d32:	79bb      	ldrb	r3, [r7, #6]
 8003d34:	2b3f      	cmp	r3, #63	; 0x3f
 8003d36:	d9f5      	bls.n	8003d24 <main+0x174>
			}
			command_buffer[command_buffer_len-1]='\0';
 8003d38:	4b4f      	ldr	r3, [pc, #316]	; (8003e78 <main+0x2c8>)
 8003d3a:	2200      	movs	r2, #0
 8003d3c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f

			Parsing_USB_command();
 8003d40:	f000 fade 	bl	8004300 <Parsing_USB_command>
			if(Display_status==0)Display_need_wakeup=1;
 8003d44:	4b4d      	ldr	r3, [pc, #308]	; (8003e7c <main+0x2cc>)
 8003d46:	781b      	ldrb	r3, [r3, #0]
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d102      	bne.n	8003d52 <main+0x1a2>
 8003d4c:	4b4c      	ldr	r3, [pc, #304]	; (8003e80 <main+0x2d0>)
 8003d4e:	2201      	movs	r2, #1
 8003d50:	701a      	strb	r2, [r3, #0]
		}

		if(Need_update_DDS)
 8003d52:	4b4c      	ldr	r3, [pc, #304]	; (8003e84 <main+0x2d4>)
 8003d54:	781b      	ldrb	r3, [r3, #0]
 8003d56:	2b00      	cmp	r3, #0
 8003d58:	d00d      	beq.n	8003d76 <main+0x1c6>
		{
			if(Ramp_dac_step_complete)
 8003d5a:	4b4b      	ldr	r3, [pc, #300]	; (8003e88 <main+0x2d8>)
 8003d5c:	781b      	ldrb	r3, [r3, #0]
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d007      	beq.n	8003d72 <main+0x1c2>
			{
				DDS_Update();
 8003d62:	f7fe f911 	bl	8001f88 <DDS_Update>
				Need_update_DDS=0;
 8003d66:	4b47      	ldr	r3, [pc, #284]	; (8003e84 <main+0x2d4>)
 8003d68:	2200      	movs	r2, #0
 8003d6a:	701a      	strb	r2, [r3, #0]
				Ramp_dac_step_complete=0;
 8003d6c:	4b46      	ldr	r3, [pc, #280]	; (8003e88 <main+0x2d8>)
 8003d6e:	2200      	movs	r2, #0
 8003d70:	701a      	strb	r2, [r3, #0]
			}
			DDS_Calculation();
 8003d72:	f7fd fef1 	bl	8001b58 <DDS_Calculation>
			//Recalculate_ramp_speed(SWEEP_MODE);

		}

		if(Need_off_output==1)
 8003d76:	4b45      	ldr	r3, [pc, #276]	; (8003e8c <main+0x2dc>)
 8003d78:	781b      	ldrb	r3, [r3, #0]
 8003d7a:	2b01      	cmp	r3, #1
 8003d7c:	d10a      	bne.n	8003d94 <main+0x1e4>
		{
			Push_start_button=10;
 8003d7e:	4b44      	ldr	r3, [pc, #272]	; (8003e90 <main+0x2e0>)
 8003d80:	220a      	movs	r2, #10
 8003d82:	701a      	strb	r2, [r3, #0]
			cmd_SWEEP_STOP();
 8003d84:	f7ff f8d0 	bl	8002f28 <cmd_SWEEP_STOP>
			output_state(Output_off_STATE);
 8003d88:	2000      	movs	r0, #0
 8003d8a:	f7fe fcfb 	bl	8002784 <output_state>
			Need_off_output=0;
 8003d8e:	4b3f      	ldr	r3, [pc, #252]	; (8003e8c <main+0x2dc>)
 8003d90:	2200      	movs	r2, #0
 8003d92:	701a      	strb	r2, [r3, #0]
		}

		if(Push_start_button>2 && Push_start_button<10)
 8003d94:	4b3e      	ldr	r3, [pc, #248]	; (8003e90 <main+0x2e0>)
 8003d96:	781b      	ldrb	r3, [r3, #0]
 8003d98:	2b02      	cmp	r3, #2
 8003d9a:	d921      	bls.n	8003de0 <main+0x230>
 8003d9c:	4b3c      	ldr	r3, [pc, #240]	; (8003e90 <main+0x2e0>)
 8003d9e:	781b      	ldrb	r3, [r3, #0]
 8003da0:	2b09      	cmp	r3, #9
 8003da2:	d81d      	bhi.n	8003de0 <main+0x230>
		{
			if(mode==VOLT_SCREEN)
 8003da4:	4b3b      	ldr	r3, [pc, #236]	; (8003e94 <main+0x2e4>)
 8003da6:	781b      	ldrb	r3, [r3, #0]
 8003da8:	2b05      	cmp	r3, #5
 8003daa:	d10d      	bne.n	8003dc8 <main+0x218>
			{
				if(Current_output_status==Output_off_STATE)
 8003dac:	4b3a      	ldr	r3, [pc, #232]	; (8003e98 <main+0x2e8>)
 8003dae:	781b      	ldrb	r3, [r3, #0]
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d105      	bne.n	8003dc0 <main+0x210>
				{
					cmd_SET_OUTPUT_VOLTAGE(Voltage);
 8003db4:	4b39      	ldr	r3, [pc, #228]	; (8003e9c <main+0x2ec>)
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	4618      	mov	r0, r3
 8003dba:	f7ff f8ef 	bl	8002f9c <cmd_SET_OUTPUT_VOLTAGE>
 8003dbe:	e00c      	b.n	8003dda <main+0x22a>
				}
				else
				{
					output_state(Output_off_STATE);
 8003dc0:	2000      	movs	r0, #0
 8003dc2:	f7fe fcdf 	bl	8002784 <output_state>
 8003dc6:	e008      	b.n	8003dda <main+0x22a>
				}
			}
			else
			{
				if(cfg.LDACMODE==0)
 8003dc8:	4b20      	ldr	r3, [pc, #128]	; (8003e4c <main+0x29c>)
 8003dca:	789b      	ldrb	r3, [r3, #2]
 8003dcc:	2b00      	cmp	r3, #0
 8003dce:	d102      	bne.n	8003dd6 <main+0x226>
				{
					cmd_SWEEP_START();
 8003dd0:	f7ff f89a 	bl	8002f08 <cmd_SWEEP_START>
 8003dd4:	e001      	b.n	8003dda <main+0x22a>
				}
				else
				{
					cmd_SWEEP_STOP();
 8003dd6:	f7ff f8a7 	bl	8002f28 <cmd_SWEEP_STOP>
				}
			}
			Push_start_button=10;
 8003dda:	4b2d      	ldr	r3, [pc, #180]	; (8003e90 <main+0x2e0>)
 8003ddc:	220a      	movs	r2, #10
 8003dde:	701a      	strb	r2, [r3, #0]
		}

		if(Need_update_Display && Display_status)
 8003de0:	4b2f      	ldr	r3, [pc, #188]	; (8003ea0 <main+0x2f0>)
 8003de2:	781b      	ldrb	r3, [r3, #0]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d01e      	beq.n	8003e26 <main+0x276>
 8003de8:	4b24      	ldr	r3, [pc, #144]	; (8003e7c <main+0x2cc>)
 8003dea:	781b      	ldrb	r3, [r3, #0]
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	d01a      	beq.n	8003e26 <main+0x276>
		{
			switch(mode)
 8003df0:	4b28      	ldr	r3, [pc, #160]	; (8003e94 <main+0x2e4>)
 8003df2:	781b      	ldrb	r3, [r3, #0]
 8003df4:	2b05      	cmp	r3, #5
 8003df6:	d00e      	beq.n	8003e16 <main+0x266>
 8003df8:	2b05      	cmp	r3, #5
 8003dfa:	dc10      	bgt.n	8003e1e <main+0x26e>
 8003dfc:	2b03      	cmp	r3, #3
 8003dfe:	d002      	beq.n	8003e06 <main+0x256>
 8003e00:	2b04      	cmp	r3, #4
 8003e02:	d004      	beq.n	8003e0e <main+0x25e>
 8003e04:	e00b      	b.n	8003e1e <main+0x26e>
			{
			//----------------------------------------------------------//
			case dU_dt_SCREEN:
			{
				display_screen(dU_dt_SCREEN);
 8003e06:	2003      	movs	r0, #3
 8003e08:	f7fe fdce 	bl	80029a8 <display_screen>
			}
			break;
 8003e0c:	e007      	b.n	8003e1e <main+0x26e>
			case AMP_SCREEN:
				display_screen(AMP_SCREEN);
 8003e0e:	2004      	movs	r0, #4
 8003e10:	f7fe fdca 	bl	80029a8 <display_screen>
			break;
 8003e14:	e003      	b.n	8003e1e <main+0x26e>
			case VOLT_SCREEN:
				display_screen(VOLT_SCREEN);
 8003e16:	2005      	movs	r0, #5
 8003e18:	f7fe fdc6 	bl	80029a8 <display_screen>
			break;
 8003e1c:	bf00      	nop
			}
			LcdUpdate();
 8003e1e:	f7fe f97b 	bl	8002118 <LcdUpdate>
			LcdClear_massive();
 8003e22:	f7fe f9b3 	bl	800218c <LcdClear_massive>
		}
		if(Enc_Counter!=0)
 8003e26:	4b1f      	ldr	r3, [pc, #124]	; (8003ea4 <main+0x2f4>)
 8003e28:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	f000 8135 	beq.w	800409c <main+0x4ec>
		{
		switch(mode)
 8003e32:	4b18      	ldr	r3, [pc, #96]	; (8003e94 <main+0x2e4>)
 8003e34:	781b      	ldrb	r3, [r3, #0]
 8003e36:	2b05      	cmp	r3, #5
 8003e38:	f000 80b4 	beq.w	8003fa4 <main+0x3f4>
 8003e3c:	2b05      	cmp	r3, #5
 8003e3e:	f300 812e 	bgt.w	800409e <main+0x4ee>
 8003e42:	2b03      	cmp	r3, #3
 8003e44:	d030      	beq.n	8003ea8 <main+0x2f8>
 8003e46:	2b04      	cmp	r3, #4
			{
				Recalculate_ramp_speed(AMP_SCREEN, round((amp_target_speed+Enc_Counter*1E-3)*1E3)/1E3);
			}
			Enc_Counter=0;
*/
		break;
 8003e48:	e129      	b.n	800409e <main+0x4ee>
 8003e4a:	bf00      	nop
 8003e4c:	200007e0 	.word	0x200007e0
 8003e50:	200007f4 	.word	0x200007f4
 8003e54:	3dcccccd 	.word	0x3dcccccd
 8003e58:	20000810 	.word	0x20000810
 8003e5c:	0007ffff 	.word	0x0007ffff
 8003e60:	20000814 	.word	0x20000814
 8003e64:	200006f8 	.word	0x200006f8
 8003e68:	20000914 	.word	0x20000914
 8003e6c:	200008d4 	.word	0x200008d4
 8003e70:	20000954 	.word	0x20000954
 8003e74:	200006b4 	.word	0x200006b4
 8003e78:	200006b8 	.word	0x200006b8
 8003e7c:	20000816 	.word	0x20000816
 8003e80:	20000020 	.word	0x20000020
 8003e84:	20000818 	.word	0x20000818
 8003e88:	20000819 	.word	0x20000819
 8003e8c:	2000081a 	.word	0x2000081a
 8003e90:	2000081b 	.word	0x2000081b
 8003e94:	20000018 	.word	0x20000018
 8003e98:	2000080c 	.word	0x2000080c
 8003e9c:	200007fc 	.word	0x200007fc
 8003ea0:	20000817 	.word	0x20000817
 8003ea4:	20000790 	.word	0x20000790
			if(Enc_Counter>2 || Enc_Counter<-2)
 8003ea8:	4b9d      	ldr	r3, [pc, #628]	; (8004120 <main+0x570>)
 8003eaa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003eae:	2b02      	cmp	r3, #2
 8003eb0:	dc05      	bgt.n	8003ebe <main+0x30e>
 8003eb2:	4b9b      	ldr	r3, [pc, #620]	; (8004120 <main+0x570>)
 8003eb4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003eb8:	f113 0f02 	cmn.w	r3, #2
 8003ebc:	da37      	bge.n	8003f2e <main+0x37e>
				Recalculate_ramp_speed(dU_dt_SCREEN, round((ramp_target_speed+Enc_Counter*1E-2)*1E2)/1E2);
 8003ebe:	4b99      	ldr	r3, [pc, #612]	; (8004124 <main+0x574>)
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	4618      	mov	r0, r3
 8003ec4:	f7fc fad2 	bl	800046c <__aeabi_f2d>
 8003ec8:	4604      	mov	r4, r0
 8003eca:	460d      	mov	r5, r1
 8003ecc:	4b94      	ldr	r3, [pc, #592]	; (8004120 <main+0x570>)
 8003ece:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003ed2:	4618      	mov	r0, r3
 8003ed4:	f7fc fab8 	bl	8000448 <__aeabi_i2d>
 8003ed8:	a38b      	add	r3, pc, #556	; (adr r3, 8004108 <main+0x558>)
 8003eda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ede:	f7fc fb1d 	bl	800051c <__aeabi_dmul>
 8003ee2:	4602      	mov	r2, r0
 8003ee4:	460b      	mov	r3, r1
 8003ee6:	4620      	mov	r0, r4
 8003ee8:	4629      	mov	r1, r5
 8003eea:	f7fc f961 	bl	80001b0 <__adddf3>
 8003eee:	4602      	mov	r2, r0
 8003ef0:	460b      	mov	r3, r1
 8003ef2:	4610      	mov	r0, r2
 8003ef4:	4619      	mov	r1, r3
 8003ef6:	f04f 0200 	mov.w	r2, #0
 8003efa:	4b8b      	ldr	r3, [pc, #556]	; (8004128 <main+0x578>)
 8003efc:	f7fc fb0e 	bl	800051c <__aeabi_dmul>
 8003f00:	4602      	mov	r2, r0
 8003f02:	460b      	mov	r3, r1
 8003f04:	4610      	mov	r0, r2
 8003f06:	4619      	mov	r1, r3
 8003f08:	f006 ff62 	bl	800add0 <round>
 8003f0c:	f04f 0200 	mov.w	r2, #0
 8003f10:	4b85      	ldr	r3, [pc, #532]	; (8004128 <main+0x578>)
 8003f12:	f7fc fc2d 	bl	8000770 <__aeabi_ddiv>
 8003f16:	4602      	mov	r2, r0
 8003f18:	460b      	mov	r3, r1
 8003f1a:	4610      	mov	r0, r2
 8003f1c:	4619      	mov	r1, r3
 8003f1e:	f7fc fdf5 	bl	8000b0c <__aeabi_d2f>
 8003f22:	4603      	mov	r3, r0
 8003f24:	4619      	mov	r1, r3
 8003f26:	2003      	movs	r0, #3
 8003f28:	f7ff f982 	bl	8003230 <Recalculate_ramp_speed>
 8003f2c:	e036      	b.n	8003f9c <main+0x3ec>
				Recalculate_ramp_speed(dU_dt_SCREEN, round((ramp_target_speed+Enc_Counter*1E-3)*1E3)/1E3);
 8003f2e:	4b7d      	ldr	r3, [pc, #500]	; (8004124 <main+0x574>)
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	4618      	mov	r0, r3
 8003f34:	f7fc fa9a 	bl	800046c <__aeabi_f2d>
 8003f38:	4604      	mov	r4, r0
 8003f3a:	460d      	mov	r5, r1
 8003f3c:	4b78      	ldr	r3, [pc, #480]	; (8004120 <main+0x570>)
 8003f3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003f42:	4618      	mov	r0, r3
 8003f44:	f7fc fa80 	bl	8000448 <__aeabi_i2d>
 8003f48:	a371      	add	r3, pc, #452	; (adr r3, 8004110 <main+0x560>)
 8003f4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f4e:	f7fc fae5 	bl	800051c <__aeabi_dmul>
 8003f52:	4602      	mov	r2, r0
 8003f54:	460b      	mov	r3, r1
 8003f56:	4620      	mov	r0, r4
 8003f58:	4629      	mov	r1, r5
 8003f5a:	f7fc f929 	bl	80001b0 <__adddf3>
 8003f5e:	4602      	mov	r2, r0
 8003f60:	460b      	mov	r3, r1
 8003f62:	4610      	mov	r0, r2
 8003f64:	4619      	mov	r1, r3
 8003f66:	f04f 0200 	mov.w	r2, #0
 8003f6a:	4b70      	ldr	r3, [pc, #448]	; (800412c <main+0x57c>)
 8003f6c:	f7fc fad6 	bl	800051c <__aeabi_dmul>
 8003f70:	4602      	mov	r2, r0
 8003f72:	460b      	mov	r3, r1
 8003f74:	4610      	mov	r0, r2
 8003f76:	4619      	mov	r1, r3
 8003f78:	f006 ff2a 	bl	800add0 <round>
 8003f7c:	f04f 0200 	mov.w	r2, #0
 8003f80:	4b6a      	ldr	r3, [pc, #424]	; (800412c <main+0x57c>)
 8003f82:	f7fc fbf5 	bl	8000770 <__aeabi_ddiv>
 8003f86:	4602      	mov	r2, r0
 8003f88:	460b      	mov	r3, r1
 8003f8a:	4610      	mov	r0, r2
 8003f8c:	4619      	mov	r1, r3
 8003f8e:	f7fc fdbd 	bl	8000b0c <__aeabi_d2f>
 8003f92:	4603      	mov	r3, r0
 8003f94:	4619      	mov	r1, r3
 8003f96:	2003      	movs	r0, #3
 8003f98:	f7ff f94a 	bl	8003230 <Recalculate_ramp_speed>
			Enc_Counter=0;
 8003f9c:	4b60      	ldr	r3, [pc, #384]	; (8004120 <main+0x570>)
 8003f9e:	2200      	movs	r2, #0
 8003fa0:	801a      	strh	r2, [r3, #0]
		break;
 8003fa2:	e07c      	b.n	800409e <main+0x4ee>
		case VOLT_SCREEN:
			if(Enc_Counter>4 || Enc_Counter<-4)
 8003fa4:	4b5e      	ldr	r3, [pc, #376]	; (8004120 <main+0x570>)
 8003fa6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003faa:	2b04      	cmp	r3, #4
 8003fac:	dc05      	bgt.n	8003fba <main+0x40a>
 8003fae:	4b5c      	ldr	r3, [pc, #368]	; (8004120 <main+0x570>)
 8003fb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003fb4:	f113 0f04 	cmn.w	r3, #4
 8003fb8:	da36      	bge.n	8004028 <main+0x478>
			{
				cmd_SET_OUTPUT_VOLTAGE(round((Voltage+Enc_Counter*1E-1)*1E1)/1E1);
 8003fba:	4b5d      	ldr	r3, [pc, #372]	; (8004130 <main+0x580>)
 8003fbc:	681b      	ldr	r3, [r3, #0]
 8003fbe:	4618      	mov	r0, r3
 8003fc0:	f7fc fa54 	bl	800046c <__aeabi_f2d>
 8003fc4:	4604      	mov	r4, r0
 8003fc6:	460d      	mov	r5, r1
 8003fc8:	4b55      	ldr	r3, [pc, #340]	; (8004120 <main+0x570>)
 8003fca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003fce:	4618      	mov	r0, r3
 8003fd0:	f7fc fa3a 	bl	8000448 <__aeabi_i2d>
 8003fd4:	a350      	add	r3, pc, #320	; (adr r3, 8004118 <main+0x568>)
 8003fd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fda:	f7fc fa9f 	bl	800051c <__aeabi_dmul>
 8003fde:	4602      	mov	r2, r0
 8003fe0:	460b      	mov	r3, r1
 8003fe2:	4620      	mov	r0, r4
 8003fe4:	4629      	mov	r1, r5
 8003fe6:	f7fc f8e3 	bl	80001b0 <__adddf3>
 8003fea:	4602      	mov	r2, r0
 8003fec:	460b      	mov	r3, r1
 8003fee:	4610      	mov	r0, r2
 8003ff0:	4619      	mov	r1, r3
 8003ff2:	f04f 0200 	mov.w	r2, #0
 8003ff6:	4b4f      	ldr	r3, [pc, #316]	; (8004134 <main+0x584>)
 8003ff8:	f7fc fa90 	bl	800051c <__aeabi_dmul>
 8003ffc:	4602      	mov	r2, r0
 8003ffe:	460b      	mov	r3, r1
 8004000:	4610      	mov	r0, r2
 8004002:	4619      	mov	r1, r3
 8004004:	f006 fee4 	bl	800add0 <round>
 8004008:	f04f 0200 	mov.w	r2, #0
 800400c:	4b49      	ldr	r3, [pc, #292]	; (8004134 <main+0x584>)
 800400e:	f7fc fbaf 	bl	8000770 <__aeabi_ddiv>
 8004012:	4602      	mov	r2, r0
 8004014:	460b      	mov	r3, r1
 8004016:	4610      	mov	r0, r2
 8004018:	4619      	mov	r1, r3
 800401a:	f7fc fd77 	bl	8000b0c <__aeabi_d2f>
 800401e:	4603      	mov	r3, r0
 8004020:	4618      	mov	r0, r3
 8004022:	f7fe ffbb 	bl	8002f9c <cmd_SET_OUTPUT_VOLTAGE>
 8004026:	e035      	b.n	8004094 <main+0x4e4>
			}
			else
			{
				cmd_SET_OUTPUT_VOLTAGE(round((Voltage+Enc_Counter*1E-3)*1E3)/1E3);
 8004028:	4b41      	ldr	r3, [pc, #260]	; (8004130 <main+0x580>)
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	4618      	mov	r0, r3
 800402e:	f7fc fa1d 	bl	800046c <__aeabi_f2d>
 8004032:	4604      	mov	r4, r0
 8004034:	460d      	mov	r5, r1
 8004036:	4b3a      	ldr	r3, [pc, #232]	; (8004120 <main+0x570>)
 8004038:	f9b3 3000 	ldrsh.w	r3, [r3]
 800403c:	4618      	mov	r0, r3
 800403e:	f7fc fa03 	bl	8000448 <__aeabi_i2d>
 8004042:	a333      	add	r3, pc, #204	; (adr r3, 8004110 <main+0x560>)
 8004044:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004048:	f7fc fa68 	bl	800051c <__aeabi_dmul>
 800404c:	4602      	mov	r2, r0
 800404e:	460b      	mov	r3, r1
 8004050:	4620      	mov	r0, r4
 8004052:	4629      	mov	r1, r5
 8004054:	f7fc f8ac 	bl	80001b0 <__adddf3>
 8004058:	4602      	mov	r2, r0
 800405a:	460b      	mov	r3, r1
 800405c:	4610      	mov	r0, r2
 800405e:	4619      	mov	r1, r3
 8004060:	f04f 0200 	mov.w	r2, #0
 8004064:	4b31      	ldr	r3, [pc, #196]	; (800412c <main+0x57c>)
 8004066:	f7fc fa59 	bl	800051c <__aeabi_dmul>
 800406a:	4602      	mov	r2, r0
 800406c:	460b      	mov	r3, r1
 800406e:	4610      	mov	r0, r2
 8004070:	4619      	mov	r1, r3
 8004072:	f006 fead 	bl	800add0 <round>
 8004076:	f04f 0200 	mov.w	r2, #0
 800407a:	4b2c      	ldr	r3, [pc, #176]	; (800412c <main+0x57c>)
 800407c:	f7fc fb78 	bl	8000770 <__aeabi_ddiv>
 8004080:	4602      	mov	r2, r0
 8004082:	460b      	mov	r3, r1
 8004084:	4610      	mov	r0, r2
 8004086:	4619      	mov	r1, r3
 8004088:	f7fc fd40 	bl	8000b0c <__aeabi_d2f>
 800408c:	4603      	mov	r3, r0
 800408e:	4618      	mov	r0, r3
 8004090:	f7fe ff84 	bl	8002f9c <cmd_SET_OUTPUT_VOLTAGE>
			}
			Enc_Counter=0;
 8004094:	4b22      	ldr	r3, [pc, #136]	; (8004120 <main+0x570>)
 8004096:	2200      	movs	r2, #0
 8004098:	801a      	strh	r2, [r3, #0]
		break;
 800409a:	e000      	b.n	800409e <main+0x4ee>
		}
		}
 800409c:	bf00      	nop
		if(Display_need_wakeup)
 800409e:	4b26      	ldr	r3, [pc, #152]	; (8004138 <main+0x588>)
 80040a0:	781b      	ldrb	r3, [r3, #0]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d00b      	beq.n	80040be <main+0x50e>
		{
			Display_need_wakeup=0;
 80040a6:	4b24      	ldr	r3, [pc, #144]	; (8004138 <main+0x588>)
 80040a8:	2200      	movs	r2, #0
 80040aa:	701a      	strb	r2, [r3, #0]
			Poweron_LCD();
 80040ac:	f7fe fa4e 	bl	800254c <Poweron_LCD>
			Display_timeout=0;
 80040b0:	4b22      	ldr	r3, [pc, #136]	; (800413c <main+0x58c>)
 80040b2:	2200      	movs	r2, #0
 80040b4:	601a      	str	r2, [r3, #0]
			Need_update_Display=1;
 80040b6:	4b22      	ldr	r3, [pc, #136]	; (8004140 <main+0x590>)
 80040b8:	2201      	movs	r2, #1
 80040ba:	701a      	strb	r2, [r3, #0]
 80040bc:	e5e1      	b.n	8003c82 <main+0xd2>
		} else
		{
			if(Display_status==1) // If display on
 80040be:	4b21      	ldr	r3, [pc, #132]	; (8004144 <main+0x594>)
 80040c0:	781b      	ldrb	r3, [r3, #0]
 80040c2:	2b01      	cmp	r3, #1
 80040c4:	d119      	bne.n	80040fa <main+0x54a>
			{
				// 1 hour timeout if output is off
				// 1 day timeout if output is on
				if((Display_timeout>72000 && Current_output_status==Output_off_STATE) || (Display_timeout>1728000 && Current_output_status!=Output_off_STATE))
 80040c6:	4b1d      	ldr	r3, [pc, #116]	; (800413c <main+0x58c>)
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	4a1f      	ldr	r2, [pc, #124]	; (8004148 <main+0x598>)
 80040cc:	4293      	cmp	r3, r2
 80040ce:	d903      	bls.n	80040d8 <main+0x528>
 80040d0:	4b1e      	ldr	r3, [pc, #120]	; (800414c <main+0x59c>)
 80040d2:	781b      	ldrb	r3, [r3, #0]
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d00a      	beq.n	80040ee <main+0x53e>
 80040d8:	4b18      	ldr	r3, [pc, #96]	; (800413c <main+0x58c>)
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	4a1c      	ldr	r2, [pc, #112]	; (8004150 <main+0x5a0>)
 80040de:	4293      	cmp	r3, r2
 80040e0:	f67f adcf 	bls.w	8003c82 <main+0xd2>
 80040e4:	4b19      	ldr	r3, [pc, #100]	; (800414c <main+0x59c>)
 80040e6:	781b      	ldrb	r3, [r3, #0]
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	f43f adca 	beq.w	8003c82 <main+0xd2>
				{
					Poweroff_LCD();
 80040ee:	f7fe fa1b 	bl	8002528 <Poweroff_LCD>
					Display_timeout=0;
 80040f2:	4b12      	ldr	r3, [pc, #72]	; (800413c <main+0x58c>)
 80040f4:	2200      	movs	r2, #0
 80040f6:	601a      	str	r2, [r3, #0]
 80040f8:	e5c3      	b.n	8003c82 <main+0xd2>
				}
			} else Display_timeout=0;
 80040fa:	4b10      	ldr	r3, [pc, #64]	; (800413c <main+0x58c>)
 80040fc:	2200      	movs	r2, #0
 80040fe:	601a      	str	r2, [r3, #0]
		if(USB_CDC_End_Line_Received)
 8004100:	e5bf      	b.n	8003c82 <main+0xd2>
 8004102:	bf00      	nop
 8004104:	f3af 8000 	nop.w
 8004108:	47ae147b 	.word	0x47ae147b
 800410c:	3f847ae1 	.word	0x3f847ae1
 8004110:	d2f1a9fc 	.word	0xd2f1a9fc
 8004114:	3f50624d 	.word	0x3f50624d
 8004118:	9999999a 	.word	0x9999999a
 800411c:	3fb99999 	.word	0x3fb99999
 8004120:	20000790 	.word	0x20000790
 8004124:	20000010 	.word	0x20000010
 8004128:	40590000 	.word	0x40590000
 800412c:	408f4000 	.word	0x408f4000
 8004130:	200007fc 	.word	0x200007fc
 8004134:	40240000 	.word	0x40240000
 8004138:	20000020 	.word	0x20000020
 800413c:	20000794 	.word	0x20000794
 8004140:	20000817 	.word	0x20000817
 8004144:	20000816 	.word	0x20000816
 8004148:	00011940 	.word	0x00011940
 800414c:	2000080c 	.word	0x2000080c
 8004150:	001a5e00 	.word	0x001a5e00

08004154 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004154:	b580      	push	{r7, lr}
 8004156:	b092      	sub	sp, #72	; 0x48
 8004158:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800415a:	f107 0314 	add.w	r3, r7, #20
 800415e:	2234      	movs	r2, #52	; 0x34
 8004160:	2100      	movs	r1, #0
 8004162:	4618      	mov	r0, r3
 8004164:	f006 feb4 	bl	800aed0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004168:	463b      	mov	r3, r7
 800416a:	2200      	movs	r2, #0
 800416c:	601a      	str	r2, [r3, #0]
 800416e:	605a      	str	r2, [r3, #4]
 8004170:	609a      	str	r2, [r3, #8]
 8004172:	60da      	str	r2, [r3, #12]
 8004174:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8004176:	4b1c      	ldr	r3, [pc, #112]	; (80041e8 <SystemClock_Config+0x94>)
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 800417e:	4a1a      	ldr	r2, [pc, #104]	; (80041e8 <SystemClock_Config+0x94>)
 8004180:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004184:	6013      	str	r3, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8004186:	2301      	movs	r3, #1
 8004188:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800418a:	2301      	movs	r3, #1
 800418c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800418e:	2302      	movs	r3, #2
 8004190:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8004192:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004196:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8004198:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800419c:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 800419e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 80041a2:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80041a4:	f107 0314 	add.w	r3, r7, #20
 80041a8:	4618      	mov	r0, r3
 80041aa:	f003 fb63 	bl	8007874 <HAL_RCC_OscConfig>
 80041ae:	4603      	mov	r3, r0
 80041b0:	2b00      	cmp	r3, #0
 80041b2:	d001      	beq.n	80041b8 <SystemClock_Config+0x64>
  {
    Error_Handler();
 80041b4:	f000 fee8 	bl	8004f88 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80041b8:	230f      	movs	r3, #15
 80041ba:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80041bc:	2303      	movs	r3, #3
 80041be:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80041c0:	2300      	movs	r3, #0
 80041c2:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80041c4:	2300      	movs	r3, #0
 80041c6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80041c8:	2300      	movs	r3, #0
 80041ca:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80041cc:	463b      	mov	r3, r7
 80041ce:	2101      	movs	r1, #1
 80041d0:	4618      	mov	r0, r3
 80041d2:	f003 fdaf 	bl	8007d34 <HAL_RCC_ClockConfig>
 80041d6:	4603      	mov	r3, r0
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d001      	beq.n	80041e0 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 80041dc:	f000 fed4 	bl	8004f88 <Error_Handler>
  }
}
 80041e0:	bf00      	nop
 80041e2:	3748      	adds	r7, #72	; 0x48
 80041e4:	46bd      	mov	sp, r7
 80041e6:	bd80      	pop	{r7, pc}
 80041e8:	40007000 	.word	0x40007000

080041ec <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 80041ec:	b580      	push	{r7, lr}
 80041ee:	af00      	add	r7, sp, #0
  /* EXTI9_5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80041f0:	2200      	movs	r2, #0
 80041f2:	2100      	movs	r1, #0
 80041f4:	2017      	movs	r0, #23
 80041f6:	f001 fbd1 	bl	800599c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80041fa:	2017      	movs	r0, #23
 80041fc:	f001 fc0c 	bl	8005a18 <HAL_NVIC_EnableIRQ>
}
 8004200:	bf00      	nop
 8004202:	bd80      	pop	{r7, pc}

08004204 <HAL_TIM_PeriodElapsedCallback>:
//==============================================================================================


// Callback: timer has rolled over
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8004204:	b580      	push	{r7, lr}
 8004206:	b082      	sub	sp, #8
 8004208:	af00      	add	r7, sp, #0
 800420a:	6078      	str	r0, [r7, #4]
	if (htim == &htim3 )// INL correction, each 500ms
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	4a30      	ldr	r2, [pc, #192]	; (80042d0 <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8004210:	4293      	cmp	r3, r2
 8004212:	d106      	bne.n	8004222 <HAL_TIM_PeriodElapsedCallback+0x1e>
	{
		if(cfg.LDACMODE==1)Need_update_DDS=1;
 8004214:	4b2f      	ldr	r3, [pc, #188]	; (80042d4 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8004216:	789b      	ldrb	r3, [r3, #2]
 8004218:	2b01      	cmp	r3, #1
 800421a:	d102      	bne.n	8004222 <HAL_TIM_PeriodElapsedCallback+0x1e>
 800421c:	4b2e      	ldr	r3, [pc, #184]	; (80042d8 <HAL_TIM_PeriodElapsedCallback+0xd4>)
 800421e:	2201      	movs	r2, #1
 8004220:	701a      	strb	r2, [r3, #0]
	}

	if (htim == &htim2 )//User interface workload, each 50ms
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	4a2d      	ldr	r2, [pc, #180]	; (80042dc <HAL_TIM_PeriodElapsedCallback+0xd8>)
 8004226:	4293      	cmp	r3, r2
 8004228:	d14e      	bne.n	80042c8 <HAL_TIM_PeriodElapsedCallback+0xc4>
	{
		Need_update_Display=1;
 800422a:	4b2d      	ldr	r3, [pc, #180]	; (80042e0 <HAL_TIM_PeriodElapsedCallback+0xdc>)
 800422c:	2201      	movs	r2, #1
 800422e:	701a      	strb	r2, [r3, #0]
		Display_timeout++;
 8004230:	4b2c      	ldr	r3, [pc, #176]	; (80042e4 <HAL_TIM_PeriodElapsedCallback+0xe0>)
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	3301      	adds	r3, #1
 8004236:	4a2b      	ldr	r2, [pc, #172]	; (80042e4 <HAL_TIM_PeriodElapsedCallback+0xe0>)
 8004238:	6013      	str	r3, [r2, #0]
		if(Push_start_button!=0)Push_start_button++;
 800423a:	4b2b      	ldr	r3, [pc, #172]	; (80042e8 <HAL_TIM_PeriodElapsedCallback+0xe4>)
 800423c:	781b      	ldrb	r3, [r3, #0]
 800423e:	2b00      	cmp	r3, #0
 8004240:	d005      	beq.n	800424e <HAL_TIM_PeriodElapsedCallback+0x4a>
 8004242:	4b29      	ldr	r3, [pc, #164]	; (80042e8 <HAL_TIM_PeriodElapsedCallback+0xe4>)
 8004244:	781b      	ldrb	r3, [r3, #0]
 8004246:	3301      	adds	r3, #1
 8004248:	b2da      	uxtb	r2, r3
 800424a:	4b27      	ldr	r3, [pc, #156]	; (80042e8 <HAL_TIM_PeriodElapsedCallback+0xe4>)
 800424c:	701a      	strb	r2, [r3, #0]
		if(Push_start_button>40)Push_start_button=0;
 800424e:	4b26      	ldr	r3, [pc, #152]	; (80042e8 <HAL_TIM_PeriodElapsedCallback+0xe4>)
 8004250:	781b      	ldrb	r3, [r3, #0]
 8004252:	2b28      	cmp	r3, #40	; 0x28
 8004254:	d902      	bls.n	800425c <HAL_TIM_PeriodElapsedCallback+0x58>
 8004256:	4b24      	ldr	r3, [pc, #144]	; (80042e8 <HAL_TIM_PeriodElapsedCallback+0xe4>)
 8004258:	2200      	movs	r2, #0
 800425a:	701a      	strb	r2, [r3, #0]
		Enc_Counter+=((int16_t)TIM4->CNT)/2;
 800425c:	4b23      	ldr	r3, [pc, #140]	; (80042ec <HAL_TIM_PeriodElapsedCallback+0xe8>)
 800425e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004260:	b21b      	sxth	r3, r3
 8004262:	0fda      	lsrs	r2, r3, #31
 8004264:	4413      	add	r3, r2
 8004266:	105b      	asrs	r3, r3, #1
 8004268:	b21b      	sxth	r3, r3
 800426a:	b29a      	uxth	r2, r3
 800426c:	4b20      	ldr	r3, [pc, #128]	; (80042f0 <HAL_TIM_PeriodElapsedCallback+0xec>)
 800426e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004272:	b29b      	uxth	r3, r3
 8004274:	4413      	add	r3, r2
 8004276:	b29b      	uxth	r3, r3
 8004278:	b21a      	sxth	r2, r3
 800427a:	4b1d      	ldr	r3, [pc, #116]	; (80042f0 <HAL_TIM_PeriodElapsedCallback+0xec>)
 800427c:	801a      	strh	r2, [r3, #0]
		TIM4->CNT = (uint16_t)(((int16_t)TIM4->CNT) % 2);
 800427e:	4b1b      	ldr	r3, [pc, #108]	; (80042ec <HAL_TIM_PeriodElapsedCallback+0xe8>)
 8004280:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004282:	b21b      	sxth	r3, r3
 8004284:	2b00      	cmp	r3, #0
 8004286:	f003 0301 	and.w	r3, r3, #1
 800428a:	bfb8      	it	lt
 800428c:	425b      	neglt	r3, r3
 800428e:	b21b      	sxth	r3, r3
 8004290:	b29a      	uxth	r2, r3
 8004292:	4b16      	ldr	r3, [pc, #88]	; (80042ec <HAL_TIM_PeriodElapsedCallback+0xe8>)
 8004294:	625a      	str	r2, [r3, #36]	; 0x24
		if(!HAL_GPIO_ReadPin(Start_button_GPIO_Port, Start_button_Pin))
 8004296:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800429a:	4816      	ldr	r0, [pc, #88]	; (80042f4 <HAL_TIM_PeriodElapsedCallback+0xf0>)
 800429c:	f001 fea4 	bl	8005fe8 <HAL_GPIO_ReadPin>
 80042a0:	4603      	mov	r3, r0
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d106      	bne.n	80042b4 <HAL_TIM_PeriodElapsedCallback+0xb0>
		{
			Hold_start_button++;
 80042a6:	4b14      	ldr	r3, [pc, #80]	; (80042f8 <HAL_TIM_PeriodElapsedCallback+0xf4>)
 80042a8:	781b      	ldrb	r3, [r3, #0]
 80042aa:	3301      	adds	r3, #1
 80042ac:	b2da      	uxtb	r2, r3
 80042ae:	4b12      	ldr	r3, [pc, #72]	; (80042f8 <HAL_TIM_PeriodElapsedCallback+0xf4>)
 80042b0:	701a      	strb	r2, [r3, #0]
 80042b2:	e002      	b.n	80042ba <HAL_TIM_PeriodElapsedCallback+0xb6>
		}
		else
		{
			Hold_start_button=0;
 80042b4:	4b10      	ldr	r3, [pc, #64]	; (80042f8 <HAL_TIM_PeriodElapsedCallback+0xf4>)
 80042b6:	2200      	movs	r2, #0
 80042b8:	701a      	strb	r2, [r3, #0]
		}
		if(Hold_start_button>60)
 80042ba:	4b0f      	ldr	r3, [pc, #60]	; (80042f8 <HAL_TIM_PeriodElapsedCallback+0xf4>)
 80042bc:	781b      	ldrb	r3, [r3, #0]
 80042be:	2b3c      	cmp	r3, #60	; 0x3c
 80042c0:	d902      	bls.n	80042c8 <HAL_TIM_PeriodElapsedCallback+0xc4>
		{
			Need_off_output=1;
 80042c2:	4b0e      	ldr	r3, [pc, #56]	; (80042fc <HAL_TIM_PeriodElapsedCallback+0xf8>)
 80042c4:	2201      	movs	r2, #1
 80042c6:	701a      	strb	r2, [r3, #0]
		}


	}

}
 80042c8:	bf00      	nop
 80042ca:	3708      	adds	r7, #8
 80042cc:	46bd      	mov	sp, r7
 80042ce:	bd80      	pop	{r7, pc}
 80042d0:	20000914 	.word	0x20000914
 80042d4:	200007e0 	.word	0x200007e0
 80042d8:	20000818 	.word	0x20000818
 80042dc:	200008d4 	.word	0x200008d4
 80042e0:	20000817 	.word	0x20000817
 80042e4:	20000794 	.word	0x20000794
 80042e8:	2000081b 	.word	0x2000081b
 80042ec:	40000800 	.word	0x40000800
 80042f0:	20000790 	.word	0x20000790
 80042f4:	40020800 	.word	0x40020800
 80042f8:	2000081c 	.word	0x2000081c
 80042fc:	2000081a 	.word	0x2000081a

08004300 <Parsing_USB_command>:
	if(GPIO_Pin == Start_button_Pin)
		if(Push_start_button==0)Push_start_button=1;
}

void Parsing_USB_command(void)
{
 8004300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004302:	b0b7      	sub	sp, #220	; 0xdc
 8004304:	af12      	add	r7, sp, #72	; 0x48
	//char *found;
	char decoded_string_1[command_buffer_len];
	char decoded_string_2[command_buffer_len];
	int num_of_cap;
	float f_value,f_value2;
	uint8_t cdc_counter=0;
 8004306:	2300      	movs	r3, #0
 8004308:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f

	if(sscanf((char *)command_buffer,"%s", decoded_string_1)!=1)
 800430c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004310:	461a      	mov	r2, r3
 8004312:	49ca      	ldr	r1, [pc, #808]	; (800463c <Parsing_USB_command+0x33c>)
 8004314:	48ca      	ldr	r0, [pc, #808]	; (8004640 <Parsing_USB_command+0x340>)
 8004316:	f007 fc75 	bl	800bc04 <siscanf>
 800431a:	4603      	mov	r3, r0
 800431c:	2b01      	cmp	r3, #1
 800431e:	d004      	beq.n	800432a <Parsing_USB_command+0x2a>
	{
		send_answer_to_CDC(ERROR_TYPE_1);
 8004320:	2000      	movs	r0, #0
 8004322:	f7fe fd2b 	bl	8002d7c <send_answer_to_CDC>
		return;
 8004326:	f000 bdf2 	b.w	8004f0e <Parsing_USB_command+0xc0e>
	}

	// ==== SWEEP command ====
	if(!(strcmp(decoded_string_1,"SWEEP")))
 800432a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800432e:	49c5      	ldr	r1, [pc, #788]	; (8004644 <Parsing_USB_command+0x344>)
 8004330:	4618      	mov	r0, r3
 8004332:	f7fb ff25 	bl	8000180 <strcmp>
 8004336:	4603      	mov	r3, r0
 8004338:	2b00      	cmp	r3, #0
 800433a:	d13b      	bne.n	80043b4 <Parsing_USB_command+0xb4>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800433c:	f107 030c 	add.w	r3, r7, #12
 8004340:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004344:	49c0      	ldr	r1, [pc, #768]	; (8004648 <Parsing_USB_command+0x348>)
 8004346:	48be      	ldr	r0, [pc, #760]	; (8004640 <Parsing_USB_command+0x340>)
 8004348:	f007 fc5c 	bl	800bc04 <siscanf>
 800434c:	4603      	mov	r3, r0
 800434e:	2b02      	cmp	r3, #2
 8004350:	d004      	beq.n	800435c <Parsing_USB_command+0x5c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004352:	2001      	movs	r0, #1
 8004354:	f7fe fd12 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004358:	f000 bdd9 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"START")))
 800435c:	f107 030c 	add.w	r3, r7, #12
 8004360:	49ba      	ldr	r1, [pc, #744]	; (800464c <Parsing_USB_command+0x34c>)
 8004362:	4618      	mov	r0, r3
 8004364:	f7fb ff0c 	bl	8000180 <strcmp>
 8004368:	4603      	mov	r3, r0
 800436a:	2b00      	cmp	r3, #0
 800436c:	d10d      	bne.n	800438a <Parsing_USB_command+0x8a>
		{
			cmd_SWEEP_START();
 800436e:	f7fe fdcb 	bl	8002f08 <cmd_SWEEP_START>
			if(mode==VOLT_SCREEN)mode=dU_dt_SCREEN;
 8004372:	4bb7      	ldr	r3, [pc, #732]	; (8004650 <Parsing_USB_command+0x350>)
 8004374:	781b      	ldrb	r3, [r3, #0]
 8004376:	2b05      	cmp	r3, #5
 8004378:	d102      	bne.n	8004380 <Parsing_USB_command+0x80>
 800437a:	4bb5      	ldr	r3, [pc, #724]	; (8004650 <Parsing_USB_command+0x350>)
 800437c:	2203      	movs	r2, #3
 800437e:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004380:	2003      	movs	r0, #3
 8004382:	f7fe fcfb 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004386:	f000 bdc2 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"STOP")))
 800438a:	f107 030c 	add.w	r3, r7, #12
 800438e:	49b1      	ldr	r1, [pc, #708]	; (8004654 <Parsing_USB_command+0x354>)
 8004390:	4618      	mov	r0, r3
 8004392:	f7fb fef5 	bl	8000180 <strcmp>
 8004396:	4603      	mov	r3, r0
 8004398:	2b00      	cmp	r3, #0
 800439a:	d106      	bne.n	80043aa <Parsing_USB_command+0xaa>
			{
				cmd_SWEEP_STOP();
 800439c:	f7fe fdc4 	bl	8002f28 <cmd_SWEEP_STOP>
				send_answer_to_CDC(OK_TYPE_2);
 80043a0:	2003      	movs	r0, #3
 80043a2:	f7fe fceb 	bl	8002d7c <send_answer_to_CDC>
				return;
 80043a6:	f000 bdb2 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 80043aa:	2000      	movs	r0, #0
 80043ac:	f7fe fce6 	bl	8002d7c <send_answer_to_CDC>
				return;
 80043b0:	f000 bdad 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}

		}
	}
	// ==== CAP_SET command ====
	if(!(strcmp(decoded_string_1,"CAP_SET")))
 80043b4:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80043b8:	49a7      	ldr	r1, [pc, #668]	; (8004658 <Parsing_USB_command+0x358>)
 80043ba:	4618      	mov	r0, r3
 80043bc:	f7fb fee0 	bl	8000180 <strcmp>
 80043c0:	4603      	mov	r3, r0
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d121      	bne.n	800440a <Parsing_USB_command+0x10a>
	{
		if(sscanf((char *)command_buffer,"%s %d", decoded_string_1, &num_of_cap)!=2)
 80043c6:	f107 0308 	add.w	r3, r7, #8
 80043ca:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80043ce:	49a3      	ldr	r1, [pc, #652]	; (800465c <Parsing_USB_command+0x35c>)
 80043d0:	489b      	ldr	r0, [pc, #620]	; (8004640 <Parsing_USB_command+0x340>)
 80043d2:	f007 fc17 	bl	800bc04 <siscanf>
 80043d6:	4603      	mov	r3, r0
 80043d8:	2b02      	cmp	r3, #2
 80043da:	d004      	beq.n	80043e6 <Parsing_USB_command+0xe6>
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 80043dc:	2001      	movs	r0, #1
 80043de:	f7fe fccd 	bl	8002d7c <send_answer_to_CDC>
				return;
 80043e2:	f000 bd94 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}

			if(cmd_CAP_SET(num_of_cap))
 80043e6:	68bb      	ldr	r3, [r7, #8]
 80043e8:	b2db      	uxtb	r3, r3
 80043ea:	4618      	mov	r0, r3
 80043ec:	f7fe fef8 	bl	80031e0 <cmd_CAP_SET>
 80043f0:	4603      	mov	r3, r0
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d004      	beq.n	8004400 <Parsing_USB_command+0x100>
			{
				send_answer_to_CDC(OK_TYPE_2);
 80043f6:	2003      	movs	r0, #3
 80043f8:	f7fe fcc0 	bl	8002d7c <send_answer_to_CDC>
				return;
 80043fc:	f000 bd87 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004400:	2001      	movs	r0, #1
 8004402:	f7fe fcbb 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004406:	f000 bd82 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
	}


	// ==== DAC_SET command ====
	if(!(strcmp(decoded_string_1,"DAC_SET")))
 800440a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800440e:	4994      	ldr	r1, [pc, #592]	; (8004660 <Parsing_USB_command+0x360>)
 8004410:	4618      	mov	r0, r3
 8004412:	f7fb feb5 	bl	8000180 <strcmp>
 8004416:	4603      	mov	r3, r0
 8004418:	2b00      	cmp	r3, #0
 800441a:	d154      	bne.n	80044c6 <Parsing_USB_command+0x1c6>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800441c:	f107 030c 	add.w	r3, r7, #12
 8004420:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004424:	4988      	ldr	r1, [pc, #544]	; (8004648 <Parsing_USB_command+0x348>)
 8004426:	4886      	ldr	r0, [pc, #536]	; (8004640 <Parsing_USB_command+0x340>)
 8004428:	f007 fbec 	bl	800bc04 <siscanf>
 800442c:	4603      	mov	r3, r0
 800442e:	2b02      	cmp	r3, #2
 8004430:	d004      	beq.n	800443c <Parsing_USB_command+0x13c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004432:	2001      	movs	r0, #1
 8004434:	f7fe fca2 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004438:	f000 bd69 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"TOP"))){
 800443c:	f107 030c 	add.w	r3, r7, #12
 8004440:	4988      	ldr	r1, [pc, #544]	; (8004664 <Parsing_USB_command+0x364>)
 8004442:	4618      	mov	r0, r3
 8004444:	f7fb fe9c 	bl	8000180 <strcmp>
 8004448:	4603      	mov	r3, r0
 800444a:	2b00      	cmp	r3, #0
 800444c:	d107      	bne.n	800445e <Parsing_USB_command+0x15e>
			cmd_DAC_SET(DAC_CODE_TOP);
 800444e:	4886      	ldr	r0, [pc, #536]	; (8004668 <Parsing_USB_command+0x368>)
 8004450:	f7fe fd74 	bl	8002f3c <cmd_DAC_SET>
			send_answer_to_CDC(OK_TYPE_2);
 8004454:	2003      	movs	r0, #3
 8004456:	f7fe fc91 	bl	8002d7c <send_answer_to_CDC>
			return;
 800445a:	f000 bd58 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 800445e:	f107 030c 	add.w	r3, r7, #12
 8004462:	4982      	ldr	r1, [pc, #520]	; (800466c <Parsing_USB_command+0x36c>)
 8004464:	4618      	mov	r0, r3
 8004466:	f7fb fe8b 	bl	8000180 <strcmp>
 800446a:	4603      	mov	r3, r0
 800446c:	2b00      	cmp	r3, #0
 800446e:	d107      	bne.n	8004480 <Parsing_USB_command+0x180>
				cmd_DAC_SET(DAC_CODE_DOWN);
 8004470:	2000      	movs	r0, #0
 8004472:	f7fe fd63 	bl	8002f3c <cmd_DAC_SET>
				send_answer_to_CDC(OK_TYPE_2);
 8004476:	2003      	movs	r0, #3
 8004478:	f7fe fc80 	bl	8002d7c <send_answer_to_CDC>
				return;
 800447c:	f000 bd47 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004480:	1d3b      	adds	r3, r7, #4
 8004482:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004486:	497a      	ldr	r1, [pc, #488]	; (8004670 <Parsing_USB_command+0x370>)
 8004488:	486d      	ldr	r0, [pc, #436]	; (8004640 <Parsing_USB_command+0x340>)
 800448a:	f007 fbbb 	bl	800bc04 <siscanf>
 800448e:	4603      	mov	r3, r0
 8004490:	2b02      	cmp	r3, #2
 8004492:	d004      	beq.n	800449e <Parsing_USB_command+0x19e>
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 8004494:	2001      	movs	r0, #1
 8004496:	f7fe fc71 	bl	8002d7c <send_answer_to_CDC>
					return;
 800449a:	f000 bd38 	b.w	8004f0e <Parsing_USB_command+0xc0e>
				}

				if(cmd_SET_OUTPUT_VOLTAGE(f_value))
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	4618      	mov	r0, r3
 80044a2:	f7fe fd7b 	bl	8002f9c <cmd_SET_OUTPUT_VOLTAGE>
 80044a6:	4603      	mov	r3, r0
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d007      	beq.n	80044bc <Parsing_USB_command+0x1bc>
				{
					mode=VOLT_SCREEN;
 80044ac:	4b68      	ldr	r3, [pc, #416]	; (8004650 <Parsing_USB_command+0x350>)
 80044ae:	2205      	movs	r2, #5
 80044b0:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 80044b2:	2003      	movs	r0, #3
 80044b4:	f7fe fc62 	bl	8002d7c <send_answer_to_CDC>
					return;
 80044b8:	f000 bd29 	b.w	8004f0e <Parsing_USB_command+0xc0e>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 80044bc:	2001      	movs	r0, #1
 80044be:	f7fe fc5d 	bl	8002d7c <send_answer_to_CDC>
					return;
 80044c2:	f000 bd24 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
	}


	// ==== OUTPUT command ====
	if(!(strcmp(decoded_string_1,"OUTPUT")))
 80044c6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80044ca:	496a      	ldr	r1, [pc, #424]	; (8004674 <Parsing_USB_command+0x374>)
 80044cc:	4618      	mov	r0, r3
 80044ce:	f7fb fe57 	bl	8000180 <strcmp>
 80044d2:	4603      	mov	r3, r0
 80044d4:	2b00      	cmp	r3, #0
 80044d6:	d158      	bne.n	800458a <Parsing_USB_command+0x28a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80044d8:	f107 030c 	add.w	r3, r7, #12
 80044dc:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80044e0:	4959      	ldr	r1, [pc, #356]	; (8004648 <Parsing_USB_command+0x348>)
 80044e2:	4857      	ldr	r0, [pc, #348]	; (8004640 <Parsing_USB_command+0x340>)
 80044e4:	f007 fb8e 	bl	800bc04 <siscanf>
 80044e8:	4603      	mov	r3, r0
 80044ea:	2b02      	cmp	r3, #2
 80044ec:	d004      	beq.n	80044f8 <Parsing_USB_command+0x1f8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80044ee:	2001      	movs	r0, #1
 80044f0:	f7fe fc44 	bl	8002d7c <send_answer_to_CDC>
			return;
 80044f4:	f000 bd0b 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"OFF"))){
 80044f8:	f107 030c 	add.w	r3, r7, #12
 80044fc:	495e      	ldr	r1, [pc, #376]	; (8004678 <Parsing_USB_command+0x378>)
 80044fe:	4618      	mov	r0, r3
 8004500:	f7fb fe3e 	bl	8000180 <strcmp>
 8004504:	4603      	mov	r3, r0
 8004506:	2b00      	cmp	r3, #0
 8004508:	d107      	bne.n	800451a <Parsing_USB_command+0x21a>
			output_state(Output_off_STATE);
 800450a:	2000      	movs	r0, #0
 800450c:	f7fe f93a 	bl	8002784 <output_state>
			send_answer_to_CDC(OK_TYPE_2);
 8004510:	2003      	movs	r0, #3
 8004512:	f7fe fc33 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004516:	f000 bcfa 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"X1"))){
 800451a:	f107 030c 	add.w	r3, r7, #12
 800451e:	4957      	ldr	r1, [pc, #348]	; (800467c <Parsing_USB_command+0x37c>)
 8004520:	4618      	mov	r0, r3
 8004522:	f7fb fe2d 	bl	8000180 <strcmp>
 8004526:	4603      	mov	r3, r0
 8004528:	2b00      	cmp	r3, #0
 800452a:	d107      	bne.n	800453c <Parsing_USB_command+0x23c>
				output_state(Output_x1_STATE);
 800452c:	2001      	movs	r0, #1
 800452e:	f7fe f929 	bl	8002784 <output_state>
				send_answer_to_CDC(OK_TYPE_2);
 8004532:	2003      	movs	r0, #3
 8004534:	f7fe fc22 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004538:	f000 bce9 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"X2"))){
 800453c:	f107 030c 	add.w	r3, r7, #12
 8004540:	494f      	ldr	r1, [pc, #316]	; (8004680 <Parsing_USB_command+0x380>)
 8004542:	4618      	mov	r0, r3
 8004544:	f7fb fe1c 	bl	8000180 <strcmp>
 8004548:	4603      	mov	r3, r0
 800454a:	2b00      	cmp	r3, #0
 800454c:	d107      	bne.n	800455e <Parsing_USB_command+0x25e>
					output_state(Output_x2_STATE);
 800454e:	2002      	movs	r0, #2
 8004550:	f7fe f918 	bl	8002784 <output_state>
					send_answer_to_CDC(OK_TYPE_2);
 8004554:	2003      	movs	r0, #3
 8004556:	f7fe fc11 	bl	8002d7c <send_answer_to_CDC>
					return;
 800455a:	f000 bcd8 	b.w	8004f0e <Parsing_USB_command+0xc0e>
				}
				else
				{
					if(!(strcmp(decoded_string_2,"X4"))){
 800455e:	f107 030c 	add.w	r3, r7, #12
 8004562:	4948      	ldr	r1, [pc, #288]	; (8004684 <Parsing_USB_command+0x384>)
 8004564:	4618      	mov	r0, r3
 8004566:	f7fb fe0b 	bl	8000180 <strcmp>
 800456a:	4603      	mov	r3, r0
 800456c:	2b00      	cmp	r3, #0
 800456e:	d107      	bne.n	8004580 <Parsing_USB_command+0x280>
						output_state(Output_x4_STATE);
 8004570:	2003      	movs	r0, #3
 8004572:	f7fe f907 	bl	8002784 <output_state>
						send_answer_to_CDC(OK_TYPE_2);
 8004576:	2003      	movs	r0, #3
 8004578:	f7fe fc00 	bl	8002d7c <send_answer_to_CDC>
						return;
 800457c:	f000 bcc7 	b.w	8004f0e <Parsing_USB_command+0xc0e>
					}
					else
					{
						send_answer_to_CDC(ERROR_TYPE_2);
 8004580:	2001      	movs	r0, #1
 8004582:	f7fe fbfb 	bl	8002d7c <send_answer_to_CDC>
						return;
 8004586:	f000 bcc2 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
		}
	}

	// ==== CAL_STATE command ====
	if(!(strcmp(decoded_string_1,"CAL_STATE")))
 800458a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800458e:	493e      	ldr	r1, [pc, #248]	; (8004688 <Parsing_USB_command+0x388>)
 8004590:	4618      	mov	r0, r3
 8004592:	f7fb fdf5 	bl	8000180 <strcmp>
 8004596:	4603      	mov	r3, r0
 8004598:	2b00      	cmp	r3, #0
 800459a:	d136      	bne.n	800460a <Parsing_USB_command+0x30a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800459c:	f107 030c 	add.w	r3, r7, #12
 80045a0:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80045a4:	4928      	ldr	r1, [pc, #160]	; (8004648 <Parsing_USB_command+0x348>)
 80045a6:	4826      	ldr	r0, [pc, #152]	; (8004640 <Parsing_USB_command+0x340>)
 80045a8:	f007 fb2c 	bl	800bc04 <siscanf>
 80045ac:	4603      	mov	r3, r0
 80045ae:	2b02      	cmp	r3, #2
 80045b0:	d004      	beq.n	80045bc <Parsing_USB_command+0x2bc>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80045b2:	2001      	movs	r0, #1
 80045b4:	f7fe fbe2 	bl	8002d7c <send_answer_to_CDC>
			return;
 80045b8:	f000 bca9 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"UNLOCK"))){
 80045bc:	f107 030c 	add.w	r3, r7, #12
 80045c0:	4932      	ldr	r1, [pc, #200]	; (800468c <Parsing_USB_command+0x38c>)
 80045c2:	4618      	mov	r0, r3
 80045c4:	f7fb fddc 	bl	8000180 <strcmp>
 80045c8:	4603      	mov	r3, r0
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	d107      	bne.n	80045de <Parsing_USB_command+0x2de>
			CAL_STATE=UNLOCK_STATE;
 80045ce:	4b30      	ldr	r3, [pc, #192]	; (8004690 <Parsing_USB_command+0x390>)
 80045d0:	2200      	movs	r2, #0
 80045d2:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 80045d4:	2003      	movs	r0, #3
 80045d6:	f7fe fbd1 	bl	8002d7c <send_answer_to_CDC>
			return;
 80045da:	f000 bc98 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"LOCK"))){
 80045de:	f107 030c 	add.w	r3, r7, #12
 80045e2:	492c      	ldr	r1, [pc, #176]	; (8004694 <Parsing_USB_command+0x394>)
 80045e4:	4618      	mov	r0, r3
 80045e6:	f7fb fdcb 	bl	8000180 <strcmp>
 80045ea:	4603      	mov	r3, r0
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d107      	bne.n	8004600 <Parsing_USB_command+0x300>
				CAL_STATE=LOCK_STATE;
 80045f0:	4b27      	ldr	r3, [pc, #156]	; (8004690 <Parsing_USB_command+0x390>)
 80045f2:	2201      	movs	r2, #1
 80045f4:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 80045f6:	2003      	movs	r0, #3
 80045f8:	f7fe fbc0 	bl	8002d7c <send_answer_to_CDC>
				return;
 80045fc:	f000 bc87 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004600:	2001      	movs	r0, #1
 8004602:	f7fe fbbb 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004606:	f000 bc82 	b.w	8004f0e <Parsing_USB_command+0xc0e>
			}
		}
	}

	// ==== DAC_CAL_TEMP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TEMP")))
 800460a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800460e:	4922      	ldr	r1, [pc, #136]	; (8004698 <Parsing_USB_command+0x398>)
 8004610:	4618      	mov	r0, r3
 8004612:	f7fb fdb5 	bl	8000180 <strcmp>
 8004616:	4603      	mov	r3, r0
 8004618:	2b00      	cmp	r3, #0
 800461a:	d159      	bne.n	80046d0 <Parsing_USB_command+0x3d0>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800461c:	f107 030c 	add.w	r3, r7, #12
 8004620:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004624:	4908      	ldr	r1, [pc, #32]	; (8004648 <Parsing_USB_command+0x348>)
 8004626:	4806      	ldr	r0, [pc, #24]	; (8004640 <Parsing_USB_command+0x340>)
 8004628:	f007 faec 	bl	800bc04 <siscanf>
 800462c:	4603      	mov	r3, r0
 800462e:	2b02      	cmp	r3, #2
 8004630:	d034      	beq.n	800469c <Parsing_USB_command+0x39c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004632:	2001      	movs	r0, #1
 8004634:	f7fe fba2 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004638:	f000 bc69 	b.w	8004f0e <Parsing_USB_command+0xc0e>
 800463c:	08010088 	.word	0x08010088
 8004640:	200006b8 	.word	0x200006b8
 8004644:	0801008c 	.word	0x0801008c
 8004648:	08010094 	.word	0x08010094
 800464c:	0801009c 	.word	0x0801009c
 8004650:	20000018 	.word	0x20000018
 8004654:	080100a4 	.word	0x080100a4
 8004658:	080100ac 	.word	0x080100ac
 800465c:	080100b4 	.word	0x080100b4
 8004660:	080100bc 	.word	0x080100bc
 8004664:	080100c4 	.word	0x080100c4
 8004668:	000fffff 	.word	0x000fffff
 800466c:	080100c8 	.word	0x080100c8
 8004670:	080100d0 	.word	0x080100d0
 8004674:	080100d8 	.word	0x080100d8
 8004678:	080100e0 	.word	0x080100e0
 800467c:	080100e4 	.word	0x080100e4
 8004680:	080100e8 	.word	0x080100e8
 8004684:	080100ec 	.word	0x080100ec
 8004688:	080100f0 	.word	0x080100f0
 800468c:	080100fc 	.word	0x080100fc
 8004690:	20000021 	.word	0x20000021
 8004694:	08010104 	.word	0x08010104
 8004698:	0801010c 	.word	0x0801010c
		}

		if(!(strcmp(decoded_string_2,"START"))){
 800469c:	f107 030c 	add.w	r3, r7, #12
 80046a0:	49bc      	ldr	r1, [pc, #752]	; (8004994 <Parsing_USB_command+0x694>)
 80046a2:	4618      	mov	r0, r3
 80046a4:	f7fb fd6c 	bl	8000180 <strcmp>
 80046a8:	4603      	mov	r3, r0
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d10b      	bne.n	80046c6 <Parsing_USB_command+0x3c6>
			send_answer_to_CDC(RUN_CAL_TYPE_TEMP);
 80046ae:	200f      	movs	r0, #15
 80046b0:	f7fe fb64 	bl	8002d7c <send_answer_to_CDC>
			cmd_CAL(DAC_CAL_TEMP,NONE);
 80046b4:	49b8      	ldr	r1, [pc, #736]	; (8004998 <Parsing_USB_command+0x698>)
 80046b6:	2006      	movs	r0, #6
 80046b8:	f7fe fe5e 	bl	8003378 <cmd_CAL>
			send_answer_to_CDC(OK_TYPE_1);
 80046bc:	2002      	movs	r0, #2
 80046be:	f7fe fb5d 	bl	8002d7c <send_answer_to_CDC>
			return;
 80046c2:	f000 bc24 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 80046c6:	2000      	movs	r0, #0
 80046c8:	f7fe fb58 	bl	8002d7c <send_answer_to_CDC>
			return;
 80046cc:	f000 bc1f 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}
	}

	// ==== DAC_CAL_POLY_A command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_A")))
 80046d0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80046d4:	49b1      	ldr	r1, [pc, #708]	; (800499c <Parsing_USB_command+0x69c>)
 80046d6:	4618      	mov	r0, r3
 80046d8:	f7fb fd52 	bl	8000180 <strcmp>
 80046dc:	4603      	mov	r3, r0
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d117      	bne.n	8004712 <Parsing_USB_command+0x412>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80046e2:	1d3b      	adds	r3, r7, #4
 80046e4:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80046e8:	49ad      	ldr	r1, [pc, #692]	; (80049a0 <Parsing_USB_command+0x6a0>)
 80046ea:	48ae      	ldr	r0, [pc, #696]	; (80049a4 <Parsing_USB_command+0x6a4>)
 80046ec:	f007 fa8a 	bl	800bc04 <siscanf>
 80046f0:	4603      	mov	r3, r0
 80046f2:	2b02      	cmp	r3, #2
 80046f4:	d004      	beq.n	8004700 <Parsing_USB_command+0x400>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80046f6:	2001      	movs	r0, #1
 80046f8:	f7fe fb40 	bl	8002d7c <send_answer_to_CDC>
			return;
 80046fc:	f000 bc07 	b.w	8004f0e <Parsing_USB_command+0xc0e>
		}

		cmd_CAL(DAC_CAL_POLY_A,f_value);
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	4619      	mov	r1, r3
 8004704:	2007      	movs	r0, #7
 8004706:	f7fe fe37 	bl	8003378 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 800470a:	2003      	movs	r0, #3
 800470c:	f7fe fb36 	bl	8002d7c <send_answer_to_CDC>
		return;
 8004710:	e3fd      	b.n	8004f0e <Parsing_USB_command+0xc0e>
	}

	// ==== DAC_CAL_POLY_B command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_B")))
 8004712:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004716:	49a4      	ldr	r1, [pc, #656]	; (80049a8 <Parsing_USB_command+0x6a8>)
 8004718:	4618      	mov	r0, r3
 800471a:	f7fb fd31 	bl	8000180 <strcmp>
 800471e:	4603      	mov	r3, r0
 8004720:	2b00      	cmp	r3, #0
 8004722:	d116      	bne.n	8004752 <Parsing_USB_command+0x452>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004724:	1d3b      	adds	r3, r7, #4
 8004726:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800472a:	499d      	ldr	r1, [pc, #628]	; (80049a0 <Parsing_USB_command+0x6a0>)
 800472c:	489d      	ldr	r0, [pc, #628]	; (80049a4 <Parsing_USB_command+0x6a4>)
 800472e:	f007 fa69 	bl	800bc04 <siscanf>
 8004732:	4603      	mov	r3, r0
 8004734:	2b02      	cmp	r3, #2
 8004736:	d003      	beq.n	8004740 <Parsing_USB_command+0x440>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004738:	2001      	movs	r0, #1
 800473a:	f7fe fb1f 	bl	8002d7c <send_answer_to_CDC>
			return;
 800473e:	e3e6      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		cmd_CAL(DAC_CAL_POLY_B,f_value);
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	4619      	mov	r1, r3
 8004744:	2008      	movs	r0, #8
 8004746:	f7fe fe17 	bl	8003378 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 800474a:	2003      	movs	r0, #3
 800474c:	f7fe fb16 	bl	8002d7c <send_answer_to_CDC>
		return;
 8004750:	e3dd      	b.n	8004f0e <Parsing_USB_command+0xc0e>
	}

	// ==== DAC_CAL_POLY_C command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_C")))
 8004752:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004756:	4995      	ldr	r1, [pc, #596]	; (80049ac <Parsing_USB_command+0x6ac>)
 8004758:	4618      	mov	r0, r3
 800475a:	f7fb fd11 	bl	8000180 <strcmp>
 800475e:	4603      	mov	r3, r0
 8004760:	2b00      	cmp	r3, #0
 8004762:	d116      	bne.n	8004792 <Parsing_USB_command+0x492>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004764:	1d3b      	adds	r3, r7, #4
 8004766:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800476a:	498d      	ldr	r1, [pc, #564]	; (80049a0 <Parsing_USB_command+0x6a0>)
 800476c:	488d      	ldr	r0, [pc, #564]	; (80049a4 <Parsing_USB_command+0x6a4>)
 800476e:	f007 fa49 	bl	800bc04 <siscanf>
 8004772:	4603      	mov	r3, r0
 8004774:	2b02      	cmp	r3, #2
 8004776:	d003      	beq.n	8004780 <Parsing_USB_command+0x480>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004778:	2001      	movs	r0, #1
 800477a:	f7fe faff 	bl	8002d7c <send_answer_to_CDC>
			return;
 800477e:	e3c6      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		cmd_CAL(DAC_CAL_POLY_C,f_value);
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	4619      	mov	r1, r3
 8004784:	2009      	movs	r0, #9
 8004786:	f7fe fdf7 	bl	8003378 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 800478a:	2003      	movs	r0, #3
 800478c:	f7fe faf6 	bl	8002d7c <send_answer_to_CDC>
		return;
 8004790:	e3bd      	b.n	8004f0e <Parsing_USB_command+0xc0e>
	}

	// ==== GAIN_X2_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X2_CAL")))
 8004792:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004796:	4986      	ldr	r1, [pc, #536]	; (80049b0 <Parsing_USB_command+0x6b0>)
 8004798:	4618      	mov	r0, r3
 800479a:	f7fb fcf1 	bl	8000180 <strcmp>
 800479e:	4603      	mov	r3, r0
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d11d      	bne.n	80047e0 <Parsing_USB_command+0x4e0>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80047a4:	1d3b      	adds	r3, r7, #4
 80047a6:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80047aa:	497d      	ldr	r1, [pc, #500]	; (80049a0 <Parsing_USB_command+0x6a0>)
 80047ac:	487d      	ldr	r0, [pc, #500]	; (80049a4 <Parsing_USB_command+0x6a4>)
 80047ae:	f007 fa29 	bl	800bc04 <siscanf>
 80047b2:	4603      	mov	r3, r0
 80047b4:	2b02      	cmp	r3, #2
 80047b6:	d003      	beq.n	80047c0 <Parsing_USB_command+0x4c0>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80047b8:	2001      	movs	r0, #1
 80047ba:	f7fe fadf 	bl	8002d7c <send_answer_to_CDC>
			return;
 80047be:	e3a6      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(cmd_CAL(GAIN_X2_CAL,f_value))
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	4619      	mov	r1, r3
 80047c4:	200c      	movs	r0, #12
 80047c6:	f7fe fdd7 	bl	8003378 <cmd_CAL>
 80047ca:	4603      	mov	r3, r0
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d003      	beq.n	80047d8 <Parsing_USB_command+0x4d8>
		{
			send_answer_to_CDC(OK_TYPE_2);
 80047d0:	2003      	movs	r0, #3
 80047d2:	f7fe fad3 	bl	8002d7c <send_answer_to_CDC>
			return;
 80047d6:	e39a      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80047d8:	2001      	movs	r0, #1
 80047da:	f7fe facf 	bl	8002d7c <send_answer_to_CDC>
			return;
 80047de:	e396      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
	}

	// ==== GAIN_X4_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X4_CAL")))
 80047e0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80047e4:	4973      	ldr	r1, [pc, #460]	; (80049b4 <Parsing_USB_command+0x6b4>)
 80047e6:	4618      	mov	r0, r3
 80047e8:	f7fb fcca 	bl	8000180 <strcmp>
 80047ec:	4603      	mov	r3, r0
 80047ee:	2b00      	cmp	r3, #0
 80047f0:	d11d      	bne.n	800482e <Parsing_USB_command+0x52e>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80047f2:	1d3b      	adds	r3, r7, #4
 80047f4:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80047f8:	4969      	ldr	r1, [pc, #420]	; (80049a0 <Parsing_USB_command+0x6a0>)
 80047fa:	486a      	ldr	r0, [pc, #424]	; (80049a4 <Parsing_USB_command+0x6a4>)
 80047fc:	f007 fa02 	bl	800bc04 <siscanf>
 8004800:	4603      	mov	r3, r0
 8004802:	2b02      	cmp	r3, #2
 8004804:	d003      	beq.n	800480e <Parsing_USB_command+0x50e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004806:	2001      	movs	r0, #1
 8004808:	f7fe fab8 	bl	8002d7c <send_answer_to_CDC>
			return;
 800480c:	e37f      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(cmd_CAL(GAIN_X4_CAL,f_value))
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	4619      	mov	r1, r3
 8004812:	200d      	movs	r0, #13
 8004814:	f7fe fdb0 	bl	8003378 <cmd_CAL>
 8004818:	4603      	mov	r3, r0
 800481a:	2b00      	cmp	r3, #0
 800481c:	d003      	beq.n	8004826 <Parsing_USB_command+0x526>
		{
			send_answer_to_CDC(OK_TYPE_2);
 800481e:	2003      	movs	r0, #3
 8004820:	f7fe faac 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004824:	e373      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004826:	2001      	movs	r0, #1
 8004828:	f7fe faa8 	bl	8002d7c <send_answer_to_CDC>
			return;
 800482c:	e36f      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
	}


	// ==== DAC_CAL_TOP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TOP")))
 800482e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004832:	4961      	ldr	r1, [pc, #388]	; (80049b8 <Parsing_USB_command+0x6b8>)
 8004834:	4618      	mov	r0, r3
 8004836:	f7fb fca3 	bl	8000180 <strcmp>
 800483a:	4603      	mov	r3, r0
 800483c:	2b00      	cmp	r3, #0
 800483e:	d11d      	bne.n	800487c <Parsing_USB_command+0x57c>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004840:	1d3b      	adds	r3, r7, #4
 8004842:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004846:	4956      	ldr	r1, [pc, #344]	; (80049a0 <Parsing_USB_command+0x6a0>)
 8004848:	4856      	ldr	r0, [pc, #344]	; (80049a4 <Parsing_USB_command+0x6a4>)
 800484a:	f007 f9db 	bl	800bc04 <siscanf>
 800484e:	4603      	mov	r3, r0
 8004850:	2b02      	cmp	r3, #2
 8004852:	d003      	beq.n	800485c <Parsing_USB_command+0x55c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004854:	2001      	movs	r0, #1
 8004856:	f7fe fa91 	bl	8002d7c <send_answer_to_CDC>
			return;
 800485a:	e358      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(cmd_CAL(DAC_CAL_TOP,f_value))
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	4619      	mov	r1, r3
 8004860:	200a      	movs	r0, #10
 8004862:	f7fe fd89 	bl	8003378 <cmd_CAL>
 8004866:	4603      	mov	r3, r0
 8004868:	2b00      	cmp	r3, #0
 800486a:	d003      	beq.n	8004874 <Parsing_USB_command+0x574>
		{
			send_answer_to_CDC(OK_TYPE_2);
 800486c:	2003      	movs	r0, #3
 800486e:	f7fe fa85 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004872:	e34c      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004874:	2001      	movs	r0, #1
 8004876:	f7fe fa81 	bl	8002d7c <send_answer_to_CDC>
			return;
 800487a:	e348      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
	}


	// ==== DAC_CAL_DOWN command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_DOWN")))
 800487c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004880:	494e      	ldr	r1, [pc, #312]	; (80049bc <Parsing_USB_command+0x6bc>)
 8004882:	4618      	mov	r0, r3
 8004884:	f7fb fc7c 	bl	8000180 <strcmp>
 8004888:	4603      	mov	r3, r0
 800488a:	2b00      	cmp	r3, #0
 800488c:	d11d      	bne.n	80048ca <Parsing_USB_command+0x5ca>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 800488e:	1d3b      	adds	r3, r7, #4
 8004890:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004894:	4942      	ldr	r1, [pc, #264]	; (80049a0 <Parsing_USB_command+0x6a0>)
 8004896:	4843      	ldr	r0, [pc, #268]	; (80049a4 <Parsing_USB_command+0x6a4>)
 8004898:	f007 f9b4 	bl	800bc04 <siscanf>
 800489c:	4603      	mov	r3, r0
 800489e:	2b02      	cmp	r3, #2
 80048a0:	d003      	beq.n	80048aa <Parsing_USB_command+0x5aa>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80048a2:	2001      	movs	r0, #1
 80048a4:	f7fe fa6a 	bl	8002d7c <send_answer_to_CDC>
			return;
 80048a8:	e331      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(cmd_CAL(DAC_CAL_DOWN,f_value))
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	4619      	mov	r1, r3
 80048ae:	200b      	movs	r0, #11
 80048b0:	f7fe fd62 	bl	8003378 <cmd_CAL>
 80048b4:	4603      	mov	r3, r0
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d003      	beq.n	80048c2 <Parsing_USB_command+0x5c2>
		{
			send_answer_to_CDC(OK_TYPE_2);
 80048ba:	2003      	movs	r0, #3
 80048bc:	f7fe fa5e 	bl	8002d7c <send_answer_to_CDC>
			return;
 80048c0:	e325      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80048c2:	2001      	movs	r0, #1
 80048c4:	f7fe fa5a 	bl	8002d7c <send_answer_to_CDC>
			return;
 80048c8:	e321      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
	}

	// ==== CAL_C_VALUE command ====
	if(!(strcmp(decoded_string_1,"CAL_C_VALUE")))
 80048ca:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80048ce:	493c      	ldr	r1, [pc, #240]	; (80049c0 <Parsing_USB_command+0x6c0>)
 80048d0:	4618      	mov	r0, r3
 80048d2:	f7fb fc55 	bl	8000180 <strcmp>
 80048d6:	4603      	mov	r3, r0
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d126      	bne.n	800492a <Parsing_USB_command+0x62a>
	{
		if(sscanf((char *)command_buffer,"%s %d %f %f", decoded_string_1, &num_of_cap, &f_value, &f_value2)!=4)
 80048dc:	f107 0108 	add.w	r1, r7, #8
 80048e0:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80048e4:	463b      	mov	r3, r7
 80048e6:	9301      	str	r3, [sp, #4]
 80048e8:	1d3b      	adds	r3, r7, #4
 80048ea:	9300      	str	r3, [sp, #0]
 80048ec:	460b      	mov	r3, r1
 80048ee:	4935      	ldr	r1, [pc, #212]	; (80049c4 <Parsing_USB_command+0x6c4>)
 80048f0:	482c      	ldr	r0, [pc, #176]	; (80049a4 <Parsing_USB_command+0x6a4>)
 80048f2:	f007 f987 	bl	800bc04 <siscanf>
 80048f6:	4603      	mov	r3, r0
 80048f8:	2b04      	cmp	r3, #4
 80048fa:	d003      	beq.n	8004904 <Parsing_USB_command+0x604>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80048fc:	2001      	movs	r0, #1
 80048fe:	f7fe fa3d 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004902:	e304      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		if(CAL_STATE!=LOCK_STATE)
 8004904:	4b30      	ldr	r3, [pc, #192]	; (80049c8 <Parsing_USB_command+0x6c8>)
 8004906:	781b      	ldrb	r3, [r3, #0]
 8004908:	2b01      	cmp	r3, #1
 800490a:	d00a      	beq.n	8004922 <Parsing_USB_command+0x622>
		{
			write_c_value_to_EEPROM(num_of_cap, f_value, f_value2);
 800490c:	68bb      	ldr	r3, [r7, #8]
 800490e:	4618      	mov	r0, r3
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	683a      	ldr	r2, [r7, #0]
 8004914:	4619      	mov	r1, r3
 8004916:	f7fe fefd 	bl	8003714 <write_c_value_to_EEPROM>
			send_answer_to_CDC(OK_TYPE_2);
 800491a:	2003      	movs	r0, #3
 800491c:	f7fe fa2e 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004920:	e2f5      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004922:	2001      	movs	r0, #1
 8004924:	f7fe fa2a 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004928:	e2f1      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
	}


	// ==== SWEEP_RATE command ====
	if(!(strcmp(decoded_string_1,"SWEEP_RATE")))
 800492a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800492e:	4927      	ldr	r1, [pc, #156]	; (80049cc <Parsing_USB_command+0x6cc>)
 8004930:	4618      	mov	r0, r3
 8004932:	f7fb fc25 	bl	8000180 <strcmp>
 8004936:	4603      	mov	r3, r0
 8004938:	2b00      	cmp	r3, #0
 800493a:	d15d      	bne.n	80049f8 <Parsing_USB_command+0x6f8>
	{
		if(sscanf((char *)command_buffer,"%s %s %f", decoded_string_1, decoded_string_2, &f_value)!=3)
 800493c:	f107 010c 	add.w	r1, r7, #12
 8004940:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004944:	1d3b      	adds	r3, r7, #4
 8004946:	9300      	str	r3, [sp, #0]
 8004948:	460b      	mov	r3, r1
 800494a:	4921      	ldr	r1, [pc, #132]	; (80049d0 <Parsing_USB_command+0x6d0>)
 800494c:	4815      	ldr	r0, [pc, #84]	; (80049a4 <Parsing_USB_command+0x6a4>)
 800494e:	f007 f959 	bl	800bc04 <siscanf>
 8004952:	4603      	mov	r3, r0
 8004954:	2b03      	cmp	r3, #3
 8004956:	d003      	beq.n	8004960 <Parsing_USB_command+0x660>
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 8004958:	2000      	movs	r0, #0
 800495a:	f7fe fa0f 	bl	8002d7c <send_answer_to_CDC>
			return;
 800495e:	e2d6      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		if(!(strcmp(decoded_string_2,"AMP")))
 8004960:	f107 030c 	add.w	r3, r7, #12
 8004964:	491b      	ldr	r1, [pc, #108]	; (80049d4 <Parsing_USB_command+0x6d4>)
 8004966:	4618      	mov	r0, r3
 8004968:	f7fb fc0a 	bl	8000180 <strcmp>
 800496c:	4603      	mov	r3, r0
 800496e:	2b00      	cmp	r3, #0
 8004970:	d132      	bne.n	80049d8 <Parsing_USB_command+0x6d8>
		{
			if(Recalculate_ramp_speed(AMP_SCREEN, f_value)==ret_OK)
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	4619      	mov	r1, r3
 8004976:	2004      	movs	r0, #4
 8004978:	f7fe fc5a 	bl	8003230 <Recalculate_ramp_speed>
 800497c:	4603      	mov	r3, r0
 800497e:	2b01      	cmp	r3, #1
 8004980:	d103      	bne.n	800498a <Parsing_USB_command+0x68a>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004982:	2003      	movs	r0, #3
 8004984:	f7fe f9fa 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004988:	e2c1      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 800498a:	2001      	movs	r0, #1
 800498c:	f7fe f9f6 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004990:	e2bd      	b.n	8004f0e <Parsing_USB_command+0xc0e>
 8004992:	bf00      	nop
 8004994:	0801009c 	.word	0x0801009c
 8004998:	41600000 	.word	0x41600000
 800499c:	0801011c 	.word	0x0801011c
 80049a0:	080100d0 	.word	0x080100d0
 80049a4:	200006b8 	.word	0x200006b8
 80049a8:	0801012c 	.word	0x0801012c
 80049ac:	0801013c 	.word	0x0801013c
 80049b0:	0801014c 	.word	0x0801014c
 80049b4:	08010158 	.word	0x08010158
 80049b8:	08010164 	.word	0x08010164
 80049bc:	08010170 	.word	0x08010170
 80049c0:	08010180 	.word	0x08010180
 80049c4:	0801018c 	.word	0x0801018c
 80049c8:	20000021 	.word	0x20000021
 80049cc:	08010198 	.word	0x08010198
 80049d0:	080101a4 	.word	0x080101a4
 80049d4:	080101b0 	.word	0x080101b0
			}
		}
		else
		{
			if(Recalculate_ramp_speed(dU_dt_SCREEN, f_value)==ret_OK)
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	4619      	mov	r1, r3
 80049dc:	2003      	movs	r0, #3
 80049de:	f7fe fc27 	bl	8003230 <Recalculate_ramp_speed>
 80049e2:	4603      	mov	r3, r0
 80049e4:	2b01      	cmp	r3, #1
 80049e6:	d103      	bne.n	80049f0 <Parsing_USB_command+0x6f0>
			{
				send_answer_to_CDC(OK_TYPE_2);
 80049e8:	2003      	movs	r0, #3
 80049ea:	f7fe f9c7 	bl	8002d7c <send_answer_to_CDC>
				return;
 80049ee:	e28e      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 80049f0:	2001      	movs	r0, #1
 80049f2:	f7fe f9c3 	bl	8002d7c <send_answer_to_CDC>
				return;
 80049f6:	e28a      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
		}
	}

	// ==== SHOW command ====
	if(!(strcmp(decoded_string_1,"SHOW")))
 80049f8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80049fc:	49a8      	ldr	r1, [pc, #672]	; (8004ca0 <Parsing_USB_command+0x9a0>)
 80049fe:	4618      	mov	r0, r3
 8004a00:	f7fb fbbe 	bl	8000180 <strcmp>
 8004a04:	4603      	mov	r3, r0
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	f040 8231 	bne.w	8004e6e <Parsing_USB_command+0xb6e>
	{

		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004a0c:	f107 030c 	add.w	r3, r7, #12
 8004a10:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004a14:	49a3      	ldr	r1, [pc, #652]	; (8004ca4 <Parsing_USB_command+0x9a4>)
 8004a16:	48a4      	ldr	r0, [pc, #656]	; (8004ca8 <Parsing_USB_command+0x9a8>)
 8004a18:	f007 f8f4 	bl	800bc04 <siscanf>
 8004a1c:	4603      	mov	r3, r0
 8004a1e:	2b02      	cmp	r3, #2
 8004a20:	d003      	beq.n	8004a2a <Parsing_USB_command+0x72a>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004a22:	2001      	movs	r0, #1
 8004a24:	f7fe f9aa 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004a28:	e271      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"INFO"))){
 8004a2a:	f107 030c 	add.w	r3, r7, #12
 8004a2e:	499f      	ldr	r1, [pc, #636]	; (8004cac <Parsing_USB_command+0x9ac>)
 8004a30:	4618      	mov	r0, r3
 8004a32:	f7fb fba5 	bl	8000180 <strcmp>
 8004a36:	4603      	mov	r3, r0
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	f040 8207 	bne.w	8004e4c <Parsing_USB_command+0xb4c>
			sprintf((char *)large_string_buffer,"\n\rDAC 0xFFFFF voltage calibration constant: %1.6E\n\r",cal_DAC_up_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004a3e:	4b9c      	ldr	r3, [pc, #624]	; (8004cb0 <Parsing_USB_command+0x9b0>)
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	4618      	mov	r0, r3
 8004a44:	f7fb fd12 	bl	800046c <__aeabi_f2d>
 8004a48:	4602      	mov	r2, r0
 8004a4a:	460b      	mov	r3, r1
 8004a4c:	4999      	ldr	r1, [pc, #612]	; (8004cb4 <Parsing_USB_command+0x9b4>)
 8004a4e:	489a      	ldr	r0, [pc, #616]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004a50:	f007 f8b8 	bl	800bbc4 <siprintf>
 8004a54:	e004      	b.n	8004a60 <Parsing_USB_command+0x760>
 8004a56:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004a5a:	3301      	adds	r3, #1
 8004a5c:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004a60:	4895      	ldr	r0, [pc, #596]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004a62:	f7fb fb97 	bl	8000194 <strlen>
 8004a66:	4603      	mov	r3, r0
 8004a68:	b29b      	uxth	r3, r3
 8004a6a:	4619      	mov	r1, r3
 8004a6c:	4892      	ldr	r0, [pc, #584]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004a6e:	f005 ff01 	bl	800a874 <CDC_Transmit_FS>
 8004a72:	4603      	mov	r3, r0
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	d003      	beq.n	8004a80 <Parsing_USB_command+0x780>
 8004a78:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004a7c:	2bff      	cmp	r3, #255	; 0xff
 8004a7e:	d1ea      	bne.n	8004a56 <Parsing_USB_command+0x756>
			sprintf((char *)large_string_buffer,"DAC 0x00000 voltage calibration constant: %1.6E\n\r",cal_DAC_down_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004a80:	4b8e      	ldr	r3, [pc, #568]	; (8004cbc <Parsing_USB_command+0x9bc>)
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	4618      	mov	r0, r3
 8004a86:	f7fb fcf1 	bl	800046c <__aeabi_f2d>
 8004a8a:	4602      	mov	r2, r0
 8004a8c:	460b      	mov	r3, r1
 8004a8e:	498c      	ldr	r1, [pc, #560]	; (8004cc0 <Parsing_USB_command+0x9c0>)
 8004a90:	4889      	ldr	r0, [pc, #548]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004a92:	f007 f897 	bl	800bbc4 <siprintf>
 8004a96:	e004      	b.n	8004aa2 <Parsing_USB_command+0x7a2>
 8004a98:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004a9c:	3301      	adds	r3, #1
 8004a9e:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004aa2:	4885      	ldr	r0, [pc, #532]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004aa4:	f7fb fb76 	bl	8000194 <strlen>
 8004aa8:	4603      	mov	r3, r0
 8004aaa:	b29b      	uxth	r3, r3
 8004aac:	4619      	mov	r1, r3
 8004aae:	4882      	ldr	r0, [pc, #520]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004ab0:	f005 fee0 	bl	800a874 <CDC_Transmit_FS>
 8004ab4:	4603      	mov	r3, r0
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d003      	beq.n	8004ac2 <Parsing_USB_command+0x7c2>
 8004aba:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004abe:	2bff      	cmp	r3, #255	; 0xff
 8004ac0:	d1ea      	bne.n	8004a98 <Parsing_USB_command+0x798>
			sprintf((char *)large_string_buffer,"Linearity correction A: %1.6E\n\r",corr_coeff_1);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004ac2:	4b80      	ldr	r3, [pc, #512]	; (8004cc4 <Parsing_USB_command+0x9c4>)
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	f7fb fcd0 	bl	800046c <__aeabi_f2d>
 8004acc:	4602      	mov	r2, r0
 8004ace:	460b      	mov	r3, r1
 8004ad0:	497d      	ldr	r1, [pc, #500]	; (8004cc8 <Parsing_USB_command+0x9c8>)
 8004ad2:	4879      	ldr	r0, [pc, #484]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004ad4:	f007 f876 	bl	800bbc4 <siprintf>
 8004ad8:	e004      	b.n	8004ae4 <Parsing_USB_command+0x7e4>
 8004ada:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004ade:	3301      	adds	r3, #1
 8004ae0:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004ae4:	4874      	ldr	r0, [pc, #464]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004ae6:	f7fb fb55 	bl	8000194 <strlen>
 8004aea:	4603      	mov	r3, r0
 8004aec:	b29b      	uxth	r3, r3
 8004aee:	4619      	mov	r1, r3
 8004af0:	4871      	ldr	r0, [pc, #452]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004af2:	f005 febf 	bl	800a874 <CDC_Transmit_FS>
 8004af6:	4603      	mov	r3, r0
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d003      	beq.n	8004b04 <Parsing_USB_command+0x804>
 8004afc:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004b00:	2bff      	cmp	r3, #255	; 0xff
 8004b02:	d1ea      	bne.n	8004ada <Parsing_USB_command+0x7da>
			sprintf((char *)large_string_buffer,"Linearity correction B: %1.6E\n\r",corr_coeff_2);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004b04:	4b71      	ldr	r3, [pc, #452]	; (8004ccc <Parsing_USB_command+0x9cc>)
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	4618      	mov	r0, r3
 8004b0a:	f7fb fcaf 	bl	800046c <__aeabi_f2d>
 8004b0e:	4602      	mov	r2, r0
 8004b10:	460b      	mov	r3, r1
 8004b12:	496f      	ldr	r1, [pc, #444]	; (8004cd0 <Parsing_USB_command+0x9d0>)
 8004b14:	4868      	ldr	r0, [pc, #416]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b16:	f007 f855 	bl	800bbc4 <siprintf>
 8004b1a:	e004      	b.n	8004b26 <Parsing_USB_command+0x826>
 8004b1c:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004b20:	3301      	adds	r3, #1
 8004b22:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004b26:	4864      	ldr	r0, [pc, #400]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b28:	f7fb fb34 	bl	8000194 <strlen>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	b29b      	uxth	r3, r3
 8004b30:	4619      	mov	r1, r3
 8004b32:	4861      	ldr	r0, [pc, #388]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b34:	f005 fe9e 	bl	800a874 <CDC_Transmit_FS>
 8004b38:	4603      	mov	r3, r0
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	d003      	beq.n	8004b46 <Parsing_USB_command+0x846>
 8004b3e:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004b42:	2bff      	cmp	r3, #255	; 0xff
 8004b44:	d1ea      	bne.n	8004b1c <Parsing_USB_command+0x81c>
			sprintf((char *)large_string_buffer,"Linearity correction C: %1.6E\n\r",corr_coeff_3);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004b46:	4b63      	ldr	r3, [pc, #396]	; (8004cd4 <Parsing_USB_command+0x9d4>)
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	4618      	mov	r0, r3
 8004b4c:	f7fb fc8e 	bl	800046c <__aeabi_f2d>
 8004b50:	4602      	mov	r2, r0
 8004b52:	460b      	mov	r3, r1
 8004b54:	4960      	ldr	r1, [pc, #384]	; (8004cd8 <Parsing_USB_command+0x9d8>)
 8004b56:	4858      	ldr	r0, [pc, #352]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b58:	f007 f834 	bl	800bbc4 <siprintf>
 8004b5c:	e004      	b.n	8004b68 <Parsing_USB_command+0x868>
 8004b5e:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004b62:	3301      	adds	r3, #1
 8004b64:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004b68:	4853      	ldr	r0, [pc, #332]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b6a:	f7fb fb13 	bl	8000194 <strlen>
 8004b6e:	4603      	mov	r3, r0
 8004b70:	b29b      	uxth	r3, r3
 8004b72:	4619      	mov	r1, r3
 8004b74:	4850      	ldr	r0, [pc, #320]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b76:	f005 fe7d 	bl	800a874 <CDC_Transmit_FS>
 8004b7a:	4603      	mov	r3, r0
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d003      	beq.n	8004b88 <Parsing_USB_command+0x888>
 8004b80:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004b84:	2bff      	cmp	r3, #255	; 0xff
 8004b86:	d1ea      	bne.n	8004b5e <Parsing_USB_command+0x85e>
			sprintf((char *)large_string_buffer,"LT5400 gain X2 correction: %1.6E\n\r",gain_x2_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004b88:	4b54      	ldr	r3, [pc, #336]	; (8004cdc <Parsing_USB_command+0x9dc>)
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	4618      	mov	r0, r3
 8004b8e:	f7fb fc6d 	bl	800046c <__aeabi_f2d>
 8004b92:	4602      	mov	r2, r0
 8004b94:	460b      	mov	r3, r1
 8004b96:	4952      	ldr	r1, [pc, #328]	; (8004ce0 <Parsing_USB_command+0x9e0>)
 8004b98:	4847      	ldr	r0, [pc, #284]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004b9a:	f007 f813 	bl	800bbc4 <siprintf>
 8004b9e:	e004      	b.n	8004baa <Parsing_USB_command+0x8aa>
 8004ba0:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004ba4:	3301      	adds	r3, #1
 8004ba6:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004baa:	4843      	ldr	r0, [pc, #268]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004bac:	f7fb faf2 	bl	8000194 <strlen>
 8004bb0:	4603      	mov	r3, r0
 8004bb2:	b29b      	uxth	r3, r3
 8004bb4:	4619      	mov	r1, r3
 8004bb6:	4840      	ldr	r0, [pc, #256]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004bb8:	f005 fe5c 	bl	800a874 <CDC_Transmit_FS>
 8004bbc:	4603      	mov	r3, r0
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	d003      	beq.n	8004bca <Parsing_USB_command+0x8ca>
 8004bc2:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004bc6:	2bff      	cmp	r3, #255	; 0xff
 8004bc8:	d1ea      	bne.n	8004ba0 <Parsing_USB_command+0x8a0>
			sprintf((char *)large_string_buffer,"LT5400 gain X4 correction: %1.6E\n\r",gain_x4_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004bca:	4b46      	ldr	r3, [pc, #280]	; (8004ce4 <Parsing_USB_command+0x9e4>)
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	4618      	mov	r0, r3
 8004bd0:	f7fb fc4c 	bl	800046c <__aeabi_f2d>
 8004bd4:	4602      	mov	r2, r0
 8004bd6:	460b      	mov	r3, r1
 8004bd8:	4943      	ldr	r1, [pc, #268]	; (8004ce8 <Parsing_USB_command+0x9e8>)
 8004bda:	4837      	ldr	r0, [pc, #220]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004bdc:	f006 fff2 	bl	800bbc4 <siprintf>
 8004be0:	e004      	b.n	8004bec <Parsing_USB_command+0x8ec>
 8004be2:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004be6:	3301      	adds	r3, #1
 8004be8:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004bec:	4832      	ldr	r0, [pc, #200]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004bee:	f7fb fad1 	bl	8000194 <strlen>
 8004bf2:	4603      	mov	r3, r0
 8004bf4:	b29b      	uxth	r3, r3
 8004bf6:	4619      	mov	r1, r3
 8004bf8:	482f      	ldr	r0, [pc, #188]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004bfa:	f005 fe3b 	bl	800a874 <CDC_Transmit_FS>
 8004bfe:	4603      	mov	r3, r0
 8004c00:	2b00      	cmp	r3, #0
 8004c02:	d003      	beq.n	8004c0c <Parsing_USB_command+0x90c>
 8004c04:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004c08:	2bff      	cmp	r3, #255	; 0xff
 8004c0a:	d1ea      	bne.n	8004be2 <Parsing_USB_command+0x8e2>
			for(uint8_t i=0;i<C_value_max_count;i++)
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 8004c12:	e039      	b.n	8004c88 <Parsing_USB_command+0x988>
			{
				sprintf((char *)large_string_buffer,"C%d capacitance: %1.6EpF, leakage: %1.6EA/V\n\r",(int)i,C_value[i],C_leakage[i]);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004c14:	f897 608e 	ldrb.w	r6, [r7, #142]	; 0x8e
 8004c18:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004c1c:	4a33      	ldr	r2, [pc, #204]	; (8004cec <Parsing_USB_command+0x9ec>)
 8004c1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004c22:	4618      	mov	r0, r3
 8004c24:	f7fb fc22 	bl	800046c <__aeabi_f2d>
 8004c28:	4604      	mov	r4, r0
 8004c2a:	460d      	mov	r5, r1
 8004c2c:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004c30:	4a2f      	ldr	r2, [pc, #188]	; (8004cf0 <Parsing_USB_command+0x9f0>)
 8004c32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004c36:	4618      	mov	r0, r3
 8004c38:	f7fb fc18 	bl	800046c <__aeabi_f2d>
 8004c3c:	4602      	mov	r2, r0
 8004c3e:	460b      	mov	r3, r1
 8004c40:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004c44:	e9cd 4500 	strd	r4, r5, [sp]
 8004c48:	4632      	mov	r2, r6
 8004c4a:	492a      	ldr	r1, [pc, #168]	; (8004cf4 <Parsing_USB_command+0x9f4>)
 8004c4c:	481a      	ldr	r0, [pc, #104]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004c4e:	f006 ffb9 	bl	800bbc4 <siprintf>
 8004c52:	e004      	b.n	8004c5e <Parsing_USB_command+0x95e>
 8004c54:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004c58:	3301      	adds	r3, #1
 8004c5a:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004c5e:	4816      	ldr	r0, [pc, #88]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004c60:	f7fb fa98 	bl	8000194 <strlen>
 8004c64:	4603      	mov	r3, r0
 8004c66:	b29b      	uxth	r3, r3
 8004c68:	4619      	mov	r1, r3
 8004c6a:	4813      	ldr	r0, [pc, #76]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004c6c:	f005 fe02 	bl	800a874 <CDC_Transmit_FS>
 8004c70:	4603      	mov	r3, r0
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	d003      	beq.n	8004c7e <Parsing_USB_command+0x97e>
 8004c76:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004c7a:	2bff      	cmp	r3, #255	; 0xff
 8004c7c:	d1ea      	bne.n	8004c54 <Parsing_USB_command+0x954>
			for(uint8_t i=0;i<C_value_max_count;i++)
 8004c7e:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004c82:	3301      	adds	r3, #1
 8004c84:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 8004c88:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004c8c:	2b09      	cmp	r3, #9
 8004c8e:	d9c1      	bls.n	8004c14 <Parsing_USB_command+0x914>
			}
			sprintf((char *)large_string_buffer,"\n\rDAC code: 0x%x\n\r",(unsigned int)DAC_code);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004c90:	4b19      	ldr	r3, [pc, #100]	; (8004cf8 <Parsing_USB_command+0x9f8>)
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	461a      	mov	r2, r3
 8004c96:	4919      	ldr	r1, [pc, #100]	; (8004cfc <Parsing_USB_command+0x9fc>)
 8004c98:	4807      	ldr	r0, [pc, #28]	; (8004cb8 <Parsing_USB_command+0x9b8>)
 8004c9a:	f006 ff93 	bl	800bbc4 <siprintf>
 8004c9e:	e034      	b.n	8004d0a <Parsing_USB_command+0xa0a>
 8004ca0:	080101b4 	.word	0x080101b4
 8004ca4:	08010094 	.word	0x08010094
 8004ca8:	200006b8 	.word	0x200006b8
 8004cac:	080101bc 	.word	0x080101bc
 8004cb0:	20000804 	.word	0x20000804
 8004cb4:	080101c4 	.word	0x080101c4
 8004cb8:	2000074c 	.word	0x2000074c
 8004cbc:	20000808 	.word	0x20000808
 8004cc0:	080101f8 	.word	0x080101f8
 8004cc4:	2000056c 	.word	0x2000056c
 8004cc8:	0801022c 	.word	0x0801022c
 8004ccc:	20000570 	.word	0x20000570
 8004cd0:	0801024c 	.word	0x0801024c
 8004cd4:	20000574 	.word	0x20000574
 8004cd8:	0801026c 	.word	0x0801026c
 8004cdc:	20000578 	.word	0x20000578
 8004ce0:	0801028c 	.word	0x0801028c
 8004ce4:	2000057c 	.word	0x2000057c
 8004ce8:	080102b0 	.word	0x080102b0
 8004cec:	20000660 	.word	0x20000660
 8004cf0:	20000688 	.word	0x20000688
 8004cf4:	080102d4 	.word	0x080102d4
 8004cf8:	20000810 	.word	0x20000810
 8004cfc:	08010304 	.word	0x08010304
 8004d00:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004d04:	3301      	adds	r3, #1
 8004d06:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004d0a:	4882      	ldr	r0, [pc, #520]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d0c:	f7fb fa42 	bl	8000194 <strlen>
 8004d10:	4603      	mov	r3, r0
 8004d12:	b29b      	uxth	r3, r3
 8004d14:	4619      	mov	r1, r3
 8004d16:	487f      	ldr	r0, [pc, #508]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d18:	f005 fdac 	bl	800a874 <CDC_Transmit_FS>
 8004d1c:	4603      	mov	r3, r0
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d003      	beq.n	8004d2a <Parsing_USB_command+0xa2a>
 8004d22:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004d26:	2bff      	cmp	r3, #255	; 0xff
 8004d28:	d1ea      	bne.n	8004d00 <Parsing_USB_command+0xa00>
			sprintf((char *)large_string_buffer,"DDS FTW: 0x%x\n\r",(unsigned int)DDS_FTW);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004d2a:	4b7b      	ldr	r3, [pc, #492]	; (8004f18 <Parsing_USB_command+0xc18>)
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	4618      	mov	r0, r3
 8004d30:	f7fc fa10 	bl	8001154 <__aeabi_f2uiz>
 8004d34:	4603      	mov	r3, r0
 8004d36:	461a      	mov	r2, r3
 8004d38:	4978      	ldr	r1, [pc, #480]	; (8004f1c <Parsing_USB_command+0xc1c>)
 8004d3a:	4876      	ldr	r0, [pc, #472]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d3c:	f006 ff42 	bl	800bbc4 <siprintf>
 8004d40:	e004      	b.n	8004d4c <Parsing_USB_command+0xa4c>
 8004d42:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004d46:	3301      	adds	r3, #1
 8004d48:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004d4c:	4871      	ldr	r0, [pc, #452]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d4e:	f7fb fa21 	bl	8000194 <strlen>
 8004d52:	4603      	mov	r3, r0
 8004d54:	b29b      	uxth	r3, r3
 8004d56:	4619      	mov	r1, r3
 8004d58:	486e      	ldr	r0, [pc, #440]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d5a:	f005 fd8b 	bl	800a874 <CDC_Transmit_FS>
 8004d5e:	4603      	mov	r3, r0
 8004d60:	2b00      	cmp	r3, #0
 8004d62:	d003      	beq.n	8004d6c <Parsing_USB_command+0xa6c>
 8004d64:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004d68:	2bff      	cmp	r3, #255	; 0xff
 8004d6a:	d1ea      	bne.n	8004d42 <Parsing_USB_command+0xa42>
			sprintf((char *)large_string_buffer,"CPLD control word: 0x%x\n\r",CPLD_WORD);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004d6c:	4b6c      	ldr	r3, [pc, #432]	; (8004f20 <Parsing_USB_command+0xc20>)
 8004d6e:	781b      	ldrb	r3, [r3, #0]
 8004d70:	461a      	mov	r2, r3
 8004d72:	496c      	ldr	r1, [pc, #432]	; (8004f24 <Parsing_USB_command+0xc24>)
 8004d74:	4867      	ldr	r0, [pc, #412]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d76:	f006 ff25 	bl	800bbc4 <siprintf>
 8004d7a:	e004      	b.n	8004d86 <Parsing_USB_command+0xa86>
 8004d7c:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004d80:	3301      	adds	r3, #1
 8004d82:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004d86:	4863      	ldr	r0, [pc, #396]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d88:	f7fb fa04 	bl	8000194 <strlen>
 8004d8c:	4603      	mov	r3, r0
 8004d8e:	b29b      	uxth	r3, r3
 8004d90:	4619      	mov	r1, r3
 8004d92:	4860      	ldr	r0, [pc, #384]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004d94:	f005 fd6e 	bl	800a874 <CDC_Transmit_FS>
 8004d98:	4603      	mov	r3, r0
 8004d9a:	2b00      	cmp	r3, #0
 8004d9c:	d003      	beq.n	8004da6 <Parsing_USB_command+0xaa6>
 8004d9e:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004da2:	2bff      	cmp	r3, #255	; 0xff
 8004da4:	d1ea      	bne.n	8004d7c <Parsing_USB_command+0xa7c>
			sprintf((char *)large_string_buffer,"Output mode: 0x%x\n\r",Current_output_status);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004da6:	4b60      	ldr	r3, [pc, #384]	; (8004f28 <Parsing_USB_command+0xc28>)
 8004da8:	781b      	ldrb	r3, [r3, #0]
 8004daa:	461a      	mov	r2, r3
 8004dac:	495f      	ldr	r1, [pc, #380]	; (8004f2c <Parsing_USB_command+0xc2c>)
 8004dae:	4859      	ldr	r0, [pc, #356]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004db0:	f006 ff08 	bl	800bbc4 <siprintf>
 8004db4:	e004      	b.n	8004dc0 <Parsing_USB_command+0xac0>
 8004db6:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004dba:	3301      	adds	r3, #1
 8004dbc:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004dc0:	4854      	ldr	r0, [pc, #336]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004dc2:	f7fb f9e7 	bl	8000194 <strlen>
 8004dc6:	4603      	mov	r3, r0
 8004dc8:	b29b      	uxth	r3, r3
 8004dca:	4619      	mov	r1, r3
 8004dcc:	4851      	ldr	r0, [pc, #324]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004dce:	f005 fd51 	bl	800a874 <CDC_Transmit_FS>
 8004dd2:	4603      	mov	r3, r0
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d003      	beq.n	8004de0 <Parsing_USB_command+0xae0>
 8004dd8:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004ddc:	2bff      	cmp	r3, #255	; 0xff
 8004dde:	d1ea      	bne.n	8004db6 <Parsing_USB_command+0xab6>
			sprintf((char *)large_string_buffer,"Temperature: %2.3f°C\n\r",TMP117_get_Temperature(hi2c1)*0.0078125);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004de0:	4c53      	ldr	r4, [pc, #332]	; (8004f30 <Parsing_USB_command+0xc30>)
 8004de2:	4668      	mov	r0, sp
 8004de4:	f104 0310 	add.w	r3, r4, #16
 8004de8:	2244      	movs	r2, #68	; 0x44
 8004dea:	4619      	mov	r1, r3
 8004dec:	f006 f862 	bl	800aeb4 <memcpy>
 8004df0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8004df4:	f000 fca2 	bl	800573c <TMP117_get_Temperature>
 8004df8:	4603      	mov	r3, r0
 8004dfa:	4618      	mov	r0, r3
 8004dfc:	f7fb fb24 	bl	8000448 <__aeabi_i2d>
 8004e00:	f04f 0200 	mov.w	r2, #0
 8004e04:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8004e08:	f7fb fb88 	bl	800051c <__aeabi_dmul>
 8004e0c:	4602      	mov	r2, r0
 8004e0e:	460b      	mov	r3, r1
 8004e10:	4948      	ldr	r1, [pc, #288]	; (8004f34 <Parsing_USB_command+0xc34>)
 8004e12:	4840      	ldr	r0, [pc, #256]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004e14:	f006 fed6 	bl	800bbc4 <siprintf>
 8004e18:	e004      	b.n	8004e24 <Parsing_USB_command+0xb24>
 8004e1a:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e1e:	3301      	adds	r3, #1
 8004e20:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004e24:	483b      	ldr	r0, [pc, #236]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004e26:	f7fb f9b5 	bl	8000194 <strlen>
 8004e2a:	4603      	mov	r3, r0
 8004e2c:	b29b      	uxth	r3, r3
 8004e2e:	4619      	mov	r1, r3
 8004e30:	4838      	ldr	r0, [pc, #224]	; (8004f14 <Parsing_USB_command+0xc14>)
 8004e32:	f005 fd1f 	bl	800a874 <CDC_Transmit_FS>
 8004e36:	4603      	mov	r3, r0
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	d003      	beq.n	8004e44 <Parsing_USB_command+0xb44>
 8004e3c:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e40:	2bff      	cmp	r3, #255	; 0xff
 8004e42:	d1ea      	bne.n	8004e1a <Parsing_USB_command+0xb1a>
			send_answer_to_CDC(OK_TYPE_2);
 8004e44:	2003      	movs	r0, #3
 8004e46:	f7fd ff99 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004e4a:	e060      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"HELP_EXTENDED"))){
 8004e4c:	f107 030c 	add.w	r3, r7, #12
 8004e50:	4939      	ldr	r1, [pc, #228]	; (8004f38 <Parsing_USB_command+0xc38>)
 8004e52:	4618      	mov	r0, r3
 8004e54:	f7fb f994 	bl	8000180 <strcmp>
 8004e58:	4603      	mov	r3, r0
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	d103      	bne.n	8004e66 <Parsing_USB_command+0xb66>
				send_answer_to_CDC(EXTENDED_HELP);
 8004e5e:	2010      	movs	r0, #16
 8004e60:	f7fd ff8c 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004e64:	e053      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 8004e66:	2000      	movs	r0, #0
 8004e68:	f7fd ff88 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004e6c:	e04f      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
		}
	}

	// ==== SWEEP_DIRECTION command ====
	if(!(strcmp(decoded_string_1,"SWEEP_DIRECTION")))
 8004e6e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004e72:	4932      	ldr	r1, [pc, #200]	; (8004f3c <Parsing_USB_command+0xc3c>)
 8004e74:	4618      	mov	r0, r3
 8004e76:	f7fb f983 	bl	8000180 <strcmp>
 8004e7a:	4603      	mov	r3, r0
 8004e7c:	2b00      	cmp	r3, #0
 8004e7e:	d142      	bne.n	8004f06 <Parsing_USB_command+0xc06>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004e80:	f107 030c 	add.w	r3, r7, #12
 8004e84:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004e88:	492d      	ldr	r1, [pc, #180]	; (8004f40 <Parsing_USB_command+0xc40>)
 8004e8a:	482e      	ldr	r0, [pc, #184]	; (8004f44 <Parsing_USB_command+0xc44>)
 8004e8c:	f006 feba 	bl	800bc04 <siscanf>
 8004e90:	4603      	mov	r3, r0
 8004e92:	2b02      	cmp	r3, #2
 8004e94:	d003      	beq.n	8004e9e <Parsing_USB_command+0xb9e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004e96:	2001      	movs	r0, #1
 8004e98:	f7fd ff70 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004e9c:	e037      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}

		if(!(strcmp(decoded_string_2,"UP"))){
 8004e9e:	f107 030c 	add.w	r3, r7, #12
 8004ea2:	4929      	ldr	r1, [pc, #164]	; (8004f48 <Parsing_USB_command+0xc48>)
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	f7fb f96b 	bl	8000180 <strcmp>
 8004eaa:	4603      	mov	r3, r0
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d106      	bne.n	8004ebe <Parsing_USB_command+0xbbe>
			DAC_code_direction=DIRECTION_UP_STATE;
 8004eb0:	4b26      	ldr	r3, [pc, #152]	; (8004f4c <Parsing_USB_command+0xc4c>)
 8004eb2:	2201      	movs	r2, #1
 8004eb4:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004eb6:	2003      	movs	r0, #3
 8004eb8:	f7fd ff60 	bl	8002d7c <send_answer_to_CDC>
			return;
 8004ebc:	e027      	b.n	8004f0e <Parsing_USB_command+0xc0e>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 8004ebe:	f107 030c 	add.w	r3, r7, #12
 8004ec2:	4923      	ldr	r1, [pc, #140]	; (8004f50 <Parsing_USB_command+0xc50>)
 8004ec4:	4618      	mov	r0, r3
 8004ec6:	f7fb f95b 	bl	8000180 <strcmp>
 8004eca:	4603      	mov	r3, r0
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d106      	bne.n	8004ede <Parsing_USB_command+0xbde>
				DAC_code_direction=DIRECTION_DOWN_STATE;
 8004ed0:	4b1e      	ldr	r3, [pc, #120]	; (8004f4c <Parsing_USB_command+0xc4c>)
 8004ed2:	2200      	movs	r2, #0
 8004ed4:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 8004ed6:	2003      	movs	r0, #3
 8004ed8:	f7fd ff50 	bl	8002d7c <send_answer_to_CDC>
				return;
 8004edc:	e017      	b.n	8004f0e <Parsing_USB_command+0xc0e>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"CYCLE"))){
 8004ede:	f107 030c 	add.w	r3, r7, #12
 8004ee2:	491c      	ldr	r1, [pc, #112]	; (8004f54 <Parsing_USB_command+0xc54>)
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	f7fb f94b 	bl	8000180 <strcmp>
 8004eea:	4603      	mov	r3, r0
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d106      	bne.n	8004efe <Parsing_USB_command+0xbfe>
					DAC_code_direction=DIRECTION_CYCLE_STATE;
 8004ef0:	4b16      	ldr	r3, [pc, #88]	; (8004f4c <Parsing_USB_command+0xc4c>)
 8004ef2:	2202      	movs	r2, #2
 8004ef4:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 8004ef6:	2003      	movs	r0, #3
 8004ef8:	f7fd ff40 	bl	8002d7c <send_answer_to_CDC>
					return;
 8004efc:	e007      	b.n	8004f0e <Parsing_USB_command+0xc0e>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_1);
 8004efe:	2000      	movs	r0, #0
 8004f00:	f7fd ff3c 	bl	8002d7c <send_answer_to_CDC>
					return;
 8004f04:	e003      	b.n	8004f0e <Parsing_USB_command+0xc0e>
				}
			}
		}
	}

	send_answer_to_CDC(ERROR_TYPE_1);
 8004f06:	2000      	movs	r0, #0
 8004f08:	f7fd ff38 	bl	8002d7c <send_answer_to_CDC>
	return;
 8004f0c:	bf00      	nop
}
 8004f0e:	3794      	adds	r7, #148	; 0x94
 8004f10:	46bd      	mov	sp, r7
 8004f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f14:	2000074c 	.word	0x2000074c
 8004f18:	200007ec 	.word	0x200007ec
 8004f1c:	08010318 	.word	0x08010318
 8004f20:	200007ea 	.word	0x200007ea
 8004f24:	08010328 	.word	0x08010328
 8004f28:	2000080c 	.word	0x2000080c
 8004f2c:	08010344 	.word	0x08010344
 8004f30:	200006f8 	.word	0x200006f8
 8004f34:	08010358 	.word	0x08010358
 8004f38:	08010370 	.word	0x08010370
 8004f3c:	08010380 	.word	0x08010380
 8004f40:	08010094 	.word	0x08010094
 8004f44:	200006b8 	.word	0x200006b8
 8004f48:	08010390 	.word	0x08010390
 8004f4c:	20000814 	.word	0x20000814
 8004f50:	080100c8 	.word	0x080100c8
 8004f54:	08010394 	.word	0x08010394

08004f58 <Write_to_circ_buffer>:

void Write_to_circ_buffer(uint8_t Buf)
{
 8004f58:	b580      	push	{r7, lr}
 8004f5a:	b082      	sub	sp, #8
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	4603      	mov	r3, r0
 8004f60:	71fb      	strb	r3, [r7, #7]
	if(CIRC_GBUF_PUSH(USB_rx_command_buffer, &Buf))	CIRC_GBUF_FLUSH(USB_rx_command_buffer); // If out of space, something wrong, clean all !!!
 8004f62:	1dfb      	adds	r3, r7, #7
 8004f64:	4618      	mov	r0, r3
 8004f66:	f7fe fe03 	bl	8003b70 <USB_rx_command_buffer_push_refd>
 8004f6a:	4603      	mov	r3, r0
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d005      	beq.n	8004f7c <Write_to_circ_buffer+0x24>
 8004f70:	4b04      	ldr	r3, [pc, #16]	; (8004f84 <Write_to_circ_buffer+0x2c>)
 8004f72:	2200      	movs	r2, #0
 8004f74:	809a      	strh	r2, [r3, #4]
 8004f76:	4b03      	ldr	r3, [pc, #12]	; (8004f84 <Write_to_circ_buffer+0x2c>)
 8004f78:	2200      	movs	r2, #0
 8004f7a:	80da      	strh	r2, [r3, #6]
}
 8004f7c:	bf00      	nop
 8004f7e:	3708      	adds	r7, #8
 8004f80:	46bd      	mov	sp, r7
 8004f82:	bd80      	pop	{r7, pc}
 8004f84:	20000000 	.word	0x20000000

08004f88 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004f88:	b480      	push	{r7}
 8004f8a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004f8c:	b672      	cpsid	i
}
 8004f8e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8004f90:	e7fe      	b.n	8004f90 <Error_Handler+0x8>
	...

08004f94 <MX_SPI1_Init>:
SPI_HandleTypeDef hspi1;
SPI_HandleTypeDef hspi2;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8004f94:	b580      	push	{r7, lr}
 8004f96:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8004f98:	4b16      	ldr	r3, [pc, #88]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004f9a:	4a17      	ldr	r2, [pc, #92]	; (8004ff8 <MX_SPI1_Init+0x64>)
 8004f9c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004f9e:	4b15      	ldr	r3, [pc, #84]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fa0:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004fa4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004fa6:	4b13      	ldr	r3, [pc, #76]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fa8:	2200      	movs	r2, #0
 8004faa:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 8004fac:	4b11      	ldr	r3, [pc, #68]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fae:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004fb2:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004fb4:	4b0f      	ldr	r3, [pc, #60]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fb6:	2200      	movs	r2, #0
 8004fb8:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8004fba:	4b0e      	ldr	r3, [pc, #56]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fbc:	2201      	movs	r2, #1
 8004fbe:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004fc0:	4b0c      	ldr	r3, [pc, #48]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fc2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004fc6:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8004fc8:	4b0a      	ldr	r3, [pc, #40]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fca:	2218      	movs	r2, #24
 8004fcc:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004fce:	4b09      	ldr	r3, [pc, #36]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fd0:	2200      	movs	r2, #0
 8004fd2:	621a      	str	r2, [r3, #32]
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004fd4:	4b07      	ldr	r3, [pc, #28]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8004fda:	4b06      	ldr	r3, [pc, #24]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fdc:	220a      	movs	r2, #10
 8004fde:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004fe0:	4804      	ldr	r0, [pc, #16]	; (8004ff4 <MX_SPI1_Init+0x60>)
 8004fe2:	f003 f833 	bl	800804c <HAL_SPI_Init>
 8004fe6:	4603      	mov	r3, r0
 8004fe8:	2b00      	cmp	r3, #0
 8004fea:	d001      	beq.n	8004ff0 <MX_SPI1_Init+0x5c>
  {
    Error_Handler();
 8004fec:	f7ff ffcc 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8004ff0:	bf00      	nop
 8004ff2:	bd80      	pop	{r7, pc}
 8004ff4:	20000820 	.word	0x20000820
 8004ff8:	40013000 	.word	0x40013000

08004ffc <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8004ffc:	b580      	push	{r7, lr}
 8004ffe:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8005000:	4b16      	ldr	r3, [pc, #88]	; (800505c <MX_SPI2_Init+0x60>)
 8005002:	4a17      	ldr	r2, [pc, #92]	; (8005060 <MX_SPI2_Init+0x64>)
 8005004:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8005006:	4b15      	ldr	r3, [pc, #84]	; (800505c <MX_SPI2_Init+0x60>)
 8005008:	f44f 7282 	mov.w	r2, #260	; 0x104
 800500c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800500e:	4b13      	ldr	r3, [pc, #76]	; (800505c <MX_SPI2_Init+0x60>)
 8005010:	2200      	movs	r2, #0
 8005012:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 8005014:	4b11      	ldr	r3, [pc, #68]	; (800505c <MX_SPI2_Init+0x60>)
 8005016:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800501a:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800501c:	4b0f      	ldr	r3, [pc, #60]	; (800505c <MX_SPI2_Init+0x60>)
 800501e:	2200      	movs	r2, #0
 8005020:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8005022:	4b0e      	ldr	r3, [pc, #56]	; (800505c <MX_SPI2_Init+0x60>)
 8005024:	2201      	movs	r2, #1
 8005026:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8005028:	4b0c      	ldr	r3, [pc, #48]	; (800505c <MX_SPI2_Init+0x60>)
 800502a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800502e:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8005030:	4b0a      	ldr	r3, [pc, #40]	; (800505c <MX_SPI2_Init+0x60>)
 8005032:	2218      	movs	r2, #24
 8005034:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8005036:	4b09      	ldr	r3, [pc, #36]	; (800505c <MX_SPI2_Init+0x60>)
 8005038:	2200      	movs	r2, #0
 800503a:	621a      	str	r2, [r3, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800503c:	4b07      	ldr	r3, [pc, #28]	; (800505c <MX_SPI2_Init+0x60>)
 800503e:	2200      	movs	r2, #0
 8005040:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8005042:	4b06      	ldr	r3, [pc, #24]	; (800505c <MX_SPI2_Init+0x60>)
 8005044:	220a      	movs	r2, #10
 8005046:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8005048:	4804      	ldr	r0, [pc, #16]	; (800505c <MX_SPI2_Init+0x60>)
 800504a:	f002 ffff 	bl	800804c <HAL_SPI_Init>
 800504e:	4603      	mov	r3, r0
 8005050:	2b00      	cmp	r3, #0
 8005052:	d001      	beq.n	8005058 <MX_SPI2_Init+0x5c>
  {
    Error_Handler();
 8005054:	f7ff ff98 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8005058:	bf00      	nop
 800505a:	bd80      	pop	{r7, pc}
 800505c:	20000878 	.word	0x20000878
 8005060:	40003800 	.word	0x40003800

08005064 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8005064:	b580      	push	{r7, lr}
 8005066:	b08c      	sub	sp, #48	; 0x30
 8005068:	af00      	add	r7, sp, #0
 800506a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800506c:	f107 031c 	add.w	r3, r7, #28
 8005070:	2200      	movs	r2, #0
 8005072:	601a      	str	r2, [r3, #0]
 8005074:	605a      	str	r2, [r3, #4]
 8005076:	609a      	str	r2, [r3, #8]
 8005078:	60da      	str	r2, [r3, #12]
 800507a:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	4a32      	ldr	r2, [pc, #200]	; (800514c <HAL_SPI_MspInit+0xe8>)
 8005082:	4293      	cmp	r3, r2
 8005084:	d130      	bne.n	80050e8 <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8005086:	4b32      	ldr	r3, [pc, #200]	; (8005150 <HAL_SPI_MspInit+0xec>)
 8005088:	6a1b      	ldr	r3, [r3, #32]
 800508a:	4a31      	ldr	r2, [pc, #196]	; (8005150 <HAL_SPI_MspInit+0xec>)
 800508c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8005090:	6213      	str	r3, [r2, #32]
 8005092:	4b2f      	ldr	r3, [pc, #188]	; (8005150 <HAL_SPI_MspInit+0xec>)
 8005094:	6a1b      	ldr	r3, [r3, #32]
 8005096:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800509a:	61bb      	str	r3, [r7, #24]
 800509c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800509e:	4b2c      	ldr	r3, [pc, #176]	; (8005150 <HAL_SPI_MspInit+0xec>)
 80050a0:	69db      	ldr	r3, [r3, #28]
 80050a2:	4a2b      	ldr	r2, [pc, #172]	; (8005150 <HAL_SPI_MspInit+0xec>)
 80050a4:	f043 0301 	orr.w	r3, r3, #1
 80050a8:	61d3      	str	r3, [r2, #28]
 80050aa:	4b29      	ldr	r3, [pc, #164]	; (8005150 <HAL_SPI_MspInit+0xec>)
 80050ac:	69db      	ldr	r3, [r3, #28]
 80050ae:	f003 0301 	and.w	r3, r3, #1
 80050b2:	617b      	str	r3, [r7, #20]
 80050b4:	697b      	ldr	r3, [r7, #20]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 80050b6:	23e0      	movs	r3, #224	; 0xe0
 80050b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80050ba:	2302      	movs	r3, #2
 80050bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80050be:	2300      	movs	r3, #0
 80050c0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80050c2:	2303      	movs	r3, #3
 80050c4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80050c6:	2305      	movs	r3, #5
 80050c8:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80050ca:	f107 031c 	add.w	r3, r7, #28
 80050ce:	4619      	mov	r1, r3
 80050d0:	4820      	ldr	r0, [pc, #128]	; (8005154 <HAL_SPI_MspInit+0xf0>)
 80050d2:	f000 fe9f 	bl	8005e14 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 1, 0);
 80050d6:	2200      	movs	r2, #0
 80050d8:	2101      	movs	r1, #1
 80050da:	2023      	movs	r0, #35	; 0x23
 80050dc:	f000 fc5e 	bl	800599c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 80050e0:	2023      	movs	r0, #35	; 0x23
 80050e2:	f000 fc99 	bl	8005a18 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 80050e6:	e02d      	b.n	8005144 <HAL_SPI_MspInit+0xe0>
  else if(spiHandle->Instance==SPI2)
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	4a1a      	ldr	r2, [pc, #104]	; (8005158 <HAL_SPI_MspInit+0xf4>)
 80050ee:	4293      	cmp	r3, r2
 80050f0:	d128      	bne.n	8005144 <HAL_SPI_MspInit+0xe0>
    __HAL_RCC_SPI2_CLK_ENABLE();
 80050f2:	4b17      	ldr	r3, [pc, #92]	; (8005150 <HAL_SPI_MspInit+0xec>)
 80050f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050f6:	4a16      	ldr	r2, [pc, #88]	; (8005150 <HAL_SPI_MspInit+0xec>)
 80050f8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80050fc:	6253      	str	r3, [r2, #36]	; 0x24
 80050fe:	4b14      	ldr	r3, [pc, #80]	; (8005150 <HAL_SPI_MspInit+0xec>)
 8005100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005102:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005106:	613b      	str	r3, [r7, #16]
 8005108:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800510a:	4b11      	ldr	r3, [pc, #68]	; (8005150 <HAL_SPI_MspInit+0xec>)
 800510c:	69db      	ldr	r3, [r3, #28]
 800510e:	4a10      	ldr	r2, [pc, #64]	; (8005150 <HAL_SPI_MspInit+0xec>)
 8005110:	f043 0302 	orr.w	r3, r3, #2
 8005114:	61d3      	str	r3, [r2, #28]
 8005116:	4b0e      	ldr	r3, [pc, #56]	; (8005150 <HAL_SPI_MspInit+0xec>)
 8005118:	69db      	ldr	r3, [r3, #28]
 800511a:	f003 0302 	and.w	r3, r3, #2
 800511e:	60fb      	str	r3, [r7, #12]
 8005120:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8005122:	f44f 4320 	mov.w	r3, #40960	; 0xa000
 8005126:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005128:	2302      	movs	r3, #2
 800512a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800512c:	2300      	movs	r3, #0
 800512e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005130:	2303      	movs	r3, #3
 8005132:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8005134:	2305      	movs	r3, #5
 8005136:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005138:	f107 031c 	add.w	r3, r7, #28
 800513c:	4619      	mov	r1, r3
 800513e:	4807      	ldr	r0, [pc, #28]	; (800515c <HAL_SPI_MspInit+0xf8>)
 8005140:	f000 fe68 	bl	8005e14 <HAL_GPIO_Init>
}
 8005144:	bf00      	nop
 8005146:	3730      	adds	r7, #48	; 0x30
 8005148:	46bd      	mov	sp, r7
 800514a:	bd80      	pop	{r7, pc}
 800514c:	40013000 	.word	0x40013000
 8005150:	40023800 	.word	0x40023800
 8005154:	40020000 	.word	0x40020000
 8005158:	40003800 	.word	0x40003800
 800515c:	40020400 	.word	0x40020400

08005160 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8005160:	b580      	push	{r7, lr}
 8005162:	b084      	sub	sp, #16
 8005164:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 8005166:	4b26      	ldr	r3, [pc, #152]	; (8005200 <HAL_MspInit+0xa0>)
 8005168:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800516a:	4a25      	ldr	r2, [pc, #148]	; (8005200 <HAL_MspInit+0xa0>)
 800516c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8005170:	6253      	str	r3, [r2, #36]	; 0x24
 8005172:	4b23      	ldr	r3, [pc, #140]	; (8005200 <HAL_MspInit+0xa0>)
 8005174:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005176:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800517a:	60fb      	str	r3, [r7, #12]
 800517c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800517e:	4b20      	ldr	r3, [pc, #128]	; (8005200 <HAL_MspInit+0xa0>)
 8005180:	6a1b      	ldr	r3, [r3, #32]
 8005182:	4a1f      	ldr	r2, [pc, #124]	; (8005200 <HAL_MspInit+0xa0>)
 8005184:	f043 0301 	orr.w	r3, r3, #1
 8005188:	6213      	str	r3, [r2, #32]
 800518a:	4b1d      	ldr	r3, [pc, #116]	; (8005200 <HAL_MspInit+0xa0>)
 800518c:	6a1b      	ldr	r3, [r3, #32]
 800518e:	f003 0301 	and.w	r3, r3, #1
 8005192:	60bb      	str	r3, [r7, #8]
 8005194:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8005196:	4b1a      	ldr	r3, [pc, #104]	; (8005200 <HAL_MspInit+0xa0>)
 8005198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800519a:	4a19      	ldr	r2, [pc, #100]	; (8005200 <HAL_MspInit+0xa0>)
 800519c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80051a0:	6253      	str	r3, [r2, #36]	; 0x24
 80051a2:	4b17      	ldr	r3, [pc, #92]	; (8005200 <HAL_MspInit+0xa0>)
 80051a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80051aa:	607b      	str	r3, [r7, #4]
 80051ac:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 1, 0);
 80051ae:	2200      	movs	r2, #0
 80051b0:	2101      	movs	r1, #1
 80051b2:	f06f 000b 	mvn.w	r0, #11
 80051b6:	f000 fbf1 	bl	800599c <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 1, 0);
 80051ba:	2200      	movs	r2, #0
 80051bc:	2101      	movs	r1, #1
 80051be:	f06f 000a 	mvn.w	r0, #10
 80051c2:	f000 fbeb 	bl	800599c <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 1, 0);
 80051c6:	2200      	movs	r2, #0
 80051c8:	2101      	movs	r1, #1
 80051ca:	f06f 0009 	mvn.w	r0, #9
 80051ce:	f000 fbe5 	bl	800599c <HAL_NVIC_SetPriority>
  /* SVC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVC_IRQn, 1, 0);
 80051d2:	2200      	movs	r2, #0
 80051d4:	2101      	movs	r1, #1
 80051d6:	f06f 0004 	mvn.w	r0, #4
 80051da:	f000 fbdf 	bl	800599c <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 1, 0);
 80051de:	2200      	movs	r2, #0
 80051e0:	2101      	movs	r1, #1
 80051e2:	f06f 0003 	mvn.w	r0, #3
 80051e6:	f000 fbd9 	bl	800599c <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 1, 0);
 80051ea:	2200      	movs	r2, #0
 80051ec:	2101      	movs	r1, #1
 80051ee:	f06f 0001 	mvn.w	r0, #1
 80051f2:	f000 fbd3 	bl	800599c <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80051f6:	bf00      	nop
 80051f8:	3710      	adds	r7, #16
 80051fa:	46bd      	mov	sp, r7
 80051fc:	bd80      	pop	{r7, pc}
 80051fe:	bf00      	nop
 8005200:	40023800 	.word	0x40023800

08005204 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8005204:	b480      	push	{r7}
 8005206:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8005208:	e7fe      	b.n	8005208 <NMI_Handler+0x4>

0800520a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800520a:	b480      	push	{r7}
 800520c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800520e:	e7fe      	b.n	800520e <HardFault_Handler+0x4>

08005210 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8005210:	b480      	push	{r7}
 8005212:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8005214:	e7fe      	b.n	8005214 <MemManage_Handler+0x4>

08005216 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8005216:	b480      	push	{r7}
 8005218:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800521a:	e7fe      	b.n	800521a <BusFault_Handler+0x4>

0800521c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800521c:	b480      	push	{r7}
 800521e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8005220:	e7fe      	b.n	8005220 <UsageFault_Handler+0x4>

08005222 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8005222:	b480      	push	{r7}
 8005224:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8005226:	bf00      	nop
 8005228:	46bd      	mov	sp, r7
 800522a:	bc80      	pop	{r7}
 800522c:	4770      	bx	lr

0800522e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800522e:	b480      	push	{r7}
 8005230:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8005232:	bf00      	nop
 8005234:	46bd      	mov	sp, r7
 8005236:	bc80      	pop	{r7}
 8005238:	4770      	bx	lr

0800523a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800523a:	b480      	push	{r7}
 800523c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800523e:	bf00      	nop
 8005240:	46bd      	mov	sp, r7
 8005242:	bc80      	pop	{r7}
 8005244:	4770      	bx	lr

08005246 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8005246:	b580      	push	{r7, lr}
 8005248:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800524a:	f000 fb71 	bl	8005930 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800524e:	bf00      	nop
 8005250:	bd80      	pop	{r7, pc}
	...

08005254 <USB_LP_IRQHandler>:

/**
  * @brief This function handles USB low priority interrupt.
  */
void USB_LP_IRQHandler(void)
{
 8005254:	b580      	push	{r7, lr}
 8005256:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8005258:	4802      	ldr	r0, [pc, #8]	; (8005264 <USB_LP_IRQHandler+0x10>)
 800525a:	f001 fc29 	bl	8006ab0 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN USB_LP_IRQn 1 */

  /* USER CODE END USB_LP_IRQn 1 */
}
 800525e:	bf00      	nop
 8005260:	bd80      	pop	{r7, pc}
 8005262:	bf00      	nop
 8005264:	20000fd8 	.word	0x20000fd8

08005268 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8005268:	b580      	push	{r7, lr}
 800526a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Encode_Push_Pin);
 800526c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8005270:	f000 fec4 	bl	8005ffc <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(CPU_IRQ_Pin);
 8005274:	f44f 7000 	mov.w	r0, #512	; 0x200
 8005278:	f000 fec0 	bl	8005ffc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 800527c:	bf00      	nop
 800527e:	bd80      	pop	{r7, pc}

08005280 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8005280:	b580      	push	{r7, lr}
 8005282:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8005284:	4802      	ldr	r0, [pc, #8]	; (8005290 <TIM2_IRQHandler+0x10>)
 8005286:	f003 fd97 	bl	8008db8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800528a:	bf00      	nop
 800528c:	bd80      	pop	{r7, pc}
 800528e:	bf00      	nop
 8005290:	200008d4 	.word	0x200008d4

08005294 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8005294:	b580      	push	{r7, lr}
 8005296:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8005298:	4802      	ldr	r0, [pc, #8]	; (80052a4 <TIM3_IRQHandler+0x10>)
 800529a:	f003 fd8d 	bl	8008db8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800529e:	bf00      	nop
 80052a0:	bd80      	pop	{r7, pc}
 80052a2:	bf00      	nop
 80052a4:	20000914 	.word	0x20000914

080052a8 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80052a8:	b580      	push	{r7, lr}
 80052aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 80052ac:	4802      	ldr	r0, [pc, #8]	; (80052b8 <SPI1_IRQHandler+0x10>)
 80052ae:	f003 fb07 	bl	80088c0 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 80052b2:	bf00      	nop
 80052b4:	bd80      	pop	{r7, pc}
 80052b6:	bf00      	nop
 80052b8:	20000820 	.word	0x20000820

080052bc <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80052bc:	b580      	push	{r7, lr}
 80052be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Start_button_Pin);
 80052c0:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80052c4:	f000 fe9a 	bl	8005ffc <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80052c8:	bf00      	nop
 80052ca:	bd80      	pop	{r7, pc}

080052cc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80052cc:	b480      	push	{r7}
 80052ce:	af00      	add	r7, sp, #0
	return 1;
 80052d0:	2301      	movs	r3, #1
}
 80052d2:	4618      	mov	r0, r3
 80052d4:	46bd      	mov	sp, r7
 80052d6:	bc80      	pop	{r7}
 80052d8:	4770      	bx	lr

080052da <_kill>:

int _kill(int pid, int sig)
{
 80052da:	b580      	push	{r7, lr}
 80052dc:	b082      	sub	sp, #8
 80052de:	af00      	add	r7, sp, #0
 80052e0:	6078      	str	r0, [r7, #4]
 80052e2:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80052e4:	f005 fdbc 	bl	800ae60 <__errno>
 80052e8:	4603      	mov	r3, r0
 80052ea:	2216      	movs	r2, #22
 80052ec:	601a      	str	r2, [r3, #0]
	return -1;
 80052ee:	f04f 33ff 	mov.w	r3, #4294967295
}
 80052f2:	4618      	mov	r0, r3
 80052f4:	3708      	adds	r7, #8
 80052f6:	46bd      	mov	sp, r7
 80052f8:	bd80      	pop	{r7, pc}

080052fa <_exit>:

void _exit (int status)
{
 80052fa:	b580      	push	{r7, lr}
 80052fc:	b082      	sub	sp, #8
 80052fe:	af00      	add	r7, sp, #0
 8005300:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8005302:	f04f 31ff 	mov.w	r1, #4294967295
 8005306:	6878      	ldr	r0, [r7, #4]
 8005308:	f7ff ffe7 	bl	80052da <_kill>
	while (1) {}		/* Make sure we hang here */
 800530c:	e7fe      	b.n	800530c <_exit+0x12>

0800530e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800530e:	b580      	push	{r7, lr}
 8005310:	b086      	sub	sp, #24
 8005312:	af00      	add	r7, sp, #0
 8005314:	60f8      	str	r0, [r7, #12]
 8005316:	60b9      	str	r1, [r7, #8]
 8005318:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800531a:	2300      	movs	r3, #0
 800531c:	617b      	str	r3, [r7, #20]
 800531e:	e00a      	b.n	8005336 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8005320:	f3af 8000 	nop.w
 8005324:	4601      	mov	r1, r0
 8005326:	68bb      	ldr	r3, [r7, #8]
 8005328:	1c5a      	adds	r2, r3, #1
 800532a:	60ba      	str	r2, [r7, #8]
 800532c:	b2ca      	uxtb	r2, r1
 800532e:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8005330:	697b      	ldr	r3, [r7, #20]
 8005332:	3301      	adds	r3, #1
 8005334:	617b      	str	r3, [r7, #20]
 8005336:	697a      	ldr	r2, [r7, #20]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	429a      	cmp	r2, r3
 800533c:	dbf0      	blt.n	8005320 <_read+0x12>
	}

return len;
 800533e:	687b      	ldr	r3, [r7, #4]
}
 8005340:	4618      	mov	r0, r3
 8005342:	3718      	adds	r7, #24
 8005344:	46bd      	mov	sp, r7
 8005346:	bd80      	pop	{r7, pc}

08005348 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8005348:	b580      	push	{r7, lr}
 800534a:	b086      	sub	sp, #24
 800534c:	af00      	add	r7, sp, #0
 800534e:	60f8      	str	r0, [r7, #12]
 8005350:	60b9      	str	r1, [r7, #8]
 8005352:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8005354:	2300      	movs	r3, #0
 8005356:	617b      	str	r3, [r7, #20]
 8005358:	e009      	b.n	800536e <_write+0x26>
	{
		__io_putchar(*ptr++);
 800535a:	68bb      	ldr	r3, [r7, #8]
 800535c:	1c5a      	adds	r2, r3, #1
 800535e:	60ba      	str	r2, [r7, #8]
 8005360:	781b      	ldrb	r3, [r3, #0]
 8005362:	4618      	mov	r0, r3
 8005364:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8005368:	697b      	ldr	r3, [r7, #20]
 800536a:	3301      	adds	r3, #1
 800536c:	617b      	str	r3, [r7, #20]
 800536e:	697a      	ldr	r2, [r7, #20]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	429a      	cmp	r2, r3
 8005374:	dbf1      	blt.n	800535a <_write+0x12>
	}
	return len;
 8005376:	687b      	ldr	r3, [r7, #4]
}
 8005378:	4618      	mov	r0, r3
 800537a:	3718      	adds	r7, #24
 800537c:	46bd      	mov	sp, r7
 800537e:	bd80      	pop	{r7, pc}

08005380 <_close>:

int _close(int file)
{
 8005380:	b480      	push	{r7}
 8005382:	b083      	sub	sp, #12
 8005384:	af00      	add	r7, sp, #0
 8005386:	6078      	str	r0, [r7, #4]
	return -1;
 8005388:	f04f 33ff 	mov.w	r3, #4294967295
}
 800538c:	4618      	mov	r0, r3
 800538e:	370c      	adds	r7, #12
 8005390:	46bd      	mov	sp, r7
 8005392:	bc80      	pop	{r7}
 8005394:	4770      	bx	lr

08005396 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8005396:	b480      	push	{r7}
 8005398:	b083      	sub	sp, #12
 800539a:	af00      	add	r7, sp, #0
 800539c:	6078      	str	r0, [r7, #4]
 800539e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80053a0:	683b      	ldr	r3, [r7, #0]
 80053a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80053a6:	605a      	str	r2, [r3, #4]
	return 0;
 80053a8:	2300      	movs	r3, #0
}
 80053aa:	4618      	mov	r0, r3
 80053ac:	370c      	adds	r7, #12
 80053ae:	46bd      	mov	sp, r7
 80053b0:	bc80      	pop	{r7}
 80053b2:	4770      	bx	lr

080053b4 <_isatty>:

int _isatty(int file)
{
 80053b4:	b480      	push	{r7}
 80053b6:	b083      	sub	sp, #12
 80053b8:	af00      	add	r7, sp, #0
 80053ba:	6078      	str	r0, [r7, #4]
	return 1;
 80053bc:	2301      	movs	r3, #1
}
 80053be:	4618      	mov	r0, r3
 80053c0:	370c      	adds	r7, #12
 80053c2:	46bd      	mov	sp, r7
 80053c4:	bc80      	pop	{r7}
 80053c6:	4770      	bx	lr

080053c8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80053c8:	b480      	push	{r7}
 80053ca:	b085      	sub	sp, #20
 80053cc:	af00      	add	r7, sp, #0
 80053ce:	60f8      	str	r0, [r7, #12]
 80053d0:	60b9      	str	r1, [r7, #8]
 80053d2:	607a      	str	r2, [r7, #4]
	return 0;
 80053d4:	2300      	movs	r3, #0
}
 80053d6:	4618      	mov	r0, r3
 80053d8:	3714      	adds	r7, #20
 80053da:	46bd      	mov	sp, r7
 80053dc:	bc80      	pop	{r7}
 80053de:	4770      	bx	lr

080053e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80053e0:	b580      	push	{r7, lr}
 80053e2:	b086      	sub	sp, #24
 80053e4:	af00      	add	r7, sp, #0
 80053e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80053e8:	4a14      	ldr	r2, [pc, #80]	; (800543c <_sbrk+0x5c>)
 80053ea:	4b15      	ldr	r3, [pc, #84]	; (8005440 <_sbrk+0x60>)
 80053ec:	1ad3      	subs	r3, r2, r3
 80053ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80053f0:	697b      	ldr	r3, [r7, #20]
 80053f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80053f4:	4b13      	ldr	r3, [pc, #76]	; (8005444 <_sbrk+0x64>)
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d102      	bne.n	8005402 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80053fc:	4b11      	ldr	r3, [pc, #68]	; (8005444 <_sbrk+0x64>)
 80053fe:	4a12      	ldr	r2, [pc, #72]	; (8005448 <_sbrk+0x68>)
 8005400:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8005402:	4b10      	ldr	r3, [pc, #64]	; (8005444 <_sbrk+0x64>)
 8005404:	681a      	ldr	r2, [r3, #0]
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	4413      	add	r3, r2
 800540a:	693a      	ldr	r2, [r7, #16]
 800540c:	429a      	cmp	r2, r3
 800540e:	d207      	bcs.n	8005420 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8005410:	f005 fd26 	bl	800ae60 <__errno>
 8005414:	4603      	mov	r3, r0
 8005416:	220c      	movs	r2, #12
 8005418:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800541a:	f04f 33ff 	mov.w	r3, #4294967295
 800541e:	e009      	b.n	8005434 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8005420:	4b08      	ldr	r3, [pc, #32]	; (8005444 <_sbrk+0x64>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8005426:	4b07      	ldr	r3, [pc, #28]	; (8005444 <_sbrk+0x64>)
 8005428:	681a      	ldr	r2, [r3, #0]
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	4413      	add	r3, r2
 800542e:	4a05      	ldr	r2, [pc, #20]	; (8005444 <_sbrk+0x64>)
 8005430:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8005432:	68fb      	ldr	r3, [r7, #12]
}
 8005434:	4618      	mov	r0, r3
 8005436:	3718      	adds	r7, #24
 8005438:	46bd      	mov	sp, r7
 800543a:	bd80      	pop	{r7, pc}
 800543c:	20004000 	.word	0x20004000
 8005440:	00000c00 	.word	0x00000c00
 8005444:	200008d0 	.word	0x200008d0
 8005448:	200014f8 	.word	0x200014f8

0800544c <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800544c:	b480      	push	{r7}
 800544e:	af00      	add	r7, sp, #0
    
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005450:	bf00      	nop
 8005452:	46bd      	mov	sp, r7
 8005454:	bc80      	pop	{r7}
 8005456:	4770      	bx	lr

08005458 <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8005458:	b580      	push	{r7, lr}
 800545a:	b086      	sub	sp, #24
 800545c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800545e:	f107 0308 	add.w	r3, r7, #8
 8005462:	2200      	movs	r2, #0
 8005464:	601a      	str	r2, [r3, #0]
 8005466:	605a      	str	r2, [r3, #4]
 8005468:	609a      	str	r2, [r3, #8]
 800546a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800546c:	463b      	mov	r3, r7
 800546e:	2200      	movs	r2, #0
 8005470:	601a      	str	r2, [r3, #0]
 8005472:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005474:	4b1d      	ldr	r3, [pc, #116]	; (80054ec <MX_TIM2_Init+0x94>)
 8005476:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800547a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 32000 -1;
 800547c:	4b1b      	ldr	r3, [pc, #108]	; (80054ec <MX_TIM2_Init+0x94>)
 800547e:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8005482:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005484:	4b19      	ldr	r3, [pc, #100]	; (80054ec <MX_TIM2_Init+0x94>)
 8005486:	2200      	movs	r2, #0
 8005488:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50 - 1;
 800548a:	4b18      	ldr	r3, [pc, #96]	; (80054ec <MX_TIM2_Init+0x94>)
 800548c:	2231      	movs	r2, #49	; 0x31
 800548e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005490:	4b16      	ldr	r3, [pc, #88]	; (80054ec <MX_TIM2_Init+0x94>)
 8005492:	2200      	movs	r2, #0
 8005494:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005496:	4b15      	ldr	r3, [pc, #84]	; (80054ec <MX_TIM2_Init+0x94>)
 8005498:	2200      	movs	r2, #0
 800549a:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800549c:	4813      	ldr	r0, [pc, #76]	; (80054ec <MX_TIM2_Init+0x94>)
 800549e:	f003 faa3 	bl	80089e8 <HAL_TIM_Base_Init>
 80054a2:	4603      	mov	r3, r0
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d001      	beq.n	80054ac <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80054a8:	f7ff fd6e 	bl	8004f88 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80054ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80054b0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80054b2:	f107 0308 	add.w	r3, r7, #8
 80054b6:	4619      	mov	r1, r3
 80054b8:	480c      	ldr	r0, [pc, #48]	; (80054ec <MX_TIM2_Init+0x94>)
 80054ba:	f003 fbcf 	bl	8008c5c <HAL_TIM_ConfigClockSource>
 80054be:	4603      	mov	r3, r0
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d001      	beq.n	80054c8 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80054c4:	f7ff fd60 	bl	8004f88 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80054c8:	2300      	movs	r3, #0
 80054ca:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80054cc:	2300      	movs	r3, #0
 80054ce:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80054d0:	463b      	mov	r3, r7
 80054d2:	4619      	mov	r1, r3
 80054d4:	4805      	ldr	r0, [pc, #20]	; (80054ec <MX_TIM2_Init+0x94>)
 80054d6:	f003 fcfb 	bl	8008ed0 <HAL_TIMEx_MasterConfigSynchronization>
 80054da:	4603      	mov	r3, r0
 80054dc:	2b00      	cmp	r3, #0
 80054de:	d001      	beq.n	80054e4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80054e0:	f7ff fd52 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80054e4:	bf00      	nop
 80054e6:	3718      	adds	r7, #24
 80054e8:	46bd      	mov	sp, r7
 80054ea:	bd80      	pop	{r7, pc}
 80054ec:	200008d4 	.word	0x200008d4

080054f0 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80054f0:	b580      	push	{r7, lr}
 80054f2:	b086      	sub	sp, #24
 80054f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80054f6:	f107 0308 	add.w	r3, r7, #8
 80054fa:	2200      	movs	r2, #0
 80054fc:	601a      	str	r2, [r3, #0]
 80054fe:	605a      	str	r2, [r3, #4]
 8005500:	609a      	str	r2, [r3, #8]
 8005502:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005504:	463b      	mov	r3, r7
 8005506:	2200      	movs	r2, #0
 8005508:	601a      	str	r2, [r3, #0]
 800550a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800550c:	4b1d      	ldr	r3, [pc, #116]	; (8005584 <MX_TIM3_Init+0x94>)
 800550e:	4a1e      	ldr	r2, [pc, #120]	; (8005588 <MX_TIM3_Init+0x98>)
 8005510:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 32000 -1;
 8005512:	4b1c      	ldr	r3, [pc, #112]	; (8005584 <MX_TIM3_Init+0x94>)
 8005514:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8005518:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800551a:	4b1a      	ldr	r3, [pc, #104]	; (8005584 <MX_TIM3_Init+0x94>)
 800551c:	2200      	movs	r2, #0
 800551e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 500 -1;
 8005520:	4b18      	ldr	r3, [pc, #96]	; (8005584 <MX_TIM3_Init+0x94>)
 8005522:	f240 12f3 	movw	r2, #499	; 0x1f3
 8005526:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005528:	4b16      	ldr	r3, [pc, #88]	; (8005584 <MX_TIM3_Init+0x94>)
 800552a:	2200      	movs	r2, #0
 800552c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800552e:	4b15      	ldr	r3, [pc, #84]	; (8005584 <MX_TIM3_Init+0x94>)
 8005530:	2200      	movs	r2, #0
 8005532:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8005534:	4813      	ldr	r0, [pc, #76]	; (8005584 <MX_TIM3_Init+0x94>)
 8005536:	f003 fa57 	bl	80089e8 <HAL_TIM_Base_Init>
 800553a:	4603      	mov	r3, r0
 800553c:	2b00      	cmp	r3, #0
 800553e:	d001      	beq.n	8005544 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8005540:	f7ff fd22 	bl	8004f88 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005544:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005548:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800554a:	f107 0308 	add.w	r3, r7, #8
 800554e:	4619      	mov	r1, r3
 8005550:	480c      	ldr	r0, [pc, #48]	; (8005584 <MX_TIM3_Init+0x94>)
 8005552:	f003 fb83 	bl	8008c5c <HAL_TIM_ConfigClockSource>
 8005556:	4603      	mov	r3, r0
 8005558:	2b00      	cmp	r3, #0
 800555a:	d001      	beq.n	8005560 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 800555c:	f7ff fd14 	bl	8004f88 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005560:	2300      	movs	r3, #0
 8005562:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005564:	2300      	movs	r3, #0
 8005566:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8005568:	463b      	mov	r3, r7
 800556a:	4619      	mov	r1, r3
 800556c:	4805      	ldr	r0, [pc, #20]	; (8005584 <MX_TIM3_Init+0x94>)
 800556e:	f003 fcaf 	bl	8008ed0 <HAL_TIMEx_MasterConfigSynchronization>
 8005572:	4603      	mov	r3, r0
 8005574:	2b00      	cmp	r3, #0
 8005576:	d001      	beq.n	800557c <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8005578:	f7ff fd06 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800557c:	bf00      	nop
 800557e:	3718      	adds	r7, #24
 8005580:	46bd      	mov	sp, r7
 8005582:	bd80      	pop	{r7, pc}
 8005584:	20000914 	.word	0x20000914
 8005588:	40000400 	.word	0x40000400

0800558c <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 800558c:	b580      	push	{r7, lr}
 800558e:	b08c      	sub	sp, #48	; 0x30
 8005590:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8005592:	f107 030c 	add.w	r3, r7, #12
 8005596:	2224      	movs	r2, #36	; 0x24
 8005598:	2100      	movs	r1, #0
 800559a:	4618      	mov	r0, r3
 800559c:	f005 fc98 	bl	800aed0 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80055a0:	1d3b      	adds	r3, r7, #4
 80055a2:	2200      	movs	r2, #0
 80055a4:	601a      	str	r2, [r3, #0]
 80055a6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80055a8:	4b20      	ldr	r3, [pc, #128]	; (800562c <MX_TIM4_Init+0xa0>)
 80055aa:	4a21      	ldr	r2, [pc, #132]	; (8005630 <MX_TIM4_Init+0xa4>)
 80055ac:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 80055ae:	4b1f      	ldr	r3, [pc, #124]	; (800562c <MX_TIM4_Init+0xa0>)
 80055b0:	2200      	movs	r2, #0
 80055b2:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80055b4:	4b1d      	ldr	r3, [pc, #116]	; (800562c <MX_TIM4_Init+0xa0>)
 80055b6:	2200      	movs	r2, #0
 80055b8:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 80055ba:	4b1c      	ldr	r3, [pc, #112]	; (800562c <MX_TIM4_Init+0xa0>)
 80055bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80055c0:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80055c2:	4b1a      	ldr	r3, [pc, #104]	; (800562c <MX_TIM4_Init+0xa0>)
 80055c4:	2200      	movs	r2, #0
 80055c6:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80055c8:	4b18      	ldr	r3, [pc, #96]	; (800562c <MX_TIM4_Init+0xa0>)
 80055ca:	2200      	movs	r2, #0
 80055cc:	615a      	str	r2, [r3, #20]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80055ce:	2301      	movs	r3, #1
 80055d0:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80055d2:	2300      	movs	r3, #0
 80055d4:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80055d6:	2301      	movs	r3, #1
 80055d8:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80055da:	2300      	movs	r3, #0
 80055dc:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80055de:	2300      	movs	r3, #0
 80055e0:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 80055e2:	2302      	movs	r3, #2
 80055e4:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80055e6:	2301      	movs	r3, #1
 80055e8:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80055ea:	2300      	movs	r3, #0
 80055ec:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 80055ee:	2300      	movs	r3, #0
 80055f0:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 80055f2:	f107 030c 	add.w	r3, r7, #12
 80055f6:	4619      	mov	r1, r3
 80055f8:	480c      	ldr	r0, [pc, #48]	; (800562c <MX_TIM4_Init+0xa0>)
 80055fa:	f003 fa71 	bl	8008ae0 <HAL_TIM_Encoder_Init>
 80055fe:	4603      	mov	r3, r0
 8005600:	2b00      	cmp	r3, #0
 8005602:	d001      	beq.n	8005608 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8005604:	f7ff fcc0 	bl	8004f88 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005608:	2300      	movs	r3, #0
 800560a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800560c:	2300      	movs	r3, #0
 800560e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8005610:	1d3b      	adds	r3, r7, #4
 8005612:	4619      	mov	r1, r3
 8005614:	4805      	ldr	r0, [pc, #20]	; (800562c <MX_TIM4_Init+0xa0>)
 8005616:	f003 fc5b 	bl	8008ed0 <HAL_TIMEx_MasterConfigSynchronization>
 800561a:	4603      	mov	r3, r0
 800561c:	2b00      	cmp	r3, #0
 800561e:	d001      	beq.n	8005624 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8005620:	f7ff fcb2 	bl	8004f88 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8005624:	bf00      	nop
 8005626:	3730      	adds	r7, #48	; 0x30
 8005628:	46bd      	mov	sp, r7
 800562a:	bd80      	pop	{r7, pc}
 800562c:	20000954 	.word	0x20000954
 8005630:	40000800 	.word	0x40000800

08005634 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8005634:	b580      	push	{r7, lr}
 8005636:	b084      	sub	sp, #16
 8005638:	af00      	add	r7, sp, #0
 800563a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	681b      	ldr	r3, [r3, #0]
 8005640:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005644:	d114      	bne.n	8005670 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8005646:	4b19      	ldr	r3, [pc, #100]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 8005648:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800564a:	4a18      	ldr	r2, [pc, #96]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 800564c:	f043 0301 	orr.w	r3, r3, #1
 8005650:	6253      	str	r3, [r2, #36]	; 0x24
 8005652:	4b16      	ldr	r3, [pc, #88]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 8005654:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005656:	f003 0301 	and.w	r3, r3, #1
 800565a:	60fb      	str	r3, [r7, #12]
 800565c:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 800565e:	2200      	movs	r2, #0
 8005660:	2101      	movs	r1, #1
 8005662:	201c      	movs	r0, #28
 8005664:	f000 f99a 	bl	800599c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005668:	201c      	movs	r0, #28
 800566a:	f000 f9d5 	bl	8005a18 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 800566e:	e018      	b.n	80056a2 <HAL_TIM_Base_MspInit+0x6e>
  else if(tim_baseHandle->Instance==TIM3)
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	4a0e      	ldr	r2, [pc, #56]	; (80056b0 <HAL_TIM_Base_MspInit+0x7c>)
 8005676:	4293      	cmp	r3, r2
 8005678:	d113      	bne.n	80056a2 <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800567a:	4b0c      	ldr	r3, [pc, #48]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 800567c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800567e:	4a0b      	ldr	r2, [pc, #44]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 8005680:	f043 0302 	orr.w	r3, r3, #2
 8005684:	6253      	str	r3, [r2, #36]	; 0x24
 8005686:	4b09      	ldr	r3, [pc, #36]	; (80056ac <HAL_TIM_Base_MspInit+0x78>)
 8005688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800568a:	f003 0302 	and.w	r3, r3, #2
 800568e:	60bb      	str	r3, [r7, #8]
 8005690:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 8005692:	2200      	movs	r2, #0
 8005694:	2101      	movs	r1, #1
 8005696:	201d      	movs	r0, #29
 8005698:	f000 f980 	bl	800599c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 800569c:	201d      	movs	r0, #29
 800569e:	f000 f9bb 	bl	8005a18 <HAL_NVIC_EnableIRQ>
}
 80056a2:	bf00      	nop
 80056a4:	3710      	adds	r7, #16
 80056a6:	46bd      	mov	sp, r7
 80056a8:	bd80      	pop	{r7, pc}
 80056aa:	bf00      	nop
 80056ac:	40023800 	.word	0x40023800
 80056b0:	40000400 	.word	0x40000400

080056b4 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 80056b4:	b580      	push	{r7, lr}
 80056b6:	b08a      	sub	sp, #40	; 0x28
 80056b8:	af00      	add	r7, sp, #0
 80056ba:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80056bc:	f107 0314 	add.w	r3, r7, #20
 80056c0:	2200      	movs	r2, #0
 80056c2:	601a      	str	r2, [r3, #0]
 80056c4:	605a      	str	r2, [r3, #4]
 80056c6:	609a      	str	r2, [r3, #8]
 80056c8:	60da      	str	r2, [r3, #12]
 80056ca:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM4)
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	4a17      	ldr	r2, [pc, #92]	; (8005730 <HAL_TIM_Encoder_MspInit+0x7c>)
 80056d2:	4293      	cmp	r3, r2
 80056d4:	d127      	bne.n	8005726 <HAL_TIM_Encoder_MspInit+0x72>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 80056d6:	4b17      	ldr	r3, [pc, #92]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056da:	4a16      	ldr	r2, [pc, #88]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056dc:	f043 0304 	orr.w	r3, r3, #4
 80056e0:	6253      	str	r3, [r2, #36]	; 0x24
 80056e2:	4b14      	ldr	r3, [pc, #80]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e6:	f003 0304 	and.w	r3, r3, #4
 80056ea:	613b      	str	r3, [r7, #16]
 80056ec:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80056ee:	4b11      	ldr	r3, [pc, #68]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056f0:	69db      	ldr	r3, [r3, #28]
 80056f2:	4a10      	ldr	r2, [pc, #64]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056f4:	f043 0302 	orr.w	r3, r3, #2
 80056f8:	61d3      	str	r3, [r2, #28]
 80056fa:	4b0e      	ldr	r3, [pc, #56]	; (8005734 <HAL_TIM_Encoder_MspInit+0x80>)
 80056fc:	69db      	ldr	r3, [r3, #28]
 80056fe:	f003 0302 	and.w	r3, r3, #2
 8005702:	60fb      	str	r3, [r7, #12]
 8005704:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8005706:	23c0      	movs	r3, #192	; 0xc0
 8005708:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800570a:	2302      	movs	r3, #2
 800570c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800570e:	2300      	movs	r3, #0
 8005710:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005712:	2300      	movs	r3, #0
 8005714:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8005716:	2302      	movs	r3, #2
 8005718:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800571a:	f107 0314 	add.w	r3, r7, #20
 800571e:	4619      	mov	r1, r3
 8005720:	4805      	ldr	r0, [pc, #20]	; (8005738 <HAL_TIM_Encoder_MspInit+0x84>)
 8005722:	f000 fb77 	bl	8005e14 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8005726:	bf00      	nop
 8005728:	3728      	adds	r7, #40	; 0x28
 800572a:	46bd      	mov	sp, r7
 800572c:	bd80      	pop	{r7, pc}
 800572e:	bf00      	nop
 8005730:	40000800 	.word	0x40000800
 8005734:	40023800 	.word	0x40023800
 8005738:	40020400 	.word	0x40020400

0800573c <TMP117_get_Temperature>:
   @Description   Function gives to us ambient temperature
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  Float
 */
uint16_t TMP117_get_Temperature             (I2C_HandleTypeDef i2c)
{
 800573c:	b084      	sub	sp, #16
 800573e:	b580      	push	{r7, lr}
 8005740:	b084      	sub	sp, #16
 8005742:	af02      	add	r7, sp, #8
 8005744:	f107 0c10 	add.w	ip, r7, #16
 8005748:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      int16_t tmpx=0;
 800574c:	2300      	movs	r3, #0
 800574e:	80fb      	strh	r3, [r7, #6]
      buf[0]=TMP117_TemperatureRegister;
 8005750:	4b18      	ldr	r3, [pc, #96]	; (80057b4 <TMP117_get_Temperature+0x78>)
 8005752:	2200      	movs	r2, #0
 8005754:	701a      	strb	r2, [r3, #0]

//      buf[0]=TMP117_ConfigurationRegister;

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,1,100);
 8005756:	4b18      	ldr	r3, [pc, #96]	; (80057b8 <TMP117_get_Temperature+0x7c>)
 8005758:	781b      	ldrb	r3, [r3, #0]
 800575a:	b299      	uxth	r1, r3
 800575c:	2364      	movs	r3, #100	; 0x64
 800575e:	9300      	str	r3, [sp, #0]
 8005760:	2301      	movs	r3, #1
 8005762:	4a14      	ldr	r2, [pc, #80]	; (80057b4 <TMP117_get_Temperature+0x78>)
 8005764:	f107 0010 	add.w	r0, r7, #16
 8005768:	f000 fd1c 	bl	80061a4 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 800576c:	2001      	movs	r0, #1
 800576e:	f000 f8f1 	bl	8005954 <HAL_Delay>
      HAL_I2C_Master_Receive(&i2c,TMP117_DeviceID,buf,2,1000);
 8005772:	4b11      	ldr	r3, [pc, #68]	; (80057b8 <TMP117_get_Temperature+0x7c>)
 8005774:	781b      	ldrb	r3, [r3, #0]
 8005776:	b299      	uxth	r1, r3
 8005778:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800577c:	9300      	str	r3, [sp, #0]
 800577e:	2302      	movs	r3, #2
 8005780:	4a0c      	ldr	r2, [pc, #48]	; (80057b4 <TMP117_get_Temperature+0x78>)
 8005782:	f107 0010 	add.w	r0, r7, #16
 8005786:	f000 fea3 	bl	80064d0 <HAL_I2C_Master_Receive>
      tmpx=buf[0];
 800578a:	4b0a      	ldr	r3, [pc, #40]	; (80057b4 <TMP117_get_Temperature+0x78>)
 800578c:	781b      	ldrb	r3, [r3, #0]
 800578e:	80fb      	strh	r3, [r7, #6]
      tmpx<<=8;
 8005790:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005794:	021b      	lsls	r3, r3, #8
 8005796:	80fb      	strh	r3, [r7, #6]
      tmpx|=buf[1];
 8005798:	4b06      	ldr	r3, [pc, #24]	; (80057b4 <TMP117_get_Temperature+0x78>)
 800579a:	785b      	ldrb	r3, [r3, #1]
 800579c:	b21a      	sxth	r2, r3
 800579e:	88fb      	ldrh	r3, [r7, #6]
 80057a0:	4313      	orrs	r3, r2
 80057a2:	80fb      	strh	r3, [r7, #6]

      return tmpx;
 80057a4:	88fb      	ldrh	r3, [r7, #6]
}
 80057a6:	4618      	mov	r0, r3
 80057a8:	3708      	adds	r7, #8
 80057aa:	46bd      	mov	sp, r7
 80057ac:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80057b0:	b004      	add	sp, #16
 80057b2:	4770      	bx	lr
 80057b4:	20000994 	.word	0x20000994
 80057b8:	20000028 	.word	0x20000028

080057bc <TMP117_set_Configuration>:
                  uint8_t first     ->  [15:8]
                  uint8_t second    ->  [7:0]
   @Return value  void
 */
void TMP117_set_Configuration            (I2C_HandleTypeDef i2c,uint8_t first,uint8_t second)
{
 80057bc:	b084      	sub	sp, #16
 80057be:	b580      	push	{r7, lr}
 80057c0:	b082      	sub	sp, #8
 80057c2:	af02      	add	r7, sp, #8
 80057c4:	f107 0c08 	add.w	ip, r7, #8
 80057c8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      buf[0]=TMP117_ConfigurationRegister;
 80057cc:	4b0f      	ldr	r3, [pc, #60]	; (800580c <TMP117_set_Configuration+0x50>)
 80057ce:	2201      	movs	r2, #1
 80057d0:	701a      	strb	r2, [r3, #0]
      buf[1]=first;
 80057d2:	4a0e      	ldr	r2, [pc, #56]	; (800580c <TMP117_set_Configuration+0x50>)
 80057d4:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 80057d8:	7053      	strb	r3, [r2, #1]
      buf[2]=second;
 80057da:	4a0c      	ldr	r2, [pc, #48]	; (800580c <TMP117_set_Configuration+0x50>)
 80057dc:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80057e0:	7093      	strb	r3, [r2, #2]

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,2,100);
 80057e2:	4b0b      	ldr	r3, [pc, #44]	; (8005810 <TMP117_set_Configuration+0x54>)
 80057e4:	781b      	ldrb	r3, [r3, #0]
 80057e6:	b299      	uxth	r1, r3
 80057e8:	2364      	movs	r3, #100	; 0x64
 80057ea:	9300      	str	r3, [sp, #0]
 80057ec:	2302      	movs	r3, #2
 80057ee:	4a07      	ldr	r2, [pc, #28]	; (800580c <TMP117_set_Configuration+0x50>)
 80057f0:	f107 0008 	add.w	r0, r7, #8
 80057f4:	f000 fcd6 	bl	80061a4 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 80057f8:	2001      	movs	r0, #1
 80057fa:	f000 f8ab 	bl	8005954 <HAL_Delay>
}
 80057fe:	bf00      	nop
 8005800:	46bd      	mov	sp, r7
 8005802:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005806:	b004      	add	sp, #16
 8005808:	4770      	bx	lr
 800580a:	bf00      	nop
 800580c:	20000998 	.word	0x20000998
 8005810:	20000028 	.word	0x20000028

08005814 <TMP117_Initialization>:
   @Description   Custom Parameters for Sensor
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  void
 */
void TMP117_Initialization               (I2C_HandleTypeDef i2c)
{
 8005814:	b084      	sub	sp, #16
 8005816:	b580      	push	{r7, lr}
 8005818:	b094      	sub	sp, #80	; 0x50
 800581a:	af14      	add	r7, sp, #80	; 0x50
 800581c:	f107 0c08 	add.w	ip, r7, #8
 8005820:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    TMP117_set_Configuration(i2c,0x02,0x22);
 8005824:	2322      	movs	r3, #34	; 0x22
 8005826:	9312      	str	r3, [sp, #72]	; 0x48
 8005828:	2302      	movs	r3, #2
 800582a:	9311      	str	r3, [sp, #68]	; 0x44
 800582c:	4668      	mov	r0, sp
 800582e:	f107 0318 	add.w	r3, r7, #24
 8005832:	2244      	movs	r2, #68	; 0x44
 8005834:	4619      	mov	r1, r3
 8005836:	f005 fb3d 	bl	800aeb4 <memcpy>
 800583a:	f107 0308 	add.w	r3, r7, #8
 800583e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005840:	f7ff ffbc 	bl	80057bc <TMP117_set_Configuration>
	HAL_Delay(2); // wait 2ms
 8005844:	2002      	movs	r0, #2
 8005846:	f000 f885 	bl	8005954 <HAL_Delay>
	TMP117_set_Configuration(i2c,0x03,0xA0);
 800584a:	23a0      	movs	r3, #160	; 0xa0
 800584c:	9312      	str	r3, [sp, #72]	; 0x48
 800584e:	2303      	movs	r3, #3
 8005850:	9311      	str	r3, [sp, #68]	; 0x44
 8005852:	4668      	mov	r0, sp
 8005854:	f107 0318 	add.w	r3, r7, #24
 8005858:	2244      	movs	r2, #68	; 0x44
 800585a:	4619      	mov	r1, r3
 800585c:	f005 fb2a 	bl	800aeb4 <memcpy>
 8005860:	f107 0308 	add.w	r3, r7, #8
 8005864:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005866:	f7ff ffa9 	bl	80057bc <TMP117_set_Configuration>
	//TMP117_set_Configuration(i2c,0x02,0x20);
//      TMP117_set_Temperature_Offset(i2c,0x00,0x00); //Default Value
//      TMP117_set_LowLimit(i2c,0x12,0x80);           //Set 10 Celcius
//      TMP117_set_HighLimit(i2c,0x51,0x20);          //Set 40 Celcius
}
 800586a:	bf00      	nop
 800586c:	46bd      	mov	sp, r7
 800586e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005872:	b004      	add	sp, #16
 8005874:	4770      	bx	lr
	...

08005878 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005878:	480c      	ldr	r0, [pc, #48]	; (80058ac <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800587a:	490d      	ldr	r1, [pc, #52]	; (80058b0 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800587c:	4a0d      	ldr	r2, [pc, #52]	; (80058b4 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800587e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8005880:	e002      	b.n	8005888 <LoopCopyDataInit>

08005882 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8005882:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8005884:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8005886:	3304      	adds	r3, #4

08005888 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8005888:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800588a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800588c:	d3f9      	bcc.n	8005882 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800588e:	4a0a      	ldr	r2, [pc, #40]	; (80058b8 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8005890:	4c0a      	ldr	r4, [pc, #40]	; (80058bc <LoopFillZerobss+0x22>)
  movs r3, #0
 8005892:	2300      	movs	r3, #0
  b LoopFillZerobss
 8005894:	e001      	b.n	800589a <LoopFillZerobss>

08005896 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8005896:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8005898:	3204      	adds	r2, #4

0800589a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800589a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800589c:	d3fb      	bcc.n	8005896 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800589e:	f7ff fdd5 	bl	800544c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80058a2:	f005 fae3 	bl	800ae6c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80058a6:	f7fe f983 	bl	8003bb0 <main>
  bx lr
 80058aa:	4770      	bx	lr
  ldr r0, =_sdata
 80058ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80058b0:	20000550 	.word	0x20000550
  ldr r2, =_sidata
 80058b4:	08011204 	.word	0x08011204
  ldr r2, =_sbss
 80058b8:	20000550 	.word	0x20000550
  ldr r4, =_ebss
 80058bc:	200014f4 	.word	0x200014f4

080058c0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80058c0:	e7fe      	b.n	80058c0 <ADC1_IRQHandler>
	...

080058c4 <HAL_InitTick>:
 80058c4:	b538      	push	{r3, r4, r5, lr}
 80058c6:	4b0f      	ldr	r3, [pc, #60]	; (8005904 <HAL_InitTick+0x40>)
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	b90b      	cbnz	r3, 80058d0 <HAL_InitTick+0xc>
 80058cc:	2001      	movs	r0, #1
 80058ce:	bd38      	pop	{r3, r4, r5, pc}
 80058d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80058d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80058d8:	490b      	ldr	r1, [pc, #44]	; (8005908 <HAL_InitTick+0x44>)
 80058da:	4605      	mov	r5, r0
 80058dc:	6808      	ldr	r0, [r1, #0]
 80058de:	fbb0 f0f3 	udiv	r0, r0, r3
 80058e2:	f000 f8a7 	bl	8005a34 <HAL_SYSTICK_Config>
 80058e6:	4604      	mov	r4, r0
 80058e8:	2800      	cmp	r0, #0
 80058ea:	d1ef      	bne.n	80058cc <HAL_InitTick+0x8>
 80058ec:	2d0f      	cmp	r5, #15
 80058ee:	d8ed      	bhi.n	80058cc <HAL_InitTick+0x8>
 80058f0:	4602      	mov	r2, r0
 80058f2:	4629      	mov	r1, r5
 80058f4:	f04f 30ff 	mov.w	r0, #4294967295
 80058f8:	f000 f850 	bl	800599c <HAL_NVIC_SetPriority>
 80058fc:	4b03      	ldr	r3, [pc, #12]	; (800590c <HAL_InitTick+0x48>)
 80058fe:	4620      	mov	r0, r4
 8005900:	601d      	str	r5, [r3, #0]
 8005902:	bd38      	pop	{r3, r4, r5, pc}
 8005904:	2000002c 	.word	0x2000002c
 8005908:	20000024 	.word	0x20000024
 800590c:	20000030 	.word	0x20000030

08005910 <HAL_Init>:
 8005910:	2003      	movs	r0, #3
 8005912:	b510      	push	{r4, lr}
 8005914:	f000 f830 	bl	8005978 <HAL_NVIC_SetPriorityGrouping>
 8005918:	200f      	movs	r0, #15
 800591a:	f7ff ffd3 	bl	80058c4 <HAL_InitTick>
 800591e:	b110      	cbz	r0, 8005926 <HAL_Init+0x16>
 8005920:	2401      	movs	r4, #1
 8005922:	4620      	mov	r0, r4
 8005924:	bd10      	pop	{r4, pc}
 8005926:	4604      	mov	r4, r0
 8005928:	f7ff fc1a 	bl	8005160 <HAL_MspInit>
 800592c:	4620      	mov	r0, r4
 800592e:	bd10      	pop	{r4, pc}

08005930 <HAL_IncTick>:
 8005930:	4a03      	ldr	r2, [pc, #12]	; (8005940 <HAL_IncTick+0x10>)
 8005932:	4904      	ldr	r1, [pc, #16]	; (8005944 <HAL_IncTick+0x14>)
 8005934:	6813      	ldr	r3, [r2, #0]
 8005936:	6809      	ldr	r1, [r1, #0]
 8005938:	440b      	add	r3, r1
 800593a:	6013      	str	r3, [r2, #0]
 800593c:	4770      	bx	lr
 800593e:	bf00      	nop
 8005940:	2000099c 	.word	0x2000099c
 8005944:	2000002c 	.word	0x2000002c

08005948 <HAL_GetTick>:
 8005948:	4b01      	ldr	r3, [pc, #4]	; (8005950 <HAL_GetTick+0x8>)
 800594a:	6818      	ldr	r0, [r3, #0]
 800594c:	4770      	bx	lr
 800594e:	bf00      	nop
 8005950:	2000099c 	.word	0x2000099c

08005954 <HAL_Delay>:
 8005954:	b538      	push	{r3, r4, r5, lr}
 8005956:	4604      	mov	r4, r0
 8005958:	f7ff fff6 	bl	8005948 <HAL_GetTick>
 800595c:	1c63      	adds	r3, r4, #1
 800595e:	4605      	mov	r5, r0
 8005960:	d002      	beq.n	8005968 <HAL_Delay+0x14>
 8005962:	4b04      	ldr	r3, [pc, #16]	; (8005974 <HAL_Delay+0x20>)
 8005964:	681b      	ldr	r3, [r3, #0]
 8005966:	441c      	add	r4, r3
 8005968:	f7ff ffee 	bl	8005948 <HAL_GetTick>
 800596c:	1b40      	subs	r0, r0, r5
 800596e:	42a0      	cmp	r0, r4
 8005970:	d3fa      	bcc.n	8005968 <HAL_Delay+0x14>
 8005972:	bd38      	pop	{r3, r4, r5, pc}
 8005974:	2000002c 	.word	0x2000002c

08005978 <HAL_NVIC_SetPriorityGrouping>:
 8005978:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 800597c:	4906      	ldr	r1, [pc, #24]	; (8005998 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800597e:	0203      	lsls	r3, r0, #8
 8005980:	68ca      	ldr	r2, [r1, #12]
 8005982:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8005986:	ea02 020c 	and.w	r2, r2, ip
 800598a:	4313      	orrs	r3, r2
 800598c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005990:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005994:	60cb      	str	r3, [r1, #12]
 8005996:	4770      	bx	lr
 8005998:	e000ed00 	.word	0xe000ed00

0800599c <HAL_NVIC_SetPriority>:
 800599c:	4b1c      	ldr	r3, [pc, #112]	; (8005a10 <HAL_NVIC_SetPriority+0x74>)
 800599e:	b500      	push	{lr}
 80059a0:	68db      	ldr	r3, [r3, #12]
 80059a2:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80059a6:	f1c3 0e07 	rsb	lr, r3, #7
 80059aa:	f1be 0f04 	cmp.w	lr, #4
 80059ae:	f103 0c04 	add.w	ip, r3, #4
 80059b2:	bf28      	it	cs
 80059b4:	f04f 0e04 	movcs.w	lr, #4
 80059b8:	f1bc 0f06 	cmp.w	ip, #6
 80059bc:	d91b      	bls.n	80059f6 <HAL_NVIC_SetPriority+0x5a>
 80059be:	f04f 3cff 	mov.w	ip, #4294967295
 80059c2:	3b03      	subs	r3, #3
 80059c4:	fa0c fc03 	lsl.w	ip, ip, r3
 80059c8:	ea22 020c 	bic.w	r2, r2, ip
 80059cc:	f04f 3cff 	mov.w	ip, #4294967295
 80059d0:	fa0c fc0e 	lsl.w	ip, ip, lr
 80059d4:	ea21 010c 	bic.w	r1, r1, ip
 80059d8:	4099      	lsls	r1, r3
 80059da:	2800      	cmp	r0, #0
 80059dc:	ea41 0102 	orr.w	r1, r1, r2
 80059e0:	db0c      	blt.n	80059fc <HAL_NVIC_SetPriority+0x60>
 80059e2:	0109      	lsls	r1, r1, #4
 80059e4:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80059e8:	b2c9      	uxtb	r1, r1
 80059ea:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80059ee:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 80059f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80059f6:	2200      	movs	r2, #0
 80059f8:	4613      	mov	r3, r2
 80059fa:	e7e7      	b.n	80059cc <HAL_NVIC_SetPriority+0x30>
 80059fc:	4b05      	ldr	r3, [pc, #20]	; (8005a14 <HAL_NVIC_SetPriority+0x78>)
 80059fe:	f000 000f 	and.w	r0, r0, #15
 8005a02:	0109      	lsls	r1, r1, #4
 8005a04:	b2c9      	uxtb	r1, r1
 8005a06:	4403      	add	r3, r0
 8005a08:	7619      	strb	r1, [r3, #24]
 8005a0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005a0e:	bf00      	nop
 8005a10:	e000ed00 	.word	0xe000ed00
 8005a14:	e000ecfc 	.word	0xe000ecfc

08005a18 <HAL_NVIC_EnableIRQ>:
 8005a18:	2800      	cmp	r0, #0
 8005a1a:	db07      	blt.n	8005a2c <HAL_NVIC_EnableIRQ+0x14>
 8005a1c:	2301      	movs	r3, #1
 8005a1e:	f000 011f 	and.w	r1, r0, #31
 8005a22:	4a03      	ldr	r2, [pc, #12]	; (8005a30 <HAL_NVIC_EnableIRQ+0x18>)
 8005a24:	0940      	lsrs	r0, r0, #5
 8005a26:	408b      	lsls	r3, r1
 8005a28:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8005a2c:	4770      	bx	lr
 8005a2e:	bf00      	nop
 8005a30:	e000e100 	.word	0xe000e100

08005a34 <HAL_SYSTICK_Config>:
 8005a34:	3801      	subs	r0, #1
 8005a36:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8005a3a:	d20f      	bcs.n	8005a5c <HAL_SYSTICK_Config+0x28>
 8005a3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8005a40:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8005a44:	2200      	movs	r2, #0
 8005a46:	2107      	movs	r1, #7
 8005a48:	b410      	push	{r4}
 8005a4a:	4c05      	ldr	r4, [pc, #20]	; (8005a60 <HAL_SYSTICK_Config+0x2c>)
 8005a4c:	6158      	str	r0, [r3, #20]
 8005a4e:	f884 c023 	strb.w	ip, [r4, #35]	; 0x23
 8005a52:	4610      	mov	r0, r2
 8005a54:	619a      	str	r2, [r3, #24]
 8005a56:	bc10      	pop	{r4}
 8005a58:	6119      	str	r1, [r3, #16]
 8005a5a:	4770      	bx	lr
 8005a5c:	2001      	movs	r0, #1
 8005a5e:	4770      	bx	lr
 8005a60:	e000ed00 	.word	0xe000ed00

08005a64 <HAL_DMA_Abort_IT>:
 8005a64:	b538      	push	{r3, r4, r5, lr}
 8005a66:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 8005a6a:	4603      	mov	r3, r0
 8005a6c:	2a02      	cmp	r2, #2
 8005a6e:	d003      	beq.n	8005a78 <HAL_DMA_Abort_IT+0x14>
 8005a70:	2204      	movs	r2, #4
 8005a72:	2001      	movs	r0, #1
 8005a74:	639a      	str	r2, [r3, #56]	; 0x38
 8005a76:	bd38      	pop	{r3, r4, r5, pc}
 8005a78:	6801      	ldr	r1, [r0, #0]
 8005a7a:	f04f 0c01 	mov.w	ip, #1
 8005a7e:	680c      	ldr	r4, [r1, #0]
 8005a80:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005a82:	f024 040e 	bic.w	r4, r4, #14
 8005a86:	600c      	str	r4, [r1, #0]
 8005a88:	2400      	movs	r4, #0
 8005a8a:	680d      	ldr	r5, [r1, #0]
 8005a8c:	f002 021c 	and.w	r2, r2, #28
 8005a90:	f025 0501 	bic.w	r5, r5, #1
 8005a94:	600d      	str	r5, [r1, #0]
 8005a96:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8005a98:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8005a9a:	fa0c f202 	lsl.w	r2, ip, r2
 8005a9e:	606a      	str	r2, [r5, #4]
 8005aa0:	f880 c021 	strb.w	ip, [r0, #33]	; 0x21
 8005aa4:	f880 4020 	strb.w	r4, [r0, #32]
 8005aa8:	b111      	cbz	r1, 8005ab0 <HAL_DMA_Abort_IT+0x4c>
 8005aaa:	4788      	blx	r1
 8005aac:	4620      	mov	r0, r4
 8005aae:	bd38      	pop	{r3, r4, r5, pc}
 8005ab0:	4608      	mov	r0, r1
 8005ab2:	bd38      	pop	{r3, r4, r5, pc}

08005ab4 <FLASH_SetErrorCode>:
 8005ab4:	4b27      	ldr	r3, [pc, #156]	; (8005b54 <FLASH_SetErrorCode+0xa0>)
 8005ab6:	b570      	push	{r4, r5, r6, lr}
 8005ab8:	699b      	ldr	r3, [r3, #24]
 8005aba:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 8005abe:	d039      	beq.n	8005b34 <FLASH_SetErrorCode+0x80>
 8005ac0:	4a25      	ldr	r2, [pc, #148]	; (8005b58 <FLASH_SetErrorCode+0xa4>)
 8005ac2:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 8005ac6:	6953      	ldr	r3, [r2, #20]
 8005ac8:	f44f 6ee0 	mov.w	lr, #1792	; 0x700
 8005acc:	f043 0302 	orr.w	r3, r3, #2
 8005ad0:	6153      	str	r3, [r2, #20]
 8005ad2:	f44f 6c30 	mov.w	ip, #2816	; 0xb00
 8005ad6:	f44f 6050 	mov.w	r0, #3328	; 0xd00
 8005ada:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8005ade:	f44f 6110 	mov.w	r1, #2304	; 0x900
 8005ae2:	f44f 7540 	mov.w	r5, #768	; 0x300
 8005ae6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005aea:	4c1a      	ldr	r4, [pc, #104]	; (8005b54 <FLASH_SetErrorCode+0xa0>)
 8005aec:	69a4      	ldr	r4, [r4, #24]
 8005aee:	05a4      	lsls	r4, r4, #22
 8005af0:	d508      	bpl.n	8005b04 <FLASH_SetErrorCode+0x50>
 8005af2:	4630      	mov	r0, r6
 8005af4:	4672      	mov	r2, lr
 8005af6:	4661      	mov	r1, ip
 8005af8:	462b      	mov	r3, r5
 8005afa:	4d17      	ldr	r5, [pc, #92]	; (8005b58 <FLASH_SetErrorCode+0xa4>)
 8005afc:	696c      	ldr	r4, [r5, #20]
 8005afe:	f044 0401 	orr.w	r4, r4, #1
 8005b02:	616c      	str	r4, [r5, #20]
 8005b04:	4c13      	ldr	r4, [pc, #76]	; (8005b54 <FLASH_SetErrorCode+0xa0>)
 8005b06:	69a4      	ldr	r4, [r4, #24]
 8005b08:	0524      	lsls	r4, r4, #20
 8005b0a:	d506      	bpl.n	8005b1a <FLASH_SetErrorCode+0x66>
 8005b0c:	4602      	mov	r2, r0
 8005b0e:	4812      	ldr	r0, [pc, #72]	; (8005b58 <FLASH_SetErrorCode+0xa4>)
 8005b10:	460b      	mov	r3, r1
 8005b12:	6941      	ldr	r1, [r0, #20]
 8005b14:	f041 0104 	orr.w	r1, r1, #4
 8005b18:	6141      	str	r1, [r0, #20]
 8005b1a:	490e      	ldr	r1, [pc, #56]	; (8005b54 <FLASH_SetErrorCode+0xa0>)
 8005b1c:	6989      	ldr	r1, [r1, #24]
 8005b1e:	0549      	lsls	r1, r1, #21
 8005b20:	d505      	bpl.n	8005b2e <FLASH_SetErrorCode+0x7a>
 8005b22:	490d      	ldr	r1, [pc, #52]	; (8005b58 <FLASH_SetErrorCode+0xa4>)
 8005b24:	4613      	mov	r3, r2
 8005b26:	694a      	ldr	r2, [r1, #20]
 8005b28:	f042 0208 	orr.w	r2, r2, #8
 8005b2c:	614a      	str	r2, [r1, #20]
 8005b2e:	4a09      	ldr	r2, [pc, #36]	; (8005b54 <FLASH_SetErrorCode+0xa0>)
 8005b30:	6193      	str	r3, [r2, #24]
 8005b32:	bd70      	pop	{r4, r5, r6, pc}
 8005b34:	f44f 6660 	mov.w	r6, #3584	; 0xe00
 8005b38:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
 8005b3c:	f44f 6c20 	mov.w	ip, #2560	; 0xa00
 8005b40:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8005b44:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005b48:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8005b4c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8005b50:	e7cb      	b.n	8005aea <FLASH_SetErrorCode+0x36>
 8005b52:	bf00      	nop
 8005b54:	40023c00 	.word	0x40023c00
 8005b58:	200009a0 	.word	0x200009a0

08005b5c <FLASH_WaitForLastOperation>:
 8005b5c:	b570      	push	{r4, r5, r6, lr}
 8005b5e:	4604      	mov	r4, r0
 8005b60:	f7ff fef2 	bl	8005948 <HAL_GetTick>
 8005b64:	4605      	mov	r5, r0
 8005b66:	4e15      	ldr	r6, [pc, #84]	; (8005bbc <FLASH_WaitForLastOperation+0x60>)
 8005b68:	1c60      	adds	r0, r4, #1
 8005b6a:	d11c      	bne.n	8005ba6 <FLASH_WaitForLastOperation+0x4a>
 8005b6c:	4a13      	ldr	r2, [pc, #76]	; (8005bbc <FLASH_WaitForLastOperation+0x60>)
 8005b6e:	6993      	ldr	r3, [r2, #24]
 8005b70:	07d9      	lsls	r1, r3, #31
 8005b72:	d4fc      	bmi.n	8005b6e <FLASH_WaitForLastOperation+0x12>
 8005b74:	4b11      	ldr	r3, [pc, #68]	; (8005bbc <FLASH_WaitForLastOperation+0x60>)
 8005b76:	699a      	ldr	r2, [r3, #24]
 8005b78:	0794      	lsls	r4, r2, #30
 8005b7a:	bf44      	itt	mi
 8005b7c:	2202      	movmi	r2, #2
 8005b7e:	619a      	strmi	r2, [r3, #24]
 8005b80:	4b0e      	ldr	r3, [pc, #56]	; (8005bbc <FLASH_WaitForLastOperation+0x60>)
 8005b82:	699a      	ldr	r2, [r3, #24]
 8005b84:	05d0      	lsls	r0, r2, #23
 8005b86:	d40a      	bmi.n	8005b9e <FLASH_WaitForLastOperation+0x42>
 8005b88:	699a      	ldr	r2, [r3, #24]
 8005b8a:	0511      	lsls	r1, r2, #20
 8005b8c:	d407      	bmi.n	8005b9e <FLASH_WaitForLastOperation+0x42>
 8005b8e:	699a      	ldr	r2, [r3, #24]
 8005b90:	0552      	lsls	r2, r2, #21
 8005b92:	d404      	bmi.n	8005b9e <FLASH_WaitForLastOperation+0x42>
 8005b94:	6998      	ldr	r0, [r3, #24]
 8005b96:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 8005b9a:	d100      	bne.n	8005b9e <FLASH_WaitForLastOperation+0x42>
 8005b9c:	bd70      	pop	{r4, r5, r6, pc}
 8005b9e:	f7ff ff89 	bl	8005ab4 <FLASH_SetErrorCode>
 8005ba2:	2001      	movs	r0, #1
 8005ba4:	bd70      	pop	{r4, r5, r6, pc}
 8005ba6:	69b3      	ldr	r3, [r6, #24]
 8005ba8:	07db      	lsls	r3, r3, #31
 8005baa:	d5e3      	bpl.n	8005b74 <FLASH_WaitForLastOperation+0x18>
 8005bac:	b124      	cbz	r4, 8005bb8 <FLASH_WaitForLastOperation+0x5c>
 8005bae:	f7ff fecb 	bl	8005948 <HAL_GetTick>
 8005bb2:	1b40      	subs	r0, r0, r5
 8005bb4:	42a0      	cmp	r0, r4
 8005bb6:	d9d7      	bls.n	8005b68 <FLASH_WaitForLastOperation+0xc>
 8005bb8:	2003      	movs	r0, #3
 8005bba:	bd70      	pop	{r4, r5, r6, pc}
 8005bbc:	40023c00 	.word	0x40023c00

08005bc0 <HAL_FLASHEx_DATAEEPROM_Unlock>:
 8005bc0:	4b05      	ldr	r3, [pc, #20]	; (8005bd8 <HAL_FLASHEx_DATAEEPROM_Unlock+0x18>)
 8005bc2:	685a      	ldr	r2, [r3, #4]
 8005bc4:	07d2      	lsls	r2, r2, #31
 8005bc6:	d505      	bpl.n	8005bd4 <HAL_FLASHEx_DATAEEPROM_Unlock+0x14>
 8005bc8:	4904      	ldr	r1, [pc, #16]	; (8005bdc <HAL_FLASHEx_DATAEEPROM_Unlock+0x1c>)
 8005bca:	4a05      	ldr	r2, [pc, #20]	; (8005be0 <HAL_FLASHEx_DATAEEPROM_Unlock+0x20>)
 8005bcc:	60d9      	str	r1, [r3, #12]
 8005bce:	2000      	movs	r0, #0
 8005bd0:	60da      	str	r2, [r3, #12]
 8005bd2:	4770      	bx	lr
 8005bd4:	2001      	movs	r0, #1
 8005bd6:	4770      	bx	lr
 8005bd8:	40023c00 	.word	0x40023c00
 8005bdc:	89abcdef 	.word	0x89abcdef
 8005be0:	02030405 	.word	0x02030405

08005be4 <HAL_FLASHEx_DATAEEPROM_Lock>:
 8005be4:	4a03      	ldr	r2, [pc, #12]	; (8005bf4 <HAL_FLASHEx_DATAEEPROM_Lock+0x10>)
 8005be6:	2000      	movs	r0, #0
 8005be8:	6853      	ldr	r3, [r2, #4]
 8005bea:	f043 0301 	orr.w	r3, r3, #1
 8005bee:	6053      	str	r3, [r2, #4]
 8005bf0:	4770      	bx	lr
 8005bf2:	bf00      	nop
 8005bf4:	40023c00 	.word	0x40023c00

08005bf8 <HAL_FLASHEx_DATAEEPROM_Program>:
 8005bf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005bfc:	4e83      	ldr	r6, [pc, #524]	; (8005e0c <HAL_FLASHEx_DATAEEPROM_Program+0x214>)
 8005bfe:	7c33      	ldrb	r3, [r6, #16]
 8005c00:	2b01      	cmp	r3, #1
 8005c02:	d01f      	beq.n	8005c44 <HAL_FLASHEx_DATAEEPROM_Program+0x4c>
 8005c04:	2701      	movs	r7, #1
 8005c06:	4605      	mov	r5, r0
 8005c08:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005c0c:	4688      	mov	r8, r1
 8005c0e:	4691      	mov	r9, r2
 8005c10:	7437      	strb	r7, [r6, #16]
 8005c12:	f7ff ffa3 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005c16:	4604      	mov	r4, r0
 8005c18:	b978      	cbnz	r0, 8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005c1a:	2d02      	cmp	r5, #2
 8005c1c:	6170      	str	r0, [r6, #20]
 8005c1e:	d045      	beq.n	8005cac <HAL_FLASHEx_DATAEEPROM_Program+0xb4>
 8005c20:	2d01      	cmp	r5, #1
 8005c22:	d052      	beq.n	8005cca <HAL_FLASHEx_DATAEEPROM_Program+0xd2>
 8005c24:	b195      	cbz	r5, 8005c4c <HAL_FLASHEx_DATAEEPROM_Program+0x54>
 8005c26:	2d04      	cmp	r5, #4
 8005c28:	f000 8083 	beq.w	8005d32 <HAL_FLASHEx_DATAEEPROM_Program+0x13a>
 8005c2c:	2d08      	cmp	r5, #8
 8005c2e:	f000 80aa 	beq.w	8005d86 <HAL_FLASHEx_DATAEEPROM_Program+0x18e>
 8005c32:	2d10      	cmp	r5, #16
 8005c34:	f000 80c8 	beq.w	8005dc8 <HAL_FLASHEx_DATAEEPROM_Program+0x1d0>
 8005c38:	463c      	mov	r4, r7
 8005c3a:	2300      	movs	r3, #0
 8005c3c:	4620      	mov	r0, r4
 8005c3e:	7433      	strb	r3, [r6, #16]
 8005c40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005c44:	2402      	movs	r4, #2
 8005c46:	4620      	mov	r0, r4
 8005c48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005c4c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005c50:	f7ff ff84 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005c54:	4604      	mov	r4, r0
 8005c56:	2800      	cmp	r0, #0
 8005c58:	d1ef      	bne.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005c5a:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 8005c5e:	f040 808a 	bne.w	8005d76 <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 8005c62:	22ff      	movs	r2, #255	; 0xff
 8005c64:	f028 0503 	bic.w	r5, r8, #3
 8005c68:	f008 0803 	and.w	r8, r8, #3
 8005c6c:	682c      	ldr	r4, [r5, #0]
 8005c6e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8005c72:	fa02 f208 	lsl.w	r2, r2, r8
 8005c76:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005c7a:	ea24 0402 	bic.w	r4, r4, r2
 8005c7e:	f7ff ff6d 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005c82:	4603      	mov	r3, r0
 8005c84:	b928      	cbnz	r0, 8005c92 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 8005c86:	6173      	str	r3, [r6, #20]
 8005c88:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005c8c:	602b      	str	r3, [r5, #0]
 8005c8e:	f7ff ff65 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005c92:	2300      	movs	r3, #0
 8005c94:	4622      	mov	r2, r4
 8005c96:	4629      	mov	r1, r5
 8005c98:	2010      	movs	r0, #16
 8005c9a:	7433      	strb	r3, [r6, #16]
 8005c9c:	f7ff ffac 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005ca0:	7c33      	ldrb	r3, [r6, #16]
 8005ca2:	4604      	mov	r4, r0
 8005ca4:	2b01      	cmp	r3, #1
 8005ca6:	d1c8      	bne.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005ca8:	2402      	movs	r4, #2
 8005caa:	e7c6      	b.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005cac:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005cb0:	f7ff ff54 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005cb4:	4604      	mov	r4, r0
 8005cb6:	2800      	cmp	r0, #0
 8005cb8:	d1bf      	bne.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005cba:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005cbe:	f8c8 9000 	str.w	r9, [r8]
 8005cc2:	f7ff ff4b 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005cc6:	4604      	mov	r4, r0
 8005cc8:	e7b7      	b.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005cca:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005cce:	f7ff ff45 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005cd2:	4604      	mov	r4, r0
 8005cd4:	2800      	cmp	r0, #0
 8005cd6:	d1b0      	bne.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005cd8:	fa1f f289 	uxth.w	r2, r9
 8005cdc:	2a00      	cmp	r2, #0
 8005cde:	f040 8081 	bne.w	8005de4 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 8005ce2:	f008 0303 	and.w	r3, r8, #3
 8005ce6:	2b03      	cmp	r3, #3
 8005ce8:	7432      	strb	r2, [r6, #16]
 8005cea:	f000 8083 	beq.w	8005df4 <HAL_FLASHEx_DATAEEPROM_Program+0x1fc>
 8005cee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005cf2:	f028 0803 	bic.w	r8, r8, #3
 8005cf6:	f8d8 4000 	ldr.w	r4, [r8]
 8005cfa:	00db      	lsls	r3, r3, #3
 8005cfc:	fa02 f303 	lsl.w	r3, r2, r3
 8005d00:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d04:	ea24 0403 	bic.w	r4, r4, r3
 8005d08:	f7ff ff28 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d0c:	4603      	mov	r3, r0
 8005d0e:	b930      	cbnz	r0, 8005d1e <HAL_FLASHEx_DATAEEPROM_Program+0x126>
 8005d10:	6170      	str	r0, [r6, #20]
 8005d12:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d16:	f8c8 3000 	str.w	r3, [r8]
 8005d1a:	f7ff ff1f 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d1e:	4622      	mov	r2, r4
 8005d20:	4641      	mov	r1, r8
 8005d22:	2010      	movs	r0, #16
 8005d24:	f7ff ff68 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005d28:	4604      	mov	r4, r0
 8005d2a:	7c33      	ldrb	r3, [r6, #16]
 8005d2c:	2b01      	cmp	r3, #1
 8005d2e:	d184      	bne.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005d30:	e7ba      	b.n	8005ca8 <HAL_FLASHEx_DATAEEPROM_Program+0xb0>
 8005d32:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d36:	f7ff ff11 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d3a:	4604      	mov	r4, r0
 8005d3c:	2800      	cmp	r0, #0
 8005d3e:	f47f af7c 	bne.w	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005d42:	4a33      	ldr	r2, [pc, #204]	; (8005e10 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 8005d44:	6853      	ldr	r3, [r2, #4]
 8005d46:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005d4a:	6053      	str	r3, [r2, #4]
 8005d4c:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 8005d50:	d111      	bne.n	8005d76 <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 8005d52:	f008 0303 	and.w	r3, r8, #3
 8005d56:	00da      	lsls	r2, r3, #3
 8005d58:	23ff      	movs	r3, #255	; 0xff
 8005d5a:	f028 0503 	bic.w	r5, r8, #3
 8005d5e:	682c      	ldr	r4, [r5, #0]
 8005d60:	4093      	lsls	r3, r2
 8005d62:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d66:	ea24 0403 	bic.w	r4, r4, r3
 8005d6a:	f7ff fef7 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d6e:	4603      	mov	r3, r0
 8005d70:	2800      	cmp	r0, #0
 8005d72:	d18e      	bne.n	8005c92 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 8005d74:	e787      	b.n	8005c86 <HAL_FLASHEx_DATAEEPROM_Program+0x8e>
 8005d76:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d7a:	f888 2000 	strb.w	r2, [r8]
 8005d7e:	f7ff feed 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d82:	4604      	mov	r4, r0
 8005d84:	e759      	b.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005d86:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005d8a:	f7ff fee7 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005d8e:	4604      	mov	r4, r0
 8005d90:	2800      	cmp	r0, #0
 8005d92:	f47f af52 	bne.w	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005d96:	491e      	ldr	r1, [pc, #120]	; (8005e10 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 8005d98:	fa1f f289 	uxth.w	r2, r9
 8005d9c:	684b      	ldr	r3, [r1, #4]
 8005d9e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005da2:	604b      	str	r3, [r1, #4]
 8005da4:	b9f2      	cbnz	r2, 8005de4 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 8005da6:	f008 0303 	and.w	r3, r8, #3
 8005daa:	2b03      	cmp	r3, #3
 8005dac:	7430      	strb	r0, [r6, #16]
 8005dae:	d19e      	bne.n	8005cee <HAL_FLASHEx_DATAEEPROM_Program+0xf6>
 8005db0:	4641      	mov	r1, r8
 8005db2:	2200      	movs	r2, #0
 8005db4:	2004      	movs	r0, #4
 8005db6:	f7ff ff1f 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005dba:	2200      	movs	r2, #0
 8005dbc:	f108 0101 	add.w	r1, r8, #1
 8005dc0:	2004      	movs	r0, #4
 8005dc2:	f7ff ff19 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005dc6:	e7b0      	b.n	8005d2a <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 8005dc8:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005dcc:	f7ff fec6 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005dd0:	4604      	mov	r4, r0
 8005dd2:	2800      	cmp	r0, #0
 8005dd4:	f47f af31 	bne.w	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005dd8:	4a0d      	ldr	r2, [pc, #52]	; (8005e10 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 8005dda:	6853      	ldr	r3, [r2, #4]
 8005ddc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005de0:	6053      	str	r3, [r2, #4]
 8005de2:	e76a      	b.n	8005cba <HAL_FLASHEx_DATAEEPROM_Program+0xc2>
 8005de4:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005de8:	f8a8 2000 	strh.w	r2, [r8]
 8005dec:	f7ff feb6 	bl	8005b5c <FLASH_WaitForLastOperation>
 8005df0:	4604      	mov	r4, r0
 8005df2:	e722      	b.n	8005c3a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005df4:	4641      	mov	r1, r8
 8005df6:	4602      	mov	r2, r0
 8005df8:	2004      	movs	r0, #4
 8005dfa:	f7ff fefd 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005dfe:	4622      	mov	r2, r4
 8005e00:	f108 0101 	add.w	r1, r8, #1
 8005e04:	2004      	movs	r0, #4
 8005e06:	f7ff fef7 	bl	8005bf8 <HAL_FLASHEx_DATAEEPROM_Program>
 8005e0a:	e78e      	b.n	8005d2a <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 8005e0c:	200009a0 	.word	0x200009a0
 8005e10:	40023c00 	.word	0x40023c00

08005e14 <HAL_GPIO_Init>:
 8005e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e18:	680c      	ldr	r4, [r1, #0]
 8005e1a:	b085      	sub	sp, #20
 8005e1c:	2c00      	cmp	r4, #0
 8005e1e:	d07c      	beq.n	8005f1a <HAL_GPIO_Init+0x106>
 8005e20:	f04f 0e00 	mov.w	lr, #0
 8005e24:	f04f 0b01 	mov.w	fp, #1
 8005e28:	4673      	mov	r3, lr
 8005e2a:	468c      	mov	ip, r1
 8005e2c:	fa0b f503 	lsl.w	r5, fp, r3
 8005e30:	ea15 0a04 	ands.w	sl, r5, r4
 8005e34:	d06b      	beq.n	8005f0e <HAL_GPIO_Init+0xfa>
 8005e36:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8005e3a:	f001 0203 	and.w	r2, r1, #3
 8005e3e:	1e57      	subs	r7, r2, #1
 8005e40:	2f01      	cmp	r7, #1
 8005e42:	d96d      	bls.n	8005f20 <HAL_GPIO_Init+0x10c>
 8005e44:	2a03      	cmp	r2, #3
 8005e46:	f040 80ae 	bne.w	8005fa6 <HAL_GPIO_Init+0x192>
 8005e4a:	fa02 f20e 	lsl.w	r2, r2, lr
 8005e4e:	43d7      	mvns	r7, r2
 8005e50:	6805      	ldr	r5, [r0, #0]
 8005e52:	f411 3f40 	tst.w	r1, #196608	; 0x30000
 8005e56:	ea07 0705 	and.w	r7, r7, r5
 8005e5a:	ea42 0207 	orr.w	r2, r2, r7
 8005e5e:	6002      	str	r2, [r0, #0]
 8005e60:	d055      	beq.n	8005f0e <HAL_GPIO_Init+0xfa>
 8005e62:	260f      	movs	r6, #15
 8005e64:	4d5a      	ldr	r5, [pc, #360]	; (8005fd0 <HAL_GPIO_Init+0x1bc>)
 8005e66:	f003 0703 	and.w	r7, r3, #3
 8005e6a:	6a2a      	ldr	r2, [r5, #32]
 8005e6c:	00bf      	lsls	r7, r7, #2
 8005e6e:	f042 0201 	orr.w	r2, r2, #1
 8005e72:	622a      	str	r2, [r5, #32]
 8005e74:	6a2a      	ldr	r2, [r5, #32]
 8005e76:	fa06 f807 	lsl.w	r8, r6, r7
 8005e7a:	f002 0201 	and.w	r2, r2, #1
 8005e7e:	9203      	str	r2, [sp, #12]
 8005e80:	9a03      	ldr	r2, [sp, #12]
 8005e82:	f023 0203 	bic.w	r2, r3, #3
 8005e86:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8005e8a:	4e52      	ldr	r6, [pc, #328]	; (8005fd4 <HAL_GPIO_Init+0x1c0>)
 8005e8c:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8005e90:	6895      	ldr	r5, [r2, #8]
 8005e92:	42b0      	cmp	r0, r6
 8005e94:	ea25 0508 	bic.w	r5, r5, r8
 8005e98:	d015      	beq.n	8005ec6 <HAL_GPIO_Init+0xb2>
 8005e9a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005e9e:	42b0      	cmp	r0, r6
 8005ea0:	f000 808c 	beq.w	8005fbc <HAL_GPIO_Init+0x1a8>
 8005ea4:	4e4c      	ldr	r6, [pc, #304]	; (8005fd8 <HAL_GPIO_Init+0x1c4>)
 8005ea6:	42b0      	cmp	r0, r6
 8005ea8:	f000 808c 	beq.w	8005fc4 <HAL_GPIO_Init+0x1b0>
 8005eac:	4e4b      	ldr	r6, [pc, #300]	; (8005fdc <HAL_GPIO_Init+0x1c8>)
 8005eae:	42b0      	cmp	r0, r6
 8005eb0:	d07e      	beq.n	8005fb0 <HAL_GPIO_Init+0x19c>
 8005eb2:	4e4b      	ldr	r6, [pc, #300]	; (8005fe0 <HAL_GPIO_Init+0x1cc>)
 8005eb4:	42b0      	cmp	r0, r6
 8005eb6:	bf0c      	ite	eq
 8005eb8:	f04f 0804 	moveq.w	r8, #4
 8005ebc:	f04f 0805 	movne.w	r8, #5
 8005ec0:	fa08 f707 	lsl.w	r7, r8, r7
 8005ec4:	433d      	orrs	r5, r7
 8005ec6:	ea6f 070a 	mvn.w	r7, sl
 8005eca:	6095      	str	r5, [r2, #8]
 8005ecc:	4a45      	ldr	r2, [pc, #276]	; (8005fe4 <HAL_GPIO_Init+0x1d0>)
 8005ece:	03cd      	lsls	r5, r1, #15
 8005ed0:	6812      	ldr	r2, [r2, #0]
 8005ed2:	4d44      	ldr	r5, [pc, #272]	; (8005fe4 <HAL_GPIO_Init+0x1d0>)
 8005ed4:	bf54      	ite	pl
 8005ed6:	403a      	andpl	r2, r7
 8005ed8:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005edc:	602a      	str	r2, [r5, #0]
 8005ede:	686d      	ldr	r5, [r5, #4]
 8005ee0:	038a      	lsls	r2, r1, #14
 8005ee2:	4a40      	ldr	r2, [pc, #256]	; (8005fe4 <HAL_GPIO_Init+0x1d0>)
 8005ee4:	bf54      	ite	pl
 8005ee6:	403d      	andpl	r5, r7
 8005ee8:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005eec:	6055      	str	r5, [r2, #4]
 8005eee:	6895      	ldr	r5, [r2, #8]
 8005ef0:	02ce      	lsls	r6, r1, #11
 8005ef2:	4a3c      	ldr	r2, [pc, #240]	; (8005fe4 <HAL_GPIO_Init+0x1d0>)
 8005ef4:	bf54      	ite	pl
 8005ef6:	403d      	andpl	r5, r7
 8005ef8:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005efc:	6095      	str	r5, [r2, #8]
 8005efe:	68d2      	ldr	r2, [r2, #12]
 8005f00:	0289      	lsls	r1, r1, #10
 8005f02:	4938      	ldr	r1, [pc, #224]	; (8005fe4 <HAL_GPIO_Init+0x1d0>)
 8005f04:	bf54      	ite	pl
 8005f06:	403a      	andpl	r2, r7
 8005f08:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005f0c:	60ca      	str	r2, [r1, #12]
 8005f0e:	3301      	adds	r3, #1
 8005f10:	fa34 f203 	lsrs.w	r2, r4, r3
 8005f14:	f10e 0e02 	add.w	lr, lr, #2
 8005f18:	d188      	bne.n	8005e2c <HAL_GPIO_Init+0x18>
 8005f1a:	b005      	add	sp, #20
 8005f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f20:	f04f 0903 	mov.w	r9, #3
 8005f24:	6886      	ldr	r6, [r0, #8]
 8005f26:	f8dc 700c 	ldr.w	r7, [ip, #12]
 8005f2a:	fa09 f90e 	lsl.w	r9, r9, lr
 8005f2e:	ea26 0609 	bic.w	r6, r6, r9
 8005f32:	fa07 f70e 	lsl.w	r7, r7, lr
 8005f36:	4337      	orrs	r7, r6
 8005f38:	6087      	str	r7, [r0, #8]
 8005f3a:	ea6f 0709 	mvn.w	r7, r9
 8005f3e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8005f42:	f3c1 1800 	ubfx	r8, r1, #4, #1
 8005f46:	fa08 f803 	lsl.w	r8, r8, r3
 8005f4a:	ea29 0505 	bic.w	r5, r9, r5
 8005f4e:	ea48 0505 	orr.w	r5, r8, r5
 8005f52:	6045      	str	r5, [r0, #4]
 8005f54:	68c5      	ldr	r5, [r0, #12]
 8005f56:	2a02      	cmp	r2, #2
 8005f58:	ea05 0807 	and.w	r8, r5, r7
 8005f5c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8005f60:	fa02 f20e 	lsl.w	r2, r2, lr
 8005f64:	fa05 f50e 	lsl.w	r5, r5, lr
 8005f68:	ea45 0508 	orr.w	r5, r5, r8
 8005f6c:	60c5      	str	r5, [r0, #12]
 8005f6e:	f47f af6f 	bne.w	8005e50 <HAL_GPIO_Init+0x3c>
 8005f72:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8005f76:	f003 0807 	and.w	r8, r3, #7
 8005f7a:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8005f7e:	fa05 f508 	lsl.w	r5, r5, r8
 8005f82:	9501      	str	r5, [sp, #4]
 8005f84:	250f      	movs	r5, #15
 8005f86:	ea4f 09d3 	mov.w	r9, r3, lsr #3
 8005f8a:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 8005f8e:	f8d9 6020 	ldr.w	r6, [r9, #32]
 8005f92:	fa05 f808 	lsl.w	r8, r5, r8
 8005f96:	9d01      	ldr	r5, [sp, #4]
 8005f98:	ea26 0808 	bic.w	r8, r6, r8
 8005f9c:	ea45 0508 	orr.w	r5, r5, r8
 8005fa0:	f8c9 5020 	str.w	r5, [r9, #32]
 8005fa4:	e754      	b.n	8005e50 <HAL_GPIO_Init+0x3c>
 8005fa6:	2703      	movs	r7, #3
 8005fa8:	fa07 f70e 	lsl.w	r7, r7, lr
 8005fac:	43ff      	mvns	r7, r7
 8005fae:	e7d1      	b.n	8005f54 <HAL_GPIO_Init+0x140>
 8005fb0:	f04f 0803 	mov.w	r8, #3
 8005fb4:	fa08 f707 	lsl.w	r7, r8, r7
 8005fb8:	433d      	orrs	r5, r7
 8005fba:	e784      	b.n	8005ec6 <HAL_GPIO_Init+0xb2>
 8005fbc:	fa0b f707 	lsl.w	r7, fp, r7
 8005fc0:	433d      	orrs	r5, r7
 8005fc2:	e780      	b.n	8005ec6 <HAL_GPIO_Init+0xb2>
 8005fc4:	f04f 0802 	mov.w	r8, #2
 8005fc8:	fa08 f707 	lsl.w	r7, r8, r7
 8005fcc:	433d      	orrs	r5, r7
 8005fce:	e77a      	b.n	8005ec6 <HAL_GPIO_Init+0xb2>
 8005fd0:	40023800 	.word	0x40023800
 8005fd4:	40020000 	.word	0x40020000
 8005fd8:	40020800 	.word	0x40020800
 8005fdc:	40020c00 	.word	0x40020c00
 8005fe0:	40021000 	.word	0x40021000
 8005fe4:	40010400 	.word	0x40010400

08005fe8 <HAL_GPIO_ReadPin>:
 8005fe8:	6903      	ldr	r3, [r0, #16]
 8005fea:	4219      	tst	r1, r3
 8005fec:	bf14      	ite	ne
 8005fee:	2001      	movne	r0, #1
 8005ff0:	2000      	moveq	r0, #0
 8005ff2:	4770      	bx	lr

08005ff4 <HAL_GPIO_WritePin>:
 8005ff4:	b902      	cbnz	r2, 8005ff8 <HAL_GPIO_WritePin+0x4>
 8005ff6:	0409      	lsls	r1, r1, #16
 8005ff8:	6181      	str	r1, [r0, #24]
 8005ffa:	4770      	bx	lr

08005ffc <HAL_GPIO_EXTI_IRQHandler>:
 8005ffc:	4a04      	ldr	r2, [pc, #16]	; (8006010 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8005ffe:	6951      	ldr	r1, [r2, #20]
 8006000:	4201      	tst	r1, r0
 8006002:	d100      	bne.n	8006006 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8006004:	4770      	bx	lr
 8006006:	b508      	push	{r3, lr}
 8006008:	6150      	str	r0, [r2, #20]
 800600a:	f009 ffcd 	bl	800ffa8 <__HAL_GPIO_EXTI_Callback_veneer>
 800600e:	bd08      	pop	{r3, pc}
 8006010:	40010400 	.word	0x40010400

08006014 <HAL_I2C_Init>:
 8006014:	2800      	cmp	r0, #0
 8006016:	f000 80b9 	beq.w	800618c <HAL_I2C_Init+0x178>
 800601a:	b538      	push	{r3, r4, r5, lr}
 800601c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006020:	4604      	mov	r4, r0
 8006022:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006026:	2b00      	cmp	r3, #0
 8006028:	f000 8098 	beq.w	800615c <HAL_I2C_Init+0x148>
 800602c:	2224      	movs	r2, #36	; 0x24
 800602e:	6823      	ldr	r3, [r4, #0]
 8006030:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8006034:	681a      	ldr	r2, [r3, #0]
 8006036:	f022 0201 	bic.w	r2, r2, #1
 800603a:	601a      	str	r2, [r3, #0]
 800603c:	681a      	ldr	r2, [r3, #0]
 800603e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006042:	601a      	str	r2, [r3, #0]
 8006044:	681a      	ldr	r2, [r3, #0]
 8006046:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800604a:	601a      	str	r2, [r3, #0]
 800604c:	f001 ff90 	bl	8007f70 <HAL_RCC_GetPCLK1Freq>
 8006050:	6863      	ldr	r3, [r4, #4]
 8006052:	494f      	ldr	r1, [pc, #316]	; (8006190 <HAL_I2C_Init+0x17c>)
 8006054:	428b      	cmp	r3, r1
 8006056:	d84f      	bhi.n	80060f8 <HAL_I2C_Init+0xe4>
 8006058:	4a4e      	ldr	r2, [pc, #312]	; (8006194 <HAL_I2C_Init+0x180>)
 800605a:	4290      	cmp	r0, r2
 800605c:	d97c      	bls.n	8006158 <HAL_I2C_Init+0x144>
 800605e:	4d4e      	ldr	r5, [pc, #312]	; (8006198 <HAL_I2C_Init+0x184>)
 8006060:	005a      	lsls	r2, r3, #1
 8006062:	fba5 3500 	umull	r3, r5, r5, r0
 8006066:	1e43      	subs	r3, r0, #1
 8006068:	fbb3 f3f2 	udiv	r3, r3, r2
 800606c:	f640 7efc 	movw	lr, #4092	; 0xffc
 8006070:	6822      	ldr	r2, [r4, #0]
 8006072:	0ca9      	lsrs	r1, r5, #18
 8006074:	6850      	ldr	r0, [r2, #4]
 8006076:	f101 0c01 	add.w	ip, r1, #1
 800607a:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 800607e:	ea40 4095 	orr.w	r0, r0, r5, lsr #18
 8006082:	6050      	str	r0, [r2, #4]
 8006084:	6a11      	ldr	r1, [r2, #32]
 8006086:	3301      	adds	r3, #1
 8006088:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800608c:	ea41 010c 	orr.w	r1, r1, ip
 8006090:	6211      	str	r1, [r2, #32]
 8006092:	69d1      	ldr	r1, [r2, #28]
 8006094:	ea13 0f0e 	tst.w	r3, lr
 8006098:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800609c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80060a0:	d161      	bne.n	8006166 <HAL_I2C_Init+0x152>
 80060a2:	2304      	movs	r3, #4
 80060a4:	430b      	orrs	r3, r1
 80060a6:	61d3      	str	r3, [r2, #28]
 80060a8:	6811      	ldr	r1, [r2, #0]
 80060aa:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80060ae:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80060b2:	4303      	orrs	r3, r0
 80060b4:	430b      	orrs	r3, r1
 80060b6:	6013      	str	r3, [r2, #0]
 80060b8:	6891      	ldr	r1, [r2, #8]
 80060ba:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80060be:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80060c2:	4303      	orrs	r3, r0
 80060c4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80060c8:	430b      	orrs	r3, r1
 80060ca:	6093      	str	r3, [r2, #8]
 80060cc:	68d0      	ldr	r0, [r2, #12]
 80060ce:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80060d2:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 80060d6:	430b      	orrs	r3, r1
 80060d8:	4303      	orrs	r3, r0
 80060da:	60d3      	str	r3, [r2, #12]
 80060dc:	6813      	ldr	r3, [r2, #0]
 80060de:	2100      	movs	r1, #0
 80060e0:	f043 0301 	orr.w	r3, r3, #1
 80060e4:	6013      	str	r3, [r2, #0]
 80060e6:	2320      	movs	r3, #32
 80060e8:	6421      	str	r1, [r4, #64]	; 0x40
 80060ea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80060ee:	6321      	str	r1, [r4, #48]	; 0x30
 80060f0:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 80060f4:	4608      	mov	r0, r1
 80060f6:	bd38      	pop	{r3, r4, r5, pc}
 80060f8:	4a28      	ldr	r2, [pc, #160]	; (800619c <HAL_I2C_Init+0x188>)
 80060fa:	4290      	cmp	r0, r2
 80060fc:	d92c      	bls.n	8006158 <HAL_I2C_Init+0x144>
 80060fe:	4d26      	ldr	r5, [pc, #152]	; (8006198 <HAL_I2C_Init+0x184>)
 8006100:	fba5 2c00 	umull	r2, ip, r5, r0
 8006104:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8006108:	ea4f 419c 	mov.w	r1, ip, lsr #18
 800610c:	fb02 f101 	mul.w	r1, r2, r1
 8006110:	4d23      	ldr	r5, [pc, #140]	; (80061a0 <HAL_I2C_Init+0x18c>)
 8006112:	6822      	ldr	r2, [r4, #0]
 8006114:	fba5 5101 	umull	r5, r1, r5, r1
 8006118:	6855      	ldr	r5, [r2, #4]
 800611a:	0989      	lsrs	r1, r1, #6
 800611c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8006120:	ea45 459c 	orr.w	r5, r5, ip, lsr #18
 8006124:	6055      	str	r5, [r2, #4]
 8006126:	6a15      	ldr	r5, [r2, #32]
 8006128:	3101      	adds	r1, #1
 800612a:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800612e:	4329      	orrs	r1, r5
 8006130:	6211      	str	r1, [r2, #32]
 8006132:	69d1      	ldr	r1, [r2, #28]
 8006134:	68a5      	ldr	r5, [r4, #8]
 8006136:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800613a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800613e:	b9ad      	cbnz	r5, 800616c <HAL_I2C_Init+0x158>
 8006140:	3801      	subs	r0, #1
 8006142:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8006146:	fbb0 f3f3 	udiv	r3, r0, r3
 800614a:	3301      	adds	r3, #1
 800614c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006150:	b1d3      	cbz	r3, 8006188 <HAL_I2C_Init+0x174>
 8006152:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006156:	e7a5      	b.n	80060a4 <HAL_I2C_Init+0x90>
 8006158:	2001      	movs	r0, #1
 800615a:	bd38      	pop	{r3, r4, r5, pc}
 800615c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8006160:	f7fd fcc2 	bl	8003ae8 <HAL_I2C_MspInit>
 8006164:	e762      	b.n	800602c <HAL_I2C_Init+0x18>
 8006166:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800616a:	e79b      	b.n	80060a4 <HAL_I2C_Init+0x90>
 800616c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006170:	3801      	subs	r0, #1
 8006172:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006176:	fbb0 f3f3 	udiv	r3, r0, r3
 800617a:	3301      	adds	r3, #1
 800617c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006180:	b113      	cbz	r3, 8006188 <HAL_I2C_Init+0x174>
 8006182:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006186:	e78d      	b.n	80060a4 <HAL_I2C_Init+0x90>
 8006188:	2301      	movs	r3, #1
 800618a:	e78b      	b.n	80060a4 <HAL_I2C_Init+0x90>
 800618c:	2001      	movs	r0, #1
 800618e:	4770      	bx	lr
 8006190:	000186a0 	.word	0x000186a0
 8006194:	001e847f 	.word	0x001e847f
 8006198:	431bde83 	.word	0x431bde83
 800619c:	003d08ff 	.word	0x003d08ff
 80061a0:	10624dd3 	.word	0x10624dd3

080061a4 <HAL_I2C_Master_Transmit>:
 80061a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061a8:	4605      	mov	r5, r0
 80061aa:	b083      	sub	sp, #12
 80061ac:	4699      	mov	r9, r3
 80061ae:	4688      	mov	r8, r1
 80061b0:	4692      	mov	sl, r2
 80061b2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80061b4:	f7ff fbc8 	bl	8005948 <HAL_GetTick>
 80061b8:	f895 303d 	ldrb.w	r3, [r5, #61]	; 0x3d
 80061bc:	2b20      	cmp	r3, #32
 80061be:	d003      	beq.n	80061c8 <HAL_I2C_Master_Transmit+0x24>
 80061c0:	2002      	movs	r0, #2
 80061c2:	b003      	add	sp, #12
 80061c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061c8:	4606      	mov	r6, r0
 80061ca:	e005      	b.n	80061d8 <HAL_I2C_Master_Transmit+0x34>
 80061cc:	f7ff fbbc 	bl	8005948 <HAL_GetTick>
 80061d0:	1b80      	subs	r0, r0, r6
 80061d2:	2819      	cmp	r0, #25
 80061d4:	f200 80f8 	bhi.w	80063c8 <HAL_I2C_Master_Transmit+0x224>
 80061d8:	682c      	ldr	r4, [r5, #0]
 80061da:	69a3      	ldr	r3, [r4, #24]
 80061dc:	ea6f 0c03 	mvn.w	ip, r3
 80061e0:	f01c 0b02 	ands.w	fp, ip, #2
 80061e4:	d0f2      	beq.n	80061cc <HAL_I2C_Master_Transmit+0x28>
 80061e6:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 80061ea:	2b01      	cmp	r3, #1
 80061ec:	d0e8      	beq.n	80061c0 <HAL_I2C_Master_Transmit+0x1c>
 80061ee:	2301      	movs	r3, #1
 80061f0:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 80061f4:	6823      	ldr	r3, [r4, #0]
 80061f6:	07d9      	lsls	r1, r3, #31
 80061f8:	d571      	bpl.n	80062de <HAL_I2C_Master_Transmit+0x13a>
 80061fa:	2200      	movs	r2, #0
 80061fc:	2021      	movs	r0, #33	; 0x21
 80061fe:	2110      	movs	r1, #16
 8006200:	6823      	ldr	r3, [r4, #0]
 8006202:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006206:	6023      	str	r3, [r4, #0]
 8006208:	f885 003d 	strb.w	r0, [r5, #61]	; 0x3d
 800620c:	f885 103e 	strb.w	r1, [r5, #62]	; 0x3e
 8006210:	642a      	str	r2, [r5, #64]	; 0x40
 8006212:	f8a5 902a 	strh.w	r9, [r5, #42]	; 0x2a
 8006216:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006218:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 800621c:	62ea      	str	r2, [r5, #44]	; 0x2c
 800621e:	852b      	strh	r3, [r5, #40]	; 0x28
 8006220:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006222:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8006226:	2b08      	cmp	r3, #8
 8006228:	d006      	beq.n	8006238 <HAL_I2C_Master_Transmit+0x94>
 800622a:	2b01      	cmp	r3, #1
 800622c:	d004      	beq.n	8006238 <HAL_I2C_Master_Transmit+0x94>
 800622e:	4293      	cmp	r3, r2
 8006230:	d002      	beq.n	8006238 <HAL_I2C_Master_Transmit+0x94>
 8006232:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8006234:	2b12      	cmp	r3, #18
 8006236:	d103      	bne.n	8006240 <HAL_I2C_Master_Transmit+0x9c>
 8006238:	6823      	ldr	r3, [r4, #0]
 800623a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800623e:	6023      	str	r3, [r4, #0]
 8006240:	1c7b      	adds	r3, r7, #1
 8006242:	d13e      	bne.n	80062c2 <HAL_I2C_Master_Transmit+0x11e>
 8006244:	6963      	ldr	r3, [r4, #20]
 8006246:	07d8      	lsls	r0, r3, #31
 8006248:	d5fc      	bpl.n	8006244 <HAL_I2C_Master_Transmit+0xa0>
 800624a:	692b      	ldr	r3, [r5, #16]
 800624c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006250:	d14a      	bne.n	80062e8 <HAL_I2C_Master_Transmit+0x144>
 8006252:	f008 01fe 	and.w	r1, r8, #254	; 0xfe
 8006256:	6121      	str	r1, [r4, #16]
 8006258:	1c78      	adds	r0, r7, #1
 800625a:	d004      	beq.n	8006266 <HAL_I2C_Master_Transmit+0xc2>
 800625c:	e0dd      	b.n	800641a <HAL_I2C_Master_Transmit+0x276>
 800625e:	6963      	ldr	r3, [r4, #20]
 8006260:	055a      	lsls	r2, r3, #21
 8006262:	f100 80c2 	bmi.w	80063ea <HAL_I2C_Master_Transmit+0x246>
 8006266:	6963      	ldr	r3, [r4, #20]
 8006268:	0799      	lsls	r1, r3, #30
 800626a:	d5f8      	bpl.n	800625e <HAL_I2C_Master_Transmit+0xba>
 800626c:	2200      	movs	r2, #0
 800626e:	9201      	str	r2, [sp, #4]
 8006270:	6962      	ldr	r2, [r4, #20]
 8006272:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8006274:	9201      	str	r2, [sp, #4]
 8006276:	69a2      	ldr	r2, [r4, #24]
 8006278:	9201      	str	r2, [sp, #4]
 800627a:	9a01      	ldr	r2, [sp, #4]
 800627c:	2b00      	cmp	r3, #0
 800627e:	d075      	beq.n	800636c <HAL_I2C_Master_Transmit+0x1c8>
 8006280:	1c79      	adds	r1, r7, #1
 8006282:	f040 8081 	bne.w	8006388 <HAL_I2C_Master_Transmit+0x1e4>
 8006286:	6963      	ldr	r3, [r4, #20]
 8006288:	061a      	lsls	r2, r3, #24
 800628a:	d441      	bmi.n	8006310 <HAL_I2C_Master_Transmit+0x16c>
 800628c:	6963      	ldr	r3, [r4, #20]
 800628e:	055b      	lsls	r3, r3, #21
 8006290:	d5f9      	bpl.n	8006286 <HAL_I2C_Master_Transmit+0xe2>
 8006292:	2200      	movs	r2, #0
 8006294:	2320      	movs	r3, #32
 8006296:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 800629a:	6161      	str	r1, [r4, #20]
 800629c:	632a      	str	r2, [r5, #48]	; 0x30
 800629e:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80062a2:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80062a6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80062a8:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80062ac:	f043 0304 	orr.w	r3, r3, #4
 80062b0:	642b      	str	r3, [r5, #64]	; 0x40
 80062b2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80062b4:	2b04      	cmp	r3, #4
 80062b6:	f000 80e6 	beq.w	8006486 <HAL_I2C_Master_Transmit+0x2e2>
 80062ba:	2001      	movs	r0, #1
 80062bc:	b003      	add	sp, #12
 80062be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062c2:	6963      	ldr	r3, [r4, #20]
 80062c4:	07d9      	lsls	r1, r3, #31
 80062c6:	d4c0      	bmi.n	800624a <HAL_I2C_Master_Transmit+0xa6>
 80062c8:	f7ff fb3e 	bl	8005948 <HAL_GetTick>
 80062cc:	1b80      	subs	r0, r0, r6
 80062ce:	4287      	cmp	r7, r0
 80062d0:	f0c0 80b3 	bcc.w	800643a <HAL_I2C_Master_Transmit+0x296>
 80062d4:	2f00      	cmp	r7, #0
 80062d6:	f000 80b0 	beq.w	800643a <HAL_I2C_Master_Transmit+0x296>
 80062da:	682c      	ldr	r4, [r5, #0]
 80062dc:	e7b0      	b.n	8006240 <HAL_I2C_Master_Transmit+0x9c>
 80062de:	6823      	ldr	r3, [r4, #0]
 80062e0:	f043 0301 	orr.w	r3, r3, #1
 80062e4:	6023      	str	r3, [r4, #0]
 80062e6:	e788      	b.n	80061fa <HAL_I2C_Master_Transmit+0x56>
 80062e8:	ea4f 13e8 	mov.w	r3, r8, asr #7
 80062ec:	f003 0306 	and.w	r3, r3, #6
 80062f0:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 80062f4:	6123      	str	r3, [r4, #16]
 80062f6:	1c7b      	adds	r3, r7, #1
 80062f8:	d003      	beq.n	8006302 <HAL_I2C_Master_Transmit+0x15e>
 80062fa:	e0b5      	b.n	8006468 <HAL_I2C_Master_Transmit+0x2c4>
 80062fc:	6963      	ldr	r3, [r4, #20]
 80062fe:	0559      	lsls	r1, r3, #21
 8006300:	d473      	bmi.n	80063ea <HAL_I2C_Master_Transmit+0x246>
 8006302:	6963      	ldr	r3, [r4, #20]
 8006304:	0718      	lsls	r0, r3, #28
 8006306:	d5f9      	bpl.n	80062fc <HAL_I2C_Master_Transmit+0x158>
 8006308:	fa5f f388 	uxtb.w	r3, r8
 800630c:	6123      	str	r3, [r4, #16]
 800630e:	e7a3      	b.n	8006258 <HAL_I2C_Master_Transmit+0xb4>
 8006310:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8006312:	f8b5 c028 	ldrh.w	ip, [r5, #40]	; 0x28
 8006316:	4601      	mov	r1, r0
 8006318:	f811 3b01 	ldrb.w	r3, [r1], #1
 800631c:	f10c 32ff 	add.w	r2, ip, #4294967295
 8006320:	6123      	str	r3, [r4, #16]
 8006322:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006324:	b292      	uxth	r2, r2
 8006326:	3b01      	subs	r3, #1
 8006328:	b29b      	uxth	r3, r3
 800632a:	856b      	strh	r3, [r5, #42]	; 0x2a
 800632c:	6963      	ldr	r3, [r4, #20]
 800632e:	6269      	str	r1, [r5, #36]	; 0x24
 8006330:	0759      	lsls	r1, r3, #29
 8006332:	852a      	strh	r2, [r5, #40]	; 0x28
 8006334:	d50c      	bpl.n	8006350 <HAL_I2C_Master_Transmit+0x1ac>
 8006336:	b15a      	cbz	r2, 8006350 <HAL_I2C_Master_Transmit+0x1ac>
 8006338:	7843      	ldrb	r3, [r0, #1]
 800633a:	f1ac 0c02 	sub.w	ip, ip, #2
 800633e:	6123      	str	r3, [r4, #16]
 8006340:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006342:	3002      	adds	r0, #2
 8006344:	3b01      	subs	r3, #1
 8006346:	b29b      	uxth	r3, r3
 8006348:	f8a5 c028 	strh.w	ip, [r5, #40]	; 0x28
 800634c:	6268      	str	r0, [r5, #36]	; 0x24
 800634e:	856b      	strh	r3, [r5, #42]	; 0x2a
 8006350:	1c78      	adds	r0, r7, #1
 8006352:	d129      	bne.n	80063a8 <HAL_I2C_Master_Transmit+0x204>
 8006354:	6963      	ldr	r3, [r4, #20]
 8006356:	0759      	lsls	r1, r3, #29
 8006358:	d405      	bmi.n	8006366 <HAL_I2C_Master_Transmit+0x1c2>
 800635a:	6963      	ldr	r3, [r4, #20]
 800635c:	055a      	lsls	r2, r3, #21
 800635e:	d498      	bmi.n	8006292 <HAL_I2C_Master_Transmit+0xee>
 8006360:	6963      	ldr	r3, [r4, #20]
 8006362:	0759      	lsls	r1, r3, #29
 8006364:	d5f9      	bpl.n	800635a <HAL_I2C_Master_Transmit+0x1b6>
 8006366:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8006368:	2b00      	cmp	r3, #0
 800636a:	d189      	bne.n	8006280 <HAL_I2C_Master_Transmit+0xdc>
 800636c:	2300      	movs	r3, #0
 800636e:	2120      	movs	r1, #32
 8006370:	6822      	ldr	r2, [r4, #0]
 8006372:	4618      	mov	r0, r3
 8006374:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006378:	6022      	str	r2, [r4, #0]
 800637a:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 800637e:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8006382:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
 8006386:	e71c      	b.n	80061c2 <HAL_I2C_Master_Transmit+0x1e>
 8006388:	6963      	ldr	r3, [r4, #20]
 800638a:	0618      	lsls	r0, r3, #24
 800638c:	d4c0      	bmi.n	8006310 <HAL_I2C_Master_Transmit+0x16c>
 800638e:	6963      	ldr	r3, [r4, #20]
 8006390:	0558      	lsls	r0, r3, #21
 8006392:	f53f af7e 	bmi.w	8006292 <HAL_I2C_Master_Transmit+0xee>
 8006396:	f7ff fad7 	bl	8005948 <HAL_GetTick>
 800639a:	1b80      	subs	r0, r0, r6
 800639c:	4287      	cmp	r7, r0
 800639e:	d379      	bcc.n	8006494 <HAL_I2C_Master_Transmit+0x2f0>
 80063a0:	2f00      	cmp	r7, #0
 80063a2:	d077      	beq.n	8006494 <HAL_I2C_Master_Transmit+0x2f0>
 80063a4:	682c      	ldr	r4, [r5, #0]
 80063a6:	e76b      	b.n	8006280 <HAL_I2C_Master_Transmit+0xdc>
 80063a8:	6963      	ldr	r3, [r4, #20]
 80063aa:	075b      	lsls	r3, r3, #29
 80063ac:	d4db      	bmi.n	8006366 <HAL_I2C_Master_Transmit+0x1c2>
 80063ae:	6963      	ldr	r3, [r4, #20]
 80063b0:	055b      	lsls	r3, r3, #21
 80063b2:	f53f af6e 	bmi.w	8006292 <HAL_I2C_Master_Transmit+0xee>
 80063b6:	f7ff fac7 	bl	8005948 <HAL_GetTick>
 80063ba:	1b80      	subs	r0, r0, r6
 80063bc:	4287      	cmp	r7, r0
 80063be:	d369      	bcc.n	8006494 <HAL_I2C_Master_Transmit+0x2f0>
 80063c0:	2f00      	cmp	r7, #0
 80063c2:	d067      	beq.n	8006494 <HAL_I2C_Master_Transmit+0x2f0>
 80063c4:	682c      	ldr	r4, [r5, #0]
 80063c6:	e7c3      	b.n	8006350 <HAL_I2C_Master_Transmit+0x1ac>
 80063c8:	2320      	movs	r3, #32
 80063ca:	2002      	movs	r0, #2
 80063cc:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 80063d0:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80063d4:	f885 b03e 	strb.w	fp, [r5, #62]	; 0x3e
 80063d8:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80063da:	f885 b03c 	strb.w	fp, [r5, #60]	; 0x3c
 80063de:	f043 0320 	orr.w	r3, r3, #32
 80063e2:	642b      	str	r3, [r5, #64]	; 0x40
 80063e4:	b003      	add	sp, #12
 80063e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063ea:	2200      	movs	r2, #0
 80063ec:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 80063f0:	2120      	movs	r1, #32
 80063f2:	2001      	movs	r0, #1
 80063f4:	6823      	ldr	r3, [r4, #0]
 80063f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80063fa:	6023      	str	r3, [r4, #0]
 80063fc:	6166      	str	r6, [r4, #20]
 80063fe:	632a      	str	r2, [r5, #48]	; 0x30
 8006400:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 8006404:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006408:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800640a:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800640e:	f043 0304 	orr.w	r3, r3, #4
 8006412:	642b      	str	r3, [r5, #64]	; 0x40
 8006414:	b003      	add	sp, #12
 8006416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800641a:	6963      	ldr	r3, [r4, #20]
 800641c:	079b      	lsls	r3, r3, #30
 800641e:	f53f af25 	bmi.w	800626c <HAL_I2C_Master_Transmit+0xc8>
 8006422:	6963      	ldr	r3, [r4, #20]
 8006424:	055b      	lsls	r3, r3, #21
 8006426:	d4e0      	bmi.n	80063ea <HAL_I2C_Master_Transmit+0x246>
 8006428:	f7ff fa8e 	bl	8005948 <HAL_GetTick>
 800642c:	1b80      	subs	r0, r0, r6
 800642e:	4287      	cmp	r7, r0
 8006430:	d33e      	bcc.n	80064b0 <HAL_I2C_Master_Transmit+0x30c>
 8006432:	2f00      	cmp	r7, #0
 8006434:	d03c      	beq.n	80064b0 <HAL_I2C_Master_Transmit+0x30c>
 8006436:	682c      	ldr	r4, [r5, #0]
 8006438:	e70e      	b.n	8006258 <HAL_I2C_Master_Transmit+0xb4>
 800643a:	2200      	movs	r2, #0
 800643c:	2320      	movs	r3, #32
 800643e:	632a      	str	r2, [r5, #48]	; 0x30
 8006440:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8006444:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006448:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800644a:	6829      	ldr	r1, [r5, #0]
 800644c:	f043 0320 	orr.w	r3, r3, #32
 8006450:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8006454:	642b      	str	r3, [r5, #64]	; 0x40
 8006456:	680b      	ldr	r3, [r1, #0]
 8006458:	05da      	lsls	r2, r3, #23
 800645a:	f57f af2e 	bpl.w	80062ba <HAL_I2C_Master_Transmit+0x116>
 800645e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006462:	2001      	movs	r0, #1
 8006464:	642b      	str	r3, [r5, #64]	; 0x40
 8006466:	e6ac      	b.n	80061c2 <HAL_I2C_Master_Transmit+0x1e>
 8006468:	6963      	ldr	r3, [r4, #20]
 800646a:	071a      	lsls	r2, r3, #28
 800646c:	f53f af4c 	bmi.w	8006308 <HAL_I2C_Master_Transmit+0x164>
 8006470:	6963      	ldr	r3, [r4, #20]
 8006472:	055a      	lsls	r2, r3, #21
 8006474:	d4b9      	bmi.n	80063ea <HAL_I2C_Master_Transmit+0x246>
 8006476:	f7ff fa67 	bl	8005948 <HAL_GetTick>
 800647a:	1b83      	subs	r3, r0, r6
 800647c:	429f      	cmp	r7, r3
 800647e:	d317      	bcc.n	80064b0 <HAL_I2C_Master_Transmit+0x30c>
 8006480:	b1b7      	cbz	r7, 80064b0 <HAL_I2C_Master_Transmit+0x30c>
 8006482:	682c      	ldr	r4, [r5, #0]
 8006484:	e737      	b.n	80062f6 <HAL_I2C_Master_Transmit+0x152>
 8006486:	682a      	ldr	r2, [r5, #0]
 8006488:	2001      	movs	r0, #1
 800648a:	6813      	ldr	r3, [r2, #0]
 800648c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006490:	6013      	str	r3, [r2, #0]
 8006492:	e696      	b.n	80061c2 <HAL_I2C_Master_Transmit+0x1e>
 8006494:	2200      	movs	r2, #0
 8006496:	2320      	movs	r3, #32
 8006498:	632a      	str	r2, [r5, #48]	; 0x30
 800649a:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 800649e:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80064a2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80064a4:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80064a8:	f043 0320 	orr.w	r3, r3, #32
 80064ac:	642b      	str	r3, [r5, #64]	; 0x40
 80064ae:	e700      	b.n	80062b2 <HAL_I2C_Master_Transmit+0x10e>
 80064b0:	2200      	movs	r2, #0
 80064b2:	2320      	movs	r3, #32
 80064b4:	632a      	str	r2, [r5, #48]	; 0x30
 80064b6:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80064ba:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80064be:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80064c0:	2001      	movs	r0, #1
 80064c2:	f043 0320 	orr.w	r3, r3, #32
 80064c6:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80064ca:	642b      	str	r3, [r5, #64]	; 0x40
 80064cc:	e679      	b.n	80061c2 <HAL_I2C_Master_Transmit+0x1e>
 80064ce:	bf00      	nop

080064d0 <HAL_I2C_Master_Receive>:
 80064d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80064d4:	4604      	mov	r4, r0
 80064d6:	b086      	sub	sp, #24
 80064d8:	4698      	mov	r8, r3
 80064da:	460f      	mov	r7, r1
 80064dc:	4691      	mov	r9, r2
 80064de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80064e0:	f7ff fa32 	bl	8005948 <HAL_GetTick>
 80064e4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80064e8:	2b20      	cmp	r3, #32
 80064ea:	d003      	beq.n	80064f4 <HAL_I2C_Master_Receive+0x24>
 80064ec:	2002      	movs	r0, #2
 80064ee:	b006      	add	sp, #24
 80064f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064f4:	4606      	mov	r6, r0
 80064f6:	e005      	b.n	8006504 <HAL_I2C_Master_Receive+0x34>
 80064f8:	f7ff fa26 	bl	8005948 <HAL_GetTick>
 80064fc:	1b80      	subs	r0, r0, r6
 80064fe:	2819      	cmp	r0, #25
 8006500:	f200 80a9 	bhi.w	8006656 <HAL_I2C_Master_Receive+0x186>
 8006504:	6823      	ldr	r3, [r4, #0]
 8006506:	6998      	ldr	r0, [r3, #24]
 8006508:	43c0      	mvns	r0, r0
 800650a:	f010 0a02 	ands.w	sl, r0, #2
 800650e:	d0f3      	beq.n	80064f8 <HAL_I2C_Master_Receive+0x28>
 8006510:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8006514:	2a01      	cmp	r2, #1
 8006516:	d0e9      	beq.n	80064ec <HAL_I2C_Master_Receive+0x1c>
 8006518:	2201      	movs	r2, #1
 800651a:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 800651e:	681a      	ldr	r2, [r3, #0]
 8006520:	07d2      	lsls	r2, r2, #31
 8006522:	d563      	bpl.n	80065ec <HAL_I2C_Master_Receive+0x11c>
 8006524:	2100      	movs	r1, #0
 8006526:	f04f 0c22 	mov.w	ip, #34	; 0x22
 800652a:	2010      	movs	r0, #16
 800652c:	681a      	ldr	r2, [r3, #0]
 800652e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006532:	601a      	str	r2, [r3, #0]
 8006534:	f884 c03d 	strb.w	ip, [r4, #61]	; 0x3d
 8006538:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
 800653c:	6421      	str	r1, [r4, #64]	; 0x40
 800653e:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
 8006542:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8006544:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006548:	62e1      	str	r1, [r4, #44]	; 0x2c
 800654a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800654c:	8522      	strh	r2, [r4, #40]	; 0x28
 800654e:	681a      	ldr	r2, [r3, #0]
 8006550:	2908      	cmp	r1, #8
 8006552:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006556:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 800655a:	601a      	str	r2, [r3, #0]
 800655c:	d007      	beq.n	800656e <HAL_I2C_Master_Receive+0x9e>
 800655e:	2901      	cmp	r1, #1
 8006560:	d005      	beq.n	800656e <HAL_I2C_Master_Receive+0x9e>
 8006562:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 8006566:	d002      	beq.n	800656e <HAL_I2C_Master_Receive+0x9e>
 8006568:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800656a:	2a11      	cmp	r2, #17
 800656c:	d103      	bne.n	8006576 <HAL_I2C_Master_Receive+0xa6>
 800656e:	681a      	ldr	r2, [r3, #0]
 8006570:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006574:	601a      	str	r2, [r3, #0]
 8006576:	1c69      	adds	r1, r5, #1
 8006578:	d12a      	bne.n	80065d0 <HAL_I2C_Master_Receive+0x100>
 800657a:	695a      	ldr	r2, [r3, #20]
 800657c:	07d2      	lsls	r2, r2, #31
 800657e:	d5fc      	bpl.n	800657a <HAL_I2C_Master_Receive+0xaa>
 8006580:	6922      	ldr	r2, [r4, #16]
 8006582:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8006586:	d136      	bne.n	80065f6 <HAL_I2C_Master_Receive+0x126>
 8006588:	f047 0201 	orr.w	r2, r7, #1
 800658c:	b2d2      	uxtb	r2, r2
 800658e:	611a      	str	r2, [r3, #16]
 8006590:	1c68      	adds	r0, r5, #1
 8006592:	d003      	beq.n	800659c <HAL_I2C_Master_Receive+0xcc>
 8006594:	e109      	b.n	80067aa <HAL_I2C_Master_Receive+0x2da>
 8006596:	695a      	ldr	r2, [r3, #20]
 8006598:	0552      	lsls	r2, r2, #21
 800659a:	d46d      	bmi.n	8006678 <HAL_I2C_Master_Receive+0x1a8>
 800659c:	695a      	ldr	r2, [r3, #20]
 800659e:	0791      	lsls	r1, r2, #30
 80065a0:	d5f9      	bpl.n	8006596 <HAL_I2C_Master_Receive+0xc6>
 80065a2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80065a4:	2a00      	cmp	r2, #0
 80065a6:	d17f      	bne.n	80066a8 <HAL_I2C_Master_Receive+0x1d8>
 80065a8:	9201      	str	r2, [sp, #4]
 80065aa:	695a      	ldr	r2, [r3, #20]
 80065ac:	9201      	str	r2, [sp, #4]
 80065ae:	699a      	ldr	r2, [r3, #24]
 80065b0:	9201      	str	r2, [sp, #4]
 80065b2:	9a01      	ldr	r2, [sp, #4]
 80065b4:	681a      	ldr	r2, [r3, #0]
 80065b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80065ba:	601a      	str	r2, [r3, #0]
 80065bc:	2300      	movs	r3, #0
 80065be:	2220      	movs	r2, #32
 80065c0:	4618      	mov	r0, r3
 80065c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 80065c6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80065ca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80065ce:	e78e      	b.n	80064ee <HAL_I2C_Master_Receive+0x1e>
 80065d0:	695a      	ldr	r2, [r3, #20]
 80065d2:	07d0      	lsls	r0, r2, #31
 80065d4:	d4d4      	bmi.n	8006580 <HAL_I2C_Master_Receive+0xb0>
 80065d6:	f7ff f9b7 	bl	8005948 <HAL_GetTick>
 80065da:	1b83      	subs	r3, r0, r6
 80065dc:	429d      	cmp	r5, r3
 80065de:	f0c0 810e 	bcc.w	80067fe <HAL_I2C_Master_Receive+0x32e>
 80065e2:	2d00      	cmp	r5, #0
 80065e4:	f000 810b 	beq.w	80067fe <HAL_I2C_Master_Receive+0x32e>
 80065e8:	6823      	ldr	r3, [r4, #0]
 80065ea:	e7c4      	b.n	8006576 <HAL_I2C_Master_Receive+0xa6>
 80065ec:	681a      	ldr	r2, [r3, #0]
 80065ee:	f042 0201 	orr.w	r2, r2, #1
 80065f2:	601a      	str	r2, [r3, #0]
 80065f4:	e796      	b.n	8006524 <HAL_I2C_Master_Receive+0x54>
 80065f6:	ea4f 18e7 	mov.w	r8, r7, asr #7
 80065fa:	f008 0806 	and.w	r8, r8, #6
 80065fe:	f048 02f0 	orr.w	r2, r8, #240	; 0xf0
 8006602:	611a      	str	r2, [r3, #16]
 8006604:	1c6a      	adds	r2, r5, #1
 8006606:	d003      	beq.n	8006610 <HAL_I2C_Master_Receive+0x140>
 8006608:	e10f      	b.n	800682a <HAL_I2C_Master_Receive+0x35a>
 800660a:	695a      	ldr	r2, [r3, #20]
 800660c:	0551      	lsls	r1, r2, #21
 800660e:	d433      	bmi.n	8006678 <HAL_I2C_Master_Receive+0x1a8>
 8006610:	695a      	ldr	r2, [r3, #20]
 8006612:	0710      	lsls	r0, r2, #28
 8006614:	d5f9      	bpl.n	800660a <HAL_I2C_Master_Receive+0x13a>
 8006616:	b2ff      	uxtb	r7, r7
 8006618:	611f      	str	r7, [r3, #16]
 800661a:	1c68      	adds	r0, r5, #1
 800661c:	d003      	beq.n	8006626 <HAL_I2C_Master_Receive+0x156>
 800661e:	e1a8      	b.n	8006972 <HAL_I2C_Master_Receive+0x4a2>
 8006620:	695a      	ldr	r2, [r3, #20]
 8006622:	0552      	lsls	r2, r2, #21
 8006624:	d428      	bmi.n	8006678 <HAL_I2C_Master_Receive+0x1a8>
 8006626:	695a      	ldr	r2, [r3, #20]
 8006628:	0791      	lsls	r1, r2, #30
 800662a:	d5f9      	bpl.n	8006620 <HAL_I2C_Master_Receive+0x150>
 800662c:	2200      	movs	r2, #0
 800662e:	9205      	str	r2, [sp, #20]
 8006630:	695a      	ldr	r2, [r3, #20]
 8006632:	9205      	str	r2, [sp, #20]
 8006634:	699a      	ldr	r2, [r3, #24]
 8006636:	9205      	str	r2, [sp, #20]
 8006638:	9a05      	ldr	r2, [sp, #20]
 800663a:	681a      	ldr	r2, [r3, #0]
 800663c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006640:	601a      	str	r2, [r3, #0]
 8006642:	1c68      	adds	r0, r5, #1
 8006644:	f040 81a8 	bne.w	8006998 <HAL_I2C_Master_Receive+0x4c8>
 8006648:	695a      	ldr	r2, [r3, #20]
 800664a:	07d1      	lsls	r1, r2, #31
 800664c:	d5fc      	bpl.n	8006648 <HAL_I2C_Master_Receive+0x178>
 800664e:	f048 02f1 	orr.w	r2, r8, #241	; 0xf1
 8006652:	611a      	str	r2, [r3, #16]
 8006654:	e79c      	b.n	8006590 <HAL_I2C_Master_Receive+0xc0>
 8006656:	2320      	movs	r3, #32
 8006658:	2002      	movs	r0, #2
 800665a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 800665e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006662:	f884 a03e 	strb.w	sl, [r4, #62]	; 0x3e
 8006666:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006668:	f884 a03c 	strb.w	sl, [r4, #60]	; 0x3c
 800666c:	f043 0320 	orr.w	r3, r3, #32
 8006670:	6423      	str	r3, [r4, #64]	; 0x40
 8006672:	b006      	add	sp, #24
 8006674:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006678:	2200      	movs	r2, #0
 800667a:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 800667e:	2520      	movs	r5, #32
 8006680:	2001      	movs	r0, #1
 8006682:	6819      	ldr	r1, [r3, #0]
 8006684:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8006688:	6019      	str	r1, [r3, #0]
 800668a:	615e      	str	r6, [r3, #20]
 800668c:	6322      	str	r2, [r4, #48]	; 0x30
 800668e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
 8006692:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006696:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006698:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 800669c:	f043 0304 	orr.w	r3, r3, #4
 80066a0:	6423      	str	r3, [r4, #64]	; 0x40
 80066a2:	b006      	add	sp, #24
 80066a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80066a8:	2a01      	cmp	r2, #1
 80066aa:	f04f 0000 	mov.w	r0, #0
 80066ae:	6819      	ldr	r1, [r3, #0]
 80066b0:	f000 8151 	beq.w	8006956 <HAL_I2C_Master_Receive+0x486>
 80066b4:	2a02      	cmp	r2, #2
 80066b6:	f000 80fb 	beq.w	80068b0 <HAL_I2C_Master_Receive+0x3e0>
 80066ba:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 80066be:	6019      	str	r1, [r3, #0]
 80066c0:	9004      	str	r0, [sp, #16]
 80066c2:	6959      	ldr	r1, [r3, #20]
 80066c4:	9104      	str	r1, [sp, #16]
 80066c6:	6999      	ldr	r1, [r3, #24]
 80066c8:	9104      	str	r1, [sp, #16]
 80066ca:	9904      	ldr	r1, [sp, #16]
 80066cc:	2a03      	cmp	r2, #3
 80066ce:	d848      	bhi.n	8006762 <HAL_I2C_Master_Receive+0x292>
 80066d0:	2a01      	cmp	r2, #1
 80066d2:	f000 8118 	beq.w	8006906 <HAL_I2C_Master_Receive+0x436>
 80066d6:	2a02      	cmp	r2, #2
 80066d8:	f000 80c3 	beq.w	8006862 <HAL_I2C_Master_Receive+0x392>
 80066dc:	1c68      	adds	r0, r5, #1
 80066de:	f040 80f5 	bne.w	80068cc <HAL_I2C_Master_Receive+0x3fc>
 80066e2:	695a      	ldr	r2, [r3, #20]
 80066e4:	0751      	lsls	r1, r2, #29
 80066e6:	d5fc      	bpl.n	80066e2 <HAL_I2C_Master_Receive+0x212>
 80066e8:	681a      	ldr	r2, [r3, #0]
 80066ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80066ec:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80066f0:	601a      	str	r2, [r3, #0]
 80066f2:	691b      	ldr	r3, [r3, #16]
 80066f4:	700b      	strb	r3, [r1, #0]
 80066f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80066f8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80066fa:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80066fc:	3b01      	subs	r3, #1
 80066fe:	3101      	adds	r1, #1
 8006700:	3a01      	subs	r2, #1
 8006702:	b29b      	uxth	r3, r3
 8006704:	6261      	str	r1, [r4, #36]	; 0x24
 8006706:	8522      	strh	r2, [r4, #40]	; 0x28
 8006708:	8563      	strh	r3, [r4, #42]	; 0x2a
 800670a:	1c6b      	adds	r3, r5, #1
 800670c:	6822      	ldr	r2, [r4, #0]
 800670e:	f040 80ec 	bne.w	80068ea <HAL_I2C_Master_Receive+0x41a>
 8006712:	6953      	ldr	r3, [r2, #20]
 8006714:	075f      	lsls	r7, r3, #29
 8006716:	d5fc      	bpl.n	8006712 <HAL_I2C_Master_Receive+0x242>
 8006718:	6813      	ldr	r3, [r2, #0]
 800671a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800671c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006720:	6013      	str	r3, [r2, #0]
 8006722:	6913      	ldr	r3, [r2, #16]
 8006724:	700b      	strb	r3, [r1, #0]
 8006726:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006728:	6821      	ldr	r1, [r4, #0]
 800672a:	3b01      	subs	r3, #1
 800672c:	b29b      	uxth	r3, r3
 800672e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006730:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006732:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006734:	6909      	ldr	r1, [r1, #16]
 8006736:	1e53      	subs	r3, r2, #1
 8006738:	1c47      	adds	r7, r0, #1
 800673a:	8523      	strh	r3, [r4, #40]	; 0x28
 800673c:	6267      	str	r7, [r4, #36]	; 0x24
 800673e:	7041      	strb	r1, [r0, #1]
 8006740:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006742:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006744:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006746:	3a01      	subs	r2, #1
 8006748:	3b01      	subs	r3, #1
 800674a:	3101      	adds	r1, #1
 800674c:	b292      	uxth	r2, r2
 800674e:	b29b      	uxth	r3, r3
 8006750:	6261      	str	r1, [r4, #36]	; 0x24
 8006752:	8522      	strh	r2, [r4, #40]	; 0x28
 8006754:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006756:	2a00      	cmp	r2, #0
 8006758:	f43f af30 	beq.w	80065bc <HAL_I2C_Master_Receive+0xec>
 800675c:	2a03      	cmp	r2, #3
 800675e:	6823      	ldr	r3, [r4, #0]
 8006760:	d9b6      	bls.n	80066d0 <HAL_I2C_Master_Receive+0x200>
 8006762:	b955      	cbnz	r5, 800677a <HAL_I2C_Master_Receive+0x2aa>
 8006764:	e031      	b.n	80067ca <HAL_I2C_Master_Receive+0x2fa>
 8006766:	695a      	ldr	r2, [r3, #20]
 8006768:	06d1      	lsls	r1, r2, #27
 800676a:	f100 80df 	bmi.w	800692c <HAL_I2C_Master_Receive+0x45c>
 800676e:	f7ff f8eb 	bl	8005948 <HAL_GetTick>
 8006772:	1b80      	subs	r0, r0, r6
 8006774:	4285      	cmp	r5, r0
 8006776:	d331      	bcc.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006778:	6823      	ldr	r3, [r4, #0]
 800677a:	695a      	ldr	r2, [r3, #20]
 800677c:	0650      	lsls	r0, r2, #25
 800677e:	d5f2      	bpl.n	8006766 <HAL_I2C_Master_Receive+0x296>
 8006780:	691a      	ldr	r2, [r3, #16]
 8006782:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006784:	701a      	strb	r2, [r3, #0]
 8006786:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006788:	6820      	ldr	r0, [r4, #0]
 800678a:	3b01      	subs	r3, #1
 800678c:	b29b      	uxth	r3, r3
 800678e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006790:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006792:	6943      	ldr	r3, [r0, #20]
 8006794:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006796:	3a01      	subs	r2, #1
 8006798:	1c4f      	adds	r7, r1, #1
 800679a:	b292      	uxth	r2, r2
 800679c:	075b      	lsls	r3, r3, #29
 800679e:	6267      	str	r7, [r4, #36]	; 0x24
 80067a0:	8522      	strh	r2, [r4, #40]	; 0x28
 80067a2:	d5d8      	bpl.n	8006756 <HAL_I2C_Master_Receive+0x286>
 80067a4:	6903      	ldr	r3, [r0, #16]
 80067a6:	704b      	strb	r3, [r1, #1]
 80067a8:	e074      	b.n	8006894 <HAL_I2C_Master_Receive+0x3c4>
 80067aa:	695a      	ldr	r2, [r3, #20]
 80067ac:	0797      	lsls	r7, r2, #30
 80067ae:	f53f aef8 	bmi.w	80065a2 <HAL_I2C_Master_Receive+0xd2>
 80067b2:	695a      	ldr	r2, [r3, #20]
 80067b4:	0557      	lsls	r7, r2, #21
 80067b6:	f53f af5f 	bmi.w	8006678 <HAL_I2C_Master_Receive+0x1a8>
 80067ba:	f7ff f8c5 	bl	8005948 <HAL_GetTick>
 80067be:	1b83      	subs	r3, r0, r6
 80067c0:	429d      	cmp	r5, r3
 80067c2:	d30b      	bcc.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 80067c4:	b155      	cbz	r5, 80067dc <HAL_I2C_Master_Receive+0x30c>
 80067c6:	6823      	ldr	r3, [r4, #0]
 80067c8:	e6e2      	b.n	8006590 <HAL_I2C_Master_Receive+0xc0>
 80067ca:	695a      	ldr	r2, [r3, #20]
 80067cc:	0652      	lsls	r2, r2, #25
 80067ce:	d4d7      	bmi.n	8006780 <HAL_I2C_Master_Receive+0x2b0>
 80067d0:	695a      	ldr	r2, [r3, #20]
 80067d2:	06d1      	lsls	r1, r2, #27
 80067d4:	f100 80aa 	bmi.w	800692c <HAL_I2C_Master_Receive+0x45c>
 80067d8:	f7ff f8b6 	bl	8005948 <HAL_GetTick>
 80067dc:	2200      	movs	r2, #0
 80067de:	2320      	movs	r3, #32
 80067e0:	2001      	movs	r0, #1
 80067e2:	6322      	str	r2, [r4, #48]	; 0x30
 80067e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80067e8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 80067ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80067ee:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 80067f2:	f043 0320 	orr.w	r3, r3, #32
 80067f6:	6423      	str	r3, [r4, #64]	; 0x40
 80067f8:	b006      	add	sp, #24
 80067fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80067fe:	2200      	movs	r2, #0
 8006800:	2320      	movs	r3, #32
 8006802:	6322      	str	r2, [r4, #48]	; 0x30
 8006804:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006808:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 800680c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800680e:	6821      	ldr	r1, [r4, #0]
 8006810:	f043 0320 	orr.w	r3, r3, #32
 8006814:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006818:	6423      	str	r3, [r4, #64]	; 0x40
 800681a:	680b      	ldr	r3, [r1, #0]
 800681c:	05d8      	lsls	r0, r3, #23
 800681e:	d545      	bpl.n	80068ac <HAL_I2C_Master_Receive+0x3dc>
 8006820:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006824:	2001      	movs	r0, #1
 8006826:	6423      	str	r3, [r4, #64]	; 0x40
 8006828:	e661      	b.n	80064ee <HAL_I2C_Master_Receive+0x1e>
 800682a:	695a      	ldr	r2, [r3, #20]
 800682c:	0712      	lsls	r2, r2, #28
 800682e:	f53f aef2 	bmi.w	8006616 <HAL_I2C_Master_Receive+0x146>
 8006832:	695a      	ldr	r2, [r3, #20]
 8006834:	0551      	lsls	r1, r2, #21
 8006836:	f53f af1f 	bmi.w	8006678 <HAL_I2C_Master_Receive+0x1a8>
 800683a:	f7ff f885 	bl	8005948 <HAL_GetTick>
 800683e:	1b83      	subs	r3, r0, r6
 8006840:	429d      	cmp	r5, r3
 8006842:	d3cb      	bcc.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006844:	2d00      	cmp	r5, #0
 8006846:	d0c9      	beq.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006848:	6823      	ldr	r3, [r4, #0]
 800684a:	e6db      	b.n	8006604 <HAL_I2C_Master_Receive+0x134>
 800684c:	695a      	ldr	r2, [r3, #20]
 800684e:	0757      	lsls	r7, r2, #29
 8006850:	d40c      	bmi.n	800686c <HAL_I2C_Master_Receive+0x39c>
 8006852:	f7ff f879 	bl	8005948 <HAL_GetTick>
 8006856:	1b80      	subs	r0, r0, r6
 8006858:	4285      	cmp	r5, r0
 800685a:	d3bf      	bcc.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 800685c:	2d00      	cmp	r5, #0
 800685e:	d0bd      	beq.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006860:	6823      	ldr	r3, [r4, #0]
 8006862:	1c69      	adds	r1, r5, #1
 8006864:	d1f2      	bne.n	800684c <HAL_I2C_Master_Receive+0x37c>
 8006866:	695a      	ldr	r2, [r3, #20]
 8006868:	0752      	lsls	r2, r2, #29
 800686a:	d5fc      	bpl.n	8006866 <HAL_I2C_Master_Receive+0x396>
 800686c:	681a      	ldr	r2, [r3, #0]
 800686e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006872:	601a      	str	r2, [r3, #0]
 8006874:	691a      	ldr	r2, [r3, #16]
 8006876:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006878:	701a      	strb	r2, [r3, #0]
 800687a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800687c:	1c53      	adds	r3, r2, #1
 800687e:	6263      	str	r3, [r4, #36]	; 0x24
 8006880:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006882:	3b01      	subs	r3, #1
 8006884:	8523      	strh	r3, [r4, #40]	; 0x28
 8006886:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006888:	3b01      	subs	r3, #1
 800688a:	b29b      	uxth	r3, r3
 800688c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800688e:	6823      	ldr	r3, [r4, #0]
 8006890:	691b      	ldr	r3, [r3, #16]
 8006892:	7053      	strb	r3, [r2, #1]
 8006894:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006896:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006898:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800689a:	3a01      	subs	r2, #1
 800689c:	3b01      	subs	r3, #1
 800689e:	3101      	adds	r1, #1
 80068a0:	b292      	uxth	r2, r2
 80068a2:	b29b      	uxth	r3, r3
 80068a4:	6261      	str	r1, [r4, #36]	; 0x24
 80068a6:	8563      	strh	r3, [r4, #42]	; 0x2a
 80068a8:	8522      	strh	r2, [r4, #40]	; 0x28
 80068aa:	e754      	b.n	8006756 <HAL_I2C_Master_Receive+0x286>
 80068ac:	2001      	movs	r0, #1
 80068ae:	e61e      	b.n	80064ee <HAL_I2C_Master_Receive+0x1e>
 80068b0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80068b4:	6019      	str	r1, [r3, #0]
 80068b6:	6819      	ldr	r1, [r3, #0]
 80068b8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80068bc:	6019      	str	r1, [r3, #0]
 80068be:	9003      	str	r0, [sp, #12]
 80068c0:	6959      	ldr	r1, [r3, #20]
 80068c2:	9103      	str	r1, [sp, #12]
 80068c4:	6999      	ldr	r1, [r3, #24]
 80068c6:	9103      	str	r1, [sp, #12]
 80068c8:	9903      	ldr	r1, [sp, #12]
 80068ca:	e6ff      	b.n	80066cc <HAL_I2C_Master_Receive+0x1fc>
 80068cc:	695a      	ldr	r2, [r3, #20]
 80068ce:	0752      	lsls	r2, r2, #29
 80068d0:	f53f af0a 	bmi.w	80066e8 <HAL_I2C_Master_Receive+0x218>
 80068d4:	f7ff f838 	bl	8005948 <HAL_GetTick>
 80068d8:	1b80      	subs	r0, r0, r6
 80068da:	4285      	cmp	r5, r0
 80068dc:	f4ff af7e 	bcc.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 80068e0:	2d00      	cmp	r5, #0
 80068e2:	f43f af7b 	beq.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 80068e6:	6823      	ldr	r3, [r4, #0]
 80068e8:	e6f8      	b.n	80066dc <HAL_I2C_Master_Receive+0x20c>
 80068ea:	6953      	ldr	r3, [r2, #20]
 80068ec:	0758      	lsls	r0, r3, #29
 80068ee:	f53f af13 	bmi.w	8006718 <HAL_I2C_Master_Receive+0x248>
 80068f2:	f7ff f829 	bl	8005948 <HAL_GetTick>
 80068f6:	1b80      	subs	r0, r0, r6
 80068f8:	4285      	cmp	r5, r0
 80068fa:	f4ff af6f 	bcc.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 80068fe:	2d00      	cmp	r5, #0
 8006900:	f47f af03 	bne.w	800670a <HAL_I2C_Master_Receive+0x23a>
 8006904:	e76a      	b.n	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006906:	b955      	cbnz	r5, 800691e <HAL_I2C_Master_Receive+0x44e>
 8006908:	e020      	b.n	800694c <HAL_I2C_Master_Receive+0x47c>
 800690a:	695a      	ldr	r2, [r3, #20]
 800690c:	06d7      	lsls	r7, r2, #27
 800690e:	d40d      	bmi.n	800692c <HAL_I2C_Master_Receive+0x45c>
 8006910:	f7ff f81a 	bl	8005948 <HAL_GetTick>
 8006914:	1b80      	subs	r0, r0, r6
 8006916:	4285      	cmp	r5, r0
 8006918:	f4ff af60 	bcc.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 800691c:	6823      	ldr	r3, [r4, #0]
 800691e:	695a      	ldr	r2, [r3, #20]
 8006920:	0652      	lsls	r2, r2, #25
 8006922:	d5f2      	bpl.n	800690a <HAL_I2C_Master_Receive+0x43a>
 8006924:	691a      	ldr	r2, [r3, #16]
 8006926:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006928:	701a      	strb	r2, [r3, #0]
 800692a:	e7b3      	b.n	8006894 <HAL_I2C_Master_Receive+0x3c4>
 800692c:	2200      	movs	r2, #0
 800692e:	f06f 0510 	mvn.w	r5, #16
 8006932:	2120      	movs	r1, #32
 8006934:	615d      	str	r5, [r3, #20]
 8006936:	6322      	str	r2, [r4, #48]	; 0x30
 8006938:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 800693c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006940:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006942:	2001      	movs	r0, #1
 8006944:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006948:	6423      	str	r3, [r4, #64]	; 0x40
 800694a:	e5d0      	b.n	80064ee <HAL_I2C_Master_Receive+0x1e>
 800694c:	695a      	ldr	r2, [r3, #20]
 800694e:	0650      	lsls	r0, r2, #25
 8006950:	f57f af3e 	bpl.w	80067d0 <HAL_I2C_Master_Receive+0x300>
 8006954:	e7e6      	b.n	8006924 <HAL_I2C_Master_Receive+0x454>
 8006956:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800695a:	6019      	str	r1, [r3, #0]
 800695c:	9002      	str	r0, [sp, #8]
 800695e:	6959      	ldr	r1, [r3, #20]
 8006960:	9102      	str	r1, [sp, #8]
 8006962:	6999      	ldr	r1, [r3, #24]
 8006964:	9102      	str	r1, [sp, #8]
 8006966:	9902      	ldr	r1, [sp, #8]
 8006968:	6819      	ldr	r1, [r3, #0]
 800696a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800696e:	6019      	str	r1, [r3, #0]
 8006970:	e6ac      	b.n	80066cc <HAL_I2C_Master_Receive+0x1fc>
 8006972:	695a      	ldr	r2, [r3, #20]
 8006974:	0797      	lsls	r7, r2, #30
 8006976:	f53f ae59 	bmi.w	800662c <HAL_I2C_Master_Receive+0x15c>
 800697a:	695a      	ldr	r2, [r3, #20]
 800697c:	0557      	lsls	r7, r2, #21
 800697e:	f53f ae7b 	bmi.w	8006678 <HAL_I2C_Master_Receive+0x1a8>
 8006982:	f7fe ffe1 	bl	8005948 <HAL_GetTick>
 8006986:	1b83      	subs	r3, r0, r6
 8006988:	429d      	cmp	r5, r3
 800698a:	f4ff af27 	bcc.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 800698e:	2d00      	cmp	r5, #0
 8006990:	f43f af24 	beq.w	80067dc <HAL_I2C_Master_Receive+0x30c>
 8006994:	6823      	ldr	r3, [r4, #0]
 8006996:	e640      	b.n	800661a <HAL_I2C_Master_Receive+0x14a>
 8006998:	695a      	ldr	r2, [r3, #20]
 800699a:	07d2      	lsls	r2, r2, #31
 800699c:	f53f ae57 	bmi.w	800664e <HAL_I2C_Master_Receive+0x17e>
 80069a0:	f7fe ffd2 	bl	8005948 <HAL_GetTick>
 80069a4:	1b83      	subs	r3, r0, r6
 80069a6:	429d      	cmp	r5, r3
 80069a8:	f4ff af29 	bcc.w	80067fe <HAL_I2C_Master_Receive+0x32e>
 80069ac:	2d00      	cmp	r5, #0
 80069ae:	f43f af26 	beq.w	80067fe <HAL_I2C_Master_Receive+0x32e>
 80069b2:	6823      	ldr	r3, [r4, #0]
 80069b4:	e645      	b.n	8006642 <HAL_I2C_Master_Receive+0x172>
 80069b6:	bf00      	nop

080069b8 <HAL_PCD_Init>:
 80069b8:	2800      	cmp	r0, #0
 80069ba:	d05d      	beq.n	8006a78 <HAL_PCD_Init+0xc0>
 80069bc:	b570      	push	{r4, r5, r6, lr}
 80069be:	f890 32a9 	ldrb.w	r3, [r0, #681]	; 0x2a9
 80069c2:	4604      	mov	r4, r0
 80069c4:	b086      	sub	sp, #24
 80069c6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	d04f      	beq.n	8006a6e <HAL_PCD_Init+0xb6>
 80069ce:	2303      	movs	r3, #3
 80069d0:	6820      	ldr	r0, [r4, #0]
 80069d2:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 80069d6:	f002 fab7 	bl	8008f48 <USB_DisableGlobalInt>
 80069da:	6860      	ldr	r0, [r4, #4]
 80069dc:	b368      	cbz	r0, 8006a3a <HAL_PCD_Init+0x82>
 80069de:	2200      	movs	r2, #0
 80069e0:	f04f 0e01 	mov.w	lr, #1
 80069e4:	4611      	mov	r1, r2
 80069e6:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 80069ea:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80069ee:	f102 0c01 	add.w	ip, r2, #1
 80069f2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80069f6:	86da      	strh	r2, [r3, #54]	; 0x36
 80069f8:	fa5f f28c 	uxtb.w	r2, ip
 80069fc:	4282      	cmp	r2, r0
 80069fe:	e9c3 110e 	strd	r1, r1, [r3, #56]	; 0x38
 8006a02:	f883 e029 	strb.w	lr, [r3, #41]	; 0x29
 8006a06:	f883 102b 	strb.w	r1, [r3, #43]	; 0x2b
 8006a0a:	6419      	str	r1, [r3, #64]	; 0x40
 8006a0c:	d3eb      	bcc.n	80069e6 <HAL_PCD_Init+0x2e>
 8006a0e:	2200      	movs	r2, #0
 8006a10:	4611      	mov	r1, r2
 8006a12:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8006a16:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006a1a:	f102 0c01 	add.w	ip, r2, #1
 8006a1e:	f883 2168 	strb.w	r2, [r3, #360]	; 0x168
 8006a22:	fa5f f28c 	uxtb.w	r2, ip
 8006a26:	4282      	cmp	r2, r0
 8006a28:	e9c3 115e 	strd	r1, r1, [r3, #376]	; 0x178
 8006a2c:	f883 1169 	strb.w	r1, [r3, #361]	; 0x169
 8006a30:	f883 116b 	strb.w	r1, [r3, #363]	; 0x16b
 8006a34:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8006a38:	d3eb      	bcc.n	8006a12 <HAL_PCD_Init+0x5a>
 8006a3a:	46a4      	mov	ip, r4
 8006a3c:	46ee      	mov	lr, sp
 8006a3e:	f85c 6b10 	ldr.w	r6, [ip], #16
 8006a42:	1d25      	adds	r5, r4, #4
 8006a44:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8006a48:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8006a4c:	f8dc 3000 	ldr.w	r3, [ip]
 8006a50:	4630      	mov	r0, r6
 8006a52:	f8ce 3000 	str.w	r3, [lr]
 8006a56:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8006a5a:	f002 fa7f 	bl	8008f5c <USB_DevInit>
 8006a5e:	2000      	movs	r0, #0
 8006a60:	2301      	movs	r3, #1
 8006a62:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8006a66:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8006a6a:	b006      	add	sp, #24
 8006a6c:	bd70      	pop	{r4, r5, r6, pc}
 8006a6e:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 8006a72:	f003 fff1 	bl	800aa58 <HAL_PCD_MspInit>
 8006a76:	e7aa      	b.n	80069ce <HAL_PCD_Init+0x16>
 8006a78:	2001      	movs	r0, #1
 8006a7a:	4770      	bx	lr

08006a7c <HAL_PCD_Start>:
 8006a7c:	b538      	push	{r3, r4, r5, lr}
 8006a7e:	f890 32a8 	ldrb.w	r3, [r0, #680]	; 0x2a8
 8006a82:	2b01      	cmp	r3, #1
 8006a84:	d012      	beq.n	8006aac <HAL_PCD_Start+0x30>
 8006a86:	4604      	mov	r4, r0
 8006a88:	2501      	movs	r5, #1
 8006a8a:	6800      	ldr	r0, [r0, #0]
 8006a8c:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8006a90:	f002 fa50 	bl	8008f34 <USB_EnableGlobalInt>
 8006a94:	4629      	mov	r1, r5
 8006a96:	4620      	mov	r0, r4
 8006a98:	f003 ffd2 	bl	800aa40 <HAL_PCDEx_SetConnectionState>
 8006a9c:	6820      	ldr	r0, [r4, #0]
 8006a9e:	f003 f84d 	bl	8009b3c <USB_DevConnect>
 8006aa2:	2300      	movs	r3, #0
 8006aa4:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8006aa8:	4618      	mov	r0, r3
 8006aaa:	bd38      	pop	{r3, r4, r5, pc}
 8006aac:	2002      	movs	r0, #2
 8006aae:	bd38      	pop	{r3, r4, r5, pc}

08006ab0 <HAL_PCD_IRQHandler>:
 8006ab0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ab4:	4604      	mov	r4, r0
 8006ab6:	6800      	ldr	r0, [r0, #0]
 8006ab8:	f003 f842 	bl	8009b40 <USB_ReadInterrupts>
 8006abc:	0406      	lsls	r6, r0, #16
 8006abe:	d443      	bmi.n	8006b48 <HAL_PCD_IRQHandler+0x98>
 8006ac0:	6820      	ldr	r0, [r4, #0]
 8006ac2:	f003 f83d 	bl	8009b40 <USB_ReadInterrupts>
 8006ac6:	0545      	lsls	r5, r0, #21
 8006ac8:	f100 8180 	bmi.w	8006dcc <HAL_PCD_IRQHandler+0x31c>
 8006acc:	6820      	ldr	r0, [r4, #0]
 8006ace:	f003 f837 	bl	8009b40 <USB_ReadInterrupts>
 8006ad2:	f410 4f80 	tst.w	r0, #16384	; 0x4000
 8006ad6:	6820      	ldr	r0, [r4, #0]
 8006ad8:	d007      	beq.n	8006aea <HAL_PCD_IRQHandler+0x3a>
 8006ada:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006ade:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006ae2:	041b      	lsls	r3, r3, #16
 8006ae4:	0c1b      	lsrs	r3, r3, #16
 8006ae6:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006aea:	f003 f829 	bl	8009b40 <USB_ReadInterrupts>
 8006aee:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 8006af2:	6820      	ldr	r0, [r4, #0]
 8006af4:	d007      	beq.n	8006b06 <HAL_PCD_IRQHandler+0x56>
 8006af6:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006afa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006afe:	041b      	lsls	r3, r3, #16
 8006b00:	0c1b      	lsrs	r3, r3, #16
 8006b02:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006b06:	f003 f81b 	bl	8009b40 <USB_ReadInterrupts>
 8006b0a:	04c0      	lsls	r0, r0, #19
 8006b0c:	f100 81f6 	bmi.w	8006efc <HAL_PCD_IRQHandler+0x44c>
 8006b10:	6820      	ldr	r0, [r4, #0]
 8006b12:	f003 f815 	bl	8009b40 <USB_ReadInterrupts>
 8006b16:	0501      	lsls	r1, r0, #20
 8006b18:	f100 81d5 	bmi.w	8006ec6 <HAL_PCD_IRQHandler+0x416>
 8006b1c:	6820      	ldr	r0, [r4, #0]
 8006b1e:	f003 f80f 	bl	8009b40 <USB_ReadInterrupts>
 8006b22:	0582      	lsls	r2, r0, #22
 8006b24:	f100 81c2 	bmi.w	8006eac <HAL_PCD_IRQHandler+0x3fc>
 8006b28:	6820      	ldr	r0, [r4, #0]
 8006b2a:	f003 f809 	bl	8009b40 <USB_ReadInterrupts>
 8006b2e:	05c3      	lsls	r3, r0, #23
 8006b30:	d508      	bpl.n	8006b44 <HAL_PCD_IRQHandler+0x94>
 8006b32:	6822      	ldr	r2, [r4, #0]
 8006b34:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006b38:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006b3c:	041b      	lsls	r3, r3, #16
 8006b3e:	0c1b      	lsrs	r3, r3, #16
 8006b40:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006b44:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b48:	6822      	ldr	r2, [r4, #0]
 8006b4a:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006b4e:	4610      	mov	r0, r2
 8006b50:	041d      	lsls	r5, r3, #16
 8006b52:	d5b6      	bpl.n	8006ac2 <HAL_PCD_IRQHandler+0x12>
 8006b54:	f8df 934c 	ldr.w	r9, [pc, #844]	; 8006ea4 <HAL_PCD_IRQHandler+0x3f4>
 8006b58:	f8df a34c 	ldr.w	sl, [pc, #844]	; 8006ea8 <HAL_PCD_IRQHandler+0x3f8>
 8006b5c:	e011      	b.n	8006b82 <HAL_PCD_IRQHandler+0xd2>
 8006b5e:	f011 0110 	ands.w	r1, r1, #16
 8006b62:	f000 8151 	beq.w	8006e08 <HAL_PCD_IRQHandler+0x358>
 8006b66:	8801      	ldrh	r1, [r0, #0]
 8006b68:	f411 6500 	ands.w	r5, r1, #2048	; 0x800
 8006b6c:	b28b      	uxth	r3, r1
 8006b6e:	f040 8176 	bne.w	8006e5e <HAL_PCD_IRQHandler+0x3ae>
 8006b72:	0419      	lsls	r1, r3, #16
 8006b74:	f100 821b 	bmi.w	8006fae <HAL_PCD_IRQHandler+0x4fe>
 8006b78:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006b7c:	041e      	lsls	r6, r3, #16
 8006b7e:	f140 811f 	bpl.w	8006dc0 <HAL_PCD_IRQHandler+0x310>
 8006b82:	f8b0 5044 	ldrh.w	r5, [r0, #68]	; 0x44
 8006b86:	b2a9      	uxth	r1, r5
 8006b88:	f015 050f 	ands.w	r5, r5, #15
 8006b8c:	d0e7      	beq.n	8006b5e <HAL_PCD_IRQHandler+0xae>
 8006b8e:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 8006b92:	00ae      	lsls	r6, r5, #2
 8006b94:	041f      	lsls	r7, r3, #16
 8006b96:	fa1f f883 	uxth.w	r8, r3
 8006b9a:	f100 80a0 	bmi.w	8006cde <HAL_PCD_IRQHandler+0x22e>
 8006b9e:	f018 0f80 	tst.w	r8, #128	; 0x80
 8006ba2:	d0e9      	beq.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 8006ba4:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 8006ba8:	1977      	adds	r7, r6, r5
 8006baa:	b29b      	uxth	r3, r3
 8006bac:	ea03 0309 	and.w	r3, r3, r9
 8006bb0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006bb4:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 8006bb8:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 8006bbc:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8006bc0:	2b03      	cmp	r3, #3
 8006bc2:	f000 80d0 	beq.w	8006d66 <HAL_PCD_IRQHandler+0x2b6>
 8006bc6:	2b00      	cmp	r3, #0
 8006bc8:	f000 80cd 	beq.w	8006d66 <HAL_PCD_IRQHandler+0x2b6>
 8006bcc:	2b02      	cmp	r3, #2
 8006bce:	d103      	bne.n	8006bd8 <HAL_PCD_IRQHandler+0x128>
 8006bd0:	f418 7f80 	tst.w	r8, #256	; 0x100
 8006bd4:	f000 80c7 	beq.w	8006d66 <HAL_PCD_IRQHandler+0x2b6>
 8006bd8:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006bdc:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006be0:	b29b      	uxth	r3, r3
 8006be2:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8006be6:	f018 0c40 	ands.w	ip, r8, #64	; 0x40
 8006bea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006bee:	f000 8255 	beq.w	800709c <HAL_PCD_IRQHandler+0x5ec>
 8006bf2:	eb06 0c05 	add.w	ip, r6, r5
 8006bf6:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 8006bfa:	eb04 0ccc 	add.w	ip, r4, ip, lsl #3
 8006bfe:	f8dc e040 	ldr.w	lr, [ip, #64]	; 0x40
 8006c02:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006c06:	459e      	cmp	lr, r3
 8006c08:	f240 834b 	bls.w	80072a2 <HAL_PCD_IRQHandler+0x7f2>
 8006c0c:	ebae 0e03 	sub.w	lr, lr, r3
 8006c10:	f8cc e040 	str.w	lr, [ip, #64]	; 0x40
 8006c14:	f1be 0f00 	cmp.w	lr, #0
 8006c18:	f000 8346 	beq.w	80072a8 <HAL_PCD_IRQHandler+0x7f8>
 8006c1c:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006c20:	d00f      	beq.n	8006c42 <HAL_PCD_IRQHandler+0x192>
 8006c22:	f830 c021 	ldrh.w	ip, [r0, r1, lsl #2]
 8006c26:	f42c 4ce0 	bic.w	ip, ip, #28672	; 0x7000
 8006c2a:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8006c2e:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8006c32:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8006c36:	f44c 4c40 	orr.w	ip, ip, #49152	; 0xc000
 8006c3a:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 8006c3e:	f820 c021 	strh.w	ip, [r0, r1, lsl #2]
 8006c42:	eb06 0e05 	add.w	lr, r6, r5
 8006c46:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
 8006c4a:	f89e c04c 	ldrb.w	ip, [lr, #76]	; 0x4c
 8006c4e:	f1bc 0f01 	cmp.w	ip, #1
 8006c52:	f040 8316 	bne.w	8007282 <HAL_PCD_IRQHandler+0x7d2>
 8006c56:	f8de 203c 	ldr.w	r2, [lr, #60]	; 0x3c
 8006c5a:	f8de 8038 	ldr.w	r8, [lr, #56]	; 0x38
 8006c5e:	eb02 0c03 	add.w	ip, r2, r3
 8006c62:	f8de 2044 	ldr.w	r2, [lr, #68]	; 0x44
 8006c66:	f8ce c03c 	str.w	ip, [lr, #60]	; 0x3c
 8006c6a:	441a      	add	r2, r3
 8006c6c:	f8ce 2044 	str.w	r2, [lr, #68]	; 0x44
 8006c70:	f8de 2048 	ldr.w	r2, [lr, #72]	; 0x48
 8006c74:	4542      	cmp	r2, r8
 8006c76:	f0c0 83e4 	bcc.w	8007442 <HAL_PCD_IRQHandler+0x992>
 8006c7a:	eba2 0208 	sub.w	r2, r2, r8
 8006c7e:	f8ce 2048 	str.w	r2, [lr, #72]	; 0x48
 8006c82:	fa1f f388 	uxth.w	r3, r8
 8006c86:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 8006c8a:	f1be 0f00 	cmp.w	lr, #0
 8006c8e:	f040 83cb 	bne.w	8007428 <HAL_PCD_IRQHandler+0x978>
 8006c92:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006c96:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8006c9a:	f201 4e04 	addw	lr, r1, #1028	; 0x404
 8006c9e:	b292      	uxth	r2, r2
 8006ca0:	eb0e 0102 	add.w	r1, lr, r2
 8006ca4:	f1b8 0f00 	cmp.w	r8, #0
 8006ca8:	f040 83f8 	bne.w	800749c <HAL_PCD_IRQHandler+0x9ec>
 8006cac:	f83e 1002 	ldrh.w	r1, [lr, r2]
 8006cb0:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8006cb4:	0409      	lsls	r1, r1, #16
 8006cb6:	0c09      	lsrs	r1, r1, #16
 8006cb8:	f82e 1002 	strh.w	r1, [lr, r2]
 8006cbc:	f83e 1002 	ldrh.w	r1, [lr, r2]
 8006cc0:	b289      	uxth	r1, r1
 8006cc2:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006cc6:	f82e 1002 	strh.w	r1, [lr, r2]
 8006cca:	1972      	adds	r2, r6, r5
 8006ccc:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8006cd0:	8e12      	ldrh	r2, [r2, #48]	; 0x30
 8006cd2:	4661      	mov	r1, ip
 8006cd4:	f002 ff38 	bl	8009b48 <USB_WritePMA>
 8006cd8:	6820      	ldr	r0, [r4, #0]
 8006cda:	4602      	mov	r2, r0
 8006cdc:	e2d1      	b.n	8007282 <HAL_PCD_IRQHandler+0x7d2>
 8006cde:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006ce2:	f830 2025 	ldrh.w	r2, [r0, r5, lsl #2]
 8006ce6:	1971      	adds	r1, r6, r5
 8006ce8:	4013      	ands	r3, r2
 8006cea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006cee:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 8006cf2:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8006cf6:	f891 3174 	ldrb.w	r3, [r1, #372]	; 0x174
 8006cfa:	2b00      	cmp	r3, #0
 8006cfc:	f040 811c 	bne.w	8006f38 <HAL_PCD_IRQHandler+0x488>
 8006d00:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006d04:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006d08:	b29b      	uxth	r3, r3
 8006d0a:	3306      	adds	r3, #6
 8006d0c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006d10:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006d14:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006d18:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006d1c:	461f      	mov	r7, r3
 8006d1e:	2b00      	cmp	r3, #0
 8006d20:	f040 81ac 	bne.w	800707c <HAL_PCD_IRQHandler+0x5cc>
 8006d24:	1971      	adds	r1, r6, r5
 8006d26:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8006d2a:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8006d2e:	00c9      	lsls	r1, r1, #3
 8006d30:	443a      	add	r2, r7
 8006d32:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8006d36:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 8006d3a:	443a      	add	r2, r7
 8006d3c:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 8006d40:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 8006d44:	b122      	cbz	r2, 8006d50 <HAL_PCD_IRQHandler+0x2a0>
 8006d46:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8006d4a:	42bb      	cmp	r3, r7
 8006d4c:	f240 819d 	bls.w	800708a <HAL_PCD_IRQHandler+0x5da>
 8006d50:	1973      	adds	r3, r6, r5
 8006d52:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006d56:	4620      	mov	r0, r4
 8006d58:	f893 1168 	ldrb.w	r1, [r3, #360]	; 0x168
 8006d5c:	f003 fea4 	bl	800aaa8 <HAL_PCD_DataOutStageCallback>
 8006d60:	6820      	ldr	r0, [r4, #0]
 8006d62:	4602      	mov	r2, r0
 8006d64:	e71b      	b.n	8006b9e <HAL_PCD_IRQHandler+0xee>
 8006d66:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006d6a:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006d6e:	b29b      	uxth	r3, r3
 8006d70:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8006d74:	442e      	add	r6, r5
 8006d76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006d7a:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 8006d7e:	eb04 06c6 	add.w	r6, r4, r6, lsl #3
 8006d82:	6c32      	ldr	r2, [r6, #64]	; 0x40
 8006d84:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006d88:	429a      	cmp	r2, r3
 8006d8a:	f240 8108 	bls.w	8006f9e <HAL_PCD_IRQHandler+0x4ee>
 8006d8e:	1ad2      	subs	r2, r2, r3
 8006d90:	6432      	str	r2, [r6, #64]	; 0x40
 8006d92:	2a00      	cmp	r2, #0
 8006d94:	f000 8105 	beq.w	8006fa2 <HAL_PCD_IRQHandler+0x4f2>
 8006d98:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8006d9a:	3501      	adds	r5, #1
 8006d9c:	441a      	add	r2, r3
 8006d9e:	63f2      	str	r2, [r6, #60]	; 0x3c
 8006da0:	6c72      	ldr	r2, [r6, #68]	; 0x44
 8006da2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8006da6:	4413      	add	r3, r2
 8006da8:	6473      	str	r3, [r6, #68]	; 0x44
 8006daa:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8006dae:	f002 fb3d 	bl	800942c <USB_EPStartXfer>
 8006db2:	6820      	ldr	r0, [r4, #0]
 8006db4:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006db8:	4602      	mov	r2, r0
 8006dba:	041e      	lsls	r6, r3, #16
 8006dbc:	f53f aee1 	bmi.w	8006b82 <HAL_PCD_IRQHandler+0xd2>
 8006dc0:	4610      	mov	r0, r2
 8006dc2:	f002 febd 	bl	8009b40 <USB_ReadInterrupts>
 8006dc6:	0545      	lsls	r5, r0, #21
 8006dc8:	f57f ae80 	bpl.w	8006acc <HAL_PCD_IRQHandler+0x1c>
 8006dcc:	6822      	ldr	r2, [r4, #0]
 8006dce:	4620      	mov	r0, r4
 8006dd0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006dd4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006dd8:	041b      	lsls	r3, r3, #16
 8006dda:	0c1b      	lsrs	r3, r3, #16
 8006ddc:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006de0:	f003 fe7a 	bl	800aad8 <HAL_PCD_ResetCallback>
 8006de4:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8006de8:	2b01      	cmp	r3, #1
 8006dea:	f43f ae6f 	beq.w	8006acc <HAL_PCD_IRQHandler+0x1c>
 8006dee:	2500      	movs	r5, #0
 8006df0:	2301      	movs	r3, #1
 8006df2:	4629      	mov	r1, r5
 8006df4:	6820      	ldr	r0, [r4, #0]
 8006df6:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8006dfa:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006dfe:	f002 fe97 	bl	8009b30 <USB_SetDevAddress>
 8006e02:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8006e06:	e661      	b.n	8006acc <HAL_PCD_IRQHandler+0x1c>
 8006e08:	8803      	ldrh	r3, [r0, #0]
 8006e0a:	b29b      	uxth	r3, r3
 8006e0c:	ea03 0309 	and.w	r3, r3, r9
 8006e10:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006e14:	8003      	strh	r3, [r0, #0]
 8006e16:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006e1a:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 8006e1e:	b29b      	uxth	r3, r3
 8006e20:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006e24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8006e28:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 8006e2c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006e2e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006e32:	6463      	str	r3, [r4, #68]	; 0x44
 8006e34:	4413      	add	r3, r2
 8006e36:	63e3      	str	r3, [r4, #60]	; 0x3c
 8006e38:	4620      	mov	r0, r4
 8006e3a:	f003 fe3f 	bl	800aabc <HAL_PCD_DataInStageCallback>
 8006e3e:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8006e42:	b363      	cbz	r3, 8006e9e <HAL_PCD_IRQHandler+0x3ee>
 8006e44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006e46:	bb53      	cbnz	r3, 8006e9e <HAL_PCD_IRQHandler+0x3ee>
 8006e48:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8006e4c:	6820      	ldr	r0, [r4, #0]
 8006e4e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006e52:	f8a0 204c 	strh.w	r2, [r0, #76]	; 0x4c
 8006e56:	4602      	mov	r2, r0
 8006e58:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8006e5c:	e68c      	b.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 8006e5e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006e62:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8006e66:	b29b      	uxth	r3, r3
 8006e68:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006e6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006e70:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8006e74:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8006e78:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006e7c:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8006e80:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 8006e84:	f002 fe70 	bl	8009b68 <USB_ReadPMA>
 8006e88:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006e8c:	6822      	ldr	r2, [r4, #0]
 8006e8e:	4620      	mov	r0, r4
 8006e90:	8811      	ldrh	r1, [r2, #0]
 8006e92:	400b      	ands	r3, r1
 8006e94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006e98:	8013      	strh	r3, [r2, #0]
 8006e9a:	f003 fdfd 	bl	800aa98 <HAL_PCD_SetupStageCallback>
 8006e9e:	6820      	ldr	r0, [r4, #0]
 8006ea0:	4602      	mov	r2, r0
 8006ea2:	e669      	b.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 8006ea4:	ffff8f0f 	.word	0xffff8f0f
 8006ea8:	ffff8fbf 	.word	0xffff8fbf
 8006eac:	6822      	ldr	r2, [r4, #0]
 8006eae:	4620      	mov	r0, r4
 8006eb0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006eb4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006eb8:	041b      	lsls	r3, r3, #16
 8006eba:	0c1b      	lsrs	r3, r3, #16
 8006ebc:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006ec0:	f003 fe06 	bl	800aad0 <HAL_PCD_SOFCallback>
 8006ec4:	e630      	b.n	8006b28 <HAL_PCD_IRQHandler+0x78>
 8006ec6:	6822      	ldr	r2, [r4, #0]
 8006ec8:	4620      	mov	r0, r4
 8006eca:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006ece:	b29b      	uxth	r3, r3
 8006ed0:	f043 0308 	orr.w	r3, r3, #8
 8006ed4:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006ed8:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006edc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006ee0:	041b      	lsls	r3, r3, #16
 8006ee2:	0c1b      	lsrs	r3, r3, #16
 8006ee4:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006ee8:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006eec:	b29b      	uxth	r3, r3
 8006eee:	f043 0304 	orr.w	r3, r3, #4
 8006ef2:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006ef6:	f003 fe01 	bl	800aafc <HAL_PCD_SuspendCallback>
 8006efa:	e60f      	b.n	8006b1c <HAL_PCD_IRQHandler+0x6c>
 8006efc:	6822      	ldr	r2, [r4, #0]
 8006efe:	4620      	mov	r0, r4
 8006f00:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006f04:	f023 0304 	bic.w	r3, r3, #4
 8006f08:	041b      	lsls	r3, r3, #16
 8006f0a:	0c1b      	lsrs	r3, r3, #16
 8006f0c:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006f10:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006f14:	f023 0308 	bic.w	r3, r3, #8
 8006f18:	041b      	lsls	r3, r3, #16
 8006f1a:	0c1b      	lsrs	r3, r3, #16
 8006f1c:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006f20:	f003 fdfc 	bl	800ab1c <HAL_PCD_ResumeCallback>
 8006f24:	6820      	ldr	r0, [r4, #0]
 8006f26:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006f2a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006f2e:	041b      	lsls	r3, r3, #16
 8006f30:	0c1b      	lsrs	r3, r3, #16
 8006f32:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006f36:	e5ec      	b.n	8006b12 <HAL_PCD_IRQHandler+0x62>
 8006f38:	f891 316b 	ldrb.w	r3, [r1, #363]	; 0x16b
 8006f3c:	2b02      	cmp	r3, #2
 8006f3e:	f000 8120 	beq.w	8007182 <HAL_PCD_IRQHandler+0x6d2>
 8006f42:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006f46:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006f4a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006f4e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006f52:	041b      	lsls	r3, r3, #16
 8006f54:	0c1b      	lsrs	r3, r3, #16
 8006f56:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006f5a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8006f5e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8006f62:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006f66:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006f6a:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8006f6e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006f72:	b29b      	uxth	r3, r3
 8006f74:	d06e      	beq.n	8007054 <HAL_PCD_IRQHandler+0x5a4>
 8006f76:	3302      	adds	r3, #2
 8006f78:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006f7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006f80:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006f84:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006f88:	461f      	mov	r7, r3
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	f43f aeca 	beq.w	8006d24 <HAL_PCD_IRQHandler+0x274>
 8006f90:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8006f94:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006f98:	f002 fde6 	bl	8009b68 <USB_ReadPMA>
 8006f9c:	e6c2      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 8006f9e:	2300      	movs	r3, #0
 8006fa0:	6433      	str	r3, [r6, #64]	; 0x40
 8006fa2:	4620      	mov	r0, r4
 8006fa4:	f003 fd8a 	bl	800aabc <HAL_PCD_DataInStageCallback>
 8006fa8:	6820      	ldr	r0, [r4, #0]
 8006faa:	4602      	mov	r2, r0
 8006fac:	e5e4      	b.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 8006fae:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006fb2:	8802      	ldrh	r2, [r0, #0]
 8006fb4:	4013      	ands	r3, r2
 8006fb6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006fba:	8003      	strh	r3, [r0, #0]
 8006fbc:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006fc0:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8006fc4:	b29b      	uxth	r3, r3
 8006fc6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006fca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006fce:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8006fd2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006fd6:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8006fda:	b193      	cbz	r3, 8007002 <HAL_PCD_IRQHandler+0x552>
 8006fdc:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
 8006fe0:	b179      	cbz	r1, 8007002 <HAL_PCD_IRQHandler+0x552>
 8006fe2:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8006fe6:	f002 fdbf 	bl	8009b68 <USB_ReadPMA>
 8006fea:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8006fee:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
 8006ff2:	4620      	mov	r0, r4
 8006ff4:	4413      	add	r3, r2
 8006ff6:	4629      	mov	r1, r5
 8006ff8:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
 8006ffc:	f003 fd54 	bl	800aaa8 <HAL_PCD_DataOutStageCallback>
 8007000:	6820      	ldr	r0, [r4, #0]
 8007002:	8803      	ldrh	r3, [r0, #0]
 8007004:	4602      	mov	r2, r0
 8007006:	051b      	lsls	r3, r3, #20
 8007008:	f53f adb6 	bmi.w	8006b78 <HAL_PCD_IRQHandler+0xc8>
 800700c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007010:	f8d4 1178 	ldr.w	r1, [r4, #376]	; 0x178
 8007014:	b29b      	uxth	r3, r3
 8007016:	f200 450c 	addw	r5, r0, #1036	; 0x40c
 800701a:	2900      	cmp	r1, #0
 800701c:	f040 80a6 	bne.w	800716c <HAL_PCD_IRQHandler+0x6bc>
 8007020:	5ae9      	ldrh	r1, [r5, r3]
 8007022:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8007026:	0409      	lsls	r1, r1, #16
 8007028:	0c09      	lsrs	r1, r1, #16
 800702a:	52e9      	strh	r1, [r5, r3]
 800702c:	5ae9      	ldrh	r1, [r5, r3]
 800702e:	b289      	uxth	r1, r1
 8007030:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007034:	52e9      	strh	r1, [r5, r3]
 8007036:	8803      	ldrh	r3, [r0, #0]
 8007038:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800703c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007040:	041b      	lsls	r3, r3, #16
 8007042:	0c1b      	lsrs	r3, r3, #16
 8007044:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8007048:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800704c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007050:	8003      	strh	r3, [r0, #0]
 8007052:	e591      	b.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 8007054:	3306      	adds	r3, #6
 8007056:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800705a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800705e:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8007062:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007066:	461f      	mov	r7, r3
 8007068:	2b00      	cmp	r3, #0
 800706a:	f43f ae5b 	beq.w	8006d24 <HAL_PCD_IRQHandler+0x274>
 800706e:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8007072:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8007076:	f002 fd77 	bl	8009b68 <USB_ReadPMA>
 800707a:	e653      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 800707c:	f8b1 216e 	ldrh.w	r2, [r1, #366]	; 0x16e
 8007080:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8007084:	f002 fd70 	bl	8009b68 <USB_ReadPMA>
 8007088:	e64c      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 800708a:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 800708e:	6820      	ldr	r0, [r4, #0]
 8007090:	4421      	add	r1, r4
 8007092:	f002 f9cb 	bl	800942c <USB_EPStartXfer>
 8007096:	6820      	ldr	r0, [r4, #0]
 8007098:	4602      	mov	r2, r0
 800709a:	e580      	b.n	8006b9e <HAL_PCD_IRQHandler+0xee>
 800709c:	f8b3 e40c 	ldrh.w	lr, [r3, #1036]	; 0x40c
 80070a0:	1973      	adds	r3, r6, r5
 80070a2:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80070a6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 80070aa:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 80070ae:	45f3      	cmp	fp, lr
 80070b0:	f0c0 80a5 	bcc.w	80071fe <HAL_PCD_IRQHandler+0x74e>
 80070b4:	ebab 0c0e 	sub.w	ip, fp, lr
 80070b8:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 80070bc:	f1bc 0f00 	cmp.w	ip, #0
 80070c0:	f000 809f 	beq.w	8007202 <HAL_PCD_IRQHandler+0x752>
 80070c4:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 80070c8:	d10d      	bne.n	80070e6 <HAL_PCD_IRQHandler+0x636>
 80070ca:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80070ce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80070d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80070d6:	041b      	lsls	r3, r3, #16
 80070d8:	0c1b      	lsrs	r3, r3, #16
 80070da:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80070de:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80070e2:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 80070e6:	1973      	adds	r3, r6, r5
 80070e8:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80070ec:	f893 c04c 	ldrb.w	ip, [r3, #76]	; 0x4c
 80070f0:	f1bc 0f01 	cmp.w	ip, #1
 80070f4:	f040 80c5 	bne.w	8007282 <HAL_PCD_IRQHandler+0x7d2>
 80070f8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80070fa:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
 80070fe:	eb02 0c0e 	add.w	ip, r2, lr
 8007102:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007104:	f8c3 c03c 	str.w	ip, [r3, #60]	; 0x3c
 8007108:	4472      	add	r2, lr
 800710a:	645a      	str	r2, [r3, #68]	; 0x44
 800710c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800710e:	4542      	cmp	r2, r8
 8007110:	f0c0 81ab 	bcc.w	800746a <HAL_PCD_IRQHandler+0x9ba>
 8007114:	eba2 0208 	sub.w	r2, r2, r8
 8007118:	649a      	str	r2, [r3, #72]	; 0x48
 800711a:	fa1f fe88 	uxth.w	lr, r8
 800711e:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8007122:	2b00      	cmp	r3, #0
 8007124:	f040 8194 	bne.w	8007450 <HAL_PCD_IRQHandler+0x9a0>
 8007128:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800712c:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007130:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8007134:	b292      	uxth	r2, r2
 8007136:	188b      	adds	r3, r1, r2
 8007138:	f1b8 0f00 	cmp.w	r8, #0
 800713c:	f040 81d0 	bne.w	80074e0 <HAL_PCD_IRQHandler+0xa30>
 8007140:	5a8b      	ldrh	r3, [r1, r2]
 8007142:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007146:	041b      	lsls	r3, r3, #16
 8007148:	0c1b      	lsrs	r3, r3, #16
 800714a:	528b      	strh	r3, [r1, r2]
 800714c:	5a8b      	ldrh	r3, [r1, r2]
 800714e:	b29b      	uxth	r3, r3
 8007150:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007154:	528b      	strh	r3, [r1, r2]
 8007156:	1972      	adds	r2, r6, r5
 8007158:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800715c:	4673      	mov	r3, lr
 800715e:	4661      	mov	r1, ip
 8007160:	8e52      	ldrh	r2, [r2, #50]	; 0x32
 8007162:	f002 fcf1 	bl	8009b48 <USB_WritePMA>
 8007166:	6820      	ldr	r0, [r4, #0]
 8007168:	4602      	mov	r2, r0
 800716a:	e08a      	b.n	8007282 <HAL_PCD_IRQHandler+0x7d2>
 800716c:	293e      	cmp	r1, #62	; 0x3e
 800716e:	f200 80cb 	bhi.w	8007308 <HAL_PCD_IRQHandler+0x858>
 8007172:	084e      	lsrs	r6, r1, #1
 8007174:	07cf      	lsls	r7, r1, #31
 8007176:	bf48      	it	mi
 8007178:	3601      	addmi	r6, #1
 800717a:	02b1      	lsls	r1, r6, #10
 800717c:	b289      	uxth	r1, r1
 800717e:	52e9      	strh	r1, [r5, r3]
 8007180:	e759      	b.n	8007036 <HAL_PCD_IRQHandler+0x586>
 8007182:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007186:	f418 4c80 	ands.w	ip, r8, #16384	; 0x4000
 800718a:	b29b      	uxth	r3, r3
 800718c:	f000 80c7 	beq.w	800731e <HAL_PCD_IRQHandler+0x86e>
 8007190:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8007194:	3302      	adds	r3, #2
 8007196:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800719a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800719e:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 80071a2:	f8d1 c180 	ldr.w	ip, [r1, #384]	; 0x180
 80071a6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80071aa:	459c      	cmp	ip, r3
 80071ac:	461f      	mov	r7, r3
 80071ae:	f0c0 8112 	bcc.w	80073d6 <HAL_PCD_IRQHandler+0x926>
 80071b2:	ebac 0c03 	sub.w	ip, ip, r3
 80071b6:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 80071ba:	f1bc 0f00 	cmp.w	ip, #0
 80071be:	f000 810e 	beq.w	80073de <HAL_PCD_IRQHandler+0x92e>
 80071c2:	f018 0f40 	tst.w	r8, #64	; 0x40
 80071c6:	d00d      	beq.n	80071e4 <HAL_PCD_IRQHandler+0x734>
 80071c8:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 80071cc:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80071d0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80071d4:	0409      	lsls	r1, r1, #16
 80071d6:	0c09      	lsrs	r1, r1, #16
 80071d8:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80071dc:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 80071e0:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 80071e4:	2b00      	cmp	r3, #0
 80071e6:	f000 80c3 	beq.w	8007370 <HAL_PCD_IRQHandler+0x8c0>
 80071ea:	1971      	adds	r1, r6, r5
 80071ec:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80071f0:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 80071f4:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 80071f8:	f002 fcb6 	bl	8009b68 <USB_ReadPMA>
 80071fc:	e592      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 80071fe:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8007202:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8007206:	2b00      	cmp	r3, #0
 8007208:	f040 80be 	bne.w	8007388 <HAL_PCD_IRQHandler+0x8d8>
 800720c:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8007210:	010b      	lsls	r3, r1, #4
 8007212:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8007216:	4406      	add	r6, r0
 8007218:	b2ad      	uxth	r5, r5
 800721a:	5b72      	ldrh	r2, [r6, r5]
 800721c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8007220:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007224:	0412      	lsls	r2, r2, #16
 8007226:	0c12      	lsrs	r2, r2, #16
 8007228:	5372      	strh	r2, [r6, r5]
 800722a:	5b72      	ldrh	r2, [r6, r5]
 800722c:	4403      	add	r3, r0
 800722e:	b292      	uxth	r2, r2
 8007230:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007234:	5372      	strh	r2, [r6, r5]
 8007236:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 800723a:	b280      	uxth	r0, r0
 800723c:	5a1a      	ldrh	r2, [r3, r0]
 800723e:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007242:	0412      	lsls	r2, r2, #16
 8007244:	0c12      	lsrs	r2, r2, #16
 8007246:	521a      	strh	r2, [r3, r0]
 8007248:	5a1a      	ldrh	r2, [r3, r0]
 800724a:	b292      	uxth	r2, r2
 800724c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007250:	521a      	strh	r2, [r3, r0]
 8007252:	4620      	mov	r0, r4
 8007254:	f003 fc32 	bl	800aabc <HAL_PCD_DataInStageCallback>
 8007258:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 800725c:	6820      	ldr	r0, [r4, #0]
 800725e:	d183      	bne.n	8007168 <HAL_PCD_IRQHandler+0x6b8>
 8007260:	4602      	mov	r2, r0
 8007262:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8007266:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 800726a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800726e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007272:	041b      	lsls	r3, r3, #16
 8007274:	0c1b      	lsrs	r3, r3, #16
 8007276:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800727a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800727e:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8007282:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8007286:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 800728a:	b29b      	uxth	r3, r3
 800728c:	ea03 030a 	and.w	r3, r3, sl
 8007290:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8007294:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007298:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800729c:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 80072a0:	e46a      	b.n	8006b78 <HAL_PCD_IRQHandler+0xc8>
 80072a2:	2300      	movs	r3, #0
 80072a4:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 80072a8:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d17f      	bne.n	80073b0 <HAL_PCD_IRQHandler+0x900>
 80072b0:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 80072b4:	010b      	lsls	r3, r1, #4
 80072b6:	f203 4604 	addw	r6, r3, #1028	; 0x404
 80072ba:	4406      	add	r6, r0
 80072bc:	b2ad      	uxth	r5, r5
 80072be:	5b72      	ldrh	r2, [r6, r5]
 80072c0:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80072c4:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 80072c8:	0412      	lsls	r2, r2, #16
 80072ca:	0c12      	lsrs	r2, r2, #16
 80072cc:	5372      	strh	r2, [r6, r5]
 80072ce:	5b72      	ldrh	r2, [r6, r5]
 80072d0:	4403      	add	r3, r0
 80072d2:	b292      	uxth	r2, r2
 80072d4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80072d8:	5372      	strh	r2, [r6, r5]
 80072da:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 80072de:	b280      	uxth	r0, r0
 80072e0:	5a1a      	ldrh	r2, [r3, r0]
 80072e2:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 80072e6:	0412      	lsls	r2, r2, #16
 80072e8:	0c12      	lsrs	r2, r2, #16
 80072ea:	521a      	strh	r2, [r3, r0]
 80072ec:	5a1a      	ldrh	r2, [r3, r0]
 80072ee:	b292      	uxth	r2, r2
 80072f0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80072f4:	521a      	strh	r2, [r3, r0]
 80072f6:	4620      	mov	r0, r4
 80072f8:	f003 fbe0 	bl	800aabc <HAL_PCD_DataInStageCallback>
 80072fc:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8007300:	6820      	ldr	r0, [r4, #0]
 8007302:	d1ad      	bne.n	8007260 <HAL_PCD_IRQHandler+0x7b0>
 8007304:	4602      	mov	r2, r0
 8007306:	e7bc      	b.n	8007282 <HAL_PCD_IRQHandler+0x7d2>
 8007308:	094e      	lsrs	r6, r1, #5
 800730a:	06c9      	lsls	r1, r1, #27
 800730c:	4989      	ldr	r1, [pc, #548]	; (8007534 <HAL_PCD_IRQHandler+0xa84>)
 800730e:	bf08      	it	eq
 8007310:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007314:	ea41 2186 	orr.w	r1, r1, r6, lsl #10
 8007318:	b289      	uxth	r1, r1
 800731a:	52e9      	strh	r1, [r5, r3]
 800731c:	e68b      	b.n	8007036 <HAL_PCD_IRQHandler+0x586>
 800731e:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8007322:	3306      	adds	r3, #6
 8007324:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007328:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800732c:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8007330:	f8d1 e180 	ldr.w	lr, [r1, #384]	; 0x180
 8007334:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007338:	459e      	cmp	lr, r3
 800733a:	461f      	mov	r7, r3
 800733c:	d360      	bcc.n	8007400 <HAL_PCD_IRQHandler+0x950>
 800733e:	ebae 0e03 	sub.w	lr, lr, r3
 8007342:	f8c1 e180 	str.w	lr, [r1, #384]	; 0x180
 8007346:	f1be 0f00 	cmp.w	lr, #0
 800734a:	d05b      	beq.n	8007404 <HAL_PCD_IRQHandler+0x954>
 800734c:	f018 0f40 	tst.w	r8, #64	; 0x40
 8007350:	d10d      	bne.n	800736e <HAL_PCD_IRQHandler+0x8be>
 8007352:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007356:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800735a:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800735e:	0409      	lsls	r1, r1, #16
 8007360:	0c09      	lsrs	r1, r1, #16
 8007362:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007366:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 800736a:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 800736e:	b90b      	cbnz	r3, 8007374 <HAL_PCD_IRQHandler+0x8c4>
 8007370:	461f      	mov	r7, r3
 8007372:	e4d7      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 8007374:	1971      	adds	r1, r6, r5
 8007376:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800737a:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 800737e:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8007382:	f002 fbf1 	bl	8009b68 <USB_ReadPMA>
 8007386:	e4cd      	b.n	8006d24 <HAL_PCD_IRQHandler+0x274>
 8007388:	2b01      	cmp	r3, #1
 800738a:	f47f af62 	bne.w	8007252 <HAL_PCD_IRQHandler+0x7a2>
 800738e:	2500      	movs	r5, #0
 8007390:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8007394:	010b      	lsls	r3, r1, #4
 8007396:	f203 4604 	addw	r6, r3, #1028	; 0x404
 800739a:	b292      	uxth	r2, r2
 800739c:	4406      	add	r6, r0
 800739e:	52b5      	strh	r5, [r6, r2]
 80073a0:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80073a4:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80073a8:	4403      	add	r3, r0
 80073aa:	b292      	uxth	r2, r2
 80073ac:	529d      	strh	r5, [r3, r2]
 80073ae:	e750      	b.n	8007252 <HAL_PCD_IRQHandler+0x7a2>
 80073b0:	2b01      	cmp	r3, #1
 80073b2:	d1a0      	bne.n	80072f6 <HAL_PCD_IRQHandler+0x846>
 80073b4:	2500      	movs	r5, #0
 80073b6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80073ba:	010b      	lsls	r3, r1, #4
 80073bc:	f203 4604 	addw	r6, r3, #1028	; 0x404
 80073c0:	b292      	uxth	r2, r2
 80073c2:	4406      	add	r6, r0
 80073c4:	52b5      	strh	r5, [r6, r2]
 80073c6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80073ca:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80073ce:	4403      	add	r3, r0
 80073d0:	b292      	uxth	r2, r2
 80073d2:	529d      	strh	r5, [r3, r2]
 80073d4:	e78f      	b.n	80072f6 <HAL_PCD_IRQHandler+0x846>
 80073d6:	f04f 0c00 	mov.w	ip, #0
 80073da:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 80073de:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 80073e2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 80073e6:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80073ea:	0409      	lsls	r1, r1, #16
 80073ec:	0c09      	lsrs	r1, r1, #16
 80073ee:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 80073f2:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80073f6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80073fa:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 80073fe:	e6e0      	b.n	80071c2 <HAL_PCD_IRQHandler+0x712>
 8007400:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8007404:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007408:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800740c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8007410:	0409      	lsls	r1, r1, #16
 8007412:	0c09      	lsrs	r1, r1, #16
 8007414:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8007418:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800741c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8007420:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8007424:	e792      	b.n	800734c <HAL_PCD_IRQHandler+0x89c>
 8007426:	b293      	uxth	r3, r2
 8007428:	f1be 0f01 	cmp.w	lr, #1
 800742c:	f47f ac4d 	bne.w	8006cca <HAL_PCD_IRQHandler+0x21a>
 8007430:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8007434:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007438:	f201 4104 	addw	r1, r1, #1028	; 0x404
 800743c:	b292      	uxth	r2, r2
 800743e:	528b      	strh	r3, [r1, r2]
 8007440:	e443      	b.n	8006cca <HAL_PCD_IRQHandler+0x21a>
 8007442:	b9ba      	cbnz	r2, 8007474 <HAL_PCD_IRQHandler+0x9c4>
 8007444:	4698      	mov	r8, r3
 8007446:	f88e 204c 	strb.w	r2, [lr, #76]	; 0x4c
 800744a:	e41c      	b.n	8006c86 <HAL_PCD_IRQHandler+0x1d6>
 800744c:	fa1f fe82 	uxth.w	lr, r2
 8007450:	2b01      	cmp	r3, #1
 8007452:	f47f ae80 	bne.w	8007156 <HAL_PCD_IRQHandler+0x6a6>
 8007456:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800745a:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 800745e:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 8007462:	b29b      	uxth	r3, r3
 8007464:	f822 e003 	strh.w	lr, [r2, r3]
 8007468:	e675      	b.n	8007156 <HAL_PCD_IRQHandler+0x6a6>
 800746a:	bb22      	cbnz	r2, 80074b6 <HAL_PCD_IRQHandler+0xa06>
 800746c:	46f0      	mov	r8, lr
 800746e:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8007472:	e654      	b.n	800711e <HAL_PCD_IRQHandler+0x66e>
 8007474:	2300      	movs	r3, #0
 8007476:	f88e 304c 	strb.w	r3, [lr, #76]	; 0x4c
 800747a:	f8ce 3048 	str.w	r3, [lr, #72]	; 0x48
 800747e:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 8007482:	f1be 0f00 	cmp.w	lr, #0
 8007486:	d1ce      	bne.n	8007426 <HAL_PCD_IRQHandler+0x976>
 8007488:	4690      	mov	r8, r2
 800748a:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800748e:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007492:	b29b      	uxth	r3, r3
 8007494:	f201 4104 	addw	r1, r1, #1028	; 0x404
 8007498:	4419      	add	r1, r3
 800749a:	b293      	uxth	r3, r2
 800749c:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 80074a0:	d82b      	bhi.n	80074fa <HAL_PCD_IRQHandler+0xa4a>
 80074a2:	ea4f 0258 	mov.w	r2, r8, lsr #1
 80074a6:	f018 0f01 	tst.w	r8, #1
 80074aa:	bf18      	it	ne
 80074ac:	3201      	addne	r2, #1
 80074ae:	0292      	lsls	r2, r2, #10
 80074b0:	b292      	uxth	r2, r2
 80074b2:	800a      	strh	r2, [r1, #0]
 80074b4:	e409      	b.n	8006cca <HAL_PCD_IRQHandler+0x21a>
 80074b6:	f04f 0e00 	mov.w	lr, #0
 80074ba:	f8c3 e048 	str.w	lr, [r3, #72]	; 0x48
 80074be:	f883 e04c 	strb.w	lr, [r3, #76]	; 0x4c
 80074c2:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80074c6:	2b00      	cmp	r3, #0
 80074c8:	d1c0      	bne.n	800744c <HAL_PCD_IRQHandler+0x99c>
 80074ca:	4690      	mov	r8, r2
 80074cc:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80074d0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80074d4:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 80074d8:	b29b      	uxth	r3, r3
 80074da:	440b      	add	r3, r1
 80074dc:	fa1f fe82 	uxth.w	lr, r2
 80074e0:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 80074e4:	d818      	bhi.n	8007518 <HAL_PCD_IRQHandler+0xa68>
 80074e6:	ea4f 0258 	mov.w	r2, r8, lsr #1
 80074ea:	f018 0f01 	tst.w	r8, #1
 80074ee:	bf18      	it	ne
 80074f0:	3201      	addne	r2, #1
 80074f2:	0292      	lsls	r2, r2, #10
 80074f4:	b292      	uxth	r2, r2
 80074f6:	801a      	strh	r2, [r3, #0]
 80074f8:	e62d      	b.n	8007156 <HAL_PCD_IRQHandler+0x6a6>
 80074fa:	ea4f 1258 	mov.w	r2, r8, lsr #5
 80074fe:	f8df e034 	ldr.w	lr, [pc, #52]	; 8007534 <HAL_PCD_IRQHandler+0xa84>
 8007502:	f018 0f1f 	tst.w	r8, #31
 8007506:	bf08      	it	eq
 8007508:	f102 32ff 	addeq.w	r2, r2, #4294967295
 800750c:	ea4e 2282 	orr.w	r2, lr, r2, lsl #10
 8007510:	b292      	uxth	r2, r2
 8007512:	800a      	strh	r2, [r1, #0]
 8007514:	f7ff bbd9 	b.w	8006cca <HAL_PCD_IRQHandler+0x21a>
 8007518:	ea4f 1258 	mov.w	r2, r8, lsr #5
 800751c:	4905      	ldr	r1, [pc, #20]	; (8007534 <HAL_PCD_IRQHandler+0xa84>)
 800751e:	f018 0f1f 	tst.w	r8, #31
 8007522:	bf08      	it	eq
 8007524:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8007528:	ea41 2282 	orr.w	r2, r1, r2, lsl #10
 800752c:	b292      	uxth	r2, r2
 800752e:	801a      	strh	r2, [r3, #0]
 8007530:	e611      	b.n	8007156 <HAL_PCD_IRQHandler+0x6a6>
 8007532:	bf00      	nop
 8007534:	ffff8000 	.word	0xffff8000

08007538 <HAL_PCD_SetAddress>:
 8007538:	f890 22a8 	ldrb.w	r2, [r0, #680]	; 0x2a8
 800753c:	2a01      	cmp	r2, #1
 800753e:	d00e      	beq.n	800755e <HAL_PCD_SetAddress+0x26>
 8007540:	b510      	push	{r4, lr}
 8007542:	2201      	movs	r2, #1
 8007544:	4604      	mov	r4, r0
 8007546:	6800      	ldr	r0, [r0, #0]
 8007548:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 800754c:	f884 22a8 	strb.w	r2, [r4, #680]	; 0x2a8
 8007550:	f002 faee 	bl	8009b30 <USB_SetDevAddress>
 8007554:	2300      	movs	r3, #0
 8007556:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800755a:	4618      	mov	r0, r3
 800755c:	bd10      	pop	{r4, pc}
 800755e:	2002      	movs	r0, #2
 8007560:	4770      	bx	lr
 8007562:	bf00      	nop

08007564 <HAL_PCD_EP_Open>:
 8007564:	f001 0c07 	and.w	ip, r1, #7
 8007568:	0609      	lsls	r1, r1, #24
 800756a:	b510      	push	{r4, lr}
 800756c:	4604      	mov	r4, r0
 800756e:	d425      	bmi.n	80075bc <HAL_PCD_EP_Open+0x58>
 8007570:	f04f 0e00 	mov.w	lr, #0
 8007574:	eb0c 008c 	add.w	r0, ip, ip, lsl #2
 8007578:	00c0      	lsls	r0, r0, #3
 800757a:	f500 71b4 	add.w	r1, r0, #360	; 0x168
 800757e:	4420      	add	r0, r4
 8007580:	f880 e169 	strb.w	lr, [r0, #361]	; 0x169
 8007584:	4421      	add	r1, r4
 8007586:	610a      	str	r2, [r1, #16]
 8007588:	784a      	ldrb	r2, [r1, #1]
 800758a:	f881 c000 	strb.w	ip, [r1]
 800758e:	70cb      	strb	r3, [r1, #3]
 8007590:	b10a      	cbz	r2, 8007596 <HAL_PCD_EP_Open+0x32>
 8007592:	f8a1 c00e 	strh.w	ip, [r1, #14]
 8007596:	2b02      	cmp	r3, #2
 8007598:	bf04      	itt	eq
 800759a:	2300      	moveq	r3, #0
 800759c:	710b      	strbeq	r3, [r1, #4]
 800759e:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80075a2:	2b01      	cmp	r3, #1
 80075a4:	d019      	beq.n	80075da <HAL_PCD_EP_Open+0x76>
 80075a6:	2301      	movs	r3, #1
 80075a8:	6820      	ldr	r0, [r4, #0]
 80075aa:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80075ae:	f001 fce9 	bl	8008f84 <USB_ActivateEndpoint>
 80075b2:	2300      	movs	r3, #0
 80075b4:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80075b8:	4618      	mov	r0, r3
 80075ba:	bd10      	pop	{r4, pc}
 80075bc:	f10c 0101 	add.w	r1, ip, #1
 80075c0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80075c4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80075c8:	2001      	movs	r0, #1
 80075ca:	7048      	strb	r0, [r1, #1]
 80075cc:	eb0c 0100 	add.w	r1, ip, r0
 80075d0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80075d4:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80075d8:	e7d5      	b.n	8007586 <HAL_PCD_EP_Open+0x22>
 80075da:	2002      	movs	r0, #2
 80075dc:	bd10      	pop	{r4, pc}
 80075de:	bf00      	nop

080075e0 <HAL_PCD_EP_Close>:
 80075e0:	060b      	lsls	r3, r1, #24
 80075e2:	b510      	push	{r4, lr}
 80075e4:	4604      	mov	r4, r0
 80075e6:	d41b      	bmi.n	8007620 <HAL_PCD_EP_Close+0x40>
 80075e8:	f001 0307 	and.w	r3, r1, #7
 80075ec:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 80075f0:	00d2      	lsls	r2, r2, #3
 80075f2:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 80075f6:	4401      	add	r1, r0
 80075f8:	4402      	add	r2, r0
 80075fa:	2000      	movs	r0, #0
 80075fc:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007600:	700b      	strb	r3, [r1, #0]
 8007602:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007606:	2b01      	cmp	r3, #1
 8007608:	d019      	beq.n	800763e <HAL_PCD_EP_Close+0x5e>
 800760a:	2301      	movs	r3, #1
 800760c:	6820      	ldr	r0, [r4, #0]
 800760e:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007612:	f001 fe2b 	bl	800926c <USB_DeactivateEndpoint>
 8007616:	2300      	movs	r3, #0
 8007618:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800761c:	4618      	mov	r0, r3
 800761e:	bd10      	pop	{r4, pc}
 8007620:	2001      	movs	r0, #1
 8007622:	f001 0307 	and.w	r3, r1, #7
 8007626:	181a      	adds	r2, r3, r0
 8007628:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800762c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007630:	4611      	mov	r1, r2
 8007632:	7050      	strb	r0, [r2, #1]
 8007634:	700b      	strb	r3, [r1, #0]
 8007636:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800763a:	2b01      	cmp	r3, #1
 800763c:	d1e5      	bne.n	800760a <HAL_PCD_EP_Close+0x2a>
 800763e:	2002      	movs	r0, #2
 8007640:	bd10      	pop	{r4, pc}
 8007642:	bf00      	nop

08007644 <HAL_PCD_EP_Receive>:
 8007644:	b510      	push	{r4, lr}
 8007646:	2400      	movs	r4, #0
 8007648:	f001 0e07 	and.w	lr, r1, #7
 800764c:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 8007650:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 8007654:	e9cc 235f 	strd	r2, r3, [ip, #380]	; 0x17c
 8007658:	6800      	ldr	r0, [r0, #0]
 800765a:	f50c 71b4 	add.w	r1, ip, #360	; 0x168
 800765e:	f8cc 4184 	str.w	r4, [ip, #388]	; 0x184
 8007662:	f88c 4169 	strb.w	r4, [ip, #361]	; 0x169
 8007666:	f88c e168 	strb.w	lr, [ip, #360]	; 0x168
 800766a:	f001 fedf 	bl	800942c <USB_EPStartXfer>
 800766e:	4620      	mov	r0, r4
 8007670:	bd10      	pop	{r4, pc}
 8007672:	bf00      	nop

08007674 <HAL_PCD_EP_GetRxCount>:
 8007674:	f001 0107 	and.w	r1, r1, #7
 8007678:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800767c:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007680:	f8d1 0184 	ldr.w	r0, [r1, #388]	; 0x184
 8007684:	4770      	bx	lr
 8007686:	bf00      	nop

08007688 <HAL_PCD_EP_Transmit>:
 8007688:	b570      	push	{r4, r5, r6, lr}
 800768a:	2601      	movs	r6, #1
 800768c:	2500      	movs	r5, #0
 800768e:	4604      	mov	r4, r0
 8007690:	f001 0e07 	and.w	lr, r1, #7
 8007694:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 8007698:	eb0e 0106 	add.w	r1, lr, r6
 800769c:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 80076a0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80076a4:	f8cc 203c 	str.w	r2, [ip, #60]	; 0x3c
 80076a8:	f88c e028 	strb.w	lr, [ip, #40]	; 0x28
 80076ac:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 80076b0:	f8cc 3048 	str.w	r3, [ip, #72]	; 0x48
 80076b4:	f88c 604c 	strb.w	r6, [ip, #76]	; 0x4c
 80076b8:	f8cc 5044 	str.w	r5, [ip, #68]	; 0x44
 80076bc:	f88c 6029 	strb.w	r6, [ip, #41]	; 0x29
 80076c0:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80076c4:	6800      	ldr	r0, [r0, #0]
 80076c6:	f001 feb1 	bl	800942c <USB_EPStartXfer>
 80076ca:	4628      	mov	r0, r5
 80076cc:	bd70      	pop	{r4, r5, r6, pc}
 80076ce:	bf00      	nop

080076d0 <HAL_PCD_EP_SetStall>:
 80076d0:	6843      	ldr	r3, [r0, #4]
 80076d2:	b510      	push	{r4, lr}
 80076d4:	4604      	mov	r4, r0
 80076d6:	f001 0007 	and.w	r0, r1, #7
 80076da:	4298      	cmp	r0, r3
 80076dc:	d82d      	bhi.n	800773a <HAL_PCD_EP_SetStall+0x6a>
 80076de:	060b      	lsls	r3, r1, #24
 80076e0:	d41a      	bmi.n	8007718 <HAL_PCD_EP_SetStall+0x48>
 80076e2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80076e6:	00c9      	lsls	r1, r1, #3
 80076e8:	f501 72b4 	add.w	r2, r1, #360	; 0x168
 80076ec:	1863      	adds	r3, r4, r1
 80076ee:	18a1      	adds	r1, r4, r2
 80076f0:	2200      	movs	r2, #0
 80076f2:	f883 2169 	strb.w	r2, [r3, #361]	; 0x169
 80076f6:	2301      	movs	r3, #1
 80076f8:	7008      	strb	r0, [r1, #0]
 80076fa:	708b      	strb	r3, [r1, #2]
 80076fc:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007700:	429a      	cmp	r2, r3
 8007702:	d018      	beq.n	8007736 <HAL_PCD_EP_SetStall+0x66>
 8007704:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007708:	6820      	ldr	r0, [r4, #0]
 800770a:	f002 f999 	bl	8009a40 <USB_EPSetStall>
 800770e:	2300      	movs	r3, #0
 8007710:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007714:	4618      	mov	r0, r3
 8007716:	bd10      	pop	{r4, pc}
 8007718:	2201      	movs	r2, #1
 800771a:	1883      	adds	r3, r0, r2
 800771c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007720:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007724:	705a      	strb	r2, [r3, #1]
 8007726:	4619      	mov	r1, r3
 8007728:	2301      	movs	r3, #1
 800772a:	7008      	strb	r0, [r1, #0]
 800772c:	708b      	strb	r3, [r1, #2]
 800772e:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007732:	429a      	cmp	r2, r3
 8007734:	d1e6      	bne.n	8007704 <HAL_PCD_EP_SetStall+0x34>
 8007736:	2002      	movs	r0, #2
 8007738:	bd10      	pop	{r4, pc}
 800773a:	2001      	movs	r0, #1
 800773c:	bd10      	pop	{r4, pc}
 800773e:	bf00      	nop

08007740 <HAL_PCD_EP_ClrStall>:
 8007740:	b538      	push	{r3, r4, r5, lr}
 8007742:	6843      	ldr	r3, [r0, #4]
 8007744:	f001 020f 	and.w	r2, r1, #15
 8007748:	429a      	cmp	r2, r3
 800774a:	d832      	bhi.n	80077b2 <HAL_PCD_EP_ClrStall+0x72>
 800774c:	060b      	lsls	r3, r1, #24
 800774e:	4604      	mov	r4, r0
 8007750:	d41c      	bmi.n	800778c <HAL_PCD_EP_ClrStall+0x4c>
 8007752:	f001 0307 	and.w	r3, r1, #7
 8007756:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800775a:	00d2      	lsls	r2, r2, #3
 800775c:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 8007760:	4401      	add	r1, r0
 8007762:	4402      	add	r2, r0
 8007764:	2500      	movs	r5, #0
 8007766:	2000      	movs	r0, #0
 8007768:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 800776c:	700b      	strb	r3, [r1, #0]
 800776e:	708d      	strb	r5, [r1, #2]
 8007770:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007774:	2b01      	cmp	r3, #1
 8007776:	d01a      	beq.n	80077ae <HAL_PCD_EP_ClrStall+0x6e>
 8007778:	2301      	movs	r3, #1
 800777a:	6820      	ldr	r0, [r4, #0]
 800777c:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007780:	f002 f986 	bl	8009a90 <USB_EPClearStall>
 8007784:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8007788:	4628      	mov	r0, r5
 800778a:	bd38      	pop	{r3, r4, r5, pc}
 800778c:	2001      	movs	r0, #1
 800778e:	f001 0307 	and.w	r3, r1, #7
 8007792:	181a      	adds	r2, r3, r0
 8007794:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007798:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800779c:	4611      	mov	r1, r2
 800779e:	2500      	movs	r5, #0
 80077a0:	7050      	strb	r0, [r2, #1]
 80077a2:	700b      	strb	r3, [r1, #0]
 80077a4:	708d      	strb	r5, [r1, #2]
 80077a6:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80077aa:	2b01      	cmp	r3, #1
 80077ac:	d1e4      	bne.n	8007778 <HAL_PCD_EP_ClrStall+0x38>
 80077ae:	2002      	movs	r0, #2
 80077b0:	bd38      	pop	{r3, r4, r5, pc}
 80077b2:	2001      	movs	r0, #1
 80077b4:	bd38      	pop	{r3, r4, r5, pc}
 80077b6:	bf00      	nop

080077b8 <HAL_PCDEx_PMAConfig>:
 80077b8:	f011 0f80 	tst.w	r1, #128	; 0x80
 80077bc:	d00b      	beq.n	80077d6 <HAL_PCDEx_PMAConfig+0x1e>
 80077be:	f001 0107 	and.w	r1, r1, #7
 80077c2:	3101      	adds	r1, #1
 80077c4:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80077c8:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80077cc:	b95a      	cbnz	r2, 80077e6 <HAL_PCDEx_PMAConfig+0x2e>
 80077ce:	2000      	movs	r0, #0
 80077d0:	80cb      	strh	r3, [r1, #6]
 80077d2:	730a      	strb	r2, [r1, #12]
 80077d4:	4770      	bx	lr
 80077d6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80077da:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80077de:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 80077e2:	2a00      	cmp	r2, #0
 80077e4:	d0f3      	beq.n	80077ce <HAL_PCDEx_PMAConfig+0x16>
 80077e6:	2201      	movs	r2, #1
 80077e8:	2000      	movs	r0, #0
 80077ea:	608b      	str	r3, [r1, #8]
 80077ec:	730a      	strb	r2, [r1, #12]
 80077ee:	4770      	bx	lr

080077f0 <RCC_SetFlashLatencyFromMSIRange>:
 80077f0:	4b1d      	ldr	r3, [pc, #116]	; (8007868 <RCC_SetFlashLatencyFromMSIRange+0x78>)
 80077f2:	b082      	sub	sp, #8
 80077f4:	689a      	ldr	r2, [r3, #8]
 80077f6:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 80077fa:	d116      	bne.n	800782a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 80077fc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80077fe:	00d2      	lsls	r2, r2, #3
 8007800:	d420      	bmi.n	8007844 <RCC_SetFlashLatencyFromMSIRange+0x54>
 8007802:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007804:	4919      	ldr	r1, [pc, #100]	; (800786c <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8007806:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800780a:	625a      	str	r2, [r3, #36]	; 0x24
 800780c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800780e:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8007812:	9201      	str	r2, [sp, #4]
 8007814:	9a01      	ldr	r2, [sp, #4]
 8007816:	680a      	ldr	r2, [r1, #0]
 8007818:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800781a:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 800781e:	f021 5180 	bic.w	r1, r1, #268435456	; 0x10000000
 8007822:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 8007826:	6259      	str	r1, [r3, #36]	; 0x24
 8007828:	d013      	beq.n	8007852 <RCC_SetFlashLatencyFromMSIRange+0x62>
 800782a:	2000      	movs	r0, #0
 800782c:	4a10      	ldr	r2, [pc, #64]	; (8007870 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 800782e:	6813      	ldr	r3, [r2, #0]
 8007830:	f023 0301 	bic.w	r3, r3, #1
 8007834:	4303      	orrs	r3, r0
 8007836:	6013      	str	r3, [r2, #0]
 8007838:	6813      	ldr	r3, [r2, #0]
 800783a:	f003 0301 	and.w	r3, r3, #1
 800783e:	4058      	eors	r0, r3
 8007840:	b002      	add	sp, #8
 8007842:	4770      	bx	lr
 8007844:	4b09      	ldr	r3, [pc, #36]	; (800786c <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8007846:	681a      	ldr	r2, [r3, #0]
 8007848:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 800784c:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 8007850:	d1eb      	bne.n	800782a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007852:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 8007856:	d1e8      	bne.n	800782a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007858:	4a05      	ldr	r2, [pc, #20]	; (8007870 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 800785a:	2001      	movs	r0, #1
 800785c:	6813      	ldr	r3, [r2, #0]
 800785e:	f043 0304 	orr.w	r3, r3, #4
 8007862:	6013      	str	r3, [r2, #0]
 8007864:	e7e2      	b.n	800782c <RCC_SetFlashLatencyFromMSIRange+0x3c>
 8007866:	bf00      	nop
 8007868:	40023800 	.word	0x40023800
 800786c:	40007000 	.word	0x40007000
 8007870:	40023c00 	.word	0x40023c00

08007874 <HAL_RCC_OscConfig>:
 8007874:	2800      	cmp	r0, #0
 8007876:	f000 81f8 	beq.w	8007c6a <HAL_RCC_OscConfig+0x3f6>
 800787a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800787e:	4aa2      	ldr	r2, [pc, #648]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007880:	6803      	ldr	r3, [r0, #0]
 8007882:	6895      	ldr	r5, [r2, #8]
 8007884:	6896      	ldr	r6, [r2, #8]
 8007886:	07d9      	lsls	r1, r3, #31
 8007888:	4604      	mov	r4, r0
 800788a:	b083      	sub	sp, #12
 800788c:	f005 050c 	and.w	r5, r5, #12
 8007890:	f406 3680 	and.w	r6, r6, #65536	; 0x10000
 8007894:	d52e      	bpl.n	80078f4 <HAL_RCC_OscConfig+0x80>
 8007896:	2d08      	cmp	r5, #8
 8007898:	f000 8128 	beq.w	8007aec <HAL_RCC_OscConfig+0x278>
 800789c:	2d0c      	cmp	r5, #12
 800789e:	f000 8122 	beq.w	8007ae6 <HAL_RCC_OscConfig+0x272>
 80078a2:	6863      	ldr	r3, [r4, #4]
 80078a4:	2b01      	cmp	r3, #1
 80078a6:	d00f      	beq.n	80078c8 <HAL_RCC_OscConfig+0x54>
 80078a8:	2b00      	cmp	r3, #0
 80078aa:	f000 8180 	beq.w	8007bae <HAL_RCC_OscConfig+0x33a>
 80078ae:	2b05      	cmp	r3, #5
 80078b0:	4b95      	ldr	r3, [pc, #596]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 80078b2:	681a      	ldr	r2, [r3, #0]
 80078b4:	f000 81db 	beq.w	8007c6e <HAL_RCC_OscConfig+0x3fa>
 80078b8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80078bc:	601a      	str	r2, [r3, #0]
 80078be:	681a      	ldr	r2, [r3, #0]
 80078c0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80078c4:	601a      	str	r2, [r3, #0]
 80078c6:	e004      	b.n	80078d2 <HAL_RCC_OscConfig+0x5e>
 80078c8:	4a8f      	ldr	r2, [pc, #572]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 80078ca:	6813      	ldr	r3, [r2, #0]
 80078cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80078d0:	6013      	str	r3, [r2, #0]
 80078d2:	f7fe f839 	bl	8005948 <HAL_GetTick>
 80078d6:	f8df 8230 	ldr.w	r8, [pc, #560]	; 8007b08 <HAL_RCC_OscConfig+0x294>
 80078da:	4607      	mov	r7, r0
 80078dc:	e005      	b.n	80078ea <HAL_RCC_OscConfig+0x76>
 80078de:	f7fe f833 	bl	8005948 <HAL_GetTick>
 80078e2:	1bc0      	subs	r0, r0, r7
 80078e4:	2864      	cmp	r0, #100	; 0x64
 80078e6:	f200 815e 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 80078ea:	f8d8 3000 	ldr.w	r3, [r8]
 80078ee:	039b      	lsls	r3, r3, #14
 80078f0:	d5f5      	bpl.n	80078de <HAL_RCC_OscConfig+0x6a>
 80078f2:	6823      	ldr	r3, [r4, #0]
 80078f4:	0799      	lsls	r1, r3, #30
 80078f6:	d522      	bpl.n	800793e <HAL_RCC_OscConfig+0xca>
 80078f8:	2d04      	cmp	r5, #4
 80078fa:	f000 8114 	beq.w	8007b26 <HAL_RCC_OscConfig+0x2b2>
 80078fe:	2d0c      	cmp	r5, #12
 8007900:	f000 810e 	beq.w	8007b20 <HAL_RCC_OscConfig+0x2ac>
 8007904:	68e3      	ldr	r3, [r4, #12]
 8007906:	2b00      	cmp	r3, #0
 8007908:	f000 8179 	beq.w	8007bfe <HAL_RCC_OscConfig+0x38a>
 800790c:	2201      	movs	r2, #1
 800790e:	4b7f      	ldr	r3, [pc, #508]	; (8007b0c <HAL_RCC_OscConfig+0x298>)
 8007910:	4f7d      	ldr	r7, [pc, #500]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007912:	601a      	str	r2, [r3, #0]
 8007914:	f7fe f818 	bl	8005948 <HAL_GetTick>
 8007918:	4606      	mov	r6, r0
 800791a:	e005      	b.n	8007928 <HAL_RCC_OscConfig+0xb4>
 800791c:	f7fe f814 	bl	8005948 <HAL_GetTick>
 8007920:	1b80      	subs	r0, r0, r6
 8007922:	2802      	cmp	r0, #2
 8007924:	f200 813f 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007928:	683b      	ldr	r3, [r7, #0]
 800792a:	079b      	lsls	r3, r3, #30
 800792c:	d5f6      	bpl.n	800791c <HAL_RCC_OscConfig+0xa8>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	6922      	ldr	r2, [r4, #16]
 8007932:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007936:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800793a:	607b      	str	r3, [r7, #4]
 800793c:	6823      	ldr	r3, [r4, #0]
 800793e:	06d9      	lsls	r1, r3, #27
 8007940:	d525      	bpl.n	800798e <HAL_RCC_OscConfig+0x11a>
 8007942:	2d00      	cmp	r5, #0
 8007944:	f000 8098 	beq.w	8007a78 <HAL_RCC_OscConfig+0x204>
 8007948:	69a3      	ldr	r3, [r4, #24]
 800794a:	2b00      	cmp	r3, #0
 800794c:	f000 816a 	beq.w	8007c24 <HAL_RCC_OscConfig+0x3b0>
 8007950:	2201      	movs	r2, #1
 8007952:	4b6e      	ldr	r3, [pc, #440]	; (8007b0c <HAL_RCC_OscConfig+0x298>)
 8007954:	4e6c      	ldr	r6, [pc, #432]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007956:	621a      	str	r2, [r3, #32]
 8007958:	f7fd fff6 	bl	8005948 <HAL_GetTick>
 800795c:	4607      	mov	r7, r0
 800795e:	e005      	b.n	800796c <HAL_RCC_OscConfig+0xf8>
 8007960:	f7fd fff2 	bl	8005948 <HAL_GetTick>
 8007964:	1bc0      	subs	r0, r0, r7
 8007966:	2802      	cmp	r0, #2
 8007968:	f200 811d 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 800796c:	6833      	ldr	r3, [r6, #0]
 800796e:	059b      	lsls	r3, r3, #22
 8007970:	d5f6      	bpl.n	8007960 <HAL_RCC_OscConfig+0xec>
 8007972:	6873      	ldr	r3, [r6, #4]
 8007974:	6a22      	ldr	r2, [r4, #32]
 8007976:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800797a:	4313      	orrs	r3, r2
 800797c:	6073      	str	r3, [r6, #4]
 800797e:	6873      	ldr	r3, [r6, #4]
 8007980:	69e2      	ldr	r2, [r4, #28]
 8007982:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8007986:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800798a:	6073      	str	r3, [r6, #4]
 800798c:	6823      	ldr	r3, [r4, #0]
 800798e:	0719      	lsls	r1, r3, #28
 8007990:	d516      	bpl.n	80079c0 <HAL_RCC_OscConfig+0x14c>
 8007992:	6963      	ldr	r3, [r4, #20]
 8007994:	2b00      	cmp	r3, #0
 8007996:	f000 8121 	beq.w	8007bdc <HAL_RCC_OscConfig+0x368>
 800799a:	2201      	movs	r2, #1
 800799c:	4b5b      	ldr	r3, [pc, #364]	; (8007b0c <HAL_RCC_OscConfig+0x298>)
 800799e:	4f5a      	ldr	r7, [pc, #360]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 80079a0:	f8c3 2680 	str.w	r2, [r3, #1664]	; 0x680
 80079a4:	f7fd ffd0 	bl	8005948 <HAL_GetTick>
 80079a8:	4606      	mov	r6, r0
 80079aa:	e005      	b.n	80079b8 <HAL_RCC_OscConfig+0x144>
 80079ac:	f7fd ffcc 	bl	8005948 <HAL_GetTick>
 80079b0:	1b80      	subs	r0, r0, r6
 80079b2:	2802      	cmp	r0, #2
 80079b4:	f200 80f7 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 80079b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80079ba:	079a      	lsls	r2, r3, #30
 80079bc:	d5f6      	bpl.n	80079ac <HAL_RCC_OscConfig+0x138>
 80079be:	6823      	ldr	r3, [r4, #0]
 80079c0:	075e      	lsls	r6, r3, #29
 80079c2:	d53b      	bpl.n	8007a3c <HAL_RCC_OscConfig+0x1c8>
 80079c4:	4b50      	ldr	r3, [pc, #320]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 80079c6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80079c8:	00d0      	lsls	r0, r2, #3
 80079ca:	f100 8129 	bmi.w	8007c20 <HAL_RCC_OscConfig+0x3ac>
 80079ce:	2601      	movs	r6, #1
 80079d0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80079d2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80079d6:	625a      	str	r2, [r3, #36]	; 0x24
 80079d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80079da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80079de:	9301      	str	r3, [sp, #4]
 80079e0:	9b01      	ldr	r3, [sp, #4]
 80079e2:	4f4b      	ldr	r7, [pc, #300]	; (8007b10 <HAL_RCC_OscConfig+0x29c>)
 80079e4:	683b      	ldr	r3, [r7, #0]
 80079e6:	05d9      	lsls	r1, r3, #23
 80079e8:	f140 80cc 	bpl.w	8007b84 <HAL_RCC_OscConfig+0x310>
 80079ec:	68a3      	ldr	r3, [r4, #8]
 80079ee:	2b01      	cmp	r3, #1
 80079f0:	f000 8175 	beq.w	8007cde <HAL_RCC_OscConfig+0x46a>
 80079f4:	2b00      	cmp	r3, #0
 80079f6:	f000 80a9 	beq.w	8007b4c <HAL_RCC_OscConfig+0x2d8>
 80079fa:	2b05      	cmp	r3, #5
 80079fc:	4b42      	ldr	r3, [pc, #264]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 80079fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007a00:	f000 818b 	beq.w	8007d1a <HAL_RCC_OscConfig+0x4a6>
 8007a04:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007a08:	635a      	str	r2, [r3, #52]	; 0x34
 8007a0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007a0c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007a10:	635a      	str	r2, [r3, #52]	; 0x34
 8007a12:	f7fd ff99 	bl	8005948 <HAL_GetTick>
 8007a16:	f241 3988 	movw	r9, #5000	; 0x1388
 8007a1a:	4607      	mov	r7, r0
 8007a1c:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 8007b08 <HAL_RCC_OscConfig+0x294>
 8007a20:	e005      	b.n	8007a2e <HAL_RCC_OscConfig+0x1ba>
 8007a22:	f7fd ff91 	bl	8005948 <HAL_GetTick>
 8007a26:	1bc0      	subs	r0, r0, r7
 8007a28:	4548      	cmp	r0, r9
 8007a2a:	f200 80bc 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007a2e:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
 8007a32:	059b      	lsls	r3, r3, #22
 8007a34:	d5f5      	bpl.n	8007a22 <HAL_RCC_OscConfig+0x1ae>
 8007a36:	2e00      	cmp	r6, #0
 8007a38:	f040 814b 	bne.w	8007cd2 <HAL_RCC_OscConfig+0x45e>
 8007a3c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007a3e:	b1b8      	cbz	r0, 8007a70 <HAL_RCC_OscConfig+0x1fc>
 8007a40:	2d0c      	cmp	r5, #12
 8007a42:	f000 8152 	beq.w	8007cea <HAL_RCC_OscConfig+0x476>
 8007a46:	2802      	cmp	r0, #2
 8007a48:	f04f 0200 	mov.w	r2, #0
 8007a4c:	4b2f      	ldr	r3, [pc, #188]	; (8007b0c <HAL_RCC_OscConfig+0x298>)
 8007a4e:	f000 8116 	beq.w	8007c7e <HAL_RCC_OscConfig+0x40a>
 8007a52:	661a      	str	r2, [r3, #96]	; 0x60
 8007a54:	f7fd ff78 	bl	8005948 <HAL_GetTick>
 8007a58:	4d2b      	ldr	r5, [pc, #172]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007a5a:	4604      	mov	r4, r0
 8007a5c:	e005      	b.n	8007a6a <HAL_RCC_OscConfig+0x1f6>
 8007a5e:	f7fd ff73 	bl	8005948 <HAL_GetTick>
 8007a62:	1b00      	subs	r0, r0, r4
 8007a64:	2802      	cmp	r0, #2
 8007a66:	f200 809e 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007a6a:	682b      	ldr	r3, [r5, #0]
 8007a6c:	019b      	lsls	r3, r3, #6
 8007a6e:	d4f6      	bmi.n	8007a5e <HAL_RCC_OscConfig+0x1ea>
 8007a70:	2000      	movs	r0, #0
 8007a72:	b003      	add	sp, #12
 8007a74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a78:	4b23      	ldr	r3, [pc, #140]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	059a      	lsls	r2, r3, #22
 8007a7e:	d502      	bpl.n	8007a86 <HAL_RCC_OscConfig+0x212>
 8007a80:	69a3      	ldr	r3, [r4, #24]
 8007a82:	2b00      	cmp	r3, #0
 8007a84:	d03b      	beq.n	8007afe <HAL_RCC_OscConfig+0x28a>
 8007a86:	4e20      	ldr	r6, [pc, #128]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007a88:	6a20      	ldr	r0, [r4, #32]
 8007a8a:	6873      	ldr	r3, [r6, #4]
 8007a8c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8007a90:	4298      	cmp	r0, r3
 8007a92:	f240 80d7 	bls.w	8007c44 <HAL_RCC_OscConfig+0x3d0>
 8007a96:	f7ff feab 	bl	80077f0 <RCC_SetFlashLatencyFromMSIRange>
 8007a9a:	2800      	cmp	r0, #0
 8007a9c:	d12f      	bne.n	8007afe <HAL_RCC_OscConfig+0x28a>
 8007a9e:	6872      	ldr	r2, [r6, #4]
 8007aa0:	6a23      	ldr	r3, [r4, #32]
 8007aa2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007aa6:	431a      	orrs	r2, r3
 8007aa8:	6072      	str	r2, [r6, #4]
 8007aaa:	6872      	ldr	r2, [r6, #4]
 8007aac:	69e1      	ldr	r1, [r4, #28]
 8007aae:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007ab2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8007ab6:	6072      	str	r2, [r6, #4]
 8007ab8:	4a13      	ldr	r2, [pc, #76]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007aba:	0b5b      	lsrs	r3, r3, #13
 8007abc:	6891      	ldr	r1, [r2, #8]
 8007abe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8007ac2:	3301      	adds	r3, #1
 8007ac4:	fa02 f303 	lsl.w	r3, r2, r3
 8007ac8:	4a12      	ldr	r2, [pc, #72]	; (8007b14 <HAL_RCC_OscConfig+0x2a0>)
 8007aca:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8007ace:	5c52      	ldrb	r2, [r2, r1]
 8007ad0:	4811      	ldr	r0, [pc, #68]	; (8007b18 <HAL_RCC_OscConfig+0x2a4>)
 8007ad2:	40d3      	lsrs	r3, r2
 8007ad4:	4a11      	ldr	r2, [pc, #68]	; (8007b1c <HAL_RCC_OscConfig+0x2a8>)
 8007ad6:	6003      	str	r3, [r0, #0]
 8007ad8:	6810      	ldr	r0, [r2, #0]
 8007ada:	f7fd fef3 	bl	80058c4 <HAL_InitTick>
 8007ade:	2800      	cmp	r0, #0
 8007ae0:	d1c7      	bne.n	8007a72 <HAL_RCC_OscConfig+0x1fe>
 8007ae2:	6823      	ldr	r3, [r4, #0]
 8007ae4:	e753      	b.n	800798e <HAL_RCC_OscConfig+0x11a>
 8007ae6:	2e00      	cmp	r6, #0
 8007ae8:	f43f aedb 	beq.w	80078a2 <HAL_RCC_OscConfig+0x2e>
 8007aec:	4a06      	ldr	r2, [pc, #24]	; (8007b08 <HAL_RCC_OscConfig+0x294>)
 8007aee:	6812      	ldr	r2, [r2, #0]
 8007af0:	0392      	lsls	r2, r2, #14
 8007af2:	f57f aeff 	bpl.w	80078f4 <HAL_RCC_OscConfig+0x80>
 8007af6:	6862      	ldr	r2, [r4, #4]
 8007af8:	2a00      	cmp	r2, #0
 8007afa:	f47f aefb 	bne.w	80078f4 <HAL_RCC_OscConfig+0x80>
 8007afe:	2001      	movs	r0, #1
 8007b00:	b003      	add	sp, #12
 8007b02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007b06:	bf00      	nop
 8007b08:	40023800 	.word	0x40023800
 8007b0c:	42470000 	.word	0x42470000
 8007b10:	40007000 	.word	0x40007000
 8007b14:	08010ce8 	.word	0x08010ce8
 8007b18:	20000024 	.word	0x20000024
 8007b1c:	20000030 	.word	0x20000030
 8007b20:	2e00      	cmp	r6, #0
 8007b22:	f47f aeef 	bne.w	8007904 <HAL_RCC_OscConfig+0x90>
 8007b26:	4a81      	ldr	r2, [pc, #516]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007b28:	6812      	ldr	r2, [r2, #0]
 8007b2a:	0792      	lsls	r2, r2, #30
 8007b2c:	d502      	bpl.n	8007b34 <HAL_RCC_OscConfig+0x2c0>
 8007b2e:	68e2      	ldr	r2, [r4, #12]
 8007b30:	2a01      	cmp	r2, #1
 8007b32:	d1e4      	bne.n	8007afe <HAL_RCC_OscConfig+0x28a>
 8007b34:	497d      	ldr	r1, [pc, #500]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007b36:	6920      	ldr	r0, [r4, #16]
 8007b38:	684a      	ldr	r2, [r1, #4]
 8007b3a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8007b3e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8007b42:	604a      	str	r2, [r1, #4]
 8007b44:	06d9      	lsls	r1, r3, #27
 8007b46:	f57f af22 	bpl.w	800798e <HAL_RCC_OscConfig+0x11a>
 8007b4a:	e6fa      	b.n	8007942 <HAL_RCC_OscConfig+0xce>
 8007b4c:	4f77      	ldr	r7, [pc, #476]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007b4e:	f241 3988 	movw	r9, #5000	; 0x1388
 8007b52:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007b54:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007b58:	637b      	str	r3, [r7, #52]	; 0x34
 8007b5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007b5c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007b60:	637b      	str	r3, [r7, #52]	; 0x34
 8007b62:	f7fd fef1 	bl	8005948 <HAL_GetTick>
 8007b66:	4680      	mov	r8, r0
 8007b68:	e005      	b.n	8007b76 <HAL_RCC_OscConfig+0x302>
 8007b6a:	f7fd feed 	bl	8005948 <HAL_GetTick>
 8007b6e:	eba0 0008 	sub.w	r0, r0, r8
 8007b72:	4548      	cmp	r0, r9
 8007b74:	d817      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007b76:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007b78:	0598      	lsls	r0, r3, #22
 8007b7a:	d4f6      	bmi.n	8007b6a <HAL_RCC_OscConfig+0x2f6>
 8007b7c:	2e00      	cmp	r6, #0
 8007b7e:	f43f af5d 	beq.w	8007a3c <HAL_RCC_OscConfig+0x1c8>
 8007b82:	e0a6      	b.n	8007cd2 <HAL_RCC_OscConfig+0x45e>
 8007b84:	683b      	ldr	r3, [r7, #0]
 8007b86:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007b8a:	603b      	str	r3, [r7, #0]
 8007b8c:	f7fd fedc 	bl	8005948 <HAL_GetTick>
 8007b90:	4680      	mov	r8, r0
 8007b92:	683b      	ldr	r3, [r7, #0]
 8007b94:	05da      	lsls	r2, r3, #23
 8007b96:	f53f af29 	bmi.w	80079ec <HAL_RCC_OscConfig+0x178>
 8007b9a:	f7fd fed5 	bl	8005948 <HAL_GetTick>
 8007b9e:	eba0 0008 	sub.w	r0, r0, r8
 8007ba2:	2864      	cmp	r0, #100	; 0x64
 8007ba4:	d9f5      	bls.n	8007b92 <HAL_RCC_OscConfig+0x31e>
 8007ba6:	2003      	movs	r0, #3
 8007ba8:	b003      	add	sp, #12
 8007baa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007bae:	4f5f      	ldr	r7, [pc, #380]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007bb0:	683b      	ldr	r3, [r7, #0]
 8007bb2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007bb6:	603b      	str	r3, [r7, #0]
 8007bb8:	683b      	ldr	r3, [r7, #0]
 8007bba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007bbe:	603b      	str	r3, [r7, #0]
 8007bc0:	f7fd fec2 	bl	8005948 <HAL_GetTick>
 8007bc4:	4680      	mov	r8, r0
 8007bc6:	e005      	b.n	8007bd4 <HAL_RCC_OscConfig+0x360>
 8007bc8:	f7fd febe 	bl	8005948 <HAL_GetTick>
 8007bcc:	eba0 0008 	sub.w	r0, r0, r8
 8007bd0:	2864      	cmp	r0, #100	; 0x64
 8007bd2:	d8e8      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	0398      	lsls	r0, r3, #14
 8007bd8:	d4f6      	bmi.n	8007bc8 <HAL_RCC_OscConfig+0x354>
 8007bda:	e68a      	b.n	80078f2 <HAL_RCC_OscConfig+0x7e>
 8007bdc:	4a54      	ldr	r2, [pc, #336]	; (8007d30 <HAL_RCC_OscConfig+0x4bc>)
 8007bde:	4f53      	ldr	r7, [pc, #332]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007be0:	f8c2 3680 	str.w	r3, [r2, #1664]	; 0x680
 8007be4:	f7fd feb0 	bl	8005948 <HAL_GetTick>
 8007be8:	4606      	mov	r6, r0
 8007bea:	e004      	b.n	8007bf6 <HAL_RCC_OscConfig+0x382>
 8007bec:	f7fd feac 	bl	8005948 <HAL_GetTick>
 8007bf0:	1b80      	subs	r0, r0, r6
 8007bf2:	2802      	cmp	r0, #2
 8007bf4:	d8d7      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007bf6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007bf8:	079b      	lsls	r3, r3, #30
 8007bfa:	d4f7      	bmi.n	8007bec <HAL_RCC_OscConfig+0x378>
 8007bfc:	e6df      	b.n	80079be <HAL_RCC_OscConfig+0x14a>
 8007bfe:	4a4c      	ldr	r2, [pc, #304]	; (8007d30 <HAL_RCC_OscConfig+0x4bc>)
 8007c00:	4f4a      	ldr	r7, [pc, #296]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007c02:	6013      	str	r3, [r2, #0]
 8007c04:	f7fd fea0 	bl	8005948 <HAL_GetTick>
 8007c08:	4606      	mov	r6, r0
 8007c0a:	e004      	b.n	8007c16 <HAL_RCC_OscConfig+0x3a2>
 8007c0c:	f7fd fe9c 	bl	8005948 <HAL_GetTick>
 8007c10:	1b80      	subs	r0, r0, r6
 8007c12:	2802      	cmp	r0, #2
 8007c14:	d8c7      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007c16:	683b      	ldr	r3, [r7, #0]
 8007c18:	0798      	lsls	r0, r3, #30
 8007c1a:	d4f7      	bmi.n	8007c0c <HAL_RCC_OscConfig+0x398>
 8007c1c:	6823      	ldr	r3, [r4, #0]
 8007c1e:	e68e      	b.n	800793e <HAL_RCC_OscConfig+0xca>
 8007c20:	2600      	movs	r6, #0
 8007c22:	e6de      	b.n	80079e2 <HAL_RCC_OscConfig+0x16e>
 8007c24:	4a42      	ldr	r2, [pc, #264]	; (8007d30 <HAL_RCC_OscConfig+0x4bc>)
 8007c26:	4f41      	ldr	r7, [pc, #260]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007c28:	6213      	str	r3, [r2, #32]
 8007c2a:	f7fd fe8d 	bl	8005948 <HAL_GetTick>
 8007c2e:	4606      	mov	r6, r0
 8007c30:	e004      	b.n	8007c3c <HAL_RCC_OscConfig+0x3c8>
 8007c32:	f7fd fe89 	bl	8005948 <HAL_GetTick>
 8007c36:	1b80      	subs	r0, r0, r6
 8007c38:	2802      	cmp	r0, #2
 8007c3a:	d8b4      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007c3c:	683b      	ldr	r3, [r7, #0]
 8007c3e:	0598      	lsls	r0, r3, #22
 8007c40:	d4f7      	bmi.n	8007c32 <HAL_RCC_OscConfig+0x3be>
 8007c42:	e74e      	b.n	8007ae2 <HAL_RCC_OscConfig+0x26e>
 8007c44:	6873      	ldr	r3, [r6, #4]
 8007c46:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007c4a:	4303      	orrs	r3, r0
 8007c4c:	6073      	str	r3, [r6, #4]
 8007c4e:	6873      	ldr	r3, [r6, #4]
 8007c50:	69e2      	ldr	r2, [r4, #28]
 8007c52:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8007c56:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007c5a:	6073      	str	r3, [r6, #4]
 8007c5c:	f7ff fdc8 	bl	80077f0 <RCC_SetFlashLatencyFromMSIRange>
 8007c60:	2800      	cmp	r0, #0
 8007c62:	f47f af4c 	bne.w	8007afe <HAL_RCC_OscConfig+0x28a>
 8007c66:	6a23      	ldr	r3, [r4, #32]
 8007c68:	e726      	b.n	8007ab8 <HAL_RCC_OscConfig+0x244>
 8007c6a:	2001      	movs	r0, #1
 8007c6c:	4770      	bx	lr
 8007c6e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8007c72:	601a      	str	r2, [r3, #0]
 8007c74:	681a      	ldr	r2, [r3, #0]
 8007c76:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007c7a:	601a      	str	r2, [r3, #0]
 8007c7c:	e629      	b.n	80078d2 <HAL_RCC_OscConfig+0x5e>
 8007c7e:	661a      	str	r2, [r3, #96]	; 0x60
 8007c80:	f7fd fe62 	bl	8005948 <HAL_GetTick>
 8007c84:	4e29      	ldr	r6, [pc, #164]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007c86:	4605      	mov	r5, r0
 8007c88:	e004      	b.n	8007c94 <HAL_RCC_OscConfig+0x420>
 8007c8a:	f7fd fe5d 	bl	8005948 <HAL_GetTick>
 8007c8e:	1b40      	subs	r0, r0, r5
 8007c90:	2802      	cmp	r0, #2
 8007c92:	d888      	bhi.n	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007c94:	6833      	ldr	r3, [r6, #0]
 8007c96:	0199      	lsls	r1, r3, #6
 8007c98:	d4f7      	bmi.n	8007c8a <HAL_RCC_OscConfig+0x416>
 8007c9a:	e9d4 310a 	ldrd	r3, r1, [r4, #40]	; 0x28
 8007c9e:	430b      	orrs	r3, r1
 8007ca0:	2101      	movs	r1, #1
 8007ca2:	68b2      	ldr	r2, [r6, #8]
 8007ca4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007ca6:	f422 027d 	bic.w	r2, r2, #16580608	; 0xfd0000
 8007caa:	4313      	orrs	r3, r2
 8007cac:	4a20      	ldr	r2, [pc, #128]	; (8007d30 <HAL_RCC_OscConfig+0x4bc>)
 8007cae:	4303      	orrs	r3, r0
 8007cb0:	60b3      	str	r3, [r6, #8]
 8007cb2:	6611      	str	r1, [r2, #96]	; 0x60
 8007cb4:	f7fd fe48 	bl	8005948 <HAL_GetTick>
 8007cb8:	4d1c      	ldr	r5, [pc, #112]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007cba:	4604      	mov	r4, r0
 8007cbc:	e005      	b.n	8007cca <HAL_RCC_OscConfig+0x456>
 8007cbe:	f7fd fe43 	bl	8005948 <HAL_GetTick>
 8007cc2:	1b00      	subs	r0, r0, r4
 8007cc4:	2802      	cmp	r0, #2
 8007cc6:	f63f af6e 	bhi.w	8007ba6 <HAL_RCC_OscConfig+0x332>
 8007cca:	682b      	ldr	r3, [r5, #0]
 8007ccc:	019a      	lsls	r2, r3, #6
 8007cce:	d5f6      	bpl.n	8007cbe <HAL_RCC_OscConfig+0x44a>
 8007cd0:	e6ce      	b.n	8007a70 <HAL_RCC_OscConfig+0x1fc>
 8007cd2:	4a16      	ldr	r2, [pc, #88]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007cd4:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8007cd6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007cda:	6253      	str	r3, [r2, #36]	; 0x24
 8007cdc:	e6ae      	b.n	8007a3c <HAL_RCC_OscConfig+0x1c8>
 8007cde:	4a13      	ldr	r2, [pc, #76]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007ce0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007ce2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007ce6:	6353      	str	r3, [r2, #52]	; 0x34
 8007ce8:	e693      	b.n	8007a12 <HAL_RCC_OscConfig+0x19e>
 8007cea:	2801      	cmp	r0, #1
 8007cec:	f43f aec1 	beq.w	8007a72 <HAL_RCC_OscConfig+0x1fe>
 8007cf0:	4b0e      	ldr	r3, [pc, #56]	; (8007d2c <HAL_RCC_OscConfig+0x4b8>)
 8007cf2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007cf4:	689b      	ldr	r3, [r3, #8]
 8007cf6:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 8007cfa:	4291      	cmp	r1, r2
 8007cfc:	f47f aeff 	bne.w	8007afe <HAL_RCC_OscConfig+0x28a>
 8007d00:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007d02:	f403 1170 	and.w	r1, r3, #3932160	; 0x3c0000
 8007d06:	4291      	cmp	r1, r2
 8007d08:	f47f aef9 	bne.w	8007afe <HAL_RCC_OscConfig+0x28a>
 8007d0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007d0e:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8007d12:	1a18      	subs	r0, r3, r0
 8007d14:	bf18      	it	ne
 8007d16:	2001      	movne	r0, #1
 8007d18:	e6ab      	b.n	8007a72 <HAL_RCC_OscConfig+0x1fe>
 8007d1a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007d1e:	635a      	str	r2, [r3, #52]	; 0x34
 8007d20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007d22:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007d26:	635a      	str	r2, [r3, #52]	; 0x34
 8007d28:	e673      	b.n	8007a12 <HAL_RCC_OscConfig+0x19e>
 8007d2a:	bf00      	nop
 8007d2c:	40023800 	.word	0x40023800
 8007d30:	42470000 	.word	0x42470000

08007d34 <HAL_RCC_ClockConfig>:
 8007d34:	2800      	cmp	r0, #0
 8007d36:	f000 80c2 	beq.w	8007ebe <HAL_RCC_ClockConfig+0x18a>
 8007d3a:	4a85      	ldr	r2, [pc, #532]	; (8007f50 <HAL_RCC_ClockConfig+0x21c>)
 8007d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d40:	6813      	ldr	r3, [r2, #0]
 8007d42:	4604      	mov	r4, r0
 8007d44:	f003 0301 	and.w	r3, r3, #1
 8007d48:	428b      	cmp	r3, r1
 8007d4a:	460d      	mov	r5, r1
 8007d4c:	d213      	bcs.n	8007d76 <HAL_RCC_ClockConfig+0x42>
 8007d4e:	2901      	cmp	r1, #1
 8007d50:	d103      	bne.n	8007d5a <HAL_RCC_ClockConfig+0x26>
 8007d52:	6813      	ldr	r3, [r2, #0]
 8007d54:	f043 0304 	orr.w	r3, r3, #4
 8007d58:	6013      	str	r3, [r2, #0]
 8007d5a:	4a7d      	ldr	r2, [pc, #500]	; (8007f50 <HAL_RCC_ClockConfig+0x21c>)
 8007d5c:	6813      	ldr	r3, [r2, #0]
 8007d5e:	f023 0301 	bic.w	r3, r3, #1
 8007d62:	432b      	orrs	r3, r5
 8007d64:	6013      	str	r3, [r2, #0]
 8007d66:	6813      	ldr	r3, [r2, #0]
 8007d68:	f003 0301 	and.w	r3, r3, #1
 8007d6c:	42ab      	cmp	r3, r5
 8007d6e:	d002      	beq.n	8007d76 <HAL_RCC_ClockConfig+0x42>
 8007d70:	2001      	movs	r0, #1
 8007d72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d76:	6823      	ldr	r3, [r4, #0]
 8007d78:	0799      	lsls	r1, r3, #30
 8007d7a:	d506      	bpl.n	8007d8a <HAL_RCC_ClockConfig+0x56>
 8007d7c:	4975      	ldr	r1, [pc, #468]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007d7e:	68a0      	ldr	r0, [r4, #8]
 8007d80:	688a      	ldr	r2, [r1, #8]
 8007d82:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8007d86:	4302      	orrs	r2, r0
 8007d88:	608a      	str	r2, [r1, #8]
 8007d8a:	07da      	lsls	r2, r3, #31
 8007d8c:	d529      	bpl.n	8007de2 <HAL_RCC_ClockConfig+0xae>
 8007d8e:	6862      	ldr	r2, [r4, #4]
 8007d90:	4b70      	ldr	r3, [pc, #448]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007d92:	2a02      	cmp	r2, #2
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	f000 808e 	beq.w	8007eb6 <HAL_RCC_ClockConfig+0x182>
 8007d9a:	2a03      	cmp	r2, #3
 8007d9c:	f000 8085 	beq.w	8007eaa <HAL_RCC_ClockConfig+0x176>
 8007da0:	2a01      	cmp	r2, #1
 8007da2:	f000 80d1 	beq.w	8007f48 <HAL_RCC_ClockConfig+0x214>
 8007da6:	0598      	lsls	r0, r3, #22
 8007da8:	d5e2      	bpl.n	8007d70 <HAL_RCC_ClockConfig+0x3c>
 8007daa:	4e6a      	ldr	r6, [pc, #424]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007dac:	f241 3888 	movw	r8, #5000	; 0x1388
 8007db0:	68b3      	ldr	r3, [r6, #8]
 8007db2:	f023 0303 	bic.w	r3, r3, #3
 8007db6:	4313      	orrs	r3, r2
 8007db8:	60b3      	str	r3, [r6, #8]
 8007dba:	f7fd fdc5 	bl	8005948 <HAL_GetTick>
 8007dbe:	6863      	ldr	r3, [r4, #4]
 8007dc0:	4607      	mov	r7, r0
 8007dc2:	2b02      	cmp	r3, #2
 8007dc4:	d055      	beq.n	8007e72 <HAL_RCC_ClockConfig+0x13e>
 8007dc6:	2b03      	cmp	r3, #3
 8007dc8:	d05e      	beq.n	8007e88 <HAL_RCC_ClockConfig+0x154>
 8007dca:	2b01      	cmp	r3, #1
 8007dcc:	d105      	bne.n	8007dda <HAL_RCC_ClockConfig+0xa6>
 8007dce:	e066      	b.n	8007e9e <HAL_RCC_ClockConfig+0x16a>
 8007dd0:	f7fd fdba 	bl	8005948 <HAL_GetTick>
 8007dd4:	1bc0      	subs	r0, r0, r7
 8007dd6:	4540      	cmp	r0, r8
 8007dd8:	d873      	bhi.n	8007ec2 <HAL_RCC_ClockConfig+0x18e>
 8007dda:	68b3      	ldr	r3, [r6, #8]
 8007ddc:	f013 0f0c 	tst.w	r3, #12
 8007de0:	d1f6      	bne.n	8007dd0 <HAL_RCC_ClockConfig+0x9c>
 8007de2:	4a5b      	ldr	r2, [pc, #364]	; (8007f50 <HAL_RCC_ClockConfig+0x21c>)
 8007de4:	6813      	ldr	r3, [r2, #0]
 8007de6:	f003 0301 	and.w	r3, r3, #1
 8007dea:	42ab      	cmp	r3, r5
 8007dec:	d906      	bls.n	8007dfc <HAL_RCC_ClockConfig+0xc8>
 8007dee:	6813      	ldr	r3, [r2, #0]
 8007df0:	f023 0301 	bic.w	r3, r3, #1
 8007df4:	6013      	str	r3, [r2, #0]
 8007df6:	6813      	ldr	r3, [r2, #0]
 8007df8:	07da      	lsls	r2, r3, #31
 8007dfa:	d4b9      	bmi.n	8007d70 <HAL_RCC_ClockConfig+0x3c>
 8007dfc:	6823      	ldr	r3, [r4, #0]
 8007dfe:	0759      	lsls	r1, r3, #29
 8007e00:	d506      	bpl.n	8007e10 <HAL_RCC_ClockConfig+0xdc>
 8007e02:	4954      	ldr	r1, [pc, #336]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007e04:	68e0      	ldr	r0, [r4, #12]
 8007e06:	688a      	ldr	r2, [r1, #8]
 8007e08:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007e0c:	4302      	orrs	r2, r0
 8007e0e:	608a      	str	r2, [r1, #8]
 8007e10:	071b      	lsls	r3, r3, #28
 8007e12:	d420      	bmi.n	8007e56 <HAL_RCC_ClockConfig+0x122>
 8007e14:	494f      	ldr	r1, [pc, #316]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007e16:	688a      	ldr	r2, [r1, #8]
 8007e18:	f002 030c 	and.w	r3, r2, #12
 8007e1c:	2b08      	cmp	r3, #8
 8007e1e:	d079      	beq.n	8007f14 <HAL_RCC_ClockConfig+0x1e0>
 8007e20:	2b0c      	cmp	r3, #12
 8007e22:	d050      	beq.n	8007ec6 <HAL_RCC_ClockConfig+0x192>
 8007e24:	2b04      	cmp	r3, #4
 8007e26:	d044      	beq.n	8007eb2 <HAL_RCC_ClockConfig+0x17e>
 8007e28:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8007e2c:	684b      	ldr	r3, [r1, #4]
 8007e2e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007e32:	3301      	adds	r3, #1
 8007e34:	4098      	lsls	r0, r3
 8007e36:	4b47      	ldr	r3, [pc, #284]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007e38:	4a47      	ldr	r2, [pc, #284]	; (8007f58 <HAL_RCC_ClockConfig+0x224>)
 8007e3a:	689b      	ldr	r3, [r3, #8]
 8007e3c:	4947      	ldr	r1, [pc, #284]	; (8007f5c <HAL_RCC_ClockConfig+0x228>)
 8007e3e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007e42:	5cd3      	ldrb	r3, [r2, r3]
 8007e44:	4a46      	ldr	r2, [pc, #280]	; (8007f60 <HAL_RCC_ClockConfig+0x22c>)
 8007e46:	fa20 f303 	lsr.w	r3, r0, r3
 8007e4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007e4e:	6808      	ldr	r0, [r1, #0]
 8007e50:	6013      	str	r3, [r2, #0]
 8007e52:	f7fd bd37 	b.w	80058c4 <HAL_InitTick>
 8007e56:	4a3f      	ldr	r2, [pc, #252]	; (8007f54 <HAL_RCC_ClockConfig+0x220>)
 8007e58:	6921      	ldr	r1, [r4, #16]
 8007e5a:	6893      	ldr	r3, [r2, #8]
 8007e5c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8007e60:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007e64:	6093      	str	r3, [r2, #8]
 8007e66:	e7d5      	b.n	8007e14 <HAL_RCC_ClockConfig+0xe0>
 8007e68:	f7fd fd6e 	bl	8005948 <HAL_GetTick>
 8007e6c:	1bc3      	subs	r3, r0, r7
 8007e6e:	4543      	cmp	r3, r8
 8007e70:	d827      	bhi.n	8007ec2 <HAL_RCC_ClockConfig+0x18e>
 8007e72:	68b3      	ldr	r3, [r6, #8]
 8007e74:	f003 030c 	and.w	r3, r3, #12
 8007e78:	2b08      	cmp	r3, #8
 8007e7a:	d1f5      	bne.n	8007e68 <HAL_RCC_ClockConfig+0x134>
 8007e7c:	e7b1      	b.n	8007de2 <HAL_RCC_ClockConfig+0xae>
 8007e7e:	f7fd fd63 	bl	8005948 <HAL_GetTick>
 8007e82:	1bc0      	subs	r0, r0, r7
 8007e84:	4540      	cmp	r0, r8
 8007e86:	d81c      	bhi.n	8007ec2 <HAL_RCC_ClockConfig+0x18e>
 8007e88:	68b3      	ldr	r3, [r6, #8]
 8007e8a:	f003 030c 	and.w	r3, r3, #12
 8007e8e:	2b0c      	cmp	r3, #12
 8007e90:	d1f5      	bne.n	8007e7e <HAL_RCC_ClockConfig+0x14a>
 8007e92:	e7a6      	b.n	8007de2 <HAL_RCC_ClockConfig+0xae>
 8007e94:	f7fd fd58 	bl	8005948 <HAL_GetTick>
 8007e98:	1bc0      	subs	r0, r0, r7
 8007e9a:	4540      	cmp	r0, r8
 8007e9c:	d811      	bhi.n	8007ec2 <HAL_RCC_ClockConfig+0x18e>
 8007e9e:	68b3      	ldr	r3, [r6, #8]
 8007ea0:	f003 030c 	and.w	r3, r3, #12
 8007ea4:	2b04      	cmp	r3, #4
 8007ea6:	d1f5      	bne.n	8007e94 <HAL_RCC_ClockConfig+0x160>
 8007ea8:	e79b      	b.n	8007de2 <HAL_RCC_ClockConfig+0xae>
 8007eaa:	019f      	lsls	r7, r3, #6
 8007eac:	f53f af7d 	bmi.w	8007daa <HAL_RCC_ClockConfig+0x76>
 8007eb0:	e75e      	b.n	8007d70 <HAL_RCC_ClockConfig+0x3c>
 8007eb2:	482c      	ldr	r0, [pc, #176]	; (8007f64 <HAL_RCC_ClockConfig+0x230>)
 8007eb4:	e7bf      	b.n	8007e36 <HAL_RCC_ClockConfig+0x102>
 8007eb6:	039b      	lsls	r3, r3, #14
 8007eb8:	f53f af77 	bmi.w	8007daa <HAL_RCC_ClockConfig+0x76>
 8007ebc:	e758      	b.n	8007d70 <HAL_RCC_ClockConfig+0x3c>
 8007ebe:	2001      	movs	r0, #1
 8007ec0:	4770      	bx	lr
 8007ec2:	2003      	movs	r0, #3
 8007ec4:	e755      	b.n	8007d72 <HAL_RCC_ClockConfig+0x3e>
 8007ec6:	4828      	ldr	r0, [pc, #160]	; (8007f68 <HAL_RCC_ClockConfig+0x234>)
 8007ec8:	688b      	ldr	r3, [r1, #8]
 8007eca:	f3c2 4183 	ubfx	r1, r2, #18, #4
 8007ece:	5c44      	ldrb	r4, [r0, r1]
 8007ed0:	f3c2 5281 	ubfx	r2, r2, #22, #2
 8007ed4:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8007ed8:	f102 0201 	add.w	r2, r2, #1
 8007edc:	ea4f 1144 	mov.w	r1, r4, lsl #5
 8007ee0:	d01a      	beq.n	8007f18 <HAL_RCC_ClockConfig+0x1e4>
 8007ee2:	1b09      	subs	r1, r1, r4
 8007ee4:	eb65 0505 	sbc.w	r5, r5, r5
 8007ee8:	01ab      	lsls	r3, r5, #6
 8007eea:	0188      	lsls	r0, r1, #6
 8007eec:	1a40      	subs	r0, r0, r1
 8007eee:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007ef2:	eb63 0305 	sbc.w	r3, r3, r5
 8007ef6:	00c1      	lsls	r1, r0, #3
 8007ef8:	00db      	lsls	r3, r3, #3
 8007efa:	190c      	adds	r4, r1, r4
 8007efc:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8007f00:	f143 0300 	adc.w	r3, r3, #0
 8007f04:	0259      	lsls	r1, r3, #9
 8007f06:	0260      	lsls	r0, r4, #9
 8007f08:	2300      	movs	r3, #0
 8007f0a:	ea41 51d4 	orr.w	r1, r1, r4, lsr #23
 8007f0e:	f7f9 f941 	bl	8001194 <__aeabi_uldivmod>
 8007f12:	e790      	b.n	8007e36 <HAL_RCC_ClockConfig+0x102>
 8007f14:	4815      	ldr	r0, [pc, #84]	; (8007f6c <HAL_RCC_ClockConfig+0x238>)
 8007f16:	e78e      	b.n	8007e36 <HAL_RCC_ClockConfig+0x102>
 8007f18:	1b0d      	subs	r5, r1, r4
 8007f1a:	eb66 0606 	sbc.w	r6, r6, r6
 8007f1e:	01b0      	lsls	r0, r6, #6
 8007f20:	01a9      	lsls	r1, r5, #6
 8007f22:	1b49      	subs	r1, r1, r5
 8007f24:	ea40 6095 	orr.w	r0, r0, r5, lsr #26
 8007f28:	eb60 0006 	sbc.w	r0, r0, r6
 8007f2c:	00c0      	lsls	r0, r0, #3
 8007f2e:	ea40 7051 	orr.w	r0, r0, r1, lsr #29
 8007f32:	00c9      	lsls	r1, r1, #3
 8007f34:	190c      	adds	r4, r1, r4
 8007f36:	f140 0000 	adc.w	r0, r0, #0
 8007f3a:	0281      	lsls	r1, r0, #10
 8007f3c:	ea41 5194 	orr.w	r1, r1, r4, lsr #22
 8007f40:	02a0      	lsls	r0, r4, #10
 8007f42:	f7f9 f927 	bl	8001194 <__aeabi_uldivmod>
 8007f46:	e776      	b.n	8007e36 <HAL_RCC_ClockConfig+0x102>
 8007f48:	079e      	lsls	r6, r3, #30
 8007f4a:	f53f af2e 	bmi.w	8007daa <HAL_RCC_ClockConfig+0x76>
 8007f4e:	e70f      	b.n	8007d70 <HAL_RCC_ClockConfig+0x3c>
 8007f50:	40023c00 	.word	0x40023c00
 8007f54:	40023800 	.word	0x40023800
 8007f58:	08010ce8 	.word	0x08010ce8
 8007f5c:	20000030 	.word	0x20000030
 8007f60:	20000024 	.word	0x20000024
 8007f64:	00f42400 	.word	0x00f42400
 8007f68:	08010cdc 	.word	0x08010cdc
 8007f6c:	007a1200 	.word	0x007a1200

08007f70 <HAL_RCC_GetPCLK1Freq>:
 8007f70:	4b04      	ldr	r3, [pc, #16]	; (8007f84 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007f72:	4a05      	ldr	r2, [pc, #20]	; (8007f88 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007f74:	689b      	ldr	r3, [r3, #8]
 8007f76:	4905      	ldr	r1, [pc, #20]	; (8007f8c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007f78:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8007f7c:	5ccb      	ldrb	r3, [r1, r3]
 8007f7e:	6810      	ldr	r0, [r2, #0]
 8007f80:	40d8      	lsrs	r0, r3
 8007f82:	4770      	bx	lr
 8007f84:	40023800 	.word	0x40023800
 8007f88:	20000024 	.word	0x20000024
 8007f8c:	08010cf8 	.word	0x08010cf8

08007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 8007f90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f94:	461d      	mov	r5, r3
 8007f96:	4616      	mov	r6, r2
 8007f98:	b082      	sub	sp, #8
 8007f9a:	460c      	mov	r4, r1
 8007f9c:	4607      	mov	r7, r0
 8007f9e:	f7fd fcd3 	bl	8005948 <HAL_GetTick>
 8007fa2:	4435      	add	r5, r6
 8007fa4:	1a2d      	subs	r5, r5, r0
 8007fa6:	f7fd fccf 	bl	8005948 <HAL_GetTick>
 8007faa:	4680      	mov	r8, r0
 8007fac:	4b26      	ldr	r3, [pc, #152]	; (8008048 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8007fb4:	fb05 f303 	mul.w	r3, r5, r3
 8007fb8:	9301      	str	r3, [sp, #4]
 8007fba:	1c73      	adds	r3, r6, #1
 8007fbc:	6839      	ldr	r1, [r7, #0]
 8007fbe:	d107      	bne.n	8007fd0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 8007fc0:	688b      	ldr	r3, [r1, #8]
 8007fc2:	ea34 0303 	bics.w	r3, r4, r3
 8007fc6:	d0fb      	beq.n	8007fc0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
 8007fc8:	2000      	movs	r0, #0
 8007fca:	b002      	add	sp, #8
 8007fcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007fd0:	688b      	ldr	r3, [r1, #8]
 8007fd2:	ea34 0303 	bics.w	r3, r4, r3
 8007fd6:	d1f7      	bne.n	8007fc8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
 8007fd8:	f7fd fcb6 	bl	8005948 <HAL_GetTick>
 8007fdc:	eba0 0308 	sub.w	r3, r0, r8
 8007fe0:	42ab      	cmp	r3, r5
 8007fe2:	d207      	bcs.n	8007ff4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
 8007fe4:	9b01      	ldr	r3, [sp, #4]
 8007fe6:	2b00      	cmp	r3, #0
 8007fe8:	9b01      	ldr	r3, [sp, #4]
 8007fea:	bf08      	it	eq
 8007fec:	2500      	moveq	r5, #0
 8007fee:	3b01      	subs	r3, #1
 8007ff0:	9301      	str	r3, [sp, #4]
 8007ff2:	e7e2      	b.n	8007fba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
 8007ff4:	e9d7 3100 	ldrd	r3, r1, [r7]
 8007ff8:	685a      	ldr	r2, [r3, #4]
 8007ffa:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8007ffe:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008002:	605a      	str	r2, [r3, #4]
 8008004:	d014      	beq.n	8008030 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
 8008006:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008008:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800800c:	d007      	beq.n	800801e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8e>
 800800e:	2201      	movs	r2, #1
 8008010:	2300      	movs	r3, #0
 8008012:	2003      	movs	r0, #3
 8008014:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
 8008018:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800801c:	e7d5      	b.n	8007fca <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
 800801e:	681a      	ldr	r2, [r3, #0]
 8008020:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008024:	601a      	str	r2, [r3, #0]
 8008026:	681a      	ldr	r2, [r3, #0]
 8008028:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800802c:	601a      	str	r2, [r3, #0]
 800802e:	e7ee      	b.n	800800e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
 8008030:	68ba      	ldr	r2, [r7, #8]
 8008032:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008036:	d002      	beq.n	800803e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
 8008038:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800803c:	d1e3      	bne.n	8008006 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800803e:	681a      	ldr	r2, [r3, #0]
 8008040:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008044:	601a      	str	r2, [r3, #0]
 8008046:	e7de      	b.n	8008006 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8008048:	20000024 	.word	0x20000024

0800804c <HAL_SPI_Init>:
 800804c:	2800      	cmp	r0, #0
 800804e:	d053      	beq.n	80080f8 <HAL_SPI_Init+0xac>
 8008050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008052:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8008054:	4604      	mov	r4, r0
 8008056:	2b00      	cmp	r3, #0
 8008058:	d03f      	beq.n	80080da <HAL_SPI_Init+0x8e>
 800805a:	2300      	movs	r3, #0
 800805c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008060:	2000      	movs	r0, #0
 8008062:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8008066:	62a0      	str	r0, [r4, #40]	; 0x28
 8008068:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800806c:	2a00      	cmp	r2, #0
 800806e:	d03a      	beq.n	80080e6 <HAL_SPI_Init+0x9a>
 8008070:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8008074:	2702      	movs	r7, #2
 8008076:	f04f 0c01 	mov.w	ip, #1
 800807a:	2600      	movs	r6, #0
 800807c:	f402 4204 	and.w	r2, r2, #33792	; 0x8400
 8008080:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8008084:	4313      	orrs	r3, r2
 8008086:	68e2      	ldr	r2, [r4, #12]
 8008088:	f884 7051 	strb.w	r7, [r4, #81]	; 0x51
 800808c:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8008090:	4313      	orrs	r3, r2
 8008092:	6922      	ldr	r2, [r4, #16]
 8008094:	69a1      	ldr	r1, [r4, #24]
 8008096:	403a      	ands	r2, r7
 8008098:	4313      	orrs	r3, r2
 800809a:	6962      	ldr	r2, [r4, #20]
 800809c:	6825      	ldr	r5, [r4, #0]
 800809e:	ea02 020c 	and.w	r2, r2, ip
 80080a2:	431a      	orrs	r2, r3
 80080a4:	69e3      	ldr	r3, [r4, #28]
 80080a6:	f003 0738 	and.w	r7, r3, #56	; 0x38
 80080aa:	6a23      	ldr	r3, [r4, #32]
 80080ac:	f003 0e80 	and.w	lr, r3, #128	; 0x80
 80080b0:	f401 7300 	and.w	r3, r1, #512	; 0x200
 80080b4:	4313      	orrs	r3, r2
 80080b6:	433b      	orrs	r3, r7
 80080b8:	682a      	ldr	r2, [r5, #0]
 80080ba:	ea43 030e 	orr.w	r3, r3, lr
 80080be:	0c09      	lsrs	r1, r1, #16
 80080c0:	4303      	orrs	r3, r0
 80080c2:	f001 0104 	and.w	r1, r1, #4
 80080c6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80080ca:	602a      	str	r2, [r5, #0]
 80080cc:	602b      	str	r3, [r5, #0]
 80080ce:	6069      	str	r1, [r5, #4]
 80080d0:	6566      	str	r6, [r4, #84]	; 0x54
 80080d2:	f884 c051 	strb.w	ip, [r4, #81]	; 0x51
 80080d6:	4630      	mov	r0, r6
 80080d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080da:	6842      	ldr	r2, [r0, #4]
 80080dc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80080e0:	d0be      	beq.n	8008060 <HAL_SPI_Init+0x14>
 80080e2:	61c3      	str	r3, [r0, #28]
 80080e4:	e7bc      	b.n	8008060 <HAL_SPI_Init+0x14>
 80080e6:	4620      	mov	r0, r4
 80080e8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
 80080ec:	f7fc ffba 	bl	8005064 <HAL_SPI_MspInit>
 80080f0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80080f2:	f403 5000 	and.w	r0, r3, #8192	; 0x2000
 80080f6:	e7bb      	b.n	8008070 <HAL_SPI_Init+0x24>
 80080f8:	2001      	movs	r0, #1
 80080fa:	4770      	bx	lr

080080fc <HAL_SPI_Transmit>:
 80080fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008100:	461d      	mov	r5, r3
 8008102:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8008106:	b082      	sub	sp, #8
 8008108:	2b01      	cmp	r3, #1
 800810a:	f000 8088 	beq.w	800821e <HAL_SPI_Transmit+0x122>
 800810e:	2301      	movs	r3, #1
 8008110:	4604      	mov	r4, r0
 8008112:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8008116:	4688      	mov	r8, r1
 8008118:	4617      	mov	r7, r2
 800811a:	f7fd fc15 	bl	8005948 <HAL_GetTick>
 800811e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008122:	4606      	mov	r6, r0
 8008124:	2b01      	cmp	r3, #1
 8008126:	b2d8      	uxtb	r0, r3
 8008128:	d009      	beq.n	800813e <HAL_SPI_Transmit+0x42>
 800812a:	2002      	movs	r0, #2
 800812c:	2201      	movs	r2, #1
 800812e:	2300      	movs	r3, #0
 8008130:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008134:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008138:	b002      	add	sp, #8
 800813a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800813e:	f1b8 0f00 	cmp.w	r8, #0
 8008142:	d0f3      	beq.n	800812c <HAL_SPI_Transmit+0x30>
 8008144:	2f00      	cmp	r7, #0
 8008146:	d0f1      	beq.n	800812c <HAL_SPI_Transmit+0x30>
 8008148:	2300      	movs	r3, #0
 800814a:	2203      	movs	r2, #3
 800814c:	63a3      	str	r3, [r4, #56]	; 0x38
 800814e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008152:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8008154:	6563      	str	r3, [r4, #84]	; 0x54
 8008156:	6463      	str	r3, [r4, #68]	; 0x44
 8008158:	86e7      	strh	r7, [r4, #54]	; 0x36
 800815a:	6423      	str	r3, [r4, #64]	; 0x40
 800815c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800815e:	68a3      	ldr	r3, [r4, #8]
 8008160:	6820      	ldr	r0, [r4, #0]
 8008162:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008166:	4684      	mov	ip, r0
 8008168:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 800816c:	86a7      	strh	r7, [r4, #52]	; 0x34
 800816e:	f000 8083 	beq.w	8008278 <HAL_SPI_Transmit+0x17c>
 8008172:	6803      	ldr	r3, [r0, #0]
 8008174:	065b      	lsls	r3, r3, #25
 8008176:	d403      	bmi.n	8008180 <HAL_SPI_Transmit+0x84>
 8008178:	6803      	ldr	r3, [r0, #0]
 800817a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800817e:	6003      	str	r3, [r0, #0]
 8008180:	68e3      	ldr	r3, [r4, #12]
 8008182:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008186:	6863      	ldr	r3, [r4, #4]
 8008188:	d04d      	beq.n	8008226 <HAL_SPI_Transmit+0x12a>
 800818a:	2b00      	cmp	r3, #0
 800818c:	f000 8096 	beq.w	80082bc <HAL_SPI_Transmit+0x1c0>
 8008190:	2f01      	cmp	r7, #1
 8008192:	f000 8093 	beq.w	80082bc <HAL_SPI_Transmit+0x1c0>
 8008196:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008198:	b29b      	uxth	r3, r3
 800819a:	b1bb      	cbz	r3, 80081cc <HAL_SPI_Transmit+0xd0>
 800819c:	2d00      	cmp	r5, #0
 800819e:	f000 80cc 	beq.w	800833a <HAL_SPI_Transmit+0x23e>
 80081a2:	1c6f      	adds	r7, r5, #1
 80081a4:	d17f      	bne.n	80082a6 <HAL_SPI_Transmit+0x1aa>
 80081a6:	6823      	ldr	r3, [r4, #0]
 80081a8:	689a      	ldr	r2, [r3, #8]
 80081aa:	0790      	lsls	r0, r2, #30
 80081ac:	f140 8091 	bpl.w	80082d2 <HAL_SPI_Transmit+0x1d6>
 80081b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80081b2:	7812      	ldrb	r2, [r2, #0]
 80081b4:	731a      	strb	r2, [r3, #12]
 80081b6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 80081b8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80081ba:	3901      	subs	r1, #1
 80081bc:	b289      	uxth	r1, r1
 80081be:	86e1      	strh	r1, [r4, #54]	; 0x36
 80081c0:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 80081c2:	3301      	adds	r3, #1
 80081c4:	b289      	uxth	r1, r1
 80081c6:	6323      	str	r3, [r4, #48]	; 0x30
 80081c8:	2900      	cmp	r1, #0
 80081ca:	d1ec      	bne.n	80081a6 <HAL_SPI_Transmit+0xaa>
 80081cc:	6862      	ldr	r2, [r4, #4]
 80081ce:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80081d2:	4b72      	ldr	r3, [pc, #456]	; (800839c <HAL_SPI_Transmit+0x2a0>)
 80081d4:	4872      	ldr	r0, [pc, #456]	; (80083a0 <HAL_SPI_Transmit+0x2a4>)
 80081d6:	681b      	ldr	r3, [r3, #0]
 80081d8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80081dc:	fba0 0303 	umull	r0, r3, r0, r3
 80081e0:	ea4f 5353 	mov.w	r3, r3, lsr #21
 80081e4:	fb01 f303 	mul.w	r3, r1, r3
 80081e8:	9301      	str	r3, [sp, #4]
 80081ea:	d107      	bne.n	80081fc <HAL_SPI_Transmit+0x100>
 80081ec:	e0c6      	b.n	800837c <HAL_SPI_Transmit+0x280>
 80081ee:	9b01      	ldr	r3, [sp, #4]
 80081f0:	6822      	ldr	r2, [r4, #0]
 80081f2:	3b01      	subs	r3, #1
 80081f4:	9301      	str	r3, [sp, #4]
 80081f6:	6893      	ldr	r3, [r2, #8]
 80081f8:	061b      	lsls	r3, r3, #24
 80081fa:	d502      	bpl.n	8008202 <HAL_SPI_Transmit+0x106>
 80081fc:	9b01      	ldr	r3, [sp, #4]
 80081fe:	2b00      	cmp	r3, #0
 8008200:	d1f5      	bne.n	80081ee <HAL_SPI_Transmit+0xf2>
 8008202:	68a3      	ldr	r3, [r4, #8]
 8008204:	b933      	cbnz	r3, 8008214 <HAL_SPI_Transmit+0x118>
 8008206:	6822      	ldr	r2, [r4, #0]
 8008208:	9300      	str	r3, [sp, #0]
 800820a:	68d3      	ldr	r3, [r2, #12]
 800820c:	9300      	str	r3, [sp, #0]
 800820e:	6893      	ldr	r3, [r2, #8]
 8008210:	9300      	str	r3, [sp, #0]
 8008212:	9b00      	ldr	r3, [sp, #0]
 8008214:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008216:	3800      	subs	r0, #0
 8008218:	bf18      	it	ne
 800821a:	2001      	movne	r0, #1
 800821c:	e786      	b.n	800812c <HAL_SPI_Transmit+0x30>
 800821e:	2002      	movs	r0, #2
 8008220:	b002      	add	sp, #8
 8008222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008226:	461a      	mov	r2, r3
 8008228:	2b00      	cmp	r3, #0
 800822a:	d174      	bne.n	8008316 <HAL_SPI_Transmit+0x21a>
 800822c:	4641      	mov	r1, r8
 800822e:	f831 7b02 	ldrh.w	r7, [r1], #2
 8008232:	60c7      	str	r7, [r0, #12]
 8008234:	6321      	str	r1, [r4, #48]	; 0x30
 8008236:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8008238:	3901      	subs	r1, #1
 800823a:	b289      	uxth	r1, r1
 800823c:	86e1      	strh	r1, [r4, #54]	; 0x36
 800823e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8008240:	b289      	uxth	r1, r1
 8008242:	2900      	cmp	r1, #0
 8008244:	d0c3      	beq.n	80081ce <HAL_SPI_Transmit+0xd2>
 8008246:	2d00      	cmp	r5, #0
 8008248:	f000 808b 	beq.w	8008362 <HAL_SPI_Transmit+0x266>
 800824c:	1c69      	adds	r1, r5, #1
 800824e:	d158      	bne.n	8008302 <HAL_SPI_Transmit+0x206>
 8008250:	6883      	ldr	r3, [r0, #8]
 8008252:	079a      	lsls	r2, r3, #30
 8008254:	f140 8089 	bpl.w	800836a <HAL_SPI_Transmit+0x26e>
 8008258:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800825a:	f832 3b02 	ldrh.w	r3, [r2], #2
 800825e:	60c3      	str	r3, [r0, #12]
 8008260:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008262:	6322      	str	r2, [r4, #48]	; 0x30
 8008264:	3b01      	subs	r3, #1
 8008266:	b29b      	uxth	r3, r3
 8008268:	86e3      	strh	r3, [r4, #54]	; 0x36
 800826a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800826c:	b29b      	uxth	r3, r3
 800826e:	2b00      	cmp	r3, #0
 8008270:	d1ee      	bne.n	8008250 <HAL_SPI_Transmit+0x154>
 8008272:	6863      	ldr	r3, [r4, #4]
 8008274:	461a      	mov	r2, r3
 8008276:	e7aa      	b.n	80081ce <HAL_SPI_Transmit+0xd2>
 8008278:	6803      	ldr	r3, [r0, #0]
 800827a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800827e:	6003      	str	r3, [r0, #0]
 8008280:	6803      	ldr	r3, [r0, #0]
 8008282:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008286:	6003      	str	r3, [r0, #0]
 8008288:	e773      	b.n	8008172 <HAL_SPI_Transmit+0x76>
 800828a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800828c:	7812      	ldrb	r2, [r2, #0]
 800828e:	731a      	strb	r2, [r3, #12]
 8008290:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008292:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008294:	3b01      	subs	r3, #1
 8008296:	3201      	adds	r2, #1
 8008298:	b29b      	uxth	r3, r3
 800829a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800829c:	6322      	str	r2, [r4, #48]	; 0x30
 800829e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082a0:	b29b      	uxth	r3, r3
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d092      	beq.n	80081cc <HAL_SPI_Transmit+0xd0>
 80082a6:	6823      	ldr	r3, [r4, #0]
 80082a8:	689a      	ldr	r2, [r3, #8]
 80082aa:	0791      	lsls	r1, r2, #30
 80082ac:	d4ed      	bmi.n	800828a <HAL_SPI_Transmit+0x18e>
 80082ae:	f7fd fb4b 	bl	8005948 <HAL_GetTick>
 80082b2:	1b83      	subs	r3, r0, r6
 80082b4:	429d      	cmp	r5, r3
 80082b6:	d8f2      	bhi.n	800829e <HAL_SPI_Transmit+0x1a2>
 80082b8:	2003      	movs	r0, #3
 80082ba:	e737      	b.n	800812c <HAL_SPI_Transmit+0x30>
 80082bc:	f898 3000 	ldrb.w	r3, [r8]
 80082c0:	7303      	strb	r3, [r0, #12]
 80082c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082c4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80082c6:	3b01      	subs	r3, #1
 80082c8:	3201      	adds	r2, #1
 80082ca:	b29b      	uxth	r3, r3
 80082cc:	6322      	str	r2, [r4, #48]	; 0x30
 80082ce:	86e3      	strh	r3, [r4, #54]	; 0x36
 80082d0:	e761      	b.n	8008196 <HAL_SPI_Transmit+0x9a>
 80082d2:	f7fd fb39 	bl	8005948 <HAL_GetTick>
 80082d6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082d8:	b29b      	uxth	r3, r3
 80082da:	2b00      	cmp	r3, #0
 80082dc:	f47f af63 	bne.w	80081a6 <HAL_SPI_Transmit+0xaa>
 80082e0:	e774      	b.n	80081cc <HAL_SPI_Transmit+0xd0>
 80082e2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80082e4:	f832 3b02 	ldrh.w	r3, [r2], #2
 80082e8:	f8cc 300c 	str.w	r3, [ip, #12]
 80082ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082ee:	6322      	str	r2, [r4, #48]	; 0x30
 80082f0:	3b01      	subs	r3, #1
 80082f2:	b29b      	uxth	r3, r3
 80082f4:	86e3      	strh	r3, [r4, #54]	; 0x36
 80082f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80082f8:	b29b      	uxth	r3, r3
 80082fa:	2b00      	cmp	r3, #0
 80082fc:	d0b9      	beq.n	8008272 <HAL_SPI_Transmit+0x176>
 80082fe:	f8d4 c000 	ldr.w	ip, [r4]
 8008302:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8008306:	079b      	lsls	r3, r3, #30
 8008308:	d4eb      	bmi.n	80082e2 <HAL_SPI_Transmit+0x1e6>
 800830a:	f7fd fb1d 	bl	8005948 <HAL_GetTick>
 800830e:	1b83      	subs	r3, r0, r6
 8008310:	429d      	cmp	r5, r3
 8008312:	d9d1      	bls.n	80082b8 <HAL_SPI_Transmit+0x1bc>
 8008314:	e7ef      	b.n	80082f6 <HAL_SPI_Transmit+0x1fa>
 8008316:	2f01      	cmp	r7, #1
 8008318:	d191      	bne.n	800823e <HAL_SPI_Transmit+0x142>
 800831a:	e787      	b.n	800822c <HAL_SPI_Transmit+0x130>
 800831c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800831e:	7812      	ldrb	r2, [r2, #0]
 8008320:	731a      	strb	r2, [r3, #12]
 8008322:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008324:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008326:	3b01      	subs	r3, #1
 8008328:	b29b      	uxth	r3, r3
 800832a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800832c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800832e:	3201      	adds	r2, #1
 8008330:	b29b      	uxth	r3, r3
 8008332:	6322      	str	r2, [r4, #48]	; 0x30
 8008334:	2b00      	cmp	r3, #0
 8008336:	f43f af49 	beq.w	80081cc <HAL_SPI_Transmit+0xd0>
 800833a:	6823      	ldr	r3, [r4, #0]
 800833c:	689a      	ldr	r2, [r3, #8]
 800833e:	0792      	lsls	r2, r2, #30
 8008340:	d4ec      	bmi.n	800831c <HAL_SPI_Transmit+0x220>
 8008342:	f7fd fb01 	bl	8005948 <HAL_GetTick>
 8008346:	e7b7      	b.n	80082b8 <HAL_SPI_Transmit+0x1bc>
 8008348:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800834a:	f831 2b02 	ldrh.w	r2, [r1], #2
 800834e:	60c2      	str	r2, [r0, #12]
 8008350:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008352:	6321      	str	r1, [r4, #48]	; 0x30
 8008354:	3a01      	subs	r2, #1
 8008356:	b292      	uxth	r2, r2
 8008358:	86e2      	strh	r2, [r4, #54]	; 0x36
 800835a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800835c:	b292      	uxth	r2, r2
 800835e:	2a00      	cmp	r2, #0
 8008360:	d088      	beq.n	8008274 <HAL_SPI_Transmit+0x178>
 8008362:	6882      	ldr	r2, [r0, #8]
 8008364:	0797      	lsls	r7, r2, #30
 8008366:	d5ec      	bpl.n	8008342 <HAL_SPI_Transmit+0x246>
 8008368:	e7ee      	b.n	8008348 <HAL_SPI_Transmit+0x24c>
 800836a:	f7fd faed 	bl	8005948 <HAL_GetTick>
 800836e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008370:	b29b      	uxth	r3, r3
 8008372:	2b00      	cmp	r3, #0
 8008374:	f43f af7d 	beq.w	8008272 <HAL_SPI_Transmit+0x176>
 8008378:	6820      	ldr	r0, [r4, #0]
 800837a:	e769      	b.n	8008250 <HAL_SPI_Transmit+0x154>
 800837c:	4633      	mov	r3, r6
 800837e:	462a      	mov	r2, r5
 8008380:	2180      	movs	r1, #128	; 0x80
 8008382:	4620      	mov	r0, r4
 8008384:	f7ff fe04 	bl	8007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008388:	2800      	cmp	r0, #0
 800838a:	f43f af3a 	beq.w	8008202 <HAL_SPI_Transmit+0x106>
 800838e:	2220      	movs	r2, #32
 8008390:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008392:	4313      	orrs	r3, r2
 8008394:	6563      	str	r3, [r4, #84]	; 0x54
 8008396:	6562      	str	r2, [r4, #84]	; 0x54
 8008398:	e733      	b.n	8008202 <HAL_SPI_Transmit+0x106>
 800839a:	bf00      	nop
 800839c:	20000024 	.word	0x20000024
 80083a0:	165e9f81 	.word	0x165e9f81

080083a4 <HAL_SPI_TransmitReceive>:
 80083a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80083a8:	4604      	mov	r4, r0
 80083aa:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 80083ae:	b082      	sub	sp, #8
 80083b0:	2801      	cmp	r0, #1
 80083b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80083b4:	f000 8089 	beq.w	80084ca <HAL_SPI_TransmitReceive+0x126>
 80083b8:	4698      	mov	r8, r3
 80083ba:	2301      	movs	r3, #1
 80083bc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80083c0:	468a      	mov	sl, r1
 80083c2:	4691      	mov	r9, r2
 80083c4:	f7fd fac0 	bl	8005948 <HAL_GetTick>
 80083c8:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
 80083cc:	4606      	mov	r6, r0
 80083ce:	2f01      	cmp	r7, #1
 80083d0:	6863      	ldr	r3, [r4, #4]
 80083d2:	b2f9      	uxtb	r1, r7
 80083d4:	d011      	beq.n	80083fa <HAL_SPI_TransmitReceive+0x56>
 80083d6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80083da:	d009      	beq.n	80083f0 <HAL_SPI_TransmitReceive+0x4c>
 80083dc:	2002      	movs	r0, #2
 80083de:	2201      	movs	r2, #1
 80083e0:	2300      	movs	r3, #0
 80083e2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 80083e6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80083ea:	b002      	add	sp, #8
 80083ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80083f0:	68a2      	ldr	r2, [r4, #8]
 80083f2:	2a00      	cmp	r2, #0
 80083f4:	d1f2      	bne.n	80083dc <HAL_SPI_TransmitReceive+0x38>
 80083f6:	2904      	cmp	r1, #4
 80083f8:	d1f0      	bne.n	80083dc <HAL_SPI_TransmitReceive+0x38>
 80083fa:	f1ba 0f00 	cmp.w	sl, #0
 80083fe:	d068      	beq.n	80084d2 <HAL_SPI_TransmitReceive+0x12e>
 8008400:	f1b9 0f00 	cmp.w	r9, #0
 8008404:	d065      	beq.n	80084d2 <HAL_SPI_TransmitReceive+0x12e>
 8008406:	f1b8 0f00 	cmp.w	r8, #0
 800840a:	d062      	beq.n	80084d2 <HAL_SPI_TransmitReceive+0x12e>
 800840c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8008410:	6820      	ldr	r0, [r4, #0]
 8008412:	2a04      	cmp	r2, #4
 8008414:	bf1c      	itt	ne
 8008416:	2205      	movne	r2, #5
 8008418:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
 800841c:	2200      	movs	r2, #0
 800841e:	6562      	str	r2, [r4, #84]	; 0x54
 8008420:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 8008424:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
 8008428:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
 800842c:	6802      	ldr	r2, [r0, #0]
 800842e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 8008432:	0651      	lsls	r1, r2, #25
 8008434:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8008438:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 800843c:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
 8008440:	d403      	bmi.n	800844a <HAL_SPI_TransmitReceive+0xa6>
 8008442:	6802      	ldr	r2, [r0, #0]
 8008444:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008448:	6002      	str	r2, [r0, #0]
 800844a:	68e2      	ldr	r2, [r4, #12]
 800844c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8008450:	d04f      	beq.n	80084f2 <HAL_SPI_TransmitReceive+0x14e>
 8008452:	2b00      	cmp	r3, #0
 8008454:	d03f      	beq.n	80084d6 <HAL_SPI_TransmitReceive+0x132>
 8008456:	f1b8 0f01 	cmp.w	r8, #1
 800845a:	d03c      	beq.n	80084d6 <HAL_SPI_TransmitReceive+0x132>
 800845c:	2701      	movs	r7, #1
 800845e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008460:	b29b      	uxth	r3, r3
 8008462:	b91b      	cbnz	r3, 800846c <HAL_SPI_TransmitReceive+0xc8>
 8008464:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008466:	b29b      	uxth	r3, r3
 8008468:	2b00      	cmp	r3, #0
 800846a:	d07f      	beq.n	800856c <HAL_SPI_TransmitReceive+0x1c8>
 800846c:	6822      	ldr	r2, [r4, #0]
 800846e:	6893      	ldr	r3, [r2, #8]
 8008470:	0799      	lsls	r1, r3, #30
 8008472:	d50f      	bpl.n	8008494 <HAL_SPI_TransmitReceive+0xf0>
 8008474:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008476:	b29b      	uxth	r3, r3
 8008478:	b163      	cbz	r3, 8008494 <HAL_SPI_TransmitReceive+0xf0>
 800847a:	b15f      	cbz	r7, 8008494 <HAL_SPI_TransmitReceive+0xf0>
 800847c:	2700      	movs	r7, #0
 800847e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008480:	781b      	ldrb	r3, [r3, #0]
 8008482:	7313      	strb	r3, [r2, #12]
 8008484:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008486:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008488:	3b01      	subs	r3, #1
 800848a:	3201      	adds	r2, #1
 800848c:	6322      	str	r2, [r4, #48]	; 0x30
 800848e:	b29b      	uxth	r3, r3
 8008490:	6822      	ldr	r2, [r4, #0]
 8008492:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008494:	6893      	ldr	r3, [r2, #8]
 8008496:	f013 0301 	ands.w	r3, r3, #1
 800849a:	d00d      	beq.n	80084b8 <HAL_SPI_TransmitReceive+0x114>
 800849c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800849e:	b289      	uxth	r1, r1
 80084a0:	b151      	cbz	r1, 80084b8 <HAL_SPI_TransmitReceive+0x114>
 80084a2:	68d2      	ldr	r2, [r2, #12]
 80084a4:	461f      	mov	r7, r3
 80084a6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80084a8:	701a      	strb	r2, [r3, #0]
 80084aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80084ac:	3301      	adds	r3, #1
 80084ae:	63a3      	str	r3, [r4, #56]	; 0x38
 80084b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084b2:	3b01      	subs	r3, #1
 80084b4:	b29b      	uxth	r3, r3
 80084b6:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80084b8:	f7fd fa46 	bl	8005948 <HAL_GetTick>
 80084bc:	1b80      	subs	r0, r0, r6
 80084be:	42a8      	cmp	r0, r5
 80084c0:	d314      	bcc.n	80084ec <HAL_SPI_TransmitReceive+0x148>
 80084c2:	1c6a      	adds	r2, r5, #1
 80084c4:	d0cb      	beq.n	800845e <HAL_SPI_TransmitReceive+0xba>
 80084c6:	2003      	movs	r0, #3
 80084c8:	e789      	b.n	80083de <HAL_SPI_TransmitReceive+0x3a>
 80084ca:	2002      	movs	r0, #2
 80084cc:	b002      	add	sp, #8
 80084ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80084d2:	2001      	movs	r0, #1
 80084d4:	e783      	b.n	80083de <HAL_SPI_TransmitReceive+0x3a>
 80084d6:	f89a 3000 	ldrb.w	r3, [sl]
 80084da:	7303      	strb	r3, [r0, #12]
 80084dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80084de:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80084e0:	3b01      	subs	r3, #1
 80084e2:	3201      	adds	r2, #1
 80084e4:	b29b      	uxth	r3, r3
 80084e6:	6322      	str	r2, [r4, #48]	; 0x30
 80084e8:	86e3      	strh	r3, [r4, #54]	; 0x36
 80084ea:	e7b7      	b.n	800845c <HAL_SPI_TransmitReceive+0xb8>
 80084ec:	2d00      	cmp	r5, #0
 80084ee:	d1b6      	bne.n	800845e <HAL_SPI_TransmitReceive+0xba>
 80084f0:	e7e9      	b.n	80084c6 <HAL_SPI_TransmitReceive+0x122>
 80084f2:	2b00      	cmp	r3, #0
 80084f4:	d16c      	bne.n	80085d0 <HAL_SPI_TransmitReceive+0x22c>
 80084f6:	4651      	mov	r1, sl
 80084f8:	f831 3b02 	ldrh.w	r3, [r1], #2
 80084fc:	60c3      	str	r3, [r0, #12]
 80084fe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008500:	6321      	str	r1, [r4, #48]	; 0x30
 8008502:	3b01      	subs	r3, #1
 8008504:	b29b      	uxth	r3, r3
 8008506:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008508:	1c6a      	adds	r2, r5, #1
 800850a:	f04f 0701 	mov.w	r7, #1
 800850e:	d025      	beq.n	800855c <HAL_SPI_TransmitReceive+0x1b8>
 8008510:	e062      	b.n	80085d8 <HAL_SPI_TransmitReceive+0x234>
 8008512:	6822      	ldr	r2, [r4, #0]
 8008514:	6893      	ldr	r3, [r2, #8]
 8008516:	079b      	lsls	r3, r3, #30
 8008518:	d50d      	bpl.n	8008536 <HAL_SPI_TransmitReceive+0x192>
 800851a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800851c:	b29b      	uxth	r3, r3
 800851e:	b153      	cbz	r3, 8008536 <HAL_SPI_TransmitReceive+0x192>
 8008520:	b14f      	cbz	r7, 8008536 <HAL_SPI_TransmitReceive+0x192>
 8008522:	2700      	movs	r7, #0
 8008524:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008526:	f831 3b02 	ldrh.w	r3, [r1], #2
 800852a:	60d3      	str	r3, [r2, #12]
 800852c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800852e:	6321      	str	r1, [r4, #48]	; 0x30
 8008530:	3b01      	subs	r3, #1
 8008532:	b29b      	uxth	r3, r3
 8008534:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008536:	6893      	ldr	r3, [r2, #8]
 8008538:	f013 0301 	ands.w	r3, r3, #1
 800853c:	d00c      	beq.n	8008558 <HAL_SPI_TransmitReceive+0x1b4>
 800853e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008540:	b289      	uxth	r1, r1
 8008542:	b149      	cbz	r1, 8008558 <HAL_SPI_TransmitReceive+0x1b4>
 8008544:	461f      	mov	r7, r3
 8008546:	68d3      	ldr	r3, [r2, #12]
 8008548:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800854a:	f822 3b02 	strh.w	r3, [r2], #2
 800854e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008550:	63a2      	str	r2, [r4, #56]	; 0x38
 8008552:	3b01      	subs	r3, #1
 8008554:	b29b      	uxth	r3, r3
 8008556:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008558:	f7fd f9f6 	bl	8005948 <HAL_GetTick>
 800855c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800855e:	b29b      	uxth	r3, r3
 8008560:	2b00      	cmp	r3, #0
 8008562:	d1d6      	bne.n	8008512 <HAL_SPI_TransmitReceive+0x16e>
 8008564:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008566:	b29b      	uxth	r3, r3
 8008568:	2b00      	cmp	r3, #0
 800856a:	d1d2      	bne.n	8008512 <HAL_SPI_TransmitReceive+0x16e>
 800856c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008570:	4b32      	ldr	r3, [pc, #200]	; (800863c <HAL_SPI_TransmitReceive+0x298>)
 8008572:	4a33      	ldr	r2, [pc, #204]	; (8008640 <HAL_SPI_TransmitReceive+0x29c>)
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	fba2 2303 	umull	r2, r3, r2, r3
 800857a:	0d5b      	lsrs	r3, r3, #21
 800857c:	fb01 f303 	mul.w	r3, r1, r3
 8008580:	6862      	ldr	r2, [r4, #4]
 8008582:	9301      	str	r3, [sp, #4]
 8008584:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008588:	d114      	bne.n	80085b4 <HAL_SPI_TransmitReceive+0x210>
 800858a:	4633      	mov	r3, r6
 800858c:	462a      	mov	r2, r5
 800858e:	2180      	movs	r1, #128	; 0x80
 8008590:	4620      	mov	r0, r4
 8008592:	f7ff fcfd 	bl	8007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008596:	b180      	cbz	r0, 80085ba <HAL_SPI_TransmitReceive+0x216>
 8008598:	2220      	movs	r2, #32
 800859a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800859c:	2001      	movs	r0, #1
 800859e:	4313      	orrs	r3, r2
 80085a0:	6563      	str	r3, [r4, #84]	; 0x54
 80085a2:	6562      	str	r2, [r4, #84]	; 0x54
 80085a4:	e71b      	b.n	80083de <HAL_SPI_TransmitReceive+0x3a>
 80085a6:	9b01      	ldr	r3, [sp, #4]
 80085a8:	6822      	ldr	r2, [r4, #0]
 80085aa:	3b01      	subs	r3, #1
 80085ac:	9301      	str	r3, [sp, #4]
 80085ae:	6893      	ldr	r3, [r2, #8]
 80085b0:	061b      	lsls	r3, r3, #24
 80085b2:	d502      	bpl.n	80085ba <HAL_SPI_TransmitReceive+0x216>
 80085b4:	9b01      	ldr	r3, [sp, #4]
 80085b6:	2b00      	cmp	r3, #0
 80085b8:	d1f5      	bne.n	80085a6 <HAL_SPI_TransmitReceive+0x202>
 80085ba:	68a0      	ldr	r0, [r4, #8]
 80085bc:	2800      	cmp	r0, #0
 80085be:	d13b      	bne.n	8008638 <HAL_SPI_TransmitReceive+0x294>
 80085c0:	6823      	ldr	r3, [r4, #0]
 80085c2:	9000      	str	r0, [sp, #0]
 80085c4:	68da      	ldr	r2, [r3, #12]
 80085c6:	9200      	str	r2, [sp, #0]
 80085c8:	689b      	ldr	r3, [r3, #8]
 80085ca:	9300      	str	r3, [sp, #0]
 80085cc:	9b00      	ldr	r3, [sp, #0]
 80085ce:	e706      	b.n	80083de <HAL_SPI_TransmitReceive+0x3a>
 80085d0:	f1b8 0f01 	cmp.w	r8, #1
 80085d4:	d198      	bne.n	8008508 <HAL_SPI_TransmitReceive+0x164>
 80085d6:	e78e      	b.n	80084f6 <HAL_SPI_TransmitReceive+0x152>
 80085d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80085da:	b29b      	uxth	r3, r3
 80085dc:	b91b      	cbnz	r3, 80085e6 <HAL_SPI_TransmitReceive+0x242>
 80085de:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80085e0:	b29b      	uxth	r3, r3
 80085e2:	2b00      	cmp	r3, #0
 80085e4:	d0c2      	beq.n	800856c <HAL_SPI_TransmitReceive+0x1c8>
 80085e6:	6822      	ldr	r2, [r4, #0]
 80085e8:	6893      	ldr	r3, [r2, #8]
 80085ea:	0798      	lsls	r0, r3, #30
 80085ec:	d50d      	bpl.n	800860a <HAL_SPI_TransmitReceive+0x266>
 80085ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80085f0:	b29b      	uxth	r3, r3
 80085f2:	b153      	cbz	r3, 800860a <HAL_SPI_TransmitReceive+0x266>
 80085f4:	b14f      	cbz	r7, 800860a <HAL_SPI_TransmitReceive+0x266>
 80085f6:	2700      	movs	r7, #0
 80085f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80085fa:	f833 1b02 	ldrh.w	r1, [r3], #2
 80085fe:	60d1      	str	r1, [r2, #12]
 8008600:	6323      	str	r3, [r4, #48]	; 0x30
 8008602:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008604:	3b01      	subs	r3, #1
 8008606:	b29b      	uxth	r3, r3
 8008608:	86e3      	strh	r3, [r4, #54]	; 0x36
 800860a:	6893      	ldr	r3, [r2, #8]
 800860c:	f013 0301 	ands.w	r3, r3, #1
 8008610:	d00c      	beq.n	800862c <HAL_SPI_TransmitReceive+0x288>
 8008612:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008614:	b289      	uxth	r1, r1
 8008616:	b149      	cbz	r1, 800862c <HAL_SPI_TransmitReceive+0x288>
 8008618:	461f      	mov	r7, r3
 800861a:	68d3      	ldr	r3, [r2, #12]
 800861c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800861e:	f822 3b02 	strh.w	r3, [r2], #2
 8008622:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008624:	63a2      	str	r2, [r4, #56]	; 0x38
 8008626:	3b01      	subs	r3, #1
 8008628:	b29b      	uxth	r3, r3
 800862a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800862c:	f7fd f98c 	bl	8005948 <HAL_GetTick>
 8008630:	1b80      	subs	r0, r0, r6
 8008632:	42a8      	cmp	r0, r5
 8008634:	d3d0      	bcc.n	80085d8 <HAL_SPI_TransmitReceive+0x234>
 8008636:	e746      	b.n	80084c6 <HAL_SPI_TransmitReceive+0x122>
 8008638:	2000      	movs	r0, #0
 800863a:	e6d0      	b.n	80083de <HAL_SPI_TransmitReceive+0x3a>
 800863c:	20000024 	.word	0x20000024
 8008640:	165e9f81 	.word	0x165e9f81

08008644 <HAL_SPI_Receive>:
 8008644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008648:	6846      	ldr	r6, [r0, #4]
 800864a:	4604      	mov	r4, r0
 800864c:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
 8008650:	4690      	mov	r8, r2
 8008652:	461d      	mov	r5, r3
 8008654:	460f      	mov	r7, r1
 8008656:	b082      	sub	sp, #8
 8008658:	d071      	beq.n	800873e <HAL_SPI_Receive+0xfa>
 800865a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800865e:	2b01      	cmp	r3, #1
 8008660:	d079      	beq.n	8008756 <HAL_SPI_Receive+0x112>
 8008662:	2301      	movs	r3, #1
 8008664:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008668:	f7fd f96e 	bl	8005948 <HAL_GetTick>
 800866c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 8008670:	4606      	mov	r6, r0
 8008672:	f1bc 0f01 	cmp.w	ip, #1
 8008676:	fa5f f08c 	uxtb.w	r0, ip
 800867a:	d009      	beq.n	8008690 <HAL_SPI_Receive+0x4c>
 800867c:	2002      	movs	r0, #2
 800867e:	2201      	movs	r2, #1
 8008680:	2300      	movs	r3, #0
 8008682:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008686:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800868a:	b002      	add	sp, #8
 800868c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008690:	2f00      	cmp	r7, #0
 8008692:	d0f4      	beq.n	800867e <HAL_SPI_Receive+0x3a>
 8008694:	f1b8 0f00 	cmp.w	r8, #0
 8008698:	d0f1      	beq.n	800867e <HAL_SPI_Receive+0x3a>
 800869a:	2300      	movs	r3, #0
 800869c:	2104      	movs	r1, #4
 800869e:	68a2      	ldr	r2, [r4, #8]
 80086a0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
 80086a4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80086a8:	6822      	ldr	r2, [r4, #0]
 80086aa:	6563      	str	r3, [r4, #84]	; 0x54
 80086ac:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80086b0:	6323      	str	r3, [r4, #48]	; 0x30
 80086b2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 80086b6:	86a3      	strh	r3, [r4, #52]	; 0x34
 80086b8:	86e3      	strh	r3, [r4, #54]	; 0x36
 80086ba:	63a7      	str	r7, [r4, #56]	; 0x38
 80086bc:	4613      	mov	r3, r2
 80086be:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 80086c2:	d107      	bne.n	80086d4 <HAL_SPI_Receive+0x90>
 80086c4:	6811      	ldr	r1, [r2, #0]
 80086c6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80086ca:	6011      	str	r1, [r2, #0]
 80086cc:	6811      	ldr	r1, [r2, #0]
 80086ce:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 80086d2:	6011      	str	r1, [r2, #0]
 80086d4:	6811      	ldr	r1, [r2, #0]
 80086d6:	064f      	lsls	r7, r1, #25
 80086d8:	d403      	bmi.n	80086e2 <HAL_SPI_Receive+0x9e>
 80086da:	6811      	ldr	r1, [r2, #0]
 80086dc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80086e0:	6011      	str	r1, [r2, #0]
 80086e2:	68e1      	ldr	r1, [r4, #12]
 80086e4:	2900      	cmp	r1, #0
 80086e6:	d05a      	beq.n	800879e <HAL_SPI_Receive+0x15a>
 80086e8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80086ea:	b289      	uxth	r1, r1
 80086ec:	b1a1      	cbz	r1, 8008718 <HAL_SPI_Receive+0xd4>
 80086ee:	2d00      	cmp	r5, #0
 80086f0:	f000 80b3 	beq.w	800885a <HAL_SPI_Receive+0x216>
 80086f4:	1c68      	adds	r0, r5, #1
 80086f6:	d140      	bne.n	800877a <HAL_SPI_Receive+0x136>
 80086f8:	6893      	ldr	r3, [r2, #8]
 80086fa:	07d9      	lsls	r1, r3, #31
 80086fc:	d547      	bpl.n	800878e <HAL_SPI_Receive+0x14a>
 80086fe:	68d1      	ldr	r1, [r2, #12]
 8008700:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008702:	f823 1b02 	strh.w	r1, [r3], #2
 8008706:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008708:	63a3      	str	r3, [r4, #56]	; 0x38
 800870a:	3901      	subs	r1, #1
 800870c:	b289      	uxth	r1, r1
 800870e:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008710:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008712:	b29b      	uxth	r3, r3
 8008714:	2b00      	cmp	r3, #0
 8008716:	d1ef      	bne.n	80086f8 <HAL_SPI_Receive+0xb4>
 8008718:	6863      	ldr	r3, [r4, #4]
 800871a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800871e:	f000 80a0 	beq.w	8008862 <HAL_SPI_Receive+0x21e>
 8008722:	4633      	mov	r3, r6
 8008724:	462a      	mov	r2, r5
 8008726:	2101      	movs	r1, #1
 8008728:	4620      	mov	r0, r4
 800872a:	f7ff fc31 	bl	8007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800872e:	2800      	cmp	r0, #0
 8008730:	f040 80a7 	bne.w	8008882 <HAL_SPI_Receive+0x23e>
 8008734:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008736:	3800      	subs	r0, #0
 8008738:	bf18      	it	ne
 800873a:	2001      	movne	r0, #1
 800873c:	e79f      	b.n	800867e <HAL_SPI_Receive+0x3a>
 800873e:	6883      	ldr	r3, [r0, #8]
 8008740:	2b00      	cmp	r3, #0
 8008742:	d18a      	bne.n	800865a <HAL_SPI_Receive+0x16>
 8008744:	9500      	str	r5, [sp, #0]
 8008746:	2504      	movs	r5, #4
 8008748:	4613      	mov	r3, r2
 800874a:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
 800874e:	460a      	mov	r2, r1
 8008750:	f7ff fe28 	bl	80083a4 <HAL_SPI_TransmitReceive>
 8008754:	e799      	b.n	800868a <HAL_SPI_Receive+0x46>
 8008756:	2002      	movs	r0, #2
 8008758:	b002      	add	sp, #8
 800875a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800875e:	68db      	ldr	r3, [r3, #12]
 8008760:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008762:	f822 3b02 	strh.w	r3, [r2], #2
 8008766:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008768:	63a2      	str	r2, [r4, #56]	; 0x38
 800876a:	3b01      	subs	r3, #1
 800876c:	b29b      	uxth	r3, r3
 800876e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008770:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008772:	b29b      	uxth	r3, r3
 8008774:	2b00      	cmp	r3, #0
 8008776:	d0cf      	beq.n	8008718 <HAL_SPI_Receive+0xd4>
 8008778:	6823      	ldr	r3, [r4, #0]
 800877a:	689a      	ldr	r2, [r3, #8]
 800877c:	07d2      	lsls	r2, r2, #31
 800877e:	d4ee      	bmi.n	800875e <HAL_SPI_Receive+0x11a>
 8008780:	f7fd f8e2 	bl	8005948 <HAL_GetTick>
 8008784:	1b83      	subs	r3, r0, r6
 8008786:	429d      	cmp	r5, r3
 8008788:	d8f2      	bhi.n	8008770 <HAL_SPI_Receive+0x12c>
 800878a:	2003      	movs	r0, #3
 800878c:	e777      	b.n	800867e <HAL_SPI_Receive+0x3a>
 800878e:	f7fd f8db 	bl	8005948 <HAL_GetTick>
 8008792:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008794:	b29b      	uxth	r3, r3
 8008796:	2b00      	cmp	r3, #0
 8008798:	d0be      	beq.n	8008718 <HAL_SPI_Receive+0xd4>
 800879a:	6822      	ldr	r2, [r4, #0]
 800879c:	e7ac      	b.n	80086f8 <HAL_SPI_Receive+0xb4>
 800879e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80087a0:	b292      	uxth	r2, r2
 80087a2:	2a00      	cmp	r2, #0
 80087a4:	d0b8      	beq.n	8008718 <HAL_SPI_Receive+0xd4>
 80087a6:	2d00      	cmp	r5, #0
 80087a8:	d043      	beq.n	8008832 <HAL_SPI_Receive+0x1ee>
 80087aa:	1c6f      	adds	r7, r5, #1
 80087ac:	d00f      	beq.n	80087ce <HAL_SPI_Receive+0x18a>
 80087ae:	e027      	b.n	8008800 <HAL_SPI_Receive+0x1bc>
 80087b0:	7b1a      	ldrb	r2, [r3, #12]
 80087b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80087b4:	701a      	strb	r2, [r3, #0]
 80087b6:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80087b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80087ba:	3901      	subs	r1, #1
 80087bc:	b289      	uxth	r1, r1
 80087be:	87e1      	strh	r1, [r4, #62]	; 0x3e
 80087c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80087c2:	3201      	adds	r2, #1
 80087c4:	b29b      	uxth	r3, r3
 80087c6:	63a2      	str	r2, [r4, #56]	; 0x38
 80087c8:	2b00      	cmp	r3, #0
 80087ca:	d0a5      	beq.n	8008718 <HAL_SPI_Receive+0xd4>
 80087cc:	6823      	ldr	r3, [r4, #0]
 80087ce:	689a      	ldr	r2, [r3, #8]
 80087d0:	07d0      	lsls	r0, r2, #31
 80087d2:	d4ed      	bmi.n	80087b0 <HAL_SPI_Receive+0x16c>
 80087d4:	f7fd f8b8 	bl	8005948 <HAL_GetTick>
 80087d8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80087da:	b29b      	uxth	r3, r3
 80087dc:	2b00      	cmp	r3, #0
 80087de:	d1f5      	bne.n	80087cc <HAL_SPI_Receive+0x188>
 80087e0:	e79a      	b.n	8008718 <HAL_SPI_Receive+0xd4>
 80087e2:	7b1a      	ldrb	r2, [r3, #12]
 80087e4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80087e6:	701a      	strb	r2, [r3, #0]
 80087e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80087ea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80087ec:	3b01      	subs	r3, #1
 80087ee:	3201      	adds	r2, #1
 80087f0:	b29b      	uxth	r3, r3
 80087f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80087f4:	63a2      	str	r2, [r4, #56]	; 0x38
 80087f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80087f8:	b29b      	uxth	r3, r3
 80087fa:	2b00      	cmp	r3, #0
 80087fc:	d08c      	beq.n	8008718 <HAL_SPI_Receive+0xd4>
 80087fe:	6823      	ldr	r3, [r4, #0]
 8008800:	689a      	ldr	r2, [r3, #8]
 8008802:	07d1      	lsls	r1, r2, #31
 8008804:	d4ed      	bmi.n	80087e2 <HAL_SPI_Receive+0x19e>
 8008806:	f7fd f89f 	bl	8005948 <HAL_GetTick>
 800880a:	1b83      	subs	r3, r0, r6
 800880c:	429d      	cmp	r5, r3
 800880e:	d9bc      	bls.n	800878a <HAL_SPI_Receive+0x146>
 8008810:	e7f1      	b.n	80087f6 <HAL_SPI_Receive+0x1b2>
 8008812:	7b1a      	ldrb	r2, [r3, #12]
 8008814:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008816:	701a      	strb	r2, [r3, #0]
 8008818:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800881a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800881c:	3b01      	subs	r3, #1
 800881e:	b29b      	uxth	r3, r3
 8008820:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008822:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008824:	3201      	adds	r2, #1
 8008826:	b29b      	uxth	r3, r3
 8008828:	63a2      	str	r2, [r4, #56]	; 0x38
 800882a:	2b00      	cmp	r3, #0
 800882c:	f43f af74 	beq.w	8008718 <HAL_SPI_Receive+0xd4>
 8008830:	6823      	ldr	r3, [r4, #0]
 8008832:	689a      	ldr	r2, [r3, #8]
 8008834:	07d2      	lsls	r2, r2, #31
 8008836:	d4ec      	bmi.n	8008812 <HAL_SPI_Receive+0x1ce>
 8008838:	f7fd f886 	bl	8005948 <HAL_GetTick>
 800883c:	e7a5      	b.n	800878a <HAL_SPI_Receive+0x146>
 800883e:	68d3      	ldr	r3, [r2, #12]
 8008840:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8008842:	f821 3b02 	strh.w	r3, [r1], #2
 8008846:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008848:	63a1      	str	r1, [r4, #56]	; 0x38
 800884a:	3b01      	subs	r3, #1
 800884c:	b29b      	uxth	r3, r3
 800884e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008850:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008852:	b29b      	uxth	r3, r3
 8008854:	2b00      	cmp	r3, #0
 8008856:	f43f af5f 	beq.w	8008718 <HAL_SPI_Receive+0xd4>
 800885a:	6893      	ldr	r3, [r2, #8]
 800885c:	07db      	lsls	r3, r3, #31
 800885e:	d5eb      	bpl.n	8008838 <HAL_SPI_Receive+0x1f4>
 8008860:	e7ed      	b.n	800883e <HAL_SPI_Receive+0x1fa>
 8008862:	68a3      	ldr	r3, [r4, #8]
 8008864:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008868:	d021      	beq.n	80088ae <HAL_SPI_Receive+0x26a>
 800886a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800886e:	d00f      	beq.n	8008890 <HAL_SPI_Receive+0x24c>
 8008870:	4633      	mov	r3, r6
 8008872:	462a      	mov	r2, r5
 8008874:	2180      	movs	r1, #128	; 0x80
 8008876:	4620      	mov	r0, r4
 8008878:	f7ff fb8a 	bl	8007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800887c:	2800      	cmp	r0, #0
 800887e:	f43f af59 	beq.w	8008734 <HAL_SPI_Receive+0xf0>
 8008882:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008884:	f043 0320 	orr.w	r3, r3, #32
 8008888:	6563      	str	r3, [r4, #84]	; 0x54
 800888a:	2320      	movs	r3, #32
 800888c:	6563      	str	r3, [r4, #84]	; 0x54
 800888e:	e751      	b.n	8008734 <HAL_SPI_Receive+0xf0>
 8008890:	6820      	ldr	r0, [r4, #0]
 8008892:	4633      	mov	r3, r6
 8008894:	6801      	ldr	r1, [r0, #0]
 8008896:	462a      	mov	r2, r5
 8008898:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800889c:	6001      	str	r1, [r0, #0]
 800889e:	2101      	movs	r1, #1
 80088a0:	4620      	mov	r0, r4
 80088a2:	f7ff fb75 	bl	8007f90 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80088a6:	2800      	cmp	r0, #0
 80088a8:	f43f af44 	beq.w	8008734 <HAL_SPI_Receive+0xf0>
 80088ac:	e7e9      	b.n	8008882 <HAL_SPI_Receive+0x23e>
 80088ae:	6822      	ldr	r2, [r4, #0]
 80088b0:	6813      	ldr	r3, [r2, #0]
 80088b2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80088b6:	6013      	str	r3, [r2, #0]
 80088b8:	e7da      	b.n	8008870 <HAL_SPI_Receive+0x22c>
 80088ba:	bf00      	nop

080088bc <HAL_SPI_ErrorCallback>:
 80088bc:	4770      	bx	lr
 80088be:	bf00      	nop

080088c0 <HAL_SPI_IRQHandler>:
 80088c0:	b530      	push	{r4, r5, lr}
 80088c2:	6802      	ldr	r2, [r0, #0]
 80088c4:	4604      	mov	r4, r0
 80088c6:	6851      	ldr	r1, [r2, #4]
 80088c8:	6893      	ldr	r3, [r2, #8]
 80088ca:	b085      	sub	sp, #20
 80088cc:	f013 0f40 	tst.w	r3, #64	; 0x40
 80088d0:	f3c3 1580 	ubfx	r5, r3, #6, #1
 80088d4:	d105      	bne.n	80088e2 <HAL_SPI_IRQHandler+0x22>
 80088d6:	f013 0f01 	tst.w	r3, #1
 80088da:	d002      	beq.n	80088e2 <HAL_SPI_IRQHandler+0x22>
 80088dc:	f011 0f40 	tst.w	r1, #64	; 0x40
 80088e0:	d159      	bne.n	8008996 <HAL_SPI_IRQHandler+0xd6>
 80088e2:	0798      	lsls	r0, r3, #30
 80088e4:	d501      	bpl.n	80088ea <HAL_SPI_IRQHandler+0x2a>
 80088e6:	0608      	lsls	r0, r1, #24
 80088e8:	d44f      	bmi.n	800898a <HAL_SPI_IRQHandler+0xca>
 80088ea:	f3c3 1040 	ubfx	r0, r3, #5, #1
 80088ee:	069b      	lsls	r3, r3, #26
 80088f0:	d510      	bpl.n	8008914 <HAL_SPI_IRQHandler+0x54>
 80088f2:	0688      	lsls	r0, r1, #26
 80088f4:	d50c      	bpl.n	8008910 <HAL_SPI_IRQHandler+0x50>
 80088f6:	2d00      	cmp	r5, #0
 80088f8:	d05a      	beq.n	80089b0 <HAL_SPI_IRQHandler+0xf0>
 80088fa:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80088fe:	2b03      	cmp	r3, #3
 8008900:	d14b      	bne.n	800899a <HAL_SPI_IRQHandler+0xda>
 8008902:	2300      	movs	r3, #0
 8008904:	9302      	str	r3, [sp, #8]
 8008906:	68d3      	ldr	r3, [r2, #12]
 8008908:	9302      	str	r3, [sp, #8]
 800890a:	6893      	ldr	r3, [r2, #8]
 800890c:	9302      	str	r3, [sp, #8]
 800890e:	9b02      	ldr	r3, [sp, #8]
 8008910:	b005      	add	sp, #20
 8008912:	bd30      	pop	{r4, r5, pc}
 8008914:	2d00      	cmp	r5, #0
 8008916:	d0fb      	beq.n	8008910 <HAL_SPI_IRQHandler+0x50>
 8008918:	068b      	lsls	r3, r1, #26
 800891a:	d5f9      	bpl.n	8008910 <HAL_SPI_IRQHandler+0x50>
 800891c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008920:	2b03      	cmp	r3, #3
 8008922:	d0ee      	beq.n	8008902 <HAL_SPI_IRQHandler+0x42>
 8008924:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008926:	f043 0304 	orr.w	r3, r3, #4
 800892a:	6563      	str	r3, [r4, #84]	; 0x54
 800892c:	9001      	str	r0, [sp, #4]
 800892e:	68d3      	ldr	r3, [r2, #12]
 8008930:	9301      	str	r3, [sp, #4]
 8008932:	6893      	ldr	r3, [r2, #8]
 8008934:	9301      	str	r3, [sp, #4]
 8008936:	9b01      	ldr	r3, [sp, #4]
 8008938:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800893a:	2b00      	cmp	r3, #0
 800893c:	d0e8      	beq.n	8008910 <HAL_SPI_IRQHandler+0x50>
 800893e:	2001      	movs	r0, #1
 8008940:	6853      	ldr	r3, [r2, #4]
 8008942:	0789      	lsls	r1, r1, #30
 8008944:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8008948:	6053      	str	r3, [r2, #4]
 800894a:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 800894e:	d03d      	beq.n	80089cc <HAL_SPI_IRQHandler+0x10c>
 8008950:	6853      	ldr	r3, [r2, #4]
 8008952:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8008954:	f023 0303 	bic.w	r3, r3, #3
 8008958:	6053      	str	r3, [r2, #4]
 800895a:	b140      	cbz	r0, 800896e <HAL_SPI_IRQHandler+0xae>
 800895c:	4b1d      	ldr	r3, [pc, #116]	; (80089d4 <HAL_SPI_IRQHandler+0x114>)
 800895e:	6343      	str	r3, [r0, #52]	; 0x34
 8008960:	f7fd f880 	bl	8005a64 <HAL_DMA_Abort_IT>
 8008964:	b118      	cbz	r0, 800896e <HAL_SPI_IRQHandler+0xae>
 8008966:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008968:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800896c:	6563      	str	r3, [r4, #84]	; 0x54
 800896e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8008970:	2800      	cmp	r0, #0
 8008972:	d0cd      	beq.n	8008910 <HAL_SPI_IRQHandler+0x50>
 8008974:	4b17      	ldr	r3, [pc, #92]	; (80089d4 <HAL_SPI_IRQHandler+0x114>)
 8008976:	6343      	str	r3, [r0, #52]	; 0x34
 8008978:	f7fd f874 	bl	8005a64 <HAL_DMA_Abort_IT>
 800897c:	2800      	cmp	r0, #0
 800897e:	d0c7      	beq.n	8008910 <HAL_SPI_IRQHandler+0x50>
 8008980:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008982:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008986:	6563      	str	r3, [r4, #84]	; 0x54
 8008988:	e7c2      	b.n	8008910 <HAL_SPI_IRQHandler+0x50>
 800898a:	4620      	mov	r0, r4
 800898c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800898e:	b005      	add	sp, #20
 8008990:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008994:	4718      	bx	r3
 8008996:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008998:	e7f9      	b.n	800898e <HAL_SPI_IRQHandler+0xce>
 800899a:	2000      	movs	r0, #0
 800899c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800899e:	f043 0304 	orr.w	r3, r3, #4
 80089a2:	6563      	str	r3, [r4, #84]	; 0x54
 80089a4:	9001      	str	r0, [sp, #4]
 80089a6:	68d3      	ldr	r3, [r2, #12]
 80089a8:	9301      	str	r3, [sp, #4]
 80089aa:	6893      	ldr	r3, [r2, #8]
 80089ac:	9301      	str	r3, [sp, #4]
 80089ae:	9b01      	ldr	r3, [sp, #4]
 80089b0:	2000      	movs	r0, #0
 80089b2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80089b4:	f043 0301 	orr.w	r3, r3, #1
 80089b8:	6563      	str	r3, [r4, #84]	; 0x54
 80089ba:	9003      	str	r0, [sp, #12]
 80089bc:	6893      	ldr	r3, [r2, #8]
 80089be:	9303      	str	r3, [sp, #12]
 80089c0:	6813      	ldr	r3, [r2, #0]
 80089c2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80089c6:	6013      	str	r3, [r2, #0]
 80089c8:	9b03      	ldr	r3, [sp, #12]
 80089ca:	e7b5      	b.n	8008938 <HAL_SPI_IRQHandler+0x78>
 80089cc:	4620      	mov	r0, r4
 80089ce:	f7ff ff75 	bl	80088bc <HAL_SPI_ErrorCallback>
 80089d2:	e79d      	b.n	8008910 <HAL_SPI_IRQHandler+0x50>
 80089d4:	080089d9 	.word	0x080089d9

080089d8 <SPI_DMAAbortOnError>:
 80089d8:	b508      	push	{r3, lr}
 80089da:	2300      	movs	r3, #0
 80089dc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80089de:	87c3      	strh	r3, [r0, #62]	; 0x3e
 80089e0:	86c3      	strh	r3, [r0, #54]	; 0x36
 80089e2:	f7ff ff6b 	bl	80088bc <HAL_SPI_ErrorCallback>
 80089e6:	bd08      	pop	{r3, pc}

080089e8 <HAL_TIM_Base_Init>:
 80089e8:	2800      	cmp	r0, #0
 80089ea:	d049      	beq.n	8008a80 <HAL_TIM_Base_Init+0x98>
 80089ec:	b510      	push	{r4, lr}
 80089ee:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80089f2:	4604      	mov	r4, r0
 80089f4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80089f8:	2b00      	cmp	r3, #0
 80089fa:	d03c      	beq.n	8008a76 <HAL_TIM_Base_Init+0x8e>
 80089fc:	2302      	movs	r3, #2
 80089fe:	6822      	ldr	r2, [r4, #0]
 8008a00:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8008a04:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008a08:	6813      	ldr	r3, [r2, #0]
 8008a0a:	d013      	beq.n	8008a34 <HAL_TIM_Base_Init+0x4c>
 8008a0c:	491d      	ldr	r1, [pc, #116]	; (8008a84 <HAL_TIM_Base_Init+0x9c>)
 8008a0e:	428a      	cmp	r2, r1
 8008a10:	d010      	beq.n	8008a34 <HAL_TIM_Base_Init+0x4c>
 8008a12:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008a16:	428a      	cmp	r2, r1
 8008a18:	d00c      	beq.n	8008a34 <HAL_TIM_Base_Init+0x4c>
 8008a1a:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008a1e:	428a      	cmp	r2, r1
 8008a20:	d00c      	beq.n	8008a3c <HAL_TIM_Base_Init+0x54>
 8008a22:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008a26:	428a      	cmp	r2, r1
 8008a28:	d008      	beq.n	8008a3c <HAL_TIM_Base_Init+0x54>
 8008a2a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008a2e:	428a      	cmp	r2, r1
 8008a30:	d108      	bne.n	8008a44 <HAL_TIM_Base_Init+0x5c>
 8008a32:	e003      	b.n	8008a3c <HAL_TIM_Base_Init+0x54>
 8008a34:	68a1      	ldr	r1, [r4, #8]
 8008a36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008a3a:	430b      	orrs	r3, r1
 8008a3c:	6921      	ldr	r1, [r4, #16]
 8008a3e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008a42:	430b      	orrs	r3, r1
 8008a44:	2101      	movs	r1, #1
 8008a46:	6960      	ldr	r0, [r4, #20]
 8008a48:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008a4c:	4303      	orrs	r3, r0
 8008a4e:	68e0      	ldr	r0, [r4, #12]
 8008a50:	6013      	str	r3, [r2, #0]
 8008a52:	6863      	ldr	r3, [r4, #4]
 8008a54:	62d0      	str	r0, [r2, #44]	; 0x2c
 8008a56:	6293      	str	r3, [r2, #40]	; 0x28
 8008a58:	6151      	str	r1, [r2, #20]
 8008a5a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8008a5e:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
 8008a62:	f884 103b 	strb.w	r1, [r4, #59]	; 0x3b
 8008a66:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
 8008a6a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8008a6e:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8008a72:	2000      	movs	r0, #0
 8008a74:	bd10      	pop	{r4, pc}
 8008a76:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8008a7a:	f7fc fddb 	bl	8005634 <HAL_TIM_Base_MspInit>
 8008a7e:	e7bd      	b.n	80089fc <HAL_TIM_Base_Init+0x14>
 8008a80:	2001      	movs	r0, #1
 8008a82:	4770      	bx	lr
 8008a84:	40000400 	.word	0x40000400

08008a88 <HAL_TIM_Base_Start_IT>:
 8008a88:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008a8c:	2b01      	cmp	r3, #1
 8008a8e:	d120      	bne.n	8008ad2 <HAL_TIM_Base_Start_IT+0x4a>
 8008a90:	2202      	movs	r2, #2
 8008a92:	6803      	ldr	r3, [r0, #0]
 8008a94:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8008a98:	68da      	ldr	r2, [r3, #12]
 8008a9a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a9e:	f042 0201 	orr.w	r2, r2, #1
 8008aa2:	60da      	str	r2, [r3, #12]
 8008aa4:	d00a      	beq.n	8008abc <HAL_TIM_Base_Start_IT+0x34>
 8008aa6:	4a0d      	ldr	r2, [pc, #52]	; (8008adc <HAL_TIM_Base_Start_IT+0x54>)
 8008aa8:	4293      	cmp	r3, r2
 8008aaa:	d007      	beq.n	8008abc <HAL_TIM_Base_Start_IT+0x34>
 8008aac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008ab0:	4293      	cmp	r3, r2
 8008ab2:	d003      	beq.n	8008abc <HAL_TIM_Base_Start_IT+0x34>
 8008ab4:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8008ab8:	4293      	cmp	r3, r2
 8008aba:	d104      	bne.n	8008ac6 <HAL_TIM_Base_Start_IT+0x3e>
 8008abc:	689a      	ldr	r2, [r3, #8]
 8008abe:	f002 0207 	and.w	r2, r2, #7
 8008ac2:	2a06      	cmp	r2, #6
 8008ac4:	d007      	beq.n	8008ad6 <HAL_TIM_Base_Start_IT+0x4e>
 8008ac6:	681a      	ldr	r2, [r3, #0]
 8008ac8:	2000      	movs	r0, #0
 8008aca:	f042 0201 	orr.w	r2, r2, #1
 8008ace:	601a      	str	r2, [r3, #0]
 8008ad0:	4770      	bx	lr
 8008ad2:	2001      	movs	r0, #1
 8008ad4:	4770      	bx	lr
 8008ad6:	2000      	movs	r0, #0
 8008ad8:	4770      	bx	lr
 8008ada:	bf00      	nop
 8008adc:	40000400 	.word	0x40000400

08008ae0 <HAL_TIM_Encoder_Init>:
 8008ae0:	2800      	cmp	r0, #0
 8008ae2:	d075      	beq.n	8008bd0 <HAL_TIM_Encoder_Init+0xf0>
 8008ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ae6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008aea:	4604      	mov	r4, r0
 8008aec:	460d      	mov	r5, r1
 8008aee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008af2:	2b00      	cmp	r3, #0
 8008af4:	d067      	beq.n	8008bc6 <HAL_TIM_Encoder_Init+0xe6>
 8008af6:	2202      	movs	r2, #2
 8008af8:	6823      	ldr	r3, [r4, #0]
 8008afa:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
 8008afe:	689a      	ldr	r2, [r3, #8]
 8008b00:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b04:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8008b08:	f022 0207 	bic.w	r2, r2, #7
 8008b0c:	609a      	str	r2, [r3, #8]
 8008b0e:	681a      	ldr	r2, [r3, #0]
 8008b10:	d013      	beq.n	8008b3a <HAL_TIM_Encoder_Init+0x5a>
 8008b12:	4930      	ldr	r1, [pc, #192]	; (8008bd4 <HAL_TIM_Encoder_Init+0xf4>)
 8008b14:	428b      	cmp	r3, r1
 8008b16:	d010      	beq.n	8008b3a <HAL_TIM_Encoder_Init+0x5a>
 8008b18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008b1c:	428b      	cmp	r3, r1
 8008b1e:	d00c      	beq.n	8008b3a <HAL_TIM_Encoder_Init+0x5a>
 8008b20:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008b24:	428b      	cmp	r3, r1
 8008b26:	d00c      	beq.n	8008b42 <HAL_TIM_Encoder_Init+0x62>
 8008b28:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008b2c:	428b      	cmp	r3, r1
 8008b2e:	d008      	beq.n	8008b42 <HAL_TIM_Encoder_Init+0x62>
 8008b30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008b34:	428b      	cmp	r3, r1
 8008b36:	d108      	bne.n	8008b4a <HAL_TIM_Encoder_Init+0x6a>
 8008b38:	e003      	b.n	8008b42 <HAL_TIM_Encoder_Init+0x62>
 8008b3a:	68a1      	ldr	r1, [r4, #8]
 8008b3c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008b40:	430a      	orrs	r2, r1
 8008b42:	6921      	ldr	r1, [r4, #16]
 8008b44:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8008b48:	430a      	orrs	r2, r1
 8008b4a:	2601      	movs	r6, #1
 8008b4c:	6961      	ldr	r1, [r4, #20]
 8008b4e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008b52:	430a      	orrs	r2, r1
 8008b54:	68e1      	ldr	r1, [r4, #12]
 8008b56:	601a      	str	r2, [r3, #0]
 8008b58:	6862      	ldr	r2, [r4, #4]
 8008b5a:	62d9      	str	r1, [r3, #44]	; 0x2c
 8008b5c:	629a      	str	r2, [r3, #40]	; 0x28
 8008b5e:	69a9      	ldr	r1, [r5, #24]
 8008b60:	68aa      	ldr	r2, [r5, #8]
 8008b62:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 8008b66:	692a      	ldr	r2, [r5, #16]
 8008b68:	615e      	str	r6, [r3, #20]
 8008b6a:	6898      	ldr	r0, [r3, #8]
 8008b6c:	699f      	ldr	r7, [r3, #24]
 8008b6e:	0112      	lsls	r2, r2, #4
 8008b70:	f427 7c40 	bic.w	ip, r7, #768	; 0x300
 8008b74:	69ef      	ldr	r7, [r5, #28]
 8008b76:	f02c 0c03 	bic.w	ip, ip, #3
 8008b7a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8008b7e:	68ef      	ldr	r7, [r5, #12]
 8008b80:	ea41 010c 	orr.w	r1, r1, ip
 8008b84:	433a      	orrs	r2, r7
 8008b86:	6a1f      	ldr	r7, [r3, #32]
 8008b88:	f421 417c 	bic.w	r1, r1, #64512	; 0xfc00
 8008b8c:	f027 0caa 	bic.w	ip, r7, #170	; 0xaa
 8008b90:	6a2f      	ldr	r7, [r5, #32]
 8008b92:	f021 01fc 	bic.w	r1, r1, #252	; 0xfc
 8008b96:	ea42 3207 	orr.w	r2, r2, r7, lsl #12
 8008b9a:	430a      	orrs	r2, r1
 8008b9c:	696f      	ldr	r7, [r5, #20]
 8008b9e:	6869      	ldr	r1, [r5, #4]
 8008ba0:	682d      	ldr	r5, [r5, #0]
 8008ba2:	ea41 1107 	orr.w	r1, r1, r7, lsl #4
 8008ba6:	4328      	orrs	r0, r5
 8008ba8:	ea41 010c 	orr.w	r1, r1, ip
 8008bac:	6098      	str	r0, [r3, #8]
 8008bae:	619a      	str	r2, [r3, #24]
 8008bb0:	6219      	str	r1, [r3, #32]
 8008bb2:	f884 603e 	strb.w	r6, [r4, #62]	; 0x3e
 8008bb6:	f884 603a 	strb.w	r6, [r4, #58]	; 0x3a
 8008bba:	f884 603b 	strb.w	r6, [r4, #59]	; 0x3b
 8008bbe:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8008bc2:	2000      	movs	r0, #0
 8008bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008bc6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8008bca:	f7fc fd73 	bl	80056b4 <HAL_TIM_Encoder_MspInit>
 8008bce:	e792      	b.n	8008af6 <HAL_TIM_Encoder_Init+0x16>
 8008bd0:	2001      	movs	r0, #1
 8008bd2:	4770      	bx	lr
 8008bd4:	40000400 	.word	0x40000400

08008bd8 <HAL_TIM_Encoder_Start>:
 8008bd8:	4603      	mov	r3, r0
 8008bda:	f890 003a 	ldrb.w	r0, [r0, #58]	; 0x3a
 8008bde:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8008be2:	b2c0      	uxtb	r0, r0
 8008be4:	b2d2      	uxtb	r2, r2
 8008be6:	b9a9      	cbnz	r1, 8008c14 <HAL_TIM_Encoder_Start+0x3c>
 8008be8:	2801      	cmp	r0, #1
 8008bea:	d001      	beq.n	8008bf0 <HAL_TIM_Encoder_Start+0x18>
 8008bec:	2001      	movs	r0, #1
 8008bee:	4770      	bx	lr
 8008bf0:	2102      	movs	r1, #2
 8008bf2:	681a      	ldr	r2, [r3, #0]
 8008bf4:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8008bf8:	6a13      	ldr	r3, [r2, #32]
 8008bfa:	f023 0301 	bic.w	r3, r3, #1
 8008bfe:	6213      	str	r3, [r2, #32]
 8008c00:	6a13      	ldr	r3, [r2, #32]
 8008c02:	f043 0301 	orr.w	r3, r3, #1
 8008c06:	6213      	str	r3, [r2, #32]
 8008c08:	6813      	ldr	r3, [r2, #0]
 8008c0a:	2000      	movs	r0, #0
 8008c0c:	f043 0301 	orr.w	r3, r3, #1
 8008c10:	6013      	str	r3, [r2, #0]
 8008c12:	4770      	bx	lr
 8008c14:	2904      	cmp	r1, #4
 8008c16:	d01a      	beq.n	8008c4e <HAL_TIM_Encoder_Start+0x76>
 8008c18:	2801      	cmp	r0, #1
 8008c1a:	d1e7      	bne.n	8008bec <HAL_TIM_Encoder_Start+0x14>
 8008c1c:	2a01      	cmp	r2, #1
 8008c1e:	d1e6      	bne.n	8008bee <HAL_TIM_Encoder_Start+0x16>
 8008c20:	2102      	movs	r1, #2
 8008c22:	681a      	ldr	r2, [r3, #0]
 8008c24:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8008c28:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 8008c2c:	6a13      	ldr	r3, [r2, #32]
 8008c2e:	f023 0301 	bic.w	r3, r3, #1
 8008c32:	6213      	str	r3, [r2, #32]
 8008c34:	6a13      	ldr	r3, [r2, #32]
 8008c36:	f043 0301 	orr.w	r3, r3, #1
 8008c3a:	6213      	str	r3, [r2, #32]
 8008c3c:	6a13      	ldr	r3, [r2, #32]
 8008c3e:	f023 0310 	bic.w	r3, r3, #16
 8008c42:	6213      	str	r3, [r2, #32]
 8008c44:	6a13      	ldr	r3, [r2, #32]
 8008c46:	f043 0310 	orr.w	r3, r3, #16
 8008c4a:	6213      	str	r3, [r2, #32]
 8008c4c:	e7dc      	b.n	8008c08 <HAL_TIM_Encoder_Start+0x30>
 8008c4e:	2a01      	cmp	r2, #1
 8008c50:	d1cc      	bne.n	8008bec <HAL_TIM_Encoder_Start+0x14>
 8008c52:	2102      	movs	r1, #2
 8008c54:	681a      	ldr	r2, [r3, #0]
 8008c56:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 8008c5a:	e7ef      	b.n	8008c3c <HAL_TIM_Encoder_Start+0x64>

08008c5c <HAL_TIM_ConfigClockSource>:
 8008c5c:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8008c60:	2a01      	cmp	r2, #1
 8008c62:	d075      	beq.n	8008d50 <HAL_TIM_ConfigClockSource+0xf4>
 8008c64:	b430      	push	{r4, r5}
 8008c66:	4603      	mov	r3, r0
 8008c68:	2401      	movs	r4, #1
 8008c6a:	2202      	movs	r2, #2
 8008c6c:	6800      	ldr	r0, [r0, #0]
 8008c6e:	f883 4038 	strb.w	r4, [r3, #56]	; 0x38
 8008c72:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8008c76:	6884      	ldr	r4, [r0, #8]
 8008c78:	680a      	ldr	r2, [r1, #0]
 8008c7a:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 8008c7e:	f024 0477 	bic.w	r4, r4, #119	; 0x77
 8008c82:	2a60      	cmp	r2, #96	; 0x60
 8008c84:	6084      	str	r4, [r0, #8]
 8008c86:	d065      	beq.n	8008d54 <HAL_TIM_ConfigClockSource+0xf8>
 8008c88:	d831      	bhi.n	8008cee <HAL_TIM_ConfigClockSource+0x92>
 8008c8a:	2a40      	cmp	r2, #64	; 0x40
 8008c8c:	d048      	beq.n	8008d20 <HAL_TIM_ConfigClockSource+0xc4>
 8008c8e:	d921      	bls.n	8008cd4 <HAL_TIM_ConfigClockSource+0x78>
 8008c90:	2a50      	cmp	r2, #80	; 0x50
 8008c92:	d116      	bne.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008c94:	684c      	ldr	r4, [r1, #4]
 8008c96:	68cd      	ldr	r5, [r1, #12]
 8008c98:	6a01      	ldr	r1, [r0, #32]
 8008c9a:	f021 010a 	bic.w	r1, r1, #10
 8008c9e:	4321      	orrs	r1, r4
 8008ca0:	6a04      	ldr	r4, [r0, #32]
 8008ca2:	f024 0401 	bic.w	r4, r4, #1
 8008ca6:	6204      	str	r4, [r0, #32]
 8008ca8:	6982      	ldr	r2, [r0, #24]
 8008caa:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8008cae:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8008cb2:	6182      	str	r2, [r0, #24]
 8008cb4:	6201      	str	r1, [r0, #32]
 8008cb6:	6882      	ldr	r2, [r0, #8]
 8008cb8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008cbc:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 8008cc0:	6082      	str	r2, [r0, #8]
 8008cc2:	2200      	movs	r2, #0
 8008cc4:	2101      	movs	r1, #1
 8008cc6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008cca:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8008cce:	4610      	mov	r0, r2
 8008cd0:	bc30      	pop	{r4, r5}
 8008cd2:	4770      	bx	lr
 8008cd4:	2a20      	cmp	r2, #32
 8008cd6:	d002      	beq.n	8008cde <HAL_TIM_ConfigClockSource+0x82>
 8008cd8:	d91e      	bls.n	8008d18 <HAL_TIM_ConfigClockSource+0xbc>
 8008cda:	2a30      	cmp	r2, #48	; 0x30
 8008cdc:	d1f1      	bne.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008cde:	6881      	ldr	r1, [r0, #8]
 8008ce0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008ce4:	430a      	orrs	r2, r1
 8008ce6:	f042 0207 	orr.w	r2, r2, #7
 8008cea:	6082      	str	r2, [r0, #8]
 8008cec:	e7e9      	b.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008cee:	2a70      	cmp	r2, #112	; 0x70
 8008cf0:	d049      	beq.n	8008d86 <HAL_TIM_ConfigClockSource+0x12a>
 8008cf2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8008cf6:	d1e4      	bne.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008cf8:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 8008cfc:	6884      	ldr	r4, [r0, #8]
 8008cfe:	432a      	orrs	r2, r5
 8008d00:	68cd      	ldr	r5, [r1, #12]
 8008d02:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 8008d06:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8008d0a:	430a      	orrs	r2, r1
 8008d0c:	6082      	str	r2, [r0, #8]
 8008d0e:	6882      	ldr	r2, [r0, #8]
 8008d10:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008d14:	6082      	str	r2, [r0, #8]
 8008d16:	e7d4      	b.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008d18:	f032 0110 	bics.w	r1, r2, #16
 8008d1c:	d1d1      	bne.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008d1e:	e7de      	b.n	8008cde <HAL_TIM_ConfigClockSource+0x82>
 8008d20:	684c      	ldr	r4, [r1, #4]
 8008d22:	68cd      	ldr	r5, [r1, #12]
 8008d24:	6a01      	ldr	r1, [r0, #32]
 8008d26:	f021 010a 	bic.w	r1, r1, #10
 8008d2a:	4321      	orrs	r1, r4
 8008d2c:	6a04      	ldr	r4, [r0, #32]
 8008d2e:	f024 0401 	bic.w	r4, r4, #1
 8008d32:	6204      	str	r4, [r0, #32]
 8008d34:	6982      	ldr	r2, [r0, #24]
 8008d36:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8008d3a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8008d3e:	6182      	str	r2, [r0, #24]
 8008d40:	6201      	str	r1, [r0, #32]
 8008d42:	6882      	ldr	r2, [r0, #8]
 8008d44:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008d48:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 8008d4c:	6082      	str	r2, [r0, #8]
 8008d4e:	e7b8      	b.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008d50:	2002      	movs	r0, #2
 8008d52:	4770      	bx	lr
 8008d54:	6a04      	ldr	r4, [r0, #32]
 8008d56:	68ca      	ldr	r2, [r1, #12]
 8008d58:	f024 0410 	bic.w	r4, r4, #16
 8008d5c:	684d      	ldr	r5, [r1, #4]
 8008d5e:	6204      	str	r4, [r0, #32]
 8008d60:	6981      	ldr	r1, [r0, #24]
 8008d62:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8008d66:	ea41 3102 	orr.w	r1, r1, r2, lsl #12
 8008d6a:	6a02      	ldr	r2, [r0, #32]
 8008d6c:	6181      	str	r1, [r0, #24]
 8008d6e:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8008d72:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8008d76:	6202      	str	r2, [r0, #32]
 8008d78:	6882      	ldr	r2, [r0, #8]
 8008d7a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008d7e:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 8008d82:	6082      	str	r2, [r0, #8]
 8008d84:	e79d      	b.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008d86:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 8008d8a:	6884      	ldr	r4, [r0, #8]
 8008d8c:	432a      	orrs	r2, r5
 8008d8e:	68cd      	ldr	r5, [r1, #12]
 8008d90:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 8008d94:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8008d98:	430a      	orrs	r2, r1
 8008d9a:	6082      	str	r2, [r0, #8]
 8008d9c:	6882      	ldr	r2, [r0, #8]
 8008d9e:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 8008da2:	6082      	str	r2, [r0, #8]
 8008da4:	e78d      	b.n	8008cc2 <HAL_TIM_ConfigClockSource+0x66>
 8008da6:	bf00      	nop

08008da8 <HAL_TIM_OC_DelayElapsedCallback>:
 8008da8:	4770      	bx	lr
 8008daa:	bf00      	nop

08008dac <HAL_TIM_IC_CaptureCallback>:
 8008dac:	4770      	bx	lr
 8008dae:	bf00      	nop

08008db0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008db0:	4770      	bx	lr
 8008db2:	bf00      	nop

08008db4 <HAL_TIM_TriggerCallback>:
 8008db4:	4770      	bx	lr
 8008db6:	bf00      	nop

08008db8 <HAL_TIM_IRQHandler>:
 8008db8:	6803      	ldr	r3, [r0, #0]
 8008dba:	b510      	push	{r4, lr}
 8008dbc:	691a      	ldr	r2, [r3, #16]
 8008dbe:	4604      	mov	r4, r0
 8008dc0:	0791      	lsls	r1, r2, #30
 8008dc2:	d502      	bpl.n	8008dca <HAL_TIM_IRQHandler+0x12>
 8008dc4:	68da      	ldr	r2, [r3, #12]
 8008dc6:	0792      	lsls	r2, r2, #30
 8008dc8:	d450      	bmi.n	8008e6c <HAL_TIM_IRQHandler+0xb4>
 8008dca:	691a      	ldr	r2, [r3, #16]
 8008dcc:	0752      	lsls	r2, r2, #29
 8008dce:	d502      	bpl.n	8008dd6 <HAL_TIM_IRQHandler+0x1e>
 8008dd0:	68da      	ldr	r2, [r3, #12]
 8008dd2:	0750      	lsls	r0, r2, #29
 8008dd4:	d437      	bmi.n	8008e46 <HAL_TIM_IRQHandler+0x8e>
 8008dd6:	691a      	ldr	r2, [r3, #16]
 8008dd8:	0711      	lsls	r1, r2, #28
 8008dda:	d502      	bpl.n	8008de2 <HAL_TIM_IRQHandler+0x2a>
 8008ddc:	68da      	ldr	r2, [r3, #12]
 8008dde:	0712      	lsls	r2, r2, #28
 8008de0:	d422      	bmi.n	8008e28 <HAL_TIM_IRQHandler+0x70>
 8008de2:	691a      	ldr	r2, [r3, #16]
 8008de4:	06d0      	lsls	r0, r2, #27
 8008de6:	d502      	bpl.n	8008dee <HAL_TIM_IRQHandler+0x36>
 8008de8:	68da      	ldr	r2, [r3, #12]
 8008dea:	06d1      	lsls	r1, r2, #27
 8008dec:	d40c      	bmi.n	8008e08 <HAL_TIM_IRQHandler+0x50>
 8008dee:	691a      	ldr	r2, [r3, #16]
 8008df0:	07d2      	lsls	r2, r2, #31
 8008df2:	d502      	bpl.n	8008dfa <HAL_TIM_IRQHandler+0x42>
 8008df4:	68da      	ldr	r2, [r3, #12]
 8008df6:	07d0      	lsls	r0, r2, #31
 8008df8:	d450      	bmi.n	8008e9c <HAL_TIM_IRQHandler+0xe4>
 8008dfa:	691a      	ldr	r2, [r3, #16]
 8008dfc:	0651      	lsls	r1, r2, #25
 8008dfe:	d502      	bpl.n	8008e06 <HAL_TIM_IRQHandler+0x4e>
 8008e00:	68da      	ldr	r2, [r3, #12]
 8008e02:	0652      	lsls	r2, r2, #25
 8008e04:	d443      	bmi.n	8008e8e <HAL_TIM_IRQHandler+0xd6>
 8008e06:	bd10      	pop	{r4, pc}
 8008e08:	f06f 0110 	mvn.w	r1, #16
 8008e0c:	2208      	movs	r2, #8
 8008e0e:	6119      	str	r1, [r3, #16]
 8008e10:	7622      	strb	r2, [r4, #24]
 8008e12:	69db      	ldr	r3, [r3, #28]
 8008e14:	4620      	mov	r0, r4
 8008e16:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008e1a:	d047      	beq.n	8008eac <HAL_TIM_IRQHandler+0xf4>
 8008e1c:	f7ff ffc6 	bl	8008dac <HAL_TIM_IC_CaptureCallback>
 8008e20:	2200      	movs	r2, #0
 8008e22:	6823      	ldr	r3, [r4, #0]
 8008e24:	7622      	strb	r2, [r4, #24]
 8008e26:	e7e2      	b.n	8008dee <HAL_TIM_IRQHandler+0x36>
 8008e28:	f06f 0108 	mvn.w	r1, #8
 8008e2c:	2204      	movs	r2, #4
 8008e2e:	6119      	str	r1, [r3, #16]
 8008e30:	7622      	strb	r2, [r4, #24]
 8008e32:	69db      	ldr	r3, [r3, #28]
 8008e34:	4620      	mov	r0, r4
 8008e36:	079b      	lsls	r3, r3, #30
 8008e38:	d044      	beq.n	8008ec4 <HAL_TIM_IRQHandler+0x10c>
 8008e3a:	f7ff ffb7 	bl	8008dac <HAL_TIM_IC_CaptureCallback>
 8008e3e:	2200      	movs	r2, #0
 8008e40:	6823      	ldr	r3, [r4, #0]
 8008e42:	7622      	strb	r2, [r4, #24]
 8008e44:	e7cd      	b.n	8008de2 <HAL_TIM_IRQHandler+0x2a>
 8008e46:	f06f 0104 	mvn.w	r1, #4
 8008e4a:	2202      	movs	r2, #2
 8008e4c:	6119      	str	r1, [r3, #16]
 8008e4e:	7622      	strb	r2, [r4, #24]
 8008e50:	699b      	ldr	r3, [r3, #24]
 8008e52:	4620      	mov	r0, r4
 8008e54:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008e58:	d131      	bne.n	8008ebe <HAL_TIM_IRQHandler+0x106>
 8008e5a:	f7ff ffa5 	bl	8008da8 <HAL_TIM_OC_DelayElapsedCallback>
 8008e5e:	4620      	mov	r0, r4
 8008e60:	f7ff ffa6 	bl	8008db0 <HAL_TIM_PWM_PulseFinishedCallback>
 8008e64:	2200      	movs	r2, #0
 8008e66:	6823      	ldr	r3, [r4, #0]
 8008e68:	7622      	strb	r2, [r4, #24]
 8008e6a:	e7b4      	b.n	8008dd6 <HAL_TIM_IRQHandler+0x1e>
 8008e6c:	f06f 0102 	mvn.w	r1, #2
 8008e70:	2201      	movs	r2, #1
 8008e72:	6119      	str	r1, [r3, #16]
 8008e74:	7602      	strb	r2, [r0, #24]
 8008e76:	699b      	ldr	r3, [r3, #24]
 8008e78:	0799      	lsls	r1, r3, #30
 8008e7a:	d11d      	bne.n	8008eb8 <HAL_TIM_IRQHandler+0x100>
 8008e7c:	f7ff ff94 	bl	8008da8 <HAL_TIM_OC_DelayElapsedCallback>
 8008e80:	4620      	mov	r0, r4
 8008e82:	f7ff ff95 	bl	8008db0 <HAL_TIM_PWM_PulseFinishedCallback>
 8008e86:	2200      	movs	r2, #0
 8008e88:	6823      	ldr	r3, [r4, #0]
 8008e8a:	7622      	strb	r2, [r4, #24]
 8008e8c:	e79d      	b.n	8008dca <HAL_TIM_IRQHandler+0x12>
 8008e8e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008e92:	4620      	mov	r0, r4
 8008e94:	611a      	str	r2, [r3, #16]
 8008e96:	f7ff ff8d 	bl	8008db4 <HAL_TIM_TriggerCallback>
 8008e9a:	bd10      	pop	{r4, pc}
 8008e9c:	f06f 0201 	mvn.w	r2, #1
 8008ea0:	4620      	mov	r0, r4
 8008ea2:	611a      	str	r2, [r3, #16]
 8008ea4:	f7fb f9ae 	bl	8004204 <HAL_TIM_PeriodElapsedCallback>
 8008ea8:	6823      	ldr	r3, [r4, #0]
 8008eaa:	e7a6      	b.n	8008dfa <HAL_TIM_IRQHandler+0x42>
 8008eac:	f7ff ff7c 	bl	8008da8 <HAL_TIM_OC_DelayElapsedCallback>
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	f7ff ff7d 	bl	8008db0 <HAL_TIM_PWM_PulseFinishedCallback>
 8008eb6:	e7b3      	b.n	8008e20 <HAL_TIM_IRQHandler+0x68>
 8008eb8:	f7ff ff78 	bl	8008dac <HAL_TIM_IC_CaptureCallback>
 8008ebc:	e7e3      	b.n	8008e86 <HAL_TIM_IRQHandler+0xce>
 8008ebe:	f7ff ff75 	bl	8008dac <HAL_TIM_IC_CaptureCallback>
 8008ec2:	e7cf      	b.n	8008e64 <HAL_TIM_IRQHandler+0xac>
 8008ec4:	f7ff ff70 	bl	8008da8 <HAL_TIM_OC_DelayElapsedCallback>
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f7ff ff71 	bl	8008db0 <HAL_TIM_PWM_PulseFinishedCallback>
 8008ece:	e7b6      	b.n	8008e3e <HAL_TIM_IRQHandler+0x86>

08008ed0 <HAL_TIMEx_MasterConfigSynchronization>:
 8008ed0:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8008ed4:	2a01      	cmp	r2, #1
 8008ed6:	d028      	beq.n	8008f2a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 8008ed8:	4603      	mov	r3, r0
 8008eda:	2002      	movs	r0, #2
 8008edc:	681a      	ldr	r2, [r3, #0]
 8008ede:	b430      	push	{r4, r5}
 8008ee0:	f883 0039 	strb.w	r0, [r3, #57]	; 0x39
 8008ee4:	6850      	ldr	r0, [r2, #4]
 8008ee6:	680d      	ldr	r5, [r1, #0]
 8008ee8:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 8008eec:	4328      	orrs	r0, r5
 8008eee:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008ef2:	6894      	ldr	r4, [r2, #8]
 8008ef4:	6050      	str	r0, [r2, #4]
 8008ef6:	d00a      	beq.n	8008f0e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008ef8:	480d      	ldr	r0, [pc, #52]	; (8008f30 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 8008efa:	4282      	cmp	r2, r0
 8008efc:	d007      	beq.n	8008f0e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008efe:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8008f02:	4282      	cmp	r2, r0
 8008f04:	d003      	beq.n	8008f0e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008f06:	f500 3080 	add.w	r0, r0, #65536	; 0x10000
 8008f0a:	4282      	cmp	r2, r0
 8008f0c:	d104      	bne.n	8008f18 <HAL_TIMEx_MasterConfigSynchronization+0x48>
 8008f0e:	6849      	ldr	r1, [r1, #4]
 8008f10:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8008f14:	430c      	orrs	r4, r1
 8008f16:	6094      	str	r4, [r2, #8]
 8008f18:	2200      	movs	r2, #0
 8008f1a:	2101      	movs	r1, #1
 8008f1c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008f20:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8008f24:	4610      	mov	r0, r2
 8008f26:	bc30      	pop	{r4, r5}
 8008f28:	4770      	bx	lr
 8008f2a:	2002      	movs	r0, #2
 8008f2c:	4770      	bx	lr
 8008f2e:	bf00      	nop
 8008f30:	40000400 	.word	0x40000400

08008f34 <USB_EnableGlobalInt>:
 8008f34:	4603      	mov	r3, r0
 8008f36:	2200      	movs	r2, #0
 8008f38:	f44f 413f 	mov.w	r1, #48896	; 0xbf00
 8008f3c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008f40:	4610      	mov	r0, r2
 8008f42:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008f46:	4770      	bx	lr

08008f48 <USB_DisableGlobalInt>:
 8008f48:	4603      	mov	r3, r0
 8008f4a:	f244 02ff 	movw	r2, #16639	; 0x40ff
 8008f4e:	f8b3 1040 	ldrh.w	r1, [r3, #64]	; 0x40
 8008f52:	2000      	movs	r0, #0
 8008f54:	400a      	ands	r2, r1
 8008f56:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008f5a:	4770      	bx	lr

08008f5c <USB_DevInit>:
 8008f5c:	b084      	sub	sp, #16
 8008f5e:	f10d 0c04 	add.w	ip, sp, #4
 8008f62:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 8008f66:	4603      	mov	r3, r0
 8008f68:	2200      	movs	r2, #0
 8008f6a:	2101      	movs	r1, #1
 8008f6c:	4610      	mov	r0, r2
 8008f6e:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008f72:	b004      	add	sp, #16
 8008f74:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008f78:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008f7c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8008f80:	4770      	bx	lr
 8008f82:	bf00      	nop

08008f84 <USB_ActivateEndpoint>:
 8008f84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f86:	780a      	ldrb	r2, [r1, #0]
 8008f88:	f891 e003 	ldrb.w	lr, [r1, #3]
 8008f8c:	f830 c022 	ldrh.w	ip, [r0, r2, lsl #2]
 8008f90:	4603      	mov	r3, r0
 8008f92:	f42c 4cec 	bic.w	ip, ip, #30208	; 0x7600
 8008f96:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8008f9a:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8008f9e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8008fa2:	f1be 0f03 	cmp.w	lr, #3
 8008fa6:	f200 815a 	bhi.w	800925e <USB_ActivateEndpoint+0x2da>
 8008faa:	e8df f00e 	tbb	[pc, lr]
 8008fae:	4e52      	.short	0x4e52
 8008fb0:	0204      	.short	0x0204
 8008fb2:	f44c 6cc0 	orr.w	ip, ip, #1536	; 0x600
 8008fb6:	2000      	movs	r0, #0
 8008fb8:	f248 0580 	movw	r5, #32896	; 0x8080
 8008fbc:	ea4c 0c05 	orr.w	ip, ip, r5
 8008fc0:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8008fc4:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8008fc8:	4ca6      	ldr	r4, [pc, #664]	; (8009264 <USB_ActivateEndpoint+0x2e0>)
 8008fca:	fa1f fc8c 	uxth.w	ip, ip
 8008fce:	ea0c 0c04 	and.w	ip, ip, r4
 8008fd2:	ea4c 0c02 	orr.w	ip, ip, r2
 8008fd6:	ea45 050c 	orr.w	r5, r5, ip
 8008fda:	f823 5022 	strh.w	r5, [r3, r2, lsl #2]
 8008fde:	7b0d      	ldrb	r5, [r1, #12]
 8008fe0:	2d00      	cmp	r5, #0
 8008fe2:	d17e      	bne.n	80090e2 <USB_ActivateEndpoint+0x15e>
 8008fe4:	784d      	ldrb	r5, [r1, #1]
 8008fe6:	2d00      	cmp	r5, #0
 8008fe8:	f000 80dd 	beq.w	80091a6 <USB_ActivateEndpoint+0x222>
 8008fec:	88c9      	ldrh	r1, [r1, #6]
 8008fee:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8008ff2:	0849      	lsrs	r1, r1, #1
 8008ff4:	eb03 1602 	add.w	r6, r3, r2, lsl #4
 8008ff8:	0049      	lsls	r1, r1, #1
 8008ffa:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8008ffe:	b2ad      	uxth	r5, r5
 8009000:	5371      	strh	r1, [r6, r5]
 8009002:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009006:	064e      	lsls	r6, r1, #25
 8009008:	d509      	bpl.n	800901e <USB_ActivateEndpoint+0x9a>
 800900a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800900e:	b289      	uxth	r1, r1
 8009010:	400c      	ands	r4, r1
 8009012:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8009016:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
 800901a:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 800901e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009022:	f1be 0f01 	cmp.w	lr, #1
 8009026:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800902a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800902e:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8009032:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8009036:	d04d      	beq.n	80090d4 <USB_ActivateEndpoint+0x150>
 8009038:	f081 0120 	eor.w	r1, r1, #32
 800903c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009040:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8009044:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009048:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800904a:	2000      	movs	r0, #0
 800904c:	f44c 6c80 	orr.w	ip, ip, #1024	; 0x400
 8009050:	e7b2      	b.n	8008fb8 <USB_ActivateEndpoint+0x34>
 8009052:	4670      	mov	r0, lr
 8009054:	f44c 7c00 	orr.w	ip, ip, #512	; 0x200
 8009058:	e7ae      	b.n	8008fb8 <USB_ActivateEndpoint+0x34>
 800905a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800905e:	044d      	lsls	r5, r1, #17
 8009060:	d509      	bpl.n	8009076 <USB_ActivateEndpoint+0xf2>
 8009062:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009066:	b289      	uxth	r1, r1
 8009068:	400c      	ands	r4, r1
 800906a:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 800906e:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009072:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8009076:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800907a:	0649      	lsls	r1, r1, #25
 800907c:	d50d      	bpl.n	800909a <USB_ActivateEndpoint+0x116>
 800907e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009082:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8009086:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800908a:	0409      	lsls	r1, r1, #16
 800908c:	0c09      	lsrs	r1, r1, #16
 800908e:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009092:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8009096:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 800909a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800909e:	f1be 0f01 	cmp.w	lr, #1
 80090a2:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80090a6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80090aa:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80090ae:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80090b2:	bf18      	it	ne
 80090b4:	f081 0120 	eorne.w	r1, r1, #32
 80090b8:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80090bc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80090c0:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80090c4:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80090c8:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 80090cc:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80090d0:	0409      	lsls	r1, r1, #16
 80090d2:	0c09      	lsrs	r1, r1, #16
 80090d4:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80090d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80090dc:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80090e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090e2:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 80090e6:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 80090ea:	fa1f fc8c 	uxth.w	ip, ip
 80090ee:	ea0c 0c04 	and.w	ip, ip, r4
 80090f2:	f44c 4c01 	orr.w	ip, ip, #33024	; 0x8100
 80090f6:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 80090fa:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 80090fe:	f8b3 c050 	ldrh.w	ip, [r3, #80]	; 0x50
 8009102:	890e      	ldrh	r6, [r1, #8]
 8009104:	fa1f fc8c 	uxth.w	ip, ip
 8009108:	0876      	lsrs	r6, r6, #1
 800910a:	44bc      	add	ip, r7
 800910c:	0076      	lsls	r6, r6, #1
 800910e:	f8ac 6400 	strh.w	r6, [ip, #1024]	; 0x400
 8009112:	f8b1 c00a 	ldrh.w	ip, [r1, #10]
 8009116:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 800911a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800911e:	b2ad      	uxth	r5, r5
 8009120:	443d      	add	r5, r7
 8009122:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8009126:	f8a5 c408 	strh.w	ip, [r5, #1032]	; 0x408
 800912a:	7849      	ldrb	r1, [r1, #1]
 800912c:	2900      	cmp	r1, #0
 800912e:	d194      	bne.n	800905a <USB_ActivateEndpoint+0xd6>
 8009130:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009134:	044f      	lsls	r7, r1, #17
 8009136:	d509      	bpl.n	800914c <USB_ActivateEndpoint+0x1c8>
 8009138:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800913c:	b289      	uxth	r1, r1
 800913e:	400c      	ands	r4, r1
 8009140:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8009144:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009148:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 800914c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009150:	064e      	lsls	r6, r1, #25
 8009152:	d50d      	bpl.n	8009170 <USB_ActivateEndpoint+0x1ec>
 8009154:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009158:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800915c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8009160:	0409      	lsls	r1, r1, #16
 8009162:	0c09      	lsrs	r1, r1, #16
 8009164:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009168:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 800916c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009170:	f248 0480 	movw	r4, #32896	; 0x8080
 8009174:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009178:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800917c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8009180:	0409      	lsls	r1, r1, #16
 8009182:	0c09      	lsrs	r1, r1, #16
 8009184:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8009188:	4321      	orrs	r1, r4
 800918a:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 800918e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009192:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8009196:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800919a:	0409      	lsls	r1, r1, #16
 800919c:	0c09      	lsrs	r1, r1, #16
 800919e:	4321      	orrs	r1, r4
 80091a0:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80091a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091a6:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 80091aa:	88cd      	ldrh	r5, [r1, #6]
 80091ac:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 80091b0:	b2a4      	uxth	r4, r4
 80091b2:	086d      	lsrs	r5, r5, #1
 80091b4:	006d      	lsls	r5, r5, #1
 80091b6:	443c      	add	r4, r7
 80091b8:	690e      	ldr	r6, [r1, #16]
 80091ba:	f8a4 5408 	strh.w	r5, [r4, #1032]	; 0x408
 80091be:	f8b3 1050 	ldrh.w	r1, [r3, #80]	; 0x50
 80091c2:	b289      	uxth	r1, r1
 80091c4:	4439      	add	r1, r7
 80091c6:	b366      	cbz	r6, 8009222 <USB_ActivateEndpoint+0x29e>
 80091c8:	2e3e      	cmp	r6, #62	; 0x3e
 80091ca:	d83c      	bhi.n	8009246 <USB_ActivateEndpoint+0x2c2>
 80091cc:	0874      	lsrs	r4, r6, #1
 80091ce:	07f5      	lsls	r5, r6, #31
 80091d0:	bf48      	it	mi
 80091d2:	3401      	addmi	r4, #1
 80091d4:	02a4      	lsls	r4, r4, #10
 80091d6:	b2a4      	uxth	r4, r4
 80091d8:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 80091dc:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80091e0:	0449      	lsls	r1, r1, #17
 80091e2:	d50d      	bpl.n	8009200 <USB_ActivateEndpoint+0x27c>
 80091e4:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80091e8:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80091ec:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80091f0:	0409      	lsls	r1, r1, #16
 80091f2:	0c09      	lsrs	r1, r1, #16
 80091f4:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 80091f8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80091fc:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009200:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009204:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8009208:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800920c:	0409      	lsls	r1, r1, #16
 800920e:	0c09      	lsrs	r1, r1, #16
 8009210:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8009214:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009218:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800921c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009220:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009222:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8009226:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 800922a:	0424      	lsls	r4, r4, #16
 800922c:	0c24      	lsrs	r4, r4, #16
 800922e:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8009232:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8009236:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 800923a:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 800923e:	b2a4      	uxth	r4, r4
 8009240:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8009244:	e7ca      	b.n	80091dc <USB_ActivateEndpoint+0x258>
 8009246:	0975      	lsrs	r5, r6, #5
 8009248:	06f4      	lsls	r4, r6, #27
 800924a:	4c07      	ldr	r4, [pc, #28]	; (8009268 <USB_ActivateEndpoint+0x2e4>)
 800924c:	bf08      	it	eq
 800924e:	f105 35ff 	addeq.w	r5, r5, #4294967295
 8009252:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
 8009256:	b2a4      	uxth	r4, r4
 8009258:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 800925c:	e7be      	b.n	80091dc <USB_ActivateEndpoint+0x258>
 800925e:	2001      	movs	r0, #1
 8009260:	e6aa      	b.n	8008fb8 <USB_ActivateEndpoint+0x34>
 8009262:	bf00      	nop
 8009264:	ffff8f8f 	.word	0xffff8f8f
 8009268:	ffff8000 	.word	0xffff8000

0800926c <USB_DeactivateEndpoint>:
 800926c:	7b0b      	ldrb	r3, [r1, #12]
 800926e:	b9cb      	cbnz	r3, 80092a4 <USB_DeactivateEndpoint+0x38>
 8009270:	784b      	ldrb	r3, [r1, #1]
 8009272:	780a      	ldrb	r2, [r1, #0]
 8009274:	2b00      	cmp	r3, #0
 8009276:	f000 80b1 	beq.w	80093dc <USB_DeactivateEndpoint+0x170>
 800927a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800927e:	0659      	lsls	r1, r3, #25
 8009280:	f100 80c5 	bmi.w	800940e <USB_DeactivateEndpoint+0x1a2>
 8009284:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009288:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800928c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009290:	041b      	lsls	r3, r3, #16
 8009292:	0c1b      	lsrs	r3, r3, #16
 8009294:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009298:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800929c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80092a0:	2000      	movs	r0, #0
 80092a2:	4770      	bx	lr
 80092a4:	784b      	ldrb	r3, [r1, #1]
 80092a6:	780a      	ldrb	r2, [r1, #0]
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d14b      	bne.n	8009344 <USB_DeactivateEndpoint+0xd8>
 80092ac:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80092b0:	0459      	lsls	r1, r3, #17
 80092b2:	d50d      	bpl.n	80092d0 <USB_DeactivateEndpoint+0x64>
 80092b4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80092b8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80092bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80092c0:	041b      	lsls	r3, r3, #16
 80092c2:	0c1b      	lsrs	r3, r3, #16
 80092c4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80092c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80092cc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80092d0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80092d4:	065b      	lsls	r3, r3, #25
 80092d6:	d50d      	bpl.n	80092f4 <USB_DeactivateEndpoint+0x88>
 80092d8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80092dc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80092e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80092e4:	041b      	lsls	r3, r3, #16
 80092e6:	0c1b      	lsrs	r3, r3, #16
 80092e8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80092ec:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80092f0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80092f4:	f248 0180 	movw	r1, #32896	; 0x8080
 80092f8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80092fc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009300:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009304:	041b      	lsls	r3, r3, #16
 8009306:	0c1b      	lsrs	r3, r3, #16
 8009308:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800930c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009310:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009314:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009318:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800931c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009320:	041b      	lsls	r3, r3, #16
 8009322:	0c1b      	lsrs	r3, r3, #16
 8009324:	430b      	orrs	r3, r1
 8009326:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800932a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800932e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009336:	041b      	lsls	r3, r3, #16
 8009338:	0c1b      	lsrs	r3, r3, #16
 800933a:	430b      	orrs	r3, r1
 800933c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009340:	2000      	movs	r0, #0
 8009342:	4770      	bx	lr
 8009344:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009348:	0459      	lsls	r1, r3, #17
 800934a:	d50d      	bpl.n	8009368 <USB_DeactivateEndpoint+0xfc>
 800934c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009350:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009354:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009358:	041b      	lsls	r3, r3, #16
 800935a:	0c1b      	lsrs	r3, r3, #16
 800935c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009360:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009364:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009368:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800936c:	065b      	lsls	r3, r3, #25
 800936e:	d50d      	bpl.n	800938c <USB_DeactivateEndpoint+0x120>
 8009370:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009374:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009378:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800937c:	041b      	lsls	r3, r3, #16
 800937e:	0c1b      	lsrs	r3, r3, #16
 8009380:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009384:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009388:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800938c:	f248 0180 	movw	r1, #32896	; 0x8080
 8009390:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009394:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009398:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800939c:	041b      	lsls	r3, r3, #16
 800939e:	0c1b      	lsrs	r3, r3, #16
 80093a0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80093a4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80093a8:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80093ac:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80093b0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80093b4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80093b8:	041b      	lsls	r3, r3, #16
 80093ba:	0c1b      	lsrs	r3, r3, #16
 80093bc:	430b      	orrs	r3, r1
 80093be:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80093c2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80093c6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80093ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80093ce:	041b      	lsls	r3, r3, #16
 80093d0:	0c1b      	lsrs	r3, r3, #16
 80093d2:	430b      	orrs	r3, r1
 80093d4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80093d8:	2000      	movs	r0, #0
 80093da:	4770      	bx	lr
 80093dc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80093e0:	045b      	lsls	r3, r3, #17
 80093e2:	d50d      	bpl.n	8009400 <USB_DeactivateEndpoint+0x194>
 80093e4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80093e8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80093ec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80093f0:	041b      	lsls	r3, r3, #16
 80093f2:	0c1b      	lsrs	r3, r3, #16
 80093f4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80093f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80093fc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009400:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009404:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009408:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800940c:	e740      	b.n	8009290 <USB_DeactivateEndpoint+0x24>
 800940e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009412:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009416:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800941a:	041b      	lsls	r3, r3, #16
 800941c:	0c1b      	lsrs	r3, r3, #16
 800941e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009422:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009426:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800942a:	e72b      	b.n	8009284 <USB_DeactivateEndpoint+0x18>

0800942c <USB_EPStartXfer>:
 800942c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009430:	784b      	ldrb	r3, [r1, #1]
 8009432:	4602      	mov	r2, r0
 8009434:	2b01      	cmp	r3, #1
 8009436:	d06b      	beq.n	8009510 <USB_EPStartXfer+0xe4>
 8009438:	7b08      	ldrb	r0, [r1, #12]
 800943a:	2800      	cmp	r0, #0
 800943c:	d037      	beq.n	80094ae <USB_EPStartXfer+0x82>
 800943e:	78c8      	ldrb	r0, [r1, #3]
 8009440:	2802      	cmp	r0, #2
 8009442:	f000 812d 	beq.w	80096a0 <USB_EPStartXfer+0x274>
 8009446:	2801      	cmp	r0, #1
 8009448:	f040 810a 	bne.w	8009660 <USB_EPStartXfer+0x234>
 800944c:	6988      	ldr	r0, [r1, #24]
 800944e:	690c      	ldr	r4, [r1, #16]
 8009450:	42a0      	cmp	r0, r4
 8009452:	bf94      	ite	ls
 8009454:	2500      	movls	r5, #0
 8009456:	1b05      	subhi	r5, r0, r4
 8009458:	618d      	str	r5, [r1, #24]
 800945a:	bf88      	it	hi
 800945c:	4620      	movhi	r0, r4
 800945e:	2b00      	cmp	r3, #0
 8009460:	f040 811b 	bne.w	800969a <USB_EPStartXfer+0x26e>
 8009464:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009468:	780b      	ldrb	r3, [r1, #0]
 800946a:	b2a4      	uxth	r4, r4
 800946c:	f202 4504 	addw	r5, r2, #1028	; 0x404
 8009470:	011b      	lsls	r3, r3, #4
 8009472:	442c      	add	r4, r5
 8009474:	2800      	cmp	r0, #0
 8009476:	f000 8251 	beq.w	800991c <USB_EPStartXfer+0x4f0>
 800947a:	283e      	cmp	r0, #62	; 0x3e
 800947c:	f200 80f3 	bhi.w	8009666 <USB_EPStartXfer+0x23a>
 8009480:	0845      	lsrs	r5, r0, #1
 8009482:	462e      	mov	r6, r5
 8009484:	f010 0001 	ands.w	r0, r0, #1
 8009488:	bf18      	it	ne
 800948a:	1c6e      	addne	r6, r5, #1
 800948c:	02b6      	lsls	r6, r6, #10
 800948e:	b2b6      	uxth	r6, r6
 8009490:	52e6      	strh	r6, [r4, r3]
 8009492:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009496:	b2a6      	uxth	r6, r4
 8009498:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 800949c:	4434      	add	r4, r6
 800949e:	b100      	cbz	r0, 80094a2 <USB_EPStartXfer+0x76>
 80094a0:	3501      	adds	r5, #1
 80094a2:	02ad      	lsls	r5, r5, #10
 80094a4:	b2a8      	uxth	r0, r5
 80094a6:	52e0      	strh	r0, [r4, r3]
 80094a8:	f891 c000 	ldrb.w	ip, [r1]
 80094ac:	e01d      	b.n	80094ea <USB_EPStartXfer+0xbe>
 80094ae:	698c      	ldr	r4, [r1, #24]
 80094b0:	690b      	ldr	r3, [r1, #16]
 80094b2:	780d      	ldrb	r5, [r1, #0]
 80094b4:	429c      	cmp	r4, r3
 80094b6:	bf84      	itt	hi
 80094b8:	1ae0      	subhi	r0, r4, r3
 80094ba:	461c      	movhi	r4, r3
 80094bc:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80094c0:	6188      	str	r0, [r1, #24]
 80094c2:	b29b      	uxth	r3, r3
 80094c4:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 80094c8:	012d      	lsls	r5, r5, #4
 80094ca:	4403      	add	r3, r0
 80094cc:	2c00      	cmp	r4, #0
 80094ce:	f000 80b7 	beq.w	8009640 <USB_EPStartXfer+0x214>
 80094d2:	2c3e      	cmp	r4, #62	; 0x3e
 80094d4:	f200 8129 	bhi.w	800972a <USB_EPStartXfer+0x2fe>
 80094d8:	0860      	lsrs	r0, r4, #1
 80094da:	07e4      	lsls	r4, r4, #31
 80094dc:	bf48      	it	mi
 80094de:	3001      	addmi	r0, #1
 80094e0:	0280      	lsls	r0, r0, #10
 80094e2:	b280      	uxth	r0, r0
 80094e4:	52e8      	strh	r0, [r5, r3]
 80094e6:	f891 c000 	ldrb.w	ip, [r1]
 80094ea:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 80094ee:	2000      	movs	r0, #0
 80094f0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80094f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80094f8:	041b      	lsls	r3, r3, #16
 80094fa:	0c1b      	lsrs	r3, r3, #16
 80094fc:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009500:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009504:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009508:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 800950c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009510:	690d      	ldr	r5, [r1, #16]
 8009512:	6988      	ldr	r0, [r1, #24]
 8009514:	7b0b      	ldrb	r3, [r1, #12]
 8009516:	42a8      	cmp	r0, r5
 8009518:	bf28      	it	cs
 800951a:	4628      	movcs	r0, r5
 800951c:	2b00      	cmp	r3, #0
 800951e:	d05d      	beq.n	80095dc <USB_EPStartXfer+0x1b0>
 8009520:	78cb      	ldrb	r3, [r1, #3]
 8009522:	2b02      	cmp	r3, #2
 8009524:	f000 810e 	beq.w	8009744 <USB_EPStartXfer+0x318>
 8009528:	f891 8000 	ldrb.w	r8, [r1]
 800952c:	6a0b      	ldr	r3, [r1, #32]
 800952e:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009532:	1a1b      	subs	r3, r3, r0
 8009534:	f424 44e0 	bic.w	r4, r4, #28672	; 0x7000
 8009538:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 800953c:	0424      	lsls	r4, r4, #16
 800953e:	0c24      	lsrs	r4, r4, #16
 8009540:	f444 4401 	orr.w	r4, r4, #33024	; 0x8100
 8009544:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009548:	f822 4028 	strh.w	r4, [r2, r8, lsl #2]
 800954c:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009550:	620b      	str	r3, [r1, #32]
 8009552:	f014 0f40 	tst.w	r4, #64	; 0x40
 8009556:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 800955a:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800955e:	b2a6      	uxth	r6, r4
 8009560:	f000 814a 	beq.w	80097f8 <USB_EPStartXfer+0x3cc>
 8009564:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009568:	4434      	add	r4, r6
 800956a:	b286      	uxth	r6, r0
 800956c:	f824 6008 	strh.w	r6, [r4, r8]
 8009570:	894c      	ldrh	r4, [r1, #10]
 8009572:	3601      	adds	r6, #1
 8009574:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 8009578:	0876      	lsrs	r6, r6, #1
 800957a:	f8d1 9014 	ldr.w	r9, [r1, #20]
 800957e:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8009582:	d008      	beq.n	8009596 <USB_EPStartXfer+0x16a>
 8009584:	46cc      	mov	ip, r9
 8009586:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800958a:	f83c eb02 	ldrh.w	lr, [ip], #2
 800958e:	f824 eb04 	strh.w	lr, [r4], #4
 8009592:	42a6      	cmp	r6, r4
 8009594:	d1f9      	bne.n	800958a <USB_EPStartXfer+0x15e>
 8009596:	eb09 0400 	add.w	r4, r9, r0
 800959a:	429d      	cmp	r5, r3
 800959c:	614c      	str	r4, [r1, #20]
 800959e:	f0c0 81b7 	bcc.w	8009910 <USB_EPStartXfer+0x4e4>
 80095a2:	2500      	movs	r5, #0
 80095a4:	620d      	str	r5, [r1, #32]
 80095a6:	2b00      	cmp	r3, #0
 80095a8:	d036      	beq.n	8009618 <USB_EPStartXfer+0x1ec>
 80095aa:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80095ae:	b285      	uxth	r5, r0
 80095b0:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80095b4:	4428      	add	r0, r5
 80095b6:	b29d      	uxth	r5, r3
 80095b8:	462b      	mov	r3, r5
 80095ba:	f820 5008 	strh.w	r5, [r0, r8]
 80095be:	8908      	ldrh	r0, [r1, #8]
 80095c0:	3301      	adds	r3, #1
 80095c2:	085b      	lsrs	r3, r3, #1
 80095c4:	eb07 0040 	add.w	r0, r7, r0, lsl #1
 80095c8:	d026      	beq.n	8009618 <USB_EPStartXfer+0x1ec>
 80095ca:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 80095ce:	f834 3b02 	ldrh.w	r3, [r4], #2
 80095d2:	f820 3b04 	strh.w	r3, [r0], #4
 80095d6:	4285      	cmp	r5, r0
 80095d8:	d1f9      	bne.n	80095ce <USB_EPStartXfer+0x1a2>
 80095da:	e01d      	b.n	8009618 <USB_EPStartXfer+0x1ec>
 80095dc:	b284      	uxth	r4, r0
 80095de:	694b      	ldr	r3, [r1, #20]
 80095e0:	88cd      	ldrh	r5, [r1, #6]
 80095e2:	f104 0e01 	add.w	lr, r4, #1
 80095e6:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 80095ea:	ea5f 0e5e 	movs.w	lr, lr, lsr #1
 80095ee:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 80095f2:	bf18      	it	ne
 80095f4:	eb03 0e4e 	addne.w	lr, r3, lr, lsl #1
 80095f8:	d005      	beq.n	8009606 <USB_EPStartXfer+0x1da>
 80095fa:	f833 cb02 	ldrh.w	ip, [r3], #2
 80095fe:	4573      	cmp	r3, lr
 8009600:	f820 cb04 	strh.w	ip, [r0], #4
 8009604:	d1f9      	bne.n	80095fa <USB_EPStartXfer+0x1ce>
 8009606:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 800960a:	7808      	ldrb	r0, [r1, #0]
 800960c:	b29d      	uxth	r5, r3
 800960e:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009612:	0100      	lsls	r0, r0, #4
 8009614:	442b      	add	r3, r5
 8009616:	52c4      	strh	r4, [r0, r3]
 8009618:	7809      	ldrb	r1, [r1, #0]
 800961a:	2000      	movs	r0, #0
 800961c:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8009620:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009624:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009628:	041b      	lsls	r3, r3, #16
 800962a:	0c1b      	lsrs	r3, r3, #16
 800962c:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8009630:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009634:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009638:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 800963c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009640:	5ae8      	ldrh	r0, [r5, r3]
 8009642:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8009646:	0400      	lsls	r0, r0, #16
 8009648:	0c00      	lsrs	r0, r0, #16
 800964a:	52e8      	strh	r0, [r5, r3]
 800964c:	5ae8      	ldrh	r0, [r5, r3]
 800964e:	ea6f 4040 	mvn.w	r0, r0, lsl #17
 8009652:	ea6f 4050 	mvn.w	r0, r0, lsr #17
 8009656:	b280      	uxth	r0, r0
 8009658:	52e8      	strh	r0, [r5, r3]
 800965a:	f891 c000 	ldrb.w	ip, [r1]
 800965e:	e744      	b.n	80094ea <USB_EPStartXfer+0xbe>
 8009660:	2001      	movs	r0, #1
 8009662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009666:	0945      	lsrs	r5, r0, #5
 8009668:	462f      	mov	r7, r5
 800966a:	f010 001f 	ands.w	r0, r0, #31
 800966e:	bf08      	it	eq
 8009670:	f105 37ff 	addeq.w	r7, r5, #4294967295
 8009674:	462e      	mov	r6, r5
 8009676:	4dbb      	ldr	r5, [pc, #748]	; (8009964 <USB_EPStartXfer+0x538>)
 8009678:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 800967c:	b2ad      	uxth	r5, r5
 800967e:	52e5      	strh	r5, [r4, r3]
 8009680:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009684:	b2a5      	uxth	r5, r4
 8009686:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 800968a:	442c      	add	r4, r5
 800968c:	b900      	cbnz	r0, 8009690 <USB_EPStartXfer+0x264>
 800968e:	3e01      	subs	r6, #1
 8009690:	48b4      	ldr	r0, [pc, #720]	; (8009964 <USB_EPStartXfer+0x538>)
 8009692:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009696:	b280      	uxth	r0, r0
 8009698:	52e0      	strh	r0, [r4, r3]
 800969a:	f891 c000 	ldrb.w	ip, [r1]
 800969e:	e724      	b.n	80094ea <USB_EPStartXfer+0xbe>
 80096a0:	bb13      	cbnz	r3, 80096e8 <USB_EPStartXfer+0x2bc>
 80096a2:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80096a6:	780b      	ldrb	r3, [r1, #0]
 80096a8:	b284      	uxth	r4, r0
 80096aa:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80096ae:	4420      	add	r0, r4
 80096b0:	690c      	ldr	r4, [r1, #16]
 80096b2:	011b      	lsls	r3, r3, #4
 80096b4:	2c00      	cmp	r4, #0
 80096b6:	f000 8109 	beq.w	80098cc <USB_EPStartXfer+0x4a0>
 80096ba:	2c3e      	cmp	r4, #62	; 0x3e
 80096bc:	f200 818e 	bhi.w	80099dc <USB_EPStartXfer+0x5b0>
 80096c0:	0865      	lsrs	r5, r4, #1
 80096c2:	462e      	mov	r6, r5
 80096c4:	f014 0401 	ands.w	r4, r4, #1
 80096c8:	bf18      	it	ne
 80096ca:	1c6e      	addne	r6, r5, #1
 80096cc:	02b6      	lsls	r6, r6, #10
 80096ce:	b2b6      	uxth	r6, r6
 80096d0:	52c6      	strh	r6, [r0, r3]
 80096d2:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80096d6:	f202 460c 	addw	r6, r2, #1036	; 0x40c
 80096da:	b280      	uxth	r0, r0
 80096dc:	4406      	add	r6, r0
 80096de:	b104      	cbz	r4, 80096e2 <USB_EPStartXfer+0x2b6>
 80096e0:	3501      	adds	r5, #1
 80096e2:	02ad      	lsls	r5, r5, #10
 80096e4:	b2a8      	uxth	r0, r5
 80096e6:	52f0      	strh	r0, [r6, r3]
 80096e8:	69cb      	ldr	r3, [r1, #28]
 80096ea:	2b00      	cmp	r3, #0
 80096ec:	d0d5      	beq.n	800969a <USB_EPStartXfer+0x26e>
 80096ee:	f244 0340 	movw	r3, #16448	; 0x4040
 80096f2:	f891 c000 	ldrb.w	ip, [r1]
 80096f6:	f832 002c 	ldrh.w	r0, [r2, ip, lsl #2]
 80096fa:	ea03 0400 	and.w	r4, r3, r0
 80096fe:	4383      	bics	r3, r0
 8009700:	d002      	beq.n	8009708 <USB_EPStartXfer+0x2dc>
 8009702:	2c00      	cmp	r4, #0
 8009704:	f47f aef1 	bne.w	80094ea <USB_EPStartXfer+0xbe>
 8009708:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 800970c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009710:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009714:	041b      	lsls	r3, r3, #16
 8009716:	0c1b      	lsrs	r3, r3, #16
 8009718:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800971c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009720:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 8009724:	f891 c000 	ldrb.w	ip, [r1]
 8009728:	e6df      	b.n	80094ea <USB_EPStartXfer+0xbe>
 800972a:	0966      	lsrs	r6, r4, #5
 800972c:	06e0      	lsls	r0, r4, #27
 800972e:	488d      	ldr	r0, [pc, #564]	; (8009964 <USB_EPStartXfer+0x538>)
 8009730:	bf08      	it	eq
 8009732:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8009736:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 800973a:	b280      	uxth	r0, r0
 800973c:	52e8      	strh	r0, [r5, r3]
 800973e:	f891 c000 	ldrb.w	ip, [r1]
 8009742:	e6d2      	b.n	80094ea <USB_EPStartXfer+0xbe>
 8009744:	6a0c      	ldr	r4, [r1, #32]
 8009746:	42a5      	cmp	r5, r4
 8009748:	f080 8094 	bcs.w	8009874 <USB_EPStartXfer+0x448>
 800974c:	780e      	ldrb	r6, [r1, #0]
 800974e:	1a24      	subs	r4, r4, r0
 8009750:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 8009754:	ea4f 1906 	mov.w	r9, r6, lsl #4
 8009758:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800975c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009760:	041b      	lsls	r3, r3, #16
 8009762:	0c1b      	lsrs	r3, r3, #16
 8009764:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8009768:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800976c:	f822 3026 	strh.w	r3, [r2, r6, lsl #2]
 8009770:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 8009774:	620c      	str	r4, [r1, #32]
 8009776:	f013 0f40 	tst.w	r3, #64	; 0x40
 800977a:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 800977e:	b29e      	uxth	r6, r3
 8009780:	f000 80f2 	beq.w	8009968 <USB_EPStartXfer+0x53c>
 8009784:	f202 430c 	addw	r3, r2, #1036	; 0x40c
 8009788:	4433      	add	r3, r6
 800978a:	fa1f fa80 	uxth.w	sl, r0
 800978e:	f823 a009 	strh.w	sl, [r3, r9]
 8009792:	894e      	ldrh	r6, [r1, #10]
 8009794:	f10a 0801 	add.w	r8, sl, #1
 8009798:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 800979c:	ea5f 0858 	movs.w	r8, r8, lsr #1
 80097a0:	694f      	ldr	r7, [r1, #20]
 80097a2:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 80097a6:	d008      	beq.n	80097ba <USB_EPStartXfer+0x38e>
 80097a8:	46bc      	mov	ip, r7
 80097aa:	eb06 0b88 	add.w	fp, r6, r8, lsl #2
 80097ae:	f83c eb02 	ldrh.w	lr, [ip], #2
 80097b2:	f826 eb04 	strh.w	lr, [r6], #4
 80097b6:	45b3      	cmp	fp, r6
 80097b8:	d1f9      	bne.n	80097ae <USB_EPStartXfer+0x382>
 80097ba:	4407      	add	r7, r0
 80097bc:	42a5      	cmp	r5, r4
 80097be:	614f      	str	r7, [r1, #20]
 80097c0:	f080 8127 	bcs.w	8009a12 <USB_EPStartXfer+0x5e6>
 80097c4:	1a24      	subs	r4, r4, r0
 80097c6:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80097ca:	620c      	str	r4, [r1, #32]
 80097cc:	b284      	uxth	r4, r0
 80097ce:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80097d2:	4420      	add	r0, r4
 80097d4:	f820 a009 	strh.w	sl, [r0, r9]
 80097d8:	8908      	ldrh	r0, [r1, #8]
 80097da:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80097de:	f1b8 0f00 	cmp.w	r8, #0
 80097e2:	f43f af19 	beq.w	8009618 <USB_EPStartXfer+0x1ec>
 80097e6:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 80097ea:	f837 0b02 	ldrh.w	r0, [r7], #2
 80097ee:	f823 0b04 	strh.w	r0, [r3], #4
 80097f2:	429c      	cmp	r4, r3
 80097f4:	d1f9      	bne.n	80097ea <USB_EPStartXfer+0x3be>
 80097f6:	e70f      	b.n	8009618 <USB_EPStartXfer+0x1ec>
 80097f8:	f202 4404 	addw	r4, r2, #1028	; 0x404
 80097fc:	4434      	add	r4, r6
 80097fe:	b286      	uxth	r6, r0
 8009800:	f824 6008 	strh.w	r6, [r4, r8]
 8009804:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 8009808:	3601      	adds	r6, #1
 800980a:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 800980e:	0876      	lsrs	r6, r6, #1
 8009810:	f8d1 9014 	ldr.w	r9, [r1, #20]
 8009814:	eb07 0c4c 	add.w	ip, r7, ip, lsl #1
 8009818:	d008      	beq.n	800982c <USB_EPStartXfer+0x400>
 800981a:	464c      	mov	r4, r9
 800981c:	eb09 0646 	add.w	r6, r9, r6, lsl #1
 8009820:	f834 eb02 	ldrh.w	lr, [r4], #2
 8009824:	42b4      	cmp	r4, r6
 8009826:	f82c eb04 	strh.w	lr, [ip], #4
 800982a:	d1f9      	bne.n	8009820 <USB_EPStartXfer+0x3f4>
 800982c:	eb09 0400 	add.w	r4, r9, r0
 8009830:	429d      	cmp	r5, r3
 8009832:	614c      	str	r4, [r1, #20]
 8009834:	d36f      	bcc.n	8009916 <USB_EPStartXfer+0x4ea>
 8009836:	2500      	movs	r5, #0
 8009838:	620d      	str	r5, [r1, #32]
 800983a:	2b00      	cmp	r3, #0
 800983c:	f43f aeec 	beq.w	8009618 <USB_EPStartXfer+0x1ec>
 8009840:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009844:	b285      	uxth	r5, r0
 8009846:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 800984a:	4428      	add	r0, r5
 800984c:	b29d      	uxth	r5, r3
 800984e:	462b      	mov	r3, r5
 8009850:	f820 5008 	strh.w	r5, [r0, r8]
 8009854:	8948      	ldrh	r0, [r1, #10]
 8009856:	3301      	adds	r3, #1
 8009858:	085b      	lsrs	r3, r3, #1
 800985a:	eb07 0740 	add.w	r7, r7, r0, lsl #1
 800985e:	f43f aedb 	beq.w	8009618 <USB_EPStartXfer+0x1ec>
 8009862:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8009866:	f834 0b02 	ldrh.w	r0, [r4], #2
 800986a:	f827 0b04 	strh.w	r0, [r7], #4
 800986e:	429f      	cmp	r7, r3
 8009870:	d1f9      	bne.n	8009866 <USB_EPStartXfer+0x43a>
 8009872:	e6d1      	b.n	8009618 <USB_EPStartXfer+0x1ec>
 8009874:	7808      	ldrb	r0, [r1, #0]
 8009876:	f832 3020 	ldrh.w	r3, [r2, r0, lsl #2]
 800987a:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 800987e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009882:	041b      	lsls	r3, r3, #16
 8009884:	0c1b      	lsrs	r3, r3, #16
 8009886:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800988a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800988e:	f822 3020 	strh.w	r3, [r2, r0, lsl #2]
 8009892:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009896:	0100      	lsls	r0, r0, #4
 8009898:	b29d      	uxth	r5, r3
 800989a:	f202 4304 	addw	r3, r2, #1028	; 0x404
 800989e:	442b      	add	r3, r5
 80098a0:	b2a5      	uxth	r5, r4
 80098a2:	521d      	strh	r5, [r3, r0]
 80098a4:	b2a0      	uxth	r0, r4
 80098a6:	890d      	ldrh	r5, [r1, #8]
 80098a8:	3001      	adds	r0, #1
 80098aa:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 80098ae:	0840      	lsrs	r0, r0, #1
 80098b0:	694c      	ldr	r4, [r1, #20]
 80098b2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80098b6:	f43f aeaf 	beq.w	8009618 <USB_EPStartXfer+0x1ec>
 80098ba:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80098be:	f834 5b02 	ldrh.w	r5, [r4], #2
 80098c2:	f823 5b04 	strh.w	r5, [r3], #4
 80098c6:	4298      	cmp	r0, r3
 80098c8:	d1f9      	bne.n	80098be <USB_EPStartXfer+0x492>
 80098ca:	e6a5      	b.n	8009618 <USB_EPStartXfer+0x1ec>
 80098cc:	5ac4      	ldrh	r4, [r0, r3]
 80098ce:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 80098d2:	0424      	lsls	r4, r4, #16
 80098d4:	0c24      	lsrs	r4, r4, #16
 80098d6:	52c4      	strh	r4, [r0, r3]
 80098d8:	5ac5      	ldrh	r5, [r0, r3]
 80098da:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80098de:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 80098e2:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 80098e6:	b2ad      	uxth	r5, r5
 80098e8:	52c5      	strh	r5, [r0, r3]
 80098ea:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80098ee:	b285      	uxth	r5, r0
 80098f0:	4620      	mov	r0, r4
 80098f2:	4428      	add	r0, r5
 80098f4:	5ac4      	ldrh	r4, [r0, r3]
 80098f6:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 80098fa:	0424      	lsls	r4, r4, #16
 80098fc:	0c24      	lsrs	r4, r4, #16
 80098fe:	52c4      	strh	r4, [r0, r3]
 8009900:	5ac4      	ldrh	r4, [r0, r3]
 8009902:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8009906:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 800990a:	b2a4      	uxth	r4, r4
 800990c:	52c4      	strh	r4, [r0, r3]
 800990e:	e6eb      	b.n	80096e8 <USB_EPStartXfer+0x2bc>
 8009910:	1a1d      	subs	r5, r3, r0
 8009912:	4603      	mov	r3, r0
 8009914:	e646      	b.n	80095a4 <USB_EPStartXfer+0x178>
 8009916:	1a1d      	subs	r5, r3, r0
 8009918:	4603      	mov	r3, r0
 800991a:	e78d      	b.n	8009838 <USB_EPStartXfer+0x40c>
 800991c:	5ae0      	ldrh	r0, [r4, r3]
 800991e:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8009922:	0400      	lsls	r0, r0, #16
 8009924:	0c00      	lsrs	r0, r0, #16
 8009926:	52e0      	strh	r0, [r4, r3]
 8009928:	5ae5      	ldrh	r5, [r4, r3]
 800992a:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 800992e:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8009932:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 8009936:	b2ad      	uxth	r5, r5
 8009938:	52e5      	strh	r5, [r4, r3]
 800993a:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 800993e:	b2a4      	uxth	r4, r4
 8009940:	4420      	add	r0, r4
 8009942:	5ac4      	ldrh	r4, [r0, r3]
 8009944:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009948:	0424      	lsls	r4, r4, #16
 800994a:	0c24      	lsrs	r4, r4, #16
 800994c:	52c4      	strh	r4, [r0, r3]
 800994e:	5ac4      	ldrh	r4, [r0, r3]
 8009950:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8009954:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8009958:	b2a4      	uxth	r4, r4
 800995a:	52c4      	strh	r4, [r0, r3]
 800995c:	f891 c000 	ldrb.w	ip, [r1]
 8009960:	e5c3      	b.n	80094ea <USB_EPStartXfer+0xbe>
 8009962:	bf00      	nop
 8009964:	ffff8000 	.word	0xffff8000
 8009968:	f202 4304 	addw	r3, r2, #1028	; 0x404
 800996c:	4433      	add	r3, r6
 800996e:	fa1f fa80 	uxth.w	sl, r0
 8009972:	f823 a009 	strh.w	sl, [r3, r9]
 8009976:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 800997a:	f10a 0801 	add.w	r8, sl, #1
 800997e:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009982:	ea5f 0858 	movs.w	r8, r8, lsr #1
 8009986:	694f      	ldr	r7, [r1, #20]
 8009988:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 800998c:	d008      	beq.n	80099a0 <USB_EPStartXfer+0x574>
 800998e:	463e      	mov	r6, r7
 8009990:	eb07 0b48 	add.w	fp, r7, r8, lsl #1
 8009994:	f836 eb02 	ldrh.w	lr, [r6], #2
 8009998:	45b3      	cmp	fp, r6
 800999a:	f82c eb04 	strh.w	lr, [ip], #4
 800999e:	d1f9      	bne.n	8009994 <USB_EPStartXfer+0x568>
 80099a0:	4407      	add	r7, r0
 80099a2:	42a5      	cmp	r5, r4
 80099a4:	614f      	str	r7, [r1, #20]
 80099a6:	d23e      	bcs.n	8009a26 <USB_EPStartXfer+0x5fa>
 80099a8:	1a24      	subs	r4, r4, r0
 80099aa:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80099ae:	620c      	str	r4, [r1, #32]
 80099b0:	b284      	uxth	r4, r0
 80099b2:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 80099b6:	4420      	add	r0, r4
 80099b8:	f820 a009 	strh.w	sl, [r0, r9]
 80099bc:	8948      	ldrh	r0, [r1, #10]
 80099be:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80099c2:	f1b8 0f00 	cmp.w	r8, #0
 80099c6:	f43f ae27 	beq.w	8009618 <USB_EPStartXfer+0x1ec>
 80099ca:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 80099ce:	f837 0b02 	ldrh.w	r0, [r7], #2
 80099d2:	f823 0b04 	strh.w	r0, [r3], #4
 80099d6:	429c      	cmp	r4, r3
 80099d8:	d1f9      	bne.n	80099ce <USB_EPStartXfer+0x5a2>
 80099da:	e61d      	b.n	8009618 <USB_EPStartXfer+0x1ec>
 80099dc:	0965      	lsrs	r5, r4, #5
 80099de:	462f      	mov	r7, r5
 80099e0:	f014 041f 	ands.w	r4, r4, #31
 80099e4:	bf08      	it	eq
 80099e6:	f105 37ff 	addeq.w	r7, r5, #4294967295
 80099ea:	462e      	mov	r6, r5
 80099ec:	4d13      	ldr	r5, [pc, #76]	; (8009a3c <USB_EPStartXfer+0x610>)
 80099ee:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 80099f2:	b2ad      	uxth	r5, r5
 80099f4:	52c5      	strh	r5, [r0, r3]
 80099f6:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80099fa:	f202 450c 	addw	r5, r2, #1036	; 0x40c
 80099fe:	b280      	uxth	r0, r0
 8009a00:	4405      	add	r5, r0
 8009a02:	b904      	cbnz	r4, 8009a06 <USB_EPStartXfer+0x5da>
 8009a04:	3e01      	subs	r6, #1
 8009a06:	480d      	ldr	r0, [pc, #52]	; (8009a3c <USB_EPStartXfer+0x610>)
 8009a08:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009a0c:	b280      	uxth	r0, r0
 8009a0e:	52e8      	strh	r0, [r5, r3]
 8009a10:	e66a      	b.n	80096e8 <USB_EPStartXfer+0x2bc>
 8009a12:	fa1f f884 	uxth.w	r8, r4
 8009a16:	f108 0801 	add.w	r8, r8, #1
 8009a1a:	fa1f fa84 	uxth.w	sl, r4
 8009a1e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8009a22:	2400      	movs	r4, #0
 8009a24:	e6cf      	b.n	80097c6 <USB_EPStartXfer+0x39a>
 8009a26:	fa1f f884 	uxth.w	r8, r4
 8009a2a:	f108 0801 	add.w	r8, r8, #1
 8009a2e:	fa1f fa84 	uxth.w	sl, r4
 8009a32:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8009a36:	2400      	movs	r4, #0
 8009a38:	e7b7      	b.n	80099aa <USB_EPStartXfer+0x57e>
 8009a3a:	bf00      	nop
 8009a3c:	ffff8000 	.word	0xffff8000

08009a40 <USB_EPSetStall>:
 8009a40:	784b      	ldrb	r3, [r1, #1]
 8009a42:	780a      	ldrb	r2, [r1, #0]
 8009a44:	b18b      	cbz	r3, 8009a6a <USB_EPSetStall+0x2a>
 8009a46:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009a4a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009a4e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009a52:	041b      	lsls	r3, r3, #16
 8009a54:	0c1b      	lsrs	r3, r3, #16
 8009a56:	f083 0310 	eor.w	r3, r3, #16
 8009a5a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a5e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009a62:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009a66:	2000      	movs	r0, #0
 8009a68:	4770      	bx	lr
 8009a6a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009a6e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009a72:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009a76:	041b      	lsls	r3, r3, #16
 8009a78:	0c1b      	lsrs	r3, r3, #16
 8009a7a:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8009a7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009a86:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009a8a:	2000      	movs	r0, #0
 8009a8c:	4770      	bx	lr
 8009a8e:	bf00      	nop

08009a90 <USB_EPClearStall>:
 8009a90:	7b0b      	ldrb	r3, [r1, #12]
 8009a92:	bb3b      	cbnz	r3, 8009ae4 <USB_EPClearStall+0x54>
 8009a94:	784b      	ldrb	r3, [r1, #1]
 8009a96:	780a      	ldrb	r2, [r1, #0]
 8009a98:	b333      	cbz	r3, 8009ae8 <USB_EPClearStall+0x58>
 8009a9a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009a9e:	065b      	lsls	r3, r3, #25
 8009aa0:	d50d      	bpl.n	8009abe <USB_EPClearStall+0x2e>
 8009aa2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009aa6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009aaa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009aae:	041b      	lsls	r3, r3, #16
 8009ab0:	0c1b      	lsrs	r3, r3, #16
 8009ab2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009ab6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009aba:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009abe:	78cb      	ldrb	r3, [r1, #3]
 8009ac0:	2b01      	cmp	r3, #1
 8009ac2:	d00f      	beq.n	8009ae4 <USB_EPClearStall+0x54>
 8009ac4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009ac8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009acc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009ad0:	041b      	lsls	r3, r3, #16
 8009ad2:	0c1b      	lsrs	r3, r3, #16
 8009ad4:	f083 0320 	eor.w	r3, r3, #32
 8009ad8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009adc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ae0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009ae4:	2000      	movs	r0, #0
 8009ae6:	4770      	bx	lr
 8009ae8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009aec:	045b      	lsls	r3, r3, #17
 8009aee:	d50d      	bpl.n	8009b0c <USB_EPClearStall+0x7c>
 8009af0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009af4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009af8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009afc:	041b      	lsls	r3, r3, #16
 8009afe:	0c1b      	lsrs	r3, r3, #16
 8009b00:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009b04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009b08:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009b0c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009b10:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009b14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009b18:	041b      	lsls	r3, r3, #16
 8009b1a:	0c1b      	lsrs	r3, r3, #16
 8009b1c:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009b20:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009b24:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009b28:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009b2c:	2000      	movs	r0, #0
 8009b2e:	4770      	bx	lr

08009b30 <USB_SetDevAddress>:
 8009b30:	b911      	cbnz	r1, 8009b38 <USB_SetDevAddress+0x8>
 8009b32:	2380      	movs	r3, #128	; 0x80
 8009b34:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 8009b38:	2000      	movs	r0, #0
 8009b3a:	4770      	bx	lr

08009b3c <USB_DevConnect>:
 8009b3c:	2000      	movs	r0, #0
 8009b3e:	4770      	bx	lr

08009b40 <USB_ReadInterrupts>:
 8009b40:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 8009b44:	b280      	uxth	r0, r0
 8009b46:	4770      	bx	lr

08009b48 <USB_WritePMA>:
 8009b48:	3301      	adds	r3, #1
 8009b4a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8009b4e:	085b      	lsrs	r3, r3, #1
 8009b50:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009b54:	d007      	beq.n	8009b66 <USB_WritePMA+0x1e>
 8009b56:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8009b5a:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009b5e:	f822 3b04 	strh.w	r3, [r2], #4
 8009b62:	4282      	cmp	r2, r0
 8009b64:	d1f9      	bne.n	8009b5a <USB_WritePMA+0x12>
 8009b66:	4770      	bx	lr

08009b68 <USB_ReadPMA>:
 8009b68:	b570      	push	{r4, r5, r6, lr}
 8009b6a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8009b6e:	085e      	lsrs	r6, r3, #1
 8009b70:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8009b74:	d012      	beq.n	8009b9c <USB_ReadPMA+0x34>
 8009b76:	46ae      	mov	lr, r5
 8009b78:	46b4      	mov	ip, r6
 8009b7a:	1c88      	adds	r0, r1, #2
 8009b7c:	f83e 2b04 	ldrh.w	r2, [lr], #4
 8009b80:	3002      	adds	r0, #2
 8009b82:	b292      	uxth	r2, r2
 8009b84:	0a14      	lsrs	r4, r2, #8
 8009b86:	f1bc 0c01 	subs.w	ip, ip, #1
 8009b8a:	f800 2c04 	strb.w	r2, [r0, #-4]
 8009b8e:	f800 4c03 	strb.w	r4, [r0, #-3]
 8009b92:	d1f3      	bne.n	8009b7c <USB_ReadPMA+0x14>
 8009b94:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 8009b98:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 8009b9c:	07db      	lsls	r3, r3, #31
 8009b9e:	bf44      	itt	mi
 8009ba0:	882b      	ldrhmi	r3, [r5, #0]
 8009ba2:	700b      	strbmi	r3, [r1, #0]
 8009ba4:	bd70      	pop	{r4, r5, r6, pc}
 8009ba6:	bf00      	nop

08009ba8 <USBD_CDC_EP0_RxReady>:
 8009ba8:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009bac:	b183      	cbz	r3, 8009bd0 <USBD_CDC_EP0_RxReady+0x28>
 8009bae:	b510      	push	{r4, lr}
 8009bb0:	f8d0 4290 	ldr.w	r4, [r0, #656]	; 0x290
 8009bb4:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 8009bb8:	28ff      	cmp	r0, #255	; 0xff
 8009bba:	d007      	beq.n	8009bcc <USBD_CDC_EP0_RxReady+0x24>
 8009bbc:	689b      	ldr	r3, [r3, #8]
 8009bbe:	4621      	mov	r1, r4
 8009bc0:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8009bc4:	4798      	blx	r3
 8009bc6:	23ff      	movs	r3, #255	; 0xff
 8009bc8:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 8009bcc:	2000      	movs	r0, #0
 8009bce:	bd10      	pop	{r4, pc}
 8009bd0:	2000      	movs	r0, #0
 8009bd2:	4770      	bx	lr

08009bd4 <USBD_CDC_GetFSCfgDesc>:
 8009bd4:	4603      	mov	r3, r0
 8009bd6:	2243      	movs	r2, #67	; 0x43
 8009bd8:	4801      	ldr	r0, [pc, #4]	; (8009be0 <USBD_CDC_GetFSCfgDesc+0xc>)
 8009bda:	801a      	strh	r2, [r3, #0]
 8009bdc:	4770      	bx	lr
 8009bde:	bf00      	nop
 8009be0:	2000006c 	.word	0x2000006c

08009be4 <USBD_CDC_GetHSCfgDesc>:
 8009be4:	4603      	mov	r3, r0
 8009be6:	2243      	movs	r2, #67	; 0x43
 8009be8:	4801      	ldr	r0, [pc, #4]	; (8009bf0 <USBD_CDC_GetHSCfgDesc+0xc>)
 8009bea:	801a      	strh	r2, [r3, #0]
 8009bec:	4770      	bx	lr
 8009bee:	bf00      	nop
 8009bf0:	200000b0 	.word	0x200000b0

08009bf4 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8009bf4:	4603      	mov	r3, r0
 8009bf6:	2243      	movs	r2, #67	; 0x43
 8009bf8:	4801      	ldr	r0, [pc, #4]	; (8009c00 <USBD_CDC_GetOtherSpeedCfgDesc+0xc>)
 8009bfa:	801a      	strh	r2, [r3, #0]
 8009bfc:	4770      	bx	lr
 8009bfe:	bf00      	nop
 8009c00:	20000100 	.word	0x20000100

08009c04 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8009c04:	4603      	mov	r3, r0
 8009c06:	220a      	movs	r2, #10
 8009c08:	4801      	ldr	r0, [pc, #4]	; (8009c10 <USBD_CDC_GetDeviceQualifierDescriptor+0xc>)
 8009c0a:	801a      	strh	r2, [r3, #0]
 8009c0c:	4770      	bx	lr
 8009c0e:	bf00      	nop
 8009c10:	200000f4 	.word	0x200000f4

08009c14 <USBD_CDC_DataOut>:
 8009c14:	b538      	push	{r3, r4, r5, lr}
 8009c16:	4604      	mov	r4, r0
 8009c18:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009c1c:	f001 f84c 	bl	800acb8 <USBD_LL_GetRxDataSize>
 8009c20:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 8009c24:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
 8009c28:	b14b      	cbz	r3, 8009c3e <USBD_CDC_DataOut+0x2a>
 8009c2a:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009c2e:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 8009c32:	68db      	ldr	r3, [r3, #12]
 8009c34:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 8009c38:	4798      	blx	r3
 8009c3a:	2000      	movs	r0, #0
 8009c3c:	bd38      	pop	{r3, r4, r5, pc}
 8009c3e:	2002      	movs	r0, #2
 8009c40:	bd38      	pop	{r3, r4, r5, pc}
 8009c42:	bf00      	nop

08009c44 <USBD_CDC_DataIn>:
 8009c44:	b538      	push	{r3, r4, r5, lr}
 8009c46:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009c4a:	b1ed      	cbz	r5, 8009c88 <USBD_CDC_DataIn+0x44>
 8009c4c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 8009c50:	eb00 0c83 	add.w	ip, r0, r3, lsl #2
 8009c54:	f8dc 201c 	ldr.w	r2, [ip, #28]
 8009c58:	b14a      	cbz	r2, 8009c6e <USBD_CDC_DataIn+0x2a>
 8009c5a:	f8d0 4298 	ldr.w	r4, [r0, #664]	; 0x298
 8009c5e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8009c62:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8009c64:	fbb2 f3f4 	udiv	r3, r2, r4
 8009c68:	fb04 2413 	mls	r4, r4, r3, r2
 8009c6c:	b124      	cbz	r4, 8009c78 <USBD_CDC_DataIn+0x34>
 8009c6e:	2300      	movs	r3, #0
 8009c70:	4618      	mov	r0, r3
 8009c72:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
 8009c76:	bd38      	pop	{r3, r4, r5, pc}
 8009c78:	4623      	mov	r3, r4
 8009c7a:	4622      	mov	r2, r4
 8009c7c:	f8cc 401c 	str.w	r4, [ip, #28]
 8009c80:	f000 fffe 	bl	800ac80 <USBD_LL_Transmit>
 8009c84:	4620      	mov	r0, r4
 8009c86:	bd38      	pop	{r3, r4, r5, pc}
 8009c88:	2002      	movs	r0, #2
 8009c8a:	bd38      	pop	{r3, r4, r5, pc}

08009c8c <USBD_CDC_Setup>:
 8009c8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c90:	2700      	movs	r7, #0
 8009c92:	780b      	ldrb	r3, [r1, #0]
 8009c94:	b082      	sub	sp, #8
 8009c96:	f013 0660 	ands.w	r6, r3, #96	; 0x60
 8009c9a:	460c      	mov	r4, r1
 8009c9c:	4605      	mov	r5, r0
 8009c9e:	f8d0 8290 	ldr.w	r8, [r0, #656]	; 0x290
 8009ca2:	f88d 7005 	strb.w	r7, [sp, #5]
 8009ca6:	f8ad 7006 	strh.w	r7, [sp, #6]
 8009caa:	d013      	beq.n	8009cd4 <USBD_CDC_Setup+0x48>
 8009cac:	2e20      	cmp	r6, #32
 8009cae:	d117      	bne.n	8009ce0 <USBD_CDC_Setup+0x54>
 8009cb0:	88ce      	ldrh	r6, [r1, #6]
 8009cb2:	b1f6      	cbz	r6, 8009cf2 <USBD_CDC_Setup+0x66>
 8009cb4:	061b      	lsls	r3, r3, #24
 8009cb6:	d53f      	bpl.n	8009d38 <USBD_CDC_Setup+0xac>
 8009cb8:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009cbc:	4632      	mov	r2, r6
 8009cbe:	4641      	mov	r1, r8
 8009cc0:	689b      	ldr	r3, [r3, #8]
 8009cc2:	7860      	ldrb	r0, [r4, #1]
 8009cc4:	4798      	blx	r3
 8009cc6:	4641      	mov	r1, r8
 8009cc8:	4628      	mov	r0, r5
 8009cca:	88e2      	ldrh	r2, [r4, #6]
 8009ccc:	463e      	mov	r6, r7
 8009cce:	f000 fcef 	bl	800a6b0 <USBD_CtlSendData>
 8009cd2:	e00a      	b.n	8009cea <USBD_CDC_Setup+0x5e>
 8009cd4:	784b      	ldrb	r3, [r1, #1]
 8009cd6:	2b0a      	cmp	r3, #10
 8009cd8:	d01f      	beq.n	8009d1a <USBD_CDC_Setup+0x8e>
 8009cda:	2b0b      	cmp	r3, #11
 8009cdc:	d027      	beq.n	8009d2e <USBD_CDC_Setup+0xa2>
 8009cde:	b193      	cbz	r3, 8009d06 <USBD_CDC_Setup+0x7a>
 8009ce0:	4621      	mov	r1, r4
 8009ce2:	4628      	mov	r0, r5
 8009ce4:	f000 fcae 	bl	800a644 <USBD_CtlError>
 8009ce8:	2602      	movs	r6, #2
 8009cea:	4630      	mov	r0, r6
 8009cec:	b002      	add	sp, #8
 8009cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009cf2:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009cf6:	4632      	mov	r2, r6
 8009cf8:	689b      	ldr	r3, [r3, #8]
 8009cfa:	7848      	ldrb	r0, [r1, #1]
 8009cfc:	4798      	blx	r3
 8009cfe:	4630      	mov	r0, r6
 8009d00:	b002      	add	sp, #8
 8009d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d06:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009d0a:	2b03      	cmp	r3, #3
 8009d0c:	d1e8      	bne.n	8009ce0 <USBD_CDC_Setup+0x54>
 8009d0e:	2202      	movs	r2, #2
 8009d10:	f10d 0106 	add.w	r1, sp, #6
 8009d14:	f000 fccc 	bl	800a6b0 <USBD_CtlSendData>
 8009d18:	e7e7      	b.n	8009cea <USBD_CDC_Setup+0x5e>
 8009d1a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009d1e:	2b03      	cmp	r3, #3
 8009d20:	d1de      	bne.n	8009ce0 <USBD_CDC_Setup+0x54>
 8009d22:	2201      	movs	r2, #1
 8009d24:	f10d 0105 	add.w	r1, sp, #5
 8009d28:	f000 fcc2 	bl	800a6b0 <USBD_CtlSendData>
 8009d2c:	e7dd      	b.n	8009cea <USBD_CDC_Setup+0x5e>
 8009d2e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009d32:	2b03      	cmp	r3, #3
 8009d34:	d0d9      	beq.n	8009cea <USBD_CDC_Setup+0x5e>
 8009d36:	e7d3      	b.n	8009ce0 <USBD_CDC_Setup+0x54>
 8009d38:	784b      	ldrb	r3, [r1, #1]
 8009d3a:	4632      	mov	r2, r6
 8009d3c:	f888 6201 	strb.w	r6, [r8, #513]	; 0x201
 8009d40:	4641      	mov	r1, r8
 8009d42:	f888 3200 	strb.w	r3, [r8, #512]	; 0x200
 8009d46:	f000 fccb 	bl	800a6e0 <USBD_CtlPrepareRx>
 8009d4a:	463e      	mov	r6, r7
 8009d4c:	e7cd      	b.n	8009cea <USBD_CDC_Setup+0x5e>
 8009d4e:	bf00      	nop

08009d50 <USBD_CDC_DeInit>:
 8009d50:	b538      	push	{r3, r4, r5, lr}
 8009d52:	4604      	mov	r4, r0
 8009d54:	2500      	movs	r5, #0
 8009d56:	2181      	movs	r1, #129	; 0x81
 8009d58:	f000 ff46 	bl	800abe8 <USBD_LL_CloseEP>
 8009d5c:	2101      	movs	r1, #1
 8009d5e:	4620      	mov	r0, r4
 8009d60:	62e5      	str	r5, [r4, #44]	; 0x2c
 8009d62:	f000 ff41 	bl	800abe8 <USBD_LL_CloseEP>
 8009d66:	2182      	movs	r1, #130	; 0x82
 8009d68:	4620      	mov	r0, r4
 8009d6a:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 8009d6e:	f000 ff3b 	bl	800abe8 <USBD_LL_CloseEP>
 8009d72:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 8009d76:	6425      	str	r5, [r4, #64]	; 0x40
 8009d78:	b14b      	cbz	r3, 8009d8e <USBD_CDC_DeInit+0x3e>
 8009d7a:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009d7e:	685b      	ldr	r3, [r3, #4]
 8009d80:	4798      	blx	r3
 8009d82:	f8d4 0290 	ldr.w	r0, [r4, #656]	; 0x290
 8009d86:	f000 ff9f 	bl	800acc8 <USBD_static_free>
 8009d8a:	f8c4 5290 	str.w	r5, [r4, #656]	; 0x290
 8009d8e:	2000      	movs	r0, #0
 8009d90:	bd38      	pop	{r3, r4, r5, pc}
 8009d92:	bf00      	nop

08009d94 <USBD_CDC_Init>:
 8009d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d98:	7c03      	ldrb	r3, [r0, #16]
 8009d9a:	4604      	mov	r4, r0
 8009d9c:	bbbb      	cbnz	r3, 8009e0e <USBD_CDC_Init+0x7a>
 8009d9e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009da2:	2202      	movs	r2, #2
 8009da4:	2181      	movs	r1, #129	; 0x81
 8009da6:	f000 ff0f 	bl	800abc8 <USBD_LL_OpenEP>
 8009daa:	2501      	movs	r5, #1
 8009dac:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009db0:	2701      	movs	r7, #1
 8009db2:	4629      	mov	r1, r5
 8009db4:	2202      	movs	r2, #2
 8009db6:	62e5      	str	r5, [r4, #44]	; 0x2c
 8009db8:	4620      	mov	r0, r4
 8009dba:	f000 ff05 	bl	800abc8 <USBD_LL_OpenEP>
 8009dbe:	2308      	movs	r3, #8
 8009dc0:	2203      	movs	r2, #3
 8009dc2:	2182      	movs	r1, #130	; 0x82
 8009dc4:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 8009dc8:	4620      	mov	r0, r4
 8009dca:	f000 fefd 	bl	800abc8 <USBD_LL_OpenEP>
 8009dce:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8009dd2:	6427      	str	r7, [r4, #64]	; 0x40
 8009dd4:	f000 ff74 	bl	800acc0 <USBD_static_malloc>
 8009dd8:	4605      	mov	r5, r0
 8009dda:	f8c4 0290 	str.w	r0, [r4, #656]	; 0x290
 8009dde:	b348      	cbz	r0, 8009e34 <USBD_CDC_Init+0xa0>
 8009de0:	f04f 0800 	mov.w	r8, #0
 8009de4:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009de8:	681b      	ldr	r3, [r3, #0]
 8009dea:	4798      	blx	r3
 8009dec:	f8c5 8214 	str.w	r8, [r5, #532]	; 0x214
 8009df0:	f8c5 8218 	str.w	r8, [r5, #536]	; 0x218
 8009df4:	7c26      	ldrb	r6, [r4, #16]
 8009df6:	b196      	cbz	r6, 8009e1e <USBD_CDC_Init+0x8a>
 8009df8:	4646      	mov	r6, r8
 8009dfa:	2340      	movs	r3, #64	; 0x40
 8009dfc:	4639      	mov	r1, r7
 8009dfe:	4620      	mov	r0, r4
 8009e00:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8009e04:	f000 ff4a 	bl	800ac9c <USBD_LL_PrepareReceive>
 8009e08:	4630      	mov	r0, r6
 8009e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e0e:	2340      	movs	r3, #64	; 0x40
 8009e10:	2202      	movs	r2, #2
 8009e12:	2181      	movs	r1, #129	; 0x81
 8009e14:	f000 fed8 	bl	800abc8 <USBD_LL_OpenEP>
 8009e18:	2501      	movs	r5, #1
 8009e1a:	2340      	movs	r3, #64	; 0x40
 8009e1c:	e7c8      	b.n	8009db0 <USBD_CDC_Init+0x1c>
 8009e1e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009e22:	4639      	mov	r1, r7
 8009e24:	4620      	mov	r0, r4
 8009e26:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8009e2a:	f000 ff37 	bl	800ac9c <USBD_LL_PrepareReceive>
 8009e2e:	4630      	mov	r0, r6
 8009e30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e34:	463e      	mov	r6, r7
 8009e36:	4630      	mov	r0, r6
 8009e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009e3c <USBD_CDC_RegisterInterface>:
 8009e3c:	4603      	mov	r3, r0
 8009e3e:	b119      	cbz	r1, 8009e48 <USBD_CDC_RegisterInterface+0xc>
 8009e40:	2000      	movs	r0, #0
 8009e42:	f8c3 1294 	str.w	r1, [r3, #660]	; 0x294
 8009e46:	4770      	bx	lr
 8009e48:	2002      	movs	r0, #2
 8009e4a:	4770      	bx	lr

08009e4c <USBD_CDC_SetTxBuffer>:
 8009e4c:	4603      	mov	r3, r0
 8009e4e:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 8009e52:	2000      	movs	r0, #0
 8009e54:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 8009e58:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8009e5c:	4770      	bx	lr
 8009e5e:	bf00      	nop

08009e60 <USBD_CDC_SetRxBuffer>:
 8009e60:	4603      	mov	r3, r0
 8009e62:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 8009e66:	2000      	movs	r0, #0
 8009e68:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8009e6c:	4770      	bx	lr
 8009e6e:	bf00      	nop

08009e70 <USBD_CDC_TransmitPacket>:
 8009e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e72:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009e76:	b195      	cbz	r5, 8009e9e <USBD_CDC_TransmitPacket+0x2e>
 8009e78:	f8d5 4214 	ldr.w	r4, [r5, #532]	; 0x214
 8009e7c:	b10c      	cbz	r4, 8009e82 <USBD_CDC_TransmitPacket+0x12>
 8009e7e:	2001      	movs	r0, #1
 8009e80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009e82:	2701      	movs	r7, #1
 8009e84:	f8d5 6210 	ldr.w	r6, [r5, #528]	; 0x210
 8009e88:	f8d5 2208 	ldr.w	r2, [r5, #520]	; 0x208
 8009e8c:	f8c5 7214 	str.w	r7, [r5, #532]	; 0x214
 8009e90:	2181      	movs	r1, #129	; 0x81
 8009e92:	b2b3      	uxth	r3, r6
 8009e94:	6306      	str	r6, [r0, #48]	; 0x30
 8009e96:	f000 fef3 	bl	800ac80 <USBD_LL_Transmit>
 8009e9a:	4620      	mov	r0, r4
 8009e9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009e9e:	2002      	movs	r0, #2
 8009ea0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009ea2:	bf00      	nop

08009ea4 <USBD_CDC_ReceivePacket>:
 8009ea4:	f8d0 2290 	ldr.w	r2, [r0, #656]	; 0x290
 8009ea8:	b510      	push	{r4, lr}
 8009eaa:	b19a      	cbz	r2, 8009ed4 <USBD_CDC_ReceivePacket+0x30>
 8009eac:	7c04      	ldrb	r4, [r0, #16]
 8009eae:	b144      	cbz	r4, 8009ec2 <USBD_CDC_ReceivePacket+0x1e>
 8009eb0:	2400      	movs	r4, #0
 8009eb2:	2340      	movs	r3, #64	; 0x40
 8009eb4:	2101      	movs	r1, #1
 8009eb6:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009eba:	f000 feef 	bl	800ac9c <USBD_LL_PrepareReceive>
 8009ebe:	4620      	mov	r0, r4
 8009ec0:	bd10      	pop	{r4, pc}
 8009ec2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009ec6:	2101      	movs	r1, #1
 8009ec8:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009ecc:	f000 fee6 	bl	800ac9c <USBD_LL_PrepareReceive>
 8009ed0:	4620      	mov	r0, r4
 8009ed2:	bd10      	pop	{r4, pc}
 8009ed4:	2402      	movs	r4, #2
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	bd10      	pop	{r4, pc}
 8009eda:	bf00      	nop

08009edc <USBD_Init>:
 8009edc:	b188      	cbz	r0, 8009f02 <USBD_Init+0x26>
 8009ede:	b508      	push	{r3, lr}
 8009ee0:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009ee4:	b113      	cbz	r3, 8009eec <USBD_Init+0x10>
 8009ee6:	2300      	movs	r3, #0
 8009ee8:	f8c0 328c 	str.w	r3, [r0, #652]	; 0x28c
 8009eec:	b109      	cbz	r1, 8009ef2 <USBD_Init+0x16>
 8009eee:	f8c0 1288 	str.w	r1, [r0, #648]	; 0x288
 8009ef2:	2301      	movs	r3, #1
 8009ef4:	7002      	strb	r2, [r0, #0]
 8009ef6:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 8009efa:	f000 fe13 	bl	800ab24 <USBD_LL_Init>
 8009efe:	2000      	movs	r0, #0
 8009f00:	bd08      	pop	{r3, pc}
 8009f02:	2002      	movs	r0, #2
 8009f04:	4770      	bx	lr
 8009f06:	bf00      	nop

08009f08 <USBD_RegisterClass>:
 8009f08:	4603      	mov	r3, r0
 8009f0a:	b119      	cbz	r1, 8009f14 <USBD_RegisterClass+0xc>
 8009f0c:	2000      	movs	r0, #0
 8009f0e:	f8c3 128c 	str.w	r1, [r3, #652]	; 0x28c
 8009f12:	4770      	bx	lr
 8009f14:	2002      	movs	r0, #2
 8009f16:	4770      	bx	lr

08009f18 <USBD_Start>:
 8009f18:	b508      	push	{r3, lr}
 8009f1a:	f000 fe47 	bl	800abac <USBD_LL_Start>
 8009f1e:	2000      	movs	r0, #0
 8009f20:	bd08      	pop	{r3, pc}
 8009f22:	bf00      	nop

08009f24 <USBD_SetClassConfig>:
 8009f24:	b508      	push	{r3, lr}
 8009f26:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009f2a:	b11b      	cbz	r3, 8009f34 <USBD_SetClassConfig+0x10>
 8009f2c:	681b      	ldr	r3, [r3, #0]
 8009f2e:	4798      	blx	r3
 8009f30:	b900      	cbnz	r0, 8009f34 <USBD_SetClassConfig+0x10>
 8009f32:	bd08      	pop	{r3, pc}
 8009f34:	2002      	movs	r0, #2
 8009f36:	bd08      	pop	{r3, pc}

08009f38 <USBD_ClrClassConfig>:
 8009f38:	b508      	push	{r3, lr}
 8009f3a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009f3e:	685b      	ldr	r3, [r3, #4]
 8009f40:	4798      	blx	r3
 8009f42:	2000      	movs	r0, #0
 8009f44:	bd08      	pop	{r3, pc}
 8009f46:	bf00      	nop

08009f48 <USBD_LL_SetupStage>:
 8009f48:	b538      	push	{r3, r4, r5, lr}
 8009f4a:	4604      	mov	r4, r0
 8009f4c:	f500 7520 	add.w	r5, r0, #640	; 0x280
 8009f50:	4628      	mov	r0, r5
 8009f52:	f000 fb63 	bl	800a61c <USBD_ParseSetupRequest>
 8009f56:	2201      	movs	r2, #1
 8009f58:	f8b4 3286 	ldrh.w	r3, [r4, #646]	; 0x286
 8009f5c:	f894 1280 	ldrb.w	r1, [r4, #640]	; 0x280
 8009f60:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
 8009f64:	f001 031f 	and.w	r3, r1, #31
 8009f68:	4293      	cmp	r3, r2
 8009f6a:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 8009f6e:	d009      	beq.n	8009f84 <USBD_LL_SetupStage+0x3c>
 8009f70:	2b02      	cmp	r3, #2
 8009f72:	d013      	beq.n	8009f9c <USBD_LL_SetupStage+0x54>
 8009f74:	b163      	cbz	r3, 8009f90 <USBD_LL_SetupStage+0x48>
 8009f76:	4620      	mov	r0, r4
 8009f78:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8009f7c:	f000 fe42 	bl	800ac04 <USBD_LL_StallEP>
 8009f80:	2000      	movs	r0, #0
 8009f82:	bd38      	pop	{r3, r4, r5, pc}
 8009f84:	4629      	mov	r1, r5
 8009f86:	4620      	mov	r0, r4
 8009f88:	f000 fa78 	bl	800a47c <USBD_StdItfReq>
 8009f8c:	2000      	movs	r0, #0
 8009f8e:	bd38      	pop	{r3, r4, r5, pc}
 8009f90:	4629      	mov	r1, r5
 8009f92:	4620      	mov	r0, r4
 8009f94:	f000 f8f8 	bl	800a188 <USBD_StdDevReq>
 8009f98:	2000      	movs	r0, #0
 8009f9a:	bd38      	pop	{r3, r4, r5, pc}
 8009f9c:	4629      	mov	r1, r5
 8009f9e:	4620      	mov	r0, r4
 8009fa0:	f000 faa0 	bl	800a4e4 <USBD_StdEPReq>
 8009fa4:	2000      	movs	r0, #0
 8009fa6:	bd38      	pop	{r3, r4, r5, pc}

08009fa8 <USBD_LL_DataOutStage>:
 8009fa8:	b538      	push	{r3, r4, r5, lr}
 8009faa:	4605      	mov	r5, r0
 8009fac:	b969      	cbnz	r1, 8009fca <USBD_LL_DataOutStage+0x22>
 8009fae:	4613      	mov	r3, r2
 8009fb0:	f8d0 226c 	ldr.w	r2, [r0, #620]	; 0x26c
 8009fb4:	2a03      	cmp	r2, #3
 8009fb6:	d015      	beq.n	8009fe4 <USBD_LL_DataOutStage+0x3c>
 8009fb8:	2a05      	cmp	r2, #5
 8009fba:	460c      	mov	r4, r1
 8009fbc:	d10e      	bne.n	8009fdc <USBD_LL_DataOutStage+0x34>
 8009fbe:	f8c5 126c 	str.w	r1, [r5, #620]	; 0x26c
 8009fc2:	f000 fe1f 	bl	800ac04 <USBD_LL_StallEP>
 8009fc6:	4620      	mov	r0, r4
 8009fc8:	bd38      	pop	{r3, r4, r5, pc}
 8009fca:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009fce:	699b      	ldr	r3, [r3, #24]
 8009fd0:	b133      	cbz	r3, 8009fe0 <USBD_LL_DataOutStage+0x38>
 8009fd2:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009fd6:	2a03      	cmp	r2, #3
 8009fd8:	d102      	bne.n	8009fe0 <USBD_LL_DataOutStage+0x38>
 8009fda:	4798      	blx	r3
 8009fdc:	2000      	movs	r0, #0
 8009fde:	bd38      	pop	{r3, r4, r5, pc}
 8009fe0:	2002      	movs	r0, #2
 8009fe2:	bd38      	pop	{r3, r4, r5, pc}
 8009fe4:	e9d0 1253 	ldrd	r1, r2, [r0, #332]	; 0x14c
 8009fe8:	4291      	cmp	r1, r2
 8009fea:	d90c      	bls.n	800a006 <USBD_LL_DataOutStage+0x5e>
 8009fec:	1a89      	subs	r1, r1, r2
 8009fee:	428a      	cmp	r2, r1
 8009ff0:	bf88      	it	hi
 8009ff2:	b28a      	uxthhi	r2, r1
 8009ff4:	f8c0 114c 	str.w	r1, [r0, #332]	; 0x14c
 8009ff8:	bf98      	it	ls
 8009ffa:	b292      	uxthls	r2, r2
 8009ffc:	4619      	mov	r1, r3
 8009ffe:	f000 fb7d 	bl	800a6fc <USBD_CtlContinueRx>
 800a002:	2000      	movs	r0, #0
 800a004:	bd38      	pop	{r3, r4, r5, pc}
 800a006:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a00a:	691b      	ldr	r3, [r3, #16]
 800a00c:	b11b      	cbz	r3, 800a016 <USBD_LL_DataOutStage+0x6e>
 800a00e:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a012:	2a03      	cmp	r2, #3
 800a014:	d004      	beq.n	800a020 <USBD_LL_DataOutStage+0x78>
 800a016:	4628      	mov	r0, r5
 800a018:	f000 fb7a 	bl	800a710 <USBD_CtlSendStatus>
 800a01c:	2000      	movs	r0, #0
 800a01e:	bd38      	pop	{r3, r4, r5, pc}
 800a020:	4798      	blx	r3
 800a022:	e7f8      	b.n	800a016 <USBD_LL_DataOutStage+0x6e>

0800a024 <USBD_LL_DataInStage>:
 800a024:	b570      	push	{r4, r5, r6, lr}
 800a026:	4604      	mov	r4, r0
 800a028:	b961      	cbnz	r1, 800a044 <USBD_LL_DataInStage+0x20>
 800a02a:	f8d0 326c 	ldr.w	r3, [r0, #620]	; 0x26c
 800a02e:	2b02      	cmp	r3, #2
 800a030:	d015      	beq.n	800a05e <USBD_LL_DataInStage+0x3a>
 800a032:	f033 0304 	bics.w	r3, r3, #4
 800a036:	d02e      	beq.n	800a096 <USBD_LL_DataInStage+0x72>
 800a038:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 800a03c:	2b01      	cmp	r3, #1
 800a03e:	d031      	beq.n	800a0a4 <USBD_LL_DataInStage+0x80>
 800a040:	2000      	movs	r0, #0
 800a042:	bd70      	pop	{r4, r5, r6, pc}
 800a044:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a048:	695b      	ldr	r3, [r3, #20]
 800a04a:	b133      	cbz	r3, 800a05a <USBD_LL_DataInStage+0x36>
 800a04c:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a050:	2a03      	cmp	r2, #3
 800a052:	d102      	bne.n	800a05a <USBD_LL_DataInStage+0x36>
 800a054:	4798      	blx	r3
 800a056:	2000      	movs	r0, #0
 800a058:	bd70      	pop	{r4, r5, r6, pc}
 800a05a:	2002      	movs	r0, #2
 800a05c:	bd70      	pop	{r4, r5, r6, pc}
 800a05e:	e9d0 6308 	ldrd	r6, r3, [r0, #32]
 800a062:	429e      	cmp	r6, r3
 800a064:	d833      	bhi.n	800a0ce <USBD_LL_DataInStage+0xaa>
 800a066:	69c2      	ldr	r2, [r0, #28]
 800a068:	fbb2 f5f3 	udiv	r5, r2, r3
 800a06c:	fb03 2515 	mls	r5, r3, r5, r2
 800a070:	b9ed      	cbnz	r5, 800a0ae <USBD_LL_DataInStage+0x8a>
 800a072:	4293      	cmp	r3, r2
 800a074:	d81b      	bhi.n	800a0ae <USBD_LL_DataInStage+0x8a>
 800a076:	f8d0 3270 	ldr.w	r3, [r0, #624]	; 0x270
 800a07a:	429a      	cmp	r2, r3
 800a07c:	d217      	bcs.n	800a0ae <USBD_LL_DataInStage+0x8a>
 800a07e:	462a      	mov	r2, r5
 800a080:	f000 fb24 	bl	800a6cc <USBD_CtlContinueSendData>
 800a084:	462b      	mov	r3, r5
 800a086:	462a      	mov	r2, r5
 800a088:	4629      	mov	r1, r5
 800a08a:	4620      	mov	r0, r4
 800a08c:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
 800a090:	f000 fe04 	bl	800ac9c <USBD_LL_PrepareReceive>
 800a094:	e7d0      	b.n	800a038 <USBD_LL_DataInStage+0x14>
 800a096:	2180      	movs	r1, #128	; 0x80
 800a098:	f000 fdb4 	bl	800ac04 <USBD_LL_StallEP>
 800a09c:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 800a0a0:	2b01      	cmp	r3, #1
 800a0a2:	d1cd      	bne.n	800a040 <USBD_LL_DataInStage+0x1c>
 800a0a4:	2300      	movs	r3, #0
 800a0a6:	f884 3278 	strb.w	r3, [r4, #632]	; 0x278
 800a0aa:	4618      	mov	r0, r3
 800a0ac:	bd70      	pop	{r4, r5, r6, pc}
 800a0ae:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a0b2:	68db      	ldr	r3, [r3, #12]
 800a0b4:	b11b      	cbz	r3, 800a0be <USBD_LL_DataInStage+0x9a>
 800a0b6:	f894 2274 	ldrb.w	r2, [r4, #628]	; 0x274
 800a0ba:	2a03      	cmp	r2, #3
 800a0bc:	d015      	beq.n	800a0ea <USBD_LL_DataInStage+0xc6>
 800a0be:	2180      	movs	r1, #128	; 0x80
 800a0c0:	4620      	mov	r0, r4
 800a0c2:	f000 fd9f 	bl	800ac04 <USBD_LL_StallEP>
 800a0c6:	4620      	mov	r0, r4
 800a0c8:	f000 fb2e 	bl	800a728 <USBD_CtlReceiveStatus>
 800a0cc:	e7b4      	b.n	800a038 <USBD_LL_DataInStage+0x14>
 800a0ce:	460d      	mov	r5, r1
 800a0d0:	1af3      	subs	r3, r6, r3
 800a0d2:	4611      	mov	r1, r2
 800a0d4:	6203      	str	r3, [r0, #32]
 800a0d6:	b29a      	uxth	r2, r3
 800a0d8:	f000 faf8 	bl	800a6cc <USBD_CtlContinueSendData>
 800a0dc:	462b      	mov	r3, r5
 800a0de:	462a      	mov	r2, r5
 800a0e0:	4629      	mov	r1, r5
 800a0e2:	4620      	mov	r0, r4
 800a0e4:	f000 fdda 	bl	800ac9c <USBD_LL_PrepareReceive>
 800a0e8:	e7a6      	b.n	800a038 <USBD_LL_DataInStage+0x14>
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	4798      	blx	r3
 800a0ee:	e7e6      	b.n	800a0be <USBD_LL_DataInStage+0x9a>

0800a0f0 <USBD_LL_Reset>:
 800a0f0:	b570      	push	{r4, r5, r6, lr}
 800a0f2:	2200      	movs	r2, #0
 800a0f4:	2640      	movs	r6, #64	; 0x40
 800a0f6:	4604      	mov	r4, r0
 800a0f8:	2501      	movs	r5, #1
 800a0fa:	4611      	mov	r1, r2
 800a0fc:	4633      	mov	r3, r6
 800a0fe:	f000 fd63 	bl	800abc8 <USBD_LL_OpenEP>
 800a102:	4633      	mov	r3, r6
 800a104:	2180      	movs	r1, #128	; 0x80
 800a106:	2200      	movs	r2, #0
 800a108:	4620      	mov	r0, r4
 800a10a:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 800a10e:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
 800a112:	f000 fd59 	bl	800abc8 <USBD_LL_OpenEP>
 800a116:	2100      	movs	r1, #0
 800a118:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a11c:	61a5      	str	r5, [r4, #24]
 800a11e:	6266      	str	r6, [r4, #36]	; 0x24
 800a120:	f884 5274 	strb.w	r5, [r4, #628]	; 0x274
 800a124:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 800a128:	6061      	str	r1, [r4, #4]
 800a12a:	f8c4 127c 	str.w	r1, [r4, #636]	; 0x27c
 800a12e:	b123      	cbz	r3, 800a13a <USBD_LL_Reset+0x4a>
 800a130:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a134:	4620      	mov	r0, r4
 800a136:	685b      	ldr	r3, [r3, #4]
 800a138:	4798      	blx	r3
 800a13a:	2000      	movs	r0, #0
 800a13c:	bd70      	pop	{r4, r5, r6, pc}
 800a13e:	bf00      	nop

0800a140 <USBD_LL_SetSpeed>:
 800a140:	4603      	mov	r3, r0
 800a142:	2000      	movs	r0, #0
 800a144:	7419      	strb	r1, [r3, #16]
 800a146:	4770      	bx	lr

0800a148 <USBD_LL_Suspend>:
 800a148:	4603      	mov	r3, r0
 800a14a:	2104      	movs	r1, #4
 800a14c:	f893 2274 	ldrb.w	r2, [r3, #628]	; 0x274
 800a150:	2000      	movs	r0, #0
 800a152:	f883 1274 	strb.w	r1, [r3, #628]	; 0x274
 800a156:	f883 2275 	strb.w	r2, [r3, #629]	; 0x275
 800a15a:	4770      	bx	lr

0800a15c <USBD_LL_Resume>:
 800a15c:	4603      	mov	r3, r0
 800a15e:	f893 2275 	ldrb.w	r2, [r3, #629]	; 0x275
 800a162:	2000      	movs	r0, #0
 800a164:	f883 2274 	strb.w	r2, [r3, #628]	; 0x274
 800a168:	4770      	bx	lr
 800a16a:	bf00      	nop

0800a16c <USBD_LL_SOF>:
 800a16c:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a170:	2a03      	cmp	r2, #3
 800a172:	d001      	beq.n	800a178 <USBD_LL_SOF+0xc>
 800a174:	2000      	movs	r0, #0
 800a176:	4770      	bx	lr
 800a178:	b508      	push	{r3, lr}
 800a17a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a17e:	69db      	ldr	r3, [r3, #28]
 800a180:	b103      	cbz	r3, 800a184 <USBD_LL_SOF+0x18>
 800a182:	4798      	blx	r3
 800a184:	2000      	movs	r0, #0
 800a186:	bd08      	pop	{r3, pc}

0800a188 <USBD_StdDevReq>:
 800a188:	b530      	push	{r4, r5, lr}
 800a18a:	780b      	ldrb	r3, [r1, #0]
 800a18c:	460d      	mov	r5, r1
 800a18e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a192:	2b20      	cmp	r3, #32
 800a194:	4604      	mov	r4, r0
 800a196:	b083      	sub	sp, #12
 800a198:	d00d      	beq.n	800a1b6 <USBD_StdDevReq+0x2e>
 800a19a:	2b40      	cmp	r3, #64	; 0x40
 800a19c:	d00b      	beq.n	800a1b6 <USBD_StdDevReq+0x2e>
 800a19e:	b19b      	cbz	r3, 800a1c8 <USBD_StdDevReq+0x40>
 800a1a0:	2180      	movs	r1, #128	; 0x80
 800a1a2:	4620      	mov	r0, r4
 800a1a4:	f000 fd2e 	bl	800ac04 <USBD_LL_StallEP>
 800a1a8:	2100      	movs	r1, #0
 800a1aa:	4620      	mov	r0, r4
 800a1ac:	f000 fd2a 	bl	800ac04 <USBD_LL_StallEP>
 800a1b0:	2000      	movs	r0, #0
 800a1b2:	b003      	add	sp, #12
 800a1b4:	bd30      	pop	{r4, r5, pc}
 800a1b6:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a1ba:	4629      	mov	r1, r5
 800a1bc:	4620      	mov	r0, r4
 800a1be:	689b      	ldr	r3, [r3, #8]
 800a1c0:	4798      	blx	r3
 800a1c2:	2000      	movs	r0, #0
 800a1c4:	b003      	add	sp, #12
 800a1c6:	bd30      	pop	{r4, r5, pc}
 800a1c8:	784b      	ldrb	r3, [r1, #1]
 800a1ca:	2b09      	cmp	r3, #9
 800a1cc:	d8e8      	bhi.n	800a1a0 <USBD_StdDevReq+0x18>
 800a1ce:	a201      	add	r2, pc, #4	; (adr r2, 800a1d4 <USBD_StdDevReq+0x4c>)
 800a1d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a1d4:	0800a22f 	.word	0x0800a22f
 800a1d8:	0800a25b 	.word	0x0800a25b
 800a1dc:	0800a1a1 	.word	0x0800a1a1
 800a1e0:	0800a279 	.word	0x0800a279
 800a1e4:	0800a1a1 	.word	0x0800a1a1
 800a1e8:	0800a281 	.word	0x0800a281
 800a1ec:	0800a2b9 	.word	0x0800a2b9
 800a1f0:	0800a1a1 	.word	0x0800a1a1
 800a1f4:	0800a2e9 	.word	0x0800a2e9
 800a1f8:	0800a1fd 	.word	0x0800a1fd
 800a1fc:	7889      	ldrb	r1, [r1, #2]
 800a1fe:	4d9e      	ldr	r5, [pc, #632]	; (800a478 <USBD_StdDevReq+0x2f0>)
 800a200:	2901      	cmp	r1, #1
 800a202:	7029      	strb	r1, [r5, #0]
 800a204:	d8cc      	bhi.n	800a1a0 <USBD_StdDevReq+0x18>
 800a206:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a20a:	2b02      	cmp	r3, #2
 800a20c:	f000 8111 	beq.w	800a432 <USBD_StdDevReq+0x2aa>
 800a210:	2b03      	cmp	r3, #3
 800a212:	f000 80ff 	beq.w	800a414 <USBD_StdDevReq+0x28c>
 800a216:	2180      	movs	r1, #128	; 0x80
 800a218:	f000 fcf4 	bl	800ac04 <USBD_LL_StallEP>
 800a21c:	2100      	movs	r1, #0
 800a21e:	4620      	mov	r0, r4
 800a220:	f000 fcf0 	bl	800ac04 <USBD_LL_StallEP>
 800a224:	4620      	mov	r0, r4
 800a226:	7829      	ldrb	r1, [r5, #0]
 800a228:	f7ff fe86 	bl	8009f38 <USBD_ClrClassConfig>
 800a22c:	e7c0      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a22e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a232:	3b01      	subs	r3, #1
 800a234:	2b02      	cmp	r3, #2
 800a236:	d8b3      	bhi.n	800a1a0 <USBD_StdDevReq+0x18>
 800a238:	88cb      	ldrh	r3, [r1, #6]
 800a23a:	2b02      	cmp	r3, #2
 800a23c:	d1b0      	bne.n	800a1a0 <USBD_StdDevReq+0x18>
 800a23e:	2201      	movs	r2, #1
 800a240:	f8d0 327c 	ldr.w	r3, [r0, #636]	; 0x27c
 800a244:	60c2      	str	r2, [r0, #12]
 800a246:	b10b      	cbz	r3, 800a24c <USBD_StdDevReq+0xc4>
 800a248:	2303      	movs	r3, #3
 800a24a:	60c3      	str	r3, [r0, #12]
 800a24c:	2202      	movs	r2, #2
 800a24e:	4620      	mov	r0, r4
 800a250:	f104 010c 	add.w	r1, r4, #12
 800a254:	f000 fa2c 	bl	800a6b0 <USBD_CtlSendData>
 800a258:	e7aa      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a25a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a25e:	3b01      	subs	r3, #1
 800a260:	2b02      	cmp	r3, #2
 800a262:	d89d      	bhi.n	800a1a0 <USBD_StdDevReq+0x18>
 800a264:	884b      	ldrh	r3, [r1, #2]
 800a266:	2b01      	cmp	r3, #1
 800a268:	d1a2      	bne.n	800a1b0 <USBD_StdDevReq+0x28>
 800a26a:	2300      	movs	r3, #0
 800a26c:	4620      	mov	r0, r4
 800a26e:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
 800a272:	f000 fa4d 	bl	800a710 <USBD_CtlSendStatus>
 800a276:	e79b      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a278:	884b      	ldrh	r3, [r1, #2]
 800a27a:	2b01      	cmp	r3, #1
 800a27c:	d198      	bne.n	800a1b0 <USBD_StdDevReq+0x28>
 800a27e:	e7f5      	b.n	800a26c <USBD_StdDevReq+0xe4>
 800a280:	888b      	ldrh	r3, [r1, #4]
 800a282:	2b00      	cmp	r3, #0
 800a284:	d18c      	bne.n	800a1a0 <USBD_StdDevReq+0x18>
 800a286:	88cb      	ldrh	r3, [r1, #6]
 800a288:	2b00      	cmp	r3, #0
 800a28a:	d189      	bne.n	800a1a0 <USBD_StdDevReq+0x18>
 800a28c:	884d      	ldrh	r5, [r1, #2]
 800a28e:	2d7f      	cmp	r5, #127	; 0x7f
 800a290:	d886      	bhi.n	800a1a0 <USBD_StdDevReq+0x18>
 800a292:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a296:	2b03      	cmp	r3, #3
 800a298:	d082      	beq.n	800a1a0 <USBD_StdDevReq+0x18>
 800a29a:	b2e9      	uxtb	r1, r5
 800a29c:	f880 1276 	strb.w	r1, [r0, #630]	; 0x276
 800a2a0:	f000 fce0 	bl	800ac64 <USBD_LL_SetUSBAddress>
 800a2a4:	4620      	mov	r0, r4
 800a2a6:	f000 fa33 	bl	800a710 <USBD_CtlSendStatus>
 800a2aa:	2d00      	cmp	r5, #0
 800a2ac:	f000 80df 	beq.w	800a46e <USBD_StdDevReq+0x2e6>
 800a2b0:	2302      	movs	r3, #2
 800a2b2:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 800a2b6:	e77b      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a2b8:	884a      	ldrh	r2, [r1, #2]
 800a2ba:	0a13      	lsrs	r3, r2, #8
 800a2bc:	3b01      	subs	r3, #1
 800a2be:	2b06      	cmp	r3, #6
 800a2c0:	f63f af6e 	bhi.w	800a1a0 <USBD_StdDevReq+0x18>
 800a2c4:	a101      	add	r1, pc, #4	; (adr r1, 800a2cc <USBD_StdDevReq+0x144>)
 800a2c6:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800a2ca:	bf00      	nop
 800a2cc:	0800a37b 	.word	0x0800a37b
 800a2d0:	0800a363 	.word	0x0800a363
 800a2d4:	0800a351 	.word	0x0800a351
 800a2d8:	0800a1a1 	.word	0x0800a1a1
 800a2dc:	0800a1a1 	.word	0x0800a1a1
 800a2e0:	0800a33b 	.word	0x0800a33b
 800a2e4:	0800a30d 	.word	0x0800a30d
 800a2e8:	88ca      	ldrh	r2, [r1, #6]
 800a2ea:	2a01      	cmp	r2, #1
 800a2ec:	f47f af58 	bne.w	800a1a0 <USBD_StdDevReq+0x18>
 800a2f0:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a2f4:	2b02      	cmp	r3, #2
 800a2f6:	d878      	bhi.n	800a3ea <USBD_StdDevReq+0x262>
 800a2f8:	2b00      	cmp	r3, #0
 800a2fa:	f43f af51 	beq.w	800a1a0 <USBD_StdDevReq+0x18>
 800a2fe:	4601      	mov	r1, r0
 800a300:	2300      	movs	r3, #0
 800a302:	f841 3f08 	str.w	r3, [r1, #8]!
 800a306:	f000 f9d3 	bl	800a6b0 <USBD_CtlSendData>
 800a30a:	e751      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a30c:	7c03      	ldrb	r3, [r0, #16]
 800a30e:	2b00      	cmp	r3, #0
 800a310:	f47f af46 	bne.w	800a1a0 <USBD_StdDevReq+0x18>
 800a314:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a318:	f10d 0006 	add.w	r0, sp, #6
 800a31c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a31e:	4798      	blx	r3
 800a320:	2307      	movs	r3, #7
 800a322:	7043      	strb	r3, [r0, #1]
 800a324:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a328:	2a00      	cmp	r2, #0
 800a32a:	d06e      	beq.n	800a40a <USBD_StdDevReq+0x282>
 800a32c:	88eb      	ldrh	r3, [r5, #6]
 800a32e:	2b00      	cmp	r3, #0
 800a330:	d162      	bne.n	800a3f8 <USBD_StdDevReq+0x270>
 800a332:	4620      	mov	r0, r4
 800a334:	f000 f9ec 	bl	800a710 <USBD_CtlSendStatus>
 800a338:	e73a      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a33a:	7c03      	ldrb	r3, [r0, #16]
 800a33c:	2b00      	cmp	r3, #0
 800a33e:	f47f af2f 	bne.w	800a1a0 <USBD_StdDevReq+0x18>
 800a342:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a346:	f10d 0006 	add.w	r0, sp, #6
 800a34a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a34c:	4798      	blx	r3
 800a34e:	e7e9      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a350:	b2d2      	uxtb	r2, r2
 800a352:	2a05      	cmp	r2, #5
 800a354:	f63f af24 	bhi.w	800a1a0 <USBD_StdDevReq+0x18>
 800a358:	e8df f002 	tbb	[pc, r2]
 800a35c:	272f373f 	.word	0x272f373f
 800a360:	171f      	.short	0x171f
 800a362:	7c03      	ldrb	r3, [r0, #16]
 800a364:	2b00      	cmp	r3, #0
 800a366:	d172      	bne.n	800a44e <USBD_StdDevReq+0x2c6>
 800a368:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a36c:	f10d 0006 	add.w	r0, sp, #6
 800a370:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a372:	4798      	blx	r3
 800a374:	2302      	movs	r3, #2
 800a376:	7043      	strb	r3, [r0, #1]
 800a378:	e7d4      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a37a:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a37e:	f10d 0106 	add.w	r1, sp, #6
 800a382:	681b      	ldr	r3, [r3, #0]
 800a384:	7c00      	ldrb	r0, [r0, #16]
 800a386:	4798      	blx	r3
 800a388:	e7cc      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a38a:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a38e:	f10d 0106 	add.w	r1, sp, #6
 800a392:	699b      	ldr	r3, [r3, #24]
 800a394:	7c00      	ldrb	r0, [r0, #16]
 800a396:	4798      	blx	r3
 800a398:	e7c4      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a39a:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a39e:	f10d 0106 	add.w	r1, sp, #6
 800a3a2:	695b      	ldr	r3, [r3, #20]
 800a3a4:	7c00      	ldrb	r0, [r0, #16]
 800a3a6:	4798      	blx	r3
 800a3a8:	e7bc      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a3aa:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a3ae:	f10d 0106 	add.w	r1, sp, #6
 800a3b2:	691b      	ldr	r3, [r3, #16]
 800a3b4:	7c00      	ldrb	r0, [r0, #16]
 800a3b6:	4798      	blx	r3
 800a3b8:	e7b4      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a3ba:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a3be:	f10d 0106 	add.w	r1, sp, #6
 800a3c2:	68db      	ldr	r3, [r3, #12]
 800a3c4:	7c00      	ldrb	r0, [r0, #16]
 800a3c6:	4798      	blx	r3
 800a3c8:	e7ac      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a3ca:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a3ce:	f10d 0106 	add.w	r1, sp, #6
 800a3d2:	689b      	ldr	r3, [r3, #8]
 800a3d4:	7c00      	ldrb	r0, [r0, #16]
 800a3d6:	4798      	blx	r3
 800a3d8:	e7a4      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a3da:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a3de:	f10d 0106 	add.w	r1, sp, #6
 800a3e2:	685b      	ldr	r3, [r3, #4]
 800a3e4:	7c00      	ldrb	r0, [r0, #16]
 800a3e6:	4798      	blx	r3
 800a3e8:	e79c      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a3ea:	2b03      	cmp	r3, #3
 800a3ec:	f47f aed8 	bne.w	800a1a0 <USBD_StdDevReq+0x18>
 800a3f0:	1d01      	adds	r1, r0, #4
 800a3f2:	f000 f95d 	bl	800a6b0 <USBD_CtlSendData>
 800a3f6:	e6db      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a3f8:	429a      	cmp	r2, r3
 800a3fa:	bf28      	it	cs
 800a3fc:	461a      	movcs	r2, r3
 800a3fe:	4601      	mov	r1, r0
 800a400:	4620      	mov	r0, r4
 800a402:	f8ad 2006 	strh.w	r2, [sp, #6]
 800a406:	f000 f953 	bl	800a6b0 <USBD_CtlSendData>
 800a40a:	88eb      	ldrh	r3, [r5, #6]
 800a40c:	2b00      	cmp	r3, #0
 800a40e:	f47f aecf 	bne.w	800a1b0 <USBD_StdDevReq+0x28>
 800a412:	e78e      	b.n	800a332 <USBD_StdDevReq+0x1aa>
 800a414:	b321      	cbz	r1, 800a460 <USBD_StdDevReq+0x2d8>
 800a416:	6841      	ldr	r1, [r0, #4]
 800a418:	2901      	cmp	r1, #1
 800a41a:	d08a      	beq.n	800a332 <USBD_StdDevReq+0x1aa>
 800a41c:	b2c9      	uxtb	r1, r1
 800a41e:	f7ff fd8b 	bl	8009f38 <USBD_ClrClassConfig>
 800a422:	7829      	ldrb	r1, [r5, #0]
 800a424:	4620      	mov	r0, r4
 800a426:	6061      	str	r1, [r4, #4]
 800a428:	f7ff fd7c 	bl	8009f24 <USBD_SetClassConfig>
 800a42c:	2802      	cmp	r0, #2
 800a42e:	d180      	bne.n	800a332 <USBD_StdDevReq+0x1aa>
 800a430:	e6b6      	b.n	800a1a0 <USBD_StdDevReq+0x18>
 800a432:	2900      	cmp	r1, #0
 800a434:	f43f af7d 	beq.w	800a332 <USBD_StdDevReq+0x1aa>
 800a438:	2101      	movs	r1, #1
 800a43a:	2303      	movs	r3, #3
 800a43c:	6041      	str	r1, [r0, #4]
 800a43e:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a442:	f7ff fd6f 	bl	8009f24 <USBD_SetClassConfig>
 800a446:	2802      	cmp	r0, #2
 800a448:	f47f af73 	bne.w	800a332 <USBD_StdDevReq+0x1aa>
 800a44c:	e6a8      	b.n	800a1a0 <USBD_StdDevReq+0x18>
 800a44e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a452:	f10d 0006 	add.w	r0, sp, #6
 800a456:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a458:	4798      	blx	r3
 800a45a:	2302      	movs	r3, #2
 800a45c:	7043      	strb	r3, [r0, #1]
 800a45e:	e761      	b.n	800a324 <USBD_StdDevReq+0x19c>
 800a460:	2302      	movs	r3, #2
 800a462:	6041      	str	r1, [r0, #4]
 800a464:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a468:	f7ff fd66 	bl	8009f38 <USBD_ClrClassConfig>
 800a46c:	e761      	b.n	800a332 <USBD_StdDevReq+0x1aa>
 800a46e:	2301      	movs	r3, #1
 800a470:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 800a474:	e69c      	b.n	800a1b0 <USBD_StdDevReq+0x28>
 800a476:	bf00      	nop
 800a478:	200009b8 	.word	0x200009b8

0800a47c <USBD_StdItfReq>:
 800a47c:	b538      	push	{r3, r4, r5, lr}
 800a47e:	780b      	ldrb	r3, [r1, #0]
 800a480:	460d      	mov	r5, r1
 800a482:	f003 0260 	and.w	r2, r3, #96	; 0x60
 800a486:	2a40      	cmp	r2, #64	; 0x40
 800a488:	4604      	mov	r4, r0
 800a48a:	d00a      	beq.n	800a4a2 <USBD_StdItfReq+0x26>
 800a48c:	065b      	lsls	r3, r3, #25
 800a48e:	d508      	bpl.n	800a4a2 <USBD_StdItfReq+0x26>
 800a490:	2180      	movs	r1, #128	; 0x80
 800a492:	f000 fbb7 	bl	800ac04 <USBD_LL_StallEP>
 800a496:	2100      	movs	r1, #0
 800a498:	4620      	mov	r0, r4
 800a49a:	f000 fbb3 	bl	800ac04 <USBD_LL_StallEP>
 800a49e:	2000      	movs	r0, #0
 800a4a0:	bd38      	pop	{r3, r4, r5, pc}
 800a4a2:	f894 3274 	ldrb.w	r3, [r4, #628]	; 0x274
 800a4a6:	3b01      	subs	r3, #1
 800a4a8:	2b02      	cmp	r3, #2
 800a4aa:	d811      	bhi.n	800a4d0 <USBD_StdItfReq+0x54>
 800a4ac:	792b      	ldrb	r3, [r5, #4]
 800a4ae:	2b01      	cmp	r3, #1
 800a4b0:	d80e      	bhi.n	800a4d0 <USBD_StdItfReq+0x54>
 800a4b2:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a4b6:	4629      	mov	r1, r5
 800a4b8:	689b      	ldr	r3, [r3, #8]
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	4798      	blx	r3
 800a4be:	88eb      	ldrh	r3, [r5, #6]
 800a4c0:	2b00      	cmp	r3, #0
 800a4c2:	d1ec      	bne.n	800a49e <USBD_StdItfReq+0x22>
 800a4c4:	2800      	cmp	r0, #0
 800a4c6:	d1ea      	bne.n	800a49e <USBD_StdItfReq+0x22>
 800a4c8:	4620      	mov	r0, r4
 800a4ca:	f000 f921 	bl	800a710 <USBD_CtlSendStatus>
 800a4ce:	e7e6      	b.n	800a49e <USBD_StdItfReq+0x22>
 800a4d0:	2180      	movs	r1, #128	; 0x80
 800a4d2:	4620      	mov	r0, r4
 800a4d4:	f000 fb96 	bl	800ac04 <USBD_LL_StallEP>
 800a4d8:	2100      	movs	r1, #0
 800a4da:	4620      	mov	r0, r4
 800a4dc:	f000 fb92 	bl	800ac04 <USBD_LL_StallEP>
 800a4e0:	2000      	movs	r0, #0
 800a4e2:	bd38      	pop	{r3, r4, r5, pc}

0800a4e4 <USBD_StdEPReq>:
 800a4e4:	b538      	push	{r3, r4, r5, lr}
 800a4e6:	780b      	ldrb	r3, [r1, #0]
 800a4e8:	4604      	mov	r4, r0
 800a4ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a4ee:	2b20      	cmp	r3, #32
 800a4f0:	d00c      	beq.n	800a50c <USBD_StdEPReq+0x28>
 800a4f2:	2b40      	cmp	r3, #64	; 0x40
 800a4f4:	d00a      	beq.n	800a50c <USBD_StdEPReq+0x28>
 800a4f6:	b183      	cbz	r3, 800a51a <USBD_StdEPReq+0x36>
 800a4f8:	2180      	movs	r1, #128	; 0x80
 800a4fa:	4620      	mov	r0, r4
 800a4fc:	f000 fb82 	bl	800ac04 <USBD_LL_StallEP>
 800a500:	2100      	movs	r1, #0
 800a502:	4620      	mov	r0, r4
 800a504:	f000 fb7e 	bl	800ac04 <USBD_LL_StallEP>
 800a508:	2000      	movs	r0, #0
 800a50a:	bd38      	pop	{r3, r4, r5, pc}
 800a50c:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a510:	4620      	mov	r0, r4
 800a512:	689b      	ldr	r3, [r3, #8]
 800a514:	4798      	blx	r3
 800a516:	2000      	movs	r0, #0
 800a518:	bd38      	pop	{r3, r4, r5, pc}
 800a51a:	784b      	ldrb	r3, [r1, #1]
 800a51c:	888a      	ldrh	r2, [r1, #4]
 800a51e:	2b01      	cmp	r3, #1
 800a520:	fa5f fc82 	uxtb.w	ip, r2
 800a524:	d03e      	beq.n	800a5a4 <USBD_StdEPReq+0xc0>
 800a526:	2b03      	cmp	r3, #3
 800a528:	d02a      	beq.n	800a580 <USBD_StdEPReq+0x9c>
 800a52a:	2b00      	cmp	r3, #0
 800a52c:	d1e4      	bne.n	800a4f8 <USBD_StdEPReq+0x14>
 800a52e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a532:	2b02      	cmp	r3, #2
 800a534:	d051      	beq.n	800a5da <USBD_StdEPReq+0xf6>
 800a536:	2b03      	cmp	r3, #3
 800a538:	d1de      	bne.n	800a4f8 <USBD_StdEPReq+0x14>
 800a53a:	f00c 030f 	and.w	r3, ip, #15
 800a53e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a542:	0612      	lsls	r2, r2, #24
 800a544:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800a548:	d456      	bmi.n	800a5f8 <USBD_StdEPReq+0x114>
 800a54a:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 800a54e:	2b00      	cmp	r3, #0
 800a550:	d0d2      	beq.n	800a4f8 <USBD_StdEPReq+0x14>
 800a552:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a556:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 800a55a:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a55e:	f505 75a0 	add.w	r5, r5, #320	; 0x140
 800a562:	b133      	cbz	r3, 800a572 <USBD_StdEPReq+0x8e>
 800a564:	4661      	mov	r1, ip
 800a566:	4620      	mov	r0, r4
 800a568:	f000 fb68 	bl	800ac3c <USBD_LL_IsStallEP>
 800a56c:	2800      	cmp	r0, #0
 800a56e:	d04f      	beq.n	800a610 <USBD_StdEPReq+0x12c>
 800a570:	2301      	movs	r3, #1
 800a572:	602b      	str	r3, [r5, #0]
 800a574:	2202      	movs	r2, #2
 800a576:	4629      	mov	r1, r5
 800a578:	4620      	mov	r0, r4
 800a57a:	f000 f899 	bl	800a6b0 <USBD_CtlSendData>
 800a57e:	e7c3      	b.n	800a508 <USBD_StdEPReq+0x24>
 800a580:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a584:	2b02      	cmp	r3, #2
 800a586:	d01d      	beq.n	800a5c4 <USBD_StdEPReq+0xe0>
 800a588:	2b03      	cmp	r3, #3
 800a58a:	d1b5      	bne.n	800a4f8 <USBD_StdEPReq+0x14>
 800a58c:	884b      	ldrh	r3, [r1, #2]
 800a58e:	b92b      	cbnz	r3, 800a59c <USBD_StdEPReq+0xb8>
 800a590:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a594:	d002      	beq.n	800a59c <USBD_StdEPReq+0xb8>
 800a596:	88cb      	ldrh	r3, [r1, #6]
 800a598:	2b00      	cmp	r3, #0
 800a59a:	d03b      	beq.n	800a614 <USBD_StdEPReq+0x130>
 800a59c:	4620      	mov	r0, r4
 800a59e:	f000 f8b7 	bl	800a710 <USBD_CtlSendStatus>
 800a5a2:	e7b1      	b.n	800a508 <USBD_StdEPReq+0x24>
 800a5a4:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a5a8:	2b02      	cmp	r3, #2
 800a5aa:	d00b      	beq.n	800a5c4 <USBD_StdEPReq+0xe0>
 800a5ac:	2b03      	cmp	r3, #3
 800a5ae:	d1a3      	bne.n	800a4f8 <USBD_StdEPReq+0x14>
 800a5b0:	884b      	ldrh	r3, [r1, #2]
 800a5b2:	2b00      	cmp	r3, #0
 800a5b4:	d1a8      	bne.n	800a508 <USBD_StdEPReq+0x24>
 800a5b6:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a5ba:	d0ef      	beq.n	800a59c <USBD_StdEPReq+0xb8>
 800a5bc:	4661      	mov	r1, ip
 800a5be:	f000 fb2f 	bl	800ac20 <USBD_LL_ClearStallEP>
 800a5c2:	e7eb      	b.n	800a59c <USBD_StdEPReq+0xb8>
 800a5c4:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a5c8:	d096      	beq.n	800a4f8 <USBD_StdEPReq+0x14>
 800a5ca:	4661      	mov	r1, ip
 800a5cc:	f000 fb1a 	bl	800ac04 <USBD_LL_StallEP>
 800a5d0:	2180      	movs	r1, #128	; 0x80
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	f000 fb16 	bl	800ac04 <USBD_LL_StallEP>
 800a5d8:	e796      	b.n	800a508 <USBD_StdEPReq+0x24>
 800a5da:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a5de:	d18b      	bne.n	800a4f8 <USBD_StdEPReq+0x14>
 800a5e0:	2300      	movs	r3, #0
 800a5e2:	0611      	lsls	r1, r2, #24
 800a5e4:	bf4c      	ite	mi
 800a5e6:	f100 0114 	addmi.w	r1, r0, #20
 800a5ea:	f500 71a0 	addpl.w	r1, r0, #320	; 0x140
 800a5ee:	2202      	movs	r2, #2
 800a5f0:	600b      	str	r3, [r1, #0]
 800a5f2:	f000 f85d 	bl	800a6b0 <USBD_CtlSendData>
 800a5f6:	e787      	b.n	800a508 <USBD_StdEPReq+0x24>
 800a5f8:	699b      	ldr	r3, [r3, #24]
 800a5fa:	2b00      	cmp	r3, #0
 800a5fc:	f43f af7c 	beq.w	800a4f8 <USBD_StdEPReq+0x14>
 800a600:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a604:	1c5d      	adds	r5, r3, #1
 800a606:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a60a:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a60e:	e7a8      	b.n	800a562 <USBD_StdEPReq+0x7e>
 800a610:	6028      	str	r0, [r5, #0]
 800a612:	e7af      	b.n	800a574 <USBD_StdEPReq+0x90>
 800a614:	4661      	mov	r1, ip
 800a616:	f000 faf5 	bl	800ac04 <USBD_LL_StallEP>
 800a61a:	e7bf      	b.n	800a59c <USBD_StdEPReq+0xb8>

0800a61c <USBD_ParseSetupRequest>:
 800a61c:	780b      	ldrb	r3, [r1, #0]
 800a61e:	7003      	strb	r3, [r0, #0]
 800a620:	784b      	ldrb	r3, [r1, #1]
 800a622:	7043      	strb	r3, [r0, #1]
 800a624:	78ca      	ldrb	r2, [r1, #3]
 800a626:	788b      	ldrb	r3, [r1, #2]
 800a628:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a62c:	8043      	strh	r3, [r0, #2]
 800a62e:	794a      	ldrb	r2, [r1, #5]
 800a630:	790b      	ldrb	r3, [r1, #4]
 800a632:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a636:	8083      	strh	r3, [r0, #4]
 800a638:	79ca      	ldrb	r2, [r1, #7]
 800a63a:	798b      	ldrb	r3, [r1, #6]
 800a63c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a640:	80c3      	strh	r3, [r0, #6]
 800a642:	4770      	bx	lr

0800a644 <USBD_CtlError>:
 800a644:	b510      	push	{r4, lr}
 800a646:	4604      	mov	r4, r0
 800a648:	2180      	movs	r1, #128	; 0x80
 800a64a:	f000 fadb 	bl	800ac04 <USBD_LL_StallEP>
 800a64e:	4620      	mov	r0, r4
 800a650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a654:	2100      	movs	r1, #0
 800a656:	f000 bad5 	b.w	800ac04 <USBD_LL_StallEP>
 800a65a:	bf00      	nop

0800a65c <USBD_GetString>:
 800a65c:	b318      	cbz	r0, 800a6a6 <USBD_GetString+0x4a>
 800a65e:	7803      	ldrb	r3, [r0, #0]
 800a660:	b430      	push	{r4, r5}
 800a662:	b30b      	cbz	r3, 800a6a8 <USBD_GetString+0x4c>
 800a664:	4604      	mov	r4, r0
 800a666:	f1c0 0c01 	rsb	ip, r0, #1
 800a66a:	eb04 030c 	add.w	r3, r4, ip
 800a66e:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a672:	b2db      	uxtb	r3, r3
 800a674:	2d00      	cmp	r5, #0
 800a676:	d1f8      	bne.n	800a66a <USBD_GetString+0xe>
 800a678:	3301      	adds	r3, #1
 800a67a:	005b      	lsls	r3, r3, #1
 800a67c:	b2dc      	uxtb	r4, r3
 800a67e:	8013      	strh	r3, [r2, #0]
 800a680:	2303      	movs	r3, #3
 800a682:	700c      	strb	r4, [r1, #0]
 800a684:	704b      	strb	r3, [r1, #1]
 800a686:	7804      	ldrb	r4, [r0, #0]
 800a688:	b15c      	cbz	r4, 800a6a2 <USBD_GetString+0x46>
 800a68a:	2302      	movs	r3, #2
 800a68c:	2500      	movs	r5, #0
 800a68e:	1c5a      	adds	r2, r3, #1
 800a690:	b2d2      	uxtb	r2, r2
 800a692:	54cc      	strb	r4, [r1, r3]
 800a694:	548d      	strb	r5, [r1, r2]
 800a696:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800a69a:	3302      	adds	r3, #2
 800a69c:	b2db      	uxtb	r3, r3
 800a69e:	2c00      	cmp	r4, #0
 800a6a0:	d1f5      	bne.n	800a68e <USBD_GetString+0x32>
 800a6a2:	bc30      	pop	{r4, r5}
 800a6a4:	4770      	bx	lr
 800a6a6:	4770      	bx	lr
 800a6a8:	2402      	movs	r4, #2
 800a6aa:	4623      	mov	r3, r4
 800a6ac:	e7e7      	b.n	800a67e <USBD_GetString+0x22>
 800a6ae:	bf00      	nop

0800a6b0 <USBD_CtlSendData>:
 800a6b0:	b510      	push	{r4, lr}
 800a6b2:	4613      	mov	r3, r2
 800a6b4:	2402      	movs	r4, #2
 800a6b6:	460a      	mov	r2, r1
 800a6b8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a6bc:	2100      	movs	r1, #0
 800a6be:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a6c2:	f000 fadd 	bl	800ac80 <USBD_LL_Transmit>
 800a6c6:	2000      	movs	r0, #0
 800a6c8:	bd10      	pop	{r4, pc}
 800a6ca:	bf00      	nop

0800a6cc <USBD_CtlContinueSendData>:
 800a6cc:	468c      	mov	ip, r1
 800a6ce:	b508      	push	{r3, lr}
 800a6d0:	2100      	movs	r1, #0
 800a6d2:	4613      	mov	r3, r2
 800a6d4:	4662      	mov	r2, ip
 800a6d6:	f000 fad3 	bl	800ac80 <USBD_LL_Transmit>
 800a6da:	2000      	movs	r0, #0
 800a6dc:	bd08      	pop	{r3, pc}
 800a6de:	bf00      	nop

0800a6e0 <USBD_CtlPrepareRx>:
 800a6e0:	b510      	push	{r4, lr}
 800a6e2:	4613      	mov	r3, r2
 800a6e4:	2403      	movs	r4, #3
 800a6e6:	460a      	mov	r2, r1
 800a6e8:	e9c0 3352 	strd	r3, r3, [r0, #328]	; 0x148
 800a6ec:	2100      	movs	r1, #0
 800a6ee:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a6f2:	f000 fad3 	bl	800ac9c <USBD_LL_PrepareReceive>
 800a6f6:	2000      	movs	r0, #0
 800a6f8:	bd10      	pop	{r4, pc}
 800a6fa:	bf00      	nop

0800a6fc <USBD_CtlContinueRx>:
 800a6fc:	468c      	mov	ip, r1
 800a6fe:	b508      	push	{r3, lr}
 800a700:	2100      	movs	r1, #0
 800a702:	4613      	mov	r3, r2
 800a704:	4662      	mov	r2, ip
 800a706:	f000 fac9 	bl	800ac9c <USBD_LL_PrepareReceive>
 800a70a:	2000      	movs	r0, #0
 800a70c:	bd08      	pop	{r3, pc}
 800a70e:	bf00      	nop

0800a710 <USBD_CtlSendStatus>:
 800a710:	b508      	push	{r3, lr}
 800a712:	2104      	movs	r1, #4
 800a714:	2300      	movs	r3, #0
 800a716:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a71a:	461a      	mov	r2, r3
 800a71c:	4619      	mov	r1, r3
 800a71e:	f000 faaf 	bl	800ac80 <USBD_LL_Transmit>
 800a722:	2000      	movs	r0, #0
 800a724:	bd08      	pop	{r3, pc}
 800a726:	bf00      	nop

0800a728 <USBD_CtlReceiveStatus>:
 800a728:	b508      	push	{r3, lr}
 800a72a:	2105      	movs	r1, #5
 800a72c:	2300      	movs	r3, #0
 800a72e:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a732:	461a      	mov	r2, r3
 800a734:	4619      	mov	r1, r3
 800a736:	f000 fab1 	bl	800ac9c <USBD_LL_PrepareReceive>
 800a73a:	2000      	movs	r0, #0
 800a73c:	bd08      	pop	{r3, pc}
 800a73e:	bf00      	nop

0800a740 <MX_USB_DEVICE_Init>:
 800a740:	b508      	push	{r3, lr}
 800a742:	2200      	movs	r2, #0
 800a744:	4917      	ldr	r1, [pc, #92]	; (800a7a4 <MX_USB_DEVICE_Init+0x64>)
 800a746:	4818      	ldr	r0, [pc, #96]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a748:	f7ff fbc8 	bl	8009edc <USBD_Init>
 800a74c:	b970      	cbnz	r0, 800a76c <MX_USB_DEVICE_Init+0x2c>
 800a74e:	4917      	ldr	r1, [pc, #92]	; (800a7ac <MX_USB_DEVICE_Init+0x6c>)
 800a750:	4815      	ldr	r0, [pc, #84]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a752:	f7ff fbd9 	bl	8009f08 <USBD_RegisterClass>
 800a756:	b988      	cbnz	r0, 800a77c <MX_USB_DEVICE_Init+0x3c>
 800a758:	4915      	ldr	r1, [pc, #84]	; (800a7b0 <MX_USB_DEVICE_Init+0x70>)
 800a75a:	4813      	ldr	r0, [pc, #76]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a75c:	f7ff fb6e 	bl	8009e3c <USBD_CDC_RegisterInterface>
 800a760:	b9a0      	cbnz	r0, 800a78c <MX_USB_DEVICE_Init+0x4c>
 800a762:	4811      	ldr	r0, [pc, #68]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a764:	f7ff fbd8 	bl	8009f18 <USBD_Start>
 800a768:	b9b8      	cbnz	r0, 800a79a <MX_USB_DEVICE_Init+0x5a>
 800a76a:	bd08      	pop	{r3, pc}
 800a76c:	f7fa fc0c 	bl	8004f88 <Error_Handler>
 800a770:	490e      	ldr	r1, [pc, #56]	; (800a7ac <MX_USB_DEVICE_Init+0x6c>)
 800a772:	480d      	ldr	r0, [pc, #52]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a774:	f7ff fbc8 	bl	8009f08 <USBD_RegisterClass>
 800a778:	2800      	cmp	r0, #0
 800a77a:	d0ed      	beq.n	800a758 <MX_USB_DEVICE_Init+0x18>
 800a77c:	f7fa fc04 	bl	8004f88 <Error_Handler>
 800a780:	490b      	ldr	r1, [pc, #44]	; (800a7b0 <MX_USB_DEVICE_Init+0x70>)
 800a782:	4809      	ldr	r0, [pc, #36]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a784:	f7ff fb5a 	bl	8009e3c <USBD_CDC_RegisterInterface>
 800a788:	2800      	cmp	r0, #0
 800a78a:	d0ea      	beq.n	800a762 <MX_USB_DEVICE_Init+0x22>
 800a78c:	f7fa fbfc 	bl	8004f88 <Error_Handler>
 800a790:	4805      	ldr	r0, [pc, #20]	; (800a7a8 <MX_USB_DEVICE_Init+0x68>)
 800a792:	f7ff fbc1 	bl	8009f18 <USBD_Start>
 800a796:	2800      	cmp	r0, #0
 800a798:	d0e7      	beq.n	800a76a <MX_USB_DEVICE_Init+0x2a>
 800a79a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a79e:	f7fa bbf3 	b.w	8004f88 <Error_Handler>
 800a7a2:	bf00      	nop
 800a7a4:	20000154 	.word	0x20000154
 800a7a8:	200009bc 	.word	0x200009bc
 800a7ac:	20000034 	.word	0x20000034
 800a7b0:	20000144 	.word	0x20000144

0800a7b4 <CDC_DeInit_FS>:
 800a7b4:	2000      	movs	r0, #0
 800a7b6:	4770      	bx	lr

0800a7b8 <CDC_Init_FS>:
 800a7b8:	b510      	push	{r4, lr}
 800a7ba:	4c06      	ldr	r4, [pc, #24]	; (800a7d4 <CDC_Init_FS+0x1c>)
 800a7bc:	2200      	movs	r2, #0
 800a7be:	4620      	mov	r0, r4
 800a7c0:	4905      	ldr	r1, [pc, #20]	; (800a7d8 <CDC_Init_FS+0x20>)
 800a7c2:	f7ff fb43 	bl	8009e4c <USBD_CDC_SetTxBuffer>
 800a7c6:	4620      	mov	r0, r4
 800a7c8:	4904      	ldr	r1, [pc, #16]	; (800a7dc <CDC_Init_FS+0x24>)
 800a7ca:	f7ff fb49 	bl	8009e60 <USBD_CDC_SetRxBuffer>
 800a7ce:	2000      	movs	r0, #0
 800a7d0:	bd10      	pop	{r4, pc}
 800a7d2:	bf00      	nop
 800a7d4:	200009bc 	.word	0x200009bc
 800a7d8:	20000cd8 	.word	0x20000cd8
 800a7dc:	20000c58 	.word	0x20000c58

0800a7e0 <CDC_Control_FS>:
 800a7e0:	2821      	cmp	r0, #33	; 0x21
 800a7e2:	d106      	bne.n	800a7f2 <CDC_Control_FS+0x12>
 800a7e4:	2300      	movs	r3, #0
 800a7e6:	2208      	movs	r2, #8
 800a7e8:	4803      	ldr	r0, [pc, #12]	; (800a7f8 <CDC_Control_FS+0x18>)
 800a7ea:	710b      	strb	r3, [r1, #4]
 800a7ec:	6008      	str	r0, [r1, #0]
 800a7ee:	714b      	strb	r3, [r1, #5]
 800a7f0:	718a      	strb	r2, [r1, #6]
 800a7f2:	2000      	movs	r0, #0
 800a7f4:	4770      	bx	lr
 800a7f6:	bf00      	nop
 800a7f8:	0001c220 	.word	0x0001c220

0800a7fc <CDC_Receive_FS>:
 800a7fc:	680a      	ldr	r2, [r1, #0]
 800a7fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a802:	4605      	mov	r5, r0
 800a804:	b1d2      	cbz	r2, 800a83c <CDC_Receive_FS+0x40>
 800a806:	460e      	mov	r6, r1
 800a808:	f04f 0801 	mov.w	r8, #1
 800a80c:	4f17      	ldr	r7, [pc, #92]	; (800a86c <CDC_Receive_FS+0x70>)
 800a80e:	f100 39ff 	add.w	r9, r0, #4294967295
 800a812:	e008      	b.n	800a826 <CDC_Receive_FS+0x2a>
 800a814:	280d      	cmp	r0, #13
 800a816:	d00b      	beq.n	800a830 <CDC_Receive_FS+0x34>
 800a818:	f7fa fb9e 	bl	8004f58 <Write_to_circ_buffer>
 800a81c:	3402      	adds	r4, #2
 800a81e:	6832      	ldr	r2, [r6, #0]
 800a820:	1b64      	subs	r4, r4, r5
 800a822:	42a2      	cmp	r2, r4
 800a824:	d909      	bls.n	800a83a <CDC_Receive_FS+0x3e>
 800a826:	464c      	mov	r4, r9
 800a828:	f819 0f01 	ldrb.w	r0, [r9, #1]!
 800a82c:	280a      	cmp	r0, #10
 800a82e:	d1f1      	bne.n	800a814 <CDC_Receive_FS+0x18>
 800a830:	f887 8000 	strb.w	r8, [r7]
 800a834:	f899 0000 	ldrb.w	r0, [r9]
 800a838:	e7ee      	b.n	800a818 <CDC_Receive_FS+0x1c>
 800a83a:	b292      	uxth	r2, r2
 800a83c:	4c0c      	ldr	r4, [pc, #48]	; (800a870 <CDC_Receive_FS+0x74>)
 800a83e:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a842:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a846:	b933      	cbnz	r3, 800a856 <CDC_Receive_FS+0x5a>
 800a848:	4629      	mov	r1, r5
 800a84a:	4620      	mov	r0, r4
 800a84c:	f7ff fafe 	bl	8009e4c <USBD_CDC_SetTxBuffer>
 800a850:	4620      	mov	r0, r4
 800a852:	f7ff fb0d 	bl	8009e70 <USBD_CDC_TransmitPacket>
 800a856:	4629      	mov	r1, r5
 800a858:	4805      	ldr	r0, [pc, #20]	; (800a870 <CDC_Receive_FS+0x74>)
 800a85a:	f7ff fb01 	bl	8009e60 <USBD_CDC_SetRxBuffer>
 800a85e:	4804      	ldr	r0, [pc, #16]	; (800a870 <CDC_Receive_FS+0x74>)
 800a860:	f7ff fb20 	bl	8009ea4 <USBD_CDC_ReceivePacket>
 800a864:	2000      	movs	r0, #0
 800a866:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a86a:	bf00      	nop
 800a86c:	200006b4 	.word	0x200006b4
 800a870:	200009bc 	.word	0x200009bc

0800a874 <CDC_Transmit_FS>:
 800a874:	b510      	push	{r4, lr}
 800a876:	4c09      	ldr	r4, [pc, #36]	; (800a89c <CDC_Transmit_FS+0x28>)
 800a878:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a87c:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a880:	b10b      	cbz	r3, 800a886 <CDC_Transmit_FS+0x12>
 800a882:	2001      	movs	r0, #1
 800a884:	bd10      	pop	{r4, pc}
 800a886:	460a      	mov	r2, r1
 800a888:	4601      	mov	r1, r0
 800a88a:	4620      	mov	r0, r4
 800a88c:	f7ff fade 	bl	8009e4c <USBD_CDC_SetTxBuffer>
 800a890:	4620      	mov	r0, r4
 800a892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a896:	f7ff baeb 	b.w	8009e70 <USBD_CDC_TransmitPacket>
 800a89a:	bf00      	nop
 800a89c:	200009bc 	.word	0x200009bc

0800a8a0 <USBD_FS_DeviceDescriptor>:
 800a8a0:	2312      	movs	r3, #18
 800a8a2:	4801      	ldr	r0, [pc, #4]	; (800a8a8 <USBD_FS_DeviceDescriptor+0x8>)
 800a8a4:	800b      	strh	r3, [r1, #0]
 800a8a6:	4770      	bx	lr
 800a8a8:	20000170 	.word	0x20000170

0800a8ac <USBD_FS_LangIDStrDescriptor>:
 800a8ac:	2304      	movs	r3, #4
 800a8ae:	4801      	ldr	r0, [pc, #4]	; (800a8b4 <USBD_FS_LangIDStrDescriptor+0x8>)
 800a8b0:	800b      	strh	r3, [r1, #0]
 800a8b2:	4770      	bx	lr
 800a8b4:	20000184 	.word	0x20000184

0800a8b8 <USBD_FS_ManufacturerStrDescriptor>:
 800a8b8:	b510      	push	{r4, lr}
 800a8ba:	4c04      	ldr	r4, [pc, #16]	; (800a8cc <USBD_FS_ManufacturerStrDescriptor+0x14>)
 800a8bc:	460a      	mov	r2, r1
 800a8be:	4804      	ldr	r0, [pc, #16]	; (800a8d0 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 800a8c0:	4621      	mov	r1, r4
 800a8c2:	f7ff fecb 	bl	800a65c <USBD_GetString>
 800a8c6:	4620      	mov	r0, r4
 800a8c8:	bd10      	pop	{r4, pc}
 800a8ca:	bf00      	nop
 800a8cc:	20000dd8 	.word	0x20000dd8
 800a8d0:	08010d00 	.word	0x08010d00

0800a8d4 <USBD_FS_ProductStrDescriptor>:
 800a8d4:	b510      	push	{r4, lr}
 800a8d6:	4c04      	ldr	r4, [pc, #16]	; (800a8e8 <USBD_FS_ProductStrDescriptor+0x14>)
 800a8d8:	460a      	mov	r2, r1
 800a8da:	4804      	ldr	r0, [pc, #16]	; (800a8ec <USBD_FS_ProductStrDescriptor+0x18>)
 800a8dc:	4621      	mov	r1, r4
 800a8de:	f7ff febd 	bl	800a65c <USBD_GetString>
 800a8e2:	4620      	mov	r0, r4
 800a8e4:	bd10      	pop	{r4, pc}
 800a8e6:	bf00      	nop
 800a8e8:	20000dd8 	.word	0x20000dd8
 800a8ec:	08010d10 	.word	0x08010d10

0800a8f0 <USBD_FS_ConfigStrDescriptor>:
 800a8f0:	b510      	push	{r4, lr}
 800a8f2:	4c04      	ldr	r4, [pc, #16]	; (800a904 <USBD_FS_ConfigStrDescriptor+0x14>)
 800a8f4:	460a      	mov	r2, r1
 800a8f6:	4804      	ldr	r0, [pc, #16]	; (800a908 <USBD_FS_ConfigStrDescriptor+0x18>)
 800a8f8:	4621      	mov	r1, r4
 800a8fa:	f7ff feaf 	bl	800a65c <USBD_GetString>
 800a8fe:	4620      	mov	r0, r4
 800a900:	bd10      	pop	{r4, pc}
 800a902:	bf00      	nop
 800a904:	20000dd8 	.word	0x20000dd8
 800a908:	08010d1c 	.word	0x08010d1c

0800a90c <USBD_FS_InterfaceStrDescriptor>:
 800a90c:	b510      	push	{r4, lr}
 800a90e:	4c04      	ldr	r4, [pc, #16]	; (800a920 <USBD_FS_InterfaceStrDescriptor+0x14>)
 800a910:	460a      	mov	r2, r1
 800a912:	4804      	ldr	r0, [pc, #16]	; (800a924 <USBD_FS_InterfaceStrDescriptor+0x18>)
 800a914:	4621      	mov	r1, r4
 800a916:	f7ff fea1 	bl	800a65c <USBD_GetString>
 800a91a:	4620      	mov	r0, r4
 800a91c:	bd10      	pop	{r4, pc}
 800a91e:	bf00      	nop
 800a920:	20000dd8 	.word	0x20000dd8
 800a924:	08010d28 	.word	0x08010d28

0800a928 <USBD_FS_SerialStrDescriptor>:
 800a928:	f04f 0c1a 	mov.w	ip, #26
 800a92c:	4a42      	ldr	r2, [pc, #264]	; (800aa38 <USBD_FS_SerialStrDescriptor+0x110>)
 800a92e:	6d10      	ldr	r0, [r2, #80]	; 0x50
 800a930:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800a932:	f8a1 c000 	strh.w	ip, [r1]
 800a936:	18c3      	adds	r3, r0, r3
 800a938:	d101      	bne.n	800a93e <USBD_FS_SerialStrDescriptor+0x16>
 800a93a:	4840      	ldr	r0, [pc, #256]	; (800aa3c <USBD_FS_SerialStrDescriptor+0x114>)
 800a93c:	4770      	bx	lr
 800a93e:	f04f 0c00 	mov.w	ip, #0
 800a942:	6d51      	ldr	r1, [r2, #84]	; 0x54
 800a944:	0f18      	lsrs	r0, r3, #28
 800a946:	4a3d      	ldr	r2, [pc, #244]	; (800aa3c <USBD_FS_SerialStrDescriptor+0x114>)
 800a948:	f1b3 4f20 	cmp.w	r3, #2684354560	; 0xa0000000
 800a94c:	bf2c      	ite	cs
 800a94e:	3037      	addcs	r0, #55	; 0x37
 800a950:	3030      	addcc	r0, #48	; 0x30
 800a952:	7090      	strb	r0, [r2, #2]
 800a954:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800a958:	2809      	cmp	r0, #9
 800a95a:	bf8c      	ite	hi
 800a95c:	3037      	addhi	r0, #55	; 0x37
 800a95e:	3030      	addls	r0, #48	; 0x30
 800a960:	7110      	strb	r0, [r2, #4]
 800a962:	f3c3 5003 	ubfx	r0, r3, #20, #4
 800a966:	2809      	cmp	r0, #9
 800a968:	bf8c      	ite	hi
 800a96a:	3037      	addhi	r0, #55	; 0x37
 800a96c:	3030      	addls	r0, #48	; 0x30
 800a96e:	7190      	strb	r0, [r2, #6]
 800a970:	f3c3 4003 	ubfx	r0, r3, #16, #4
 800a974:	2809      	cmp	r0, #9
 800a976:	bf8c      	ite	hi
 800a978:	3037      	addhi	r0, #55	; 0x37
 800a97a:	3030      	addls	r0, #48	; 0x30
 800a97c:	7210      	strb	r0, [r2, #8]
 800a97e:	f3c3 3003 	ubfx	r0, r3, #12, #4
 800a982:	2809      	cmp	r0, #9
 800a984:	bf8c      	ite	hi
 800a986:	3037      	addhi	r0, #55	; 0x37
 800a988:	3030      	addls	r0, #48	; 0x30
 800a98a:	7290      	strb	r0, [r2, #10]
 800a98c:	f3c3 2003 	ubfx	r0, r3, #8, #4
 800a990:	2809      	cmp	r0, #9
 800a992:	bf8c      	ite	hi
 800a994:	3037      	addhi	r0, #55	; 0x37
 800a996:	3030      	addls	r0, #48	; 0x30
 800a998:	7310      	strb	r0, [r2, #12]
 800a99a:	f3c3 1003 	ubfx	r0, r3, #4, #4
 800a99e:	2809      	cmp	r0, #9
 800a9a0:	bf8c      	ite	hi
 800a9a2:	3037      	addhi	r0, #55	; 0x37
 800a9a4:	3030      	addls	r0, #48	; 0x30
 800a9a6:	f882 c003 	strb.w	ip, [r2, #3]
 800a9aa:	7390      	strb	r0, [r2, #14]
 800a9ac:	f04f 0c00 	mov.w	ip, #0
 800a9b0:	2000      	movs	r0, #0
 800a9b2:	f882 c005 	strb.w	ip, [r2, #5]
 800a9b6:	73d0      	strb	r0, [r2, #15]
 800a9b8:	f04f 0c00 	mov.w	ip, #0
 800a9bc:	2000      	movs	r0, #0
 800a9be:	f882 c007 	strb.w	ip, [r2, #7]
 800a9c2:	7450      	strb	r0, [r2, #17]
 800a9c4:	f04f 0c00 	mov.w	ip, #0
 800a9c8:	2000      	movs	r0, #0
 800a9ca:	f882 c009 	strb.w	ip, [r2, #9]
 800a9ce:	74d0      	strb	r0, [r2, #19]
 800a9d0:	f04f 0c00 	mov.w	ip, #0
 800a9d4:	2000      	movs	r0, #0
 800a9d6:	f003 030f 	and.w	r3, r3, #15
 800a9da:	2b09      	cmp	r3, #9
 800a9dc:	bf94      	ite	ls
 800a9de:	3330      	addls	r3, #48	; 0x30
 800a9e0:	3337      	addhi	r3, #55	; 0x37
 800a9e2:	7413      	strb	r3, [r2, #16]
 800a9e4:	f1b1 4f20 	cmp.w	r1, #2684354560	; 0xa0000000
 800a9e8:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800a9ec:	bf2c      	ite	cs
 800a9ee:	3337      	addcs	r3, #55	; 0x37
 800a9f0:	3330      	addcc	r3, #48	; 0x30
 800a9f2:	7493      	strb	r3, [r2, #18]
 800a9f4:	f3c1 6303 	ubfx	r3, r1, #24, #4
 800a9f8:	2b09      	cmp	r3, #9
 800a9fa:	bf8c      	ite	hi
 800a9fc:	3337      	addhi	r3, #55	; 0x37
 800a9fe:	3330      	addls	r3, #48	; 0x30
 800aa00:	7513      	strb	r3, [r2, #20]
 800aa02:	f3c1 5303 	ubfx	r3, r1, #20, #4
 800aa06:	2b09      	cmp	r3, #9
 800aa08:	bf8c      	ite	hi
 800aa0a:	3337      	addhi	r3, #55	; 0x37
 800aa0c:	3330      	addls	r3, #48	; 0x30
 800aa0e:	7593      	strb	r3, [r2, #22]
 800aa10:	f3c1 4303 	ubfx	r3, r1, #16, #4
 800aa14:	2b09      	cmp	r3, #9
 800aa16:	bf94      	ite	ls
 800aa18:	3330      	addls	r3, #48	; 0x30
 800aa1a:	3337      	addhi	r3, #55	; 0x37
 800aa1c:	f882 c00b 	strb.w	ip, [r2, #11]
 800aa20:	7550      	strb	r0, [r2, #21]
 800aa22:	f04f 0c00 	mov.w	ip, #0
 800aa26:	2000      	movs	r0, #0
 800aa28:	7613      	strb	r3, [r2, #24]
 800aa2a:	2300      	movs	r3, #0
 800aa2c:	75d0      	strb	r0, [r2, #23]
 800aa2e:	f882 c00d 	strb.w	ip, [r2, #13]
 800aa32:	4802      	ldr	r0, [pc, #8]	; (800aa3c <USBD_FS_SerialStrDescriptor+0x114>)
 800aa34:	7653      	strb	r3, [r2, #25]
 800aa36:	4770      	bx	lr
 800aa38:	1ff80000 	.word	0x1ff80000
 800aa3c:	20000188 	.word	0x20000188

0800aa40 <HAL_PCDEx_SetConnectionState>:
 800aa40:	4a04      	ldr	r2, [pc, #16]	; (800aa54 <HAL_PCDEx_SetConnectionState+0x14>)
 800aa42:	2901      	cmp	r1, #1
 800aa44:	6853      	ldr	r3, [r2, #4]
 800aa46:	bf0c      	ite	eq
 800aa48:	f043 0301 	orreq.w	r3, r3, #1
 800aa4c:	f023 0301 	bicne.w	r3, r3, #1
 800aa50:	6053      	str	r3, [r2, #4]
 800aa52:	4770      	bx	lr
 800aa54:	40010000 	.word	0x40010000

0800aa58 <HAL_PCD_MspInit>:
 800aa58:	4b0e      	ldr	r3, [pc, #56]	; (800aa94 <HAL_PCD_MspInit+0x3c>)
 800aa5a:	6802      	ldr	r2, [r0, #0]
 800aa5c:	429a      	cmp	r2, r3
 800aa5e:	d000      	beq.n	800aa62 <HAL_PCD_MspInit+0xa>
 800aa60:	4770      	bx	lr
 800aa62:	f503 33ee 	add.w	r3, r3, #121856	; 0x1dc00
 800aa66:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800aa68:	b500      	push	{lr}
 800aa6a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800aa6e:	6259      	str	r1, [r3, #36]	; 0x24
 800aa70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa72:	b083      	sub	sp, #12
 800aa74:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800aa78:	9301      	str	r3, [sp, #4]
 800aa7a:	2014      	movs	r0, #20
 800aa7c:	2200      	movs	r2, #0
 800aa7e:	2101      	movs	r1, #1
 800aa80:	9b01      	ldr	r3, [sp, #4]
 800aa82:	f7fa ff8b 	bl	800599c <HAL_NVIC_SetPriority>
 800aa86:	2014      	movs	r0, #20
 800aa88:	b003      	add	sp, #12
 800aa8a:	f85d eb04 	ldr.w	lr, [sp], #4
 800aa8e:	f7fa bfc3 	b.w	8005a18 <HAL_NVIC_EnableIRQ>
 800aa92:	bf00      	nop
 800aa94:	40005c00 	.word	0x40005c00

0800aa98 <HAL_PCD_SetupStageCallback>:
 800aa98:	4601      	mov	r1, r0
 800aa9a:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aa9e:	f501 712c 	add.w	r1, r1, #688	; 0x2b0
 800aaa2:	f7ff ba51 	b.w	8009f48 <USBD_LL_SetupStage>
 800aaa6:	bf00      	nop

0800aaa8 <HAL_PCD_DataOutStageCallback>:
 800aaa8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800aaac:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800aab0:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800aab4:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aab8:	f7ff ba76 	b.w	8009fa8 <USBD_LL_DataOutStage>

0800aabc <HAL_PCD_DataInStageCallback>:
 800aabc:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800aac0:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800aac4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800aac6:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aaca:	f7ff baab 	b.w	800a024 <USBD_LL_DataInStage>
 800aace:	bf00      	nop

0800aad0 <HAL_PCD_SOFCallback>:
 800aad0:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aad4:	f7ff bb4a 	b.w	800a16c <USBD_LL_SOF>

0800aad8 <HAL_PCD_ResetCallback>:
 800aad8:	6883      	ldr	r3, [r0, #8]
 800aada:	b510      	push	{r4, lr}
 800aadc:	2b02      	cmp	r3, #2
 800aade:	4604      	mov	r4, r0
 800aae0:	d001      	beq.n	800aae6 <HAL_PCD_ResetCallback+0xe>
 800aae2:	f7fa fa51 	bl	8004f88 <Error_Handler>
 800aae6:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800aaea:	2101      	movs	r1, #1
 800aaec:	f7ff fb28 	bl	800a140 <USBD_LL_SetSpeed>
 800aaf0:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800aaf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aaf8:	f7ff bafa 	b.w	800a0f0 <USBD_LL_Reset>

0800aafc <HAL_PCD_SuspendCallback>:
 800aafc:	b510      	push	{r4, lr}
 800aafe:	4604      	mov	r4, r0
 800ab00:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800ab04:	f7ff fb20 	bl	800a148 <USBD_LL_Suspend>
 800ab08:	69a3      	ldr	r3, [r4, #24]
 800ab0a:	b123      	cbz	r3, 800ab16 <HAL_PCD_SuspendCallback+0x1a>
 800ab0c:	4a02      	ldr	r2, [pc, #8]	; (800ab18 <HAL_PCD_SuspendCallback+0x1c>)
 800ab0e:	6913      	ldr	r3, [r2, #16]
 800ab10:	f043 0306 	orr.w	r3, r3, #6
 800ab14:	6113      	str	r3, [r2, #16]
 800ab16:	bd10      	pop	{r4, pc}
 800ab18:	e000ed00 	.word	0xe000ed00

0800ab1c <HAL_PCD_ResumeCallback>:
 800ab1c:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800ab20:	f7ff bb1c 	b.w	800a15c <USBD_LL_Resume>

0800ab24 <USBD_LL_Init>:
 800ab24:	b510      	push	{r4, lr}
 800ab26:	2408      	movs	r4, #8
 800ab28:	4b1e      	ldr	r3, [pc, #120]	; (800aba4 <USBD_LL_Init+0x80>)
 800ab2a:	2200      	movs	r2, #0
 800ab2c:	605c      	str	r4, [r3, #4]
 800ab2e:	4604      	mov	r4, r0
 800ab30:	2102      	movs	r1, #2
 800ab32:	619a      	str	r2, [r3, #24]
 800ab34:	621a      	str	r2, [r3, #32]
 800ab36:	4a1c      	ldr	r2, [pc, #112]	; (800aba8 <USBD_LL_Init+0x84>)
 800ab38:	f8c3 42e8 	str.w	r4, [r3, #744]	; 0x2e8
 800ab3c:	4618      	mov	r0, r3
 800ab3e:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800ab42:	6099      	str	r1, [r3, #8]
 800ab44:	6119      	str	r1, [r3, #16]
 800ab46:	601a      	str	r2, [r3, #0]
 800ab48:	f7fb ff36 	bl	80069b8 <HAL_PCD_Init>
 800ab4c:	bb30      	cbnz	r0, 800ab9c <USBD_LL_Init+0x78>
 800ab4e:	2200      	movs	r2, #0
 800ab50:	2318      	movs	r3, #24
 800ab52:	4611      	mov	r1, r2
 800ab54:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800ab58:	f7fc fe2e 	bl	80077b8 <HAL_PCDEx_PMAConfig>
 800ab5c:	2358      	movs	r3, #88	; 0x58
 800ab5e:	2200      	movs	r2, #0
 800ab60:	2180      	movs	r1, #128	; 0x80
 800ab62:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800ab66:	f7fc fe27 	bl	80077b8 <HAL_PCDEx_PMAConfig>
 800ab6a:	23c0      	movs	r3, #192	; 0xc0
 800ab6c:	2200      	movs	r2, #0
 800ab6e:	2181      	movs	r1, #129	; 0x81
 800ab70:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800ab74:	f7fc fe20 	bl	80077b8 <HAL_PCDEx_PMAConfig>
 800ab78:	f44f 7388 	mov.w	r3, #272	; 0x110
 800ab7c:	2200      	movs	r2, #0
 800ab7e:	2101      	movs	r1, #1
 800ab80:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800ab84:	f7fc fe18 	bl	80077b8 <HAL_PCDEx_PMAConfig>
 800ab88:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ab8c:	2200      	movs	r2, #0
 800ab8e:	2182      	movs	r1, #130	; 0x82
 800ab90:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800ab94:	f7fc fe10 	bl	80077b8 <HAL_PCDEx_PMAConfig>
 800ab98:	2000      	movs	r0, #0
 800ab9a:	bd10      	pop	{r4, pc}
 800ab9c:	f7fa f9f4 	bl	8004f88 <Error_Handler>
 800aba0:	e7d5      	b.n	800ab4e <USBD_LL_Init+0x2a>
 800aba2:	bf00      	nop
 800aba4:	20000fd8 	.word	0x20000fd8
 800aba8:	40005c00 	.word	0x40005c00

0800abac <USBD_LL_Start>:
 800abac:	b508      	push	{r3, lr}
 800abae:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800abb2:	f7fb ff63 	bl	8006a7c <HAL_PCD_Start>
 800abb6:	2803      	cmp	r0, #3
 800abb8:	bf96      	itet	ls
 800abba:	4b02      	ldrls	r3, [pc, #8]	; (800abc4 <USBD_LL_Start+0x18>)
 800abbc:	2002      	movhi	r0, #2
 800abbe:	5c18      	ldrbls	r0, [r3, r0]
 800abc0:	bd08      	pop	{r3, pc}
 800abc2:	bf00      	nop
 800abc4:	08010d38 	.word	0x08010d38

0800abc8 <USBD_LL_OpenEP>:
 800abc8:	4694      	mov	ip, r2
 800abca:	b508      	push	{r3, lr}
 800abcc:	461a      	mov	r2, r3
 800abce:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800abd2:	4663      	mov	r3, ip
 800abd4:	f7fc fcc6 	bl	8007564 <HAL_PCD_EP_Open>
 800abd8:	2803      	cmp	r0, #3
 800abda:	bf96      	itet	ls
 800abdc:	4b01      	ldrls	r3, [pc, #4]	; (800abe4 <USBD_LL_OpenEP+0x1c>)
 800abde:	2002      	movhi	r0, #2
 800abe0:	5c18      	ldrbls	r0, [r3, r0]
 800abe2:	bd08      	pop	{r3, pc}
 800abe4:	08010d38 	.word	0x08010d38

0800abe8 <USBD_LL_CloseEP>:
 800abe8:	b508      	push	{r3, lr}
 800abea:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800abee:	f7fc fcf7 	bl	80075e0 <HAL_PCD_EP_Close>
 800abf2:	2803      	cmp	r0, #3
 800abf4:	bf96      	itet	ls
 800abf6:	4b02      	ldrls	r3, [pc, #8]	; (800ac00 <USBD_LL_CloseEP+0x18>)
 800abf8:	2002      	movhi	r0, #2
 800abfa:	5c18      	ldrbls	r0, [r3, r0]
 800abfc:	bd08      	pop	{r3, pc}
 800abfe:	bf00      	nop
 800ac00:	08010d38 	.word	0x08010d38

0800ac04 <USBD_LL_StallEP>:
 800ac04:	b508      	push	{r3, lr}
 800ac06:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800ac0a:	f7fc fd61 	bl	80076d0 <HAL_PCD_EP_SetStall>
 800ac0e:	2803      	cmp	r0, #3
 800ac10:	bf96      	itet	ls
 800ac12:	4b02      	ldrls	r3, [pc, #8]	; (800ac1c <USBD_LL_StallEP+0x18>)
 800ac14:	2002      	movhi	r0, #2
 800ac16:	5c18      	ldrbls	r0, [r3, r0]
 800ac18:	bd08      	pop	{r3, pc}
 800ac1a:	bf00      	nop
 800ac1c:	08010d38 	.word	0x08010d38

0800ac20 <USBD_LL_ClearStallEP>:
 800ac20:	b508      	push	{r3, lr}
 800ac22:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800ac26:	f7fc fd8b 	bl	8007740 <HAL_PCD_EP_ClrStall>
 800ac2a:	2803      	cmp	r0, #3
 800ac2c:	bf96      	itet	ls
 800ac2e:	4b02      	ldrls	r3, [pc, #8]	; (800ac38 <USBD_LL_ClearStallEP+0x18>)
 800ac30:	2002      	movhi	r0, #2
 800ac32:	5c18      	ldrbls	r0, [r3, r0]
 800ac34:	bd08      	pop	{r3, pc}
 800ac36:	bf00      	nop
 800ac38:	08010d38 	.word	0x08010d38

0800ac3c <USBD_LL_IsStallEP>:
 800ac3c:	060a      	lsls	r2, r1, #24
 800ac3e:	f8d0 3298 	ldr.w	r3, [r0, #664]	; 0x298
 800ac42:	d406      	bmi.n	800ac52 <USBD_LL_IsStallEP+0x16>
 800ac44:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800ac48:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800ac4c:	f891 016a 	ldrb.w	r0, [r1, #362]	; 0x16a
 800ac50:	4770      	bx	lr
 800ac52:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800ac56:	3101      	adds	r1, #1
 800ac58:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800ac5c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800ac60:	7888      	ldrb	r0, [r1, #2]
 800ac62:	4770      	bx	lr

0800ac64 <USBD_LL_SetUSBAddress>:
 800ac64:	b508      	push	{r3, lr}
 800ac66:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800ac6a:	f7fc fc65 	bl	8007538 <HAL_PCD_SetAddress>
 800ac6e:	2803      	cmp	r0, #3
 800ac70:	bf96      	itet	ls
 800ac72:	4b02      	ldrls	r3, [pc, #8]	; (800ac7c <USBD_LL_SetUSBAddress+0x18>)
 800ac74:	2002      	movhi	r0, #2
 800ac76:	5c18      	ldrbls	r0, [r3, r0]
 800ac78:	bd08      	pop	{r3, pc}
 800ac7a:	bf00      	nop
 800ac7c:	08010d38 	.word	0x08010d38

0800ac80 <USBD_LL_Transmit>:
 800ac80:	b508      	push	{r3, lr}
 800ac82:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800ac86:	f7fc fcff 	bl	8007688 <HAL_PCD_EP_Transmit>
 800ac8a:	2803      	cmp	r0, #3
 800ac8c:	bf96      	itet	ls
 800ac8e:	4b02      	ldrls	r3, [pc, #8]	; (800ac98 <USBD_LL_Transmit+0x18>)
 800ac90:	2002      	movhi	r0, #2
 800ac92:	5c18      	ldrbls	r0, [r3, r0]
 800ac94:	bd08      	pop	{r3, pc}
 800ac96:	bf00      	nop
 800ac98:	08010d38 	.word	0x08010d38

0800ac9c <USBD_LL_PrepareReceive>:
 800ac9c:	b508      	push	{r3, lr}
 800ac9e:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800aca2:	f7fc fccf 	bl	8007644 <HAL_PCD_EP_Receive>
 800aca6:	2803      	cmp	r0, #3
 800aca8:	bf96      	itet	ls
 800acaa:	4b02      	ldrls	r3, [pc, #8]	; (800acb4 <USBD_LL_PrepareReceive+0x18>)
 800acac:	2002      	movhi	r0, #2
 800acae:	5c18      	ldrbls	r0, [r3, r0]
 800acb0:	bd08      	pop	{r3, pc}
 800acb2:	bf00      	nop
 800acb4:	08010d38 	.word	0x08010d38

0800acb8 <USBD_LL_GetRxDataSize>:
 800acb8:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800acbc:	f7fc bcda 	b.w	8007674 <HAL_PCD_EP_GetRxCount>

0800acc0 <USBD_static_malloc>:
 800acc0:	4800      	ldr	r0, [pc, #0]	; (800acc4 <USBD_static_malloc+0x4>)
 800acc2:	4770      	bx	lr
 800acc4:	200012c4 	.word	0x200012c4

0800acc8 <USBD_static_free>:
 800acc8:	4770      	bx	lr
 800acca:	bf00      	nop
 800accc:	0000      	movs	r0, r0
	...

0800acd0 <floor>:
 800acd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800acd4:	f3c1 580a 	ubfx	r8, r1, #20, #11
 800acd8:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 800acdc:	2e13      	cmp	r6, #19
 800acde:	4602      	mov	r2, r0
 800ace0:	460b      	mov	r3, r1
 800ace2:	4607      	mov	r7, r0
 800ace4:	460c      	mov	r4, r1
 800ace6:	4605      	mov	r5, r0
 800ace8:	dc33      	bgt.n	800ad52 <floor+0x82>
 800acea:	2e00      	cmp	r6, #0
 800acec:	da14      	bge.n	800ad18 <floor+0x48>
 800acee:	a334      	add	r3, pc, #208	; (adr r3, 800adc0 <floor+0xf0>)
 800acf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800acf4:	f7f5 fa5c 	bl	80001b0 <__adddf3>
 800acf8:	2200      	movs	r2, #0
 800acfa:	2300      	movs	r3, #0
 800acfc:	f7f5 fe9e 	bl	8000a3c <__aeabi_dcmpgt>
 800ad00:	b138      	cbz	r0, 800ad12 <floor+0x42>
 800ad02:	2c00      	cmp	r4, #0
 800ad04:	da58      	bge.n	800adb8 <floor+0xe8>
 800ad06:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800ad0a:	431d      	orrs	r5, r3
 800ad0c:	d001      	beq.n	800ad12 <floor+0x42>
 800ad0e:	2500      	movs	r5, #0
 800ad10:	4c2d      	ldr	r4, [pc, #180]	; (800adc8 <floor+0xf8>)
 800ad12:	4623      	mov	r3, r4
 800ad14:	462f      	mov	r7, r5
 800ad16:	e025      	b.n	800ad64 <floor+0x94>
 800ad18:	4a2c      	ldr	r2, [pc, #176]	; (800adcc <floor+0xfc>)
 800ad1a:	fa42 f806 	asr.w	r8, r2, r6
 800ad1e:	ea01 0208 	and.w	r2, r1, r8
 800ad22:	4302      	orrs	r2, r0
 800ad24:	d01e      	beq.n	800ad64 <floor+0x94>
 800ad26:	a326      	add	r3, pc, #152	; (adr r3, 800adc0 <floor+0xf0>)
 800ad28:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad2c:	f7f5 fa40 	bl	80001b0 <__adddf3>
 800ad30:	2200      	movs	r2, #0
 800ad32:	2300      	movs	r3, #0
 800ad34:	f7f5 fe82 	bl	8000a3c <__aeabi_dcmpgt>
 800ad38:	2800      	cmp	r0, #0
 800ad3a:	d0ea      	beq.n	800ad12 <floor+0x42>
 800ad3c:	2c00      	cmp	r4, #0
 800ad3e:	bfbe      	ittt	lt
 800ad40:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800ad44:	fa43 f606 	asrlt.w	r6, r3, r6
 800ad48:	19a4      	addlt	r4, r4, r6
 800ad4a:	2500      	movs	r5, #0
 800ad4c:	ea24 0408 	bic.w	r4, r4, r8
 800ad50:	e7df      	b.n	800ad12 <floor+0x42>
 800ad52:	2e33      	cmp	r6, #51	; 0x33
 800ad54:	dd0a      	ble.n	800ad6c <floor+0x9c>
 800ad56:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800ad5a:	d103      	bne.n	800ad64 <floor+0x94>
 800ad5c:	f7f5 fa28 	bl	80001b0 <__adddf3>
 800ad60:	4607      	mov	r7, r0
 800ad62:	460b      	mov	r3, r1
 800ad64:	4638      	mov	r0, r7
 800ad66:	4619      	mov	r1, r3
 800ad68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ad6c:	f04f 32ff 	mov.w	r2, #4294967295
 800ad70:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 800ad74:	fa22 f808 	lsr.w	r8, r2, r8
 800ad78:	ea18 0f00 	tst.w	r8, r0
 800ad7c:	d0f2      	beq.n	800ad64 <floor+0x94>
 800ad7e:	a310      	add	r3, pc, #64	; (adr r3, 800adc0 <floor+0xf0>)
 800ad80:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad84:	f7f5 fa14 	bl	80001b0 <__adddf3>
 800ad88:	2200      	movs	r2, #0
 800ad8a:	2300      	movs	r3, #0
 800ad8c:	f7f5 fe56 	bl	8000a3c <__aeabi_dcmpgt>
 800ad90:	2800      	cmp	r0, #0
 800ad92:	d0be      	beq.n	800ad12 <floor+0x42>
 800ad94:	2c00      	cmp	r4, #0
 800ad96:	da02      	bge.n	800ad9e <floor+0xce>
 800ad98:	2e14      	cmp	r6, #20
 800ad9a:	d103      	bne.n	800ada4 <floor+0xd4>
 800ad9c:	3401      	adds	r4, #1
 800ad9e:	ea25 0508 	bic.w	r5, r5, r8
 800ada2:	e7b6      	b.n	800ad12 <floor+0x42>
 800ada4:	2301      	movs	r3, #1
 800ada6:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800adaa:	fa03 f606 	lsl.w	r6, r3, r6
 800adae:	4435      	add	r5, r6
 800adb0:	42bd      	cmp	r5, r7
 800adb2:	bf38      	it	cc
 800adb4:	18e4      	addcc	r4, r4, r3
 800adb6:	e7f2      	b.n	800ad9e <floor+0xce>
 800adb8:	2500      	movs	r5, #0
 800adba:	462c      	mov	r4, r5
 800adbc:	e7a9      	b.n	800ad12 <floor+0x42>
 800adbe:	bf00      	nop
 800adc0:	8800759c 	.word	0x8800759c
 800adc4:	7e37e43c 	.word	0x7e37e43c
 800adc8:	bff00000 	.word	0xbff00000
 800adcc:	000fffff 	.word	0x000fffff

0800add0 <round>:
 800add0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800add2:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800add6:	f2a7 34ff 	subw	r4, r7, #1023	; 0x3ff
 800adda:	2c13      	cmp	r4, #19
 800addc:	4602      	mov	r2, r0
 800adde:	460b      	mov	r3, r1
 800ade0:	4606      	mov	r6, r0
 800ade2:	460d      	mov	r5, r1
 800ade4:	dc19      	bgt.n	800ae1a <round+0x4a>
 800ade6:	2c00      	cmp	r4, #0
 800ade8:	da09      	bge.n	800adfe <round+0x2e>
 800adea:	3401      	adds	r4, #1
 800adec:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 800adf0:	d103      	bne.n	800adfa <round+0x2a>
 800adf2:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800adf6:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800adfa:	2200      	movs	r2, #0
 800adfc:	e02a      	b.n	800ae54 <round+0x84>
 800adfe:	4917      	ldr	r1, [pc, #92]	; (800ae5c <round+0x8c>)
 800ae00:	4121      	asrs	r1, r4
 800ae02:	ea03 0001 	and.w	r0, r3, r1
 800ae06:	4302      	orrs	r2, r0
 800ae08:	d010      	beq.n	800ae2c <round+0x5c>
 800ae0a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800ae0e:	fa42 f404 	asr.w	r4, r2, r4
 800ae12:	4423      	add	r3, r4
 800ae14:	ea23 0301 	bic.w	r3, r3, r1
 800ae18:	e7ef      	b.n	800adfa <round+0x2a>
 800ae1a:	2c33      	cmp	r4, #51	; 0x33
 800ae1c:	dd09      	ble.n	800ae32 <round+0x62>
 800ae1e:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 800ae22:	d103      	bne.n	800ae2c <round+0x5c>
 800ae24:	f7f5 f9c4 	bl	80001b0 <__adddf3>
 800ae28:	4606      	mov	r6, r0
 800ae2a:	460d      	mov	r5, r1
 800ae2c:	4630      	mov	r0, r6
 800ae2e:	4629      	mov	r1, r5
 800ae30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ae32:	f04f 31ff 	mov.w	r1, #4294967295
 800ae36:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800ae3a:	40f9      	lsrs	r1, r7
 800ae3c:	4208      	tst	r0, r1
 800ae3e:	d0f5      	beq.n	800ae2c <round+0x5c>
 800ae40:	2001      	movs	r0, #1
 800ae42:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 800ae46:	fa00 f404 	lsl.w	r4, r0, r4
 800ae4a:	1912      	adds	r2, r2, r4
 800ae4c:	bf28      	it	cs
 800ae4e:	181b      	addcs	r3, r3, r0
 800ae50:	ea22 0201 	bic.w	r2, r2, r1
 800ae54:	4619      	mov	r1, r3
 800ae56:	4610      	mov	r0, r2
 800ae58:	e7e6      	b.n	800ae28 <round+0x58>
 800ae5a:	bf00      	nop
 800ae5c:	000fffff 	.word	0x000fffff

0800ae60 <__errno>:
 800ae60:	4b01      	ldr	r3, [pc, #4]	; (800ae68 <__errno+0x8>)
 800ae62:	6818      	ldr	r0, [r3, #0]
 800ae64:	4770      	bx	lr
 800ae66:	bf00      	nop
 800ae68:	200001a4 	.word	0x200001a4

0800ae6c <__libc_init_array>:
 800ae6c:	b570      	push	{r4, r5, r6, lr}
 800ae6e:	2600      	movs	r6, #0
 800ae70:	4d0c      	ldr	r5, [pc, #48]	; (800aea4 <__libc_init_array+0x38>)
 800ae72:	4c0d      	ldr	r4, [pc, #52]	; (800aea8 <__libc_init_array+0x3c>)
 800ae74:	1b64      	subs	r4, r4, r5
 800ae76:	10a4      	asrs	r4, r4, #2
 800ae78:	42a6      	cmp	r6, r4
 800ae7a:	d109      	bne.n	800ae90 <__libc_init_array+0x24>
 800ae7c:	f005 f886 	bl	800ff8c <_init>
 800ae80:	2600      	movs	r6, #0
 800ae82:	4d0a      	ldr	r5, [pc, #40]	; (800aeac <__libc_init_array+0x40>)
 800ae84:	4c0a      	ldr	r4, [pc, #40]	; (800aeb0 <__libc_init_array+0x44>)
 800ae86:	1b64      	subs	r4, r4, r5
 800ae88:	10a4      	asrs	r4, r4, #2
 800ae8a:	42a6      	cmp	r6, r4
 800ae8c:	d105      	bne.n	800ae9a <__libc_init_array+0x2e>
 800ae8e:	bd70      	pop	{r4, r5, r6, pc}
 800ae90:	f855 3b04 	ldr.w	r3, [r5], #4
 800ae94:	4798      	blx	r3
 800ae96:	3601      	adds	r6, #1
 800ae98:	e7ee      	b.n	800ae78 <__libc_init_array+0xc>
 800ae9a:	f855 3b04 	ldr.w	r3, [r5], #4
 800ae9e:	4798      	blx	r3
 800aea0:	3601      	adds	r6, #1
 800aea2:	e7f2      	b.n	800ae8a <__libc_init_array+0x1e>
 800aea4:	080111fc 	.word	0x080111fc
 800aea8:	080111fc 	.word	0x080111fc
 800aeac:	080111fc 	.word	0x080111fc
 800aeb0:	08011200 	.word	0x08011200

0800aeb4 <memcpy>:
 800aeb4:	440a      	add	r2, r1
 800aeb6:	4291      	cmp	r1, r2
 800aeb8:	f100 33ff 	add.w	r3, r0, #4294967295
 800aebc:	d100      	bne.n	800aec0 <memcpy+0xc>
 800aebe:	4770      	bx	lr
 800aec0:	b510      	push	{r4, lr}
 800aec2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800aec6:	4291      	cmp	r1, r2
 800aec8:	f803 4f01 	strb.w	r4, [r3, #1]!
 800aecc:	d1f9      	bne.n	800aec2 <memcpy+0xe>
 800aece:	bd10      	pop	{r4, pc}

0800aed0 <memset>:
 800aed0:	4603      	mov	r3, r0
 800aed2:	4402      	add	r2, r0
 800aed4:	4293      	cmp	r3, r2
 800aed6:	d100      	bne.n	800aeda <memset+0xa>
 800aed8:	4770      	bx	lr
 800aeda:	f803 1b01 	strb.w	r1, [r3], #1
 800aede:	e7f9      	b.n	800aed4 <memset+0x4>

0800aee0 <__cvt>:
 800aee0:	2b00      	cmp	r3, #0
 800aee2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aee6:	461f      	mov	r7, r3
 800aee8:	bfbb      	ittet	lt
 800aeea:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800aeee:	461f      	movlt	r7, r3
 800aef0:	2300      	movge	r3, #0
 800aef2:	232d      	movlt	r3, #45	; 0x2d
 800aef4:	b088      	sub	sp, #32
 800aef6:	4614      	mov	r4, r2
 800aef8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800aefa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800aefc:	7013      	strb	r3, [r2, #0]
 800aefe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800af00:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800af04:	f023 0820 	bic.w	r8, r3, #32
 800af08:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800af0c:	d005      	beq.n	800af1a <__cvt+0x3a>
 800af0e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800af12:	d100      	bne.n	800af16 <__cvt+0x36>
 800af14:	3501      	adds	r5, #1
 800af16:	2302      	movs	r3, #2
 800af18:	e000      	b.n	800af1c <__cvt+0x3c>
 800af1a:	2303      	movs	r3, #3
 800af1c:	aa07      	add	r2, sp, #28
 800af1e:	9204      	str	r2, [sp, #16]
 800af20:	aa06      	add	r2, sp, #24
 800af22:	e9cd a202 	strd	sl, r2, [sp, #8]
 800af26:	e9cd 3500 	strd	r3, r5, [sp]
 800af2a:	4622      	mov	r2, r4
 800af2c:	463b      	mov	r3, r7
 800af2e:	f001 fe17 	bl	800cb60 <_dtoa_r>
 800af32:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800af36:	4606      	mov	r6, r0
 800af38:	d102      	bne.n	800af40 <__cvt+0x60>
 800af3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800af3c:	07db      	lsls	r3, r3, #31
 800af3e:	d522      	bpl.n	800af86 <__cvt+0xa6>
 800af40:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800af44:	eb06 0905 	add.w	r9, r6, r5
 800af48:	d110      	bne.n	800af6c <__cvt+0x8c>
 800af4a:	7833      	ldrb	r3, [r6, #0]
 800af4c:	2b30      	cmp	r3, #48	; 0x30
 800af4e:	d10a      	bne.n	800af66 <__cvt+0x86>
 800af50:	2200      	movs	r2, #0
 800af52:	2300      	movs	r3, #0
 800af54:	4620      	mov	r0, r4
 800af56:	4639      	mov	r1, r7
 800af58:	f7f5 fd48 	bl	80009ec <__aeabi_dcmpeq>
 800af5c:	b918      	cbnz	r0, 800af66 <__cvt+0x86>
 800af5e:	f1c5 0501 	rsb	r5, r5, #1
 800af62:	f8ca 5000 	str.w	r5, [sl]
 800af66:	f8da 3000 	ldr.w	r3, [sl]
 800af6a:	4499      	add	r9, r3
 800af6c:	2200      	movs	r2, #0
 800af6e:	2300      	movs	r3, #0
 800af70:	4620      	mov	r0, r4
 800af72:	4639      	mov	r1, r7
 800af74:	f7f5 fd3a 	bl	80009ec <__aeabi_dcmpeq>
 800af78:	b108      	cbz	r0, 800af7e <__cvt+0x9e>
 800af7a:	f8cd 901c 	str.w	r9, [sp, #28]
 800af7e:	2230      	movs	r2, #48	; 0x30
 800af80:	9b07      	ldr	r3, [sp, #28]
 800af82:	454b      	cmp	r3, r9
 800af84:	d307      	bcc.n	800af96 <__cvt+0xb6>
 800af86:	4630      	mov	r0, r6
 800af88:	9b07      	ldr	r3, [sp, #28]
 800af8a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800af8c:	1b9b      	subs	r3, r3, r6
 800af8e:	6013      	str	r3, [r2, #0]
 800af90:	b008      	add	sp, #32
 800af92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800af96:	1c59      	adds	r1, r3, #1
 800af98:	9107      	str	r1, [sp, #28]
 800af9a:	701a      	strb	r2, [r3, #0]
 800af9c:	e7f0      	b.n	800af80 <__cvt+0xa0>

0800af9e <__exponent>:
 800af9e:	4603      	mov	r3, r0
 800afa0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800afa2:	2900      	cmp	r1, #0
 800afa4:	f803 2b02 	strb.w	r2, [r3], #2
 800afa8:	bfb6      	itet	lt
 800afaa:	222d      	movlt	r2, #45	; 0x2d
 800afac:	222b      	movge	r2, #43	; 0x2b
 800afae:	4249      	neglt	r1, r1
 800afb0:	2909      	cmp	r1, #9
 800afb2:	7042      	strb	r2, [r0, #1]
 800afb4:	dd2b      	ble.n	800b00e <__exponent+0x70>
 800afb6:	f10d 0407 	add.w	r4, sp, #7
 800afba:	46a4      	mov	ip, r4
 800afbc:	270a      	movs	r7, #10
 800afbe:	fb91 f6f7 	sdiv	r6, r1, r7
 800afc2:	460a      	mov	r2, r1
 800afc4:	46a6      	mov	lr, r4
 800afc6:	fb07 1516 	mls	r5, r7, r6, r1
 800afca:	2a63      	cmp	r2, #99	; 0x63
 800afcc:	f105 0530 	add.w	r5, r5, #48	; 0x30
 800afd0:	4631      	mov	r1, r6
 800afd2:	f104 34ff 	add.w	r4, r4, #4294967295
 800afd6:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800afda:	dcf0      	bgt.n	800afbe <__exponent+0x20>
 800afdc:	3130      	adds	r1, #48	; 0x30
 800afde:	f1ae 0502 	sub.w	r5, lr, #2
 800afe2:	f804 1c01 	strb.w	r1, [r4, #-1]
 800afe6:	4629      	mov	r1, r5
 800afe8:	1c44      	adds	r4, r0, #1
 800afea:	4561      	cmp	r1, ip
 800afec:	d30a      	bcc.n	800b004 <__exponent+0x66>
 800afee:	f10d 0209 	add.w	r2, sp, #9
 800aff2:	eba2 020e 	sub.w	r2, r2, lr
 800aff6:	4565      	cmp	r5, ip
 800aff8:	bf88      	it	hi
 800affa:	2200      	movhi	r2, #0
 800affc:	4413      	add	r3, r2
 800affe:	1a18      	subs	r0, r3, r0
 800b000:	b003      	add	sp, #12
 800b002:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b004:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b008:	f804 2f01 	strb.w	r2, [r4, #1]!
 800b00c:	e7ed      	b.n	800afea <__exponent+0x4c>
 800b00e:	2330      	movs	r3, #48	; 0x30
 800b010:	3130      	adds	r1, #48	; 0x30
 800b012:	7083      	strb	r3, [r0, #2]
 800b014:	70c1      	strb	r1, [r0, #3]
 800b016:	1d03      	adds	r3, r0, #4
 800b018:	e7f1      	b.n	800affe <__exponent+0x60>
	...

0800b01c <_printf_float>:
 800b01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b020:	b091      	sub	sp, #68	; 0x44
 800b022:	460c      	mov	r4, r1
 800b024:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b028:	4616      	mov	r6, r2
 800b02a:	461f      	mov	r7, r3
 800b02c:	4605      	mov	r5, r0
 800b02e:	f002 feeb 	bl	800de08 <_localeconv_r>
 800b032:	6803      	ldr	r3, [r0, #0]
 800b034:	4618      	mov	r0, r3
 800b036:	9309      	str	r3, [sp, #36]	; 0x24
 800b038:	f7f5 f8ac 	bl	8000194 <strlen>
 800b03c:	2300      	movs	r3, #0
 800b03e:	930e      	str	r3, [sp, #56]	; 0x38
 800b040:	f8d8 3000 	ldr.w	r3, [r8]
 800b044:	900a      	str	r0, [sp, #40]	; 0x28
 800b046:	3307      	adds	r3, #7
 800b048:	f023 0307 	bic.w	r3, r3, #7
 800b04c:	f103 0208 	add.w	r2, r3, #8
 800b050:	f894 9018 	ldrb.w	r9, [r4, #24]
 800b054:	f8d4 b000 	ldr.w	fp, [r4]
 800b058:	f8c8 2000 	str.w	r2, [r8]
 800b05c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b060:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800b064:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800b068:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800b06c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b06e:	f04f 32ff 	mov.w	r2, #4294967295
 800b072:	4640      	mov	r0, r8
 800b074:	4b9c      	ldr	r3, [pc, #624]	; (800b2e8 <_printf_float+0x2cc>)
 800b076:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b078:	f7f5 fcea 	bl	8000a50 <__aeabi_dcmpun>
 800b07c:	bb70      	cbnz	r0, 800b0dc <_printf_float+0xc0>
 800b07e:	f04f 32ff 	mov.w	r2, #4294967295
 800b082:	4640      	mov	r0, r8
 800b084:	4b98      	ldr	r3, [pc, #608]	; (800b2e8 <_printf_float+0x2cc>)
 800b086:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b088:	f7f5 fcc4 	bl	8000a14 <__aeabi_dcmple>
 800b08c:	bb30      	cbnz	r0, 800b0dc <_printf_float+0xc0>
 800b08e:	2200      	movs	r2, #0
 800b090:	2300      	movs	r3, #0
 800b092:	4640      	mov	r0, r8
 800b094:	4651      	mov	r1, sl
 800b096:	f7f5 fcb3 	bl	8000a00 <__aeabi_dcmplt>
 800b09a:	b110      	cbz	r0, 800b0a2 <_printf_float+0x86>
 800b09c:	232d      	movs	r3, #45	; 0x2d
 800b09e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b0a2:	4b92      	ldr	r3, [pc, #584]	; (800b2ec <_printf_float+0x2d0>)
 800b0a4:	4892      	ldr	r0, [pc, #584]	; (800b2f0 <_printf_float+0x2d4>)
 800b0a6:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800b0aa:	bf94      	ite	ls
 800b0ac:	4698      	movls	r8, r3
 800b0ae:	4680      	movhi	r8, r0
 800b0b0:	2303      	movs	r3, #3
 800b0b2:	f04f 0a00 	mov.w	sl, #0
 800b0b6:	6123      	str	r3, [r4, #16]
 800b0b8:	f02b 0304 	bic.w	r3, fp, #4
 800b0bc:	6023      	str	r3, [r4, #0]
 800b0be:	4633      	mov	r3, r6
 800b0c0:	4621      	mov	r1, r4
 800b0c2:	4628      	mov	r0, r5
 800b0c4:	9700      	str	r7, [sp, #0]
 800b0c6:	aa0f      	add	r2, sp, #60	; 0x3c
 800b0c8:	f000 f9d4 	bl	800b474 <_printf_common>
 800b0cc:	3001      	adds	r0, #1
 800b0ce:	f040 8090 	bne.w	800b1f2 <_printf_float+0x1d6>
 800b0d2:	f04f 30ff 	mov.w	r0, #4294967295
 800b0d6:	b011      	add	sp, #68	; 0x44
 800b0d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0dc:	4642      	mov	r2, r8
 800b0de:	4653      	mov	r3, sl
 800b0e0:	4640      	mov	r0, r8
 800b0e2:	4651      	mov	r1, sl
 800b0e4:	f7f5 fcb4 	bl	8000a50 <__aeabi_dcmpun>
 800b0e8:	b148      	cbz	r0, 800b0fe <_printf_float+0xe2>
 800b0ea:	f1ba 0f00 	cmp.w	sl, #0
 800b0ee:	bfb8      	it	lt
 800b0f0:	232d      	movlt	r3, #45	; 0x2d
 800b0f2:	4880      	ldr	r0, [pc, #512]	; (800b2f4 <_printf_float+0x2d8>)
 800b0f4:	bfb8      	it	lt
 800b0f6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800b0fa:	4b7f      	ldr	r3, [pc, #508]	; (800b2f8 <_printf_float+0x2dc>)
 800b0fc:	e7d3      	b.n	800b0a6 <_printf_float+0x8a>
 800b0fe:	6863      	ldr	r3, [r4, #4]
 800b100:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800b104:	1c5a      	adds	r2, r3, #1
 800b106:	d142      	bne.n	800b18e <_printf_float+0x172>
 800b108:	2306      	movs	r3, #6
 800b10a:	6063      	str	r3, [r4, #4]
 800b10c:	2200      	movs	r2, #0
 800b10e:	9206      	str	r2, [sp, #24]
 800b110:	aa0e      	add	r2, sp, #56	; 0x38
 800b112:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800b116:	aa0d      	add	r2, sp, #52	; 0x34
 800b118:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800b11c:	9203      	str	r2, [sp, #12]
 800b11e:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800b122:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800b126:	6023      	str	r3, [r4, #0]
 800b128:	6863      	ldr	r3, [r4, #4]
 800b12a:	4642      	mov	r2, r8
 800b12c:	9300      	str	r3, [sp, #0]
 800b12e:	4628      	mov	r0, r5
 800b130:	4653      	mov	r3, sl
 800b132:	910b      	str	r1, [sp, #44]	; 0x2c
 800b134:	f7ff fed4 	bl	800aee0 <__cvt>
 800b138:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b13a:	4680      	mov	r8, r0
 800b13c:	2947      	cmp	r1, #71	; 0x47
 800b13e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b140:	d108      	bne.n	800b154 <_printf_float+0x138>
 800b142:	1cc8      	adds	r0, r1, #3
 800b144:	db02      	blt.n	800b14c <_printf_float+0x130>
 800b146:	6863      	ldr	r3, [r4, #4]
 800b148:	4299      	cmp	r1, r3
 800b14a:	dd40      	ble.n	800b1ce <_printf_float+0x1b2>
 800b14c:	f1a9 0902 	sub.w	r9, r9, #2
 800b150:	fa5f f989 	uxtb.w	r9, r9
 800b154:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800b158:	d81f      	bhi.n	800b19a <_printf_float+0x17e>
 800b15a:	464a      	mov	r2, r9
 800b15c:	3901      	subs	r1, #1
 800b15e:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800b162:	910d      	str	r1, [sp, #52]	; 0x34
 800b164:	f7ff ff1b 	bl	800af9e <__exponent>
 800b168:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b16a:	4682      	mov	sl, r0
 800b16c:	1813      	adds	r3, r2, r0
 800b16e:	2a01      	cmp	r2, #1
 800b170:	6123      	str	r3, [r4, #16]
 800b172:	dc02      	bgt.n	800b17a <_printf_float+0x15e>
 800b174:	6822      	ldr	r2, [r4, #0]
 800b176:	07d2      	lsls	r2, r2, #31
 800b178:	d501      	bpl.n	800b17e <_printf_float+0x162>
 800b17a:	3301      	adds	r3, #1
 800b17c:	6123      	str	r3, [r4, #16]
 800b17e:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800b182:	2b00      	cmp	r3, #0
 800b184:	d09b      	beq.n	800b0be <_printf_float+0xa2>
 800b186:	232d      	movs	r3, #45	; 0x2d
 800b188:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b18c:	e797      	b.n	800b0be <_printf_float+0xa2>
 800b18e:	2947      	cmp	r1, #71	; 0x47
 800b190:	d1bc      	bne.n	800b10c <_printf_float+0xf0>
 800b192:	2b00      	cmp	r3, #0
 800b194:	d1ba      	bne.n	800b10c <_printf_float+0xf0>
 800b196:	2301      	movs	r3, #1
 800b198:	e7b7      	b.n	800b10a <_printf_float+0xee>
 800b19a:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800b19e:	d118      	bne.n	800b1d2 <_printf_float+0x1b6>
 800b1a0:	2900      	cmp	r1, #0
 800b1a2:	6863      	ldr	r3, [r4, #4]
 800b1a4:	dd0b      	ble.n	800b1be <_printf_float+0x1a2>
 800b1a6:	6121      	str	r1, [r4, #16]
 800b1a8:	b913      	cbnz	r3, 800b1b0 <_printf_float+0x194>
 800b1aa:	6822      	ldr	r2, [r4, #0]
 800b1ac:	07d0      	lsls	r0, r2, #31
 800b1ae:	d502      	bpl.n	800b1b6 <_printf_float+0x19a>
 800b1b0:	3301      	adds	r3, #1
 800b1b2:	440b      	add	r3, r1
 800b1b4:	6123      	str	r3, [r4, #16]
 800b1b6:	f04f 0a00 	mov.w	sl, #0
 800b1ba:	65a1      	str	r1, [r4, #88]	; 0x58
 800b1bc:	e7df      	b.n	800b17e <_printf_float+0x162>
 800b1be:	b913      	cbnz	r3, 800b1c6 <_printf_float+0x1aa>
 800b1c0:	6822      	ldr	r2, [r4, #0]
 800b1c2:	07d2      	lsls	r2, r2, #31
 800b1c4:	d501      	bpl.n	800b1ca <_printf_float+0x1ae>
 800b1c6:	3302      	adds	r3, #2
 800b1c8:	e7f4      	b.n	800b1b4 <_printf_float+0x198>
 800b1ca:	2301      	movs	r3, #1
 800b1cc:	e7f2      	b.n	800b1b4 <_printf_float+0x198>
 800b1ce:	f04f 0967 	mov.w	r9, #103	; 0x67
 800b1d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b1d4:	4299      	cmp	r1, r3
 800b1d6:	db05      	blt.n	800b1e4 <_printf_float+0x1c8>
 800b1d8:	6823      	ldr	r3, [r4, #0]
 800b1da:	6121      	str	r1, [r4, #16]
 800b1dc:	07d8      	lsls	r0, r3, #31
 800b1de:	d5ea      	bpl.n	800b1b6 <_printf_float+0x19a>
 800b1e0:	1c4b      	adds	r3, r1, #1
 800b1e2:	e7e7      	b.n	800b1b4 <_printf_float+0x198>
 800b1e4:	2900      	cmp	r1, #0
 800b1e6:	bfcc      	ite	gt
 800b1e8:	2201      	movgt	r2, #1
 800b1ea:	f1c1 0202 	rsble	r2, r1, #2
 800b1ee:	4413      	add	r3, r2
 800b1f0:	e7e0      	b.n	800b1b4 <_printf_float+0x198>
 800b1f2:	6823      	ldr	r3, [r4, #0]
 800b1f4:	055a      	lsls	r2, r3, #21
 800b1f6:	d407      	bmi.n	800b208 <_printf_float+0x1ec>
 800b1f8:	6923      	ldr	r3, [r4, #16]
 800b1fa:	4642      	mov	r2, r8
 800b1fc:	4631      	mov	r1, r6
 800b1fe:	4628      	mov	r0, r5
 800b200:	47b8      	blx	r7
 800b202:	3001      	adds	r0, #1
 800b204:	d12b      	bne.n	800b25e <_printf_float+0x242>
 800b206:	e764      	b.n	800b0d2 <_printf_float+0xb6>
 800b208:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800b20c:	f240 80dd 	bls.w	800b3ca <_printf_float+0x3ae>
 800b210:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b214:	2200      	movs	r2, #0
 800b216:	2300      	movs	r3, #0
 800b218:	f7f5 fbe8 	bl	80009ec <__aeabi_dcmpeq>
 800b21c:	2800      	cmp	r0, #0
 800b21e:	d033      	beq.n	800b288 <_printf_float+0x26c>
 800b220:	2301      	movs	r3, #1
 800b222:	4631      	mov	r1, r6
 800b224:	4628      	mov	r0, r5
 800b226:	4a35      	ldr	r2, [pc, #212]	; (800b2fc <_printf_float+0x2e0>)
 800b228:	47b8      	blx	r7
 800b22a:	3001      	adds	r0, #1
 800b22c:	f43f af51 	beq.w	800b0d2 <_printf_float+0xb6>
 800b230:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b234:	429a      	cmp	r2, r3
 800b236:	db02      	blt.n	800b23e <_printf_float+0x222>
 800b238:	6823      	ldr	r3, [r4, #0]
 800b23a:	07d8      	lsls	r0, r3, #31
 800b23c:	d50f      	bpl.n	800b25e <_printf_float+0x242>
 800b23e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b242:	4631      	mov	r1, r6
 800b244:	4628      	mov	r0, r5
 800b246:	47b8      	blx	r7
 800b248:	3001      	adds	r0, #1
 800b24a:	f43f af42 	beq.w	800b0d2 <_printf_float+0xb6>
 800b24e:	f04f 0800 	mov.w	r8, #0
 800b252:	f104 091a 	add.w	r9, r4, #26
 800b256:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b258:	3b01      	subs	r3, #1
 800b25a:	4543      	cmp	r3, r8
 800b25c:	dc09      	bgt.n	800b272 <_printf_float+0x256>
 800b25e:	6823      	ldr	r3, [r4, #0]
 800b260:	079b      	lsls	r3, r3, #30
 800b262:	f100 8102 	bmi.w	800b46a <_printf_float+0x44e>
 800b266:	68e0      	ldr	r0, [r4, #12]
 800b268:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b26a:	4298      	cmp	r0, r3
 800b26c:	bfb8      	it	lt
 800b26e:	4618      	movlt	r0, r3
 800b270:	e731      	b.n	800b0d6 <_printf_float+0xba>
 800b272:	2301      	movs	r3, #1
 800b274:	464a      	mov	r2, r9
 800b276:	4631      	mov	r1, r6
 800b278:	4628      	mov	r0, r5
 800b27a:	47b8      	blx	r7
 800b27c:	3001      	adds	r0, #1
 800b27e:	f43f af28 	beq.w	800b0d2 <_printf_float+0xb6>
 800b282:	f108 0801 	add.w	r8, r8, #1
 800b286:	e7e6      	b.n	800b256 <_printf_float+0x23a>
 800b288:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	dc38      	bgt.n	800b300 <_printf_float+0x2e4>
 800b28e:	2301      	movs	r3, #1
 800b290:	4631      	mov	r1, r6
 800b292:	4628      	mov	r0, r5
 800b294:	4a19      	ldr	r2, [pc, #100]	; (800b2fc <_printf_float+0x2e0>)
 800b296:	47b8      	blx	r7
 800b298:	3001      	adds	r0, #1
 800b29a:	f43f af1a 	beq.w	800b0d2 <_printf_float+0xb6>
 800b29e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b2a2:	4313      	orrs	r3, r2
 800b2a4:	d102      	bne.n	800b2ac <_printf_float+0x290>
 800b2a6:	6823      	ldr	r3, [r4, #0]
 800b2a8:	07d9      	lsls	r1, r3, #31
 800b2aa:	d5d8      	bpl.n	800b25e <_printf_float+0x242>
 800b2ac:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b2b0:	4631      	mov	r1, r6
 800b2b2:	4628      	mov	r0, r5
 800b2b4:	47b8      	blx	r7
 800b2b6:	3001      	adds	r0, #1
 800b2b8:	f43f af0b 	beq.w	800b0d2 <_printf_float+0xb6>
 800b2bc:	f04f 0900 	mov.w	r9, #0
 800b2c0:	f104 0a1a 	add.w	sl, r4, #26
 800b2c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b2c6:	425b      	negs	r3, r3
 800b2c8:	454b      	cmp	r3, r9
 800b2ca:	dc01      	bgt.n	800b2d0 <_printf_float+0x2b4>
 800b2cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b2ce:	e794      	b.n	800b1fa <_printf_float+0x1de>
 800b2d0:	2301      	movs	r3, #1
 800b2d2:	4652      	mov	r2, sl
 800b2d4:	4631      	mov	r1, r6
 800b2d6:	4628      	mov	r0, r5
 800b2d8:	47b8      	blx	r7
 800b2da:	3001      	adds	r0, #1
 800b2dc:	f43f aef9 	beq.w	800b0d2 <_printf_float+0xb6>
 800b2e0:	f109 0901 	add.w	r9, r9, #1
 800b2e4:	e7ee      	b.n	800b2c4 <_printf_float+0x2a8>
 800b2e6:	bf00      	nop
 800b2e8:	7fefffff 	.word	0x7fefffff
 800b2ec:	08010d40 	.word	0x08010d40
 800b2f0:	08010d44 	.word	0x08010d44
 800b2f4:	08010d4c 	.word	0x08010d4c
 800b2f8:	08010d48 	.word	0x08010d48
 800b2fc:	08011141 	.word	0x08011141
 800b300:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b302:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b304:	429a      	cmp	r2, r3
 800b306:	bfa8      	it	ge
 800b308:	461a      	movge	r2, r3
 800b30a:	2a00      	cmp	r2, #0
 800b30c:	4691      	mov	r9, r2
 800b30e:	dc37      	bgt.n	800b380 <_printf_float+0x364>
 800b310:	f04f 0b00 	mov.w	fp, #0
 800b314:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b318:	f104 021a 	add.w	r2, r4, #26
 800b31c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800b320:	ebaa 0309 	sub.w	r3, sl, r9
 800b324:	455b      	cmp	r3, fp
 800b326:	dc33      	bgt.n	800b390 <_printf_float+0x374>
 800b328:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b32c:	429a      	cmp	r2, r3
 800b32e:	db3b      	blt.n	800b3a8 <_printf_float+0x38c>
 800b330:	6823      	ldr	r3, [r4, #0]
 800b332:	07da      	lsls	r2, r3, #31
 800b334:	d438      	bmi.n	800b3a8 <_printf_float+0x38c>
 800b336:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b338:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b33a:	eba3 020a 	sub.w	r2, r3, sl
 800b33e:	eba3 0901 	sub.w	r9, r3, r1
 800b342:	4591      	cmp	r9, r2
 800b344:	bfa8      	it	ge
 800b346:	4691      	movge	r9, r2
 800b348:	f1b9 0f00 	cmp.w	r9, #0
 800b34c:	dc34      	bgt.n	800b3b8 <_printf_float+0x39c>
 800b34e:	f04f 0800 	mov.w	r8, #0
 800b352:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b356:	f104 0a1a 	add.w	sl, r4, #26
 800b35a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b35e:	1a9b      	subs	r3, r3, r2
 800b360:	eba3 0309 	sub.w	r3, r3, r9
 800b364:	4543      	cmp	r3, r8
 800b366:	f77f af7a 	ble.w	800b25e <_printf_float+0x242>
 800b36a:	2301      	movs	r3, #1
 800b36c:	4652      	mov	r2, sl
 800b36e:	4631      	mov	r1, r6
 800b370:	4628      	mov	r0, r5
 800b372:	47b8      	blx	r7
 800b374:	3001      	adds	r0, #1
 800b376:	f43f aeac 	beq.w	800b0d2 <_printf_float+0xb6>
 800b37a:	f108 0801 	add.w	r8, r8, #1
 800b37e:	e7ec      	b.n	800b35a <_printf_float+0x33e>
 800b380:	4613      	mov	r3, r2
 800b382:	4631      	mov	r1, r6
 800b384:	4642      	mov	r2, r8
 800b386:	4628      	mov	r0, r5
 800b388:	47b8      	blx	r7
 800b38a:	3001      	adds	r0, #1
 800b38c:	d1c0      	bne.n	800b310 <_printf_float+0x2f4>
 800b38e:	e6a0      	b.n	800b0d2 <_printf_float+0xb6>
 800b390:	2301      	movs	r3, #1
 800b392:	4631      	mov	r1, r6
 800b394:	4628      	mov	r0, r5
 800b396:	920b      	str	r2, [sp, #44]	; 0x2c
 800b398:	47b8      	blx	r7
 800b39a:	3001      	adds	r0, #1
 800b39c:	f43f ae99 	beq.w	800b0d2 <_printf_float+0xb6>
 800b3a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b3a2:	f10b 0b01 	add.w	fp, fp, #1
 800b3a6:	e7b9      	b.n	800b31c <_printf_float+0x300>
 800b3a8:	4631      	mov	r1, r6
 800b3aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b3ae:	4628      	mov	r0, r5
 800b3b0:	47b8      	blx	r7
 800b3b2:	3001      	adds	r0, #1
 800b3b4:	d1bf      	bne.n	800b336 <_printf_float+0x31a>
 800b3b6:	e68c      	b.n	800b0d2 <_printf_float+0xb6>
 800b3b8:	464b      	mov	r3, r9
 800b3ba:	4631      	mov	r1, r6
 800b3bc:	4628      	mov	r0, r5
 800b3be:	eb08 020a 	add.w	r2, r8, sl
 800b3c2:	47b8      	blx	r7
 800b3c4:	3001      	adds	r0, #1
 800b3c6:	d1c2      	bne.n	800b34e <_printf_float+0x332>
 800b3c8:	e683      	b.n	800b0d2 <_printf_float+0xb6>
 800b3ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b3cc:	2a01      	cmp	r2, #1
 800b3ce:	dc01      	bgt.n	800b3d4 <_printf_float+0x3b8>
 800b3d0:	07db      	lsls	r3, r3, #31
 800b3d2:	d537      	bpl.n	800b444 <_printf_float+0x428>
 800b3d4:	2301      	movs	r3, #1
 800b3d6:	4642      	mov	r2, r8
 800b3d8:	4631      	mov	r1, r6
 800b3da:	4628      	mov	r0, r5
 800b3dc:	47b8      	blx	r7
 800b3de:	3001      	adds	r0, #1
 800b3e0:	f43f ae77 	beq.w	800b0d2 <_printf_float+0xb6>
 800b3e4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b3e8:	4631      	mov	r1, r6
 800b3ea:	4628      	mov	r0, r5
 800b3ec:	47b8      	blx	r7
 800b3ee:	3001      	adds	r0, #1
 800b3f0:	f43f ae6f 	beq.w	800b0d2 <_printf_float+0xb6>
 800b3f4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b3f8:	2200      	movs	r2, #0
 800b3fa:	2300      	movs	r3, #0
 800b3fc:	f7f5 faf6 	bl	80009ec <__aeabi_dcmpeq>
 800b400:	b9d8      	cbnz	r0, 800b43a <_printf_float+0x41e>
 800b402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b404:	f108 0201 	add.w	r2, r8, #1
 800b408:	3b01      	subs	r3, #1
 800b40a:	4631      	mov	r1, r6
 800b40c:	4628      	mov	r0, r5
 800b40e:	47b8      	blx	r7
 800b410:	3001      	adds	r0, #1
 800b412:	d10e      	bne.n	800b432 <_printf_float+0x416>
 800b414:	e65d      	b.n	800b0d2 <_printf_float+0xb6>
 800b416:	2301      	movs	r3, #1
 800b418:	464a      	mov	r2, r9
 800b41a:	4631      	mov	r1, r6
 800b41c:	4628      	mov	r0, r5
 800b41e:	47b8      	blx	r7
 800b420:	3001      	adds	r0, #1
 800b422:	f43f ae56 	beq.w	800b0d2 <_printf_float+0xb6>
 800b426:	f108 0801 	add.w	r8, r8, #1
 800b42a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b42c:	3b01      	subs	r3, #1
 800b42e:	4543      	cmp	r3, r8
 800b430:	dcf1      	bgt.n	800b416 <_printf_float+0x3fa>
 800b432:	4653      	mov	r3, sl
 800b434:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800b438:	e6e0      	b.n	800b1fc <_printf_float+0x1e0>
 800b43a:	f04f 0800 	mov.w	r8, #0
 800b43e:	f104 091a 	add.w	r9, r4, #26
 800b442:	e7f2      	b.n	800b42a <_printf_float+0x40e>
 800b444:	2301      	movs	r3, #1
 800b446:	4642      	mov	r2, r8
 800b448:	e7df      	b.n	800b40a <_printf_float+0x3ee>
 800b44a:	2301      	movs	r3, #1
 800b44c:	464a      	mov	r2, r9
 800b44e:	4631      	mov	r1, r6
 800b450:	4628      	mov	r0, r5
 800b452:	47b8      	blx	r7
 800b454:	3001      	adds	r0, #1
 800b456:	f43f ae3c 	beq.w	800b0d2 <_printf_float+0xb6>
 800b45a:	f108 0801 	add.w	r8, r8, #1
 800b45e:	68e3      	ldr	r3, [r4, #12]
 800b460:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b462:	1a5b      	subs	r3, r3, r1
 800b464:	4543      	cmp	r3, r8
 800b466:	dcf0      	bgt.n	800b44a <_printf_float+0x42e>
 800b468:	e6fd      	b.n	800b266 <_printf_float+0x24a>
 800b46a:	f04f 0800 	mov.w	r8, #0
 800b46e:	f104 0919 	add.w	r9, r4, #25
 800b472:	e7f4      	b.n	800b45e <_printf_float+0x442>

0800b474 <_printf_common>:
 800b474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b478:	4616      	mov	r6, r2
 800b47a:	4699      	mov	r9, r3
 800b47c:	688a      	ldr	r2, [r1, #8]
 800b47e:	690b      	ldr	r3, [r1, #16]
 800b480:	4607      	mov	r7, r0
 800b482:	4293      	cmp	r3, r2
 800b484:	bfb8      	it	lt
 800b486:	4613      	movlt	r3, r2
 800b488:	6033      	str	r3, [r6, #0]
 800b48a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800b48e:	460c      	mov	r4, r1
 800b490:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800b494:	b10a      	cbz	r2, 800b49a <_printf_common+0x26>
 800b496:	3301      	adds	r3, #1
 800b498:	6033      	str	r3, [r6, #0]
 800b49a:	6823      	ldr	r3, [r4, #0]
 800b49c:	0699      	lsls	r1, r3, #26
 800b49e:	bf42      	ittt	mi
 800b4a0:	6833      	ldrmi	r3, [r6, #0]
 800b4a2:	3302      	addmi	r3, #2
 800b4a4:	6033      	strmi	r3, [r6, #0]
 800b4a6:	6825      	ldr	r5, [r4, #0]
 800b4a8:	f015 0506 	ands.w	r5, r5, #6
 800b4ac:	d106      	bne.n	800b4bc <_printf_common+0x48>
 800b4ae:	f104 0a19 	add.w	sl, r4, #25
 800b4b2:	68e3      	ldr	r3, [r4, #12]
 800b4b4:	6832      	ldr	r2, [r6, #0]
 800b4b6:	1a9b      	subs	r3, r3, r2
 800b4b8:	42ab      	cmp	r3, r5
 800b4ba:	dc28      	bgt.n	800b50e <_printf_common+0x9a>
 800b4bc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800b4c0:	1e13      	subs	r3, r2, #0
 800b4c2:	6822      	ldr	r2, [r4, #0]
 800b4c4:	bf18      	it	ne
 800b4c6:	2301      	movne	r3, #1
 800b4c8:	0692      	lsls	r2, r2, #26
 800b4ca:	d42d      	bmi.n	800b528 <_printf_common+0xb4>
 800b4cc:	4649      	mov	r1, r9
 800b4ce:	4638      	mov	r0, r7
 800b4d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800b4d4:	47c0      	blx	r8
 800b4d6:	3001      	adds	r0, #1
 800b4d8:	d020      	beq.n	800b51c <_printf_common+0xa8>
 800b4da:	6823      	ldr	r3, [r4, #0]
 800b4dc:	68e5      	ldr	r5, [r4, #12]
 800b4de:	f003 0306 	and.w	r3, r3, #6
 800b4e2:	2b04      	cmp	r3, #4
 800b4e4:	bf18      	it	ne
 800b4e6:	2500      	movne	r5, #0
 800b4e8:	6832      	ldr	r2, [r6, #0]
 800b4ea:	f04f 0600 	mov.w	r6, #0
 800b4ee:	68a3      	ldr	r3, [r4, #8]
 800b4f0:	bf08      	it	eq
 800b4f2:	1aad      	subeq	r5, r5, r2
 800b4f4:	6922      	ldr	r2, [r4, #16]
 800b4f6:	bf08      	it	eq
 800b4f8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b4fc:	4293      	cmp	r3, r2
 800b4fe:	bfc4      	itt	gt
 800b500:	1a9b      	subgt	r3, r3, r2
 800b502:	18ed      	addgt	r5, r5, r3
 800b504:	341a      	adds	r4, #26
 800b506:	42b5      	cmp	r5, r6
 800b508:	d11a      	bne.n	800b540 <_printf_common+0xcc>
 800b50a:	2000      	movs	r0, #0
 800b50c:	e008      	b.n	800b520 <_printf_common+0xac>
 800b50e:	2301      	movs	r3, #1
 800b510:	4652      	mov	r2, sl
 800b512:	4649      	mov	r1, r9
 800b514:	4638      	mov	r0, r7
 800b516:	47c0      	blx	r8
 800b518:	3001      	adds	r0, #1
 800b51a:	d103      	bne.n	800b524 <_printf_common+0xb0>
 800b51c:	f04f 30ff 	mov.w	r0, #4294967295
 800b520:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b524:	3501      	adds	r5, #1
 800b526:	e7c4      	b.n	800b4b2 <_printf_common+0x3e>
 800b528:	2030      	movs	r0, #48	; 0x30
 800b52a:	18e1      	adds	r1, r4, r3
 800b52c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b530:	1c5a      	adds	r2, r3, #1
 800b532:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b536:	4422      	add	r2, r4
 800b538:	3302      	adds	r3, #2
 800b53a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b53e:	e7c5      	b.n	800b4cc <_printf_common+0x58>
 800b540:	2301      	movs	r3, #1
 800b542:	4622      	mov	r2, r4
 800b544:	4649      	mov	r1, r9
 800b546:	4638      	mov	r0, r7
 800b548:	47c0      	blx	r8
 800b54a:	3001      	adds	r0, #1
 800b54c:	d0e6      	beq.n	800b51c <_printf_common+0xa8>
 800b54e:	3601      	adds	r6, #1
 800b550:	e7d9      	b.n	800b506 <_printf_common+0x92>
	...

0800b554 <_printf_i>:
 800b554:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b558:	7e0f      	ldrb	r7, [r1, #24]
 800b55a:	4691      	mov	r9, r2
 800b55c:	2f78      	cmp	r7, #120	; 0x78
 800b55e:	4680      	mov	r8, r0
 800b560:	460c      	mov	r4, r1
 800b562:	469a      	mov	sl, r3
 800b564:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b566:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b56a:	d807      	bhi.n	800b57c <_printf_i+0x28>
 800b56c:	2f62      	cmp	r7, #98	; 0x62
 800b56e:	d80a      	bhi.n	800b586 <_printf_i+0x32>
 800b570:	2f00      	cmp	r7, #0
 800b572:	f000 80d9 	beq.w	800b728 <_printf_i+0x1d4>
 800b576:	2f58      	cmp	r7, #88	; 0x58
 800b578:	f000 80a4 	beq.w	800b6c4 <_printf_i+0x170>
 800b57c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b580:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b584:	e03a      	b.n	800b5fc <_printf_i+0xa8>
 800b586:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b58a:	2b15      	cmp	r3, #21
 800b58c:	d8f6      	bhi.n	800b57c <_printf_i+0x28>
 800b58e:	a101      	add	r1, pc, #4	; (adr r1, 800b594 <_printf_i+0x40>)
 800b590:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b594:	0800b5ed 	.word	0x0800b5ed
 800b598:	0800b601 	.word	0x0800b601
 800b59c:	0800b57d 	.word	0x0800b57d
 800b5a0:	0800b57d 	.word	0x0800b57d
 800b5a4:	0800b57d 	.word	0x0800b57d
 800b5a8:	0800b57d 	.word	0x0800b57d
 800b5ac:	0800b601 	.word	0x0800b601
 800b5b0:	0800b57d 	.word	0x0800b57d
 800b5b4:	0800b57d 	.word	0x0800b57d
 800b5b8:	0800b57d 	.word	0x0800b57d
 800b5bc:	0800b57d 	.word	0x0800b57d
 800b5c0:	0800b70f 	.word	0x0800b70f
 800b5c4:	0800b631 	.word	0x0800b631
 800b5c8:	0800b6f1 	.word	0x0800b6f1
 800b5cc:	0800b57d 	.word	0x0800b57d
 800b5d0:	0800b57d 	.word	0x0800b57d
 800b5d4:	0800b731 	.word	0x0800b731
 800b5d8:	0800b57d 	.word	0x0800b57d
 800b5dc:	0800b631 	.word	0x0800b631
 800b5e0:	0800b57d 	.word	0x0800b57d
 800b5e4:	0800b57d 	.word	0x0800b57d
 800b5e8:	0800b6f9 	.word	0x0800b6f9
 800b5ec:	682b      	ldr	r3, [r5, #0]
 800b5ee:	1d1a      	adds	r2, r3, #4
 800b5f0:	681b      	ldr	r3, [r3, #0]
 800b5f2:	602a      	str	r2, [r5, #0]
 800b5f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b5f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b5fc:	2301      	movs	r3, #1
 800b5fe:	e0a4      	b.n	800b74a <_printf_i+0x1f6>
 800b600:	6820      	ldr	r0, [r4, #0]
 800b602:	6829      	ldr	r1, [r5, #0]
 800b604:	0606      	lsls	r6, r0, #24
 800b606:	f101 0304 	add.w	r3, r1, #4
 800b60a:	d50a      	bpl.n	800b622 <_printf_i+0xce>
 800b60c:	680e      	ldr	r6, [r1, #0]
 800b60e:	602b      	str	r3, [r5, #0]
 800b610:	2e00      	cmp	r6, #0
 800b612:	da03      	bge.n	800b61c <_printf_i+0xc8>
 800b614:	232d      	movs	r3, #45	; 0x2d
 800b616:	4276      	negs	r6, r6
 800b618:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b61c:	230a      	movs	r3, #10
 800b61e:	485e      	ldr	r0, [pc, #376]	; (800b798 <_printf_i+0x244>)
 800b620:	e019      	b.n	800b656 <_printf_i+0x102>
 800b622:	680e      	ldr	r6, [r1, #0]
 800b624:	f010 0f40 	tst.w	r0, #64	; 0x40
 800b628:	602b      	str	r3, [r5, #0]
 800b62a:	bf18      	it	ne
 800b62c:	b236      	sxthne	r6, r6
 800b62e:	e7ef      	b.n	800b610 <_printf_i+0xbc>
 800b630:	682b      	ldr	r3, [r5, #0]
 800b632:	6820      	ldr	r0, [r4, #0]
 800b634:	1d19      	adds	r1, r3, #4
 800b636:	6029      	str	r1, [r5, #0]
 800b638:	0601      	lsls	r1, r0, #24
 800b63a:	d501      	bpl.n	800b640 <_printf_i+0xec>
 800b63c:	681e      	ldr	r6, [r3, #0]
 800b63e:	e002      	b.n	800b646 <_printf_i+0xf2>
 800b640:	0646      	lsls	r6, r0, #25
 800b642:	d5fb      	bpl.n	800b63c <_printf_i+0xe8>
 800b644:	881e      	ldrh	r6, [r3, #0]
 800b646:	2f6f      	cmp	r7, #111	; 0x6f
 800b648:	bf0c      	ite	eq
 800b64a:	2308      	moveq	r3, #8
 800b64c:	230a      	movne	r3, #10
 800b64e:	4852      	ldr	r0, [pc, #328]	; (800b798 <_printf_i+0x244>)
 800b650:	2100      	movs	r1, #0
 800b652:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800b656:	6865      	ldr	r5, [r4, #4]
 800b658:	2d00      	cmp	r5, #0
 800b65a:	bfa8      	it	ge
 800b65c:	6821      	ldrge	r1, [r4, #0]
 800b65e:	60a5      	str	r5, [r4, #8]
 800b660:	bfa4      	itt	ge
 800b662:	f021 0104 	bicge.w	r1, r1, #4
 800b666:	6021      	strge	r1, [r4, #0]
 800b668:	b90e      	cbnz	r6, 800b66e <_printf_i+0x11a>
 800b66a:	2d00      	cmp	r5, #0
 800b66c:	d04d      	beq.n	800b70a <_printf_i+0x1b6>
 800b66e:	4615      	mov	r5, r2
 800b670:	fbb6 f1f3 	udiv	r1, r6, r3
 800b674:	fb03 6711 	mls	r7, r3, r1, r6
 800b678:	5dc7      	ldrb	r7, [r0, r7]
 800b67a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800b67e:	4637      	mov	r7, r6
 800b680:	42bb      	cmp	r3, r7
 800b682:	460e      	mov	r6, r1
 800b684:	d9f4      	bls.n	800b670 <_printf_i+0x11c>
 800b686:	2b08      	cmp	r3, #8
 800b688:	d10b      	bne.n	800b6a2 <_printf_i+0x14e>
 800b68a:	6823      	ldr	r3, [r4, #0]
 800b68c:	07de      	lsls	r6, r3, #31
 800b68e:	d508      	bpl.n	800b6a2 <_printf_i+0x14e>
 800b690:	6923      	ldr	r3, [r4, #16]
 800b692:	6861      	ldr	r1, [r4, #4]
 800b694:	4299      	cmp	r1, r3
 800b696:	bfde      	ittt	le
 800b698:	2330      	movle	r3, #48	; 0x30
 800b69a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800b69e:	f105 35ff 	addle.w	r5, r5, #4294967295
 800b6a2:	1b52      	subs	r2, r2, r5
 800b6a4:	6122      	str	r2, [r4, #16]
 800b6a6:	464b      	mov	r3, r9
 800b6a8:	4621      	mov	r1, r4
 800b6aa:	4640      	mov	r0, r8
 800b6ac:	f8cd a000 	str.w	sl, [sp]
 800b6b0:	aa03      	add	r2, sp, #12
 800b6b2:	f7ff fedf 	bl	800b474 <_printf_common>
 800b6b6:	3001      	adds	r0, #1
 800b6b8:	d14c      	bne.n	800b754 <_printf_i+0x200>
 800b6ba:	f04f 30ff 	mov.w	r0, #4294967295
 800b6be:	b004      	add	sp, #16
 800b6c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b6c4:	4834      	ldr	r0, [pc, #208]	; (800b798 <_printf_i+0x244>)
 800b6c6:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800b6ca:	6829      	ldr	r1, [r5, #0]
 800b6cc:	6823      	ldr	r3, [r4, #0]
 800b6ce:	f851 6b04 	ldr.w	r6, [r1], #4
 800b6d2:	6029      	str	r1, [r5, #0]
 800b6d4:	061d      	lsls	r5, r3, #24
 800b6d6:	d514      	bpl.n	800b702 <_printf_i+0x1ae>
 800b6d8:	07df      	lsls	r7, r3, #31
 800b6da:	bf44      	itt	mi
 800b6dc:	f043 0320 	orrmi.w	r3, r3, #32
 800b6e0:	6023      	strmi	r3, [r4, #0]
 800b6e2:	b91e      	cbnz	r6, 800b6ec <_printf_i+0x198>
 800b6e4:	6823      	ldr	r3, [r4, #0]
 800b6e6:	f023 0320 	bic.w	r3, r3, #32
 800b6ea:	6023      	str	r3, [r4, #0]
 800b6ec:	2310      	movs	r3, #16
 800b6ee:	e7af      	b.n	800b650 <_printf_i+0xfc>
 800b6f0:	6823      	ldr	r3, [r4, #0]
 800b6f2:	f043 0320 	orr.w	r3, r3, #32
 800b6f6:	6023      	str	r3, [r4, #0]
 800b6f8:	2378      	movs	r3, #120	; 0x78
 800b6fa:	4828      	ldr	r0, [pc, #160]	; (800b79c <_printf_i+0x248>)
 800b6fc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b700:	e7e3      	b.n	800b6ca <_printf_i+0x176>
 800b702:	0659      	lsls	r1, r3, #25
 800b704:	bf48      	it	mi
 800b706:	b2b6      	uxthmi	r6, r6
 800b708:	e7e6      	b.n	800b6d8 <_printf_i+0x184>
 800b70a:	4615      	mov	r5, r2
 800b70c:	e7bb      	b.n	800b686 <_printf_i+0x132>
 800b70e:	682b      	ldr	r3, [r5, #0]
 800b710:	6826      	ldr	r6, [r4, #0]
 800b712:	1d18      	adds	r0, r3, #4
 800b714:	6961      	ldr	r1, [r4, #20]
 800b716:	6028      	str	r0, [r5, #0]
 800b718:	0635      	lsls	r5, r6, #24
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	d501      	bpl.n	800b722 <_printf_i+0x1ce>
 800b71e:	6019      	str	r1, [r3, #0]
 800b720:	e002      	b.n	800b728 <_printf_i+0x1d4>
 800b722:	0670      	lsls	r0, r6, #25
 800b724:	d5fb      	bpl.n	800b71e <_printf_i+0x1ca>
 800b726:	8019      	strh	r1, [r3, #0]
 800b728:	2300      	movs	r3, #0
 800b72a:	4615      	mov	r5, r2
 800b72c:	6123      	str	r3, [r4, #16]
 800b72e:	e7ba      	b.n	800b6a6 <_printf_i+0x152>
 800b730:	682b      	ldr	r3, [r5, #0]
 800b732:	2100      	movs	r1, #0
 800b734:	1d1a      	adds	r2, r3, #4
 800b736:	602a      	str	r2, [r5, #0]
 800b738:	681d      	ldr	r5, [r3, #0]
 800b73a:	6862      	ldr	r2, [r4, #4]
 800b73c:	4628      	mov	r0, r5
 800b73e:	f002 fb93 	bl	800de68 <memchr>
 800b742:	b108      	cbz	r0, 800b748 <_printf_i+0x1f4>
 800b744:	1b40      	subs	r0, r0, r5
 800b746:	6060      	str	r0, [r4, #4]
 800b748:	6863      	ldr	r3, [r4, #4]
 800b74a:	6123      	str	r3, [r4, #16]
 800b74c:	2300      	movs	r3, #0
 800b74e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b752:	e7a8      	b.n	800b6a6 <_printf_i+0x152>
 800b754:	462a      	mov	r2, r5
 800b756:	4649      	mov	r1, r9
 800b758:	4640      	mov	r0, r8
 800b75a:	6923      	ldr	r3, [r4, #16]
 800b75c:	47d0      	blx	sl
 800b75e:	3001      	adds	r0, #1
 800b760:	d0ab      	beq.n	800b6ba <_printf_i+0x166>
 800b762:	6823      	ldr	r3, [r4, #0]
 800b764:	079b      	lsls	r3, r3, #30
 800b766:	d413      	bmi.n	800b790 <_printf_i+0x23c>
 800b768:	68e0      	ldr	r0, [r4, #12]
 800b76a:	9b03      	ldr	r3, [sp, #12]
 800b76c:	4298      	cmp	r0, r3
 800b76e:	bfb8      	it	lt
 800b770:	4618      	movlt	r0, r3
 800b772:	e7a4      	b.n	800b6be <_printf_i+0x16a>
 800b774:	2301      	movs	r3, #1
 800b776:	4632      	mov	r2, r6
 800b778:	4649      	mov	r1, r9
 800b77a:	4640      	mov	r0, r8
 800b77c:	47d0      	blx	sl
 800b77e:	3001      	adds	r0, #1
 800b780:	d09b      	beq.n	800b6ba <_printf_i+0x166>
 800b782:	3501      	adds	r5, #1
 800b784:	68e3      	ldr	r3, [r4, #12]
 800b786:	9903      	ldr	r1, [sp, #12]
 800b788:	1a5b      	subs	r3, r3, r1
 800b78a:	42ab      	cmp	r3, r5
 800b78c:	dcf2      	bgt.n	800b774 <_printf_i+0x220>
 800b78e:	e7eb      	b.n	800b768 <_printf_i+0x214>
 800b790:	2500      	movs	r5, #0
 800b792:	f104 0619 	add.w	r6, r4, #25
 800b796:	e7f5      	b.n	800b784 <_printf_i+0x230>
 800b798:	08010d50 	.word	0x08010d50
 800b79c:	08010d61 	.word	0x08010d61

0800b7a0 <_scanf_float>:
 800b7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7a4:	b087      	sub	sp, #28
 800b7a6:	9303      	str	r3, [sp, #12]
 800b7a8:	688b      	ldr	r3, [r1, #8]
 800b7aa:	4617      	mov	r7, r2
 800b7ac:	1e5a      	subs	r2, r3, #1
 800b7ae:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800b7b2:	bf85      	ittet	hi
 800b7b4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800b7b8:	195b      	addhi	r3, r3, r5
 800b7ba:	2300      	movls	r3, #0
 800b7bc:	9302      	strhi	r3, [sp, #8]
 800b7be:	bf88      	it	hi
 800b7c0:	f240 135d 	movwhi	r3, #349	; 0x15d
 800b7c4:	468b      	mov	fp, r1
 800b7c6:	f04f 0500 	mov.w	r5, #0
 800b7ca:	bf8c      	ite	hi
 800b7cc:	608b      	strhi	r3, [r1, #8]
 800b7ce:	9302      	strls	r3, [sp, #8]
 800b7d0:	680b      	ldr	r3, [r1, #0]
 800b7d2:	4680      	mov	r8, r0
 800b7d4:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800b7d8:	f84b 3b1c 	str.w	r3, [fp], #28
 800b7dc:	460c      	mov	r4, r1
 800b7de:	465e      	mov	r6, fp
 800b7e0:	46aa      	mov	sl, r5
 800b7e2:	46a9      	mov	r9, r5
 800b7e4:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b7e8:	9501      	str	r5, [sp, #4]
 800b7ea:	68a2      	ldr	r2, [r4, #8]
 800b7ec:	b152      	cbz	r2, 800b804 <_scanf_float+0x64>
 800b7ee:	683b      	ldr	r3, [r7, #0]
 800b7f0:	781b      	ldrb	r3, [r3, #0]
 800b7f2:	2b4e      	cmp	r3, #78	; 0x4e
 800b7f4:	d864      	bhi.n	800b8c0 <_scanf_float+0x120>
 800b7f6:	2b40      	cmp	r3, #64	; 0x40
 800b7f8:	d83c      	bhi.n	800b874 <_scanf_float+0xd4>
 800b7fa:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800b7fe:	b2c8      	uxtb	r0, r1
 800b800:	280e      	cmp	r0, #14
 800b802:	d93a      	bls.n	800b87a <_scanf_float+0xda>
 800b804:	f1b9 0f00 	cmp.w	r9, #0
 800b808:	d003      	beq.n	800b812 <_scanf_float+0x72>
 800b80a:	6823      	ldr	r3, [r4, #0]
 800b80c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b810:	6023      	str	r3, [r4, #0]
 800b812:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b816:	f1ba 0f01 	cmp.w	sl, #1
 800b81a:	f200 8113 	bhi.w	800ba44 <_scanf_float+0x2a4>
 800b81e:	455e      	cmp	r6, fp
 800b820:	f200 8105 	bhi.w	800ba2e <_scanf_float+0x28e>
 800b824:	2501      	movs	r5, #1
 800b826:	4628      	mov	r0, r5
 800b828:	b007      	add	sp, #28
 800b82a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b82e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800b832:	2a0d      	cmp	r2, #13
 800b834:	d8e6      	bhi.n	800b804 <_scanf_float+0x64>
 800b836:	a101      	add	r1, pc, #4	; (adr r1, 800b83c <_scanf_float+0x9c>)
 800b838:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800b83c:	0800b97b 	.word	0x0800b97b
 800b840:	0800b805 	.word	0x0800b805
 800b844:	0800b805 	.word	0x0800b805
 800b848:	0800b805 	.word	0x0800b805
 800b84c:	0800b9db 	.word	0x0800b9db
 800b850:	0800b9b3 	.word	0x0800b9b3
 800b854:	0800b805 	.word	0x0800b805
 800b858:	0800b805 	.word	0x0800b805
 800b85c:	0800b989 	.word	0x0800b989
 800b860:	0800b805 	.word	0x0800b805
 800b864:	0800b805 	.word	0x0800b805
 800b868:	0800b805 	.word	0x0800b805
 800b86c:	0800b805 	.word	0x0800b805
 800b870:	0800b941 	.word	0x0800b941
 800b874:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800b878:	e7db      	b.n	800b832 <_scanf_float+0x92>
 800b87a:	290e      	cmp	r1, #14
 800b87c:	d8c2      	bhi.n	800b804 <_scanf_float+0x64>
 800b87e:	a001      	add	r0, pc, #4	; (adr r0, 800b884 <_scanf_float+0xe4>)
 800b880:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800b884:	0800b933 	.word	0x0800b933
 800b888:	0800b805 	.word	0x0800b805
 800b88c:	0800b933 	.word	0x0800b933
 800b890:	0800b9c7 	.word	0x0800b9c7
 800b894:	0800b805 	.word	0x0800b805
 800b898:	0800b8e1 	.word	0x0800b8e1
 800b89c:	0800b91d 	.word	0x0800b91d
 800b8a0:	0800b91d 	.word	0x0800b91d
 800b8a4:	0800b91d 	.word	0x0800b91d
 800b8a8:	0800b91d 	.word	0x0800b91d
 800b8ac:	0800b91d 	.word	0x0800b91d
 800b8b0:	0800b91d 	.word	0x0800b91d
 800b8b4:	0800b91d 	.word	0x0800b91d
 800b8b8:	0800b91d 	.word	0x0800b91d
 800b8bc:	0800b91d 	.word	0x0800b91d
 800b8c0:	2b6e      	cmp	r3, #110	; 0x6e
 800b8c2:	d809      	bhi.n	800b8d8 <_scanf_float+0x138>
 800b8c4:	2b60      	cmp	r3, #96	; 0x60
 800b8c6:	d8b2      	bhi.n	800b82e <_scanf_float+0x8e>
 800b8c8:	2b54      	cmp	r3, #84	; 0x54
 800b8ca:	d077      	beq.n	800b9bc <_scanf_float+0x21c>
 800b8cc:	2b59      	cmp	r3, #89	; 0x59
 800b8ce:	d199      	bne.n	800b804 <_scanf_float+0x64>
 800b8d0:	2d07      	cmp	r5, #7
 800b8d2:	d197      	bne.n	800b804 <_scanf_float+0x64>
 800b8d4:	2508      	movs	r5, #8
 800b8d6:	e029      	b.n	800b92c <_scanf_float+0x18c>
 800b8d8:	2b74      	cmp	r3, #116	; 0x74
 800b8da:	d06f      	beq.n	800b9bc <_scanf_float+0x21c>
 800b8dc:	2b79      	cmp	r3, #121	; 0x79
 800b8de:	e7f6      	b.n	800b8ce <_scanf_float+0x12e>
 800b8e0:	6821      	ldr	r1, [r4, #0]
 800b8e2:	05c8      	lsls	r0, r1, #23
 800b8e4:	d51a      	bpl.n	800b91c <_scanf_float+0x17c>
 800b8e6:	9b02      	ldr	r3, [sp, #8]
 800b8e8:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800b8ec:	6021      	str	r1, [r4, #0]
 800b8ee:	f109 0901 	add.w	r9, r9, #1
 800b8f2:	b11b      	cbz	r3, 800b8fc <_scanf_float+0x15c>
 800b8f4:	3b01      	subs	r3, #1
 800b8f6:	3201      	adds	r2, #1
 800b8f8:	9302      	str	r3, [sp, #8]
 800b8fa:	60a2      	str	r2, [r4, #8]
 800b8fc:	68a3      	ldr	r3, [r4, #8]
 800b8fe:	3b01      	subs	r3, #1
 800b900:	60a3      	str	r3, [r4, #8]
 800b902:	6923      	ldr	r3, [r4, #16]
 800b904:	3301      	adds	r3, #1
 800b906:	6123      	str	r3, [r4, #16]
 800b908:	687b      	ldr	r3, [r7, #4]
 800b90a:	3b01      	subs	r3, #1
 800b90c:	2b00      	cmp	r3, #0
 800b90e:	607b      	str	r3, [r7, #4]
 800b910:	f340 8084 	ble.w	800ba1c <_scanf_float+0x27c>
 800b914:	683b      	ldr	r3, [r7, #0]
 800b916:	3301      	adds	r3, #1
 800b918:	603b      	str	r3, [r7, #0]
 800b91a:	e766      	b.n	800b7ea <_scanf_float+0x4a>
 800b91c:	eb1a 0f05 	cmn.w	sl, r5
 800b920:	f47f af70 	bne.w	800b804 <_scanf_float+0x64>
 800b924:	6822      	ldr	r2, [r4, #0]
 800b926:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800b92a:	6022      	str	r2, [r4, #0]
 800b92c:	f806 3b01 	strb.w	r3, [r6], #1
 800b930:	e7e4      	b.n	800b8fc <_scanf_float+0x15c>
 800b932:	6822      	ldr	r2, [r4, #0]
 800b934:	0610      	lsls	r0, r2, #24
 800b936:	f57f af65 	bpl.w	800b804 <_scanf_float+0x64>
 800b93a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b93e:	e7f4      	b.n	800b92a <_scanf_float+0x18a>
 800b940:	f1ba 0f00 	cmp.w	sl, #0
 800b944:	d10e      	bne.n	800b964 <_scanf_float+0x1c4>
 800b946:	f1b9 0f00 	cmp.w	r9, #0
 800b94a:	d10e      	bne.n	800b96a <_scanf_float+0x1ca>
 800b94c:	6822      	ldr	r2, [r4, #0]
 800b94e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b952:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b956:	d108      	bne.n	800b96a <_scanf_float+0x1ca>
 800b958:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b95c:	f04f 0a01 	mov.w	sl, #1
 800b960:	6022      	str	r2, [r4, #0]
 800b962:	e7e3      	b.n	800b92c <_scanf_float+0x18c>
 800b964:	f1ba 0f02 	cmp.w	sl, #2
 800b968:	d055      	beq.n	800ba16 <_scanf_float+0x276>
 800b96a:	2d01      	cmp	r5, #1
 800b96c:	d002      	beq.n	800b974 <_scanf_float+0x1d4>
 800b96e:	2d04      	cmp	r5, #4
 800b970:	f47f af48 	bne.w	800b804 <_scanf_float+0x64>
 800b974:	3501      	adds	r5, #1
 800b976:	b2ed      	uxtb	r5, r5
 800b978:	e7d8      	b.n	800b92c <_scanf_float+0x18c>
 800b97a:	f1ba 0f01 	cmp.w	sl, #1
 800b97e:	f47f af41 	bne.w	800b804 <_scanf_float+0x64>
 800b982:	f04f 0a02 	mov.w	sl, #2
 800b986:	e7d1      	b.n	800b92c <_scanf_float+0x18c>
 800b988:	b97d      	cbnz	r5, 800b9aa <_scanf_float+0x20a>
 800b98a:	f1b9 0f00 	cmp.w	r9, #0
 800b98e:	f47f af3c 	bne.w	800b80a <_scanf_float+0x6a>
 800b992:	6822      	ldr	r2, [r4, #0]
 800b994:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b998:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b99c:	f47f af39 	bne.w	800b812 <_scanf_float+0x72>
 800b9a0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b9a4:	2501      	movs	r5, #1
 800b9a6:	6022      	str	r2, [r4, #0]
 800b9a8:	e7c0      	b.n	800b92c <_scanf_float+0x18c>
 800b9aa:	2d03      	cmp	r5, #3
 800b9ac:	d0e2      	beq.n	800b974 <_scanf_float+0x1d4>
 800b9ae:	2d05      	cmp	r5, #5
 800b9b0:	e7de      	b.n	800b970 <_scanf_float+0x1d0>
 800b9b2:	2d02      	cmp	r5, #2
 800b9b4:	f47f af26 	bne.w	800b804 <_scanf_float+0x64>
 800b9b8:	2503      	movs	r5, #3
 800b9ba:	e7b7      	b.n	800b92c <_scanf_float+0x18c>
 800b9bc:	2d06      	cmp	r5, #6
 800b9be:	f47f af21 	bne.w	800b804 <_scanf_float+0x64>
 800b9c2:	2507      	movs	r5, #7
 800b9c4:	e7b2      	b.n	800b92c <_scanf_float+0x18c>
 800b9c6:	6822      	ldr	r2, [r4, #0]
 800b9c8:	0591      	lsls	r1, r2, #22
 800b9ca:	f57f af1b 	bpl.w	800b804 <_scanf_float+0x64>
 800b9ce:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800b9d2:	6022      	str	r2, [r4, #0]
 800b9d4:	f8cd 9004 	str.w	r9, [sp, #4]
 800b9d8:	e7a8      	b.n	800b92c <_scanf_float+0x18c>
 800b9da:	6822      	ldr	r2, [r4, #0]
 800b9dc:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800b9e0:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800b9e4:	d006      	beq.n	800b9f4 <_scanf_float+0x254>
 800b9e6:	0550      	lsls	r0, r2, #21
 800b9e8:	f57f af0c 	bpl.w	800b804 <_scanf_float+0x64>
 800b9ec:	f1b9 0f00 	cmp.w	r9, #0
 800b9f0:	f43f af0f 	beq.w	800b812 <_scanf_float+0x72>
 800b9f4:	0591      	lsls	r1, r2, #22
 800b9f6:	bf58      	it	pl
 800b9f8:	9901      	ldrpl	r1, [sp, #4]
 800b9fa:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b9fe:	bf58      	it	pl
 800ba00:	eba9 0101 	subpl.w	r1, r9, r1
 800ba04:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800ba08:	f04f 0900 	mov.w	r9, #0
 800ba0c:	bf58      	it	pl
 800ba0e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800ba12:	6022      	str	r2, [r4, #0]
 800ba14:	e78a      	b.n	800b92c <_scanf_float+0x18c>
 800ba16:	f04f 0a03 	mov.w	sl, #3
 800ba1a:	e787      	b.n	800b92c <_scanf_float+0x18c>
 800ba1c:	4639      	mov	r1, r7
 800ba1e:	4640      	mov	r0, r8
 800ba20:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ba24:	4798      	blx	r3
 800ba26:	2800      	cmp	r0, #0
 800ba28:	f43f aedf 	beq.w	800b7ea <_scanf_float+0x4a>
 800ba2c:	e6ea      	b.n	800b804 <_scanf_float+0x64>
 800ba2e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ba32:	463a      	mov	r2, r7
 800ba34:	4640      	mov	r0, r8
 800ba36:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800ba3a:	4798      	blx	r3
 800ba3c:	6923      	ldr	r3, [r4, #16]
 800ba3e:	3b01      	subs	r3, #1
 800ba40:	6123      	str	r3, [r4, #16]
 800ba42:	e6ec      	b.n	800b81e <_scanf_float+0x7e>
 800ba44:	1e6b      	subs	r3, r5, #1
 800ba46:	2b06      	cmp	r3, #6
 800ba48:	d825      	bhi.n	800ba96 <_scanf_float+0x2f6>
 800ba4a:	2d02      	cmp	r5, #2
 800ba4c:	d836      	bhi.n	800babc <_scanf_float+0x31c>
 800ba4e:	455e      	cmp	r6, fp
 800ba50:	f67f aee8 	bls.w	800b824 <_scanf_float+0x84>
 800ba54:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ba58:	463a      	mov	r2, r7
 800ba5a:	4640      	mov	r0, r8
 800ba5c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800ba60:	4798      	blx	r3
 800ba62:	6923      	ldr	r3, [r4, #16]
 800ba64:	3b01      	subs	r3, #1
 800ba66:	6123      	str	r3, [r4, #16]
 800ba68:	e7f1      	b.n	800ba4e <_scanf_float+0x2ae>
 800ba6a:	9802      	ldr	r0, [sp, #8]
 800ba6c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800ba70:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800ba74:	463a      	mov	r2, r7
 800ba76:	9002      	str	r0, [sp, #8]
 800ba78:	4640      	mov	r0, r8
 800ba7a:	4798      	blx	r3
 800ba7c:	6923      	ldr	r3, [r4, #16]
 800ba7e:	3b01      	subs	r3, #1
 800ba80:	6123      	str	r3, [r4, #16]
 800ba82:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ba86:	fa5f fa8a 	uxtb.w	sl, sl
 800ba8a:	f1ba 0f02 	cmp.w	sl, #2
 800ba8e:	d1ec      	bne.n	800ba6a <_scanf_float+0x2ca>
 800ba90:	3d03      	subs	r5, #3
 800ba92:	b2ed      	uxtb	r5, r5
 800ba94:	1b76      	subs	r6, r6, r5
 800ba96:	6823      	ldr	r3, [r4, #0]
 800ba98:	05da      	lsls	r2, r3, #23
 800ba9a:	d52f      	bpl.n	800bafc <_scanf_float+0x35c>
 800ba9c:	055b      	lsls	r3, r3, #21
 800ba9e:	d510      	bpl.n	800bac2 <_scanf_float+0x322>
 800baa0:	455e      	cmp	r6, fp
 800baa2:	f67f aebf 	bls.w	800b824 <_scanf_float+0x84>
 800baa6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800baaa:	463a      	mov	r2, r7
 800baac:	4640      	mov	r0, r8
 800baae:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800bab2:	4798      	blx	r3
 800bab4:	6923      	ldr	r3, [r4, #16]
 800bab6:	3b01      	subs	r3, #1
 800bab8:	6123      	str	r3, [r4, #16]
 800baba:	e7f1      	b.n	800baa0 <_scanf_float+0x300>
 800babc:	46aa      	mov	sl, r5
 800babe:	9602      	str	r6, [sp, #8]
 800bac0:	e7df      	b.n	800ba82 <_scanf_float+0x2e2>
 800bac2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800bac6:	6923      	ldr	r3, [r4, #16]
 800bac8:	2965      	cmp	r1, #101	; 0x65
 800baca:	f103 33ff 	add.w	r3, r3, #4294967295
 800bace:	f106 35ff 	add.w	r5, r6, #4294967295
 800bad2:	6123      	str	r3, [r4, #16]
 800bad4:	d00c      	beq.n	800baf0 <_scanf_float+0x350>
 800bad6:	2945      	cmp	r1, #69	; 0x45
 800bad8:	d00a      	beq.n	800baf0 <_scanf_float+0x350>
 800bada:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800bade:	463a      	mov	r2, r7
 800bae0:	4640      	mov	r0, r8
 800bae2:	4798      	blx	r3
 800bae4:	6923      	ldr	r3, [r4, #16]
 800bae6:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800baea:	3b01      	subs	r3, #1
 800baec:	1eb5      	subs	r5, r6, #2
 800baee:	6123      	str	r3, [r4, #16]
 800baf0:	463a      	mov	r2, r7
 800baf2:	4640      	mov	r0, r8
 800baf4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800baf8:	4798      	blx	r3
 800bafa:	462e      	mov	r6, r5
 800bafc:	6825      	ldr	r5, [r4, #0]
 800bafe:	f015 0510 	ands.w	r5, r5, #16
 800bb02:	d155      	bne.n	800bbb0 <_scanf_float+0x410>
 800bb04:	7035      	strb	r5, [r6, #0]
 800bb06:	6823      	ldr	r3, [r4, #0]
 800bb08:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800bb0c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bb10:	d11b      	bne.n	800bb4a <_scanf_float+0x3aa>
 800bb12:	9b01      	ldr	r3, [sp, #4]
 800bb14:	454b      	cmp	r3, r9
 800bb16:	eba3 0209 	sub.w	r2, r3, r9
 800bb1a:	d123      	bne.n	800bb64 <_scanf_float+0x3c4>
 800bb1c:	2200      	movs	r2, #0
 800bb1e:	4659      	mov	r1, fp
 800bb20:	4640      	mov	r0, r8
 800bb22:	f000 fee9 	bl	800c8f8 <_strtod_r>
 800bb26:	6822      	ldr	r2, [r4, #0]
 800bb28:	9b03      	ldr	r3, [sp, #12]
 800bb2a:	f012 0f02 	tst.w	r2, #2
 800bb2e:	4606      	mov	r6, r0
 800bb30:	460f      	mov	r7, r1
 800bb32:	681b      	ldr	r3, [r3, #0]
 800bb34:	d021      	beq.n	800bb7a <_scanf_float+0x3da>
 800bb36:	1d1a      	adds	r2, r3, #4
 800bb38:	9903      	ldr	r1, [sp, #12]
 800bb3a:	600a      	str	r2, [r1, #0]
 800bb3c:	681b      	ldr	r3, [r3, #0]
 800bb3e:	e9c3 6700 	strd	r6, r7, [r3]
 800bb42:	68e3      	ldr	r3, [r4, #12]
 800bb44:	3301      	adds	r3, #1
 800bb46:	60e3      	str	r3, [r4, #12]
 800bb48:	e66d      	b.n	800b826 <_scanf_float+0x86>
 800bb4a:	9b04      	ldr	r3, [sp, #16]
 800bb4c:	2b00      	cmp	r3, #0
 800bb4e:	d0e5      	beq.n	800bb1c <_scanf_float+0x37c>
 800bb50:	9905      	ldr	r1, [sp, #20]
 800bb52:	230a      	movs	r3, #10
 800bb54:	462a      	mov	r2, r5
 800bb56:	4640      	mov	r0, r8
 800bb58:	3101      	adds	r1, #1
 800bb5a:	f000 ff4f 	bl	800c9fc <_strtol_r>
 800bb5e:	9b04      	ldr	r3, [sp, #16]
 800bb60:	9e05      	ldr	r6, [sp, #20]
 800bb62:	1ac2      	subs	r2, r0, r3
 800bb64:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800bb68:	429e      	cmp	r6, r3
 800bb6a:	bf28      	it	cs
 800bb6c:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800bb70:	4630      	mov	r0, r6
 800bb72:	4910      	ldr	r1, [pc, #64]	; (800bbb4 <_scanf_float+0x414>)
 800bb74:	f000 f826 	bl	800bbc4 <siprintf>
 800bb78:	e7d0      	b.n	800bb1c <_scanf_float+0x37c>
 800bb7a:	f012 0f04 	tst.w	r2, #4
 800bb7e:	f103 0204 	add.w	r2, r3, #4
 800bb82:	d1d9      	bne.n	800bb38 <_scanf_float+0x398>
 800bb84:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bb88:	f8cc 2000 	str.w	r2, [ip]
 800bb8c:	f8d3 8000 	ldr.w	r8, [r3]
 800bb90:	4602      	mov	r2, r0
 800bb92:	460b      	mov	r3, r1
 800bb94:	f7f4 ff5c 	bl	8000a50 <__aeabi_dcmpun>
 800bb98:	b128      	cbz	r0, 800bba6 <_scanf_float+0x406>
 800bb9a:	4807      	ldr	r0, [pc, #28]	; (800bbb8 <_scanf_float+0x418>)
 800bb9c:	f000 f80e 	bl	800bbbc <nanf>
 800bba0:	f8c8 0000 	str.w	r0, [r8]
 800bba4:	e7cd      	b.n	800bb42 <_scanf_float+0x3a2>
 800bba6:	4630      	mov	r0, r6
 800bba8:	4639      	mov	r1, r7
 800bbaa:	f7f4 ffaf 	bl	8000b0c <__aeabi_d2f>
 800bbae:	e7f7      	b.n	800bba0 <_scanf_float+0x400>
 800bbb0:	2500      	movs	r5, #0
 800bbb2:	e638      	b.n	800b826 <_scanf_float+0x86>
 800bbb4:	08010d72 	.word	0x08010d72
 800bbb8:	08011193 	.word	0x08011193

0800bbbc <nanf>:
 800bbbc:	4800      	ldr	r0, [pc, #0]	; (800bbc0 <nanf+0x4>)
 800bbbe:	4770      	bx	lr
 800bbc0:	7fc00000 	.word	0x7fc00000

0800bbc4 <siprintf>:
 800bbc4:	b40e      	push	{r1, r2, r3}
 800bbc6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800bbca:	b500      	push	{lr}
 800bbcc:	b09c      	sub	sp, #112	; 0x70
 800bbce:	ab1d      	add	r3, sp, #116	; 0x74
 800bbd0:	9002      	str	r0, [sp, #8]
 800bbd2:	9006      	str	r0, [sp, #24]
 800bbd4:	9107      	str	r1, [sp, #28]
 800bbd6:	9104      	str	r1, [sp, #16]
 800bbd8:	4808      	ldr	r0, [pc, #32]	; (800bbfc <siprintf+0x38>)
 800bbda:	4909      	ldr	r1, [pc, #36]	; (800bc00 <siprintf+0x3c>)
 800bbdc:	f853 2b04 	ldr.w	r2, [r3], #4
 800bbe0:	9105      	str	r1, [sp, #20]
 800bbe2:	6800      	ldr	r0, [r0, #0]
 800bbe4:	a902      	add	r1, sp, #8
 800bbe6:	9301      	str	r3, [sp, #4]
 800bbe8:	f002 ff50 	bl	800ea8c <_svfiprintf_r>
 800bbec:	2200      	movs	r2, #0
 800bbee:	9b02      	ldr	r3, [sp, #8]
 800bbf0:	701a      	strb	r2, [r3, #0]
 800bbf2:	b01c      	add	sp, #112	; 0x70
 800bbf4:	f85d eb04 	ldr.w	lr, [sp], #4
 800bbf8:	b003      	add	sp, #12
 800bbfa:	4770      	bx	lr
 800bbfc:	200001a4 	.word	0x200001a4
 800bc00:	ffff0208 	.word	0xffff0208

0800bc04 <siscanf>:
 800bc04:	b40e      	push	{r1, r2, r3}
 800bc06:	f44f 7201 	mov.w	r2, #516	; 0x204
 800bc0a:	b530      	push	{r4, r5, lr}
 800bc0c:	b09c      	sub	sp, #112	; 0x70
 800bc0e:	ac1f      	add	r4, sp, #124	; 0x7c
 800bc10:	f854 5b04 	ldr.w	r5, [r4], #4
 800bc14:	f8ad 2014 	strh.w	r2, [sp, #20]
 800bc18:	9002      	str	r0, [sp, #8]
 800bc1a:	9006      	str	r0, [sp, #24]
 800bc1c:	f7f4 faba 	bl	8000194 <strlen>
 800bc20:	4b0b      	ldr	r3, [pc, #44]	; (800bc50 <siscanf+0x4c>)
 800bc22:	9003      	str	r0, [sp, #12]
 800bc24:	930b      	str	r3, [sp, #44]	; 0x2c
 800bc26:	2300      	movs	r3, #0
 800bc28:	930f      	str	r3, [sp, #60]	; 0x3c
 800bc2a:	9314      	str	r3, [sp, #80]	; 0x50
 800bc2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bc30:	9007      	str	r0, [sp, #28]
 800bc32:	4808      	ldr	r0, [pc, #32]	; (800bc54 <siscanf+0x50>)
 800bc34:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bc38:	462a      	mov	r2, r5
 800bc3a:	4623      	mov	r3, r4
 800bc3c:	a902      	add	r1, sp, #8
 800bc3e:	6800      	ldr	r0, [r0, #0]
 800bc40:	9401      	str	r4, [sp, #4]
 800bc42:	f003 f87d 	bl	800ed40 <__ssvfiscanf_r>
 800bc46:	b01c      	add	sp, #112	; 0x70
 800bc48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bc4c:	b003      	add	sp, #12
 800bc4e:	4770      	bx	lr
 800bc50:	0800bc7b 	.word	0x0800bc7b
 800bc54:	200001a4 	.word	0x200001a4

0800bc58 <__sread>:
 800bc58:	b510      	push	{r4, lr}
 800bc5a:	460c      	mov	r4, r1
 800bc5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bc60:	f003 fb3a 	bl	800f2d8 <_read_r>
 800bc64:	2800      	cmp	r0, #0
 800bc66:	bfab      	itete	ge
 800bc68:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800bc6a:	89a3      	ldrhlt	r3, [r4, #12]
 800bc6c:	181b      	addge	r3, r3, r0
 800bc6e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800bc72:	bfac      	ite	ge
 800bc74:	6563      	strge	r3, [r4, #84]	; 0x54
 800bc76:	81a3      	strhlt	r3, [r4, #12]
 800bc78:	bd10      	pop	{r4, pc}

0800bc7a <__seofread>:
 800bc7a:	2000      	movs	r0, #0
 800bc7c:	4770      	bx	lr

0800bc7e <__swrite>:
 800bc7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc82:	461f      	mov	r7, r3
 800bc84:	898b      	ldrh	r3, [r1, #12]
 800bc86:	4605      	mov	r5, r0
 800bc88:	05db      	lsls	r3, r3, #23
 800bc8a:	460c      	mov	r4, r1
 800bc8c:	4616      	mov	r6, r2
 800bc8e:	d505      	bpl.n	800bc9c <__swrite+0x1e>
 800bc90:	2302      	movs	r3, #2
 800bc92:	2200      	movs	r2, #0
 800bc94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bc98:	f002 f8ba 	bl	800de10 <_lseek_r>
 800bc9c:	89a3      	ldrh	r3, [r4, #12]
 800bc9e:	4632      	mov	r2, r6
 800bca0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800bca4:	81a3      	strh	r3, [r4, #12]
 800bca6:	4628      	mov	r0, r5
 800bca8:	463b      	mov	r3, r7
 800bcaa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800bcae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bcb2:	f000 bea5 	b.w	800ca00 <_write_r>

0800bcb6 <__sseek>:
 800bcb6:	b510      	push	{r4, lr}
 800bcb8:	460c      	mov	r4, r1
 800bcba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bcbe:	f002 f8a7 	bl	800de10 <_lseek_r>
 800bcc2:	1c43      	adds	r3, r0, #1
 800bcc4:	89a3      	ldrh	r3, [r4, #12]
 800bcc6:	bf15      	itete	ne
 800bcc8:	6560      	strne	r0, [r4, #84]	; 0x54
 800bcca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800bcce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800bcd2:	81a3      	strheq	r3, [r4, #12]
 800bcd4:	bf18      	it	ne
 800bcd6:	81a3      	strhne	r3, [r4, #12]
 800bcd8:	bd10      	pop	{r4, pc}

0800bcda <__sclose>:
 800bcda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bcde:	f000 bea1 	b.w	800ca24 <_close_r>

0800bce2 <sulp>:
 800bce2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bce6:	460f      	mov	r7, r1
 800bce8:	4690      	mov	r8, r2
 800bcea:	f002 fc3b 	bl	800e564 <__ulp>
 800bcee:	4604      	mov	r4, r0
 800bcf0:	460d      	mov	r5, r1
 800bcf2:	f1b8 0f00 	cmp.w	r8, #0
 800bcf6:	d011      	beq.n	800bd1c <sulp+0x3a>
 800bcf8:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800bcfc:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800bd00:	2b00      	cmp	r3, #0
 800bd02:	dd0b      	ble.n	800bd1c <sulp+0x3a>
 800bd04:	2400      	movs	r4, #0
 800bd06:	051b      	lsls	r3, r3, #20
 800bd08:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800bd0c:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800bd10:	4622      	mov	r2, r4
 800bd12:	462b      	mov	r3, r5
 800bd14:	f7f4 fc02 	bl	800051c <__aeabi_dmul>
 800bd18:	4604      	mov	r4, r0
 800bd1a:	460d      	mov	r5, r1
 800bd1c:	4620      	mov	r0, r4
 800bd1e:	4629      	mov	r1, r5
 800bd20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd24:	0000      	movs	r0, r0
	...

0800bd28 <_strtod_l>:
 800bd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd2c:	469b      	mov	fp, r3
 800bd2e:	2300      	movs	r3, #0
 800bd30:	b09f      	sub	sp, #124	; 0x7c
 800bd32:	931a      	str	r3, [sp, #104]	; 0x68
 800bd34:	4b9e      	ldr	r3, [pc, #632]	; (800bfb0 <_strtod_l+0x288>)
 800bd36:	4682      	mov	sl, r0
 800bd38:	681f      	ldr	r7, [r3, #0]
 800bd3a:	460e      	mov	r6, r1
 800bd3c:	4638      	mov	r0, r7
 800bd3e:	9215      	str	r2, [sp, #84]	; 0x54
 800bd40:	f7f4 fa28 	bl	8000194 <strlen>
 800bd44:	f04f 0800 	mov.w	r8, #0
 800bd48:	4604      	mov	r4, r0
 800bd4a:	f04f 0900 	mov.w	r9, #0
 800bd4e:	9619      	str	r6, [sp, #100]	; 0x64
 800bd50:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bd52:	781a      	ldrb	r2, [r3, #0]
 800bd54:	2a2b      	cmp	r2, #43	; 0x2b
 800bd56:	d04c      	beq.n	800bdf2 <_strtod_l+0xca>
 800bd58:	d83a      	bhi.n	800bdd0 <_strtod_l+0xa8>
 800bd5a:	2a0d      	cmp	r2, #13
 800bd5c:	d833      	bhi.n	800bdc6 <_strtod_l+0x9e>
 800bd5e:	2a08      	cmp	r2, #8
 800bd60:	d833      	bhi.n	800bdca <_strtod_l+0xa2>
 800bd62:	2a00      	cmp	r2, #0
 800bd64:	d03d      	beq.n	800bde2 <_strtod_l+0xba>
 800bd66:	2300      	movs	r3, #0
 800bd68:	930a      	str	r3, [sp, #40]	; 0x28
 800bd6a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800bd6c:	782b      	ldrb	r3, [r5, #0]
 800bd6e:	2b30      	cmp	r3, #48	; 0x30
 800bd70:	f040 80aa 	bne.w	800bec8 <_strtod_l+0x1a0>
 800bd74:	786b      	ldrb	r3, [r5, #1]
 800bd76:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800bd7a:	2b58      	cmp	r3, #88	; 0x58
 800bd7c:	d166      	bne.n	800be4c <_strtod_l+0x124>
 800bd7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd80:	4650      	mov	r0, sl
 800bd82:	9301      	str	r3, [sp, #4]
 800bd84:	ab1a      	add	r3, sp, #104	; 0x68
 800bd86:	9300      	str	r3, [sp, #0]
 800bd88:	4a8a      	ldr	r2, [pc, #552]	; (800bfb4 <_strtod_l+0x28c>)
 800bd8a:	f8cd b008 	str.w	fp, [sp, #8]
 800bd8e:	ab1b      	add	r3, sp, #108	; 0x6c
 800bd90:	a919      	add	r1, sp, #100	; 0x64
 800bd92:	f001 fd3b 	bl	800d80c <__gethex>
 800bd96:	f010 0607 	ands.w	r6, r0, #7
 800bd9a:	4604      	mov	r4, r0
 800bd9c:	d005      	beq.n	800bdaa <_strtod_l+0x82>
 800bd9e:	2e06      	cmp	r6, #6
 800bda0:	d129      	bne.n	800bdf6 <_strtod_l+0xce>
 800bda2:	2300      	movs	r3, #0
 800bda4:	3501      	adds	r5, #1
 800bda6:	9519      	str	r5, [sp, #100]	; 0x64
 800bda8:	930a      	str	r3, [sp, #40]	; 0x28
 800bdaa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bdac:	2b00      	cmp	r3, #0
 800bdae:	f040 858a 	bne.w	800c8c6 <_strtod_l+0xb9e>
 800bdb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bdb4:	b1d3      	cbz	r3, 800bdec <_strtod_l+0xc4>
 800bdb6:	4642      	mov	r2, r8
 800bdb8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800bdbc:	4610      	mov	r0, r2
 800bdbe:	4619      	mov	r1, r3
 800bdc0:	b01f      	add	sp, #124	; 0x7c
 800bdc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdc6:	2a20      	cmp	r2, #32
 800bdc8:	d1cd      	bne.n	800bd66 <_strtod_l+0x3e>
 800bdca:	3301      	adds	r3, #1
 800bdcc:	9319      	str	r3, [sp, #100]	; 0x64
 800bdce:	e7bf      	b.n	800bd50 <_strtod_l+0x28>
 800bdd0:	2a2d      	cmp	r2, #45	; 0x2d
 800bdd2:	d1c8      	bne.n	800bd66 <_strtod_l+0x3e>
 800bdd4:	2201      	movs	r2, #1
 800bdd6:	920a      	str	r2, [sp, #40]	; 0x28
 800bdd8:	1c5a      	adds	r2, r3, #1
 800bdda:	9219      	str	r2, [sp, #100]	; 0x64
 800bddc:	785b      	ldrb	r3, [r3, #1]
 800bdde:	2b00      	cmp	r3, #0
 800bde0:	d1c3      	bne.n	800bd6a <_strtod_l+0x42>
 800bde2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bde4:	9619      	str	r6, [sp, #100]	; 0x64
 800bde6:	2b00      	cmp	r3, #0
 800bde8:	f040 856b 	bne.w	800c8c2 <_strtod_l+0xb9a>
 800bdec:	4642      	mov	r2, r8
 800bdee:	464b      	mov	r3, r9
 800bdf0:	e7e4      	b.n	800bdbc <_strtod_l+0x94>
 800bdf2:	2200      	movs	r2, #0
 800bdf4:	e7ef      	b.n	800bdd6 <_strtod_l+0xae>
 800bdf6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800bdf8:	b13a      	cbz	r2, 800be0a <_strtod_l+0xe2>
 800bdfa:	2135      	movs	r1, #53	; 0x35
 800bdfc:	a81c      	add	r0, sp, #112	; 0x70
 800bdfe:	f002 fcb5 	bl	800e76c <__copybits>
 800be02:	4650      	mov	r0, sl
 800be04:	991a      	ldr	r1, [sp, #104]	; 0x68
 800be06:	f002 f87d 	bl	800df04 <_Bfree>
 800be0a:	3e01      	subs	r6, #1
 800be0c:	2e04      	cmp	r6, #4
 800be0e:	d806      	bhi.n	800be1e <_strtod_l+0xf6>
 800be10:	e8df f006 	tbb	[pc, r6]
 800be14:	1714030a 	.word	0x1714030a
 800be18:	0a          	.byte	0x0a
 800be19:	00          	.byte	0x00
 800be1a:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 800be1e:	0721      	lsls	r1, r4, #28
 800be20:	d5c3      	bpl.n	800bdaa <_strtod_l+0x82>
 800be22:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800be26:	e7c0      	b.n	800bdaa <_strtod_l+0x82>
 800be28:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800be2a:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 800be2e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800be32:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800be36:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800be3a:	e7f0      	b.n	800be1e <_strtod_l+0xf6>
 800be3c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800bfb8 <_strtod_l+0x290>
 800be40:	e7ed      	b.n	800be1e <_strtod_l+0xf6>
 800be42:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800be46:	f04f 38ff 	mov.w	r8, #4294967295
 800be4a:	e7e8      	b.n	800be1e <_strtod_l+0xf6>
 800be4c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800be4e:	1c5a      	adds	r2, r3, #1
 800be50:	9219      	str	r2, [sp, #100]	; 0x64
 800be52:	785b      	ldrb	r3, [r3, #1]
 800be54:	2b30      	cmp	r3, #48	; 0x30
 800be56:	d0f9      	beq.n	800be4c <_strtod_l+0x124>
 800be58:	2b00      	cmp	r3, #0
 800be5a:	d0a6      	beq.n	800bdaa <_strtod_l+0x82>
 800be5c:	2301      	movs	r3, #1
 800be5e:	9307      	str	r3, [sp, #28]
 800be60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800be62:	220a      	movs	r2, #10
 800be64:	9308      	str	r3, [sp, #32]
 800be66:	2300      	movs	r3, #0
 800be68:	469b      	mov	fp, r3
 800be6a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800be6e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800be70:	7805      	ldrb	r5, [r0, #0]
 800be72:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800be76:	b2d9      	uxtb	r1, r3
 800be78:	2909      	cmp	r1, #9
 800be7a:	d927      	bls.n	800becc <_strtod_l+0x1a4>
 800be7c:	4622      	mov	r2, r4
 800be7e:	4639      	mov	r1, r7
 800be80:	f003 fa8a 	bl	800f398 <strncmp>
 800be84:	2800      	cmp	r0, #0
 800be86:	d033      	beq.n	800bef0 <_strtod_l+0x1c8>
 800be88:	2000      	movs	r0, #0
 800be8a:	462a      	mov	r2, r5
 800be8c:	465c      	mov	r4, fp
 800be8e:	4603      	mov	r3, r0
 800be90:	9004      	str	r0, [sp, #16]
 800be92:	2a65      	cmp	r2, #101	; 0x65
 800be94:	d001      	beq.n	800be9a <_strtod_l+0x172>
 800be96:	2a45      	cmp	r2, #69	; 0x45
 800be98:	d114      	bne.n	800bec4 <_strtod_l+0x19c>
 800be9a:	b91c      	cbnz	r4, 800bea4 <_strtod_l+0x17c>
 800be9c:	9a07      	ldr	r2, [sp, #28]
 800be9e:	4302      	orrs	r2, r0
 800bea0:	d09f      	beq.n	800bde2 <_strtod_l+0xba>
 800bea2:	2400      	movs	r4, #0
 800bea4:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800bea6:	1c72      	adds	r2, r6, #1
 800bea8:	9219      	str	r2, [sp, #100]	; 0x64
 800beaa:	7872      	ldrb	r2, [r6, #1]
 800beac:	2a2b      	cmp	r2, #43	; 0x2b
 800beae:	d079      	beq.n	800bfa4 <_strtod_l+0x27c>
 800beb0:	2a2d      	cmp	r2, #45	; 0x2d
 800beb2:	f000 8083 	beq.w	800bfbc <_strtod_l+0x294>
 800beb6:	2700      	movs	r7, #0
 800beb8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800bebc:	2909      	cmp	r1, #9
 800bebe:	f240 8083 	bls.w	800bfc8 <_strtod_l+0x2a0>
 800bec2:	9619      	str	r6, [sp, #100]	; 0x64
 800bec4:	2500      	movs	r5, #0
 800bec6:	e09f      	b.n	800c008 <_strtod_l+0x2e0>
 800bec8:	2300      	movs	r3, #0
 800beca:	e7c8      	b.n	800be5e <_strtod_l+0x136>
 800becc:	f1bb 0f08 	cmp.w	fp, #8
 800bed0:	bfd5      	itete	le
 800bed2:	9906      	ldrle	r1, [sp, #24]
 800bed4:	9905      	ldrgt	r1, [sp, #20]
 800bed6:	fb02 3301 	mlale	r3, r2, r1, r3
 800beda:	fb02 3301 	mlagt	r3, r2, r1, r3
 800bede:	f100 0001 	add.w	r0, r0, #1
 800bee2:	bfd4      	ite	le
 800bee4:	9306      	strle	r3, [sp, #24]
 800bee6:	9305      	strgt	r3, [sp, #20]
 800bee8:	f10b 0b01 	add.w	fp, fp, #1
 800beec:	9019      	str	r0, [sp, #100]	; 0x64
 800beee:	e7be      	b.n	800be6e <_strtod_l+0x146>
 800bef0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bef2:	191a      	adds	r2, r3, r4
 800bef4:	9219      	str	r2, [sp, #100]	; 0x64
 800bef6:	5d1a      	ldrb	r2, [r3, r4]
 800bef8:	f1bb 0f00 	cmp.w	fp, #0
 800befc:	d036      	beq.n	800bf6c <_strtod_l+0x244>
 800befe:	465c      	mov	r4, fp
 800bf00:	9004      	str	r0, [sp, #16]
 800bf02:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800bf06:	2b09      	cmp	r3, #9
 800bf08:	d912      	bls.n	800bf30 <_strtod_l+0x208>
 800bf0a:	2301      	movs	r3, #1
 800bf0c:	e7c1      	b.n	800be92 <_strtod_l+0x16a>
 800bf0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bf10:	3001      	adds	r0, #1
 800bf12:	1c5a      	adds	r2, r3, #1
 800bf14:	9219      	str	r2, [sp, #100]	; 0x64
 800bf16:	785a      	ldrb	r2, [r3, #1]
 800bf18:	2a30      	cmp	r2, #48	; 0x30
 800bf1a:	d0f8      	beq.n	800bf0e <_strtod_l+0x1e6>
 800bf1c:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800bf20:	2b08      	cmp	r3, #8
 800bf22:	f200 84d5 	bhi.w	800c8d0 <_strtod_l+0xba8>
 800bf26:	9004      	str	r0, [sp, #16]
 800bf28:	2000      	movs	r0, #0
 800bf2a:	4604      	mov	r4, r0
 800bf2c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bf2e:	9308      	str	r3, [sp, #32]
 800bf30:	3a30      	subs	r2, #48	; 0x30
 800bf32:	f100 0301 	add.w	r3, r0, #1
 800bf36:	d013      	beq.n	800bf60 <_strtod_l+0x238>
 800bf38:	9904      	ldr	r1, [sp, #16]
 800bf3a:	1905      	adds	r5, r0, r4
 800bf3c:	4419      	add	r1, r3
 800bf3e:	9104      	str	r1, [sp, #16]
 800bf40:	4623      	mov	r3, r4
 800bf42:	210a      	movs	r1, #10
 800bf44:	42ab      	cmp	r3, r5
 800bf46:	d113      	bne.n	800bf70 <_strtod_l+0x248>
 800bf48:	1823      	adds	r3, r4, r0
 800bf4a:	2b08      	cmp	r3, #8
 800bf4c:	f104 0401 	add.w	r4, r4, #1
 800bf50:	4404      	add	r4, r0
 800bf52:	dc1b      	bgt.n	800bf8c <_strtod_l+0x264>
 800bf54:	230a      	movs	r3, #10
 800bf56:	9906      	ldr	r1, [sp, #24]
 800bf58:	fb03 2301 	mla	r3, r3, r1, r2
 800bf5c:	9306      	str	r3, [sp, #24]
 800bf5e:	2300      	movs	r3, #0
 800bf60:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bf62:	4618      	mov	r0, r3
 800bf64:	1c51      	adds	r1, r2, #1
 800bf66:	9119      	str	r1, [sp, #100]	; 0x64
 800bf68:	7852      	ldrb	r2, [r2, #1]
 800bf6a:	e7ca      	b.n	800bf02 <_strtod_l+0x1da>
 800bf6c:	4658      	mov	r0, fp
 800bf6e:	e7d3      	b.n	800bf18 <_strtod_l+0x1f0>
 800bf70:	2b08      	cmp	r3, #8
 800bf72:	dc04      	bgt.n	800bf7e <_strtod_l+0x256>
 800bf74:	9f06      	ldr	r7, [sp, #24]
 800bf76:	434f      	muls	r7, r1
 800bf78:	9706      	str	r7, [sp, #24]
 800bf7a:	3301      	adds	r3, #1
 800bf7c:	e7e2      	b.n	800bf44 <_strtod_l+0x21c>
 800bf7e:	1c5f      	adds	r7, r3, #1
 800bf80:	2f10      	cmp	r7, #16
 800bf82:	bfde      	ittt	le
 800bf84:	9f05      	ldrle	r7, [sp, #20]
 800bf86:	434f      	mulle	r7, r1
 800bf88:	9705      	strle	r7, [sp, #20]
 800bf8a:	e7f6      	b.n	800bf7a <_strtod_l+0x252>
 800bf8c:	2c10      	cmp	r4, #16
 800bf8e:	bfdf      	itttt	le
 800bf90:	230a      	movle	r3, #10
 800bf92:	9905      	ldrle	r1, [sp, #20]
 800bf94:	fb03 2301 	mlale	r3, r3, r1, r2
 800bf98:	9305      	strle	r3, [sp, #20]
 800bf9a:	e7e0      	b.n	800bf5e <_strtod_l+0x236>
 800bf9c:	2300      	movs	r3, #0
 800bf9e:	9304      	str	r3, [sp, #16]
 800bfa0:	2301      	movs	r3, #1
 800bfa2:	e77b      	b.n	800be9c <_strtod_l+0x174>
 800bfa4:	2700      	movs	r7, #0
 800bfa6:	1cb2      	adds	r2, r6, #2
 800bfa8:	9219      	str	r2, [sp, #100]	; 0x64
 800bfaa:	78b2      	ldrb	r2, [r6, #2]
 800bfac:	e784      	b.n	800beb8 <_strtod_l+0x190>
 800bfae:	bf00      	nop
 800bfb0:	08010fc0 	.word	0x08010fc0
 800bfb4:	08010d78 	.word	0x08010d78
 800bfb8:	7ff00000 	.word	0x7ff00000
 800bfbc:	2701      	movs	r7, #1
 800bfbe:	e7f2      	b.n	800bfa6 <_strtod_l+0x27e>
 800bfc0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bfc2:	1c51      	adds	r1, r2, #1
 800bfc4:	9119      	str	r1, [sp, #100]	; 0x64
 800bfc6:	7852      	ldrb	r2, [r2, #1]
 800bfc8:	2a30      	cmp	r2, #48	; 0x30
 800bfca:	d0f9      	beq.n	800bfc0 <_strtod_l+0x298>
 800bfcc:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800bfd0:	2908      	cmp	r1, #8
 800bfd2:	f63f af77 	bhi.w	800bec4 <_strtod_l+0x19c>
 800bfd6:	f04f 0e0a 	mov.w	lr, #10
 800bfda:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800bfde:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bfe0:	9209      	str	r2, [sp, #36]	; 0x24
 800bfe2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bfe4:	1c51      	adds	r1, r2, #1
 800bfe6:	9119      	str	r1, [sp, #100]	; 0x64
 800bfe8:	7852      	ldrb	r2, [r2, #1]
 800bfea:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800bfee:	2d09      	cmp	r5, #9
 800bff0:	d935      	bls.n	800c05e <_strtod_l+0x336>
 800bff2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800bff4:	1b49      	subs	r1, r1, r5
 800bff6:	2908      	cmp	r1, #8
 800bff8:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800bffc:	dc02      	bgt.n	800c004 <_strtod_l+0x2dc>
 800bffe:	4565      	cmp	r5, ip
 800c000:	bfa8      	it	ge
 800c002:	4665      	movge	r5, ip
 800c004:	b107      	cbz	r7, 800c008 <_strtod_l+0x2e0>
 800c006:	426d      	negs	r5, r5
 800c008:	2c00      	cmp	r4, #0
 800c00a:	d14c      	bne.n	800c0a6 <_strtod_l+0x37e>
 800c00c:	9907      	ldr	r1, [sp, #28]
 800c00e:	4301      	orrs	r1, r0
 800c010:	f47f aecb 	bne.w	800bdaa <_strtod_l+0x82>
 800c014:	2b00      	cmp	r3, #0
 800c016:	f47f aee4 	bne.w	800bde2 <_strtod_l+0xba>
 800c01a:	2a69      	cmp	r2, #105	; 0x69
 800c01c:	d026      	beq.n	800c06c <_strtod_l+0x344>
 800c01e:	dc23      	bgt.n	800c068 <_strtod_l+0x340>
 800c020:	2a49      	cmp	r2, #73	; 0x49
 800c022:	d023      	beq.n	800c06c <_strtod_l+0x344>
 800c024:	2a4e      	cmp	r2, #78	; 0x4e
 800c026:	f47f aedc 	bne.w	800bde2 <_strtod_l+0xba>
 800c02a:	499d      	ldr	r1, [pc, #628]	; (800c2a0 <_strtod_l+0x578>)
 800c02c:	a819      	add	r0, sp, #100	; 0x64
 800c02e:	f001 fe3b 	bl	800dca8 <__match>
 800c032:	2800      	cmp	r0, #0
 800c034:	f43f aed5 	beq.w	800bde2 <_strtod_l+0xba>
 800c038:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c03a:	781b      	ldrb	r3, [r3, #0]
 800c03c:	2b28      	cmp	r3, #40	; 0x28
 800c03e:	d12c      	bne.n	800c09a <_strtod_l+0x372>
 800c040:	4998      	ldr	r1, [pc, #608]	; (800c2a4 <_strtod_l+0x57c>)
 800c042:	aa1c      	add	r2, sp, #112	; 0x70
 800c044:	a819      	add	r0, sp, #100	; 0x64
 800c046:	f001 fe43 	bl	800dcd0 <__hexnan>
 800c04a:	2805      	cmp	r0, #5
 800c04c:	d125      	bne.n	800c09a <_strtod_l+0x372>
 800c04e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800c050:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800c054:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800c058:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800c05c:	e6a5      	b.n	800bdaa <_strtod_l+0x82>
 800c05e:	fb0e 2c0c 	mla	ip, lr, ip, r2
 800c062:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800c066:	e7bc      	b.n	800bfe2 <_strtod_l+0x2ba>
 800c068:	2a6e      	cmp	r2, #110	; 0x6e
 800c06a:	e7dc      	b.n	800c026 <_strtod_l+0x2fe>
 800c06c:	498e      	ldr	r1, [pc, #568]	; (800c2a8 <_strtod_l+0x580>)
 800c06e:	a819      	add	r0, sp, #100	; 0x64
 800c070:	f001 fe1a 	bl	800dca8 <__match>
 800c074:	2800      	cmp	r0, #0
 800c076:	f43f aeb4 	beq.w	800bde2 <_strtod_l+0xba>
 800c07a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c07c:	498b      	ldr	r1, [pc, #556]	; (800c2ac <_strtod_l+0x584>)
 800c07e:	3b01      	subs	r3, #1
 800c080:	a819      	add	r0, sp, #100	; 0x64
 800c082:	9319      	str	r3, [sp, #100]	; 0x64
 800c084:	f001 fe10 	bl	800dca8 <__match>
 800c088:	b910      	cbnz	r0, 800c090 <_strtod_l+0x368>
 800c08a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c08c:	3301      	adds	r3, #1
 800c08e:	9319      	str	r3, [sp, #100]	; 0x64
 800c090:	f04f 0800 	mov.w	r8, #0
 800c094:	f8df 9218 	ldr.w	r9, [pc, #536]	; 800c2b0 <_strtod_l+0x588>
 800c098:	e687      	b.n	800bdaa <_strtod_l+0x82>
 800c09a:	4886      	ldr	r0, [pc, #536]	; (800c2b4 <_strtod_l+0x58c>)
 800c09c:	f003 f92e 	bl	800f2fc <nan>
 800c0a0:	4680      	mov	r8, r0
 800c0a2:	4689      	mov	r9, r1
 800c0a4:	e681      	b.n	800bdaa <_strtod_l+0x82>
 800c0a6:	9b04      	ldr	r3, [sp, #16]
 800c0a8:	f1bb 0f00 	cmp.w	fp, #0
 800c0ac:	bf08      	it	eq
 800c0ae:	46a3      	moveq	fp, r4
 800c0b0:	1aeb      	subs	r3, r5, r3
 800c0b2:	2c10      	cmp	r4, #16
 800c0b4:	9806      	ldr	r0, [sp, #24]
 800c0b6:	4626      	mov	r6, r4
 800c0b8:	9307      	str	r3, [sp, #28]
 800c0ba:	bfa8      	it	ge
 800c0bc:	2610      	movge	r6, #16
 800c0be:	f7f4 f9b3 	bl	8000428 <__aeabi_ui2d>
 800c0c2:	2c09      	cmp	r4, #9
 800c0c4:	4680      	mov	r8, r0
 800c0c6:	4689      	mov	r9, r1
 800c0c8:	dd13      	ble.n	800c0f2 <_strtod_l+0x3ca>
 800c0ca:	4b7b      	ldr	r3, [pc, #492]	; (800c2b8 <_strtod_l+0x590>)
 800c0cc:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800c0d0:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800c0d4:	f7f4 fa22 	bl	800051c <__aeabi_dmul>
 800c0d8:	4680      	mov	r8, r0
 800c0da:	9805      	ldr	r0, [sp, #20]
 800c0dc:	4689      	mov	r9, r1
 800c0de:	f7f4 f9a3 	bl	8000428 <__aeabi_ui2d>
 800c0e2:	4602      	mov	r2, r0
 800c0e4:	460b      	mov	r3, r1
 800c0e6:	4640      	mov	r0, r8
 800c0e8:	4649      	mov	r1, r9
 800c0ea:	f7f4 f861 	bl	80001b0 <__adddf3>
 800c0ee:	4680      	mov	r8, r0
 800c0f0:	4689      	mov	r9, r1
 800c0f2:	2c0f      	cmp	r4, #15
 800c0f4:	dc36      	bgt.n	800c164 <_strtod_l+0x43c>
 800c0f6:	9b07      	ldr	r3, [sp, #28]
 800c0f8:	2b00      	cmp	r3, #0
 800c0fa:	f43f ae56 	beq.w	800bdaa <_strtod_l+0x82>
 800c0fe:	dd22      	ble.n	800c146 <_strtod_l+0x41e>
 800c100:	2b16      	cmp	r3, #22
 800c102:	dc09      	bgt.n	800c118 <_strtod_l+0x3f0>
 800c104:	496c      	ldr	r1, [pc, #432]	; (800c2b8 <_strtod_l+0x590>)
 800c106:	4642      	mov	r2, r8
 800c108:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c10c:	464b      	mov	r3, r9
 800c10e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c112:	f7f4 fa03 	bl	800051c <__aeabi_dmul>
 800c116:	e7c3      	b.n	800c0a0 <_strtod_l+0x378>
 800c118:	9a07      	ldr	r2, [sp, #28]
 800c11a:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800c11e:	4293      	cmp	r3, r2
 800c120:	db20      	blt.n	800c164 <_strtod_l+0x43c>
 800c122:	4d65      	ldr	r5, [pc, #404]	; (800c2b8 <_strtod_l+0x590>)
 800c124:	f1c4 040f 	rsb	r4, r4, #15
 800c128:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 800c12c:	4642      	mov	r2, r8
 800c12e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c132:	464b      	mov	r3, r9
 800c134:	f7f4 f9f2 	bl	800051c <__aeabi_dmul>
 800c138:	9b07      	ldr	r3, [sp, #28]
 800c13a:	1b1c      	subs	r4, r3, r4
 800c13c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800c140:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c144:	e7e5      	b.n	800c112 <_strtod_l+0x3ea>
 800c146:	9b07      	ldr	r3, [sp, #28]
 800c148:	3316      	adds	r3, #22
 800c14a:	db0b      	blt.n	800c164 <_strtod_l+0x43c>
 800c14c:	9b04      	ldr	r3, [sp, #16]
 800c14e:	4640      	mov	r0, r8
 800c150:	1b5d      	subs	r5, r3, r5
 800c152:	4b59      	ldr	r3, [pc, #356]	; (800c2b8 <_strtod_l+0x590>)
 800c154:	4649      	mov	r1, r9
 800c156:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800c15a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c15e:	f7f4 fb07 	bl	8000770 <__aeabi_ddiv>
 800c162:	e79d      	b.n	800c0a0 <_strtod_l+0x378>
 800c164:	9b07      	ldr	r3, [sp, #28]
 800c166:	1ba6      	subs	r6, r4, r6
 800c168:	441e      	add	r6, r3
 800c16a:	2e00      	cmp	r6, #0
 800c16c:	dd74      	ble.n	800c258 <_strtod_l+0x530>
 800c16e:	f016 030f 	ands.w	r3, r6, #15
 800c172:	d00a      	beq.n	800c18a <_strtod_l+0x462>
 800c174:	4950      	ldr	r1, [pc, #320]	; (800c2b8 <_strtod_l+0x590>)
 800c176:	4642      	mov	r2, r8
 800c178:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c17c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c180:	464b      	mov	r3, r9
 800c182:	f7f4 f9cb 	bl	800051c <__aeabi_dmul>
 800c186:	4680      	mov	r8, r0
 800c188:	4689      	mov	r9, r1
 800c18a:	f036 060f 	bics.w	r6, r6, #15
 800c18e:	d052      	beq.n	800c236 <_strtod_l+0x50e>
 800c190:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800c194:	dd27      	ble.n	800c1e6 <_strtod_l+0x4be>
 800c196:	f04f 0b00 	mov.w	fp, #0
 800c19a:	f8cd b010 	str.w	fp, [sp, #16]
 800c19e:	f8cd b020 	str.w	fp, [sp, #32]
 800c1a2:	f8cd b018 	str.w	fp, [sp, #24]
 800c1a6:	2322      	movs	r3, #34	; 0x22
 800c1a8:	f04f 0800 	mov.w	r8, #0
 800c1ac:	f8df 9100 	ldr.w	r9, [pc, #256]	; 800c2b0 <_strtod_l+0x588>
 800c1b0:	f8ca 3000 	str.w	r3, [sl]
 800c1b4:	9b08      	ldr	r3, [sp, #32]
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	f43f adf7 	beq.w	800bdaa <_strtod_l+0x82>
 800c1bc:	4650      	mov	r0, sl
 800c1be:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c1c0:	f001 fea0 	bl	800df04 <_Bfree>
 800c1c4:	4650      	mov	r0, sl
 800c1c6:	9906      	ldr	r1, [sp, #24]
 800c1c8:	f001 fe9c 	bl	800df04 <_Bfree>
 800c1cc:	4650      	mov	r0, sl
 800c1ce:	9904      	ldr	r1, [sp, #16]
 800c1d0:	f001 fe98 	bl	800df04 <_Bfree>
 800c1d4:	4650      	mov	r0, sl
 800c1d6:	9908      	ldr	r1, [sp, #32]
 800c1d8:	f001 fe94 	bl	800df04 <_Bfree>
 800c1dc:	4659      	mov	r1, fp
 800c1de:	4650      	mov	r0, sl
 800c1e0:	f001 fe90 	bl	800df04 <_Bfree>
 800c1e4:	e5e1      	b.n	800bdaa <_strtod_l+0x82>
 800c1e6:	4b35      	ldr	r3, [pc, #212]	; (800c2bc <_strtod_l+0x594>)
 800c1e8:	4640      	mov	r0, r8
 800c1ea:	9305      	str	r3, [sp, #20]
 800c1ec:	2300      	movs	r3, #0
 800c1ee:	4649      	mov	r1, r9
 800c1f0:	461f      	mov	r7, r3
 800c1f2:	1136      	asrs	r6, r6, #4
 800c1f4:	2e01      	cmp	r6, #1
 800c1f6:	dc21      	bgt.n	800c23c <_strtod_l+0x514>
 800c1f8:	b10b      	cbz	r3, 800c1fe <_strtod_l+0x4d6>
 800c1fa:	4680      	mov	r8, r0
 800c1fc:	4689      	mov	r9, r1
 800c1fe:	4b2f      	ldr	r3, [pc, #188]	; (800c2bc <_strtod_l+0x594>)
 800c200:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800c204:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800c208:	4642      	mov	r2, r8
 800c20a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800c20e:	464b      	mov	r3, r9
 800c210:	f7f4 f984 	bl	800051c <__aeabi_dmul>
 800c214:	4b26      	ldr	r3, [pc, #152]	; (800c2b0 <_strtod_l+0x588>)
 800c216:	460a      	mov	r2, r1
 800c218:	400b      	ands	r3, r1
 800c21a:	4929      	ldr	r1, [pc, #164]	; (800c2c0 <_strtod_l+0x598>)
 800c21c:	4680      	mov	r8, r0
 800c21e:	428b      	cmp	r3, r1
 800c220:	d8b9      	bhi.n	800c196 <_strtod_l+0x46e>
 800c222:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800c226:	428b      	cmp	r3, r1
 800c228:	bf86      	itte	hi
 800c22a:	f04f 38ff 	movhi.w	r8, #4294967295
 800c22e:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 800c2c4 <_strtod_l+0x59c>
 800c232:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800c236:	2300      	movs	r3, #0
 800c238:	9305      	str	r3, [sp, #20]
 800c23a:	e07f      	b.n	800c33c <_strtod_l+0x614>
 800c23c:	07f2      	lsls	r2, r6, #31
 800c23e:	d505      	bpl.n	800c24c <_strtod_l+0x524>
 800c240:	9b05      	ldr	r3, [sp, #20]
 800c242:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c246:	f7f4 f969 	bl	800051c <__aeabi_dmul>
 800c24a:	2301      	movs	r3, #1
 800c24c:	9a05      	ldr	r2, [sp, #20]
 800c24e:	3701      	adds	r7, #1
 800c250:	3208      	adds	r2, #8
 800c252:	1076      	asrs	r6, r6, #1
 800c254:	9205      	str	r2, [sp, #20]
 800c256:	e7cd      	b.n	800c1f4 <_strtod_l+0x4cc>
 800c258:	d0ed      	beq.n	800c236 <_strtod_l+0x50e>
 800c25a:	4276      	negs	r6, r6
 800c25c:	f016 020f 	ands.w	r2, r6, #15
 800c260:	d00a      	beq.n	800c278 <_strtod_l+0x550>
 800c262:	4b15      	ldr	r3, [pc, #84]	; (800c2b8 <_strtod_l+0x590>)
 800c264:	4640      	mov	r0, r8
 800c266:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c26a:	4649      	mov	r1, r9
 800c26c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c270:	f7f4 fa7e 	bl	8000770 <__aeabi_ddiv>
 800c274:	4680      	mov	r8, r0
 800c276:	4689      	mov	r9, r1
 800c278:	1136      	asrs	r6, r6, #4
 800c27a:	d0dc      	beq.n	800c236 <_strtod_l+0x50e>
 800c27c:	2e1f      	cmp	r6, #31
 800c27e:	dd23      	ble.n	800c2c8 <_strtod_l+0x5a0>
 800c280:	f04f 0b00 	mov.w	fp, #0
 800c284:	f8cd b010 	str.w	fp, [sp, #16]
 800c288:	f8cd b020 	str.w	fp, [sp, #32]
 800c28c:	f8cd b018 	str.w	fp, [sp, #24]
 800c290:	2322      	movs	r3, #34	; 0x22
 800c292:	f04f 0800 	mov.w	r8, #0
 800c296:	f04f 0900 	mov.w	r9, #0
 800c29a:	f8ca 3000 	str.w	r3, [sl]
 800c29e:	e789      	b.n	800c1b4 <_strtod_l+0x48c>
 800c2a0:	08010d4d 	.word	0x08010d4d
 800c2a4:	08010d8c 	.word	0x08010d8c
 800c2a8:	08010d45 	.word	0x08010d45
 800c2ac:	08010ecc 	.word	0x08010ecc
 800c2b0:	7ff00000 	.word	0x7ff00000
 800c2b4:	08011193 	.word	0x08011193
 800c2b8:	08011058 	.word	0x08011058
 800c2bc:	08011030 	.word	0x08011030
 800c2c0:	7ca00000 	.word	0x7ca00000
 800c2c4:	7fefffff 	.word	0x7fefffff
 800c2c8:	f016 0310 	ands.w	r3, r6, #16
 800c2cc:	bf18      	it	ne
 800c2ce:	236a      	movne	r3, #106	; 0x6a
 800c2d0:	4640      	mov	r0, r8
 800c2d2:	9305      	str	r3, [sp, #20]
 800c2d4:	4649      	mov	r1, r9
 800c2d6:	2300      	movs	r3, #0
 800c2d8:	4fb0      	ldr	r7, [pc, #704]	; (800c59c <_strtod_l+0x874>)
 800c2da:	07f2      	lsls	r2, r6, #31
 800c2dc:	d504      	bpl.n	800c2e8 <_strtod_l+0x5c0>
 800c2de:	e9d7 2300 	ldrd	r2, r3, [r7]
 800c2e2:	f7f4 f91b 	bl	800051c <__aeabi_dmul>
 800c2e6:	2301      	movs	r3, #1
 800c2e8:	1076      	asrs	r6, r6, #1
 800c2ea:	f107 0708 	add.w	r7, r7, #8
 800c2ee:	d1f4      	bne.n	800c2da <_strtod_l+0x5b2>
 800c2f0:	b10b      	cbz	r3, 800c2f6 <_strtod_l+0x5ce>
 800c2f2:	4680      	mov	r8, r0
 800c2f4:	4689      	mov	r9, r1
 800c2f6:	9b05      	ldr	r3, [sp, #20]
 800c2f8:	b1c3      	cbz	r3, 800c32c <_strtod_l+0x604>
 800c2fa:	f3c9 520a 	ubfx	r2, r9, #20, #11
 800c2fe:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800c302:	2b00      	cmp	r3, #0
 800c304:	4649      	mov	r1, r9
 800c306:	dd11      	ble.n	800c32c <_strtod_l+0x604>
 800c308:	2b1f      	cmp	r3, #31
 800c30a:	f340 8127 	ble.w	800c55c <_strtod_l+0x834>
 800c30e:	2b34      	cmp	r3, #52	; 0x34
 800c310:	bfd8      	it	le
 800c312:	f04f 33ff 	movle.w	r3, #4294967295
 800c316:	f04f 0800 	mov.w	r8, #0
 800c31a:	bfcf      	iteee	gt
 800c31c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800c320:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800c324:	fa03 f202 	lslle.w	r2, r3, r2
 800c328:	ea02 0901 	andle.w	r9, r2, r1
 800c32c:	2200      	movs	r2, #0
 800c32e:	2300      	movs	r3, #0
 800c330:	4640      	mov	r0, r8
 800c332:	4649      	mov	r1, r9
 800c334:	f7f4 fb5a 	bl	80009ec <__aeabi_dcmpeq>
 800c338:	2800      	cmp	r0, #0
 800c33a:	d1a1      	bne.n	800c280 <_strtod_l+0x558>
 800c33c:	9b06      	ldr	r3, [sp, #24]
 800c33e:	465a      	mov	r2, fp
 800c340:	9300      	str	r3, [sp, #0]
 800c342:	4650      	mov	r0, sl
 800c344:	4623      	mov	r3, r4
 800c346:	9908      	ldr	r1, [sp, #32]
 800c348:	f001 fe44 	bl	800dfd4 <__s2b>
 800c34c:	9008      	str	r0, [sp, #32]
 800c34e:	2800      	cmp	r0, #0
 800c350:	f43f af21 	beq.w	800c196 <_strtod_l+0x46e>
 800c354:	9b04      	ldr	r3, [sp, #16]
 800c356:	f04f 0b00 	mov.w	fp, #0
 800c35a:	1b5d      	subs	r5, r3, r5
 800c35c:	9b07      	ldr	r3, [sp, #28]
 800c35e:	f8cd b010 	str.w	fp, [sp, #16]
 800c362:	2b00      	cmp	r3, #0
 800c364:	bfb4      	ite	lt
 800c366:	462b      	movlt	r3, r5
 800c368:	2300      	movge	r3, #0
 800c36a:	930e      	str	r3, [sp, #56]	; 0x38
 800c36c:	9b07      	ldr	r3, [sp, #28]
 800c36e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c372:	9314      	str	r3, [sp, #80]	; 0x50
 800c374:	9b08      	ldr	r3, [sp, #32]
 800c376:	4650      	mov	r0, sl
 800c378:	6859      	ldr	r1, [r3, #4]
 800c37a:	f001 fd83 	bl	800de84 <_Balloc>
 800c37e:	9006      	str	r0, [sp, #24]
 800c380:	2800      	cmp	r0, #0
 800c382:	f43f af10 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c386:	9b08      	ldr	r3, [sp, #32]
 800c388:	300c      	adds	r0, #12
 800c38a:	691a      	ldr	r2, [r3, #16]
 800c38c:	f103 010c 	add.w	r1, r3, #12
 800c390:	3202      	adds	r2, #2
 800c392:	0092      	lsls	r2, r2, #2
 800c394:	f7fe fd8e 	bl	800aeb4 <memcpy>
 800c398:	ab1c      	add	r3, sp, #112	; 0x70
 800c39a:	9301      	str	r3, [sp, #4]
 800c39c:	ab1b      	add	r3, sp, #108	; 0x6c
 800c39e:	9300      	str	r3, [sp, #0]
 800c3a0:	4642      	mov	r2, r8
 800c3a2:	464b      	mov	r3, r9
 800c3a4:	4650      	mov	r0, sl
 800c3a6:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 800c3aa:	f002 f955 	bl	800e658 <__d2b>
 800c3ae:	901a      	str	r0, [sp, #104]	; 0x68
 800c3b0:	2800      	cmp	r0, #0
 800c3b2:	f43f aef8 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c3b6:	2101      	movs	r1, #1
 800c3b8:	4650      	mov	r0, sl
 800c3ba:	f001 fea3 	bl	800e104 <__i2b>
 800c3be:	4603      	mov	r3, r0
 800c3c0:	9004      	str	r0, [sp, #16]
 800c3c2:	2800      	cmp	r0, #0
 800c3c4:	f43f aeef 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c3c8:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c3ca:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c3cc:	2d00      	cmp	r5, #0
 800c3ce:	bfab      	itete	ge
 800c3d0:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 800c3d2:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 800c3d4:	18ee      	addge	r6, r5, r3
 800c3d6:	1b5c      	sublt	r4, r3, r5
 800c3d8:	9b05      	ldr	r3, [sp, #20]
 800c3da:	bfa8      	it	ge
 800c3dc:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 800c3de:	eba5 0503 	sub.w	r5, r5, r3
 800c3e2:	4415      	add	r5, r2
 800c3e4:	4b6e      	ldr	r3, [pc, #440]	; (800c5a0 <_strtod_l+0x878>)
 800c3e6:	f105 35ff 	add.w	r5, r5, #4294967295
 800c3ea:	bfb8      	it	lt
 800c3ec:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800c3ee:	429d      	cmp	r5, r3
 800c3f0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800c3f4:	f280 80c4 	bge.w	800c580 <_strtod_l+0x858>
 800c3f8:	1b5b      	subs	r3, r3, r5
 800c3fa:	2b1f      	cmp	r3, #31
 800c3fc:	f04f 0701 	mov.w	r7, #1
 800c400:	eba2 0203 	sub.w	r2, r2, r3
 800c404:	f300 80b1 	bgt.w	800c56a <_strtod_l+0x842>
 800c408:	2500      	movs	r5, #0
 800c40a:	fa07 f303 	lsl.w	r3, r7, r3
 800c40e:	930f      	str	r3, [sp, #60]	; 0x3c
 800c410:	18b7      	adds	r7, r6, r2
 800c412:	9b05      	ldr	r3, [sp, #20]
 800c414:	42be      	cmp	r6, r7
 800c416:	4414      	add	r4, r2
 800c418:	441c      	add	r4, r3
 800c41a:	4633      	mov	r3, r6
 800c41c:	bfa8      	it	ge
 800c41e:	463b      	movge	r3, r7
 800c420:	42a3      	cmp	r3, r4
 800c422:	bfa8      	it	ge
 800c424:	4623      	movge	r3, r4
 800c426:	2b00      	cmp	r3, #0
 800c428:	bfc2      	ittt	gt
 800c42a:	1aff      	subgt	r7, r7, r3
 800c42c:	1ae4      	subgt	r4, r4, r3
 800c42e:	1af6      	subgt	r6, r6, r3
 800c430:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c432:	2b00      	cmp	r3, #0
 800c434:	dd17      	ble.n	800c466 <_strtod_l+0x73e>
 800c436:	461a      	mov	r2, r3
 800c438:	4650      	mov	r0, sl
 800c43a:	9904      	ldr	r1, [sp, #16]
 800c43c:	f001 ff20 	bl	800e280 <__pow5mult>
 800c440:	9004      	str	r0, [sp, #16]
 800c442:	2800      	cmp	r0, #0
 800c444:	f43f aeaf 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c448:	4601      	mov	r1, r0
 800c44a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c44c:	4650      	mov	r0, sl
 800c44e:	f001 fe6f 	bl	800e130 <__multiply>
 800c452:	9009      	str	r0, [sp, #36]	; 0x24
 800c454:	2800      	cmp	r0, #0
 800c456:	f43f aea6 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c45a:	4650      	mov	r0, sl
 800c45c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c45e:	f001 fd51 	bl	800df04 <_Bfree>
 800c462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c464:	931a      	str	r3, [sp, #104]	; 0x68
 800c466:	2f00      	cmp	r7, #0
 800c468:	f300 808e 	bgt.w	800c588 <_strtod_l+0x860>
 800c46c:	9b07      	ldr	r3, [sp, #28]
 800c46e:	2b00      	cmp	r3, #0
 800c470:	dd08      	ble.n	800c484 <_strtod_l+0x75c>
 800c472:	4650      	mov	r0, sl
 800c474:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c476:	9906      	ldr	r1, [sp, #24]
 800c478:	f001 ff02 	bl	800e280 <__pow5mult>
 800c47c:	9006      	str	r0, [sp, #24]
 800c47e:	2800      	cmp	r0, #0
 800c480:	f43f ae91 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c484:	2c00      	cmp	r4, #0
 800c486:	dd08      	ble.n	800c49a <_strtod_l+0x772>
 800c488:	4622      	mov	r2, r4
 800c48a:	4650      	mov	r0, sl
 800c48c:	9906      	ldr	r1, [sp, #24]
 800c48e:	f001 ff51 	bl	800e334 <__lshift>
 800c492:	9006      	str	r0, [sp, #24]
 800c494:	2800      	cmp	r0, #0
 800c496:	f43f ae86 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c49a:	2e00      	cmp	r6, #0
 800c49c:	dd08      	ble.n	800c4b0 <_strtod_l+0x788>
 800c49e:	4632      	mov	r2, r6
 800c4a0:	4650      	mov	r0, sl
 800c4a2:	9904      	ldr	r1, [sp, #16]
 800c4a4:	f001 ff46 	bl	800e334 <__lshift>
 800c4a8:	9004      	str	r0, [sp, #16]
 800c4aa:	2800      	cmp	r0, #0
 800c4ac:	f43f ae7b 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c4b0:	4650      	mov	r0, sl
 800c4b2:	9a06      	ldr	r2, [sp, #24]
 800c4b4:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c4b6:	f001 ffc9 	bl	800e44c <__mdiff>
 800c4ba:	4683      	mov	fp, r0
 800c4bc:	2800      	cmp	r0, #0
 800c4be:	f43f ae72 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c4c2:	2400      	movs	r4, #0
 800c4c4:	68c3      	ldr	r3, [r0, #12]
 800c4c6:	9904      	ldr	r1, [sp, #16]
 800c4c8:	60c4      	str	r4, [r0, #12]
 800c4ca:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4cc:	f001 ffa2 	bl	800e414 <__mcmp>
 800c4d0:	42a0      	cmp	r0, r4
 800c4d2:	da6b      	bge.n	800c5ac <_strtod_l+0x884>
 800c4d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c4d6:	ea53 0308 	orrs.w	r3, r3, r8
 800c4da:	f040 8091 	bne.w	800c600 <_strtod_l+0x8d8>
 800c4de:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c4e2:	2b00      	cmp	r3, #0
 800c4e4:	f040 808c 	bne.w	800c600 <_strtod_l+0x8d8>
 800c4e8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c4ec:	0d1b      	lsrs	r3, r3, #20
 800c4ee:	051b      	lsls	r3, r3, #20
 800c4f0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800c4f4:	f240 8084 	bls.w	800c600 <_strtod_l+0x8d8>
 800c4f8:	f8db 3014 	ldr.w	r3, [fp, #20]
 800c4fc:	b91b      	cbnz	r3, 800c506 <_strtod_l+0x7de>
 800c4fe:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c502:	2b01      	cmp	r3, #1
 800c504:	dd7c      	ble.n	800c600 <_strtod_l+0x8d8>
 800c506:	4659      	mov	r1, fp
 800c508:	2201      	movs	r2, #1
 800c50a:	4650      	mov	r0, sl
 800c50c:	f001 ff12 	bl	800e334 <__lshift>
 800c510:	9904      	ldr	r1, [sp, #16]
 800c512:	4683      	mov	fp, r0
 800c514:	f001 ff7e 	bl	800e414 <__mcmp>
 800c518:	2800      	cmp	r0, #0
 800c51a:	dd71      	ble.n	800c600 <_strtod_l+0x8d8>
 800c51c:	9905      	ldr	r1, [sp, #20]
 800c51e:	464b      	mov	r3, r9
 800c520:	4a20      	ldr	r2, [pc, #128]	; (800c5a4 <_strtod_l+0x87c>)
 800c522:	2900      	cmp	r1, #0
 800c524:	f000 808c 	beq.w	800c640 <_strtod_l+0x918>
 800c528:	ea02 0109 	and.w	r1, r2, r9
 800c52c:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800c530:	f300 8086 	bgt.w	800c640 <_strtod_l+0x918>
 800c534:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800c538:	f77f aeaa 	ble.w	800c290 <_strtod_l+0x568>
 800c53c:	4640      	mov	r0, r8
 800c53e:	4649      	mov	r1, r9
 800c540:	4b19      	ldr	r3, [pc, #100]	; (800c5a8 <_strtod_l+0x880>)
 800c542:	2200      	movs	r2, #0
 800c544:	f7f3 ffea 	bl	800051c <__aeabi_dmul>
 800c548:	460b      	mov	r3, r1
 800c54a:	4303      	orrs	r3, r0
 800c54c:	bf08      	it	eq
 800c54e:	2322      	moveq	r3, #34	; 0x22
 800c550:	4680      	mov	r8, r0
 800c552:	4689      	mov	r9, r1
 800c554:	bf08      	it	eq
 800c556:	f8ca 3000 	streq.w	r3, [sl]
 800c55a:	e62f      	b.n	800c1bc <_strtod_l+0x494>
 800c55c:	f04f 32ff 	mov.w	r2, #4294967295
 800c560:	fa02 f303 	lsl.w	r3, r2, r3
 800c564:	ea03 0808 	and.w	r8, r3, r8
 800c568:	e6e0      	b.n	800c32c <_strtod_l+0x604>
 800c56a:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800c56e:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800c572:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800c576:	35e2      	adds	r5, #226	; 0xe2
 800c578:	fa07 f505 	lsl.w	r5, r7, r5
 800c57c:	970f      	str	r7, [sp, #60]	; 0x3c
 800c57e:	e747      	b.n	800c410 <_strtod_l+0x6e8>
 800c580:	2301      	movs	r3, #1
 800c582:	2500      	movs	r5, #0
 800c584:	930f      	str	r3, [sp, #60]	; 0x3c
 800c586:	e743      	b.n	800c410 <_strtod_l+0x6e8>
 800c588:	463a      	mov	r2, r7
 800c58a:	4650      	mov	r0, sl
 800c58c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c58e:	f001 fed1 	bl	800e334 <__lshift>
 800c592:	901a      	str	r0, [sp, #104]	; 0x68
 800c594:	2800      	cmp	r0, #0
 800c596:	f47f af69 	bne.w	800c46c <_strtod_l+0x744>
 800c59a:	e604      	b.n	800c1a6 <_strtod_l+0x47e>
 800c59c:	08010da0 	.word	0x08010da0
 800c5a0:	fffffc02 	.word	0xfffffc02
 800c5a4:	7ff00000 	.word	0x7ff00000
 800c5a8:	39500000 	.word	0x39500000
 800c5ac:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800c5b0:	d165      	bne.n	800c67e <_strtod_l+0x956>
 800c5b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c5b4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c5b8:	b35a      	cbz	r2, 800c612 <_strtod_l+0x8ea>
 800c5ba:	4a99      	ldr	r2, [pc, #612]	; (800c820 <_strtod_l+0xaf8>)
 800c5bc:	4293      	cmp	r3, r2
 800c5be:	d12b      	bne.n	800c618 <_strtod_l+0x8f0>
 800c5c0:	9b05      	ldr	r3, [sp, #20]
 800c5c2:	4641      	mov	r1, r8
 800c5c4:	b303      	cbz	r3, 800c608 <_strtod_l+0x8e0>
 800c5c6:	464a      	mov	r2, r9
 800c5c8:	4b96      	ldr	r3, [pc, #600]	; (800c824 <_strtod_l+0xafc>)
 800c5ca:	4013      	ands	r3, r2
 800c5cc:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c5d0:	f04f 32ff 	mov.w	r2, #4294967295
 800c5d4:	d81b      	bhi.n	800c60e <_strtod_l+0x8e6>
 800c5d6:	0d1b      	lsrs	r3, r3, #20
 800c5d8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800c5dc:	fa02 f303 	lsl.w	r3, r2, r3
 800c5e0:	4299      	cmp	r1, r3
 800c5e2:	d119      	bne.n	800c618 <_strtod_l+0x8f0>
 800c5e4:	4b90      	ldr	r3, [pc, #576]	; (800c828 <_strtod_l+0xb00>)
 800c5e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c5e8:	429a      	cmp	r2, r3
 800c5ea:	d102      	bne.n	800c5f2 <_strtod_l+0x8ca>
 800c5ec:	3101      	adds	r1, #1
 800c5ee:	f43f adda 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c5f2:	f04f 0800 	mov.w	r8, #0
 800c5f6:	4b8b      	ldr	r3, [pc, #556]	; (800c824 <_strtod_l+0xafc>)
 800c5f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c5fa:	401a      	ands	r2, r3
 800c5fc:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 800c600:	9b05      	ldr	r3, [sp, #20]
 800c602:	2b00      	cmp	r3, #0
 800c604:	d19a      	bne.n	800c53c <_strtod_l+0x814>
 800c606:	e5d9      	b.n	800c1bc <_strtod_l+0x494>
 800c608:	f04f 33ff 	mov.w	r3, #4294967295
 800c60c:	e7e8      	b.n	800c5e0 <_strtod_l+0x8b8>
 800c60e:	4613      	mov	r3, r2
 800c610:	e7e6      	b.n	800c5e0 <_strtod_l+0x8b8>
 800c612:	ea53 0308 	orrs.w	r3, r3, r8
 800c616:	d081      	beq.n	800c51c <_strtod_l+0x7f4>
 800c618:	b1e5      	cbz	r5, 800c654 <_strtod_l+0x92c>
 800c61a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c61c:	421d      	tst	r5, r3
 800c61e:	d0ef      	beq.n	800c600 <_strtod_l+0x8d8>
 800c620:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c622:	4640      	mov	r0, r8
 800c624:	4649      	mov	r1, r9
 800c626:	9a05      	ldr	r2, [sp, #20]
 800c628:	b1c3      	cbz	r3, 800c65c <_strtod_l+0x934>
 800c62a:	f7ff fb5a 	bl	800bce2 <sulp>
 800c62e:	4602      	mov	r2, r0
 800c630:	460b      	mov	r3, r1
 800c632:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c636:	f7f3 fdbb 	bl	80001b0 <__adddf3>
 800c63a:	4680      	mov	r8, r0
 800c63c:	4689      	mov	r9, r1
 800c63e:	e7df      	b.n	800c600 <_strtod_l+0x8d8>
 800c640:	4013      	ands	r3, r2
 800c642:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800c646:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800c64a:	f04f 38ff 	mov.w	r8, #4294967295
 800c64e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800c652:	e7d5      	b.n	800c600 <_strtod_l+0x8d8>
 800c654:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c656:	ea13 0f08 	tst.w	r3, r8
 800c65a:	e7e0      	b.n	800c61e <_strtod_l+0x8f6>
 800c65c:	f7ff fb41 	bl	800bce2 <sulp>
 800c660:	4602      	mov	r2, r0
 800c662:	460b      	mov	r3, r1
 800c664:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c668:	f7f3 fda0 	bl	80001ac <__aeabi_dsub>
 800c66c:	2200      	movs	r2, #0
 800c66e:	2300      	movs	r3, #0
 800c670:	4680      	mov	r8, r0
 800c672:	4689      	mov	r9, r1
 800c674:	f7f4 f9ba 	bl	80009ec <__aeabi_dcmpeq>
 800c678:	2800      	cmp	r0, #0
 800c67a:	d0c1      	beq.n	800c600 <_strtod_l+0x8d8>
 800c67c:	e608      	b.n	800c290 <_strtod_l+0x568>
 800c67e:	4658      	mov	r0, fp
 800c680:	9904      	ldr	r1, [sp, #16]
 800c682:	f002 f845 	bl	800e710 <__ratio>
 800c686:	2200      	movs	r2, #0
 800c688:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c68c:	4606      	mov	r6, r0
 800c68e:	460f      	mov	r7, r1
 800c690:	f7f4 f9c0 	bl	8000a14 <__aeabi_dcmple>
 800c694:	2800      	cmp	r0, #0
 800c696:	d070      	beq.n	800c77a <_strtod_l+0xa52>
 800c698:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c69a:	2b00      	cmp	r3, #0
 800c69c:	d042      	beq.n	800c724 <_strtod_l+0x9fc>
 800c69e:	2600      	movs	r6, #0
 800c6a0:	4f62      	ldr	r7, [pc, #392]	; (800c82c <_strtod_l+0xb04>)
 800c6a2:	4d62      	ldr	r5, [pc, #392]	; (800c82c <_strtod_l+0xb04>)
 800c6a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c6a6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800c6aa:	0d1b      	lsrs	r3, r3, #20
 800c6ac:	051b      	lsls	r3, r3, #20
 800c6ae:	930f      	str	r3, [sp, #60]	; 0x3c
 800c6b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c6b2:	4b5f      	ldr	r3, [pc, #380]	; (800c830 <_strtod_l+0xb08>)
 800c6b4:	429a      	cmp	r2, r3
 800c6b6:	f040 80c3 	bne.w	800c840 <_strtod_l+0xb18>
 800c6ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c6bc:	4640      	mov	r0, r8
 800c6be:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800c6c2:	4649      	mov	r1, r9
 800c6c4:	f001 ff4e 	bl	800e564 <__ulp>
 800c6c8:	4602      	mov	r2, r0
 800c6ca:	460b      	mov	r3, r1
 800c6cc:	4630      	mov	r0, r6
 800c6ce:	4639      	mov	r1, r7
 800c6d0:	f7f3 ff24 	bl	800051c <__aeabi_dmul>
 800c6d4:	4642      	mov	r2, r8
 800c6d6:	464b      	mov	r3, r9
 800c6d8:	f7f3 fd6a 	bl	80001b0 <__adddf3>
 800c6dc:	460b      	mov	r3, r1
 800c6de:	4951      	ldr	r1, [pc, #324]	; (800c824 <_strtod_l+0xafc>)
 800c6e0:	4a54      	ldr	r2, [pc, #336]	; (800c834 <_strtod_l+0xb0c>)
 800c6e2:	4019      	ands	r1, r3
 800c6e4:	4291      	cmp	r1, r2
 800c6e6:	4680      	mov	r8, r0
 800c6e8:	d95d      	bls.n	800c7a6 <_strtod_l+0xa7e>
 800c6ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c6ec:	4b4e      	ldr	r3, [pc, #312]	; (800c828 <_strtod_l+0xb00>)
 800c6ee:	429a      	cmp	r2, r3
 800c6f0:	d103      	bne.n	800c6fa <_strtod_l+0x9d2>
 800c6f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c6f4:	3301      	adds	r3, #1
 800c6f6:	f43f ad56 	beq.w	800c1a6 <_strtod_l+0x47e>
 800c6fa:	f04f 38ff 	mov.w	r8, #4294967295
 800c6fe:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800c828 <_strtod_l+0xb00>
 800c702:	4650      	mov	r0, sl
 800c704:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c706:	f001 fbfd 	bl	800df04 <_Bfree>
 800c70a:	4650      	mov	r0, sl
 800c70c:	9906      	ldr	r1, [sp, #24]
 800c70e:	f001 fbf9 	bl	800df04 <_Bfree>
 800c712:	4650      	mov	r0, sl
 800c714:	9904      	ldr	r1, [sp, #16]
 800c716:	f001 fbf5 	bl	800df04 <_Bfree>
 800c71a:	4659      	mov	r1, fp
 800c71c:	4650      	mov	r0, sl
 800c71e:	f001 fbf1 	bl	800df04 <_Bfree>
 800c722:	e627      	b.n	800c374 <_strtod_l+0x64c>
 800c724:	f1b8 0f00 	cmp.w	r8, #0
 800c728:	d119      	bne.n	800c75e <_strtod_l+0xa36>
 800c72a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c72c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c730:	b9e3      	cbnz	r3, 800c76c <_strtod_l+0xa44>
 800c732:	2200      	movs	r2, #0
 800c734:	4630      	mov	r0, r6
 800c736:	4639      	mov	r1, r7
 800c738:	4b3c      	ldr	r3, [pc, #240]	; (800c82c <_strtod_l+0xb04>)
 800c73a:	f7f4 f961 	bl	8000a00 <__aeabi_dcmplt>
 800c73e:	b9c8      	cbnz	r0, 800c774 <_strtod_l+0xa4c>
 800c740:	2200      	movs	r2, #0
 800c742:	4630      	mov	r0, r6
 800c744:	4639      	mov	r1, r7
 800c746:	4b3c      	ldr	r3, [pc, #240]	; (800c838 <_strtod_l+0xb10>)
 800c748:	f7f3 fee8 	bl	800051c <__aeabi_dmul>
 800c74c:	4604      	mov	r4, r0
 800c74e:	460d      	mov	r5, r1
 800c750:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800c754:	9416      	str	r4, [sp, #88]	; 0x58
 800c756:	9317      	str	r3, [sp, #92]	; 0x5c
 800c758:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800c75c:	e7a2      	b.n	800c6a4 <_strtod_l+0x97c>
 800c75e:	f1b8 0f01 	cmp.w	r8, #1
 800c762:	d103      	bne.n	800c76c <_strtod_l+0xa44>
 800c764:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c766:	2b00      	cmp	r3, #0
 800c768:	f43f ad92 	beq.w	800c290 <_strtod_l+0x568>
 800c76c:	2600      	movs	r6, #0
 800c76e:	2400      	movs	r4, #0
 800c770:	4f32      	ldr	r7, [pc, #200]	; (800c83c <_strtod_l+0xb14>)
 800c772:	e796      	b.n	800c6a2 <_strtod_l+0x97a>
 800c774:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c776:	4d30      	ldr	r5, [pc, #192]	; (800c838 <_strtod_l+0xb10>)
 800c778:	e7ea      	b.n	800c750 <_strtod_l+0xa28>
 800c77a:	4b2f      	ldr	r3, [pc, #188]	; (800c838 <_strtod_l+0xb10>)
 800c77c:	2200      	movs	r2, #0
 800c77e:	4630      	mov	r0, r6
 800c780:	4639      	mov	r1, r7
 800c782:	f7f3 fecb 	bl	800051c <__aeabi_dmul>
 800c786:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c788:	4604      	mov	r4, r0
 800c78a:	460d      	mov	r5, r1
 800c78c:	b933      	cbnz	r3, 800c79c <_strtod_l+0xa74>
 800c78e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c792:	9010      	str	r0, [sp, #64]	; 0x40
 800c794:	9311      	str	r3, [sp, #68]	; 0x44
 800c796:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800c79a:	e783      	b.n	800c6a4 <_strtod_l+0x97c>
 800c79c:	4602      	mov	r2, r0
 800c79e:	460b      	mov	r3, r1
 800c7a0:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800c7a4:	e7f7      	b.n	800c796 <_strtod_l+0xa6e>
 800c7a6:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800c7aa:	9b05      	ldr	r3, [sp, #20]
 800c7ac:	2b00      	cmp	r3, #0
 800c7ae:	d1a8      	bne.n	800c702 <_strtod_l+0x9da>
 800c7b0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c7b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c7b6:	0d1b      	lsrs	r3, r3, #20
 800c7b8:	051b      	lsls	r3, r3, #20
 800c7ba:	429a      	cmp	r2, r3
 800c7bc:	d1a1      	bne.n	800c702 <_strtod_l+0x9da>
 800c7be:	4620      	mov	r0, r4
 800c7c0:	4629      	mov	r1, r5
 800c7c2:	f7f4 fcff 	bl	80011c4 <__aeabi_d2lz>
 800c7c6:	f7f3 fe7b 	bl	80004c0 <__aeabi_l2d>
 800c7ca:	4602      	mov	r2, r0
 800c7cc:	460b      	mov	r3, r1
 800c7ce:	4620      	mov	r0, r4
 800c7d0:	4629      	mov	r1, r5
 800c7d2:	f7f3 fceb 	bl	80001ac <__aeabi_dsub>
 800c7d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c7d8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c7dc:	ea43 0308 	orr.w	r3, r3, r8
 800c7e0:	4313      	orrs	r3, r2
 800c7e2:	4604      	mov	r4, r0
 800c7e4:	460d      	mov	r5, r1
 800c7e6:	d066      	beq.n	800c8b6 <_strtod_l+0xb8e>
 800c7e8:	a309      	add	r3, pc, #36	; (adr r3, 800c810 <_strtod_l+0xae8>)
 800c7ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7ee:	f7f4 f907 	bl	8000a00 <__aeabi_dcmplt>
 800c7f2:	2800      	cmp	r0, #0
 800c7f4:	f47f ace2 	bne.w	800c1bc <_strtod_l+0x494>
 800c7f8:	a307      	add	r3, pc, #28	; (adr r3, 800c818 <_strtod_l+0xaf0>)
 800c7fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7fe:	4620      	mov	r0, r4
 800c800:	4629      	mov	r1, r5
 800c802:	f7f4 f91b 	bl	8000a3c <__aeabi_dcmpgt>
 800c806:	2800      	cmp	r0, #0
 800c808:	f43f af7b 	beq.w	800c702 <_strtod_l+0x9da>
 800c80c:	e4d6      	b.n	800c1bc <_strtod_l+0x494>
 800c80e:	bf00      	nop
 800c810:	94a03595 	.word	0x94a03595
 800c814:	3fdfffff 	.word	0x3fdfffff
 800c818:	35afe535 	.word	0x35afe535
 800c81c:	3fe00000 	.word	0x3fe00000
 800c820:	000fffff 	.word	0x000fffff
 800c824:	7ff00000 	.word	0x7ff00000
 800c828:	7fefffff 	.word	0x7fefffff
 800c82c:	3ff00000 	.word	0x3ff00000
 800c830:	7fe00000 	.word	0x7fe00000
 800c834:	7c9fffff 	.word	0x7c9fffff
 800c838:	3fe00000 	.word	0x3fe00000
 800c83c:	bff00000 	.word	0xbff00000
 800c840:	9b05      	ldr	r3, [sp, #20]
 800c842:	b313      	cbz	r3, 800c88a <_strtod_l+0xb62>
 800c844:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c846:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c84a:	d81e      	bhi.n	800c88a <_strtod_l+0xb62>
 800c84c:	a326      	add	r3, pc, #152	; (adr r3, 800c8e8 <_strtod_l+0xbc0>)
 800c84e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c852:	4620      	mov	r0, r4
 800c854:	4629      	mov	r1, r5
 800c856:	f7f4 f8dd 	bl	8000a14 <__aeabi_dcmple>
 800c85a:	b190      	cbz	r0, 800c882 <_strtod_l+0xb5a>
 800c85c:	4629      	mov	r1, r5
 800c85e:	4620      	mov	r0, r4
 800c860:	f7f4 f934 	bl	8000acc <__aeabi_d2uiz>
 800c864:	2801      	cmp	r0, #1
 800c866:	bf38      	it	cc
 800c868:	2001      	movcc	r0, #1
 800c86a:	f7f3 fddd 	bl	8000428 <__aeabi_ui2d>
 800c86e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c870:	4604      	mov	r4, r0
 800c872:	460d      	mov	r5, r1
 800c874:	b9d3      	cbnz	r3, 800c8ac <_strtod_l+0xb84>
 800c876:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c87a:	9012      	str	r0, [sp, #72]	; 0x48
 800c87c:	9313      	str	r3, [sp, #76]	; 0x4c
 800c87e:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800c882:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c884:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 800c888:	1a9f      	subs	r7, r3, r2
 800c88a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c88e:	f001 fe69 	bl	800e564 <__ulp>
 800c892:	4602      	mov	r2, r0
 800c894:	460b      	mov	r3, r1
 800c896:	4630      	mov	r0, r6
 800c898:	4639      	mov	r1, r7
 800c89a:	f7f3 fe3f 	bl	800051c <__aeabi_dmul>
 800c89e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800c8a2:	f7f3 fc85 	bl	80001b0 <__adddf3>
 800c8a6:	4680      	mov	r8, r0
 800c8a8:	4689      	mov	r9, r1
 800c8aa:	e77e      	b.n	800c7aa <_strtod_l+0xa82>
 800c8ac:	4602      	mov	r2, r0
 800c8ae:	460b      	mov	r3, r1
 800c8b0:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800c8b4:	e7e3      	b.n	800c87e <_strtod_l+0xb56>
 800c8b6:	a30e      	add	r3, pc, #56	; (adr r3, 800c8f0 <_strtod_l+0xbc8>)
 800c8b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8bc:	f7f4 f8a0 	bl	8000a00 <__aeabi_dcmplt>
 800c8c0:	e7a1      	b.n	800c806 <_strtod_l+0xade>
 800c8c2:	2300      	movs	r3, #0
 800c8c4:	930a      	str	r3, [sp, #40]	; 0x28
 800c8c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c8c8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800c8ca:	6013      	str	r3, [r2, #0]
 800c8cc:	f7ff ba71 	b.w	800bdb2 <_strtod_l+0x8a>
 800c8d0:	2a65      	cmp	r2, #101	; 0x65
 800c8d2:	f43f ab63 	beq.w	800bf9c <_strtod_l+0x274>
 800c8d6:	2a45      	cmp	r2, #69	; 0x45
 800c8d8:	f43f ab60 	beq.w	800bf9c <_strtod_l+0x274>
 800c8dc:	2301      	movs	r3, #1
 800c8de:	f7ff bb95 	b.w	800c00c <_strtod_l+0x2e4>
 800c8e2:	bf00      	nop
 800c8e4:	f3af 8000 	nop.w
 800c8e8:	ffc00000 	.word	0xffc00000
 800c8ec:	41dfffff 	.word	0x41dfffff
 800c8f0:	94a03595 	.word	0x94a03595
 800c8f4:	3fcfffff 	.word	0x3fcfffff

0800c8f8 <_strtod_r>:
 800c8f8:	4b01      	ldr	r3, [pc, #4]	; (800c900 <_strtod_r+0x8>)
 800c8fa:	f7ff ba15 	b.w	800bd28 <_strtod_l>
 800c8fe:	bf00      	nop
 800c900:	2000020c 	.word	0x2000020c

0800c904 <_strtol_l.constprop.0>:
 800c904:	2b01      	cmp	r3, #1
 800c906:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c90a:	4680      	mov	r8, r0
 800c90c:	d001      	beq.n	800c912 <_strtol_l.constprop.0+0xe>
 800c90e:	2b24      	cmp	r3, #36	; 0x24
 800c910:	d906      	bls.n	800c920 <_strtol_l.constprop.0+0x1c>
 800c912:	f7fe faa5 	bl	800ae60 <__errno>
 800c916:	2316      	movs	r3, #22
 800c918:	6003      	str	r3, [r0, #0]
 800c91a:	2000      	movs	r0, #0
 800c91c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c920:	460d      	mov	r5, r1
 800c922:	4f35      	ldr	r7, [pc, #212]	; (800c9f8 <_strtol_l.constprop.0+0xf4>)
 800c924:	4628      	mov	r0, r5
 800c926:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c92a:	5de6      	ldrb	r6, [r4, r7]
 800c92c:	f016 0608 	ands.w	r6, r6, #8
 800c930:	d1f8      	bne.n	800c924 <_strtol_l.constprop.0+0x20>
 800c932:	2c2d      	cmp	r4, #45	; 0x2d
 800c934:	d12f      	bne.n	800c996 <_strtol_l.constprop.0+0x92>
 800c936:	2601      	movs	r6, #1
 800c938:	782c      	ldrb	r4, [r5, #0]
 800c93a:	1c85      	adds	r5, r0, #2
 800c93c:	2b00      	cmp	r3, #0
 800c93e:	d057      	beq.n	800c9f0 <_strtol_l.constprop.0+0xec>
 800c940:	2b10      	cmp	r3, #16
 800c942:	d109      	bne.n	800c958 <_strtol_l.constprop.0+0x54>
 800c944:	2c30      	cmp	r4, #48	; 0x30
 800c946:	d107      	bne.n	800c958 <_strtol_l.constprop.0+0x54>
 800c948:	7828      	ldrb	r0, [r5, #0]
 800c94a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800c94e:	2858      	cmp	r0, #88	; 0x58
 800c950:	d149      	bne.n	800c9e6 <_strtol_l.constprop.0+0xe2>
 800c952:	2310      	movs	r3, #16
 800c954:	786c      	ldrb	r4, [r5, #1]
 800c956:	3502      	adds	r5, #2
 800c958:	2700      	movs	r7, #0
 800c95a:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800c95e:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c962:	fbbe f9f3 	udiv	r9, lr, r3
 800c966:	4638      	mov	r0, r7
 800c968:	fb03 ea19 	mls	sl, r3, r9, lr
 800c96c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800c970:	f1bc 0f09 	cmp.w	ip, #9
 800c974:	d814      	bhi.n	800c9a0 <_strtol_l.constprop.0+0x9c>
 800c976:	4664      	mov	r4, ip
 800c978:	42a3      	cmp	r3, r4
 800c97a:	dd22      	ble.n	800c9c2 <_strtol_l.constprop.0+0xbe>
 800c97c:	2f00      	cmp	r7, #0
 800c97e:	db1d      	blt.n	800c9bc <_strtol_l.constprop.0+0xb8>
 800c980:	4581      	cmp	r9, r0
 800c982:	d31b      	bcc.n	800c9bc <_strtol_l.constprop.0+0xb8>
 800c984:	d101      	bne.n	800c98a <_strtol_l.constprop.0+0x86>
 800c986:	45a2      	cmp	sl, r4
 800c988:	db18      	blt.n	800c9bc <_strtol_l.constprop.0+0xb8>
 800c98a:	2701      	movs	r7, #1
 800c98c:	fb00 4003 	mla	r0, r0, r3, r4
 800c990:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c994:	e7ea      	b.n	800c96c <_strtol_l.constprop.0+0x68>
 800c996:	2c2b      	cmp	r4, #43	; 0x2b
 800c998:	bf04      	itt	eq
 800c99a:	782c      	ldrbeq	r4, [r5, #0]
 800c99c:	1c85      	addeq	r5, r0, #2
 800c99e:	e7cd      	b.n	800c93c <_strtol_l.constprop.0+0x38>
 800c9a0:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800c9a4:	f1bc 0f19 	cmp.w	ip, #25
 800c9a8:	d801      	bhi.n	800c9ae <_strtol_l.constprop.0+0xaa>
 800c9aa:	3c37      	subs	r4, #55	; 0x37
 800c9ac:	e7e4      	b.n	800c978 <_strtol_l.constprop.0+0x74>
 800c9ae:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800c9b2:	f1bc 0f19 	cmp.w	ip, #25
 800c9b6:	d804      	bhi.n	800c9c2 <_strtol_l.constprop.0+0xbe>
 800c9b8:	3c57      	subs	r4, #87	; 0x57
 800c9ba:	e7dd      	b.n	800c978 <_strtol_l.constprop.0+0x74>
 800c9bc:	f04f 37ff 	mov.w	r7, #4294967295
 800c9c0:	e7e6      	b.n	800c990 <_strtol_l.constprop.0+0x8c>
 800c9c2:	2f00      	cmp	r7, #0
 800c9c4:	da07      	bge.n	800c9d6 <_strtol_l.constprop.0+0xd2>
 800c9c6:	2322      	movs	r3, #34	; 0x22
 800c9c8:	4670      	mov	r0, lr
 800c9ca:	f8c8 3000 	str.w	r3, [r8]
 800c9ce:	2a00      	cmp	r2, #0
 800c9d0:	d0a4      	beq.n	800c91c <_strtol_l.constprop.0+0x18>
 800c9d2:	1e69      	subs	r1, r5, #1
 800c9d4:	e005      	b.n	800c9e2 <_strtol_l.constprop.0+0xde>
 800c9d6:	b106      	cbz	r6, 800c9da <_strtol_l.constprop.0+0xd6>
 800c9d8:	4240      	negs	r0, r0
 800c9da:	2a00      	cmp	r2, #0
 800c9dc:	d09e      	beq.n	800c91c <_strtol_l.constprop.0+0x18>
 800c9de:	2f00      	cmp	r7, #0
 800c9e0:	d1f7      	bne.n	800c9d2 <_strtol_l.constprop.0+0xce>
 800c9e2:	6011      	str	r1, [r2, #0]
 800c9e4:	e79a      	b.n	800c91c <_strtol_l.constprop.0+0x18>
 800c9e6:	2430      	movs	r4, #48	; 0x30
 800c9e8:	2b00      	cmp	r3, #0
 800c9ea:	d1b5      	bne.n	800c958 <_strtol_l.constprop.0+0x54>
 800c9ec:	2308      	movs	r3, #8
 800c9ee:	e7b3      	b.n	800c958 <_strtol_l.constprop.0+0x54>
 800c9f0:	2c30      	cmp	r4, #48	; 0x30
 800c9f2:	d0a9      	beq.n	800c948 <_strtol_l.constprop.0+0x44>
 800c9f4:	230a      	movs	r3, #10
 800c9f6:	e7af      	b.n	800c958 <_strtol_l.constprop.0+0x54>
 800c9f8:	08010dc9 	.word	0x08010dc9

0800c9fc <_strtol_r>:
 800c9fc:	f7ff bf82 	b.w	800c904 <_strtol_l.constprop.0>

0800ca00 <_write_r>:
 800ca00:	b538      	push	{r3, r4, r5, lr}
 800ca02:	4604      	mov	r4, r0
 800ca04:	4608      	mov	r0, r1
 800ca06:	4611      	mov	r1, r2
 800ca08:	2200      	movs	r2, #0
 800ca0a:	4d05      	ldr	r5, [pc, #20]	; (800ca20 <_write_r+0x20>)
 800ca0c:	602a      	str	r2, [r5, #0]
 800ca0e:	461a      	mov	r2, r3
 800ca10:	f7f8 fc9a 	bl	8005348 <_write>
 800ca14:	1c43      	adds	r3, r0, #1
 800ca16:	d102      	bne.n	800ca1e <_write_r+0x1e>
 800ca18:	682b      	ldr	r3, [r5, #0]
 800ca1a:	b103      	cbz	r3, 800ca1e <_write_r+0x1e>
 800ca1c:	6023      	str	r3, [r4, #0]
 800ca1e:	bd38      	pop	{r3, r4, r5, pc}
 800ca20:	200014ec 	.word	0x200014ec

0800ca24 <_close_r>:
 800ca24:	b538      	push	{r3, r4, r5, lr}
 800ca26:	2300      	movs	r3, #0
 800ca28:	4d05      	ldr	r5, [pc, #20]	; (800ca40 <_close_r+0x1c>)
 800ca2a:	4604      	mov	r4, r0
 800ca2c:	4608      	mov	r0, r1
 800ca2e:	602b      	str	r3, [r5, #0]
 800ca30:	f7f8 fca6 	bl	8005380 <_close>
 800ca34:	1c43      	adds	r3, r0, #1
 800ca36:	d102      	bne.n	800ca3e <_close_r+0x1a>
 800ca38:	682b      	ldr	r3, [r5, #0]
 800ca3a:	b103      	cbz	r3, 800ca3e <_close_r+0x1a>
 800ca3c:	6023      	str	r3, [r4, #0]
 800ca3e:	bd38      	pop	{r3, r4, r5, pc}
 800ca40:	200014ec 	.word	0x200014ec

0800ca44 <quorem>:
 800ca44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca48:	6903      	ldr	r3, [r0, #16]
 800ca4a:	690c      	ldr	r4, [r1, #16]
 800ca4c:	4607      	mov	r7, r0
 800ca4e:	42a3      	cmp	r3, r4
 800ca50:	f2c0 8082 	blt.w	800cb58 <quorem+0x114>
 800ca54:	3c01      	subs	r4, #1
 800ca56:	f100 0514 	add.w	r5, r0, #20
 800ca5a:	f101 0814 	add.w	r8, r1, #20
 800ca5e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ca62:	9301      	str	r3, [sp, #4]
 800ca64:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800ca68:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ca6c:	3301      	adds	r3, #1
 800ca6e:	429a      	cmp	r2, r3
 800ca70:	fbb2 f6f3 	udiv	r6, r2, r3
 800ca74:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800ca78:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800ca7c:	d331      	bcc.n	800cae2 <quorem+0x9e>
 800ca7e:	f04f 0e00 	mov.w	lr, #0
 800ca82:	4640      	mov	r0, r8
 800ca84:	46ac      	mov	ip, r5
 800ca86:	46f2      	mov	sl, lr
 800ca88:	f850 2b04 	ldr.w	r2, [r0], #4
 800ca8c:	b293      	uxth	r3, r2
 800ca8e:	fb06 e303 	mla	r3, r6, r3, lr
 800ca92:	0c12      	lsrs	r2, r2, #16
 800ca94:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800ca98:	b29b      	uxth	r3, r3
 800ca9a:	fb06 e202 	mla	r2, r6, r2, lr
 800ca9e:	ebaa 0303 	sub.w	r3, sl, r3
 800caa2:	f8dc a000 	ldr.w	sl, [ip]
 800caa6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800caaa:	fa1f fa8a 	uxth.w	sl, sl
 800caae:	4453      	add	r3, sl
 800cab0:	f8dc a000 	ldr.w	sl, [ip]
 800cab4:	b292      	uxth	r2, r2
 800cab6:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800caba:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cabe:	b29b      	uxth	r3, r3
 800cac0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cac4:	4581      	cmp	r9, r0
 800cac6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800caca:	f84c 3b04 	str.w	r3, [ip], #4
 800cace:	d2db      	bcs.n	800ca88 <quorem+0x44>
 800cad0:	f855 300b 	ldr.w	r3, [r5, fp]
 800cad4:	b92b      	cbnz	r3, 800cae2 <quorem+0x9e>
 800cad6:	9b01      	ldr	r3, [sp, #4]
 800cad8:	3b04      	subs	r3, #4
 800cada:	429d      	cmp	r5, r3
 800cadc:	461a      	mov	r2, r3
 800cade:	d32f      	bcc.n	800cb40 <quorem+0xfc>
 800cae0:	613c      	str	r4, [r7, #16]
 800cae2:	4638      	mov	r0, r7
 800cae4:	f001 fc96 	bl	800e414 <__mcmp>
 800cae8:	2800      	cmp	r0, #0
 800caea:	db25      	blt.n	800cb38 <quorem+0xf4>
 800caec:	4628      	mov	r0, r5
 800caee:	f04f 0c00 	mov.w	ip, #0
 800caf2:	3601      	adds	r6, #1
 800caf4:	f858 1b04 	ldr.w	r1, [r8], #4
 800caf8:	f8d0 e000 	ldr.w	lr, [r0]
 800cafc:	b28b      	uxth	r3, r1
 800cafe:	ebac 0303 	sub.w	r3, ip, r3
 800cb02:	fa1f f28e 	uxth.w	r2, lr
 800cb06:	4413      	add	r3, r2
 800cb08:	0c0a      	lsrs	r2, r1, #16
 800cb0a:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800cb0e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cb12:	b29b      	uxth	r3, r3
 800cb14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cb18:	45c1      	cmp	r9, r8
 800cb1a:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800cb1e:	f840 3b04 	str.w	r3, [r0], #4
 800cb22:	d2e7      	bcs.n	800caf4 <quorem+0xb0>
 800cb24:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cb28:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cb2c:	b922      	cbnz	r2, 800cb38 <quorem+0xf4>
 800cb2e:	3b04      	subs	r3, #4
 800cb30:	429d      	cmp	r5, r3
 800cb32:	461a      	mov	r2, r3
 800cb34:	d30a      	bcc.n	800cb4c <quorem+0x108>
 800cb36:	613c      	str	r4, [r7, #16]
 800cb38:	4630      	mov	r0, r6
 800cb3a:	b003      	add	sp, #12
 800cb3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb40:	6812      	ldr	r2, [r2, #0]
 800cb42:	3b04      	subs	r3, #4
 800cb44:	2a00      	cmp	r2, #0
 800cb46:	d1cb      	bne.n	800cae0 <quorem+0x9c>
 800cb48:	3c01      	subs	r4, #1
 800cb4a:	e7c6      	b.n	800cada <quorem+0x96>
 800cb4c:	6812      	ldr	r2, [r2, #0]
 800cb4e:	3b04      	subs	r3, #4
 800cb50:	2a00      	cmp	r2, #0
 800cb52:	d1f0      	bne.n	800cb36 <quorem+0xf2>
 800cb54:	3c01      	subs	r4, #1
 800cb56:	e7eb      	b.n	800cb30 <quorem+0xec>
 800cb58:	2000      	movs	r0, #0
 800cb5a:	e7ee      	b.n	800cb3a <quorem+0xf6>
 800cb5c:	0000      	movs	r0, r0
	...

0800cb60 <_dtoa_r>:
 800cb60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb64:	4616      	mov	r6, r2
 800cb66:	461f      	mov	r7, r3
 800cb68:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800cb6a:	b099      	sub	sp, #100	; 0x64
 800cb6c:	4605      	mov	r5, r0
 800cb6e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800cb72:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800cb76:	b974      	cbnz	r4, 800cb96 <_dtoa_r+0x36>
 800cb78:	2010      	movs	r0, #16
 800cb7a:	f001 f95b 	bl	800de34 <malloc>
 800cb7e:	4602      	mov	r2, r0
 800cb80:	6268      	str	r0, [r5, #36]	; 0x24
 800cb82:	b920      	cbnz	r0, 800cb8e <_dtoa_r+0x2e>
 800cb84:	21ea      	movs	r1, #234	; 0xea
 800cb86:	4ba8      	ldr	r3, [pc, #672]	; (800ce28 <_dtoa_r+0x2c8>)
 800cb88:	48a8      	ldr	r0, [pc, #672]	; (800ce2c <_dtoa_r+0x2cc>)
 800cb8a:	f002 fcd3 	bl	800f534 <__assert_func>
 800cb8e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800cb92:	6004      	str	r4, [r0, #0]
 800cb94:	60c4      	str	r4, [r0, #12]
 800cb96:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cb98:	6819      	ldr	r1, [r3, #0]
 800cb9a:	b151      	cbz	r1, 800cbb2 <_dtoa_r+0x52>
 800cb9c:	685a      	ldr	r2, [r3, #4]
 800cb9e:	2301      	movs	r3, #1
 800cba0:	4093      	lsls	r3, r2
 800cba2:	604a      	str	r2, [r1, #4]
 800cba4:	608b      	str	r3, [r1, #8]
 800cba6:	4628      	mov	r0, r5
 800cba8:	f001 f9ac 	bl	800df04 <_Bfree>
 800cbac:	2200      	movs	r2, #0
 800cbae:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cbb0:	601a      	str	r2, [r3, #0]
 800cbb2:	1e3b      	subs	r3, r7, #0
 800cbb4:	bfaf      	iteee	ge
 800cbb6:	2300      	movge	r3, #0
 800cbb8:	2201      	movlt	r2, #1
 800cbba:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800cbbe:	9305      	strlt	r3, [sp, #20]
 800cbc0:	bfa8      	it	ge
 800cbc2:	f8c8 3000 	strge.w	r3, [r8]
 800cbc6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800cbca:	4b99      	ldr	r3, [pc, #612]	; (800ce30 <_dtoa_r+0x2d0>)
 800cbcc:	bfb8      	it	lt
 800cbce:	f8c8 2000 	strlt.w	r2, [r8]
 800cbd2:	ea33 0309 	bics.w	r3, r3, r9
 800cbd6:	d119      	bne.n	800cc0c <_dtoa_r+0xac>
 800cbd8:	f242 730f 	movw	r3, #9999	; 0x270f
 800cbdc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800cbde:	6013      	str	r3, [r2, #0]
 800cbe0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800cbe4:	4333      	orrs	r3, r6
 800cbe6:	f000 857f 	beq.w	800d6e8 <_dtoa_r+0xb88>
 800cbea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800cbec:	b953      	cbnz	r3, 800cc04 <_dtoa_r+0xa4>
 800cbee:	4b91      	ldr	r3, [pc, #580]	; (800ce34 <_dtoa_r+0x2d4>)
 800cbf0:	e022      	b.n	800cc38 <_dtoa_r+0xd8>
 800cbf2:	4b91      	ldr	r3, [pc, #580]	; (800ce38 <_dtoa_r+0x2d8>)
 800cbf4:	9303      	str	r3, [sp, #12]
 800cbf6:	3308      	adds	r3, #8
 800cbf8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800cbfa:	6013      	str	r3, [r2, #0]
 800cbfc:	9803      	ldr	r0, [sp, #12]
 800cbfe:	b019      	add	sp, #100	; 0x64
 800cc00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc04:	4b8b      	ldr	r3, [pc, #556]	; (800ce34 <_dtoa_r+0x2d4>)
 800cc06:	9303      	str	r3, [sp, #12]
 800cc08:	3303      	adds	r3, #3
 800cc0a:	e7f5      	b.n	800cbf8 <_dtoa_r+0x98>
 800cc0c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800cc10:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800cc14:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800cc18:	2200      	movs	r2, #0
 800cc1a:	2300      	movs	r3, #0
 800cc1c:	f7f3 fee6 	bl	80009ec <__aeabi_dcmpeq>
 800cc20:	4680      	mov	r8, r0
 800cc22:	b158      	cbz	r0, 800cc3c <_dtoa_r+0xdc>
 800cc24:	2301      	movs	r3, #1
 800cc26:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800cc28:	6013      	str	r3, [r2, #0]
 800cc2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800cc2c:	2b00      	cmp	r3, #0
 800cc2e:	f000 8558 	beq.w	800d6e2 <_dtoa_r+0xb82>
 800cc32:	4882      	ldr	r0, [pc, #520]	; (800ce3c <_dtoa_r+0x2dc>)
 800cc34:	6018      	str	r0, [r3, #0]
 800cc36:	1e43      	subs	r3, r0, #1
 800cc38:	9303      	str	r3, [sp, #12]
 800cc3a:	e7df      	b.n	800cbfc <_dtoa_r+0x9c>
 800cc3c:	ab16      	add	r3, sp, #88	; 0x58
 800cc3e:	9301      	str	r3, [sp, #4]
 800cc40:	ab17      	add	r3, sp, #92	; 0x5c
 800cc42:	9300      	str	r3, [sp, #0]
 800cc44:	4628      	mov	r0, r5
 800cc46:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800cc4a:	f001 fd05 	bl	800e658 <__d2b>
 800cc4e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800cc52:	4683      	mov	fp, r0
 800cc54:	2c00      	cmp	r4, #0
 800cc56:	d07f      	beq.n	800cd58 <_dtoa_r+0x1f8>
 800cc58:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800cc5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc5e:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800cc62:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cc66:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800cc6a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800cc6e:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800cc72:	2200      	movs	r2, #0
 800cc74:	4b72      	ldr	r3, [pc, #456]	; (800ce40 <_dtoa_r+0x2e0>)
 800cc76:	f7f3 fa99 	bl	80001ac <__aeabi_dsub>
 800cc7a:	a365      	add	r3, pc, #404	; (adr r3, 800ce10 <_dtoa_r+0x2b0>)
 800cc7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc80:	f7f3 fc4c 	bl	800051c <__aeabi_dmul>
 800cc84:	a364      	add	r3, pc, #400	; (adr r3, 800ce18 <_dtoa_r+0x2b8>)
 800cc86:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc8a:	f7f3 fa91 	bl	80001b0 <__adddf3>
 800cc8e:	4606      	mov	r6, r0
 800cc90:	4620      	mov	r0, r4
 800cc92:	460f      	mov	r7, r1
 800cc94:	f7f3 fbd8 	bl	8000448 <__aeabi_i2d>
 800cc98:	a361      	add	r3, pc, #388	; (adr r3, 800ce20 <_dtoa_r+0x2c0>)
 800cc9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc9e:	f7f3 fc3d 	bl	800051c <__aeabi_dmul>
 800cca2:	4602      	mov	r2, r0
 800cca4:	460b      	mov	r3, r1
 800cca6:	4630      	mov	r0, r6
 800cca8:	4639      	mov	r1, r7
 800ccaa:	f7f3 fa81 	bl	80001b0 <__adddf3>
 800ccae:	4606      	mov	r6, r0
 800ccb0:	460f      	mov	r7, r1
 800ccb2:	f7f3 fee3 	bl	8000a7c <__aeabi_d2iz>
 800ccb6:	2200      	movs	r2, #0
 800ccb8:	4682      	mov	sl, r0
 800ccba:	2300      	movs	r3, #0
 800ccbc:	4630      	mov	r0, r6
 800ccbe:	4639      	mov	r1, r7
 800ccc0:	f7f3 fe9e 	bl	8000a00 <__aeabi_dcmplt>
 800ccc4:	b148      	cbz	r0, 800ccda <_dtoa_r+0x17a>
 800ccc6:	4650      	mov	r0, sl
 800ccc8:	f7f3 fbbe 	bl	8000448 <__aeabi_i2d>
 800cccc:	4632      	mov	r2, r6
 800ccce:	463b      	mov	r3, r7
 800ccd0:	f7f3 fe8c 	bl	80009ec <__aeabi_dcmpeq>
 800ccd4:	b908      	cbnz	r0, 800ccda <_dtoa_r+0x17a>
 800ccd6:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ccda:	f1ba 0f16 	cmp.w	sl, #22
 800ccde:	d858      	bhi.n	800cd92 <_dtoa_r+0x232>
 800cce0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800cce4:	4b57      	ldr	r3, [pc, #348]	; (800ce44 <_dtoa_r+0x2e4>)
 800cce6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800ccea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ccee:	f7f3 fe87 	bl	8000a00 <__aeabi_dcmplt>
 800ccf2:	2800      	cmp	r0, #0
 800ccf4:	d04f      	beq.n	800cd96 <_dtoa_r+0x236>
 800ccf6:	2300      	movs	r3, #0
 800ccf8:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ccfc:	930f      	str	r3, [sp, #60]	; 0x3c
 800ccfe:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cd00:	1b1c      	subs	r4, r3, r4
 800cd02:	1e63      	subs	r3, r4, #1
 800cd04:	9309      	str	r3, [sp, #36]	; 0x24
 800cd06:	bf49      	itett	mi
 800cd08:	f1c4 0301 	rsbmi	r3, r4, #1
 800cd0c:	2300      	movpl	r3, #0
 800cd0e:	9306      	strmi	r3, [sp, #24]
 800cd10:	2300      	movmi	r3, #0
 800cd12:	bf54      	ite	pl
 800cd14:	9306      	strpl	r3, [sp, #24]
 800cd16:	9309      	strmi	r3, [sp, #36]	; 0x24
 800cd18:	f1ba 0f00 	cmp.w	sl, #0
 800cd1c:	db3d      	blt.n	800cd9a <_dtoa_r+0x23a>
 800cd1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd20:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800cd24:	4453      	add	r3, sl
 800cd26:	9309      	str	r3, [sp, #36]	; 0x24
 800cd28:	2300      	movs	r3, #0
 800cd2a:	930a      	str	r3, [sp, #40]	; 0x28
 800cd2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cd2e:	2b09      	cmp	r3, #9
 800cd30:	f200 808c 	bhi.w	800ce4c <_dtoa_r+0x2ec>
 800cd34:	2b05      	cmp	r3, #5
 800cd36:	bfc4      	itt	gt
 800cd38:	3b04      	subgt	r3, #4
 800cd3a:	9322      	strgt	r3, [sp, #136]	; 0x88
 800cd3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cd3e:	bfc8      	it	gt
 800cd40:	2400      	movgt	r4, #0
 800cd42:	f1a3 0302 	sub.w	r3, r3, #2
 800cd46:	bfd8      	it	le
 800cd48:	2401      	movle	r4, #1
 800cd4a:	2b03      	cmp	r3, #3
 800cd4c:	f200 808a 	bhi.w	800ce64 <_dtoa_r+0x304>
 800cd50:	e8df f003 	tbb	[pc, r3]
 800cd54:	5b4d4f2d 	.word	0x5b4d4f2d
 800cd58:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800cd5c:	441c      	add	r4, r3
 800cd5e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800cd62:	2b20      	cmp	r3, #32
 800cd64:	bfc3      	ittte	gt
 800cd66:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800cd6a:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800cd6e:	fa09 f303 	lslgt.w	r3, r9, r3
 800cd72:	f1c3 0320 	rsble	r3, r3, #32
 800cd76:	bfc6      	itte	gt
 800cd78:	fa26 f000 	lsrgt.w	r0, r6, r0
 800cd7c:	4318      	orrgt	r0, r3
 800cd7e:	fa06 f003 	lslle.w	r0, r6, r3
 800cd82:	f7f3 fb51 	bl	8000428 <__aeabi_ui2d>
 800cd86:	2301      	movs	r3, #1
 800cd88:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800cd8c:	3c01      	subs	r4, #1
 800cd8e:	9313      	str	r3, [sp, #76]	; 0x4c
 800cd90:	e76f      	b.n	800cc72 <_dtoa_r+0x112>
 800cd92:	2301      	movs	r3, #1
 800cd94:	e7b2      	b.n	800ccfc <_dtoa_r+0x19c>
 800cd96:	900f      	str	r0, [sp, #60]	; 0x3c
 800cd98:	e7b1      	b.n	800ccfe <_dtoa_r+0x19e>
 800cd9a:	9b06      	ldr	r3, [sp, #24]
 800cd9c:	eba3 030a 	sub.w	r3, r3, sl
 800cda0:	9306      	str	r3, [sp, #24]
 800cda2:	f1ca 0300 	rsb	r3, sl, #0
 800cda6:	930a      	str	r3, [sp, #40]	; 0x28
 800cda8:	2300      	movs	r3, #0
 800cdaa:	930e      	str	r3, [sp, #56]	; 0x38
 800cdac:	e7be      	b.n	800cd2c <_dtoa_r+0x1cc>
 800cdae:	2300      	movs	r3, #0
 800cdb0:	930b      	str	r3, [sp, #44]	; 0x2c
 800cdb2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cdb4:	2b00      	cmp	r3, #0
 800cdb6:	dc58      	bgt.n	800ce6a <_dtoa_r+0x30a>
 800cdb8:	f04f 0901 	mov.w	r9, #1
 800cdbc:	464b      	mov	r3, r9
 800cdbe:	f8cd 9020 	str.w	r9, [sp, #32]
 800cdc2:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800cdc6:	2200      	movs	r2, #0
 800cdc8:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800cdca:	6042      	str	r2, [r0, #4]
 800cdcc:	2204      	movs	r2, #4
 800cdce:	f102 0614 	add.w	r6, r2, #20
 800cdd2:	429e      	cmp	r6, r3
 800cdd4:	6841      	ldr	r1, [r0, #4]
 800cdd6:	d94e      	bls.n	800ce76 <_dtoa_r+0x316>
 800cdd8:	4628      	mov	r0, r5
 800cdda:	f001 f853 	bl	800de84 <_Balloc>
 800cdde:	9003      	str	r0, [sp, #12]
 800cde0:	2800      	cmp	r0, #0
 800cde2:	d14c      	bne.n	800ce7e <_dtoa_r+0x31e>
 800cde4:	4602      	mov	r2, r0
 800cde6:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800cdea:	4b17      	ldr	r3, [pc, #92]	; (800ce48 <_dtoa_r+0x2e8>)
 800cdec:	e6cc      	b.n	800cb88 <_dtoa_r+0x28>
 800cdee:	2301      	movs	r3, #1
 800cdf0:	e7de      	b.n	800cdb0 <_dtoa_r+0x250>
 800cdf2:	2300      	movs	r3, #0
 800cdf4:	930b      	str	r3, [sp, #44]	; 0x2c
 800cdf6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cdf8:	eb0a 0903 	add.w	r9, sl, r3
 800cdfc:	f109 0301 	add.w	r3, r9, #1
 800ce00:	2b01      	cmp	r3, #1
 800ce02:	9308      	str	r3, [sp, #32]
 800ce04:	bfb8      	it	lt
 800ce06:	2301      	movlt	r3, #1
 800ce08:	e7dd      	b.n	800cdc6 <_dtoa_r+0x266>
 800ce0a:	2301      	movs	r3, #1
 800ce0c:	e7f2      	b.n	800cdf4 <_dtoa_r+0x294>
 800ce0e:	bf00      	nop
 800ce10:	636f4361 	.word	0x636f4361
 800ce14:	3fd287a7 	.word	0x3fd287a7
 800ce18:	8b60c8b3 	.word	0x8b60c8b3
 800ce1c:	3fc68a28 	.word	0x3fc68a28
 800ce20:	509f79fb 	.word	0x509f79fb
 800ce24:	3fd34413 	.word	0x3fd34413
 800ce28:	08010ed6 	.word	0x08010ed6
 800ce2c:	08010eed 	.word	0x08010eed
 800ce30:	7ff00000 	.word	0x7ff00000
 800ce34:	08010ed2 	.word	0x08010ed2
 800ce38:	08010ec9 	.word	0x08010ec9
 800ce3c:	08011142 	.word	0x08011142
 800ce40:	3ff80000 	.word	0x3ff80000
 800ce44:	08011058 	.word	0x08011058
 800ce48:	08010f48 	.word	0x08010f48
 800ce4c:	2401      	movs	r4, #1
 800ce4e:	2300      	movs	r3, #0
 800ce50:	940b      	str	r4, [sp, #44]	; 0x2c
 800ce52:	9322      	str	r3, [sp, #136]	; 0x88
 800ce54:	f04f 39ff 	mov.w	r9, #4294967295
 800ce58:	2200      	movs	r2, #0
 800ce5a:	2312      	movs	r3, #18
 800ce5c:	f8cd 9020 	str.w	r9, [sp, #32]
 800ce60:	9223      	str	r2, [sp, #140]	; 0x8c
 800ce62:	e7b0      	b.n	800cdc6 <_dtoa_r+0x266>
 800ce64:	2301      	movs	r3, #1
 800ce66:	930b      	str	r3, [sp, #44]	; 0x2c
 800ce68:	e7f4      	b.n	800ce54 <_dtoa_r+0x2f4>
 800ce6a:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 800ce6e:	464b      	mov	r3, r9
 800ce70:	f8cd 9020 	str.w	r9, [sp, #32]
 800ce74:	e7a7      	b.n	800cdc6 <_dtoa_r+0x266>
 800ce76:	3101      	adds	r1, #1
 800ce78:	6041      	str	r1, [r0, #4]
 800ce7a:	0052      	lsls	r2, r2, #1
 800ce7c:	e7a7      	b.n	800cdce <_dtoa_r+0x26e>
 800ce7e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800ce80:	9a03      	ldr	r2, [sp, #12]
 800ce82:	601a      	str	r2, [r3, #0]
 800ce84:	9b08      	ldr	r3, [sp, #32]
 800ce86:	2b0e      	cmp	r3, #14
 800ce88:	f200 80a8 	bhi.w	800cfdc <_dtoa_r+0x47c>
 800ce8c:	2c00      	cmp	r4, #0
 800ce8e:	f000 80a5 	beq.w	800cfdc <_dtoa_r+0x47c>
 800ce92:	f1ba 0f00 	cmp.w	sl, #0
 800ce96:	dd34      	ble.n	800cf02 <_dtoa_r+0x3a2>
 800ce98:	4a9a      	ldr	r2, [pc, #616]	; (800d104 <_dtoa_r+0x5a4>)
 800ce9a:	f00a 030f 	and.w	r3, sl, #15
 800ce9e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800cea2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800cea6:	e9d3 3400 	ldrd	r3, r4, [r3]
 800ceaa:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800ceae:	ea4f 142a 	mov.w	r4, sl, asr #4
 800ceb2:	d016      	beq.n	800cee2 <_dtoa_r+0x382>
 800ceb4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800ceb8:	4b93      	ldr	r3, [pc, #588]	; (800d108 <_dtoa_r+0x5a8>)
 800ceba:	2703      	movs	r7, #3
 800cebc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800cec0:	f7f3 fc56 	bl	8000770 <__aeabi_ddiv>
 800cec4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cec8:	f004 040f 	and.w	r4, r4, #15
 800cecc:	4e8e      	ldr	r6, [pc, #568]	; (800d108 <_dtoa_r+0x5a8>)
 800cece:	b954      	cbnz	r4, 800cee6 <_dtoa_r+0x386>
 800ced0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800ced4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ced8:	f7f3 fc4a 	bl	8000770 <__aeabi_ddiv>
 800cedc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cee0:	e029      	b.n	800cf36 <_dtoa_r+0x3d6>
 800cee2:	2702      	movs	r7, #2
 800cee4:	e7f2      	b.n	800cecc <_dtoa_r+0x36c>
 800cee6:	07e1      	lsls	r1, r4, #31
 800cee8:	d508      	bpl.n	800cefc <_dtoa_r+0x39c>
 800ceea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ceee:	e9d6 2300 	ldrd	r2, r3, [r6]
 800cef2:	f7f3 fb13 	bl	800051c <__aeabi_dmul>
 800cef6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cefa:	3701      	adds	r7, #1
 800cefc:	1064      	asrs	r4, r4, #1
 800cefe:	3608      	adds	r6, #8
 800cf00:	e7e5      	b.n	800cece <_dtoa_r+0x36e>
 800cf02:	f000 80a5 	beq.w	800d050 <_dtoa_r+0x4f0>
 800cf06:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800cf0a:	f1ca 0400 	rsb	r4, sl, #0
 800cf0e:	4b7d      	ldr	r3, [pc, #500]	; (800d104 <_dtoa_r+0x5a4>)
 800cf10:	f004 020f 	and.w	r2, r4, #15
 800cf14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800cf18:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cf1c:	f7f3 fafe 	bl	800051c <__aeabi_dmul>
 800cf20:	2702      	movs	r7, #2
 800cf22:	2300      	movs	r3, #0
 800cf24:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cf28:	4e77      	ldr	r6, [pc, #476]	; (800d108 <_dtoa_r+0x5a8>)
 800cf2a:	1124      	asrs	r4, r4, #4
 800cf2c:	2c00      	cmp	r4, #0
 800cf2e:	f040 8084 	bne.w	800d03a <_dtoa_r+0x4da>
 800cf32:	2b00      	cmp	r3, #0
 800cf34:	d1d2      	bne.n	800cedc <_dtoa_r+0x37c>
 800cf36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	f000 808b 	beq.w	800d054 <_dtoa_r+0x4f4>
 800cf3e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800cf42:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800cf46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cf4a:	2200      	movs	r2, #0
 800cf4c:	4b6f      	ldr	r3, [pc, #444]	; (800d10c <_dtoa_r+0x5ac>)
 800cf4e:	f7f3 fd57 	bl	8000a00 <__aeabi_dcmplt>
 800cf52:	2800      	cmp	r0, #0
 800cf54:	d07e      	beq.n	800d054 <_dtoa_r+0x4f4>
 800cf56:	9b08      	ldr	r3, [sp, #32]
 800cf58:	2b00      	cmp	r3, #0
 800cf5a:	d07b      	beq.n	800d054 <_dtoa_r+0x4f4>
 800cf5c:	f1b9 0f00 	cmp.w	r9, #0
 800cf60:	dd38      	ble.n	800cfd4 <_dtoa_r+0x474>
 800cf62:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cf66:	2200      	movs	r2, #0
 800cf68:	4b69      	ldr	r3, [pc, #420]	; (800d110 <_dtoa_r+0x5b0>)
 800cf6a:	f7f3 fad7 	bl	800051c <__aeabi_dmul>
 800cf6e:	464c      	mov	r4, r9
 800cf70:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cf74:	f10a 38ff 	add.w	r8, sl, #4294967295
 800cf78:	3701      	adds	r7, #1
 800cf7a:	4638      	mov	r0, r7
 800cf7c:	f7f3 fa64 	bl	8000448 <__aeabi_i2d>
 800cf80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cf84:	f7f3 faca 	bl	800051c <__aeabi_dmul>
 800cf88:	2200      	movs	r2, #0
 800cf8a:	4b62      	ldr	r3, [pc, #392]	; (800d114 <_dtoa_r+0x5b4>)
 800cf8c:	f7f3 f910 	bl	80001b0 <__adddf3>
 800cf90:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800cf94:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cf98:	9611      	str	r6, [sp, #68]	; 0x44
 800cf9a:	2c00      	cmp	r4, #0
 800cf9c:	d15d      	bne.n	800d05a <_dtoa_r+0x4fa>
 800cf9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cfa2:	2200      	movs	r2, #0
 800cfa4:	4b5c      	ldr	r3, [pc, #368]	; (800d118 <_dtoa_r+0x5b8>)
 800cfa6:	f7f3 f901 	bl	80001ac <__aeabi_dsub>
 800cfaa:	4602      	mov	r2, r0
 800cfac:	460b      	mov	r3, r1
 800cfae:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cfb2:	4633      	mov	r3, r6
 800cfb4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cfb6:	f7f3 fd41 	bl	8000a3c <__aeabi_dcmpgt>
 800cfba:	2800      	cmp	r0, #0
 800cfbc:	f040 829c 	bne.w	800d4f8 <_dtoa_r+0x998>
 800cfc0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cfc4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cfc6:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800cfca:	f7f3 fd19 	bl	8000a00 <__aeabi_dcmplt>
 800cfce:	2800      	cmp	r0, #0
 800cfd0:	f040 8290 	bne.w	800d4f4 <_dtoa_r+0x994>
 800cfd4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800cfd8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800cfdc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800cfde:	2b00      	cmp	r3, #0
 800cfe0:	f2c0 8152 	blt.w	800d288 <_dtoa_r+0x728>
 800cfe4:	f1ba 0f0e 	cmp.w	sl, #14
 800cfe8:	f300 814e 	bgt.w	800d288 <_dtoa_r+0x728>
 800cfec:	4b45      	ldr	r3, [pc, #276]	; (800d104 <_dtoa_r+0x5a4>)
 800cfee:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800cff2:	e9d3 3400 	ldrd	r3, r4, [r3]
 800cff6:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800cffa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cffc:	2b00      	cmp	r3, #0
 800cffe:	f280 80db 	bge.w	800d1b8 <_dtoa_r+0x658>
 800d002:	9b08      	ldr	r3, [sp, #32]
 800d004:	2b00      	cmp	r3, #0
 800d006:	f300 80d7 	bgt.w	800d1b8 <_dtoa_r+0x658>
 800d00a:	f040 8272 	bne.w	800d4f2 <_dtoa_r+0x992>
 800d00e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d012:	2200      	movs	r2, #0
 800d014:	4b40      	ldr	r3, [pc, #256]	; (800d118 <_dtoa_r+0x5b8>)
 800d016:	f7f3 fa81 	bl	800051c <__aeabi_dmul>
 800d01a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d01e:	f7f3 fd03 	bl	8000a28 <__aeabi_dcmpge>
 800d022:	9c08      	ldr	r4, [sp, #32]
 800d024:	4626      	mov	r6, r4
 800d026:	2800      	cmp	r0, #0
 800d028:	f040 8248 	bne.w	800d4bc <_dtoa_r+0x95c>
 800d02c:	2331      	movs	r3, #49	; 0x31
 800d02e:	9f03      	ldr	r7, [sp, #12]
 800d030:	f10a 0a01 	add.w	sl, sl, #1
 800d034:	f807 3b01 	strb.w	r3, [r7], #1
 800d038:	e244      	b.n	800d4c4 <_dtoa_r+0x964>
 800d03a:	07e2      	lsls	r2, r4, #31
 800d03c:	d505      	bpl.n	800d04a <_dtoa_r+0x4ea>
 800d03e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d042:	f7f3 fa6b 	bl	800051c <__aeabi_dmul>
 800d046:	2301      	movs	r3, #1
 800d048:	3701      	adds	r7, #1
 800d04a:	1064      	asrs	r4, r4, #1
 800d04c:	3608      	adds	r6, #8
 800d04e:	e76d      	b.n	800cf2c <_dtoa_r+0x3cc>
 800d050:	2702      	movs	r7, #2
 800d052:	e770      	b.n	800cf36 <_dtoa_r+0x3d6>
 800d054:	46d0      	mov	r8, sl
 800d056:	9c08      	ldr	r4, [sp, #32]
 800d058:	e78f      	b.n	800cf7a <_dtoa_r+0x41a>
 800d05a:	9903      	ldr	r1, [sp, #12]
 800d05c:	4b29      	ldr	r3, [pc, #164]	; (800d104 <_dtoa_r+0x5a4>)
 800d05e:	4421      	add	r1, r4
 800d060:	9112      	str	r1, [sp, #72]	; 0x48
 800d062:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d064:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800d068:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800d06c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d070:	2900      	cmp	r1, #0
 800d072:	d055      	beq.n	800d120 <_dtoa_r+0x5c0>
 800d074:	2000      	movs	r0, #0
 800d076:	4929      	ldr	r1, [pc, #164]	; (800d11c <_dtoa_r+0x5bc>)
 800d078:	f7f3 fb7a 	bl	8000770 <__aeabi_ddiv>
 800d07c:	463b      	mov	r3, r7
 800d07e:	4632      	mov	r2, r6
 800d080:	f7f3 f894 	bl	80001ac <__aeabi_dsub>
 800d084:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d088:	9f03      	ldr	r7, [sp, #12]
 800d08a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d08e:	f7f3 fcf5 	bl	8000a7c <__aeabi_d2iz>
 800d092:	4604      	mov	r4, r0
 800d094:	f7f3 f9d8 	bl	8000448 <__aeabi_i2d>
 800d098:	4602      	mov	r2, r0
 800d09a:	460b      	mov	r3, r1
 800d09c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d0a0:	f7f3 f884 	bl	80001ac <__aeabi_dsub>
 800d0a4:	4602      	mov	r2, r0
 800d0a6:	460b      	mov	r3, r1
 800d0a8:	3430      	adds	r4, #48	; 0x30
 800d0aa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800d0ae:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d0b2:	f807 4b01 	strb.w	r4, [r7], #1
 800d0b6:	f7f3 fca3 	bl	8000a00 <__aeabi_dcmplt>
 800d0ba:	2800      	cmp	r0, #0
 800d0bc:	d174      	bne.n	800d1a8 <_dtoa_r+0x648>
 800d0be:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d0c2:	2000      	movs	r0, #0
 800d0c4:	4911      	ldr	r1, [pc, #68]	; (800d10c <_dtoa_r+0x5ac>)
 800d0c6:	f7f3 f871 	bl	80001ac <__aeabi_dsub>
 800d0ca:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d0ce:	f7f3 fc97 	bl	8000a00 <__aeabi_dcmplt>
 800d0d2:	2800      	cmp	r0, #0
 800d0d4:	f040 80b7 	bne.w	800d246 <_dtoa_r+0x6e6>
 800d0d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d0da:	429f      	cmp	r7, r3
 800d0dc:	f43f af7a 	beq.w	800cfd4 <_dtoa_r+0x474>
 800d0e0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d0e4:	2200      	movs	r2, #0
 800d0e6:	4b0a      	ldr	r3, [pc, #40]	; (800d110 <_dtoa_r+0x5b0>)
 800d0e8:	f7f3 fa18 	bl	800051c <__aeabi_dmul>
 800d0ec:	2200      	movs	r2, #0
 800d0ee:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d0f2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d0f6:	4b06      	ldr	r3, [pc, #24]	; (800d110 <_dtoa_r+0x5b0>)
 800d0f8:	f7f3 fa10 	bl	800051c <__aeabi_dmul>
 800d0fc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d100:	e7c3      	b.n	800d08a <_dtoa_r+0x52a>
 800d102:	bf00      	nop
 800d104:	08011058 	.word	0x08011058
 800d108:	08011030 	.word	0x08011030
 800d10c:	3ff00000 	.word	0x3ff00000
 800d110:	40240000 	.word	0x40240000
 800d114:	401c0000 	.word	0x401c0000
 800d118:	40140000 	.word	0x40140000
 800d11c:	3fe00000 	.word	0x3fe00000
 800d120:	4630      	mov	r0, r6
 800d122:	4639      	mov	r1, r7
 800d124:	f7f3 f9fa 	bl	800051c <__aeabi_dmul>
 800d128:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d12a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d12e:	9c03      	ldr	r4, [sp, #12]
 800d130:	9314      	str	r3, [sp, #80]	; 0x50
 800d132:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d136:	f7f3 fca1 	bl	8000a7c <__aeabi_d2iz>
 800d13a:	9015      	str	r0, [sp, #84]	; 0x54
 800d13c:	f7f3 f984 	bl	8000448 <__aeabi_i2d>
 800d140:	4602      	mov	r2, r0
 800d142:	460b      	mov	r3, r1
 800d144:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d148:	f7f3 f830 	bl	80001ac <__aeabi_dsub>
 800d14c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d14e:	4606      	mov	r6, r0
 800d150:	3330      	adds	r3, #48	; 0x30
 800d152:	f804 3b01 	strb.w	r3, [r4], #1
 800d156:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d158:	460f      	mov	r7, r1
 800d15a:	429c      	cmp	r4, r3
 800d15c:	f04f 0200 	mov.w	r2, #0
 800d160:	d124      	bne.n	800d1ac <_dtoa_r+0x64c>
 800d162:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d166:	4bb0      	ldr	r3, [pc, #704]	; (800d428 <_dtoa_r+0x8c8>)
 800d168:	f7f3 f822 	bl	80001b0 <__adddf3>
 800d16c:	4602      	mov	r2, r0
 800d16e:	460b      	mov	r3, r1
 800d170:	4630      	mov	r0, r6
 800d172:	4639      	mov	r1, r7
 800d174:	f7f3 fc62 	bl	8000a3c <__aeabi_dcmpgt>
 800d178:	2800      	cmp	r0, #0
 800d17a:	d163      	bne.n	800d244 <_dtoa_r+0x6e4>
 800d17c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d180:	2000      	movs	r0, #0
 800d182:	49a9      	ldr	r1, [pc, #676]	; (800d428 <_dtoa_r+0x8c8>)
 800d184:	f7f3 f812 	bl	80001ac <__aeabi_dsub>
 800d188:	4602      	mov	r2, r0
 800d18a:	460b      	mov	r3, r1
 800d18c:	4630      	mov	r0, r6
 800d18e:	4639      	mov	r1, r7
 800d190:	f7f3 fc36 	bl	8000a00 <__aeabi_dcmplt>
 800d194:	2800      	cmp	r0, #0
 800d196:	f43f af1d 	beq.w	800cfd4 <_dtoa_r+0x474>
 800d19a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800d19c:	1e7b      	subs	r3, r7, #1
 800d19e:	9314      	str	r3, [sp, #80]	; 0x50
 800d1a0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800d1a4:	2b30      	cmp	r3, #48	; 0x30
 800d1a6:	d0f8      	beq.n	800d19a <_dtoa_r+0x63a>
 800d1a8:	46c2      	mov	sl, r8
 800d1aa:	e03b      	b.n	800d224 <_dtoa_r+0x6c4>
 800d1ac:	4b9f      	ldr	r3, [pc, #636]	; (800d42c <_dtoa_r+0x8cc>)
 800d1ae:	f7f3 f9b5 	bl	800051c <__aeabi_dmul>
 800d1b2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d1b6:	e7bc      	b.n	800d132 <_dtoa_r+0x5d2>
 800d1b8:	9f03      	ldr	r7, [sp, #12]
 800d1ba:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800d1be:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d1c2:	4640      	mov	r0, r8
 800d1c4:	4649      	mov	r1, r9
 800d1c6:	f7f3 fad3 	bl	8000770 <__aeabi_ddiv>
 800d1ca:	f7f3 fc57 	bl	8000a7c <__aeabi_d2iz>
 800d1ce:	4604      	mov	r4, r0
 800d1d0:	f7f3 f93a 	bl	8000448 <__aeabi_i2d>
 800d1d4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d1d8:	f7f3 f9a0 	bl	800051c <__aeabi_dmul>
 800d1dc:	4602      	mov	r2, r0
 800d1de:	460b      	mov	r3, r1
 800d1e0:	4640      	mov	r0, r8
 800d1e2:	4649      	mov	r1, r9
 800d1e4:	f7f2 ffe2 	bl	80001ac <__aeabi_dsub>
 800d1e8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800d1ec:	f807 6b01 	strb.w	r6, [r7], #1
 800d1f0:	9e03      	ldr	r6, [sp, #12]
 800d1f2:	f8dd c020 	ldr.w	ip, [sp, #32]
 800d1f6:	1bbe      	subs	r6, r7, r6
 800d1f8:	45b4      	cmp	ip, r6
 800d1fa:	4602      	mov	r2, r0
 800d1fc:	460b      	mov	r3, r1
 800d1fe:	d136      	bne.n	800d26e <_dtoa_r+0x70e>
 800d200:	f7f2 ffd6 	bl	80001b0 <__adddf3>
 800d204:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d208:	4680      	mov	r8, r0
 800d20a:	4689      	mov	r9, r1
 800d20c:	f7f3 fc16 	bl	8000a3c <__aeabi_dcmpgt>
 800d210:	bb58      	cbnz	r0, 800d26a <_dtoa_r+0x70a>
 800d212:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d216:	4640      	mov	r0, r8
 800d218:	4649      	mov	r1, r9
 800d21a:	f7f3 fbe7 	bl	80009ec <__aeabi_dcmpeq>
 800d21e:	b108      	cbz	r0, 800d224 <_dtoa_r+0x6c4>
 800d220:	07e1      	lsls	r1, r4, #31
 800d222:	d422      	bmi.n	800d26a <_dtoa_r+0x70a>
 800d224:	4628      	mov	r0, r5
 800d226:	4659      	mov	r1, fp
 800d228:	f000 fe6c 	bl	800df04 <_Bfree>
 800d22c:	2300      	movs	r3, #0
 800d22e:	703b      	strb	r3, [r7, #0]
 800d230:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800d232:	f10a 0001 	add.w	r0, sl, #1
 800d236:	6018      	str	r0, [r3, #0]
 800d238:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d23a:	2b00      	cmp	r3, #0
 800d23c:	f43f acde 	beq.w	800cbfc <_dtoa_r+0x9c>
 800d240:	601f      	str	r7, [r3, #0]
 800d242:	e4db      	b.n	800cbfc <_dtoa_r+0x9c>
 800d244:	4627      	mov	r7, r4
 800d246:	463b      	mov	r3, r7
 800d248:	461f      	mov	r7, r3
 800d24a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d24e:	2a39      	cmp	r2, #57	; 0x39
 800d250:	d107      	bne.n	800d262 <_dtoa_r+0x702>
 800d252:	9a03      	ldr	r2, [sp, #12]
 800d254:	429a      	cmp	r2, r3
 800d256:	d1f7      	bne.n	800d248 <_dtoa_r+0x6e8>
 800d258:	2230      	movs	r2, #48	; 0x30
 800d25a:	9903      	ldr	r1, [sp, #12]
 800d25c:	f108 0801 	add.w	r8, r8, #1
 800d260:	700a      	strb	r2, [r1, #0]
 800d262:	781a      	ldrb	r2, [r3, #0]
 800d264:	3201      	adds	r2, #1
 800d266:	701a      	strb	r2, [r3, #0]
 800d268:	e79e      	b.n	800d1a8 <_dtoa_r+0x648>
 800d26a:	46d0      	mov	r8, sl
 800d26c:	e7eb      	b.n	800d246 <_dtoa_r+0x6e6>
 800d26e:	2200      	movs	r2, #0
 800d270:	4b6e      	ldr	r3, [pc, #440]	; (800d42c <_dtoa_r+0x8cc>)
 800d272:	f7f3 f953 	bl	800051c <__aeabi_dmul>
 800d276:	2200      	movs	r2, #0
 800d278:	2300      	movs	r3, #0
 800d27a:	4680      	mov	r8, r0
 800d27c:	4689      	mov	r9, r1
 800d27e:	f7f3 fbb5 	bl	80009ec <__aeabi_dcmpeq>
 800d282:	2800      	cmp	r0, #0
 800d284:	d09b      	beq.n	800d1be <_dtoa_r+0x65e>
 800d286:	e7cd      	b.n	800d224 <_dtoa_r+0x6c4>
 800d288:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d28a:	2a00      	cmp	r2, #0
 800d28c:	f000 80d0 	beq.w	800d430 <_dtoa_r+0x8d0>
 800d290:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800d292:	2a01      	cmp	r2, #1
 800d294:	f300 80ae 	bgt.w	800d3f4 <_dtoa_r+0x894>
 800d298:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d29a:	2a00      	cmp	r2, #0
 800d29c:	f000 80a6 	beq.w	800d3ec <_dtoa_r+0x88c>
 800d2a0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d2a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d2a6:	9f06      	ldr	r7, [sp, #24]
 800d2a8:	9a06      	ldr	r2, [sp, #24]
 800d2aa:	2101      	movs	r1, #1
 800d2ac:	441a      	add	r2, r3
 800d2ae:	9206      	str	r2, [sp, #24]
 800d2b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d2b2:	4628      	mov	r0, r5
 800d2b4:	441a      	add	r2, r3
 800d2b6:	9209      	str	r2, [sp, #36]	; 0x24
 800d2b8:	f000 ff24 	bl	800e104 <__i2b>
 800d2bc:	4606      	mov	r6, r0
 800d2be:	2f00      	cmp	r7, #0
 800d2c0:	dd0c      	ble.n	800d2dc <_dtoa_r+0x77c>
 800d2c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2c4:	2b00      	cmp	r3, #0
 800d2c6:	dd09      	ble.n	800d2dc <_dtoa_r+0x77c>
 800d2c8:	42bb      	cmp	r3, r7
 800d2ca:	bfa8      	it	ge
 800d2cc:	463b      	movge	r3, r7
 800d2ce:	9a06      	ldr	r2, [sp, #24]
 800d2d0:	1aff      	subs	r7, r7, r3
 800d2d2:	1ad2      	subs	r2, r2, r3
 800d2d4:	9206      	str	r2, [sp, #24]
 800d2d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d2d8:	1ad3      	subs	r3, r2, r3
 800d2da:	9309      	str	r3, [sp, #36]	; 0x24
 800d2dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2de:	b1f3      	cbz	r3, 800d31e <_dtoa_r+0x7be>
 800d2e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d2e2:	2b00      	cmp	r3, #0
 800d2e4:	f000 80a8 	beq.w	800d438 <_dtoa_r+0x8d8>
 800d2e8:	2c00      	cmp	r4, #0
 800d2ea:	dd10      	ble.n	800d30e <_dtoa_r+0x7ae>
 800d2ec:	4631      	mov	r1, r6
 800d2ee:	4622      	mov	r2, r4
 800d2f0:	4628      	mov	r0, r5
 800d2f2:	f000 ffc5 	bl	800e280 <__pow5mult>
 800d2f6:	465a      	mov	r2, fp
 800d2f8:	4601      	mov	r1, r0
 800d2fa:	4606      	mov	r6, r0
 800d2fc:	4628      	mov	r0, r5
 800d2fe:	f000 ff17 	bl	800e130 <__multiply>
 800d302:	4680      	mov	r8, r0
 800d304:	4659      	mov	r1, fp
 800d306:	4628      	mov	r0, r5
 800d308:	f000 fdfc 	bl	800df04 <_Bfree>
 800d30c:	46c3      	mov	fp, r8
 800d30e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d310:	1b1a      	subs	r2, r3, r4
 800d312:	d004      	beq.n	800d31e <_dtoa_r+0x7be>
 800d314:	4659      	mov	r1, fp
 800d316:	4628      	mov	r0, r5
 800d318:	f000 ffb2 	bl	800e280 <__pow5mult>
 800d31c:	4683      	mov	fp, r0
 800d31e:	2101      	movs	r1, #1
 800d320:	4628      	mov	r0, r5
 800d322:	f000 feef 	bl	800e104 <__i2b>
 800d326:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d328:	4604      	mov	r4, r0
 800d32a:	2b00      	cmp	r3, #0
 800d32c:	f340 8086 	ble.w	800d43c <_dtoa_r+0x8dc>
 800d330:	461a      	mov	r2, r3
 800d332:	4601      	mov	r1, r0
 800d334:	4628      	mov	r0, r5
 800d336:	f000 ffa3 	bl	800e280 <__pow5mult>
 800d33a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d33c:	4604      	mov	r4, r0
 800d33e:	2b01      	cmp	r3, #1
 800d340:	dd7f      	ble.n	800d442 <_dtoa_r+0x8e2>
 800d342:	f04f 0800 	mov.w	r8, #0
 800d346:	6923      	ldr	r3, [r4, #16]
 800d348:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d34c:	6918      	ldr	r0, [r3, #16]
 800d34e:	f000 fe8b 	bl	800e068 <__hi0bits>
 800d352:	f1c0 0020 	rsb	r0, r0, #32
 800d356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d358:	4418      	add	r0, r3
 800d35a:	f010 001f 	ands.w	r0, r0, #31
 800d35e:	f000 8092 	beq.w	800d486 <_dtoa_r+0x926>
 800d362:	f1c0 0320 	rsb	r3, r0, #32
 800d366:	2b04      	cmp	r3, #4
 800d368:	f340 808a 	ble.w	800d480 <_dtoa_r+0x920>
 800d36c:	f1c0 001c 	rsb	r0, r0, #28
 800d370:	9b06      	ldr	r3, [sp, #24]
 800d372:	4407      	add	r7, r0
 800d374:	4403      	add	r3, r0
 800d376:	9306      	str	r3, [sp, #24]
 800d378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d37a:	4403      	add	r3, r0
 800d37c:	9309      	str	r3, [sp, #36]	; 0x24
 800d37e:	9b06      	ldr	r3, [sp, #24]
 800d380:	2b00      	cmp	r3, #0
 800d382:	dd05      	ble.n	800d390 <_dtoa_r+0x830>
 800d384:	4659      	mov	r1, fp
 800d386:	461a      	mov	r2, r3
 800d388:	4628      	mov	r0, r5
 800d38a:	f000 ffd3 	bl	800e334 <__lshift>
 800d38e:	4683      	mov	fp, r0
 800d390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d392:	2b00      	cmp	r3, #0
 800d394:	dd05      	ble.n	800d3a2 <_dtoa_r+0x842>
 800d396:	4621      	mov	r1, r4
 800d398:	461a      	mov	r2, r3
 800d39a:	4628      	mov	r0, r5
 800d39c:	f000 ffca 	bl	800e334 <__lshift>
 800d3a0:	4604      	mov	r4, r0
 800d3a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d3a4:	2b00      	cmp	r3, #0
 800d3a6:	d070      	beq.n	800d48a <_dtoa_r+0x92a>
 800d3a8:	4621      	mov	r1, r4
 800d3aa:	4658      	mov	r0, fp
 800d3ac:	f001 f832 	bl	800e414 <__mcmp>
 800d3b0:	2800      	cmp	r0, #0
 800d3b2:	da6a      	bge.n	800d48a <_dtoa_r+0x92a>
 800d3b4:	2300      	movs	r3, #0
 800d3b6:	4659      	mov	r1, fp
 800d3b8:	220a      	movs	r2, #10
 800d3ba:	4628      	mov	r0, r5
 800d3bc:	f000 fdc4 	bl	800df48 <__multadd>
 800d3c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d3c2:	4683      	mov	fp, r0
 800d3c4:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d3c8:	2b00      	cmp	r3, #0
 800d3ca:	f000 8194 	beq.w	800d6f6 <_dtoa_r+0xb96>
 800d3ce:	4631      	mov	r1, r6
 800d3d0:	2300      	movs	r3, #0
 800d3d2:	220a      	movs	r2, #10
 800d3d4:	4628      	mov	r0, r5
 800d3d6:	f000 fdb7 	bl	800df48 <__multadd>
 800d3da:	f1b9 0f00 	cmp.w	r9, #0
 800d3de:	4606      	mov	r6, r0
 800d3e0:	f300 8093 	bgt.w	800d50a <_dtoa_r+0x9aa>
 800d3e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d3e6:	2b02      	cmp	r3, #2
 800d3e8:	dc57      	bgt.n	800d49a <_dtoa_r+0x93a>
 800d3ea:	e08e      	b.n	800d50a <_dtoa_r+0x9aa>
 800d3ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800d3ee:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d3f2:	e757      	b.n	800d2a4 <_dtoa_r+0x744>
 800d3f4:	9b08      	ldr	r3, [sp, #32]
 800d3f6:	1e5c      	subs	r4, r3, #1
 800d3f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3fa:	42a3      	cmp	r3, r4
 800d3fc:	bfb7      	itett	lt
 800d3fe:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d400:	1b1c      	subge	r4, r3, r4
 800d402:	1ae2      	sublt	r2, r4, r3
 800d404:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800d406:	bfbe      	ittt	lt
 800d408:	940a      	strlt	r4, [sp, #40]	; 0x28
 800d40a:	189b      	addlt	r3, r3, r2
 800d40c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800d40e:	9b08      	ldr	r3, [sp, #32]
 800d410:	bfb8      	it	lt
 800d412:	2400      	movlt	r4, #0
 800d414:	2b00      	cmp	r3, #0
 800d416:	bfbb      	ittet	lt
 800d418:	9b06      	ldrlt	r3, [sp, #24]
 800d41a:	9a08      	ldrlt	r2, [sp, #32]
 800d41c:	9f06      	ldrge	r7, [sp, #24]
 800d41e:	1a9f      	sublt	r7, r3, r2
 800d420:	bfac      	ite	ge
 800d422:	9b08      	ldrge	r3, [sp, #32]
 800d424:	2300      	movlt	r3, #0
 800d426:	e73f      	b.n	800d2a8 <_dtoa_r+0x748>
 800d428:	3fe00000 	.word	0x3fe00000
 800d42c:	40240000 	.word	0x40240000
 800d430:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d432:	9f06      	ldr	r7, [sp, #24]
 800d434:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800d436:	e742      	b.n	800d2be <_dtoa_r+0x75e>
 800d438:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d43a:	e76b      	b.n	800d314 <_dtoa_r+0x7b4>
 800d43c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d43e:	2b01      	cmp	r3, #1
 800d440:	dc19      	bgt.n	800d476 <_dtoa_r+0x916>
 800d442:	9b04      	ldr	r3, [sp, #16]
 800d444:	b9bb      	cbnz	r3, 800d476 <_dtoa_r+0x916>
 800d446:	9b05      	ldr	r3, [sp, #20]
 800d448:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800d44c:	b99b      	cbnz	r3, 800d476 <_dtoa_r+0x916>
 800d44e:	9b05      	ldr	r3, [sp, #20]
 800d450:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800d454:	0d1b      	lsrs	r3, r3, #20
 800d456:	051b      	lsls	r3, r3, #20
 800d458:	b183      	cbz	r3, 800d47c <_dtoa_r+0x91c>
 800d45a:	f04f 0801 	mov.w	r8, #1
 800d45e:	9b06      	ldr	r3, [sp, #24]
 800d460:	3301      	adds	r3, #1
 800d462:	9306      	str	r3, [sp, #24]
 800d464:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d466:	3301      	adds	r3, #1
 800d468:	9309      	str	r3, [sp, #36]	; 0x24
 800d46a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d46c:	2b00      	cmp	r3, #0
 800d46e:	f47f af6a 	bne.w	800d346 <_dtoa_r+0x7e6>
 800d472:	2001      	movs	r0, #1
 800d474:	e76f      	b.n	800d356 <_dtoa_r+0x7f6>
 800d476:	f04f 0800 	mov.w	r8, #0
 800d47a:	e7f6      	b.n	800d46a <_dtoa_r+0x90a>
 800d47c:	4698      	mov	r8, r3
 800d47e:	e7f4      	b.n	800d46a <_dtoa_r+0x90a>
 800d480:	f43f af7d 	beq.w	800d37e <_dtoa_r+0x81e>
 800d484:	4618      	mov	r0, r3
 800d486:	301c      	adds	r0, #28
 800d488:	e772      	b.n	800d370 <_dtoa_r+0x810>
 800d48a:	9b08      	ldr	r3, [sp, #32]
 800d48c:	2b00      	cmp	r3, #0
 800d48e:	dc36      	bgt.n	800d4fe <_dtoa_r+0x99e>
 800d490:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d492:	2b02      	cmp	r3, #2
 800d494:	dd33      	ble.n	800d4fe <_dtoa_r+0x99e>
 800d496:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d49a:	f1b9 0f00 	cmp.w	r9, #0
 800d49e:	d10d      	bne.n	800d4bc <_dtoa_r+0x95c>
 800d4a0:	4621      	mov	r1, r4
 800d4a2:	464b      	mov	r3, r9
 800d4a4:	2205      	movs	r2, #5
 800d4a6:	4628      	mov	r0, r5
 800d4a8:	f000 fd4e 	bl	800df48 <__multadd>
 800d4ac:	4601      	mov	r1, r0
 800d4ae:	4604      	mov	r4, r0
 800d4b0:	4658      	mov	r0, fp
 800d4b2:	f000 ffaf 	bl	800e414 <__mcmp>
 800d4b6:	2800      	cmp	r0, #0
 800d4b8:	f73f adb8 	bgt.w	800d02c <_dtoa_r+0x4cc>
 800d4bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d4be:	9f03      	ldr	r7, [sp, #12]
 800d4c0:	ea6f 0a03 	mvn.w	sl, r3
 800d4c4:	f04f 0800 	mov.w	r8, #0
 800d4c8:	4621      	mov	r1, r4
 800d4ca:	4628      	mov	r0, r5
 800d4cc:	f000 fd1a 	bl	800df04 <_Bfree>
 800d4d0:	2e00      	cmp	r6, #0
 800d4d2:	f43f aea7 	beq.w	800d224 <_dtoa_r+0x6c4>
 800d4d6:	f1b8 0f00 	cmp.w	r8, #0
 800d4da:	d005      	beq.n	800d4e8 <_dtoa_r+0x988>
 800d4dc:	45b0      	cmp	r8, r6
 800d4de:	d003      	beq.n	800d4e8 <_dtoa_r+0x988>
 800d4e0:	4641      	mov	r1, r8
 800d4e2:	4628      	mov	r0, r5
 800d4e4:	f000 fd0e 	bl	800df04 <_Bfree>
 800d4e8:	4631      	mov	r1, r6
 800d4ea:	4628      	mov	r0, r5
 800d4ec:	f000 fd0a 	bl	800df04 <_Bfree>
 800d4f0:	e698      	b.n	800d224 <_dtoa_r+0x6c4>
 800d4f2:	2400      	movs	r4, #0
 800d4f4:	4626      	mov	r6, r4
 800d4f6:	e7e1      	b.n	800d4bc <_dtoa_r+0x95c>
 800d4f8:	46c2      	mov	sl, r8
 800d4fa:	4626      	mov	r6, r4
 800d4fc:	e596      	b.n	800d02c <_dtoa_r+0x4cc>
 800d4fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d500:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d504:	2b00      	cmp	r3, #0
 800d506:	f000 80fd 	beq.w	800d704 <_dtoa_r+0xba4>
 800d50a:	2f00      	cmp	r7, #0
 800d50c:	dd05      	ble.n	800d51a <_dtoa_r+0x9ba>
 800d50e:	4631      	mov	r1, r6
 800d510:	463a      	mov	r2, r7
 800d512:	4628      	mov	r0, r5
 800d514:	f000 ff0e 	bl	800e334 <__lshift>
 800d518:	4606      	mov	r6, r0
 800d51a:	f1b8 0f00 	cmp.w	r8, #0
 800d51e:	d05c      	beq.n	800d5da <_dtoa_r+0xa7a>
 800d520:	4628      	mov	r0, r5
 800d522:	6871      	ldr	r1, [r6, #4]
 800d524:	f000 fcae 	bl	800de84 <_Balloc>
 800d528:	4607      	mov	r7, r0
 800d52a:	b928      	cbnz	r0, 800d538 <_dtoa_r+0x9d8>
 800d52c:	4602      	mov	r2, r0
 800d52e:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d532:	4b7f      	ldr	r3, [pc, #508]	; (800d730 <_dtoa_r+0xbd0>)
 800d534:	f7ff bb28 	b.w	800cb88 <_dtoa_r+0x28>
 800d538:	6932      	ldr	r2, [r6, #16]
 800d53a:	f106 010c 	add.w	r1, r6, #12
 800d53e:	3202      	adds	r2, #2
 800d540:	0092      	lsls	r2, r2, #2
 800d542:	300c      	adds	r0, #12
 800d544:	f7fd fcb6 	bl	800aeb4 <memcpy>
 800d548:	2201      	movs	r2, #1
 800d54a:	4639      	mov	r1, r7
 800d54c:	4628      	mov	r0, r5
 800d54e:	f000 fef1 	bl	800e334 <__lshift>
 800d552:	46b0      	mov	r8, r6
 800d554:	4606      	mov	r6, r0
 800d556:	9b03      	ldr	r3, [sp, #12]
 800d558:	3301      	adds	r3, #1
 800d55a:	9308      	str	r3, [sp, #32]
 800d55c:	9b03      	ldr	r3, [sp, #12]
 800d55e:	444b      	add	r3, r9
 800d560:	930a      	str	r3, [sp, #40]	; 0x28
 800d562:	9b04      	ldr	r3, [sp, #16]
 800d564:	f003 0301 	and.w	r3, r3, #1
 800d568:	9309      	str	r3, [sp, #36]	; 0x24
 800d56a:	9b08      	ldr	r3, [sp, #32]
 800d56c:	4621      	mov	r1, r4
 800d56e:	3b01      	subs	r3, #1
 800d570:	4658      	mov	r0, fp
 800d572:	9304      	str	r3, [sp, #16]
 800d574:	f7ff fa66 	bl	800ca44 <quorem>
 800d578:	4603      	mov	r3, r0
 800d57a:	4641      	mov	r1, r8
 800d57c:	3330      	adds	r3, #48	; 0x30
 800d57e:	9006      	str	r0, [sp, #24]
 800d580:	4658      	mov	r0, fp
 800d582:	930b      	str	r3, [sp, #44]	; 0x2c
 800d584:	f000 ff46 	bl	800e414 <__mcmp>
 800d588:	4632      	mov	r2, r6
 800d58a:	4681      	mov	r9, r0
 800d58c:	4621      	mov	r1, r4
 800d58e:	4628      	mov	r0, r5
 800d590:	f000 ff5c 	bl	800e44c <__mdiff>
 800d594:	68c2      	ldr	r2, [r0, #12]
 800d596:	4607      	mov	r7, r0
 800d598:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d59a:	bb02      	cbnz	r2, 800d5de <_dtoa_r+0xa7e>
 800d59c:	4601      	mov	r1, r0
 800d59e:	4658      	mov	r0, fp
 800d5a0:	f000 ff38 	bl	800e414 <__mcmp>
 800d5a4:	4602      	mov	r2, r0
 800d5a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d5a8:	4639      	mov	r1, r7
 800d5aa:	4628      	mov	r0, r5
 800d5ac:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800d5b0:	f000 fca8 	bl	800df04 <_Bfree>
 800d5b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d5b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d5b8:	9f08      	ldr	r7, [sp, #32]
 800d5ba:	ea43 0102 	orr.w	r1, r3, r2
 800d5be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d5c0:	430b      	orrs	r3, r1
 800d5c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d5c4:	d10d      	bne.n	800d5e2 <_dtoa_r+0xa82>
 800d5c6:	2b39      	cmp	r3, #57	; 0x39
 800d5c8:	d029      	beq.n	800d61e <_dtoa_r+0xabe>
 800d5ca:	f1b9 0f00 	cmp.w	r9, #0
 800d5ce:	dd01      	ble.n	800d5d4 <_dtoa_r+0xa74>
 800d5d0:	9b06      	ldr	r3, [sp, #24]
 800d5d2:	3331      	adds	r3, #49	; 0x31
 800d5d4:	9a04      	ldr	r2, [sp, #16]
 800d5d6:	7013      	strb	r3, [r2, #0]
 800d5d8:	e776      	b.n	800d4c8 <_dtoa_r+0x968>
 800d5da:	4630      	mov	r0, r6
 800d5dc:	e7b9      	b.n	800d552 <_dtoa_r+0x9f2>
 800d5de:	2201      	movs	r2, #1
 800d5e0:	e7e2      	b.n	800d5a8 <_dtoa_r+0xa48>
 800d5e2:	f1b9 0f00 	cmp.w	r9, #0
 800d5e6:	db06      	blt.n	800d5f6 <_dtoa_r+0xa96>
 800d5e8:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d5ea:	ea41 0909 	orr.w	r9, r1, r9
 800d5ee:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d5f0:	ea59 0101 	orrs.w	r1, r9, r1
 800d5f4:	d120      	bne.n	800d638 <_dtoa_r+0xad8>
 800d5f6:	2a00      	cmp	r2, #0
 800d5f8:	ddec      	ble.n	800d5d4 <_dtoa_r+0xa74>
 800d5fa:	4659      	mov	r1, fp
 800d5fc:	2201      	movs	r2, #1
 800d5fe:	4628      	mov	r0, r5
 800d600:	9308      	str	r3, [sp, #32]
 800d602:	f000 fe97 	bl	800e334 <__lshift>
 800d606:	4621      	mov	r1, r4
 800d608:	4683      	mov	fp, r0
 800d60a:	f000 ff03 	bl	800e414 <__mcmp>
 800d60e:	2800      	cmp	r0, #0
 800d610:	9b08      	ldr	r3, [sp, #32]
 800d612:	dc02      	bgt.n	800d61a <_dtoa_r+0xaba>
 800d614:	d1de      	bne.n	800d5d4 <_dtoa_r+0xa74>
 800d616:	07da      	lsls	r2, r3, #31
 800d618:	d5dc      	bpl.n	800d5d4 <_dtoa_r+0xa74>
 800d61a:	2b39      	cmp	r3, #57	; 0x39
 800d61c:	d1d8      	bne.n	800d5d0 <_dtoa_r+0xa70>
 800d61e:	2339      	movs	r3, #57	; 0x39
 800d620:	9a04      	ldr	r2, [sp, #16]
 800d622:	7013      	strb	r3, [r2, #0]
 800d624:	463b      	mov	r3, r7
 800d626:	461f      	mov	r7, r3
 800d628:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800d62c:	3b01      	subs	r3, #1
 800d62e:	2a39      	cmp	r2, #57	; 0x39
 800d630:	d050      	beq.n	800d6d4 <_dtoa_r+0xb74>
 800d632:	3201      	adds	r2, #1
 800d634:	701a      	strb	r2, [r3, #0]
 800d636:	e747      	b.n	800d4c8 <_dtoa_r+0x968>
 800d638:	2a00      	cmp	r2, #0
 800d63a:	dd03      	ble.n	800d644 <_dtoa_r+0xae4>
 800d63c:	2b39      	cmp	r3, #57	; 0x39
 800d63e:	d0ee      	beq.n	800d61e <_dtoa_r+0xabe>
 800d640:	3301      	adds	r3, #1
 800d642:	e7c7      	b.n	800d5d4 <_dtoa_r+0xa74>
 800d644:	9a08      	ldr	r2, [sp, #32]
 800d646:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d648:	f802 3c01 	strb.w	r3, [r2, #-1]
 800d64c:	428a      	cmp	r2, r1
 800d64e:	d02a      	beq.n	800d6a6 <_dtoa_r+0xb46>
 800d650:	4659      	mov	r1, fp
 800d652:	2300      	movs	r3, #0
 800d654:	220a      	movs	r2, #10
 800d656:	4628      	mov	r0, r5
 800d658:	f000 fc76 	bl	800df48 <__multadd>
 800d65c:	45b0      	cmp	r8, r6
 800d65e:	4683      	mov	fp, r0
 800d660:	f04f 0300 	mov.w	r3, #0
 800d664:	f04f 020a 	mov.w	r2, #10
 800d668:	4641      	mov	r1, r8
 800d66a:	4628      	mov	r0, r5
 800d66c:	d107      	bne.n	800d67e <_dtoa_r+0xb1e>
 800d66e:	f000 fc6b 	bl	800df48 <__multadd>
 800d672:	4680      	mov	r8, r0
 800d674:	4606      	mov	r6, r0
 800d676:	9b08      	ldr	r3, [sp, #32]
 800d678:	3301      	adds	r3, #1
 800d67a:	9308      	str	r3, [sp, #32]
 800d67c:	e775      	b.n	800d56a <_dtoa_r+0xa0a>
 800d67e:	f000 fc63 	bl	800df48 <__multadd>
 800d682:	4631      	mov	r1, r6
 800d684:	4680      	mov	r8, r0
 800d686:	2300      	movs	r3, #0
 800d688:	220a      	movs	r2, #10
 800d68a:	4628      	mov	r0, r5
 800d68c:	f000 fc5c 	bl	800df48 <__multadd>
 800d690:	4606      	mov	r6, r0
 800d692:	e7f0      	b.n	800d676 <_dtoa_r+0xb16>
 800d694:	f1b9 0f00 	cmp.w	r9, #0
 800d698:	bfcc      	ite	gt
 800d69a:	464f      	movgt	r7, r9
 800d69c:	2701      	movle	r7, #1
 800d69e:	f04f 0800 	mov.w	r8, #0
 800d6a2:	9a03      	ldr	r2, [sp, #12]
 800d6a4:	4417      	add	r7, r2
 800d6a6:	4659      	mov	r1, fp
 800d6a8:	2201      	movs	r2, #1
 800d6aa:	4628      	mov	r0, r5
 800d6ac:	9308      	str	r3, [sp, #32]
 800d6ae:	f000 fe41 	bl	800e334 <__lshift>
 800d6b2:	4621      	mov	r1, r4
 800d6b4:	4683      	mov	fp, r0
 800d6b6:	f000 fead 	bl	800e414 <__mcmp>
 800d6ba:	2800      	cmp	r0, #0
 800d6bc:	dcb2      	bgt.n	800d624 <_dtoa_r+0xac4>
 800d6be:	d102      	bne.n	800d6c6 <_dtoa_r+0xb66>
 800d6c0:	9b08      	ldr	r3, [sp, #32]
 800d6c2:	07db      	lsls	r3, r3, #31
 800d6c4:	d4ae      	bmi.n	800d624 <_dtoa_r+0xac4>
 800d6c6:	463b      	mov	r3, r7
 800d6c8:	461f      	mov	r7, r3
 800d6ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d6ce:	2a30      	cmp	r2, #48	; 0x30
 800d6d0:	d0fa      	beq.n	800d6c8 <_dtoa_r+0xb68>
 800d6d2:	e6f9      	b.n	800d4c8 <_dtoa_r+0x968>
 800d6d4:	9a03      	ldr	r2, [sp, #12]
 800d6d6:	429a      	cmp	r2, r3
 800d6d8:	d1a5      	bne.n	800d626 <_dtoa_r+0xac6>
 800d6da:	2331      	movs	r3, #49	; 0x31
 800d6dc:	f10a 0a01 	add.w	sl, sl, #1
 800d6e0:	e779      	b.n	800d5d6 <_dtoa_r+0xa76>
 800d6e2:	4b14      	ldr	r3, [pc, #80]	; (800d734 <_dtoa_r+0xbd4>)
 800d6e4:	f7ff baa8 	b.w	800cc38 <_dtoa_r+0xd8>
 800d6e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d6ea:	2b00      	cmp	r3, #0
 800d6ec:	f47f aa81 	bne.w	800cbf2 <_dtoa_r+0x92>
 800d6f0:	4b11      	ldr	r3, [pc, #68]	; (800d738 <_dtoa_r+0xbd8>)
 800d6f2:	f7ff baa1 	b.w	800cc38 <_dtoa_r+0xd8>
 800d6f6:	f1b9 0f00 	cmp.w	r9, #0
 800d6fa:	dc03      	bgt.n	800d704 <_dtoa_r+0xba4>
 800d6fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d6fe:	2b02      	cmp	r3, #2
 800d700:	f73f aecb 	bgt.w	800d49a <_dtoa_r+0x93a>
 800d704:	9f03      	ldr	r7, [sp, #12]
 800d706:	4621      	mov	r1, r4
 800d708:	4658      	mov	r0, fp
 800d70a:	f7ff f99b 	bl	800ca44 <quorem>
 800d70e:	9a03      	ldr	r2, [sp, #12]
 800d710:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800d714:	f807 3b01 	strb.w	r3, [r7], #1
 800d718:	1aba      	subs	r2, r7, r2
 800d71a:	4591      	cmp	r9, r2
 800d71c:	ddba      	ble.n	800d694 <_dtoa_r+0xb34>
 800d71e:	4659      	mov	r1, fp
 800d720:	2300      	movs	r3, #0
 800d722:	220a      	movs	r2, #10
 800d724:	4628      	mov	r0, r5
 800d726:	f000 fc0f 	bl	800df48 <__multadd>
 800d72a:	4683      	mov	fp, r0
 800d72c:	e7eb      	b.n	800d706 <_dtoa_r+0xba6>
 800d72e:	bf00      	nop
 800d730:	08010f48 	.word	0x08010f48
 800d734:	08011141 	.word	0x08011141
 800d738:	08010ec9 	.word	0x08010ec9

0800d73c <rshift>:
 800d73c:	6903      	ldr	r3, [r0, #16]
 800d73e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d742:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800d746:	f100 0414 	add.w	r4, r0, #20
 800d74a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800d74e:	dd46      	ble.n	800d7de <rshift+0xa2>
 800d750:	f011 011f 	ands.w	r1, r1, #31
 800d754:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800d758:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800d75c:	d10c      	bne.n	800d778 <rshift+0x3c>
 800d75e:	4629      	mov	r1, r5
 800d760:	f100 0710 	add.w	r7, r0, #16
 800d764:	42b1      	cmp	r1, r6
 800d766:	d335      	bcc.n	800d7d4 <rshift+0x98>
 800d768:	1a9b      	subs	r3, r3, r2
 800d76a:	009b      	lsls	r3, r3, #2
 800d76c:	1eea      	subs	r2, r5, #3
 800d76e:	4296      	cmp	r6, r2
 800d770:	bf38      	it	cc
 800d772:	2300      	movcc	r3, #0
 800d774:	4423      	add	r3, r4
 800d776:	e015      	b.n	800d7a4 <rshift+0x68>
 800d778:	46a1      	mov	r9, r4
 800d77a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800d77e:	f1c1 0820 	rsb	r8, r1, #32
 800d782:	40cf      	lsrs	r7, r1
 800d784:	f105 0e04 	add.w	lr, r5, #4
 800d788:	4576      	cmp	r6, lr
 800d78a:	46f4      	mov	ip, lr
 800d78c:	d816      	bhi.n	800d7bc <rshift+0x80>
 800d78e:	1a9a      	subs	r2, r3, r2
 800d790:	0092      	lsls	r2, r2, #2
 800d792:	3a04      	subs	r2, #4
 800d794:	3501      	adds	r5, #1
 800d796:	42ae      	cmp	r6, r5
 800d798:	bf38      	it	cc
 800d79a:	2200      	movcc	r2, #0
 800d79c:	18a3      	adds	r3, r4, r2
 800d79e:	50a7      	str	r7, [r4, r2]
 800d7a0:	b107      	cbz	r7, 800d7a4 <rshift+0x68>
 800d7a2:	3304      	adds	r3, #4
 800d7a4:	42a3      	cmp	r3, r4
 800d7a6:	eba3 0204 	sub.w	r2, r3, r4
 800d7aa:	bf08      	it	eq
 800d7ac:	2300      	moveq	r3, #0
 800d7ae:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800d7b2:	6102      	str	r2, [r0, #16]
 800d7b4:	bf08      	it	eq
 800d7b6:	6143      	streq	r3, [r0, #20]
 800d7b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d7bc:	f8dc c000 	ldr.w	ip, [ip]
 800d7c0:	fa0c fc08 	lsl.w	ip, ip, r8
 800d7c4:	ea4c 0707 	orr.w	r7, ip, r7
 800d7c8:	f849 7b04 	str.w	r7, [r9], #4
 800d7cc:	f85e 7b04 	ldr.w	r7, [lr], #4
 800d7d0:	40cf      	lsrs	r7, r1
 800d7d2:	e7d9      	b.n	800d788 <rshift+0x4c>
 800d7d4:	f851 cb04 	ldr.w	ip, [r1], #4
 800d7d8:	f847 cf04 	str.w	ip, [r7, #4]!
 800d7dc:	e7c2      	b.n	800d764 <rshift+0x28>
 800d7de:	4623      	mov	r3, r4
 800d7e0:	e7e0      	b.n	800d7a4 <rshift+0x68>

0800d7e2 <__hexdig_fun>:
 800d7e2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800d7e6:	2b09      	cmp	r3, #9
 800d7e8:	d802      	bhi.n	800d7f0 <__hexdig_fun+0xe>
 800d7ea:	3820      	subs	r0, #32
 800d7ec:	b2c0      	uxtb	r0, r0
 800d7ee:	4770      	bx	lr
 800d7f0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800d7f4:	2b05      	cmp	r3, #5
 800d7f6:	d801      	bhi.n	800d7fc <__hexdig_fun+0x1a>
 800d7f8:	3847      	subs	r0, #71	; 0x47
 800d7fa:	e7f7      	b.n	800d7ec <__hexdig_fun+0xa>
 800d7fc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800d800:	2b05      	cmp	r3, #5
 800d802:	d801      	bhi.n	800d808 <__hexdig_fun+0x26>
 800d804:	3827      	subs	r0, #39	; 0x27
 800d806:	e7f1      	b.n	800d7ec <__hexdig_fun+0xa>
 800d808:	2000      	movs	r0, #0
 800d80a:	4770      	bx	lr

0800d80c <__gethex>:
 800d80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d810:	b08b      	sub	sp, #44	; 0x2c
 800d812:	9305      	str	r3, [sp, #20]
 800d814:	4bb2      	ldr	r3, [pc, #712]	; (800dae0 <__gethex+0x2d4>)
 800d816:	9002      	str	r0, [sp, #8]
 800d818:	681b      	ldr	r3, [r3, #0]
 800d81a:	468b      	mov	fp, r1
 800d81c:	4618      	mov	r0, r3
 800d81e:	4690      	mov	r8, r2
 800d820:	9303      	str	r3, [sp, #12]
 800d822:	f7f2 fcb7 	bl	8000194 <strlen>
 800d826:	4682      	mov	sl, r0
 800d828:	9b03      	ldr	r3, [sp, #12]
 800d82a:	f8db 2000 	ldr.w	r2, [fp]
 800d82e:	4403      	add	r3, r0
 800d830:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800d834:	9306      	str	r3, [sp, #24]
 800d836:	1c93      	adds	r3, r2, #2
 800d838:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800d83c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800d840:	32fe      	adds	r2, #254	; 0xfe
 800d842:	18d1      	adds	r1, r2, r3
 800d844:	461f      	mov	r7, r3
 800d846:	f813 0b01 	ldrb.w	r0, [r3], #1
 800d84a:	9101      	str	r1, [sp, #4]
 800d84c:	2830      	cmp	r0, #48	; 0x30
 800d84e:	d0f8      	beq.n	800d842 <__gethex+0x36>
 800d850:	f7ff ffc7 	bl	800d7e2 <__hexdig_fun>
 800d854:	4604      	mov	r4, r0
 800d856:	2800      	cmp	r0, #0
 800d858:	d13a      	bne.n	800d8d0 <__gethex+0xc4>
 800d85a:	4652      	mov	r2, sl
 800d85c:	4638      	mov	r0, r7
 800d85e:	9903      	ldr	r1, [sp, #12]
 800d860:	f001 fd9a 	bl	800f398 <strncmp>
 800d864:	4605      	mov	r5, r0
 800d866:	2800      	cmp	r0, #0
 800d868:	d166      	bne.n	800d938 <__gethex+0x12c>
 800d86a:	f817 000a 	ldrb.w	r0, [r7, sl]
 800d86e:	eb07 060a 	add.w	r6, r7, sl
 800d872:	f7ff ffb6 	bl	800d7e2 <__hexdig_fun>
 800d876:	2800      	cmp	r0, #0
 800d878:	d060      	beq.n	800d93c <__gethex+0x130>
 800d87a:	4633      	mov	r3, r6
 800d87c:	7818      	ldrb	r0, [r3, #0]
 800d87e:	461f      	mov	r7, r3
 800d880:	2830      	cmp	r0, #48	; 0x30
 800d882:	f103 0301 	add.w	r3, r3, #1
 800d886:	d0f9      	beq.n	800d87c <__gethex+0x70>
 800d888:	f7ff ffab 	bl	800d7e2 <__hexdig_fun>
 800d88c:	2301      	movs	r3, #1
 800d88e:	fab0 f480 	clz	r4, r0
 800d892:	4635      	mov	r5, r6
 800d894:	0964      	lsrs	r4, r4, #5
 800d896:	9301      	str	r3, [sp, #4]
 800d898:	463a      	mov	r2, r7
 800d89a:	4616      	mov	r6, r2
 800d89c:	7830      	ldrb	r0, [r6, #0]
 800d89e:	3201      	adds	r2, #1
 800d8a0:	f7ff ff9f 	bl	800d7e2 <__hexdig_fun>
 800d8a4:	2800      	cmp	r0, #0
 800d8a6:	d1f8      	bne.n	800d89a <__gethex+0x8e>
 800d8a8:	4652      	mov	r2, sl
 800d8aa:	4630      	mov	r0, r6
 800d8ac:	9903      	ldr	r1, [sp, #12]
 800d8ae:	f001 fd73 	bl	800f398 <strncmp>
 800d8b2:	b980      	cbnz	r0, 800d8d6 <__gethex+0xca>
 800d8b4:	b94d      	cbnz	r5, 800d8ca <__gethex+0xbe>
 800d8b6:	eb06 050a 	add.w	r5, r6, sl
 800d8ba:	462a      	mov	r2, r5
 800d8bc:	4616      	mov	r6, r2
 800d8be:	7830      	ldrb	r0, [r6, #0]
 800d8c0:	3201      	adds	r2, #1
 800d8c2:	f7ff ff8e 	bl	800d7e2 <__hexdig_fun>
 800d8c6:	2800      	cmp	r0, #0
 800d8c8:	d1f8      	bne.n	800d8bc <__gethex+0xb0>
 800d8ca:	1bad      	subs	r5, r5, r6
 800d8cc:	00ad      	lsls	r5, r5, #2
 800d8ce:	e004      	b.n	800d8da <__gethex+0xce>
 800d8d0:	2400      	movs	r4, #0
 800d8d2:	4625      	mov	r5, r4
 800d8d4:	e7e0      	b.n	800d898 <__gethex+0x8c>
 800d8d6:	2d00      	cmp	r5, #0
 800d8d8:	d1f7      	bne.n	800d8ca <__gethex+0xbe>
 800d8da:	7833      	ldrb	r3, [r6, #0]
 800d8dc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800d8e0:	2b50      	cmp	r3, #80	; 0x50
 800d8e2:	d139      	bne.n	800d958 <__gethex+0x14c>
 800d8e4:	7873      	ldrb	r3, [r6, #1]
 800d8e6:	2b2b      	cmp	r3, #43	; 0x2b
 800d8e8:	d02a      	beq.n	800d940 <__gethex+0x134>
 800d8ea:	2b2d      	cmp	r3, #45	; 0x2d
 800d8ec:	d02c      	beq.n	800d948 <__gethex+0x13c>
 800d8ee:	f04f 0900 	mov.w	r9, #0
 800d8f2:	1c71      	adds	r1, r6, #1
 800d8f4:	7808      	ldrb	r0, [r1, #0]
 800d8f6:	f7ff ff74 	bl	800d7e2 <__hexdig_fun>
 800d8fa:	1e43      	subs	r3, r0, #1
 800d8fc:	b2db      	uxtb	r3, r3
 800d8fe:	2b18      	cmp	r3, #24
 800d900:	d82a      	bhi.n	800d958 <__gethex+0x14c>
 800d902:	f1a0 0210 	sub.w	r2, r0, #16
 800d906:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d90a:	f7ff ff6a 	bl	800d7e2 <__hexdig_fun>
 800d90e:	1e43      	subs	r3, r0, #1
 800d910:	b2db      	uxtb	r3, r3
 800d912:	2b18      	cmp	r3, #24
 800d914:	d91b      	bls.n	800d94e <__gethex+0x142>
 800d916:	f1b9 0f00 	cmp.w	r9, #0
 800d91a:	d000      	beq.n	800d91e <__gethex+0x112>
 800d91c:	4252      	negs	r2, r2
 800d91e:	4415      	add	r5, r2
 800d920:	f8cb 1000 	str.w	r1, [fp]
 800d924:	b1d4      	cbz	r4, 800d95c <__gethex+0x150>
 800d926:	9b01      	ldr	r3, [sp, #4]
 800d928:	2b00      	cmp	r3, #0
 800d92a:	bf14      	ite	ne
 800d92c:	2700      	movne	r7, #0
 800d92e:	2706      	moveq	r7, #6
 800d930:	4638      	mov	r0, r7
 800d932:	b00b      	add	sp, #44	; 0x2c
 800d934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d938:	463e      	mov	r6, r7
 800d93a:	4625      	mov	r5, r4
 800d93c:	2401      	movs	r4, #1
 800d93e:	e7cc      	b.n	800d8da <__gethex+0xce>
 800d940:	f04f 0900 	mov.w	r9, #0
 800d944:	1cb1      	adds	r1, r6, #2
 800d946:	e7d5      	b.n	800d8f4 <__gethex+0xe8>
 800d948:	f04f 0901 	mov.w	r9, #1
 800d94c:	e7fa      	b.n	800d944 <__gethex+0x138>
 800d94e:	230a      	movs	r3, #10
 800d950:	fb03 0202 	mla	r2, r3, r2, r0
 800d954:	3a10      	subs	r2, #16
 800d956:	e7d6      	b.n	800d906 <__gethex+0xfa>
 800d958:	4631      	mov	r1, r6
 800d95a:	e7e1      	b.n	800d920 <__gethex+0x114>
 800d95c:	4621      	mov	r1, r4
 800d95e:	1bf3      	subs	r3, r6, r7
 800d960:	3b01      	subs	r3, #1
 800d962:	2b07      	cmp	r3, #7
 800d964:	dc0a      	bgt.n	800d97c <__gethex+0x170>
 800d966:	9802      	ldr	r0, [sp, #8]
 800d968:	f000 fa8c 	bl	800de84 <_Balloc>
 800d96c:	4604      	mov	r4, r0
 800d96e:	b940      	cbnz	r0, 800d982 <__gethex+0x176>
 800d970:	4602      	mov	r2, r0
 800d972:	21de      	movs	r1, #222	; 0xde
 800d974:	4b5b      	ldr	r3, [pc, #364]	; (800dae4 <__gethex+0x2d8>)
 800d976:	485c      	ldr	r0, [pc, #368]	; (800dae8 <__gethex+0x2dc>)
 800d978:	f001 fddc 	bl	800f534 <__assert_func>
 800d97c:	3101      	adds	r1, #1
 800d97e:	105b      	asrs	r3, r3, #1
 800d980:	e7ef      	b.n	800d962 <__gethex+0x156>
 800d982:	f04f 0b00 	mov.w	fp, #0
 800d986:	f100 0914 	add.w	r9, r0, #20
 800d98a:	f1ca 0301 	rsb	r3, sl, #1
 800d98e:	f8cd 9010 	str.w	r9, [sp, #16]
 800d992:	f8cd b004 	str.w	fp, [sp, #4]
 800d996:	9308      	str	r3, [sp, #32]
 800d998:	42b7      	cmp	r7, r6
 800d99a:	d33f      	bcc.n	800da1c <__gethex+0x210>
 800d99c:	9f04      	ldr	r7, [sp, #16]
 800d99e:	9b01      	ldr	r3, [sp, #4]
 800d9a0:	f847 3b04 	str.w	r3, [r7], #4
 800d9a4:	eba7 0709 	sub.w	r7, r7, r9
 800d9a8:	10bf      	asrs	r7, r7, #2
 800d9aa:	6127      	str	r7, [r4, #16]
 800d9ac:	4618      	mov	r0, r3
 800d9ae:	f000 fb5b 	bl	800e068 <__hi0bits>
 800d9b2:	017f      	lsls	r7, r7, #5
 800d9b4:	f8d8 6000 	ldr.w	r6, [r8]
 800d9b8:	1a3f      	subs	r7, r7, r0
 800d9ba:	42b7      	cmp	r7, r6
 800d9bc:	dd62      	ble.n	800da84 <__gethex+0x278>
 800d9be:	1bbf      	subs	r7, r7, r6
 800d9c0:	4639      	mov	r1, r7
 800d9c2:	4620      	mov	r0, r4
 800d9c4:	f000 fef5 	bl	800e7b2 <__any_on>
 800d9c8:	4682      	mov	sl, r0
 800d9ca:	b1a8      	cbz	r0, 800d9f8 <__gethex+0x1ec>
 800d9cc:	f04f 0a01 	mov.w	sl, #1
 800d9d0:	1e7b      	subs	r3, r7, #1
 800d9d2:	1159      	asrs	r1, r3, #5
 800d9d4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d9d8:	f003 021f 	and.w	r2, r3, #31
 800d9dc:	fa0a f202 	lsl.w	r2, sl, r2
 800d9e0:	420a      	tst	r2, r1
 800d9e2:	d009      	beq.n	800d9f8 <__gethex+0x1ec>
 800d9e4:	4553      	cmp	r3, sl
 800d9e6:	dd05      	ble.n	800d9f4 <__gethex+0x1e8>
 800d9e8:	4620      	mov	r0, r4
 800d9ea:	1eb9      	subs	r1, r7, #2
 800d9ec:	f000 fee1 	bl	800e7b2 <__any_on>
 800d9f0:	2800      	cmp	r0, #0
 800d9f2:	d144      	bne.n	800da7e <__gethex+0x272>
 800d9f4:	f04f 0a02 	mov.w	sl, #2
 800d9f8:	4639      	mov	r1, r7
 800d9fa:	4620      	mov	r0, r4
 800d9fc:	f7ff fe9e 	bl	800d73c <rshift>
 800da00:	443d      	add	r5, r7
 800da02:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800da06:	42ab      	cmp	r3, r5
 800da08:	da4a      	bge.n	800daa0 <__gethex+0x294>
 800da0a:	4621      	mov	r1, r4
 800da0c:	9802      	ldr	r0, [sp, #8]
 800da0e:	f000 fa79 	bl	800df04 <_Bfree>
 800da12:	2300      	movs	r3, #0
 800da14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800da16:	27a3      	movs	r7, #163	; 0xa3
 800da18:	6013      	str	r3, [r2, #0]
 800da1a:	e789      	b.n	800d930 <__gethex+0x124>
 800da1c:	1e73      	subs	r3, r6, #1
 800da1e:	9a06      	ldr	r2, [sp, #24]
 800da20:	9307      	str	r3, [sp, #28]
 800da22:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800da26:	4293      	cmp	r3, r2
 800da28:	d019      	beq.n	800da5e <__gethex+0x252>
 800da2a:	f1bb 0f20 	cmp.w	fp, #32
 800da2e:	d107      	bne.n	800da40 <__gethex+0x234>
 800da30:	9b04      	ldr	r3, [sp, #16]
 800da32:	9a01      	ldr	r2, [sp, #4]
 800da34:	f843 2b04 	str.w	r2, [r3], #4
 800da38:	9304      	str	r3, [sp, #16]
 800da3a:	2300      	movs	r3, #0
 800da3c:	469b      	mov	fp, r3
 800da3e:	9301      	str	r3, [sp, #4]
 800da40:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800da44:	f7ff fecd 	bl	800d7e2 <__hexdig_fun>
 800da48:	9b01      	ldr	r3, [sp, #4]
 800da4a:	f000 000f 	and.w	r0, r0, #15
 800da4e:	fa00 f00b 	lsl.w	r0, r0, fp
 800da52:	4303      	orrs	r3, r0
 800da54:	9301      	str	r3, [sp, #4]
 800da56:	f10b 0b04 	add.w	fp, fp, #4
 800da5a:	9b07      	ldr	r3, [sp, #28]
 800da5c:	e00d      	b.n	800da7a <__gethex+0x26e>
 800da5e:	9a08      	ldr	r2, [sp, #32]
 800da60:	1e73      	subs	r3, r6, #1
 800da62:	4413      	add	r3, r2
 800da64:	42bb      	cmp	r3, r7
 800da66:	d3e0      	bcc.n	800da2a <__gethex+0x21e>
 800da68:	4618      	mov	r0, r3
 800da6a:	4652      	mov	r2, sl
 800da6c:	9903      	ldr	r1, [sp, #12]
 800da6e:	9309      	str	r3, [sp, #36]	; 0x24
 800da70:	f001 fc92 	bl	800f398 <strncmp>
 800da74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800da76:	2800      	cmp	r0, #0
 800da78:	d1d7      	bne.n	800da2a <__gethex+0x21e>
 800da7a:	461e      	mov	r6, r3
 800da7c:	e78c      	b.n	800d998 <__gethex+0x18c>
 800da7e:	f04f 0a03 	mov.w	sl, #3
 800da82:	e7b9      	b.n	800d9f8 <__gethex+0x1ec>
 800da84:	da09      	bge.n	800da9a <__gethex+0x28e>
 800da86:	1bf7      	subs	r7, r6, r7
 800da88:	4621      	mov	r1, r4
 800da8a:	463a      	mov	r2, r7
 800da8c:	9802      	ldr	r0, [sp, #8]
 800da8e:	f000 fc51 	bl	800e334 <__lshift>
 800da92:	4604      	mov	r4, r0
 800da94:	1bed      	subs	r5, r5, r7
 800da96:	f100 0914 	add.w	r9, r0, #20
 800da9a:	f04f 0a00 	mov.w	sl, #0
 800da9e:	e7b0      	b.n	800da02 <__gethex+0x1f6>
 800daa0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800daa4:	42a8      	cmp	r0, r5
 800daa6:	dd72      	ble.n	800db8e <__gethex+0x382>
 800daa8:	1b45      	subs	r5, r0, r5
 800daaa:	42ae      	cmp	r6, r5
 800daac:	dc35      	bgt.n	800db1a <__gethex+0x30e>
 800daae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800dab2:	2b02      	cmp	r3, #2
 800dab4:	d029      	beq.n	800db0a <__gethex+0x2fe>
 800dab6:	2b03      	cmp	r3, #3
 800dab8:	d02b      	beq.n	800db12 <__gethex+0x306>
 800daba:	2b01      	cmp	r3, #1
 800dabc:	d11c      	bne.n	800daf8 <__gethex+0x2ec>
 800dabe:	42ae      	cmp	r6, r5
 800dac0:	d11a      	bne.n	800daf8 <__gethex+0x2ec>
 800dac2:	2e01      	cmp	r6, #1
 800dac4:	d112      	bne.n	800daec <__gethex+0x2e0>
 800dac6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800daca:	9a05      	ldr	r2, [sp, #20]
 800dacc:	2762      	movs	r7, #98	; 0x62
 800dace:	6013      	str	r3, [r2, #0]
 800dad0:	2301      	movs	r3, #1
 800dad2:	6123      	str	r3, [r4, #16]
 800dad4:	f8c9 3000 	str.w	r3, [r9]
 800dad8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800dada:	601c      	str	r4, [r3, #0]
 800dadc:	e728      	b.n	800d930 <__gethex+0x124>
 800dade:	bf00      	nop
 800dae0:	08010fc0 	.word	0x08010fc0
 800dae4:	08010f48 	.word	0x08010f48
 800dae8:	08010f59 	.word	0x08010f59
 800daec:	4620      	mov	r0, r4
 800daee:	1e71      	subs	r1, r6, #1
 800daf0:	f000 fe5f 	bl	800e7b2 <__any_on>
 800daf4:	2800      	cmp	r0, #0
 800daf6:	d1e6      	bne.n	800dac6 <__gethex+0x2ba>
 800daf8:	4621      	mov	r1, r4
 800dafa:	9802      	ldr	r0, [sp, #8]
 800dafc:	f000 fa02 	bl	800df04 <_Bfree>
 800db00:	2300      	movs	r3, #0
 800db02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800db04:	2750      	movs	r7, #80	; 0x50
 800db06:	6013      	str	r3, [r2, #0]
 800db08:	e712      	b.n	800d930 <__gethex+0x124>
 800db0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800db0c:	2b00      	cmp	r3, #0
 800db0e:	d1f3      	bne.n	800daf8 <__gethex+0x2ec>
 800db10:	e7d9      	b.n	800dac6 <__gethex+0x2ba>
 800db12:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800db14:	2b00      	cmp	r3, #0
 800db16:	d1d6      	bne.n	800dac6 <__gethex+0x2ba>
 800db18:	e7ee      	b.n	800daf8 <__gethex+0x2ec>
 800db1a:	1e6f      	subs	r7, r5, #1
 800db1c:	f1ba 0f00 	cmp.w	sl, #0
 800db20:	d132      	bne.n	800db88 <__gethex+0x37c>
 800db22:	b127      	cbz	r7, 800db2e <__gethex+0x322>
 800db24:	4639      	mov	r1, r7
 800db26:	4620      	mov	r0, r4
 800db28:	f000 fe43 	bl	800e7b2 <__any_on>
 800db2c:	4682      	mov	sl, r0
 800db2e:	2101      	movs	r1, #1
 800db30:	117b      	asrs	r3, r7, #5
 800db32:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800db36:	f007 071f 	and.w	r7, r7, #31
 800db3a:	fa01 f707 	lsl.w	r7, r1, r7
 800db3e:	421f      	tst	r7, r3
 800db40:	f04f 0702 	mov.w	r7, #2
 800db44:	4629      	mov	r1, r5
 800db46:	4620      	mov	r0, r4
 800db48:	bf18      	it	ne
 800db4a:	f04a 0a02 	orrne.w	sl, sl, #2
 800db4e:	1b76      	subs	r6, r6, r5
 800db50:	f7ff fdf4 	bl	800d73c <rshift>
 800db54:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800db58:	f1ba 0f00 	cmp.w	sl, #0
 800db5c:	d048      	beq.n	800dbf0 <__gethex+0x3e4>
 800db5e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800db62:	2b02      	cmp	r3, #2
 800db64:	d015      	beq.n	800db92 <__gethex+0x386>
 800db66:	2b03      	cmp	r3, #3
 800db68:	d017      	beq.n	800db9a <__gethex+0x38e>
 800db6a:	2b01      	cmp	r3, #1
 800db6c:	d109      	bne.n	800db82 <__gethex+0x376>
 800db6e:	f01a 0f02 	tst.w	sl, #2
 800db72:	d006      	beq.n	800db82 <__gethex+0x376>
 800db74:	f8d9 0000 	ldr.w	r0, [r9]
 800db78:	ea4a 0a00 	orr.w	sl, sl, r0
 800db7c:	f01a 0f01 	tst.w	sl, #1
 800db80:	d10e      	bne.n	800dba0 <__gethex+0x394>
 800db82:	f047 0710 	orr.w	r7, r7, #16
 800db86:	e033      	b.n	800dbf0 <__gethex+0x3e4>
 800db88:	f04f 0a01 	mov.w	sl, #1
 800db8c:	e7cf      	b.n	800db2e <__gethex+0x322>
 800db8e:	2701      	movs	r7, #1
 800db90:	e7e2      	b.n	800db58 <__gethex+0x34c>
 800db92:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800db94:	f1c3 0301 	rsb	r3, r3, #1
 800db98:	9315      	str	r3, [sp, #84]	; 0x54
 800db9a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800db9c:	2b00      	cmp	r3, #0
 800db9e:	d0f0      	beq.n	800db82 <__gethex+0x376>
 800dba0:	f04f 0c00 	mov.w	ip, #0
 800dba4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800dba8:	f104 0314 	add.w	r3, r4, #20
 800dbac:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800dbb0:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800dbb4:	4618      	mov	r0, r3
 800dbb6:	f853 2b04 	ldr.w	r2, [r3], #4
 800dbba:	f1b2 3fff 	cmp.w	r2, #4294967295
 800dbbe:	d01c      	beq.n	800dbfa <__gethex+0x3ee>
 800dbc0:	3201      	adds	r2, #1
 800dbc2:	6002      	str	r2, [r0, #0]
 800dbc4:	2f02      	cmp	r7, #2
 800dbc6:	f104 0314 	add.w	r3, r4, #20
 800dbca:	d13d      	bne.n	800dc48 <__gethex+0x43c>
 800dbcc:	f8d8 2000 	ldr.w	r2, [r8]
 800dbd0:	3a01      	subs	r2, #1
 800dbd2:	42b2      	cmp	r2, r6
 800dbd4:	d10a      	bne.n	800dbec <__gethex+0x3e0>
 800dbd6:	2201      	movs	r2, #1
 800dbd8:	1171      	asrs	r1, r6, #5
 800dbda:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800dbde:	f006 061f 	and.w	r6, r6, #31
 800dbe2:	fa02 f606 	lsl.w	r6, r2, r6
 800dbe6:	421e      	tst	r6, r3
 800dbe8:	bf18      	it	ne
 800dbea:	4617      	movne	r7, r2
 800dbec:	f047 0720 	orr.w	r7, r7, #32
 800dbf0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800dbf2:	601c      	str	r4, [r3, #0]
 800dbf4:	9b05      	ldr	r3, [sp, #20]
 800dbf6:	601d      	str	r5, [r3, #0]
 800dbf8:	e69a      	b.n	800d930 <__gethex+0x124>
 800dbfa:	4299      	cmp	r1, r3
 800dbfc:	f843 cc04 	str.w	ip, [r3, #-4]
 800dc00:	d8d8      	bhi.n	800dbb4 <__gethex+0x3a8>
 800dc02:	68a3      	ldr	r3, [r4, #8]
 800dc04:	459b      	cmp	fp, r3
 800dc06:	db17      	blt.n	800dc38 <__gethex+0x42c>
 800dc08:	6861      	ldr	r1, [r4, #4]
 800dc0a:	9802      	ldr	r0, [sp, #8]
 800dc0c:	3101      	adds	r1, #1
 800dc0e:	f000 f939 	bl	800de84 <_Balloc>
 800dc12:	4681      	mov	r9, r0
 800dc14:	b918      	cbnz	r0, 800dc1e <__gethex+0x412>
 800dc16:	4602      	mov	r2, r0
 800dc18:	2184      	movs	r1, #132	; 0x84
 800dc1a:	4b19      	ldr	r3, [pc, #100]	; (800dc80 <__gethex+0x474>)
 800dc1c:	e6ab      	b.n	800d976 <__gethex+0x16a>
 800dc1e:	6922      	ldr	r2, [r4, #16]
 800dc20:	f104 010c 	add.w	r1, r4, #12
 800dc24:	3202      	adds	r2, #2
 800dc26:	0092      	lsls	r2, r2, #2
 800dc28:	300c      	adds	r0, #12
 800dc2a:	f7fd f943 	bl	800aeb4 <memcpy>
 800dc2e:	4621      	mov	r1, r4
 800dc30:	9802      	ldr	r0, [sp, #8]
 800dc32:	f000 f967 	bl	800df04 <_Bfree>
 800dc36:	464c      	mov	r4, r9
 800dc38:	6923      	ldr	r3, [r4, #16]
 800dc3a:	1c5a      	adds	r2, r3, #1
 800dc3c:	6122      	str	r2, [r4, #16]
 800dc3e:	2201      	movs	r2, #1
 800dc40:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800dc44:	615a      	str	r2, [r3, #20]
 800dc46:	e7bd      	b.n	800dbc4 <__gethex+0x3b8>
 800dc48:	6922      	ldr	r2, [r4, #16]
 800dc4a:	455a      	cmp	r2, fp
 800dc4c:	dd0b      	ble.n	800dc66 <__gethex+0x45a>
 800dc4e:	2101      	movs	r1, #1
 800dc50:	4620      	mov	r0, r4
 800dc52:	f7ff fd73 	bl	800d73c <rshift>
 800dc56:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800dc5a:	3501      	adds	r5, #1
 800dc5c:	42ab      	cmp	r3, r5
 800dc5e:	f6ff aed4 	blt.w	800da0a <__gethex+0x1fe>
 800dc62:	2701      	movs	r7, #1
 800dc64:	e7c2      	b.n	800dbec <__gethex+0x3e0>
 800dc66:	f016 061f 	ands.w	r6, r6, #31
 800dc6a:	d0fa      	beq.n	800dc62 <__gethex+0x456>
 800dc6c:	4453      	add	r3, sl
 800dc6e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800dc72:	f000 f9f9 	bl	800e068 <__hi0bits>
 800dc76:	f1c6 0620 	rsb	r6, r6, #32
 800dc7a:	42b0      	cmp	r0, r6
 800dc7c:	dbe7      	blt.n	800dc4e <__gethex+0x442>
 800dc7e:	e7f0      	b.n	800dc62 <__gethex+0x456>
 800dc80:	08010f48 	.word	0x08010f48

0800dc84 <L_shift>:
 800dc84:	f1c2 0208 	rsb	r2, r2, #8
 800dc88:	0092      	lsls	r2, r2, #2
 800dc8a:	b570      	push	{r4, r5, r6, lr}
 800dc8c:	f1c2 0620 	rsb	r6, r2, #32
 800dc90:	6843      	ldr	r3, [r0, #4]
 800dc92:	6804      	ldr	r4, [r0, #0]
 800dc94:	fa03 f506 	lsl.w	r5, r3, r6
 800dc98:	432c      	orrs	r4, r5
 800dc9a:	40d3      	lsrs	r3, r2
 800dc9c:	6004      	str	r4, [r0, #0]
 800dc9e:	f840 3f04 	str.w	r3, [r0, #4]!
 800dca2:	4288      	cmp	r0, r1
 800dca4:	d3f4      	bcc.n	800dc90 <L_shift+0xc>
 800dca6:	bd70      	pop	{r4, r5, r6, pc}

0800dca8 <__match>:
 800dca8:	b530      	push	{r4, r5, lr}
 800dcaa:	6803      	ldr	r3, [r0, #0]
 800dcac:	3301      	adds	r3, #1
 800dcae:	f811 4b01 	ldrb.w	r4, [r1], #1
 800dcb2:	b914      	cbnz	r4, 800dcba <__match+0x12>
 800dcb4:	6003      	str	r3, [r0, #0]
 800dcb6:	2001      	movs	r0, #1
 800dcb8:	bd30      	pop	{r4, r5, pc}
 800dcba:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dcbe:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800dcc2:	2d19      	cmp	r5, #25
 800dcc4:	bf98      	it	ls
 800dcc6:	3220      	addls	r2, #32
 800dcc8:	42a2      	cmp	r2, r4
 800dcca:	d0f0      	beq.n	800dcae <__match+0x6>
 800dccc:	2000      	movs	r0, #0
 800dcce:	e7f3      	b.n	800dcb8 <__match+0x10>

0800dcd0 <__hexnan>:
 800dcd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcd4:	2500      	movs	r5, #0
 800dcd6:	680b      	ldr	r3, [r1, #0]
 800dcd8:	4682      	mov	sl, r0
 800dcda:	115e      	asrs	r6, r3, #5
 800dcdc:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800dce0:	f013 031f 	ands.w	r3, r3, #31
 800dce4:	bf18      	it	ne
 800dce6:	3604      	addne	r6, #4
 800dce8:	1f37      	subs	r7, r6, #4
 800dcea:	46b9      	mov	r9, r7
 800dcec:	463c      	mov	r4, r7
 800dcee:	46ab      	mov	fp, r5
 800dcf0:	b087      	sub	sp, #28
 800dcf2:	4690      	mov	r8, r2
 800dcf4:	6802      	ldr	r2, [r0, #0]
 800dcf6:	9301      	str	r3, [sp, #4]
 800dcf8:	f846 5c04 	str.w	r5, [r6, #-4]
 800dcfc:	9502      	str	r5, [sp, #8]
 800dcfe:	7851      	ldrb	r1, [r2, #1]
 800dd00:	1c53      	adds	r3, r2, #1
 800dd02:	9303      	str	r3, [sp, #12]
 800dd04:	b341      	cbz	r1, 800dd58 <__hexnan+0x88>
 800dd06:	4608      	mov	r0, r1
 800dd08:	9205      	str	r2, [sp, #20]
 800dd0a:	9104      	str	r1, [sp, #16]
 800dd0c:	f7ff fd69 	bl	800d7e2 <__hexdig_fun>
 800dd10:	2800      	cmp	r0, #0
 800dd12:	d14f      	bne.n	800ddb4 <__hexnan+0xe4>
 800dd14:	9904      	ldr	r1, [sp, #16]
 800dd16:	9a05      	ldr	r2, [sp, #20]
 800dd18:	2920      	cmp	r1, #32
 800dd1a:	d818      	bhi.n	800dd4e <__hexnan+0x7e>
 800dd1c:	9b02      	ldr	r3, [sp, #8]
 800dd1e:	459b      	cmp	fp, r3
 800dd20:	dd13      	ble.n	800dd4a <__hexnan+0x7a>
 800dd22:	454c      	cmp	r4, r9
 800dd24:	d206      	bcs.n	800dd34 <__hexnan+0x64>
 800dd26:	2d07      	cmp	r5, #7
 800dd28:	dc04      	bgt.n	800dd34 <__hexnan+0x64>
 800dd2a:	462a      	mov	r2, r5
 800dd2c:	4649      	mov	r1, r9
 800dd2e:	4620      	mov	r0, r4
 800dd30:	f7ff ffa8 	bl	800dc84 <L_shift>
 800dd34:	4544      	cmp	r4, r8
 800dd36:	d950      	bls.n	800ddda <__hexnan+0x10a>
 800dd38:	2300      	movs	r3, #0
 800dd3a:	f1a4 0904 	sub.w	r9, r4, #4
 800dd3e:	f844 3c04 	str.w	r3, [r4, #-4]
 800dd42:	461d      	mov	r5, r3
 800dd44:	464c      	mov	r4, r9
 800dd46:	f8cd b008 	str.w	fp, [sp, #8]
 800dd4a:	9a03      	ldr	r2, [sp, #12]
 800dd4c:	e7d7      	b.n	800dcfe <__hexnan+0x2e>
 800dd4e:	2929      	cmp	r1, #41	; 0x29
 800dd50:	d156      	bne.n	800de00 <__hexnan+0x130>
 800dd52:	3202      	adds	r2, #2
 800dd54:	f8ca 2000 	str.w	r2, [sl]
 800dd58:	f1bb 0f00 	cmp.w	fp, #0
 800dd5c:	d050      	beq.n	800de00 <__hexnan+0x130>
 800dd5e:	454c      	cmp	r4, r9
 800dd60:	d206      	bcs.n	800dd70 <__hexnan+0xa0>
 800dd62:	2d07      	cmp	r5, #7
 800dd64:	dc04      	bgt.n	800dd70 <__hexnan+0xa0>
 800dd66:	462a      	mov	r2, r5
 800dd68:	4649      	mov	r1, r9
 800dd6a:	4620      	mov	r0, r4
 800dd6c:	f7ff ff8a 	bl	800dc84 <L_shift>
 800dd70:	4544      	cmp	r4, r8
 800dd72:	d934      	bls.n	800ddde <__hexnan+0x10e>
 800dd74:	4623      	mov	r3, r4
 800dd76:	f1a8 0204 	sub.w	r2, r8, #4
 800dd7a:	f853 1b04 	ldr.w	r1, [r3], #4
 800dd7e:	429f      	cmp	r7, r3
 800dd80:	f842 1f04 	str.w	r1, [r2, #4]!
 800dd84:	d2f9      	bcs.n	800dd7a <__hexnan+0xaa>
 800dd86:	1b3b      	subs	r3, r7, r4
 800dd88:	f023 0303 	bic.w	r3, r3, #3
 800dd8c:	3304      	adds	r3, #4
 800dd8e:	3401      	adds	r4, #1
 800dd90:	3e03      	subs	r6, #3
 800dd92:	42b4      	cmp	r4, r6
 800dd94:	bf88      	it	hi
 800dd96:	2304      	movhi	r3, #4
 800dd98:	2200      	movs	r2, #0
 800dd9a:	4443      	add	r3, r8
 800dd9c:	f843 2b04 	str.w	r2, [r3], #4
 800dda0:	429f      	cmp	r7, r3
 800dda2:	d2fb      	bcs.n	800dd9c <__hexnan+0xcc>
 800dda4:	683b      	ldr	r3, [r7, #0]
 800dda6:	b91b      	cbnz	r3, 800ddb0 <__hexnan+0xe0>
 800dda8:	4547      	cmp	r7, r8
 800ddaa:	d127      	bne.n	800ddfc <__hexnan+0x12c>
 800ddac:	2301      	movs	r3, #1
 800ddae:	603b      	str	r3, [r7, #0]
 800ddb0:	2005      	movs	r0, #5
 800ddb2:	e026      	b.n	800de02 <__hexnan+0x132>
 800ddb4:	3501      	adds	r5, #1
 800ddb6:	2d08      	cmp	r5, #8
 800ddb8:	f10b 0b01 	add.w	fp, fp, #1
 800ddbc:	dd06      	ble.n	800ddcc <__hexnan+0xfc>
 800ddbe:	4544      	cmp	r4, r8
 800ddc0:	d9c3      	bls.n	800dd4a <__hexnan+0x7a>
 800ddc2:	2300      	movs	r3, #0
 800ddc4:	2501      	movs	r5, #1
 800ddc6:	f844 3c04 	str.w	r3, [r4, #-4]
 800ddca:	3c04      	subs	r4, #4
 800ddcc:	6822      	ldr	r2, [r4, #0]
 800ddce:	f000 000f 	and.w	r0, r0, #15
 800ddd2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800ddd6:	6022      	str	r2, [r4, #0]
 800ddd8:	e7b7      	b.n	800dd4a <__hexnan+0x7a>
 800ddda:	2508      	movs	r5, #8
 800dddc:	e7b5      	b.n	800dd4a <__hexnan+0x7a>
 800ddde:	9b01      	ldr	r3, [sp, #4]
 800dde0:	2b00      	cmp	r3, #0
 800dde2:	d0df      	beq.n	800dda4 <__hexnan+0xd4>
 800dde4:	f04f 32ff 	mov.w	r2, #4294967295
 800dde8:	f1c3 0320 	rsb	r3, r3, #32
 800ddec:	fa22 f303 	lsr.w	r3, r2, r3
 800ddf0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800ddf4:	401a      	ands	r2, r3
 800ddf6:	f846 2c04 	str.w	r2, [r6, #-4]
 800ddfa:	e7d3      	b.n	800dda4 <__hexnan+0xd4>
 800ddfc:	3f04      	subs	r7, #4
 800ddfe:	e7d1      	b.n	800dda4 <__hexnan+0xd4>
 800de00:	2004      	movs	r0, #4
 800de02:	b007      	add	sp, #28
 800de04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800de08 <_localeconv_r>:
 800de08:	4800      	ldr	r0, [pc, #0]	; (800de0c <_localeconv_r+0x4>)
 800de0a:	4770      	bx	lr
 800de0c:	200002fc 	.word	0x200002fc

0800de10 <_lseek_r>:
 800de10:	b538      	push	{r3, r4, r5, lr}
 800de12:	4604      	mov	r4, r0
 800de14:	4608      	mov	r0, r1
 800de16:	4611      	mov	r1, r2
 800de18:	2200      	movs	r2, #0
 800de1a:	4d05      	ldr	r5, [pc, #20]	; (800de30 <_lseek_r+0x20>)
 800de1c:	602a      	str	r2, [r5, #0]
 800de1e:	461a      	mov	r2, r3
 800de20:	f7f7 fad2 	bl	80053c8 <_lseek>
 800de24:	1c43      	adds	r3, r0, #1
 800de26:	d102      	bne.n	800de2e <_lseek_r+0x1e>
 800de28:	682b      	ldr	r3, [r5, #0]
 800de2a:	b103      	cbz	r3, 800de2e <_lseek_r+0x1e>
 800de2c:	6023      	str	r3, [r4, #0]
 800de2e:	bd38      	pop	{r3, r4, r5, pc}
 800de30:	200014ec 	.word	0x200014ec

0800de34 <malloc>:
 800de34:	4b02      	ldr	r3, [pc, #8]	; (800de40 <malloc+0xc>)
 800de36:	4601      	mov	r1, r0
 800de38:	6818      	ldr	r0, [r3, #0]
 800de3a:	f000 bd57 	b.w	800e8ec <_malloc_r>
 800de3e:	bf00      	nop
 800de40:	200001a4 	.word	0x200001a4

0800de44 <__ascii_mbtowc>:
 800de44:	b082      	sub	sp, #8
 800de46:	b901      	cbnz	r1, 800de4a <__ascii_mbtowc+0x6>
 800de48:	a901      	add	r1, sp, #4
 800de4a:	b142      	cbz	r2, 800de5e <__ascii_mbtowc+0x1a>
 800de4c:	b14b      	cbz	r3, 800de62 <__ascii_mbtowc+0x1e>
 800de4e:	7813      	ldrb	r3, [r2, #0]
 800de50:	600b      	str	r3, [r1, #0]
 800de52:	7812      	ldrb	r2, [r2, #0]
 800de54:	1e10      	subs	r0, r2, #0
 800de56:	bf18      	it	ne
 800de58:	2001      	movne	r0, #1
 800de5a:	b002      	add	sp, #8
 800de5c:	4770      	bx	lr
 800de5e:	4610      	mov	r0, r2
 800de60:	e7fb      	b.n	800de5a <__ascii_mbtowc+0x16>
 800de62:	f06f 0001 	mvn.w	r0, #1
 800de66:	e7f8      	b.n	800de5a <__ascii_mbtowc+0x16>

0800de68 <memchr>:
 800de68:	4603      	mov	r3, r0
 800de6a:	b510      	push	{r4, lr}
 800de6c:	b2c9      	uxtb	r1, r1
 800de6e:	4402      	add	r2, r0
 800de70:	4293      	cmp	r3, r2
 800de72:	4618      	mov	r0, r3
 800de74:	d101      	bne.n	800de7a <memchr+0x12>
 800de76:	2000      	movs	r0, #0
 800de78:	e003      	b.n	800de82 <memchr+0x1a>
 800de7a:	7804      	ldrb	r4, [r0, #0]
 800de7c:	3301      	adds	r3, #1
 800de7e:	428c      	cmp	r4, r1
 800de80:	d1f6      	bne.n	800de70 <memchr+0x8>
 800de82:	bd10      	pop	{r4, pc}

0800de84 <_Balloc>:
 800de84:	b570      	push	{r4, r5, r6, lr}
 800de86:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800de88:	4604      	mov	r4, r0
 800de8a:	460d      	mov	r5, r1
 800de8c:	b976      	cbnz	r6, 800deac <_Balloc+0x28>
 800de8e:	2010      	movs	r0, #16
 800de90:	f7ff ffd0 	bl	800de34 <malloc>
 800de94:	4602      	mov	r2, r0
 800de96:	6260      	str	r0, [r4, #36]	; 0x24
 800de98:	b920      	cbnz	r0, 800dea4 <_Balloc+0x20>
 800de9a:	2166      	movs	r1, #102	; 0x66
 800de9c:	4b17      	ldr	r3, [pc, #92]	; (800defc <_Balloc+0x78>)
 800de9e:	4818      	ldr	r0, [pc, #96]	; (800df00 <_Balloc+0x7c>)
 800dea0:	f001 fb48 	bl	800f534 <__assert_func>
 800dea4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800dea8:	6006      	str	r6, [r0, #0]
 800deaa:	60c6      	str	r6, [r0, #12]
 800deac:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800deae:	68f3      	ldr	r3, [r6, #12]
 800deb0:	b183      	cbz	r3, 800ded4 <_Balloc+0x50>
 800deb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800deb4:	68db      	ldr	r3, [r3, #12]
 800deb6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800deba:	b9b8      	cbnz	r0, 800deec <_Balloc+0x68>
 800debc:	2101      	movs	r1, #1
 800debe:	fa01 f605 	lsl.w	r6, r1, r5
 800dec2:	1d72      	adds	r2, r6, #5
 800dec4:	4620      	mov	r0, r4
 800dec6:	0092      	lsls	r2, r2, #2
 800dec8:	f000 fc94 	bl	800e7f4 <_calloc_r>
 800decc:	b160      	cbz	r0, 800dee8 <_Balloc+0x64>
 800dece:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800ded2:	e00e      	b.n	800def2 <_Balloc+0x6e>
 800ded4:	2221      	movs	r2, #33	; 0x21
 800ded6:	2104      	movs	r1, #4
 800ded8:	4620      	mov	r0, r4
 800deda:	f000 fc8b 	bl	800e7f4 <_calloc_r>
 800dede:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dee0:	60f0      	str	r0, [r6, #12]
 800dee2:	68db      	ldr	r3, [r3, #12]
 800dee4:	2b00      	cmp	r3, #0
 800dee6:	d1e4      	bne.n	800deb2 <_Balloc+0x2e>
 800dee8:	2000      	movs	r0, #0
 800deea:	bd70      	pop	{r4, r5, r6, pc}
 800deec:	6802      	ldr	r2, [r0, #0]
 800deee:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800def2:	2300      	movs	r3, #0
 800def4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800def8:	e7f7      	b.n	800deea <_Balloc+0x66>
 800defa:	bf00      	nop
 800defc:	08010ed6 	.word	0x08010ed6
 800df00:	08010fd4 	.word	0x08010fd4

0800df04 <_Bfree>:
 800df04:	b570      	push	{r4, r5, r6, lr}
 800df06:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800df08:	4605      	mov	r5, r0
 800df0a:	460c      	mov	r4, r1
 800df0c:	b976      	cbnz	r6, 800df2c <_Bfree+0x28>
 800df0e:	2010      	movs	r0, #16
 800df10:	f7ff ff90 	bl	800de34 <malloc>
 800df14:	4602      	mov	r2, r0
 800df16:	6268      	str	r0, [r5, #36]	; 0x24
 800df18:	b920      	cbnz	r0, 800df24 <_Bfree+0x20>
 800df1a:	218a      	movs	r1, #138	; 0x8a
 800df1c:	4b08      	ldr	r3, [pc, #32]	; (800df40 <_Bfree+0x3c>)
 800df1e:	4809      	ldr	r0, [pc, #36]	; (800df44 <_Bfree+0x40>)
 800df20:	f001 fb08 	bl	800f534 <__assert_func>
 800df24:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800df28:	6006      	str	r6, [r0, #0]
 800df2a:	60c6      	str	r6, [r0, #12]
 800df2c:	b13c      	cbz	r4, 800df3e <_Bfree+0x3a>
 800df2e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800df30:	6862      	ldr	r2, [r4, #4]
 800df32:	68db      	ldr	r3, [r3, #12]
 800df34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800df38:	6021      	str	r1, [r4, #0]
 800df3a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800df3e:	bd70      	pop	{r4, r5, r6, pc}
 800df40:	08010ed6 	.word	0x08010ed6
 800df44:	08010fd4 	.word	0x08010fd4

0800df48 <__multadd>:
 800df48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df4c:	4607      	mov	r7, r0
 800df4e:	460c      	mov	r4, r1
 800df50:	461e      	mov	r6, r3
 800df52:	2000      	movs	r0, #0
 800df54:	690d      	ldr	r5, [r1, #16]
 800df56:	f101 0c14 	add.w	ip, r1, #20
 800df5a:	f8dc 3000 	ldr.w	r3, [ip]
 800df5e:	3001      	adds	r0, #1
 800df60:	b299      	uxth	r1, r3
 800df62:	fb02 6101 	mla	r1, r2, r1, r6
 800df66:	0c1e      	lsrs	r6, r3, #16
 800df68:	0c0b      	lsrs	r3, r1, #16
 800df6a:	fb02 3306 	mla	r3, r2, r6, r3
 800df6e:	b289      	uxth	r1, r1
 800df70:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800df74:	4285      	cmp	r5, r0
 800df76:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800df7a:	f84c 1b04 	str.w	r1, [ip], #4
 800df7e:	dcec      	bgt.n	800df5a <__multadd+0x12>
 800df80:	b30e      	cbz	r6, 800dfc6 <__multadd+0x7e>
 800df82:	68a3      	ldr	r3, [r4, #8]
 800df84:	42ab      	cmp	r3, r5
 800df86:	dc19      	bgt.n	800dfbc <__multadd+0x74>
 800df88:	6861      	ldr	r1, [r4, #4]
 800df8a:	4638      	mov	r0, r7
 800df8c:	3101      	adds	r1, #1
 800df8e:	f7ff ff79 	bl	800de84 <_Balloc>
 800df92:	4680      	mov	r8, r0
 800df94:	b928      	cbnz	r0, 800dfa2 <__multadd+0x5a>
 800df96:	4602      	mov	r2, r0
 800df98:	21b5      	movs	r1, #181	; 0xb5
 800df9a:	4b0c      	ldr	r3, [pc, #48]	; (800dfcc <__multadd+0x84>)
 800df9c:	480c      	ldr	r0, [pc, #48]	; (800dfd0 <__multadd+0x88>)
 800df9e:	f001 fac9 	bl	800f534 <__assert_func>
 800dfa2:	6922      	ldr	r2, [r4, #16]
 800dfa4:	f104 010c 	add.w	r1, r4, #12
 800dfa8:	3202      	adds	r2, #2
 800dfaa:	0092      	lsls	r2, r2, #2
 800dfac:	300c      	adds	r0, #12
 800dfae:	f7fc ff81 	bl	800aeb4 <memcpy>
 800dfb2:	4621      	mov	r1, r4
 800dfb4:	4638      	mov	r0, r7
 800dfb6:	f7ff ffa5 	bl	800df04 <_Bfree>
 800dfba:	4644      	mov	r4, r8
 800dfbc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800dfc0:	3501      	adds	r5, #1
 800dfc2:	615e      	str	r6, [r3, #20]
 800dfc4:	6125      	str	r5, [r4, #16]
 800dfc6:	4620      	mov	r0, r4
 800dfc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dfcc:	08010f48 	.word	0x08010f48
 800dfd0:	08010fd4 	.word	0x08010fd4

0800dfd4 <__s2b>:
 800dfd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dfd8:	4615      	mov	r5, r2
 800dfda:	2209      	movs	r2, #9
 800dfdc:	461f      	mov	r7, r3
 800dfde:	3308      	adds	r3, #8
 800dfe0:	460c      	mov	r4, r1
 800dfe2:	fb93 f3f2 	sdiv	r3, r3, r2
 800dfe6:	4606      	mov	r6, r0
 800dfe8:	2201      	movs	r2, #1
 800dfea:	2100      	movs	r1, #0
 800dfec:	429a      	cmp	r2, r3
 800dfee:	db09      	blt.n	800e004 <__s2b+0x30>
 800dff0:	4630      	mov	r0, r6
 800dff2:	f7ff ff47 	bl	800de84 <_Balloc>
 800dff6:	b940      	cbnz	r0, 800e00a <__s2b+0x36>
 800dff8:	4602      	mov	r2, r0
 800dffa:	21ce      	movs	r1, #206	; 0xce
 800dffc:	4b18      	ldr	r3, [pc, #96]	; (800e060 <__s2b+0x8c>)
 800dffe:	4819      	ldr	r0, [pc, #100]	; (800e064 <__s2b+0x90>)
 800e000:	f001 fa98 	bl	800f534 <__assert_func>
 800e004:	0052      	lsls	r2, r2, #1
 800e006:	3101      	adds	r1, #1
 800e008:	e7f0      	b.n	800dfec <__s2b+0x18>
 800e00a:	9b08      	ldr	r3, [sp, #32]
 800e00c:	2d09      	cmp	r5, #9
 800e00e:	6143      	str	r3, [r0, #20]
 800e010:	f04f 0301 	mov.w	r3, #1
 800e014:	6103      	str	r3, [r0, #16]
 800e016:	dd16      	ble.n	800e046 <__s2b+0x72>
 800e018:	f104 0909 	add.w	r9, r4, #9
 800e01c:	46c8      	mov	r8, r9
 800e01e:	442c      	add	r4, r5
 800e020:	f818 3b01 	ldrb.w	r3, [r8], #1
 800e024:	4601      	mov	r1, r0
 800e026:	220a      	movs	r2, #10
 800e028:	4630      	mov	r0, r6
 800e02a:	3b30      	subs	r3, #48	; 0x30
 800e02c:	f7ff ff8c 	bl	800df48 <__multadd>
 800e030:	45a0      	cmp	r8, r4
 800e032:	d1f5      	bne.n	800e020 <__s2b+0x4c>
 800e034:	f1a5 0408 	sub.w	r4, r5, #8
 800e038:	444c      	add	r4, r9
 800e03a:	1b2d      	subs	r5, r5, r4
 800e03c:	1963      	adds	r3, r4, r5
 800e03e:	42bb      	cmp	r3, r7
 800e040:	db04      	blt.n	800e04c <__s2b+0x78>
 800e042:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e046:	2509      	movs	r5, #9
 800e048:	340a      	adds	r4, #10
 800e04a:	e7f6      	b.n	800e03a <__s2b+0x66>
 800e04c:	f814 3b01 	ldrb.w	r3, [r4], #1
 800e050:	4601      	mov	r1, r0
 800e052:	220a      	movs	r2, #10
 800e054:	4630      	mov	r0, r6
 800e056:	3b30      	subs	r3, #48	; 0x30
 800e058:	f7ff ff76 	bl	800df48 <__multadd>
 800e05c:	e7ee      	b.n	800e03c <__s2b+0x68>
 800e05e:	bf00      	nop
 800e060:	08010f48 	.word	0x08010f48
 800e064:	08010fd4 	.word	0x08010fd4

0800e068 <__hi0bits>:
 800e068:	0c02      	lsrs	r2, r0, #16
 800e06a:	0412      	lsls	r2, r2, #16
 800e06c:	4603      	mov	r3, r0
 800e06e:	b9ca      	cbnz	r2, 800e0a4 <__hi0bits+0x3c>
 800e070:	0403      	lsls	r3, r0, #16
 800e072:	2010      	movs	r0, #16
 800e074:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800e078:	bf04      	itt	eq
 800e07a:	021b      	lsleq	r3, r3, #8
 800e07c:	3008      	addeq	r0, #8
 800e07e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800e082:	bf04      	itt	eq
 800e084:	011b      	lsleq	r3, r3, #4
 800e086:	3004      	addeq	r0, #4
 800e088:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800e08c:	bf04      	itt	eq
 800e08e:	009b      	lsleq	r3, r3, #2
 800e090:	3002      	addeq	r0, #2
 800e092:	2b00      	cmp	r3, #0
 800e094:	db05      	blt.n	800e0a2 <__hi0bits+0x3a>
 800e096:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800e09a:	f100 0001 	add.w	r0, r0, #1
 800e09e:	bf08      	it	eq
 800e0a0:	2020      	moveq	r0, #32
 800e0a2:	4770      	bx	lr
 800e0a4:	2000      	movs	r0, #0
 800e0a6:	e7e5      	b.n	800e074 <__hi0bits+0xc>

0800e0a8 <__lo0bits>:
 800e0a8:	6803      	ldr	r3, [r0, #0]
 800e0aa:	4602      	mov	r2, r0
 800e0ac:	f013 0007 	ands.w	r0, r3, #7
 800e0b0:	d00b      	beq.n	800e0ca <__lo0bits+0x22>
 800e0b2:	07d9      	lsls	r1, r3, #31
 800e0b4:	d421      	bmi.n	800e0fa <__lo0bits+0x52>
 800e0b6:	0798      	lsls	r0, r3, #30
 800e0b8:	bf49      	itett	mi
 800e0ba:	085b      	lsrmi	r3, r3, #1
 800e0bc:	089b      	lsrpl	r3, r3, #2
 800e0be:	2001      	movmi	r0, #1
 800e0c0:	6013      	strmi	r3, [r2, #0]
 800e0c2:	bf5c      	itt	pl
 800e0c4:	2002      	movpl	r0, #2
 800e0c6:	6013      	strpl	r3, [r2, #0]
 800e0c8:	4770      	bx	lr
 800e0ca:	b299      	uxth	r1, r3
 800e0cc:	b909      	cbnz	r1, 800e0d2 <__lo0bits+0x2a>
 800e0ce:	2010      	movs	r0, #16
 800e0d0:	0c1b      	lsrs	r3, r3, #16
 800e0d2:	b2d9      	uxtb	r1, r3
 800e0d4:	b909      	cbnz	r1, 800e0da <__lo0bits+0x32>
 800e0d6:	3008      	adds	r0, #8
 800e0d8:	0a1b      	lsrs	r3, r3, #8
 800e0da:	0719      	lsls	r1, r3, #28
 800e0dc:	bf04      	itt	eq
 800e0de:	091b      	lsreq	r3, r3, #4
 800e0e0:	3004      	addeq	r0, #4
 800e0e2:	0799      	lsls	r1, r3, #30
 800e0e4:	bf04      	itt	eq
 800e0e6:	089b      	lsreq	r3, r3, #2
 800e0e8:	3002      	addeq	r0, #2
 800e0ea:	07d9      	lsls	r1, r3, #31
 800e0ec:	d403      	bmi.n	800e0f6 <__lo0bits+0x4e>
 800e0ee:	085b      	lsrs	r3, r3, #1
 800e0f0:	f100 0001 	add.w	r0, r0, #1
 800e0f4:	d003      	beq.n	800e0fe <__lo0bits+0x56>
 800e0f6:	6013      	str	r3, [r2, #0]
 800e0f8:	4770      	bx	lr
 800e0fa:	2000      	movs	r0, #0
 800e0fc:	4770      	bx	lr
 800e0fe:	2020      	movs	r0, #32
 800e100:	4770      	bx	lr
	...

0800e104 <__i2b>:
 800e104:	b510      	push	{r4, lr}
 800e106:	460c      	mov	r4, r1
 800e108:	2101      	movs	r1, #1
 800e10a:	f7ff febb 	bl	800de84 <_Balloc>
 800e10e:	4602      	mov	r2, r0
 800e110:	b928      	cbnz	r0, 800e11e <__i2b+0x1a>
 800e112:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e116:	4b04      	ldr	r3, [pc, #16]	; (800e128 <__i2b+0x24>)
 800e118:	4804      	ldr	r0, [pc, #16]	; (800e12c <__i2b+0x28>)
 800e11a:	f001 fa0b 	bl	800f534 <__assert_func>
 800e11e:	2301      	movs	r3, #1
 800e120:	6144      	str	r4, [r0, #20]
 800e122:	6103      	str	r3, [r0, #16]
 800e124:	bd10      	pop	{r4, pc}
 800e126:	bf00      	nop
 800e128:	08010f48 	.word	0x08010f48
 800e12c:	08010fd4 	.word	0x08010fd4

0800e130 <__multiply>:
 800e130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e134:	4691      	mov	r9, r2
 800e136:	690a      	ldr	r2, [r1, #16]
 800e138:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e13c:	460c      	mov	r4, r1
 800e13e:	429a      	cmp	r2, r3
 800e140:	bfbe      	ittt	lt
 800e142:	460b      	movlt	r3, r1
 800e144:	464c      	movlt	r4, r9
 800e146:	4699      	movlt	r9, r3
 800e148:	6927      	ldr	r7, [r4, #16]
 800e14a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800e14e:	68a3      	ldr	r3, [r4, #8]
 800e150:	6861      	ldr	r1, [r4, #4]
 800e152:	eb07 060a 	add.w	r6, r7, sl
 800e156:	42b3      	cmp	r3, r6
 800e158:	b085      	sub	sp, #20
 800e15a:	bfb8      	it	lt
 800e15c:	3101      	addlt	r1, #1
 800e15e:	f7ff fe91 	bl	800de84 <_Balloc>
 800e162:	b930      	cbnz	r0, 800e172 <__multiply+0x42>
 800e164:	4602      	mov	r2, r0
 800e166:	f240 115d 	movw	r1, #349	; 0x15d
 800e16a:	4b43      	ldr	r3, [pc, #268]	; (800e278 <__multiply+0x148>)
 800e16c:	4843      	ldr	r0, [pc, #268]	; (800e27c <__multiply+0x14c>)
 800e16e:	f001 f9e1 	bl	800f534 <__assert_func>
 800e172:	f100 0514 	add.w	r5, r0, #20
 800e176:	462b      	mov	r3, r5
 800e178:	2200      	movs	r2, #0
 800e17a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800e17e:	4543      	cmp	r3, r8
 800e180:	d321      	bcc.n	800e1c6 <__multiply+0x96>
 800e182:	f104 0314 	add.w	r3, r4, #20
 800e186:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800e18a:	f109 0314 	add.w	r3, r9, #20
 800e18e:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800e192:	9202      	str	r2, [sp, #8]
 800e194:	1b3a      	subs	r2, r7, r4
 800e196:	3a15      	subs	r2, #21
 800e198:	f022 0203 	bic.w	r2, r2, #3
 800e19c:	3204      	adds	r2, #4
 800e19e:	f104 0115 	add.w	r1, r4, #21
 800e1a2:	428f      	cmp	r7, r1
 800e1a4:	bf38      	it	cc
 800e1a6:	2204      	movcc	r2, #4
 800e1a8:	9201      	str	r2, [sp, #4]
 800e1aa:	9a02      	ldr	r2, [sp, #8]
 800e1ac:	9303      	str	r3, [sp, #12]
 800e1ae:	429a      	cmp	r2, r3
 800e1b0:	d80c      	bhi.n	800e1cc <__multiply+0x9c>
 800e1b2:	2e00      	cmp	r6, #0
 800e1b4:	dd03      	ble.n	800e1be <__multiply+0x8e>
 800e1b6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d059      	beq.n	800e272 <__multiply+0x142>
 800e1be:	6106      	str	r6, [r0, #16]
 800e1c0:	b005      	add	sp, #20
 800e1c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e1c6:	f843 2b04 	str.w	r2, [r3], #4
 800e1ca:	e7d8      	b.n	800e17e <__multiply+0x4e>
 800e1cc:	f8b3 a000 	ldrh.w	sl, [r3]
 800e1d0:	f1ba 0f00 	cmp.w	sl, #0
 800e1d4:	d023      	beq.n	800e21e <__multiply+0xee>
 800e1d6:	46a9      	mov	r9, r5
 800e1d8:	f04f 0c00 	mov.w	ip, #0
 800e1dc:	f104 0e14 	add.w	lr, r4, #20
 800e1e0:	f85e 2b04 	ldr.w	r2, [lr], #4
 800e1e4:	f8d9 1000 	ldr.w	r1, [r9]
 800e1e8:	fa1f fb82 	uxth.w	fp, r2
 800e1ec:	b289      	uxth	r1, r1
 800e1ee:	fb0a 110b 	mla	r1, sl, fp, r1
 800e1f2:	4461      	add	r1, ip
 800e1f4:	f8d9 c000 	ldr.w	ip, [r9]
 800e1f8:	0c12      	lsrs	r2, r2, #16
 800e1fa:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800e1fe:	fb0a c202 	mla	r2, sl, r2, ip
 800e202:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800e206:	b289      	uxth	r1, r1
 800e208:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800e20c:	4577      	cmp	r7, lr
 800e20e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e212:	f849 1b04 	str.w	r1, [r9], #4
 800e216:	d8e3      	bhi.n	800e1e0 <__multiply+0xb0>
 800e218:	9a01      	ldr	r2, [sp, #4]
 800e21a:	f845 c002 	str.w	ip, [r5, r2]
 800e21e:	9a03      	ldr	r2, [sp, #12]
 800e220:	3304      	adds	r3, #4
 800e222:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800e226:	f1b9 0f00 	cmp.w	r9, #0
 800e22a:	d020      	beq.n	800e26e <__multiply+0x13e>
 800e22c:	46ae      	mov	lr, r5
 800e22e:	f04f 0a00 	mov.w	sl, #0
 800e232:	6829      	ldr	r1, [r5, #0]
 800e234:	f104 0c14 	add.w	ip, r4, #20
 800e238:	f8bc b000 	ldrh.w	fp, [ip]
 800e23c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800e240:	b289      	uxth	r1, r1
 800e242:	fb09 220b 	mla	r2, r9, fp, r2
 800e246:	4492      	add	sl, r2
 800e248:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800e24c:	f84e 1b04 	str.w	r1, [lr], #4
 800e250:	f85c 2b04 	ldr.w	r2, [ip], #4
 800e254:	f8be 1000 	ldrh.w	r1, [lr]
 800e258:	0c12      	lsrs	r2, r2, #16
 800e25a:	fb09 1102 	mla	r1, r9, r2, r1
 800e25e:	4567      	cmp	r7, ip
 800e260:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800e264:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800e268:	d8e6      	bhi.n	800e238 <__multiply+0x108>
 800e26a:	9a01      	ldr	r2, [sp, #4]
 800e26c:	50a9      	str	r1, [r5, r2]
 800e26e:	3504      	adds	r5, #4
 800e270:	e79b      	b.n	800e1aa <__multiply+0x7a>
 800e272:	3e01      	subs	r6, #1
 800e274:	e79d      	b.n	800e1b2 <__multiply+0x82>
 800e276:	bf00      	nop
 800e278:	08010f48 	.word	0x08010f48
 800e27c:	08010fd4 	.word	0x08010fd4

0800e280 <__pow5mult>:
 800e280:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e284:	4615      	mov	r5, r2
 800e286:	f012 0203 	ands.w	r2, r2, #3
 800e28a:	4606      	mov	r6, r0
 800e28c:	460f      	mov	r7, r1
 800e28e:	d007      	beq.n	800e2a0 <__pow5mult+0x20>
 800e290:	4c25      	ldr	r4, [pc, #148]	; (800e328 <__pow5mult+0xa8>)
 800e292:	3a01      	subs	r2, #1
 800e294:	2300      	movs	r3, #0
 800e296:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800e29a:	f7ff fe55 	bl	800df48 <__multadd>
 800e29e:	4607      	mov	r7, r0
 800e2a0:	10ad      	asrs	r5, r5, #2
 800e2a2:	d03d      	beq.n	800e320 <__pow5mult+0xa0>
 800e2a4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800e2a6:	b97c      	cbnz	r4, 800e2c8 <__pow5mult+0x48>
 800e2a8:	2010      	movs	r0, #16
 800e2aa:	f7ff fdc3 	bl	800de34 <malloc>
 800e2ae:	4602      	mov	r2, r0
 800e2b0:	6270      	str	r0, [r6, #36]	; 0x24
 800e2b2:	b928      	cbnz	r0, 800e2c0 <__pow5mult+0x40>
 800e2b4:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800e2b8:	4b1c      	ldr	r3, [pc, #112]	; (800e32c <__pow5mult+0xac>)
 800e2ba:	481d      	ldr	r0, [pc, #116]	; (800e330 <__pow5mult+0xb0>)
 800e2bc:	f001 f93a 	bl	800f534 <__assert_func>
 800e2c0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800e2c4:	6004      	str	r4, [r0, #0]
 800e2c6:	60c4      	str	r4, [r0, #12]
 800e2c8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800e2cc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800e2d0:	b94c      	cbnz	r4, 800e2e6 <__pow5mult+0x66>
 800e2d2:	f240 2171 	movw	r1, #625	; 0x271
 800e2d6:	4630      	mov	r0, r6
 800e2d8:	f7ff ff14 	bl	800e104 <__i2b>
 800e2dc:	2300      	movs	r3, #0
 800e2de:	4604      	mov	r4, r0
 800e2e0:	f8c8 0008 	str.w	r0, [r8, #8]
 800e2e4:	6003      	str	r3, [r0, #0]
 800e2e6:	f04f 0900 	mov.w	r9, #0
 800e2ea:	07eb      	lsls	r3, r5, #31
 800e2ec:	d50a      	bpl.n	800e304 <__pow5mult+0x84>
 800e2ee:	4639      	mov	r1, r7
 800e2f0:	4622      	mov	r2, r4
 800e2f2:	4630      	mov	r0, r6
 800e2f4:	f7ff ff1c 	bl	800e130 <__multiply>
 800e2f8:	4680      	mov	r8, r0
 800e2fa:	4639      	mov	r1, r7
 800e2fc:	4630      	mov	r0, r6
 800e2fe:	f7ff fe01 	bl	800df04 <_Bfree>
 800e302:	4647      	mov	r7, r8
 800e304:	106d      	asrs	r5, r5, #1
 800e306:	d00b      	beq.n	800e320 <__pow5mult+0xa0>
 800e308:	6820      	ldr	r0, [r4, #0]
 800e30a:	b938      	cbnz	r0, 800e31c <__pow5mult+0x9c>
 800e30c:	4622      	mov	r2, r4
 800e30e:	4621      	mov	r1, r4
 800e310:	4630      	mov	r0, r6
 800e312:	f7ff ff0d 	bl	800e130 <__multiply>
 800e316:	6020      	str	r0, [r4, #0]
 800e318:	f8c0 9000 	str.w	r9, [r0]
 800e31c:	4604      	mov	r4, r0
 800e31e:	e7e4      	b.n	800e2ea <__pow5mult+0x6a>
 800e320:	4638      	mov	r0, r7
 800e322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e326:	bf00      	nop
 800e328:	08011120 	.word	0x08011120
 800e32c:	08010ed6 	.word	0x08010ed6
 800e330:	08010fd4 	.word	0x08010fd4

0800e334 <__lshift>:
 800e334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e338:	460c      	mov	r4, r1
 800e33a:	4607      	mov	r7, r0
 800e33c:	4691      	mov	r9, r2
 800e33e:	6923      	ldr	r3, [r4, #16]
 800e340:	6849      	ldr	r1, [r1, #4]
 800e342:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800e346:	68a3      	ldr	r3, [r4, #8]
 800e348:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800e34c:	f108 0601 	add.w	r6, r8, #1
 800e350:	42b3      	cmp	r3, r6
 800e352:	db0b      	blt.n	800e36c <__lshift+0x38>
 800e354:	4638      	mov	r0, r7
 800e356:	f7ff fd95 	bl	800de84 <_Balloc>
 800e35a:	4605      	mov	r5, r0
 800e35c:	b948      	cbnz	r0, 800e372 <__lshift+0x3e>
 800e35e:	4602      	mov	r2, r0
 800e360:	f240 11d9 	movw	r1, #473	; 0x1d9
 800e364:	4b29      	ldr	r3, [pc, #164]	; (800e40c <__lshift+0xd8>)
 800e366:	482a      	ldr	r0, [pc, #168]	; (800e410 <__lshift+0xdc>)
 800e368:	f001 f8e4 	bl	800f534 <__assert_func>
 800e36c:	3101      	adds	r1, #1
 800e36e:	005b      	lsls	r3, r3, #1
 800e370:	e7ee      	b.n	800e350 <__lshift+0x1c>
 800e372:	2300      	movs	r3, #0
 800e374:	f100 0114 	add.w	r1, r0, #20
 800e378:	f100 0210 	add.w	r2, r0, #16
 800e37c:	4618      	mov	r0, r3
 800e37e:	4553      	cmp	r3, sl
 800e380:	db37      	blt.n	800e3f2 <__lshift+0xbe>
 800e382:	6920      	ldr	r0, [r4, #16]
 800e384:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800e388:	f104 0314 	add.w	r3, r4, #20
 800e38c:	f019 091f 	ands.w	r9, r9, #31
 800e390:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800e394:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800e398:	d02f      	beq.n	800e3fa <__lshift+0xc6>
 800e39a:	468a      	mov	sl, r1
 800e39c:	f04f 0c00 	mov.w	ip, #0
 800e3a0:	f1c9 0e20 	rsb	lr, r9, #32
 800e3a4:	681a      	ldr	r2, [r3, #0]
 800e3a6:	fa02 f209 	lsl.w	r2, r2, r9
 800e3aa:	ea42 020c 	orr.w	r2, r2, ip
 800e3ae:	f84a 2b04 	str.w	r2, [sl], #4
 800e3b2:	f853 2b04 	ldr.w	r2, [r3], #4
 800e3b6:	4298      	cmp	r0, r3
 800e3b8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800e3bc:	d8f2      	bhi.n	800e3a4 <__lshift+0x70>
 800e3be:	1b03      	subs	r3, r0, r4
 800e3c0:	3b15      	subs	r3, #21
 800e3c2:	f023 0303 	bic.w	r3, r3, #3
 800e3c6:	3304      	adds	r3, #4
 800e3c8:	f104 0215 	add.w	r2, r4, #21
 800e3cc:	4290      	cmp	r0, r2
 800e3ce:	bf38      	it	cc
 800e3d0:	2304      	movcc	r3, #4
 800e3d2:	f841 c003 	str.w	ip, [r1, r3]
 800e3d6:	f1bc 0f00 	cmp.w	ip, #0
 800e3da:	d001      	beq.n	800e3e0 <__lshift+0xac>
 800e3dc:	f108 0602 	add.w	r6, r8, #2
 800e3e0:	3e01      	subs	r6, #1
 800e3e2:	4638      	mov	r0, r7
 800e3e4:	4621      	mov	r1, r4
 800e3e6:	612e      	str	r6, [r5, #16]
 800e3e8:	f7ff fd8c 	bl	800df04 <_Bfree>
 800e3ec:	4628      	mov	r0, r5
 800e3ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e3f2:	f842 0f04 	str.w	r0, [r2, #4]!
 800e3f6:	3301      	adds	r3, #1
 800e3f8:	e7c1      	b.n	800e37e <__lshift+0x4a>
 800e3fa:	3904      	subs	r1, #4
 800e3fc:	f853 2b04 	ldr.w	r2, [r3], #4
 800e400:	4298      	cmp	r0, r3
 800e402:	f841 2f04 	str.w	r2, [r1, #4]!
 800e406:	d8f9      	bhi.n	800e3fc <__lshift+0xc8>
 800e408:	e7ea      	b.n	800e3e0 <__lshift+0xac>
 800e40a:	bf00      	nop
 800e40c:	08010f48 	.word	0x08010f48
 800e410:	08010fd4 	.word	0x08010fd4

0800e414 <__mcmp>:
 800e414:	4603      	mov	r3, r0
 800e416:	690a      	ldr	r2, [r1, #16]
 800e418:	6900      	ldr	r0, [r0, #16]
 800e41a:	b530      	push	{r4, r5, lr}
 800e41c:	1a80      	subs	r0, r0, r2
 800e41e:	d10d      	bne.n	800e43c <__mcmp+0x28>
 800e420:	3314      	adds	r3, #20
 800e422:	3114      	adds	r1, #20
 800e424:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800e428:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800e42c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800e430:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800e434:	4295      	cmp	r5, r2
 800e436:	d002      	beq.n	800e43e <__mcmp+0x2a>
 800e438:	d304      	bcc.n	800e444 <__mcmp+0x30>
 800e43a:	2001      	movs	r0, #1
 800e43c:	bd30      	pop	{r4, r5, pc}
 800e43e:	42a3      	cmp	r3, r4
 800e440:	d3f4      	bcc.n	800e42c <__mcmp+0x18>
 800e442:	e7fb      	b.n	800e43c <__mcmp+0x28>
 800e444:	f04f 30ff 	mov.w	r0, #4294967295
 800e448:	e7f8      	b.n	800e43c <__mcmp+0x28>
	...

0800e44c <__mdiff>:
 800e44c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e450:	460d      	mov	r5, r1
 800e452:	4607      	mov	r7, r0
 800e454:	4611      	mov	r1, r2
 800e456:	4628      	mov	r0, r5
 800e458:	4614      	mov	r4, r2
 800e45a:	f7ff ffdb 	bl	800e414 <__mcmp>
 800e45e:	1e06      	subs	r6, r0, #0
 800e460:	d111      	bne.n	800e486 <__mdiff+0x3a>
 800e462:	4631      	mov	r1, r6
 800e464:	4638      	mov	r0, r7
 800e466:	f7ff fd0d 	bl	800de84 <_Balloc>
 800e46a:	4602      	mov	r2, r0
 800e46c:	b928      	cbnz	r0, 800e47a <__mdiff+0x2e>
 800e46e:	f240 2132 	movw	r1, #562	; 0x232
 800e472:	4b3a      	ldr	r3, [pc, #232]	; (800e55c <__mdiff+0x110>)
 800e474:	483a      	ldr	r0, [pc, #232]	; (800e560 <__mdiff+0x114>)
 800e476:	f001 f85d 	bl	800f534 <__assert_func>
 800e47a:	2301      	movs	r3, #1
 800e47c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800e480:	4610      	mov	r0, r2
 800e482:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e486:	bfa4      	itt	ge
 800e488:	4623      	movge	r3, r4
 800e48a:	462c      	movge	r4, r5
 800e48c:	4638      	mov	r0, r7
 800e48e:	6861      	ldr	r1, [r4, #4]
 800e490:	bfa6      	itte	ge
 800e492:	461d      	movge	r5, r3
 800e494:	2600      	movge	r6, #0
 800e496:	2601      	movlt	r6, #1
 800e498:	f7ff fcf4 	bl	800de84 <_Balloc>
 800e49c:	4602      	mov	r2, r0
 800e49e:	b918      	cbnz	r0, 800e4a8 <__mdiff+0x5c>
 800e4a0:	f44f 7110 	mov.w	r1, #576	; 0x240
 800e4a4:	4b2d      	ldr	r3, [pc, #180]	; (800e55c <__mdiff+0x110>)
 800e4a6:	e7e5      	b.n	800e474 <__mdiff+0x28>
 800e4a8:	f102 0814 	add.w	r8, r2, #20
 800e4ac:	46c2      	mov	sl, r8
 800e4ae:	f04f 0c00 	mov.w	ip, #0
 800e4b2:	6927      	ldr	r7, [r4, #16]
 800e4b4:	60c6      	str	r6, [r0, #12]
 800e4b6:	692e      	ldr	r6, [r5, #16]
 800e4b8:	f104 0014 	add.w	r0, r4, #20
 800e4bc:	f105 0914 	add.w	r9, r5, #20
 800e4c0:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 800e4c4:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800e4c8:	3410      	adds	r4, #16
 800e4ca:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800e4ce:	f859 3b04 	ldr.w	r3, [r9], #4
 800e4d2:	fa1f f18b 	uxth.w	r1, fp
 800e4d6:	448c      	add	ip, r1
 800e4d8:	b299      	uxth	r1, r3
 800e4da:	0c1b      	lsrs	r3, r3, #16
 800e4dc:	ebac 0101 	sub.w	r1, ip, r1
 800e4e0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800e4e4:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800e4e8:	b289      	uxth	r1, r1
 800e4ea:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800e4ee:	454e      	cmp	r6, r9
 800e4f0:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800e4f4:	f84a 3b04 	str.w	r3, [sl], #4
 800e4f8:	d8e7      	bhi.n	800e4ca <__mdiff+0x7e>
 800e4fa:	1b73      	subs	r3, r6, r5
 800e4fc:	3b15      	subs	r3, #21
 800e4fe:	f023 0303 	bic.w	r3, r3, #3
 800e502:	3515      	adds	r5, #21
 800e504:	3304      	adds	r3, #4
 800e506:	42ae      	cmp	r6, r5
 800e508:	bf38      	it	cc
 800e50a:	2304      	movcc	r3, #4
 800e50c:	4418      	add	r0, r3
 800e50e:	4443      	add	r3, r8
 800e510:	461e      	mov	r6, r3
 800e512:	4605      	mov	r5, r0
 800e514:	4575      	cmp	r5, lr
 800e516:	d30e      	bcc.n	800e536 <__mdiff+0xea>
 800e518:	f10e 0103 	add.w	r1, lr, #3
 800e51c:	1a09      	subs	r1, r1, r0
 800e51e:	f021 0103 	bic.w	r1, r1, #3
 800e522:	3803      	subs	r0, #3
 800e524:	4586      	cmp	lr, r0
 800e526:	bf38      	it	cc
 800e528:	2100      	movcc	r1, #0
 800e52a:	4419      	add	r1, r3
 800e52c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800e530:	b18b      	cbz	r3, 800e556 <__mdiff+0x10a>
 800e532:	6117      	str	r7, [r2, #16]
 800e534:	e7a4      	b.n	800e480 <__mdiff+0x34>
 800e536:	f855 8b04 	ldr.w	r8, [r5], #4
 800e53a:	fa1f f188 	uxth.w	r1, r8
 800e53e:	4461      	add	r1, ip
 800e540:	140c      	asrs	r4, r1, #16
 800e542:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800e546:	b289      	uxth	r1, r1
 800e548:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800e54c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800e550:	f846 1b04 	str.w	r1, [r6], #4
 800e554:	e7de      	b.n	800e514 <__mdiff+0xc8>
 800e556:	3f01      	subs	r7, #1
 800e558:	e7e8      	b.n	800e52c <__mdiff+0xe0>
 800e55a:	bf00      	nop
 800e55c:	08010f48 	.word	0x08010f48
 800e560:	08010fd4 	.word	0x08010fd4

0800e564 <__ulp>:
 800e564:	4b11      	ldr	r3, [pc, #68]	; (800e5ac <__ulp+0x48>)
 800e566:	400b      	ands	r3, r1
 800e568:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	dd02      	ble.n	800e576 <__ulp+0x12>
 800e570:	2000      	movs	r0, #0
 800e572:	4619      	mov	r1, r3
 800e574:	4770      	bx	lr
 800e576:	425b      	negs	r3, r3
 800e578:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800e57c:	f04f 0000 	mov.w	r0, #0
 800e580:	f04f 0100 	mov.w	r1, #0
 800e584:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e588:	da04      	bge.n	800e594 <__ulp+0x30>
 800e58a:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800e58e:	fa43 f102 	asr.w	r1, r3, r2
 800e592:	4770      	bx	lr
 800e594:	f1a2 0314 	sub.w	r3, r2, #20
 800e598:	2b1e      	cmp	r3, #30
 800e59a:	bfd6      	itet	le
 800e59c:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800e5a0:	2301      	movgt	r3, #1
 800e5a2:	fa22 f303 	lsrle.w	r3, r2, r3
 800e5a6:	4618      	mov	r0, r3
 800e5a8:	4770      	bx	lr
 800e5aa:	bf00      	nop
 800e5ac:	7ff00000 	.word	0x7ff00000

0800e5b0 <__b2d>:
 800e5b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e5b4:	6907      	ldr	r7, [r0, #16]
 800e5b6:	f100 0914 	add.w	r9, r0, #20
 800e5ba:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 800e5be:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800e5c2:	f1a7 0804 	sub.w	r8, r7, #4
 800e5c6:	4630      	mov	r0, r6
 800e5c8:	f7ff fd4e 	bl	800e068 <__hi0bits>
 800e5cc:	f1c0 0320 	rsb	r3, r0, #32
 800e5d0:	280a      	cmp	r0, #10
 800e5d2:	600b      	str	r3, [r1, #0]
 800e5d4:	491f      	ldr	r1, [pc, #124]	; (800e654 <__b2d+0xa4>)
 800e5d6:	dc17      	bgt.n	800e608 <__b2d+0x58>
 800e5d8:	45c1      	cmp	r9, r8
 800e5da:	bf28      	it	cs
 800e5dc:	2200      	movcs	r2, #0
 800e5de:	f1c0 0c0b 	rsb	ip, r0, #11
 800e5e2:	fa26 f30c 	lsr.w	r3, r6, ip
 800e5e6:	bf38      	it	cc
 800e5e8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e5ec:	ea43 0501 	orr.w	r5, r3, r1
 800e5f0:	f100 0315 	add.w	r3, r0, #21
 800e5f4:	fa06 f303 	lsl.w	r3, r6, r3
 800e5f8:	fa22 f20c 	lsr.w	r2, r2, ip
 800e5fc:	ea43 0402 	orr.w	r4, r3, r2
 800e600:	4620      	mov	r0, r4
 800e602:	4629      	mov	r1, r5
 800e604:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e608:	45c1      	cmp	r9, r8
 800e60a:	bf2e      	itee	cs
 800e60c:	2200      	movcs	r2, #0
 800e60e:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e612:	f1a7 0808 	subcc.w	r8, r7, #8
 800e616:	f1b0 030b 	subs.w	r3, r0, #11
 800e61a:	d016      	beq.n	800e64a <__b2d+0x9a>
 800e61c:	f1c3 0720 	rsb	r7, r3, #32
 800e620:	fa22 f107 	lsr.w	r1, r2, r7
 800e624:	45c8      	cmp	r8, r9
 800e626:	fa06 f603 	lsl.w	r6, r6, r3
 800e62a:	ea46 0601 	orr.w	r6, r6, r1
 800e62e:	bf94      	ite	ls
 800e630:	2100      	movls	r1, #0
 800e632:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800e636:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 800e63a:	fa02 f003 	lsl.w	r0, r2, r3
 800e63e:	40f9      	lsrs	r1, r7
 800e640:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800e644:	ea40 0401 	orr.w	r4, r0, r1
 800e648:	e7da      	b.n	800e600 <__b2d+0x50>
 800e64a:	4614      	mov	r4, r2
 800e64c:	ea46 0501 	orr.w	r5, r6, r1
 800e650:	e7d6      	b.n	800e600 <__b2d+0x50>
 800e652:	bf00      	nop
 800e654:	3ff00000 	.word	0x3ff00000

0800e658 <__d2b>:
 800e658:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e65c:	2101      	movs	r1, #1
 800e65e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800e662:	4690      	mov	r8, r2
 800e664:	461d      	mov	r5, r3
 800e666:	f7ff fc0d 	bl	800de84 <_Balloc>
 800e66a:	4604      	mov	r4, r0
 800e66c:	b930      	cbnz	r0, 800e67c <__d2b+0x24>
 800e66e:	4602      	mov	r2, r0
 800e670:	f240 310a 	movw	r1, #778	; 0x30a
 800e674:	4b24      	ldr	r3, [pc, #144]	; (800e708 <__d2b+0xb0>)
 800e676:	4825      	ldr	r0, [pc, #148]	; (800e70c <__d2b+0xb4>)
 800e678:	f000 ff5c 	bl	800f534 <__assert_func>
 800e67c:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800e680:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800e684:	bb2d      	cbnz	r5, 800e6d2 <__d2b+0x7a>
 800e686:	9301      	str	r3, [sp, #4]
 800e688:	f1b8 0300 	subs.w	r3, r8, #0
 800e68c:	d026      	beq.n	800e6dc <__d2b+0x84>
 800e68e:	4668      	mov	r0, sp
 800e690:	9300      	str	r3, [sp, #0]
 800e692:	f7ff fd09 	bl	800e0a8 <__lo0bits>
 800e696:	9900      	ldr	r1, [sp, #0]
 800e698:	b1f0      	cbz	r0, 800e6d8 <__d2b+0x80>
 800e69a:	9a01      	ldr	r2, [sp, #4]
 800e69c:	f1c0 0320 	rsb	r3, r0, #32
 800e6a0:	fa02 f303 	lsl.w	r3, r2, r3
 800e6a4:	430b      	orrs	r3, r1
 800e6a6:	40c2      	lsrs	r2, r0
 800e6a8:	6163      	str	r3, [r4, #20]
 800e6aa:	9201      	str	r2, [sp, #4]
 800e6ac:	9b01      	ldr	r3, [sp, #4]
 800e6ae:	2b00      	cmp	r3, #0
 800e6b0:	bf14      	ite	ne
 800e6b2:	2102      	movne	r1, #2
 800e6b4:	2101      	moveq	r1, #1
 800e6b6:	61a3      	str	r3, [r4, #24]
 800e6b8:	6121      	str	r1, [r4, #16]
 800e6ba:	b1c5      	cbz	r5, 800e6ee <__d2b+0x96>
 800e6bc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800e6c0:	4405      	add	r5, r0
 800e6c2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800e6c6:	603d      	str	r5, [r7, #0]
 800e6c8:	6030      	str	r0, [r6, #0]
 800e6ca:	4620      	mov	r0, r4
 800e6cc:	b002      	add	sp, #8
 800e6ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6d2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800e6d6:	e7d6      	b.n	800e686 <__d2b+0x2e>
 800e6d8:	6161      	str	r1, [r4, #20]
 800e6da:	e7e7      	b.n	800e6ac <__d2b+0x54>
 800e6dc:	a801      	add	r0, sp, #4
 800e6de:	f7ff fce3 	bl	800e0a8 <__lo0bits>
 800e6e2:	2101      	movs	r1, #1
 800e6e4:	9b01      	ldr	r3, [sp, #4]
 800e6e6:	6121      	str	r1, [r4, #16]
 800e6e8:	6163      	str	r3, [r4, #20]
 800e6ea:	3020      	adds	r0, #32
 800e6ec:	e7e5      	b.n	800e6ba <__d2b+0x62>
 800e6ee:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e6f2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800e6f6:	6038      	str	r0, [r7, #0]
 800e6f8:	6918      	ldr	r0, [r3, #16]
 800e6fa:	f7ff fcb5 	bl	800e068 <__hi0bits>
 800e6fe:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800e702:	6031      	str	r1, [r6, #0]
 800e704:	e7e1      	b.n	800e6ca <__d2b+0x72>
 800e706:	bf00      	nop
 800e708:	08010f48 	.word	0x08010f48
 800e70c:	08010fd4 	.word	0x08010fd4

0800e710 <__ratio>:
 800e710:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e714:	4688      	mov	r8, r1
 800e716:	4669      	mov	r1, sp
 800e718:	4681      	mov	r9, r0
 800e71a:	f7ff ff49 	bl	800e5b0 <__b2d>
 800e71e:	460f      	mov	r7, r1
 800e720:	4604      	mov	r4, r0
 800e722:	460d      	mov	r5, r1
 800e724:	4640      	mov	r0, r8
 800e726:	a901      	add	r1, sp, #4
 800e728:	f7ff ff42 	bl	800e5b0 <__b2d>
 800e72c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e730:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800e734:	468b      	mov	fp, r1
 800e736:	eba3 0c02 	sub.w	ip, r3, r2
 800e73a:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e73e:	1a9b      	subs	r3, r3, r2
 800e740:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800e744:	2b00      	cmp	r3, #0
 800e746:	bfd5      	itete	le
 800e748:	460a      	movle	r2, r1
 800e74a:	462a      	movgt	r2, r5
 800e74c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800e750:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800e754:	bfd8      	it	le
 800e756:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800e75a:	465b      	mov	r3, fp
 800e75c:	4602      	mov	r2, r0
 800e75e:	4639      	mov	r1, r7
 800e760:	4620      	mov	r0, r4
 800e762:	f7f2 f805 	bl	8000770 <__aeabi_ddiv>
 800e766:	b003      	add	sp, #12
 800e768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e76c <__copybits>:
 800e76c:	3901      	subs	r1, #1
 800e76e:	b570      	push	{r4, r5, r6, lr}
 800e770:	1149      	asrs	r1, r1, #5
 800e772:	6914      	ldr	r4, [r2, #16]
 800e774:	3101      	adds	r1, #1
 800e776:	f102 0314 	add.w	r3, r2, #20
 800e77a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e77e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e782:	1f05      	subs	r5, r0, #4
 800e784:	42a3      	cmp	r3, r4
 800e786:	d30c      	bcc.n	800e7a2 <__copybits+0x36>
 800e788:	1aa3      	subs	r3, r4, r2
 800e78a:	3b11      	subs	r3, #17
 800e78c:	f023 0303 	bic.w	r3, r3, #3
 800e790:	3211      	adds	r2, #17
 800e792:	42a2      	cmp	r2, r4
 800e794:	bf88      	it	hi
 800e796:	2300      	movhi	r3, #0
 800e798:	4418      	add	r0, r3
 800e79a:	2300      	movs	r3, #0
 800e79c:	4288      	cmp	r0, r1
 800e79e:	d305      	bcc.n	800e7ac <__copybits+0x40>
 800e7a0:	bd70      	pop	{r4, r5, r6, pc}
 800e7a2:	f853 6b04 	ldr.w	r6, [r3], #4
 800e7a6:	f845 6f04 	str.w	r6, [r5, #4]!
 800e7aa:	e7eb      	b.n	800e784 <__copybits+0x18>
 800e7ac:	f840 3b04 	str.w	r3, [r0], #4
 800e7b0:	e7f4      	b.n	800e79c <__copybits+0x30>

0800e7b2 <__any_on>:
 800e7b2:	f100 0214 	add.w	r2, r0, #20
 800e7b6:	6900      	ldr	r0, [r0, #16]
 800e7b8:	114b      	asrs	r3, r1, #5
 800e7ba:	4298      	cmp	r0, r3
 800e7bc:	b510      	push	{r4, lr}
 800e7be:	db11      	blt.n	800e7e4 <__any_on+0x32>
 800e7c0:	dd0a      	ble.n	800e7d8 <__any_on+0x26>
 800e7c2:	f011 011f 	ands.w	r1, r1, #31
 800e7c6:	d007      	beq.n	800e7d8 <__any_on+0x26>
 800e7c8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e7cc:	fa24 f001 	lsr.w	r0, r4, r1
 800e7d0:	fa00 f101 	lsl.w	r1, r0, r1
 800e7d4:	428c      	cmp	r4, r1
 800e7d6:	d10b      	bne.n	800e7f0 <__any_on+0x3e>
 800e7d8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e7dc:	4293      	cmp	r3, r2
 800e7de:	d803      	bhi.n	800e7e8 <__any_on+0x36>
 800e7e0:	2000      	movs	r0, #0
 800e7e2:	bd10      	pop	{r4, pc}
 800e7e4:	4603      	mov	r3, r0
 800e7e6:	e7f7      	b.n	800e7d8 <__any_on+0x26>
 800e7e8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e7ec:	2900      	cmp	r1, #0
 800e7ee:	d0f5      	beq.n	800e7dc <__any_on+0x2a>
 800e7f0:	2001      	movs	r0, #1
 800e7f2:	e7f6      	b.n	800e7e2 <__any_on+0x30>

0800e7f4 <_calloc_r>:
 800e7f4:	b570      	push	{r4, r5, r6, lr}
 800e7f6:	fba1 5402 	umull	r5, r4, r1, r2
 800e7fa:	b934      	cbnz	r4, 800e80a <_calloc_r+0x16>
 800e7fc:	4629      	mov	r1, r5
 800e7fe:	f000 f875 	bl	800e8ec <_malloc_r>
 800e802:	4606      	mov	r6, r0
 800e804:	b928      	cbnz	r0, 800e812 <_calloc_r+0x1e>
 800e806:	4630      	mov	r0, r6
 800e808:	bd70      	pop	{r4, r5, r6, pc}
 800e80a:	220c      	movs	r2, #12
 800e80c:	2600      	movs	r6, #0
 800e80e:	6002      	str	r2, [r0, #0]
 800e810:	e7f9      	b.n	800e806 <_calloc_r+0x12>
 800e812:	462a      	mov	r2, r5
 800e814:	4621      	mov	r1, r4
 800e816:	f7fc fb5b 	bl	800aed0 <memset>
 800e81a:	e7f4      	b.n	800e806 <_calloc_r+0x12>

0800e81c <_free_r>:
 800e81c:	b538      	push	{r3, r4, r5, lr}
 800e81e:	4605      	mov	r5, r0
 800e820:	2900      	cmp	r1, #0
 800e822:	d040      	beq.n	800e8a6 <_free_r+0x8a>
 800e824:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e828:	1f0c      	subs	r4, r1, #4
 800e82a:	2b00      	cmp	r3, #0
 800e82c:	bfb8      	it	lt
 800e82e:	18e4      	addlt	r4, r4, r3
 800e830:	f001 f880 	bl	800f934 <__malloc_lock>
 800e834:	4a1c      	ldr	r2, [pc, #112]	; (800e8a8 <_free_r+0x8c>)
 800e836:	6813      	ldr	r3, [r2, #0]
 800e838:	b933      	cbnz	r3, 800e848 <_free_r+0x2c>
 800e83a:	6063      	str	r3, [r4, #4]
 800e83c:	6014      	str	r4, [r2, #0]
 800e83e:	4628      	mov	r0, r5
 800e840:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e844:	f001 b87c 	b.w	800f940 <__malloc_unlock>
 800e848:	42a3      	cmp	r3, r4
 800e84a:	d908      	bls.n	800e85e <_free_r+0x42>
 800e84c:	6820      	ldr	r0, [r4, #0]
 800e84e:	1821      	adds	r1, r4, r0
 800e850:	428b      	cmp	r3, r1
 800e852:	bf01      	itttt	eq
 800e854:	6819      	ldreq	r1, [r3, #0]
 800e856:	685b      	ldreq	r3, [r3, #4]
 800e858:	1809      	addeq	r1, r1, r0
 800e85a:	6021      	streq	r1, [r4, #0]
 800e85c:	e7ed      	b.n	800e83a <_free_r+0x1e>
 800e85e:	461a      	mov	r2, r3
 800e860:	685b      	ldr	r3, [r3, #4]
 800e862:	b10b      	cbz	r3, 800e868 <_free_r+0x4c>
 800e864:	42a3      	cmp	r3, r4
 800e866:	d9fa      	bls.n	800e85e <_free_r+0x42>
 800e868:	6811      	ldr	r1, [r2, #0]
 800e86a:	1850      	adds	r0, r2, r1
 800e86c:	42a0      	cmp	r0, r4
 800e86e:	d10b      	bne.n	800e888 <_free_r+0x6c>
 800e870:	6820      	ldr	r0, [r4, #0]
 800e872:	4401      	add	r1, r0
 800e874:	1850      	adds	r0, r2, r1
 800e876:	4283      	cmp	r3, r0
 800e878:	6011      	str	r1, [r2, #0]
 800e87a:	d1e0      	bne.n	800e83e <_free_r+0x22>
 800e87c:	6818      	ldr	r0, [r3, #0]
 800e87e:	685b      	ldr	r3, [r3, #4]
 800e880:	4401      	add	r1, r0
 800e882:	6011      	str	r1, [r2, #0]
 800e884:	6053      	str	r3, [r2, #4]
 800e886:	e7da      	b.n	800e83e <_free_r+0x22>
 800e888:	d902      	bls.n	800e890 <_free_r+0x74>
 800e88a:	230c      	movs	r3, #12
 800e88c:	602b      	str	r3, [r5, #0]
 800e88e:	e7d6      	b.n	800e83e <_free_r+0x22>
 800e890:	6820      	ldr	r0, [r4, #0]
 800e892:	1821      	adds	r1, r4, r0
 800e894:	428b      	cmp	r3, r1
 800e896:	bf01      	itttt	eq
 800e898:	6819      	ldreq	r1, [r3, #0]
 800e89a:	685b      	ldreq	r3, [r3, #4]
 800e89c:	1809      	addeq	r1, r1, r0
 800e89e:	6021      	streq	r1, [r4, #0]
 800e8a0:	6063      	str	r3, [r4, #4]
 800e8a2:	6054      	str	r4, [r2, #4]
 800e8a4:	e7cb      	b.n	800e83e <_free_r+0x22>
 800e8a6:	bd38      	pop	{r3, r4, r5, pc}
 800e8a8:	200014e4 	.word	0x200014e4

0800e8ac <sbrk_aligned>:
 800e8ac:	b570      	push	{r4, r5, r6, lr}
 800e8ae:	4e0e      	ldr	r6, [pc, #56]	; (800e8e8 <sbrk_aligned+0x3c>)
 800e8b0:	460c      	mov	r4, r1
 800e8b2:	6831      	ldr	r1, [r6, #0]
 800e8b4:	4605      	mov	r5, r0
 800e8b6:	b911      	cbnz	r1, 800e8be <sbrk_aligned+0x12>
 800e8b8:	f000 fd26 	bl	800f308 <_sbrk_r>
 800e8bc:	6030      	str	r0, [r6, #0]
 800e8be:	4621      	mov	r1, r4
 800e8c0:	4628      	mov	r0, r5
 800e8c2:	f000 fd21 	bl	800f308 <_sbrk_r>
 800e8c6:	1c43      	adds	r3, r0, #1
 800e8c8:	d00a      	beq.n	800e8e0 <sbrk_aligned+0x34>
 800e8ca:	1cc4      	adds	r4, r0, #3
 800e8cc:	f024 0403 	bic.w	r4, r4, #3
 800e8d0:	42a0      	cmp	r0, r4
 800e8d2:	d007      	beq.n	800e8e4 <sbrk_aligned+0x38>
 800e8d4:	1a21      	subs	r1, r4, r0
 800e8d6:	4628      	mov	r0, r5
 800e8d8:	f000 fd16 	bl	800f308 <_sbrk_r>
 800e8dc:	3001      	adds	r0, #1
 800e8de:	d101      	bne.n	800e8e4 <sbrk_aligned+0x38>
 800e8e0:	f04f 34ff 	mov.w	r4, #4294967295
 800e8e4:	4620      	mov	r0, r4
 800e8e6:	bd70      	pop	{r4, r5, r6, pc}
 800e8e8:	200014e8 	.word	0x200014e8

0800e8ec <_malloc_r>:
 800e8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8f0:	1ccd      	adds	r5, r1, #3
 800e8f2:	f025 0503 	bic.w	r5, r5, #3
 800e8f6:	3508      	adds	r5, #8
 800e8f8:	2d0c      	cmp	r5, #12
 800e8fa:	bf38      	it	cc
 800e8fc:	250c      	movcc	r5, #12
 800e8fe:	2d00      	cmp	r5, #0
 800e900:	4607      	mov	r7, r0
 800e902:	db01      	blt.n	800e908 <_malloc_r+0x1c>
 800e904:	42a9      	cmp	r1, r5
 800e906:	d905      	bls.n	800e914 <_malloc_r+0x28>
 800e908:	230c      	movs	r3, #12
 800e90a:	2600      	movs	r6, #0
 800e90c:	603b      	str	r3, [r7, #0]
 800e90e:	4630      	mov	r0, r6
 800e910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e914:	4e2e      	ldr	r6, [pc, #184]	; (800e9d0 <_malloc_r+0xe4>)
 800e916:	f001 f80d 	bl	800f934 <__malloc_lock>
 800e91a:	6833      	ldr	r3, [r6, #0]
 800e91c:	461c      	mov	r4, r3
 800e91e:	bb34      	cbnz	r4, 800e96e <_malloc_r+0x82>
 800e920:	4629      	mov	r1, r5
 800e922:	4638      	mov	r0, r7
 800e924:	f7ff ffc2 	bl	800e8ac <sbrk_aligned>
 800e928:	1c43      	adds	r3, r0, #1
 800e92a:	4604      	mov	r4, r0
 800e92c:	d14d      	bne.n	800e9ca <_malloc_r+0xde>
 800e92e:	6834      	ldr	r4, [r6, #0]
 800e930:	4626      	mov	r6, r4
 800e932:	2e00      	cmp	r6, #0
 800e934:	d140      	bne.n	800e9b8 <_malloc_r+0xcc>
 800e936:	6823      	ldr	r3, [r4, #0]
 800e938:	4631      	mov	r1, r6
 800e93a:	4638      	mov	r0, r7
 800e93c:	eb04 0803 	add.w	r8, r4, r3
 800e940:	f000 fce2 	bl	800f308 <_sbrk_r>
 800e944:	4580      	cmp	r8, r0
 800e946:	d13a      	bne.n	800e9be <_malloc_r+0xd2>
 800e948:	6821      	ldr	r1, [r4, #0]
 800e94a:	3503      	adds	r5, #3
 800e94c:	1a6d      	subs	r5, r5, r1
 800e94e:	f025 0503 	bic.w	r5, r5, #3
 800e952:	3508      	adds	r5, #8
 800e954:	2d0c      	cmp	r5, #12
 800e956:	bf38      	it	cc
 800e958:	250c      	movcc	r5, #12
 800e95a:	4638      	mov	r0, r7
 800e95c:	4629      	mov	r1, r5
 800e95e:	f7ff ffa5 	bl	800e8ac <sbrk_aligned>
 800e962:	3001      	adds	r0, #1
 800e964:	d02b      	beq.n	800e9be <_malloc_r+0xd2>
 800e966:	6823      	ldr	r3, [r4, #0]
 800e968:	442b      	add	r3, r5
 800e96a:	6023      	str	r3, [r4, #0]
 800e96c:	e00e      	b.n	800e98c <_malloc_r+0xa0>
 800e96e:	6822      	ldr	r2, [r4, #0]
 800e970:	1b52      	subs	r2, r2, r5
 800e972:	d41e      	bmi.n	800e9b2 <_malloc_r+0xc6>
 800e974:	2a0b      	cmp	r2, #11
 800e976:	d916      	bls.n	800e9a6 <_malloc_r+0xba>
 800e978:	1961      	adds	r1, r4, r5
 800e97a:	42a3      	cmp	r3, r4
 800e97c:	6025      	str	r5, [r4, #0]
 800e97e:	bf18      	it	ne
 800e980:	6059      	strne	r1, [r3, #4]
 800e982:	6863      	ldr	r3, [r4, #4]
 800e984:	bf08      	it	eq
 800e986:	6031      	streq	r1, [r6, #0]
 800e988:	5162      	str	r2, [r4, r5]
 800e98a:	604b      	str	r3, [r1, #4]
 800e98c:	4638      	mov	r0, r7
 800e98e:	f104 060b 	add.w	r6, r4, #11
 800e992:	f000 ffd5 	bl	800f940 <__malloc_unlock>
 800e996:	f026 0607 	bic.w	r6, r6, #7
 800e99a:	1d23      	adds	r3, r4, #4
 800e99c:	1af2      	subs	r2, r6, r3
 800e99e:	d0b6      	beq.n	800e90e <_malloc_r+0x22>
 800e9a0:	1b9b      	subs	r3, r3, r6
 800e9a2:	50a3      	str	r3, [r4, r2]
 800e9a4:	e7b3      	b.n	800e90e <_malloc_r+0x22>
 800e9a6:	6862      	ldr	r2, [r4, #4]
 800e9a8:	42a3      	cmp	r3, r4
 800e9aa:	bf0c      	ite	eq
 800e9ac:	6032      	streq	r2, [r6, #0]
 800e9ae:	605a      	strne	r2, [r3, #4]
 800e9b0:	e7ec      	b.n	800e98c <_malloc_r+0xa0>
 800e9b2:	4623      	mov	r3, r4
 800e9b4:	6864      	ldr	r4, [r4, #4]
 800e9b6:	e7b2      	b.n	800e91e <_malloc_r+0x32>
 800e9b8:	4634      	mov	r4, r6
 800e9ba:	6876      	ldr	r6, [r6, #4]
 800e9bc:	e7b9      	b.n	800e932 <_malloc_r+0x46>
 800e9be:	230c      	movs	r3, #12
 800e9c0:	4638      	mov	r0, r7
 800e9c2:	603b      	str	r3, [r7, #0]
 800e9c4:	f000 ffbc 	bl	800f940 <__malloc_unlock>
 800e9c8:	e7a1      	b.n	800e90e <_malloc_r+0x22>
 800e9ca:	6025      	str	r5, [r4, #0]
 800e9cc:	e7de      	b.n	800e98c <_malloc_r+0xa0>
 800e9ce:	bf00      	nop
 800e9d0:	200014e4 	.word	0x200014e4

0800e9d4 <__ssputs_r>:
 800e9d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e9d8:	688e      	ldr	r6, [r1, #8]
 800e9da:	4682      	mov	sl, r0
 800e9dc:	429e      	cmp	r6, r3
 800e9de:	460c      	mov	r4, r1
 800e9e0:	4690      	mov	r8, r2
 800e9e2:	461f      	mov	r7, r3
 800e9e4:	d838      	bhi.n	800ea58 <__ssputs_r+0x84>
 800e9e6:	898a      	ldrh	r2, [r1, #12]
 800e9e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e9ec:	d032      	beq.n	800ea54 <__ssputs_r+0x80>
 800e9ee:	6825      	ldr	r5, [r4, #0]
 800e9f0:	6909      	ldr	r1, [r1, #16]
 800e9f2:	3301      	adds	r3, #1
 800e9f4:	eba5 0901 	sub.w	r9, r5, r1
 800e9f8:	6965      	ldr	r5, [r4, #20]
 800e9fa:	444b      	add	r3, r9
 800e9fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ea00:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800ea04:	106d      	asrs	r5, r5, #1
 800ea06:	429d      	cmp	r5, r3
 800ea08:	bf38      	it	cc
 800ea0a:	461d      	movcc	r5, r3
 800ea0c:	0553      	lsls	r3, r2, #21
 800ea0e:	d531      	bpl.n	800ea74 <__ssputs_r+0xa0>
 800ea10:	4629      	mov	r1, r5
 800ea12:	f7ff ff6b 	bl	800e8ec <_malloc_r>
 800ea16:	4606      	mov	r6, r0
 800ea18:	b950      	cbnz	r0, 800ea30 <__ssputs_r+0x5c>
 800ea1a:	230c      	movs	r3, #12
 800ea1c:	f04f 30ff 	mov.w	r0, #4294967295
 800ea20:	f8ca 3000 	str.w	r3, [sl]
 800ea24:	89a3      	ldrh	r3, [r4, #12]
 800ea26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ea2a:	81a3      	strh	r3, [r4, #12]
 800ea2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea30:	464a      	mov	r2, r9
 800ea32:	6921      	ldr	r1, [r4, #16]
 800ea34:	f7fc fa3e 	bl	800aeb4 <memcpy>
 800ea38:	89a3      	ldrh	r3, [r4, #12]
 800ea3a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800ea3e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ea42:	81a3      	strh	r3, [r4, #12]
 800ea44:	6126      	str	r6, [r4, #16]
 800ea46:	444e      	add	r6, r9
 800ea48:	6026      	str	r6, [r4, #0]
 800ea4a:	463e      	mov	r6, r7
 800ea4c:	6165      	str	r5, [r4, #20]
 800ea4e:	eba5 0509 	sub.w	r5, r5, r9
 800ea52:	60a5      	str	r5, [r4, #8]
 800ea54:	42be      	cmp	r6, r7
 800ea56:	d900      	bls.n	800ea5a <__ssputs_r+0x86>
 800ea58:	463e      	mov	r6, r7
 800ea5a:	4632      	mov	r2, r6
 800ea5c:	4641      	mov	r1, r8
 800ea5e:	6820      	ldr	r0, [r4, #0]
 800ea60:	f000 ff4e 	bl	800f900 <memmove>
 800ea64:	68a3      	ldr	r3, [r4, #8]
 800ea66:	2000      	movs	r0, #0
 800ea68:	1b9b      	subs	r3, r3, r6
 800ea6a:	60a3      	str	r3, [r4, #8]
 800ea6c:	6823      	ldr	r3, [r4, #0]
 800ea6e:	4433      	add	r3, r6
 800ea70:	6023      	str	r3, [r4, #0]
 800ea72:	e7db      	b.n	800ea2c <__ssputs_r+0x58>
 800ea74:	462a      	mov	r2, r5
 800ea76:	f000 ff69 	bl	800f94c <_realloc_r>
 800ea7a:	4606      	mov	r6, r0
 800ea7c:	2800      	cmp	r0, #0
 800ea7e:	d1e1      	bne.n	800ea44 <__ssputs_r+0x70>
 800ea80:	4650      	mov	r0, sl
 800ea82:	6921      	ldr	r1, [r4, #16]
 800ea84:	f7ff feca 	bl	800e81c <_free_r>
 800ea88:	e7c7      	b.n	800ea1a <__ssputs_r+0x46>
	...

0800ea8c <_svfiprintf_r>:
 800ea8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea90:	4698      	mov	r8, r3
 800ea92:	898b      	ldrh	r3, [r1, #12]
 800ea94:	4607      	mov	r7, r0
 800ea96:	061b      	lsls	r3, r3, #24
 800ea98:	460d      	mov	r5, r1
 800ea9a:	4614      	mov	r4, r2
 800ea9c:	b09d      	sub	sp, #116	; 0x74
 800ea9e:	d50e      	bpl.n	800eabe <_svfiprintf_r+0x32>
 800eaa0:	690b      	ldr	r3, [r1, #16]
 800eaa2:	b963      	cbnz	r3, 800eabe <_svfiprintf_r+0x32>
 800eaa4:	2140      	movs	r1, #64	; 0x40
 800eaa6:	f7ff ff21 	bl	800e8ec <_malloc_r>
 800eaaa:	6028      	str	r0, [r5, #0]
 800eaac:	6128      	str	r0, [r5, #16]
 800eaae:	b920      	cbnz	r0, 800eaba <_svfiprintf_r+0x2e>
 800eab0:	230c      	movs	r3, #12
 800eab2:	603b      	str	r3, [r7, #0]
 800eab4:	f04f 30ff 	mov.w	r0, #4294967295
 800eab8:	e0d1      	b.n	800ec5e <_svfiprintf_r+0x1d2>
 800eaba:	2340      	movs	r3, #64	; 0x40
 800eabc:	616b      	str	r3, [r5, #20]
 800eabe:	2300      	movs	r3, #0
 800eac0:	9309      	str	r3, [sp, #36]	; 0x24
 800eac2:	2320      	movs	r3, #32
 800eac4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800eac8:	2330      	movs	r3, #48	; 0x30
 800eaca:	f04f 0901 	mov.w	r9, #1
 800eace:	f8cd 800c 	str.w	r8, [sp, #12]
 800ead2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800ec78 <_svfiprintf_r+0x1ec>
 800ead6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800eada:	4623      	mov	r3, r4
 800eadc:	469a      	mov	sl, r3
 800eade:	f813 2b01 	ldrb.w	r2, [r3], #1
 800eae2:	b10a      	cbz	r2, 800eae8 <_svfiprintf_r+0x5c>
 800eae4:	2a25      	cmp	r2, #37	; 0x25
 800eae6:	d1f9      	bne.n	800eadc <_svfiprintf_r+0x50>
 800eae8:	ebba 0b04 	subs.w	fp, sl, r4
 800eaec:	d00b      	beq.n	800eb06 <_svfiprintf_r+0x7a>
 800eaee:	465b      	mov	r3, fp
 800eaf0:	4622      	mov	r2, r4
 800eaf2:	4629      	mov	r1, r5
 800eaf4:	4638      	mov	r0, r7
 800eaf6:	f7ff ff6d 	bl	800e9d4 <__ssputs_r>
 800eafa:	3001      	adds	r0, #1
 800eafc:	f000 80aa 	beq.w	800ec54 <_svfiprintf_r+0x1c8>
 800eb00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800eb02:	445a      	add	r2, fp
 800eb04:	9209      	str	r2, [sp, #36]	; 0x24
 800eb06:	f89a 3000 	ldrb.w	r3, [sl]
 800eb0a:	2b00      	cmp	r3, #0
 800eb0c:	f000 80a2 	beq.w	800ec54 <_svfiprintf_r+0x1c8>
 800eb10:	2300      	movs	r3, #0
 800eb12:	f04f 32ff 	mov.w	r2, #4294967295
 800eb16:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800eb1a:	f10a 0a01 	add.w	sl, sl, #1
 800eb1e:	9304      	str	r3, [sp, #16]
 800eb20:	9307      	str	r3, [sp, #28]
 800eb22:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800eb26:	931a      	str	r3, [sp, #104]	; 0x68
 800eb28:	4654      	mov	r4, sl
 800eb2a:	2205      	movs	r2, #5
 800eb2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800eb30:	4851      	ldr	r0, [pc, #324]	; (800ec78 <_svfiprintf_r+0x1ec>)
 800eb32:	f7ff f999 	bl	800de68 <memchr>
 800eb36:	9a04      	ldr	r2, [sp, #16]
 800eb38:	b9d8      	cbnz	r0, 800eb72 <_svfiprintf_r+0xe6>
 800eb3a:	06d0      	lsls	r0, r2, #27
 800eb3c:	bf44      	itt	mi
 800eb3e:	2320      	movmi	r3, #32
 800eb40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800eb44:	0711      	lsls	r1, r2, #28
 800eb46:	bf44      	itt	mi
 800eb48:	232b      	movmi	r3, #43	; 0x2b
 800eb4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800eb4e:	f89a 3000 	ldrb.w	r3, [sl]
 800eb52:	2b2a      	cmp	r3, #42	; 0x2a
 800eb54:	d015      	beq.n	800eb82 <_svfiprintf_r+0xf6>
 800eb56:	4654      	mov	r4, sl
 800eb58:	2000      	movs	r0, #0
 800eb5a:	f04f 0c0a 	mov.w	ip, #10
 800eb5e:	9a07      	ldr	r2, [sp, #28]
 800eb60:	4621      	mov	r1, r4
 800eb62:	f811 3b01 	ldrb.w	r3, [r1], #1
 800eb66:	3b30      	subs	r3, #48	; 0x30
 800eb68:	2b09      	cmp	r3, #9
 800eb6a:	d94e      	bls.n	800ec0a <_svfiprintf_r+0x17e>
 800eb6c:	b1b0      	cbz	r0, 800eb9c <_svfiprintf_r+0x110>
 800eb6e:	9207      	str	r2, [sp, #28]
 800eb70:	e014      	b.n	800eb9c <_svfiprintf_r+0x110>
 800eb72:	eba0 0308 	sub.w	r3, r0, r8
 800eb76:	fa09 f303 	lsl.w	r3, r9, r3
 800eb7a:	4313      	orrs	r3, r2
 800eb7c:	46a2      	mov	sl, r4
 800eb7e:	9304      	str	r3, [sp, #16]
 800eb80:	e7d2      	b.n	800eb28 <_svfiprintf_r+0x9c>
 800eb82:	9b03      	ldr	r3, [sp, #12]
 800eb84:	1d19      	adds	r1, r3, #4
 800eb86:	681b      	ldr	r3, [r3, #0]
 800eb88:	9103      	str	r1, [sp, #12]
 800eb8a:	2b00      	cmp	r3, #0
 800eb8c:	bfbb      	ittet	lt
 800eb8e:	425b      	neglt	r3, r3
 800eb90:	f042 0202 	orrlt.w	r2, r2, #2
 800eb94:	9307      	strge	r3, [sp, #28]
 800eb96:	9307      	strlt	r3, [sp, #28]
 800eb98:	bfb8      	it	lt
 800eb9a:	9204      	strlt	r2, [sp, #16]
 800eb9c:	7823      	ldrb	r3, [r4, #0]
 800eb9e:	2b2e      	cmp	r3, #46	; 0x2e
 800eba0:	d10c      	bne.n	800ebbc <_svfiprintf_r+0x130>
 800eba2:	7863      	ldrb	r3, [r4, #1]
 800eba4:	2b2a      	cmp	r3, #42	; 0x2a
 800eba6:	d135      	bne.n	800ec14 <_svfiprintf_r+0x188>
 800eba8:	9b03      	ldr	r3, [sp, #12]
 800ebaa:	3402      	adds	r4, #2
 800ebac:	1d1a      	adds	r2, r3, #4
 800ebae:	681b      	ldr	r3, [r3, #0]
 800ebb0:	9203      	str	r2, [sp, #12]
 800ebb2:	2b00      	cmp	r3, #0
 800ebb4:	bfb8      	it	lt
 800ebb6:	f04f 33ff 	movlt.w	r3, #4294967295
 800ebba:	9305      	str	r3, [sp, #20]
 800ebbc:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800ec7c <_svfiprintf_r+0x1f0>
 800ebc0:	2203      	movs	r2, #3
 800ebc2:	4650      	mov	r0, sl
 800ebc4:	7821      	ldrb	r1, [r4, #0]
 800ebc6:	f7ff f94f 	bl	800de68 <memchr>
 800ebca:	b140      	cbz	r0, 800ebde <_svfiprintf_r+0x152>
 800ebcc:	2340      	movs	r3, #64	; 0x40
 800ebce:	eba0 000a 	sub.w	r0, r0, sl
 800ebd2:	fa03 f000 	lsl.w	r0, r3, r0
 800ebd6:	9b04      	ldr	r3, [sp, #16]
 800ebd8:	3401      	adds	r4, #1
 800ebda:	4303      	orrs	r3, r0
 800ebdc:	9304      	str	r3, [sp, #16]
 800ebde:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ebe2:	2206      	movs	r2, #6
 800ebe4:	4826      	ldr	r0, [pc, #152]	; (800ec80 <_svfiprintf_r+0x1f4>)
 800ebe6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800ebea:	f7ff f93d 	bl	800de68 <memchr>
 800ebee:	2800      	cmp	r0, #0
 800ebf0:	d038      	beq.n	800ec64 <_svfiprintf_r+0x1d8>
 800ebf2:	4b24      	ldr	r3, [pc, #144]	; (800ec84 <_svfiprintf_r+0x1f8>)
 800ebf4:	bb1b      	cbnz	r3, 800ec3e <_svfiprintf_r+0x1b2>
 800ebf6:	9b03      	ldr	r3, [sp, #12]
 800ebf8:	3307      	adds	r3, #7
 800ebfa:	f023 0307 	bic.w	r3, r3, #7
 800ebfe:	3308      	adds	r3, #8
 800ec00:	9303      	str	r3, [sp, #12]
 800ec02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ec04:	4433      	add	r3, r6
 800ec06:	9309      	str	r3, [sp, #36]	; 0x24
 800ec08:	e767      	b.n	800eada <_svfiprintf_r+0x4e>
 800ec0a:	460c      	mov	r4, r1
 800ec0c:	2001      	movs	r0, #1
 800ec0e:	fb0c 3202 	mla	r2, ip, r2, r3
 800ec12:	e7a5      	b.n	800eb60 <_svfiprintf_r+0xd4>
 800ec14:	2300      	movs	r3, #0
 800ec16:	f04f 0c0a 	mov.w	ip, #10
 800ec1a:	4619      	mov	r1, r3
 800ec1c:	3401      	adds	r4, #1
 800ec1e:	9305      	str	r3, [sp, #20]
 800ec20:	4620      	mov	r0, r4
 800ec22:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ec26:	3a30      	subs	r2, #48	; 0x30
 800ec28:	2a09      	cmp	r2, #9
 800ec2a:	d903      	bls.n	800ec34 <_svfiprintf_r+0x1a8>
 800ec2c:	2b00      	cmp	r3, #0
 800ec2e:	d0c5      	beq.n	800ebbc <_svfiprintf_r+0x130>
 800ec30:	9105      	str	r1, [sp, #20]
 800ec32:	e7c3      	b.n	800ebbc <_svfiprintf_r+0x130>
 800ec34:	4604      	mov	r4, r0
 800ec36:	2301      	movs	r3, #1
 800ec38:	fb0c 2101 	mla	r1, ip, r1, r2
 800ec3c:	e7f0      	b.n	800ec20 <_svfiprintf_r+0x194>
 800ec3e:	ab03      	add	r3, sp, #12
 800ec40:	9300      	str	r3, [sp, #0]
 800ec42:	462a      	mov	r2, r5
 800ec44:	4638      	mov	r0, r7
 800ec46:	4b10      	ldr	r3, [pc, #64]	; (800ec88 <_svfiprintf_r+0x1fc>)
 800ec48:	a904      	add	r1, sp, #16
 800ec4a:	f7fc f9e7 	bl	800b01c <_printf_float>
 800ec4e:	1c42      	adds	r2, r0, #1
 800ec50:	4606      	mov	r6, r0
 800ec52:	d1d6      	bne.n	800ec02 <_svfiprintf_r+0x176>
 800ec54:	89ab      	ldrh	r3, [r5, #12]
 800ec56:	065b      	lsls	r3, r3, #25
 800ec58:	f53f af2c 	bmi.w	800eab4 <_svfiprintf_r+0x28>
 800ec5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ec5e:	b01d      	add	sp, #116	; 0x74
 800ec60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec64:	ab03      	add	r3, sp, #12
 800ec66:	9300      	str	r3, [sp, #0]
 800ec68:	462a      	mov	r2, r5
 800ec6a:	4638      	mov	r0, r7
 800ec6c:	4b06      	ldr	r3, [pc, #24]	; (800ec88 <_svfiprintf_r+0x1fc>)
 800ec6e:	a904      	add	r1, sp, #16
 800ec70:	f7fc fc70 	bl	800b554 <_printf_i>
 800ec74:	e7eb      	b.n	800ec4e <_svfiprintf_r+0x1c2>
 800ec76:	bf00      	nop
 800ec78:	0801112c 	.word	0x0801112c
 800ec7c:	08011132 	.word	0x08011132
 800ec80:	08011136 	.word	0x08011136
 800ec84:	0800b01d 	.word	0x0800b01d
 800ec88:	0800e9d5 	.word	0x0800e9d5

0800ec8c <_sungetc_r>:
 800ec8c:	b538      	push	{r3, r4, r5, lr}
 800ec8e:	1c4b      	adds	r3, r1, #1
 800ec90:	4614      	mov	r4, r2
 800ec92:	d103      	bne.n	800ec9c <_sungetc_r+0x10>
 800ec94:	f04f 35ff 	mov.w	r5, #4294967295
 800ec98:	4628      	mov	r0, r5
 800ec9a:	bd38      	pop	{r3, r4, r5, pc}
 800ec9c:	8993      	ldrh	r3, [r2, #12]
 800ec9e:	b2cd      	uxtb	r5, r1
 800eca0:	f023 0320 	bic.w	r3, r3, #32
 800eca4:	8193      	strh	r3, [r2, #12]
 800eca6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800eca8:	6852      	ldr	r2, [r2, #4]
 800ecaa:	b18b      	cbz	r3, 800ecd0 <_sungetc_r+0x44>
 800ecac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ecae:	4293      	cmp	r3, r2
 800ecb0:	dd08      	ble.n	800ecc4 <_sungetc_r+0x38>
 800ecb2:	6823      	ldr	r3, [r4, #0]
 800ecb4:	1e5a      	subs	r2, r3, #1
 800ecb6:	6022      	str	r2, [r4, #0]
 800ecb8:	f803 5c01 	strb.w	r5, [r3, #-1]
 800ecbc:	6863      	ldr	r3, [r4, #4]
 800ecbe:	3301      	adds	r3, #1
 800ecc0:	6063      	str	r3, [r4, #4]
 800ecc2:	e7e9      	b.n	800ec98 <_sungetc_r+0xc>
 800ecc4:	4621      	mov	r1, r4
 800ecc6:	f000 fbef 	bl	800f4a8 <__submore>
 800ecca:	2800      	cmp	r0, #0
 800eccc:	d0f1      	beq.n	800ecb2 <_sungetc_r+0x26>
 800ecce:	e7e1      	b.n	800ec94 <_sungetc_r+0x8>
 800ecd0:	6921      	ldr	r1, [r4, #16]
 800ecd2:	6823      	ldr	r3, [r4, #0]
 800ecd4:	b151      	cbz	r1, 800ecec <_sungetc_r+0x60>
 800ecd6:	4299      	cmp	r1, r3
 800ecd8:	d208      	bcs.n	800ecec <_sungetc_r+0x60>
 800ecda:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800ecde:	42a9      	cmp	r1, r5
 800ece0:	d104      	bne.n	800ecec <_sungetc_r+0x60>
 800ece2:	3b01      	subs	r3, #1
 800ece4:	3201      	adds	r2, #1
 800ece6:	6023      	str	r3, [r4, #0]
 800ece8:	6062      	str	r2, [r4, #4]
 800ecea:	e7d5      	b.n	800ec98 <_sungetc_r+0xc>
 800ecec:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800ecf0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ecf4:	6363      	str	r3, [r4, #52]	; 0x34
 800ecf6:	2303      	movs	r3, #3
 800ecf8:	63a3      	str	r3, [r4, #56]	; 0x38
 800ecfa:	4623      	mov	r3, r4
 800ecfc:	f803 5f46 	strb.w	r5, [r3, #70]!
 800ed00:	6023      	str	r3, [r4, #0]
 800ed02:	2301      	movs	r3, #1
 800ed04:	e7dc      	b.n	800ecc0 <_sungetc_r+0x34>

0800ed06 <__ssrefill_r>:
 800ed06:	b510      	push	{r4, lr}
 800ed08:	460c      	mov	r4, r1
 800ed0a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800ed0c:	b169      	cbz	r1, 800ed2a <__ssrefill_r+0x24>
 800ed0e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ed12:	4299      	cmp	r1, r3
 800ed14:	d001      	beq.n	800ed1a <__ssrefill_r+0x14>
 800ed16:	f7ff fd81 	bl	800e81c <_free_r>
 800ed1a:	2000      	movs	r0, #0
 800ed1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ed1e:	6360      	str	r0, [r4, #52]	; 0x34
 800ed20:	6063      	str	r3, [r4, #4]
 800ed22:	b113      	cbz	r3, 800ed2a <__ssrefill_r+0x24>
 800ed24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ed26:	6023      	str	r3, [r4, #0]
 800ed28:	bd10      	pop	{r4, pc}
 800ed2a:	6923      	ldr	r3, [r4, #16]
 800ed2c:	f04f 30ff 	mov.w	r0, #4294967295
 800ed30:	6023      	str	r3, [r4, #0]
 800ed32:	2300      	movs	r3, #0
 800ed34:	6063      	str	r3, [r4, #4]
 800ed36:	89a3      	ldrh	r3, [r4, #12]
 800ed38:	f043 0320 	orr.w	r3, r3, #32
 800ed3c:	81a3      	strh	r3, [r4, #12]
 800ed3e:	e7f3      	b.n	800ed28 <__ssrefill_r+0x22>

0800ed40 <__ssvfiscanf_r>:
 800ed40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed44:	460c      	mov	r4, r1
 800ed46:	2100      	movs	r1, #0
 800ed48:	4606      	mov	r6, r0
 800ed4a:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800ed4e:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800ed52:	49a7      	ldr	r1, [pc, #668]	; (800eff0 <__ssvfiscanf_r+0x2b0>)
 800ed54:	f10d 0804 	add.w	r8, sp, #4
 800ed58:	91a0      	str	r1, [sp, #640]	; 0x280
 800ed5a:	49a6      	ldr	r1, [pc, #664]	; (800eff4 <__ssvfiscanf_r+0x2b4>)
 800ed5c:	4fa6      	ldr	r7, [pc, #664]	; (800eff8 <__ssvfiscanf_r+0x2b8>)
 800ed5e:	f8df 929c 	ldr.w	r9, [pc, #668]	; 800effc <__ssvfiscanf_r+0x2bc>
 800ed62:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800ed66:	91a1      	str	r1, [sp, #644]	; 0x284
 800ed68:	9300      	str	r3, [sp, #0]
 800ed6a:	7813      	ldrb	r3, [r2, #0]
 800ed6c:	2b00      	cmp	r3, #0
 800ed6e:	f000 815c 	beq.w	800f02a <__ssvfiscanf_r+0x2ea>
 800ed72:	5dd9      	ldrb	r1, [r3, r7]
 800ed74:	1c55      	adds	r5, r2, #1
 800ed76:	f011 0108 	ands.w	r1, r1, #8
 800ed7a:	d019      	beq.n	800edb0 <__ssvfiscanf_r+0x70>
 800ed7c:	6863      	ldr	r3, [r4, #4]
 800ed7e:	2b00      	cmp	r3, #0
 800ed80:	dd0f      	ble.n	800eda2 <__ssvfiscanf_r+0x62>
 800ed82:	6823      	ldr	r3, [r4, #0]
 800ed84:	781a      	ldrb	r2, [r3, #0]
 800ed86:	5cba      	ldrb	r2, [r7, r2]
 800ed88:	0712      	lsls	r2, r2, #28
 800ed8a:	d401      	bmi.n	800ed90 <__ssvfiscanf_r+0x50>
 800ed8c:	462a      	mov	r2, r5
 800ed8e:	e7ec      	b.n	800ed6a <__ssvfiscanf_r+0x2a>
 800ed90:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800ed92:	3301      	adds	r3, #1
 800ed94:	3201      	adds	r2, #1
 800ed96:	9245      	str	r2, [sp, #276]	; 0x114
 800ed98:	6862      	ldr	r2, [r4, #4]
 800ed9a:	6023      	str	r3, [r4, #0]
 800ed9c:	3a01      	subs	r2, #1
 800ed9e:	6062      	str	r2, [r4, #4]
 800eda0:	e7ec      	b.n	800ed7c <__ssvfiscanf_r+0x3c>
 800eda2:	4621      	mov	r1, r4
 800eda4:	4630      	mov	r0, r6
 800eda6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800eda8:	4798      	blx	r3
 800edaa:	2800      	cmp	r0, #0
 800edac:	d0e9      	beq.n	800ed82 <__ssvfiscanf_r+0x42>
 800edae:	e7ed      	b.n	800ed8c <__ssvfiscanf_r+0x4c>
 800edb0:	2b25      	cmp	r3, #37	; 0x25
 800edb2:	d012      	beq.n	800edda <__ssvfiscanf_r+0x9a>
 800edb4:	469a      	mov	sl, r3
 800edb6:	6863      	ldr	r3, [r4, #4]
 800edb8:	2b00      	cmp	r3, #0
 800edba:	f340 8094 	ble.w	800eee6 <__ssvfiscanf_r+0x1a6>
 800edbe:	6822      	ldr	r2, [r4, #0]
 800edc0:	7813      	ldrb	r3, [r2, #0]
 800edc2:	4553      	cmp	r3, sl
 800edc4:	f040 8131 	bne.w	800f02a <__ssvfiscanf_r+0x2ea>
 800edc8:	6863      	ldr	r3, [r4, #4]
 800edca:	3201      	adds	r2, #1
 800edcc:	3b01      	subs	r3, #1
 800edce:	6063      	str	r3, [r4, #4]
 800edd0:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800edd2:	6022      	str	r2, [r4, #0]
 800edd4:	3301      	adds	r3, #1
 800edd6:	9345      	str	r3, [sp, #276]	; 0x114
 800edd8:	e7d8      	b.n	800ed8c <__ssvfiscanf_r+0x4c>
 800edda:	9141      	str	r1, [sp, #260]	; 0x104
 800eddc:	9143      	str	r1, [sp, #268]	; 0x10c
 800edde:	7853      	ldrb	r3, [r2, #1]
 800ede0:	2b2a      	cmp	r3, #42	; 0x2a
 800ede2:	bf04      	itt	eq
 800ede4:	2310      	moveq	r3, #16
 800ede6:	1c95      	addeq	r5, r2, #2
 800ede8:	f04f 020a 	mov.w	r2, #10
 800edec:	bf08      	it	eq
 800edee:	9341      	streq	r3, [sp, #260]	; 0x104
 800edf0:	46aa      	mov	sl, r5
 800edf2:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800edf6:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800edfa:	2b09      	cmp	r3, #9
 800edfc:	d91d      	bls.n	800ee3a <__ssvfiscanf_r+0xfa>
 800edfe:	2203      	movs	r2, #3
 800ee00:	487e      	ldr	r0, [pc, #504]	; (800effc <__ssvfiscanf_r+0x2bc>)
 800ee02:	f7ff f831 	bl	800de68 <memchr>
 800ee06:	b140      	cbz	r0, 800ee1a <__ssvfiscanf_r+0xda>
 800ee08:	2301      	movs	r3, #1
 800ee0a:	4655      	mov	r5, sl
 800ee0c:	eba0 0009 	sub.w	r0, r0, r9
 800ee10:	fa03 f000 	lsl.w	r0, r3, r0
 800ee14:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ee16:	4318      	orrs	r0, r3
 800ee18:	9041      	str	r0, [sp, #260]	; 0x104
 800ee1a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800ee1e:	2b78      	cmp	r3, #120	; 0x78
 800ee20:	d806      	bhi.n	800ee30 <__ssvfiscanf_r+0xf0>
 800ee22:	2b57      	cmp	r3, #87	; 0x57
 800ee24:	d810      	bhi.n	800ee48 <__ssvfiscanf_r+0x108>
 800ee26:	2b25      	cmp	r3, #37	; 0x25
 800ee28:	d0c4      	beq.n	800edb4 <__ssvfiscanf_r+0x74>
 800ee2a:	d857      	bhi.n	800eedc <__ssvfiscanf_r+0x19c>
 800ee2c:	2b00      	cmp	r3, #0
 800ee2e:	d065      	beq.n	800eefc <__ssvfiscanf_r+0x1bc>
 800ee30:	2303      	movs	r3, #3
 800ee32:	9347      	str	r3, [sp, #284]	; 0x11c
 800ee34:	230a      	movs	r3, #10
 800ee36:	9342      	str	r3, [sp, #264]	; 0x108
 800ee38:	e072      	b.n	800ef20 <__ssvfiscanf_r+0x1e0>
 800ee3a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800ee3c:	4655      	mov	r5, sl
 800ee3e:	fb02 1103 	mla	r1, r2, r3, r1
 800ee42:	3930      	subs	r1, #48	; 0x30
 800ee44:	9143      	str	r1, [sp, #268]	; 0x10c
 800ee46:	e7d3      	b.n	800edf0 <__ssvfiscanf_r+0xb0>
 800ee48:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800ee4c:	2a20      	cmp	r2, #32
 800ee4e:	d8ef      	bhi.n	800ee30 <__ssvfiscanf_r+0xf0>
 800ee50:	a101      	add	r1, pc, #4	; (adr r1, 800ee58 <__ssvfiscanf_r+0x118>)
 800ee52:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800ee56:	bf00      	nop
 800ee58:	0800ef0b 	.word	0x0800ef0b
 800ee5c:	0800ee31 	.word	0x0800ee31
 800ee60:	0800ee31 	.word	0x0800ee31
 800ee64:	0800ef69 	.word	0x0800ef69
 800ee68:	0800ee31 	.word	0x0800ee31
 800ee6c:	0800ee31 	.word	0x0800ee31
 800ee70:	0800ee31 	.word	0x0800ee31
 800ee74:	0800ee31 	.word	0x0800ee31
 800ee78:	0800ee31 	.word	0x0800ee31
 800ee7c:	0800ee31 	.word	0x0800ee31
 800ee80:	0800ee31 	.word	0x0800ee31
 800ee84:	0800ef7f 	.word	0x0800ef7f
 800ee88:	0800ef55 	.word	0x0800ef55
 800ee8c:	0800eee3 	.word	0x0800eee3
 800ee90:	0800eee3 	.word	0x0800eee3
 800ee94:	0800eee3 	.word	0x0800eee3
 800ee98:	0800ee31 	.word	0x0800ee31
 800ee9c:	0800ef59 	.word	0x0800ef59
 800eea0:	0800ee31 	.word	0x0800ee31
 800eea4:	0800ee31 	.word	0x0800ee31
 800eea8:	0800ee31 	.word	0x0800ee31
 800eeac:	0800ee31 	.word	0x0800ee31
 800eeb0:	0800ef8f 	.word	0x0800ef8f
 800eeb4:	0800ef61 	.word	0x0800ef61
 800eeb8:	0800ef03 	.word	0x0800ef03
 800eebc:	0800ee31 	.word	0x0800ee31
 800eec0:	0800ee31 	.word	0x0800ee31
 800eec4:	0800ef8b 	.word	0x0800ef8b
 800eec8:	0800ee31 	.word	0x0800ee31
 800eecc:	0800ef55 	.word	0x0800ef55
 800eed0:	0800ee31 	.word	0x0800ee31
 800eed4:	0800ee31 	.word	0x0800ee31
 800eed8:	0800ef0b 	.word	0x0800ef0b
 800eedc:	3b45      	subs	r3, #69	; 0x45
 800eede:	2b02      	cmp	r3, #2
 800eee0:	d8a6      	bhi.n	800ee30 <__ssvfiscanf_r+0xf0>
 800eee2:	2305      	movs	r3, #5
 800eee4:	e01b      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800eee6:	4621      	mov	r1, r4
 800eee8:	4630      	mov	r0, r6
 800eeea:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800eeec:	4798      	blx	r3
 800eeee:	2800      	cmp	r0, #0
 800eef0:	f43f af65 	beq.w	800edbe <__ssvfiscanf_r+0x7e>
 800eef4:	9844      	ldr	r0, [sp, #272]	; 0x110
 800eef6:	2800      	cmp	r0, #0
 800eef8:	f040 808d 	bne.w	800f016 <__ssvfiscanf_r+0x2d6>
 800eefc:	f04f 30ff 	mov.w	r0, #4294967295
 800ef00:	e08f      	b.n	800f022 <__ssvfiscanf_r+0x2e2>
 800ef02:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800ef04:	f042 0220 	orr.w	r2, r2, #32
 800ef08:	9241      	str	r2, [sp, #260]	; 0x104
 800ef0a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800ef0c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ef10:	9241      	str	r2, [sp, #260]	; 0x104
 800ef12:	2210      	movs	r2, #16
 800ef14:	2b6f      	cmp	r3, #111	; 0x6f
 800ef16:	bf34      	ite	cc
 800ef18:	2303      	movcc	r3, #3
 800ef1a:	2304      	movcs	r3, #4
 800ef1c:	9242      	str	r2, [sp, #264]	; 0x108
 800ef1e:	9347      	str	r3, [sp, #284]	; 0x11c
 800ef20:	6863      	ldr	r3, [r4, #4]
 800ef22:	2b00      	cmp	r3, #0
 800ef24:	dd42      	ble.n	800efac <__ssvfiscanf_r+0x26c>
 800ef26:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ef28:	0659      	lsls	r1, r3, #25
 800ef2a:	d404      	bmi.n	800ef36 <__ssvfiscanf_r+0x1f6>
 800ef2c:	6823      	ldr	r3, [r4, #0]
 800ef2e:	781a      	ldrb	r2, [r3, #0]
 800ef30:	5cba      	ldrb	r2, [r7, r2]
 800ef32:	0712      	lsls	r2, r2, #28
 800ef34:	d441      	bmi.n	800efba <__ssvfiscanf_r+0x27a>
 800ef36:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800ef38:	2b02      	cmp	r3, #2
 800ef3a:	dc50      	bgt.n	800efde <__ssvfiscanf_r+0x29e>
 800ef3c:	466b      	mov	r3, sp
 800ef3e:	4622      	mov	r2, r4
 800ef40:	4630      	mov	r0, r6
 800ef42:	a941      	add	r1, sp, #260	; 0x104
 800ef44:	f000 f876 	bl	800f034 <_scanf_chars>
 800ef48:	2801      	cmp	r0, #1
 800ef4a:	d06e      	beq.n	800f02a <__ssvfiscanf_r+0x2ea>
 800ef4c:	2802      	cmp	r0, #2
 800ef4e:	f47f af1d 	bne.w	800ed8c <__ssvfiscanf_r+0x4c>
 800ef52:	e7cf      	b.n	800eef4 <__ssvfiscanf_r+0x1b4>
 800ef54:	220a      	movs	r2, #10
 800ef56:	e7dd      	b.n	800ef14 <__ssvfiscanf_r+0x1d4>
 800ef58:	2300      	movs	r3, #0
 800ef5a:	9342      	str	r3, [sp, #264]	; 0x108
 800ef5c:	2303      	movs	r3, #3
 800ef5e:	e7de      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800ef60:	2308      	movs	r3, #8
 800ef62:	9342      	str	r3, [sp, #264]	; 0x108
 800ef64:	2304      	movs	r3, #4
 800ef66:	e7da      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800ef68:	4629      	mov	r1, r5
 800ef6a:	4640      	mov	r0, r8
 800ef6c:	f000 f9dc 	bl	800f328 <__sccl>
 800ef70:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ef72:	4605      	mov	r5, r0
 800ef74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ef78:	9341      	str	r3, [sp, #260]	; 0x104
 800ef7a:	2301      	movs	r3, #1
 800ef7c:	e7cf      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800ef7e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800ef80:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ef84:	9341      	str	r3, [sp, #260]	; 0x104
 800ef86:	2300      	movs	r3, #0
 800ef88:	e7c9      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800ef8a:	2302      	movs	r3, #2
 800ef8c:	e7c7      	b.n	800ef1e <__ssvfiscanf_r+0x1de>
 800ef8e:	9841      	ldr	r0, [sp, #260]	; 0x104
 800ef90:	06c3      	lsls	r3, r0, #27
 800ef92:	f53f aefb 	bmi.w	800ed8c <__ssvfiscanf_r+0x4c>
 800ef96:	9b00      	ldr	r3, [sp, #0]
 800ef98:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800ef9a:	1d19      	adds	r1, r3, #4
 800ef9c:	9100      	str	r1, [sp, #0]
 800ef9e:	681b      	ldr	r3, [r3, #0]
 800efa0:	f010 0f01 	tst.w	r0, #1
 800efa4:	bf14      	ite	ne
 800efa6:	801a      	strhne	r2, [r3, #0]
 800efa8:	601a      	streq	r2, [r3, #0]
 800efaa:	e6ef      	b.n	800ed8c <__ssvfiscanf_r+0x4c>
 800efac:	4621      	mov	r1, r4
 800efae:	4630      	mov	r0, r6
 800efb0:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800efb2:	4798      	blx	r3
 800efb4:	2800      	cmp	r0, #0
 800efb6:	d0b6      	beq.n	800ef26 <__ssvfiscanf_r+0x1e6>
 800efb8:	e79c      	b.n	800eef4 <__ssvfiscanf_r+0x1b4>
 800efba:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800efbc:	3201      	adds	r2, #1
 800efbe:	9245      	str	r2, [sp, #276]	; 0x114
 800efc0:	6862      	ldr	r2, [r4, #4]
 800efc2:	3a01      	subs	r2, #1
 800efc4:	2a00      	cmp	r2, #0
 800efc6:	6062      	str	r2, [r4, #4]
 800efc8:	dd02      	ble.n	800efd0 <__ssvfiscanf_r+0x290>
 800efca:	3301      	adds	r3, #1
 800efcc:	6023      	str	r3, [r4, #0]
 800efce:	e7ad      	b.n	800ef2c <__ssvfiscanf_r+0x1ec>
 800efd0:	4621      	mov	r1, r4
 800efd2:	4630      	mov	r0, r6
 800efd4:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800efd6:	4798      	blx	r3
 800efd8:	2800      	cmp	r0, #0
 800efda:	d0a7      	beq.n	800ef2c <__ssvfiscanf_r+0x1ec>
 800efdc:	e78a      	b.n	800eef4 <__ssvfiscanf_r+0x1b4>
 800efde:	2b04      	cmp	r3, #4
 800efe0:	dc0e      	bgt.n	800f000 <__ssvfiscanf_r+0x2c0>
 800efe2:	466b      	mov	r3, sp
 800efe4:	4622      	mov	r2, r4
 800efe6:	4630      	mov	r0, r6
 800efe8:	a941      	add	r1, sp, #260	; 0x104
 800efea:	f000 f87d 	bl	800f0e8 <_scanf_i>
 800efee:	e7ab      	b.n	800ef48 <__ssvfiscanf_r+0x208>
 800eff0:	0800ec8d 	.word	0x0800ec8d
 800eff4:	0800ed07 	.word	0x0800ed07
 800eff8:	08010dc9 	.word	0x08010dc9
 800effc:	08011132 	.word	0x08011132
 800f000:	4b0b      	ldr	r3, [pc, #44]	; (800f030 <__ssvfiscanf_r+0x2f0>)
 800f002:	2b00      	cmp	r3, #0
 800f004:	f43f aec2 	beq.w	800ed8c <__ssvfiscanf_r+0x4c>
 800f008:	466b      	mov	r3, sp
 800f00a:	4622      	mov	r2, r4
 800f00c:	4630      	mov	r0, r6
 800f00e:	a941      	add	r1, sp, #260	; 0x104
 800f010:	f7fc fbc6 	bl	800b7a0 <_scanf_float>
 800f014:	e798      	b.n	800ef48 <__ssvfiscanf_r+0x208>
 800f016:	89a3      	ldrh	r3, [r4, #12]
 800f018:	f013 0f40 	tst.w	r3, #64	; 0x40
 800f01c:	bf18      	it	ne
 800f01e:	f04f 30ff 	movne.w	r0, #4294967295
 800f022:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800f026:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f02a:	9844      	ldr	r0, [sp, #272]	; 0x110
 800f02c:	e7f9      	b.n	800f022 <__ssvfiscanf_r+0x2e2>
 800f02e:	bf00      	nop
 800f030:	0800b7a1 	.word	0x0800b7a1

0800f034 <_scanf_chars>:
 800f034:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f038:	4615      	mov	r5, r2
 800f03a:	688a      	ldr	r2, [r1, #8]
 800f03c:	4680      	mov	r8, r0
 800f03e:	460c      	mov	r4, r1
 800f040:	b932      	cbnz	r2, 800f050 <_scanf_chars+0x1c>
 800f042:	698a      	ldr	r2, [r1, #24]
 800f044:	2a00      	cmp	r2, #0
 800f046:	bf0c      	ite	eq
 800f048:	2201      	moveq	r2, #1
 800f04a:	f04f 32ff 	movne.w	r2, #4294967295
 800f04e:	608a      	str	r2, [r1, #8]
 800f050:	2700      	movs	r7, #0
 800f052:	6822      	ldr	r2, [r4, #0]
 800f054:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f0e4 <_scanf_chars+0xb0>
 800f058:	06d1      	lsls	r1, r2, #27
 800f05a:	bf5f      	itttt	pl
 800f05c:	681a      	ldrpl	r2, [r3, #0]
 800f05e:	1d11      	addpl	r1, r2, #4
 800f060:	6019      	strpl	r1, [r3, #0]
 800f062:	6816      	ldrpl	r6, [r2, #0]
 800f064:	69a0      	ldr	r0, [r4, #24]
 800f066:	b188      	cbz	r0, 800f08c <_scanf_chars+0x58>
 800f068:	2801      	cmp	r0, #1
 800f06a:	d107      	bne.n	800f07c <_scanf_chars+0x48>
 800f06c:	682b      	ldr	r3, [r5, #0]
 800f06e:	781a      	ldrb	r2, [r3, #0]
 800f070:	6963      	ldr	r3, [r4, #20]
 800f072:	5c9b      	ldrb	r3, [r3, r2]
 800f074:	b953      	cbnz	r3, 800f08c <_scanf_chars+0x58>
 800f076:	2f00      	cmp	r7, #0
 800f078:	d031      	beq.n	800f0de <_scanf_chars+0xaa>
 800f07a:	e022      	b.n	800f0c2 <_scanf_chars+0x8e>
 800f07c:	2802      	cmp	r0, #2
 800f07e:	d120      	bne.n	800f0c2 <_scanf_chars+0x8e>
 800f080:	682b      	ldr	r3, [r5, #0]
 800f082:	781b      	ldrb	r3, [r3, #0]
 800f084:	f813 3009 	ldrb.w	r3, [r3, r9]
 800f088:	071b      	lsls	r3, r3, #28
 800f08a:	d41a      	bmi.n	800f0c2 <_scanf_chars+0x8e>
 800f08c:	6823      	ldr	r3, [r4, #0]
 800f08e:	3701      	adds	r7, #1
 800f090:	06da      	lsls	r2, r3, #27
 800f092:	bf5e      	ittt	pl
 800f094:	682b      	ldrpl	r3, [r5, #0]
 800f096:	781b      	ldrbpl	r3, [r3, #0]
 800f098:	f806 3b01 	strbpl.w	r3, [r6], #1
 800f09c:	682a      	ldr	r2, [r5, #0]
 800f09e:	686b      	ldr	r3, [r5, #4]
 800f0a0:	3201      	adds	r2, #1
 800f0a2:	602a      	str	r2, [r5, #0]
 800f0a4:	68a2      	ldr	r2, [r4, #8]
 800f0a6:	3b01      	subs	r3, #1
 800f0a8:	3a01      	subs	r2, #1
 800f0aa:	606b      	str	r3, [r5, #4]
 800f0ac:	60a2      	str	r2, [r4, #8]
 800f0ae:	b142      	cbz	r2, 800f0c2 <_scanf_chars+0x8e>
 800f0b0:	2b00      	cmp	r3, #0
 800f0b2:	dcd7      	bgt.n	800f064 <_scanf_chars+0x30>
 800f0b4:	4629      	mov	r1, r5
 800f0b6:	4640      	mov	r0, r8
 800f0b8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800f0bc:	4798      	blx	r3
 800f0be:	2800      	cmp	r0, #0
 800f0c0:	d0d0      	beq.n	800f064 <_scanf_chars+0x30>
 800f0c2:	6823      	ldr	r3, [r4, #0]
 800f0c4:	f013 0310 	ands.w	r3, r3, #16
 800f0c8:	d105      	bne.n	800f0d6 <_scanf_chars+0xa2>
 800f0ca:	68e2      	ldr	r2, [r4, #12]
 800f0cc:	3201      	adds	r2, #1
 800f0ce:	60e2      	str	r2, [r4, #12]
 800f0d0:	69a2      	ldr	r2, [r4, #24]
 800f0d2:	b102      	cbz	r2, 800f0d6 <_scanf_chars+0xa2>
 800f0d4:	7033      	strb	r3, [r6, #0]
 800f0d6:	2000      	movs	r0, #0
 800f0d8:	6923      	ldr	r3, [r4, #16]
 800f0da:	443b      	add	r3, r7
 800f0dc:	6123      	str	r3, [r4, #16]
 800f0de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f0e2:	bf00      	nop
 800f0e4:	08010dc9 	.word	0x08010dc9

0800f0e8 <_scanf_i>:
 800f0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0ec:	460c      	mov	r4, r1
 800f0ee:	4698      	mov	r8, r3
 800f0f0:	4b75      	ldr	r3, [pc, #468]	; (800f2c8 <_scanf_i+0x1e0>)
 800f0f2:	b087      	sub	sp, #28
 800f0f4:	4682      	mov	sl, r0
 800f0f6:	4616      	mov	r6, r2
 800f0f8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800f0fc:	ab03      	add	r3, sp, #12
 800f0fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f102:	4b72      	ldr	r3, [pc, #456]	; (800f2cc <_scanf_i+0x1e4>)
 800f104:	69a1      	ldr	r1, [r4, #24]
 800f106:	4a72      	ldr	r2, [pc, #456]	; (800f2d0 <_scanf_i+0x1e8>)
 800f108:	4627      	mov	r7, r4
 800f10a:	2903      	cmp	r1, #3
 800f10c:	bf18      	it	ne
 800f10e:	461a      	movne	r2, r3
 800f110:	68a3      	ldr	r3, [r4, #8]
 800f112:	9201      	str	r2, [sp, #4]
 800f114:	1e5a      	subs	r2, r3, #1
 800f116:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800f11a:	bf81      	itttt	hi
 800f11c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800f120:	eb03 0905 	addhi.w	r9, r3, r5
 800f124:	f240 135d 	movwhi	r3, #349	; 0x15d
 800f128:	60a3      	strhi	r3, [r4, #8]
 800f12a:	f857 3b1c 	ldr.w	r3, [r7], #28
 800f12e:	bf98      	it	ls
 800f130:	f04f 0900 	movls.w	r9, #0
 800f134:	463d      	mov	r5, r7
 800f136:	f04f 0b00 	mov.w	fp, #0
 800f13a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800f13e:	6023      	str	r3, [r4, #0]
 800f140:	6831      	ldr	r1, [r6, #0]
 800f142:	ab03      	add	r3, sp, #12
 800f144:	2202      	movs	r2, #2
 800f146:	7809      	ldrb	r1, [r1, #0]
 800f148:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800f14c:	f7fe fe8c 	bl	800de68 <memchr>
 800f150:	b328      	cbz	r0, 800f19e <_scanf_i+0xb6>
 800f152:	f1bb 0f01 	cmp.w	fp, #1
 800f156:	d159      	bne.n	800f20c <_scanf_i+0x124>
 800f158:	6862      	ldr	r2, [r4, #4]
 800f15a:	b92a      	cbnz	r2, 800f168 <_scanf_i+0x80>
 800f15c:	2308      	movs	r3, #8
 800f15e:	6822      	ldr	r2, [r4, #0]
 800f160:	6063      	str	r3, [r4, #4]
 800f162:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800f166:	6022      	str	r2, [r4, #0]
 800f168:	6822      	ldr	r2, [r4, #0]
 800f16a:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800f16e:	6022      	str	r2, [r4, #0]
 800f170:	68a2      	ldr	r2, [r4, #8]
 800f172:	1e51      	subs	r1, r2, #1
 800f174:	60a1      	str	r1, [r4, #8]
 800f176:	b192      	cbz	r2, 800f19e <_scanf_i+0xb6>
 800f178:	6832      	ldr	r2, [r6, #0]
 800f17a:	1c51      	adds	r1, r2, #1
 800f17c:	6031      	str	r1, [r6, #0]
 800f17e:	7812      	ldrb	r2, [r2, #0]
 800f180:	f805 2b01 	strb.w	r2, [r5], #1
 800f184:	6872      	ldr	r2, [r6, #4]
 800f186:	3a01      	subs	r2, #1
 800f188:	2a00      	cmp	r2, #0
 800f18a:	6072      	str	r2, [r6, #4]
 800f18c:	dc07      	bgt.n	800f19e <_scanf_i+0xb6>
 800f18e:	4631      	mov	r1, r6
 800f190:	4650      	mov	r0, sl
 800f192:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800f196:	4790      	blx	r2
 800f198:	2800      	cmp	r0, #0
 800f19a:	f040 8085 	bne.w	800f2a8 <_scanf_i+0x1c0>
 800f19e:	f10b 0b01 	add.w	fp, fp, #1
 800f1a2:	f1bb 0f03 	cmp.w	fp, #3
 800f1a6:	d1cb      	bne.n	800f140 <_scanf_i+0x58>
 800f1a8:	6863      	ldr	r3, [r4, #4]
 800f1aa:	b90b      	cbnz	r3, 800f1b0 <_scanf_i+0xc8>
 800f1ac:	230a      	movs	r3, #10
 800f1ae:	6063      	str	r3, [r4, #4]
 800f1b0:	6863      	ldr	r3, [r4, #4]
 800f1b2:	4948      	ldr	r1, [pc, #288]	; (800f2d4 <_scanf_i+0x1ec>)
 800f1b4:	6960      	ldr	r0, [r4, #20]
 800f1b6:	1ac9      	subs	r1, r1, r3
 800f1b8:	f000 f8b6 	bl	800f328 <__sccl>
 800f1bc:	f04f 0b00 	mov.w	fp, #0
 800f1c0:	68a3      	ldr	r3, [r4, #8]
 800f1c2:	6822      	ldr	r2, [r4, #0]
 800f1c4:	2b00      	cmp	r3, #0
 800f1c6:	d03d      	beq.n	800f244 <_scanf_i+0x15c>
 800f1c8:	6831      	ldr	r1, [r6, #0]
 800f1ca:	6960      	ldr	r0, [r4, #20]
 800f1cc:	f891 c000 	ldrb.w	ip, [r1]
 800f1d0:	f810 000c 	ldrb.w	r0, [r0, ip]
 800f1d4:	2800      	cmp	r0, #0
 800f1d6:	d035      	beq.n	800f244 <_scanf_i+0x15c>
 800f1d8:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800f1dc:	d124      	bne.n	800f228 <_scanf_i+0x140>
 800f1de:	0510      	lsls	r0, r2, #20
 800f1e0:	d522      	bpl.n	800f228 <_scanf_i+0x140>
 800f1e2:	f10b 0b01 	add.w	fp, fp, #1
 800f1e6:	f1b9 0f00 	cmp.w	r9, #0
 800f1ea:	d003      	beq.n	800f1f4 <_scanf_i+0x10c>
 800f1ec:	3301      	adds	r3, #1
 800f1ee:	f109 39ff 	add.w	r9, r9, #4294967295
 800f1f2:	60a3      	str	r3, [r4, #8]
 800f1f4:	6873      	ldr	r3, [r6, #4]
 800f1f6:	3b01      	subs	r3, #1
 800f1f8:	2b00      	cmp	r3, #0
 800f1fa:	6073      	str	r3, [r6, #4]
 800f1fc:	dd1b      	ble.n	800f236 <_scanf_i+0x14e>
 800f1fe:	6833      	ldr	r3, [r6, #0]
 800f200:	3301      	adds	r3, #1
 800f202:	6033      	str	r3, [r6, #0]
 800f204:	68a3      	ldr	r3, [r4, #8]
 800f206:	3b01      	subs	r3, #1
 800f208:	60a3      	str	r3, [r4, #8]
 800f20a:	e7d9      	b.n	800f1c0 <_scanf_i+0xd8>
 800f20c:	f1bb 0f02 	cmp.w	fp, #2
 800f210:	d1ae      	bne.n	800f170 <_scanf_i+0x88>
 800f212:	6822      	ldr	r2, [r4, #0]
 800f214:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800f218:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800f21c:	d1bf      	bne.n	800f19e <_scanf_i+0xb6>
 800f21e:	2310      	movs	r3, #16
 800f220:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800f224:	6063      	str	r3, [r4, #4]
 800f226:	e7a2      	b.n	800f16e <_scanf_i+0x86>
 800f228:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800f22c:	6022      	str	r2, [r4, #0]
 800f22e:	780b      	ldrb	r3, [r1, #0]
 800f230:	f805 3b01 	strb.w	r3, [r5], #1
 800f234:	e7de      	b.n	800f1f4 <_scanf_i+0x10c>
 800f236:	4631      	mov	r1, r6
 800f238:	4650      	mov	r0, sl
 800f23a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800f23e:	4798      	blx	r3
 800f240:	2800      	cmp	r0, #0
 800f242:	d0df      	beq.n	800f204 <_scanf_i+0x11c>
 800f244:	6823      	ldr	r3, [r4, #0]
 800f246:	05db      	lsls	r3, r3, #23
 800f248:	d50d      	bpl.n	800f266 <_scanf_i+0x17e>
 800f24a:	42bd      	cmp	r5, r7
 800f24c:	d909      	bls.n	800f262 <_scanf_i+0x17a>
 800f24e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800f252:	4632      	mov	r2, r6
 800f254:	4650      	mov	r0, sl
 800f256:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800f25a:	f105 39ff 	add.w	r9, r5, #4294967295
 800f25e:	4798      	blx	r3
 800f260:	464d      	mov	r5, r9
 800f262:	42bd      	cmp	r5, r7
 800f264:	d02d      	beq.n	800f2c2 <_scanf_i+0x1da>
 800f266:	6822      	ldr	r2, [r4, #0]
 800f268:	f012 0210 	ands.w	r2, r2, #16
 800f26c:	d113      	bne.n	800f296 <_scanf_i+0x1ae>
 800f26e:	702a      	strb	r2, [r5, #0]
 800f270:	4639      	mov	r1, r7
 800f272:	6863      	ldr	r3, [r4, #4]
 800f274:	4650      	mov	r0, sl
 800f276:	9e01      	ldr	r6, [sp, #4]
 800f278:	47b0      	blx	r6
 800f27a:	6821      	ldr	r1, [r4, #0]
 800f27c:	f8d8 3000 	ldr.w	r3, [r8]
 800f280:	f011 0f20 	tst.w	r1, #32
 800f284:	d013      	beq.n	800f2ae <_scanf_i+0x1c6>
 800f286:	1d1a      	adds	r2, r3, #4
 800f288:	f8c8 2000 	str.w	r2, [r8]
 800f28c:	681b      	ldr	r3, [r3, #0]
 800f28e:	6018      	str	r0, [r3, #0]
 800f290:	68e3      	ldr	r3, [r4, #12]
 800f292:	3301      	adds	r3, #1
 800f294:	60e3      	str	r3, [r4, #12]
 800f296:	2000      	movs	r0, #0
 800f298:	1bed      	subs	r5, r5, r7
 800f29a:	44ab      	add	fp, r5
 800f29c:	6925      	ldr	r5, [r4, #16]
 800f29e:	445d      	add	r5, fp
 800f2a0:	6125      	str	r5, [r4, #16]
 800f2a2:	b007      	add	sp, #28
 800f2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2a8:	f04f 0b00 	mov.w	fp, #0
 800f2ac:	e7ca      	b.n	800f244 <_scanf_i+0x15c>
 800f2ae:	1d1a      	adds	r2, r3, #4
 800f2b0:	f8c8 2000 	str.w	r2, [r8]
 800f2b4:	681b      	ldr	r3, [r3, #0]
 800f2b6:	f011 0f01 	tst.w	r1, #1
 800f2ba:	bf14      	ite	ne
 800f2bc:	8018      	strhne	r0, [r3, #0]
 800f2be:	6018      	streq	r0, [r3, #0]
 800f2c0:	e7e6      	b.n	800f290 <_scanf_i+0x1a8>
 800f2c2:	2001      	movs	r0, #1
 800f2c4:	e7ed      	b.n	800f2a2 <_scanf_i+0x1ba>
 800f2c6:	bf00      	nop
 800f2c8:	0801039c 	.word	0x0801039c
 800f2cc:	0800f4a5 	.word	0x0800f4a5
 800f2d0:	0800c9fd 	.word	0x0800c9fd
 800f2d4:	08011156 	.word	0x08011156

0800f2d8 <_read_r>:
 800f2d8:	b538      	push	{r3, r4, r5, lr}
 800f2da:	4604      	mov	r4, r0
 800f2dc:	4608      	mov	r0, r1
 800f2de:	4611      	mov	r1, r2
 800f2e0:	2200      	movs	r2, #0
 800f2e2:	4d05      	ldr	r5, [pc, #20]	; (800f2f8 <_read_r+0x20>)
 800f2e4:	602a      	str	r2, [r5, #0]
 800f2e6:	461a      	mov	r2, r3
 800f2e8:	f7f6 f811 	bl	800530e <_read>
 800f2ec:	1c43      	adds	r3, r0, #1
 800f2ee:	d102      	bne.n	800f2f6 <_read_r+0x1e>
 800f2f0:	682b      	ldr	r3, [r5, #0]
 800f2f2:	b103      	cbz	r3, 800f2f6 <_read_r+0x1e>
 800f2f4:	6023      	str	r3, [r4, #0]
 800f2f6:	bd38      	pop	{r3, r4, r5, pc}
 800f2f8:	200014ec 	.word	0x200014ec

0800f2fc <nan>:
 800f2fc:	2000      	movs	r0, #0
 800f2fe:	4901      	ldr	r1, [pc, #4]	; (800f304 <nan+0x8>)
 800f300:	4770      	bx	lr
 800f302:	bf00      	nop
 800f304:	7ff80000 	.word	0x7ff80000

0800f308 <_sbrk_r>:
 800f308:	b538      	push	{r3, r4, r5, lr}
 800f30a:	2300      	movs	r3, #0
 800f30c:	4d05      	ldr	r5, [pc, #20]	; (800f324 <_sbrk_r+0x1c>)
 800f30e:	4604      	mov	r4, r0
 800f310:	4608      	mov	r0, r1
 800f312:	602b      	str	r3, [r5, #0]
 800f314:	f7f6 f864 	bl	80053e0 <_sbrk>
 800f318:	1c43      	adds	r3, r0, #1
 800f31a:	d102      	bne.n	800f322 <_sbrk_r+0x1a>
 800f31c:	682b      	ldr	r3, [r5, #0]
 800f31e:	b103      	cbz	r3, 800f322 <_sbrk_r+0x1a>
 800f320:	6023      	str	r3, [r4, #0]
 800f322:	bd38      	pop	{r3, r4, r5, pc}
 800f324:	200014ec 	.word	0x200014ec

0800f328 <__sccl>:
 800f328:	b570      	push	{r4, r5, r6, lr}
 800f32a:	780b      	ldrb	r3, [r1, #0]
 800f32c:	4604      	mov	r4, r0
 800f32e:	2b5e      	cmp	r3, #94	; 0x5e
 800f330:	bf13      	iteet	ne
 800f332:	2200      	movne	r2, #0
 800f334:	2201      	moveq	r2, #1
 800f336:	784b      	ldrbeq	r3, [r1, #1]
 800f338:	1c48      	addne	r0, r1, #1
 800f33a:	bf08      	it	eq
 800f33c:	1c88      	addeq	r0, r1, #2
 800f33e:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800f342:	1e61      	subs	r1, r4, #1
 800f344:	f801 2f01 	strb.w	r2, [r1, #1]!
 800f348:	42a9      	cmp	r1, r5
 800f34a:	d1fb      	bne.n	800f344 <__sccl+0x1c>
 800f34c:	b90b      	cbnz	r3, 800f352 <__sccl+0x2a>
 800f34e:	3801      	subs	r0, #1
 800f350:	bd70      	pop	{r4, r5, r6, pc}
 800f352:	f082 0201 	eor.w	r2, r2, #1
 800f356:	4605      	mov	r5, r0
 800f358:	54e2      	strb	r2, [r4, r3]
 800f35a:	4628      	mov	r0, r5
 800f35c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800f360:	292d      	cmp	r1, #45	; 0x2d
 800f362:	d006      	beq.n	800f372 <__sccl+0x4a>
 800f364:	295d      	cmp	r1, #93	; 0x5d
 800f366:	d0f3      	beq.n	800f350 <__sccl+0x28>
 800f368:	b909      	cbnz	r1, 800f36e <__sccl+0x46>
 800f36a:	4628      	mov	r0, r5
 800f36c:	e7f0      	b.n	800f350 <__sccl+0x28>
 800f36e:	460b      	mov	r3, r1
 800f370:	e7f1      	b.n	800f356 <__sccl+0x2e>
 800f372:	786e      	ldrb	r6, [r5, #1]
 800f374:	2e5d      	cmp	r6, #93	; 0x5d
 800f376:	d0fa      	beq.n	800f36e <__sccl+0x46>
 800f378:	42b3      	cmp	r3, r6
 800f37a:	dcf8      	bgt.n	800f36e <__sccl+0x46>
 800f37c:	4619      	mov	r1, r3
 800f37e:	3502      	adds	r5, #2
 800f380:	3101      	adds	r1, #1
 800f382:	428e      	cmp	r6, r1
 800f384:	5462      	strb	r2, [r4, r1]
 800f386:	dcfb      	bgt.n	800f380 <__sccl+0x58>
 800f388:	1af1      	subs	r1, r6, r3
 800f38a:	3901      	subs	r1, #1
 800f38c:	42b3      	cmp	r3, r6
 800f38e:	bfa8      	it	ge
 800f390:	2100      	movge	r1, #0
 800f392:	1c58      	adds	r0, r3, #1
 800f394:	1843      	adds	r3, r0, r1
 800f396:	e7e0      	b.n	800f35a <__sccl+0x32>

0800f398 <strncmp>:
 800f398:	4603      	mov	r3, r0
 800f39a:	b510      	push	{r4, lr}
 800f39c:	b172      	cbz	r2, 800f3bc <strncmp+0x24>
 800f39e:	3901      	subs	r1, #1
 800f3a0:	1884      	adds	r4, r0, r2
 800f3a2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800f3a6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f3aa:	4290      	cmp	r0, r2
 800f3ac:	d101      	bne.n	800f3b2 <strncmp+0x1a>
 800f3ae:	42a3      	cmp	r3, r4
 800f3b0:	d101      	bne.n	800f3b6 <strncmp+0x1e>
 800f3b2:	1a80      	subs	r0, r0, r2
 800f3b4:	bd10      	pop	{r4, pc}
 800f3b6:	2800      	cmp	r0, #0
 800f3b8:	d1f3      	bne.n	800f3a2 <strncmp+0xa>
 800f3ba:	e7fa      	b.n	800f3b2 <strncmp+0x1a>
 800f3bc:	4610      	mov	r0, r2
 800f3be:	e7f9      	b.n	800f3b4 <strncmp+0x1c>

0800f3c0 <_strtoul_l.constprop.0>:
 800f3c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3c4:	4686      	mov	lr, r0
 800f3c6:	460d      	mov	r5, r1
 800f3c8:	4f35      	ldr	r7, [pc, #212]	; (800f4a0 <_strtoul_l.constprop.0+0xe0>)
 800f3ca:	4628      	mov	r0, r5
 800f3cc:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f3d0:	5de6      	ldrb	r6, [r4, r7]
 800f3d2:	f016 0608 	ands.w	r6, r6, #8
 800f3d6:	d1f8      	bne.n	800f3ca <_strtoul_l.constprop.0+0xa>
 800f3d8:	2c2d      	cmp	r4, #45	; 0x2d
 800f3da:	d12f      	bne.n	800f43c <_strtoul_l.constprop.0+0x7c>
 800f3dc:	2601      	movs	r6, #1
 800f3de:	782c      	ldrb	r4, [r5, #0]
 800f3e0:	1c85      	adds	r5, r0, #2
 800f3e2:	2b00      	cmp	r3, #0
 800f3e4:	d057      	beq.n	800f496 <_strtoul_l.constprop.0+0xd6>
 800f3e6:	2b10      	cmp	r3, #16
 800f3e8:	d109      	bne.n	800f3fe <_strtoul_l.constprop.0+0x3e>
 800f3ea:	2c30      	cmp	r4, #48	; 0x30
 800f3ec:	d107      	bne.n	800f3fe <_strtoul_l.constprop.0+0x3e>
 800f3ee:	7828      	ldrb	r0, [r5, #0]
 800f3f0:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800f3f4:	2858      	cmp	r0, #88	; 0x58
 800f3f6:	d149      	bne.n	800f48c <_strtoul_l.constprop.0+0xcc>
 800f3f8:	2310      	movs	r3, #16
 800f3fa:	786c      	ldrb	r4, [r5, #1]
 800f3fc:	3502      	adds	r5, #2
 800f3fe:	f04f 38ff 	mov.w	r8, #4294967295
 800f402:	fbb8 f8f3 	udiv	r8, r8, r3
 800f406:	2700      	movs	r7, #0
 800f408:	fb03 f908 	mul.w	r9, r3, r8
 800f40c:	4638      	mov	r0, r7
 800f40e:	ea6f 0909 	mvn.w	r9, r9
 800f412:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f416:	f1bc 0f09 	cmp.w	ip, #9
 800f41a:	d814      	bhi.n	800f446 <_strtoul_l.constprop.0+0x86>
 800f41c:	4664      	mov	r4, ip
 800f41e:	42a3      	cmp	r3, r4
 800f420:	dd22      	ble.n	800f468 <_strtoul_l.constprop.0+0xa8>
 800f422:	2f00      	cmp	r7, #0
 800f424:	db1d      	blt.n	800f462 <_strtoul_l.constprop.0+0xa2>
 800f426:	4580      	cmp	r8, r0
 800f428:	d31b      	bcc.n	800f462 <_strtoul_l.constprop.0+0xa2>
 800f42a:	d101      	bne.n	800f430 <_strtoul_l.constprop.0+0x70>
 800f42c:	45a1      	cmp	r9, r4
 800f42e:	db18      	blt.n	800f462 <_strtoul_l.constprop.0+0xa2>
 800f430:	2701      	movs	r7, #1
 800f432:	fb00 4003 	mla	r0, r0, r3, r4
 800f436:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f43a:	e7ea      	b.n	800f412 <_strtoul_l.constprop.0+0x52>
 800f43c:	2c2b      	cmp	r4, #43	; 0x2b
 800f43e:	bf04      	itt	eq
 800f440:	782c      	ldrbeq	r4, [r5, #0]
 800f442:	1c85      	addeq	r5, r0, #2
 800f444:	e7cd      	b.n	800f3e2 <_strtoul_l.constprop.0+0x22>
 800f446:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800f44a:	f1bc 0f19 	cmp.w	ip, #25
 800f44e:	d801      	bhi.n	800f454 <_strtoul_l.constprop.0+0x94>
 800f450:	3c37      	subs	r4, #55	; 0x37
 800f452:	e7e4      	b.n	800f41e <_strtoul_l.constprop.0+0x5e>
 800f454:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800f458:	f1bc 0f19 	cmp.w	ip, #25
 800f45c:	d804      	bhi.n	800f468 <_strtoul_l.constprop.0+0xa8>
 800f45e:	3c57      	subs	r4, #87	; 0x57
 800f460:	e7dd      	b.n	800f41e <_strtoul_l.constprop.0+0x5e>
 800f462:	f04f 37ff 	mov.w	r7, #4294967295
 800f466:	e7e6      	b.n	800f436 <_strtoul_l.constprop.0+0x76>
 800f468:	2f00      	cmp	r7, #0
 800f46a:	da07      	bge.n	800f47c <_strtoul_l.constprop.0+0xbc>
 800f46c:	2322      	movs	r3, #34	; 0x22
 800f46e:	f04f 30ff 	mov.w	r0, #4294967295
 800f472:	f8ce 3000 	str.w	r3, [lr]
 800f476:	b932      	cbnz	r2, 800f486 <_strtoul_l.constprop.0+0xc6>
 800f478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f47c:	b106      	cbz	r6, 800f480 <_strtoul_l.constprop.0+0xc0>
 800f47e:	4240      	negs	r0, r0
 800f480:	2a00      	cmp	r2, #0
 800f482:	d0f9      	beq.n	800f478 <_strtoul_l.constprop.0+0xb8>
 800f484:	b107      	cbz	r7, 800f488 <_strtoul_l.constprop.0+0xc8>
 800f486:	1e69      	subs	r1, r5, #1
 800f488:	6011      	str	r1, [r2, #0]
 800f48a:	e7f5      	b.n	800f478 <_strtoul_l.constprop.0+0xb8>
 800f48c:	2430      	movs	r4, #48	; 0x30
 800f48e:	2b00      	cmp	r3, #0
 800f490:	d1b5      	bne.n	800f3fe <_strtoul_l.constprop.0+0x3e>
 800f492:	2308      	movs	r3, #8
 800f494:	e7b3      	b.n	800f3fe <_strtoul_l.constprop.0+0x3e>
 800f496:	2c30      	cmp	r4, #48	; 0x30
 800f498:	d0a9      	beq.n	800f3ee <_strtoul_l.constprop.0+0x2e>
 800f49a:	230a      	movs	r3, #10
 800f49c:	e7af      	b.n	800f3fe <_strtoul_l.constprop.0+0x3e>
 800f49e:	bf00      	nop
 800f4a0:	08010dc9 	.word	0x08010dc9

0800f4a4 <_strtoul_r>:
 800f4a4:	f7ff bf8c 	b.w	800f3c0 <_strtoul_l.constprop.0>

0800f4a8 <__submore>:
 800f4a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4ac:	460c      	mov	r4, r1
 800f4ae:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800f4b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f4b4:	4299      	cmp	r1, r3
 800f4b6:	d11b      	bne.n	800f4f0 <__submore+0x48>
 800f4b8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800f4bc:	f7ff fa16 	bl	800e8ec <_malloc_r>
 800f4c0:	b918      	cbnz	r0, 800f4ca <__submore+0x22>
 800f4c2:	f04f 30ff 	mov.w	r0, #4294967295
 800f4c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f4ce:	63a3      	str	r3, [r4, #56]	; 0x38
 800f4d0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800f4d4:	6360      	str	r0, [r4, #52]	; 0x34
 800f4d6:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800f4da:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f4de:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800f4e2:	7043      	strb	r3, [r0, #1]
 800f4e4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f4e8:	7003      	strb	r3, [r0, #0]
 800f4ea:	6020      	str	r0, [r4, #0]
 800f4ec:	2000      	movs	r0, #0
 800f4ee:	e7ea      	b.n	800f4c6 <__submore+0x1e>
 800f4f0:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800f4f2:	0077      	lsls	r7, r6, #1
 800f4f4:	463a      	mov	r2, r7
 800f4f6:	f000 fa29 	bl	800f94c <_realloc_r>
 800f4fa:	4605      	mov	r5, r0
 800f4fc:	2800      	cmp	r0, #0
 800f4fe:	d0e0      	beq.n	800f4c2 <__submore+0x1a>
 800f500:	eb00 0806 	add.w	r8, r0, r6
 800f504:	4601      	mov	r1, r0
 800f506:	4632      	mov	r2, r6
 800f508:	4640      	mov	r0, r8
 800f50a:	f7fb fcd3 	bl	800aeb4 <memcpy>
 800f50e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800f512:	f8c4 8000 	str.w	r8, [r4]
 800f516:	e7e9      	b.n	800f4ec <__submore+0x44>

0800f518 <__ascii_wctomb>:
 800f518:	4603      	mov	r3, r0
 800f51a:	4608      	mov	r0, r1
 800f51c:	b141      	cbz	r1, 800f530 <__ascii_wctomb+0x18>
 800f51e:	2aff      	cmp	r2, #255	; 0xff
 800f520:	d904      	bls.n	800f52c <__ascii_wctomb+0x14>
 800f522:	228a      	movs	r2, #138	; 0x8a
 800f524:	f04f 30ff 	mov.w	r0, #4294967295
 800f528:	601a      	str	r2, [r3, #0]
 800f52a:	4770      	bx	lr
 800f52c:	2001      	movs	r0, #1
 800f52e:	700a      	strb	r2, [r1, #0]
 800f530:	4770      	bx	lr
	...

0800f534 <__assert_func>:
 800f534:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f536:	4614      	mov	r4, r2
 800f538:	461a      	mov	r2, r3
 800f53a:	4b09      	ldr	r3, [pc, #36]	; (800f560 <__assert_func+0x2c>)
 800f53c:	4605      	mov	r5, r0
 800f53e:	681b      	ldr	r3, [r3, #0]
 800f540:	68d8      	ldr	r0, [r3, #12]
 800f542:	b14c      	cbz	r4, 800f558 <__assert_func+0x24>
 800f544:	4b07      	ldr	r3, [pc, #28]	; (800f564 <__assert_func+0x30>)
 800f546:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f54a:	9100      	str	r1, [sp, #0]
 800f54c:	462b      	mov	r3, r5
 800f54e:	4906      	ldr	r1, [pc, #24]	; (800f568 <__assert_func+0x34>)
 800f550:	f000 f9a2 	bl	800f898 <fiprintf>
 800f554:	f000 fc40 	bl	800fdd8 <abort>
 800f558:	4b04      	ldr	r3, [pc, #16]	; (800f56c <__assert_func+0x38>)
 800f55a:	461c      	mov	r4, r3
 800f55c:	e7f3      	b.n	800f546 <__assert_func+0x12>
 800f55e:	bf00      	nop
 800f560:	200001a4 	.word	0x200001a4
 800f564:	08011158 	.word	0x08011158
 800f568:	08011165 	.word	0x08011165
 800f56c:	08011193 	.word	0x08011193

0800f570 <__sflush_r>:
 800f570:	898a      	ldrh	r2, [r1, #12]
 800f572:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f574:	4605      	mov	r5, r0
 800f576:	0710      	lsls	r0, r2, #28
 800f578:	460c      	mov	r4, r1
 800f57a:	d457      	bmi.n	800f62c <__sflush_r+0xbc>
 800f57c:	684b      	ldr	r3, [r1, #4]
 800f57e:	2b00      	cmp	r3, #0
 800f580:	dc04      	bgt.n	800f58c <__sflush_r+0x1c>
 800f582:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f584:	2b00      	cmp	r3, #0
 800f586:	dc01      	bgt.n	800f58c <__sflush_r+0x1c>
 800f588:	2000      	movs	r0, #0
 800f58a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f58c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f58e:	2e00      	cmp	r6, #0
 800f590:	d0fa      	beq.n	800f588 <__sflush_r+0x18>
 800f592:	2300      	movs	r3, #0
 800f594:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f598:	682f      	ldr	r7, [r5, #0]
 800f59a:	602b      	str	r3, [r5, #0]
 800f59c:	d032      	beq.n	800f604 <__sflush_r+0x94>
 800f59e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f5a0:	89a3      	ldrh	r3, [r4, #12]
 800f5a2:	075a      	lsls	r2, r3, #29
 800f5a4:	d505      	bpl.n	800f5b2 <__sflush_r+0x42>
 800f5a6:	6863      	ldr	r3, [r4, #4]
 800f5a8:	1ac0      	subs	r0, r0, r3
 800f5aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f5ac:	b10b      	cbz	r3, 800f5b2 <__sflush_r+0x42>
 800f5ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f5b0:	1ac0      	subs	r0, r0, r3
 800f5b2:	2300      	movs	r3, #0
 800f5b4:	4602      	mov	r2, r0
 800f5b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f5b8:	4628      	mov	r0, r5
 800f5ba:	6a21      	ldr	r1, [r4, #32]
 800f5bc:	47b0      	blx	r6
 800f5be:	1c43      	adds	r3, r0, #1
 800f5c0:	89a3      	ldrh	r3, [r4, #12]
 800f5c2:	d106      	bne.n	800f5d2 <__sflush_r+0x62>
 800f5c4:	6829      	ldr	r1, [r5, #0]
 800f5c6:	291d      	cmp	r1, #29
 800f5c8:	d82c      	bhi.n	800f624 <__sflush_r+0xb4>
 800f5ca:	4a29      	ldr	r2, [pc, #164]	; (800f670 <__sflush_r+0x100>)
 800f5cc:	40ca      	lsrs	r2, r1
 800f5ce:	07d6      	lsls	r6, r2, #31
 800f5d0:	d528      	bpl.n	800f624 <__sflush_r+0xb4>
 800f5d2:	2200      	movs	r2, #0
 800f5d4:	6062      	str	r2, [r4, #4]
 800f5d6:	6922      	ldr	r2, [r4, #16]
 800f5d8:	04d9      	lsls	r1, r3, #19
 800f5da:	6022      	str	r2, [r4, #0]
 800f5dc:	d504      	bpl.n	800f5e8 <__sflush_r+0x78>
 800f5de:	1c42      	adds	r2, r0, #1
 800f5e0:	d101      	bne.n	800f5e6 <__sflush_r+0x76>
 800f5e2:	682b      	ldr	r3, [r5, #0]
 800f5e4:	b903      	cbnz	r3, 800f5e8 <__sflush_r+0x78>
 800f5e6:	6560      	str	r0, [r4, #84]	; 0x54
 800f5e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f5ea:	602f      	str	r7, [r5, #0]
 800f5ec:	2900      	cmp	r1, #0
 800f5ee:	d0cb      	beq.n	800f588 <__sflush_r+0x18>
 800f5f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f5f4:	4299      	cmp	r1, r3
 800f5f6:	d002      	beq.n	800f5fe <__sflush_r+0x8e>
 800f5f8:	4628      	mov	r0, r5
 800f5fa:	f7ff f90f 	bl	800e81c <_free_r>
 800f5fe:	2000      	movs	r0, #0
 800f600:	6360      	str	r0, [r4, #52]	; 0x34
 800f602:	e7c2      	b.n	800f58a <__sflush_r+0x1a>
 800f604:	6a21      	ldr	r1, [r4, #32]
 800f606:	2301      	movs	r3, #1
 800f608:	4628      	mov	r0, r5
 800f60a:	47b0      	blx	r6
 800f60c:	1c41      	adds	r1, r0, #1
 800f60e:	d1c7      	bne.n	800f5a0 <__sflush_r+0x30>
 800f610:	682b      	ldr	r3, [r5, #0]
 800f612:	2b00      	cmp	r3, #0
 800f614:	d0c4      	beq.n	800f5a0 <__sflush_r+0x30>
 800f616:	2b1d      	cmp	r3, #29
 800f618:	d001      	beq.n	800f61e <__sflush_r+0xae>
 800f61a:	2b16      	cmp	r3, #22
 800f61c:	d101      	bne.n	800f622 <__sflush_r+0xb2>
 800f61e:	602f      	str	r7, [r5, #0]
 800f620:	e7b2      	b.n	800f588 <__sflush_r+0x18>
 800f622:	89a3      	ldrh	r3, [r4, #12]
 800f624:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f628:	81a3      	strh	r3, [r4, #12]
 800f62a:	e7ae      	b.n	800f58a <__sflush_r+0x1a>
 800f62c:	690f      	ldr	r7, [r1, #16]
 800f62e:	2f00      	cmp	r7, #0
 800f630:	d0aa      	beq.n	800f588 <__sflush_r+0x18>
 800f632:	0793      	lsls	r3, r2, #30
 800f634:	bf18      	it	ne
 800f636:	2300      	movne	r3, #0
 800f638:	680e      	ldr	r6, [r1, #0]
 800f63a:	bf08      	it	eq
 800f63c:	694b      	ldreq	r3, [r1, #20]
 800f63e:	1bf6      	subs	r6, r6, r7
 800f640:	600f      	str	r7, [r1, #0]
 800f642:	608b      	str	r3, [r1, #8]
 800f644:	2e00      	cmp	r6, #0
 800f646:	dd9f      	ble.n	800f588 <__sflush_r+0x18>
 800f648:	4633      	mov	r3, r6
 800f64a:	463a      	mov	r2, r7
 800f64c:	4628      	mov	r0, r5
 800f64e:	6a21      	ldr	r1, [r4, #32]
 800f650:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800f654:	47e0      	blx	ip
 800f656:	2800      	cmp	r0, #0
 800f658:	dc06      	bgt.n	800f668 <__sflush_r+0xf8>
 800f65a:	89a3      	ldrh	r3, [r4, #12]
 800f65c:	f04f 30ff 	mov.w	r0, #4294967295
 800f660:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f664:	81a3      	strh	r3, [r4, #12]
 800f666:	e790      	b.n	800f58a <__sflush_r+0x1a>
 800f668:	4407      	add	r7, r0
 800f66a:	1a36      	subs	r6, r6, r0
 800f66c:	e7ea      	b.n	800f644 <__sflush_r+0xd4>
 800f66e:	bf00      	nop
 800f670:	20400001 	.word	0x20400001

0800f674 <_fflush_r>:
 800f674:	b538      	push	{r3, r4, r5, lr}
 800f676:	690b      	ldr	r3, [r1, #16]
 800f678:	4605      	mov	r5, r0
 800f67a:	460c      	mov	r4, r1
 800f67c:	b913      	cbnz	r3, 800f684 <_fflush_r+0x10>
 800f67e:	2500      	movs	r5, #0
 800f680:	4628      	mov	r0, r5
 800f682:	bd38      	pop	{r3, r4, r5, pc}
 800f684:	b118      	cbz	r0, 800f68e <_fflush_r+0x1a>
 800f686:	6983      	ldr	r3, [r0, #24]
 800f688:	b90b      	cbnz	r3, 800f68e <_fflush_r+0x1a>
 800f68a:	f000 f887 	bl	800f79c <__sinit>
 800f68e:	4b14      	ldr	r3, [pc, #80]	; (800f6e0 <_fflush_r+0x6c>)
 800f690:	429c      	cmp	r4, r3
 800f692:	d11b      	bne.n	800f6cc <_fflush_r+0x58>
 800f694:	686c      	ldr	r4, [r5, #4]
 800f696:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f69a:	2b00      	cmp	r3, #0
 800f69c:	d0ef      	beq.n	800f67e <_fflush_r+0xa>
 800f69e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f6a0:	07d0      	lsls	r0, r2, #31
 800f6a2:	d404      	bmi.n	800f6ae <_fflush_r+0x3a>
 800f6a4:	0599      	lsls	r1, r3, #22
 800f6a6:	d402      	bmi.n	800f6ae <_fflush_r+0x3a>
 800f6a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f6aa:	f000 f927 	bl	800f8fc <__retarget_lock_acquire_recursive>
 800f6ae:	4628      	mov	r0, r5
 800f6b0:	4621      	mov	r1, r4
 800f6b2:	f7ff ff5d 	bl	800f570 <__sflush_r>
 800f6b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f6b8:	4605      	mov	r5, r0
 800f6ba:	07da      	lsls	r2, r3, #31
 800f6bc:	d4e0      	bmi.n	800f680 <_fflush_r+0xc>
 800f6be:	89a3      	ldrh	r3, [r4, #12]
 800f6c0:	059b      	lsls	r3, r3, #22
 800f6c2:	d4dd      	bmi.n	800f680 <_fflush_r+0xc>
 800f6c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f6c6:	f000 f91a 	bl	800f8fe <__retarget_lock_release_recursive>
 800f6ca:	e7d9      	b.n	800f680 <_fflush_r+0xc>
 800f6cc:	4b05      	ldr	r3, [pc, #20]	; (800f6e4 <_fflush_r+0x70>)
 800f6ce:	429c      	cmp	r4, r3
 800f6d0:	d101      	bne.n	800f6d6 <_fflush_r+0x62>
 800f6d2:	68ac      	ldr	r4, [r5, #8]
 800f6d4:	e7df      	b.n	800f696 <_fflush_r+0x22>
 800f6d6:	4b04      	ldr	r3, [pc, #16]	; (800f6e8 <_fflush_r+0x74>)
 800f6d8:	429c      	cmp	r4, r3
 800f6da:	bf08      	it	eq
 800f6dc:	68ec      	ldreq	r4, [r5, #12]
 800f6de:	e7da      	b.n	800f696 <_fflush_r+0x22>
 800f6e0:	080111b4 	.word	0x080111b4
 800f6e4:	080111d4 	.word	0x080111d4
 800f6e8:	08011194 	.word	0x08011194

0800f6ec <std>:
 800f6ec:	2300      	movs	r3, #0
 800f6ee:	b510      	push	{r4, lr}
 800f6f0:	4604      	mov	r4, r0
 800f6f2:	e9c0 3300 	strd	r3, r3, [r0]
 800f6f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f6fa:	6083      	str	r3, [r0, #8]
 800f6fc:	8181      	strh	r1, [r0, #12]
 800f6fe:	6643      	str	r3, [r0, #100]	; 0x64
 800f700:	81c2      	strh	r2, [r0, #14]
 800f702:	6183      	str	r3, [r0, #24]
 800f704:	4619      	mov	r1, r3
 800f706:	2208      	movs	r2, #8
 800f708:	305c      	adds	r0, #92	; 0x5c
 800f70a:	f7fb fbe1 	bl	800aed0 <memset>
 800f70e:	4b05      	ldr	r3, [pc, #20]	; (800f724 <std+0x38>)
 800f710:	6224      	str	r4, [r4, #32]
 800f712:	6263      	str	r3, [r4, #36]	; 0x24
 800f714:	4b04      	ldr	r3, [pc, #16]	; (800f728 <std+0x3c>)
 800f716:	62a3      	str	r3, [r4, #40]	; 0x28
 800f718:	4b04      	ldr	r3, [pc, #16]	; (800f72c <std+0x40>)
 800f71a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f71c:	4b04      	ldr	r3, [pc, #16]	; (800f730 <std+0x44>)
 800f71e:	6323      	str	r3, [r4, #48]	; 0x30
 800f720:	bd10      	pop	{r4, pc}
 800f722:	bf00      	nop
 800f724:	0800bc59 	.word	0x0800bc59
 800f728:	0800bc7f 	.word	0x0800bc7f
 800f72c:	0800bcb7 	.word	0x0800bcb7
 800f730:	0800bcdb 	.word	0x0800bcdb

0800f734 <_cleanup_r>:
 800f734:	4901      	ldr	r1, [pc, #4]	; (800f73c <_cleanup_r+0x8>)
 800f736:	f000 b8c1 	b.w	800f8bc <_fwalk_reent>
 800f73a:	bf00      	nop
 800f73c:	0800f675 	.word	0x0800f675

0800f740 <__sfmoreglue>:
 800f740:	2268      	movs	r2, #104	; 0x68
 800f742:	b570      	push	{r4, r5, r6, lr}
 800f744:	1e4d      	subs	r5, r1, #1
 800f746:	4355      	muls	r5, r2
 800f748:	460e      	mov	r6, r1
 800f74a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f74e:	f7ff f8cd 	bl	800e8ec <_malloc_r>
 800f752:	4604      	mov	r4, r0
 800f754:	b140      	cbz	r0, 800f768 <__sfmoreglue+0x28>
 800f756:	2100      	movs	r1, #0
 800f758:	e9c0 1600 	strd	r1, r6, [r0]
 800f75c:	300c      	adds	r0, #12
 800f75e:	60a0      	str	r0, [r4, #8]
 800f760:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f764:	f7fb fbb4 	bl	800aed0 <memset>
 800f768:	4620      	mov	r0, r4
 800f76a:	bd70      	pop	{r4, r5, r6, pc}

0800f76c <__sfp_lock_acquire>:
 800f76c:	4801      	ldr	r0, [pc, #4]	; (800f774 <__sfp_lock_acquire+0x8>)
 800f76e:	f000 b8c5 	b.w	800f8fc <__retarget_lock_acquire_recursive>
 800f772:	bf00      	nop
 800f774:	200014f1 	.word	0x200014f1

0800f778 <__sfp_lock_release>:
 800f778:	4801      	ldr	r0, [pc, #4]	; (800f780 <__sfp_lock_release+0x8>)
 800f77a:	f000 b8c0 	b.w	800f8fe <__retarget_lock_release_recursive>
 800f77e:	bf00      	nop
 800f780:	200014f1 	.word	0x200014f1

0800f784 <__sinit_lock_acquire>:
 800f784:	4801      	ldr	r0, [pc, #4]	; (800f78c <__sinit_lock_acquire+0x8>)
 800f786:	f000 b8b9 	b.w	800f8fc <__retarget_lock_acquire_recursive>
 800f78a:	bf00      	nop
 800f78c:	200014f2 	.word	0x200014f2

0800f790 <__sinit_lock_release>:
 800f790:	4801      	ldr	r0, [pc, #4]	; (800f798 <__sinit_lock_release+0x8>)
 800f792:	f000 b8b4 	b.w	800f8fe <__retarget_lock_release_recursive>
 800f796:	bf00      	nop
 800f798:	200014f2 	.word	0x200014f2

0800f79c <__sinit>:
 800f79c:	b510      	push	{r4, lr}
 800f79e:	4604      	mov	r4, r0
 800f7a0:	f7ff fff0 	bl	800f784 <__sinit_lock_acquire>
 800f7a4:	69a3      	ldr	r3, [r4, #24]
 800f7a6:	b11b      	cbz	r3, 800f7b0 <__sinit+0x14>
 800f7a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7ac:	f7ff bff0 	b.w	800f790 <__sinit_lock_release>
 800f7b0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f7b4:	6523      	str	r3, [r4, #80]	; 0x50
 800f7b6:	4b13      	ldr	r3, [pc, #76]	; (800f804 <__sinit+0x68>)
 800f7b8:	4a13      	ldr	r2, [pc, #76]	; (800f808 <__sinit+0x6c>)
 800f7ba:	681b      	ldr	r3, [r3, #0]
 800f7bc:	62a2      	str	r2, [r4, #40]	; 0x28
 800f7be:	42a3      	cmp	r3, r4
 800f7c0:	bf08      	it	eq
 800f7c2:	2301      	moveq	r3, #1
 800f7c4:	4620      	mov	r0, r4
 800f7c6:	bf08      	it	eq
 800f7c8:	61a3      	streq	r3, [r4, #24]
 800f7ca:	f000 f81f 	bl	800f80c <__sfp>
 800f7ce:	6060      	str	r0, [r4, #4]
 800f7d0:	4620      	mov	r0, r4
 800f7d2:	f000 f81b 	bl	800f80c <__sfp>
 800f7d6:	60a0      	str	r0, [r4, #8]
 800f7d8:	4620      	mov	r0, r4
 800f7da:	f000 f817 	bl	800f80c <__sfp>
 800f7de:	2200      	movs	r2, #0
 800f7e0:	2104      	movs	r1, #4
 800f7e2:	60e0      	str	r0, [r4, #12]
 800f7e4:	6860      	ldr	r0, [r4, #4]
 800f7e6:	f7ff ff81 	bl	800f6ec <std>
 800f7ea:	2201      	movs	r2, #1
 800f7ec:	2109      	movs	r1, #9
 800f7ee:	68a0      	ldr	r0, [r4, #8]
 800f7f0:	f7ff ff7c 	bl	800f6ec <std>
 800f7f4:	2202      	movs	r2, #2
 800f7f6:	2112      	movs	r1, #18
 800f7f8:	68e0      	ldr	r0, [r4, #12]
 800f7fa:	f7ff ff77 	bl	800f6ec <std>
 800f7fe:	2301      	movs	r3, #1
 800f800:	61a3      	str	r3, [r4, #24]
 800f802:	e7d1      	b.n	800f7a8 <__sinit+0xc>
 800f804:	08010d3c 	.word	0x08010d3c
 800f808:	0800f735 	.word	0x0800f735

0800f80c <__sfp>:
 800f80c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f80e:	4607      	mov	r7, r0
 800f810:	f7ff ffac 	bl	800f76c <__sfp_lock_acquire>
 800f814:	4b1e      	ldr	r3, [pc, #120]	; (800f890 <__sfp+0x84>)
 800f816:	681e      	ldr	r6, [r3, #0]
 800f818:	69b3      	ldr	r3, [r6, #24]
 800f81a:	b913      	cbnz	r3, 800f822 <__sfp+0x16>
 800f81c:	4630      	mov	r0, r6
 800f81e:	f7ff ffbd 	bl	800f79c <__sinit>
 800f822:	3648      	adds	r6, #72	; 0x48
 800f824:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f828:	3b01      	subs	r3, #1
 800f82a:	d503      	bpl.n	800f834 <__sfp+0x28>
 800f82c:	6833      	ldr	r3, [r6, #0]
 800f82e:	b30b      	cbz	r3, 800f874 <__sfp+0x68>
 800f830:	6836      	ldr	r6, [r6, #0]
 800f832:	e7f7      	b.n	800f824 <__sfp+0x18>
 800f834:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f838:	b9d5      	cbnz	r5, 800f870 <__sfp+0x64>
 800f83a:	4b16      	ldr	r3, [pc, #88]	; (800f894 <__sfp+0x88>)
 800f83c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f840:	60e3      	str	r3, [r4, #12]
 800f842:	6665      	str	r5, [r4, #100]	; 0x64
 800f844:	f000 f859 	bl	800f8fa <__retarget_lock_init_recursive>
 800f848:	f7ff ff96 	bl	800f778 <__sfp_lock_release>
 800f84c:	2208      	movs	r2, #8
 800f84e:	4629      	mov	r1, r5
 800f850:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f854:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f858:	6025      	str	r5, [r4, #0]
 800f85a:	61a5      	str	r5, [r4, #24]
 800f85c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f860:	f7fb fb36 	bl	800aed0 <memset>
 800f864:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f868:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f86c:	4620      	mov	r0, r4
 800f86e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f870:	3468      	adds	r4, #104	; 0x68
 800f872:	e7d9      	b.n	800f828 <__sfp+0x1c>
 800f874:	2104      	movs	r1, #4
 800f876:	4638      	mov	r0, r7
 800f878:	f7ff ff62 	bl	800f740 <__sfmoreglue>
 800f87c:	4604      	mov	r4, r0
 800f87e:	6030      	str	r0, [r6, #0]
 800f880:	2800      	cmp	r0, #0
 800f882:	d1d5      	bne.n	800f830 <__sfp+0x24>
 800f884:	f7ff ff78 	bl	800f778 <__sfp_lock_release>
 800f888:	230c      	movs	r3, #12
 800f88a:	603b      	str	r3, [r7, #0]
 800f88c:	e7ee      	b.n	800f86c <__sfp+0x60>
 800f88e:	bf00      	nop
 800f890:	08010d3c 	.word	0x08010d3c
 800f894:	ffff0001 	.word	0xffff0001

0800f898 <fiprintf>:
 800f898:	b40e      	push	{r1, r2, r3}
 800f89a:	b503      	push	{r0, r1, lr}
 800f89c:	4601      	mov	r1, r0
 800f89e:	ab03      	add	r3, sp, #12
 800f8a0:	4805      	ldr	r0, [pc, #20]	; (800f8b8 <fiprintf+0x20>)
 800f8a2:	f853 2b04 	ldr.w	r2, [r3], #4
 800f8a6:	6800      	ldr	r0, [r0, #0]
 800f8a8:	9301      	str	r3, [sp, #4]
 800f8aa:	f000 f8a5 	bl	800f9f8 <_vfiprintf_r>
 800f8ae:	b002      	add	sp, #8
 800f8b0:	f85d eb04 	ldr.w	lr, [sp], #4
 800f8b4:	b003      	add	sp, #12
 800f8b6:	4770      	bx	lr
 800f8b8:	200001a4 	.word	0x200001a4

0800f8bc <_fwalk_reent>:
 800f8bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f8c0:	4606      	mov	r6, r0
 800f8c2:	4688      	mov	r8, r1
 800f8c4:	2700      	movs	r7, #0
 800f8c6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f8ca:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f8ce:	f1b9 0901 	subs.w	r9, r9, #1
 800f8d2:	d505      	bpl.n	800f8e0 <_fwalk_reent+0x24>
 800f8d4:	6824      	ldr	r4, [r4, #0]
 800f8d6:	2c00      	cmp	r4, #0
 800f8d8:	d1f7      	bne.n	800f8ca <_fwalk_reent+0xe>
 800f8da:	4638      	mov	r0, r7
 800f8dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f8e0:	89ab      	ldrh	r3, [r5, #12]
 800f8e2:	2b01      	cmp	r3, #1
 800f8e4:	d907      	bls.n	800f8f6 <_fwalk_reent+0x3a>
 800f8e6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f8ea:	3301      	adds	r3, #1
 800f8ec:	d003      	beq.n	800f8f6 <_fwalk_reent+0x3a>
 800f8ee:	4629      	mov	r1, r5
 800f8f0:	4630      	mov	r0, r6
 800f8f2:	47c0      	blx	r8
 800f8f4:	4307      	orrs	r7, r0
 800f8f6:	3568      	adds	r5, #104	; 0x68
 800f8f8:	e7e9      	b.n	800f8ce <_fwalk_reent+0x12>

0800f8fa <__retarget_lock_init_recursive>:
 800f8fa:	4770      	bx	lr

0800f8fc <__retarget_lock_acquire_recursive>:
 800f8fc:	4770      	bx	lr

0800f8fe <__retarget_lock_release_recursive>:
 800f8fe:	4770      	bx	lr

0800f900 <memmove>:
 800f900:	4288      	cmp	r0, r1
 800f902:	b510      	push	{r4, lr}
 800f904:	eb01 0402 	add.w	r4, r1, r2
 800f908:	d902      	bls.n	800f910 <memmove+0x10>
 800f90a:	4284      	cmp	r4, r0
 800f90c:	4623      	mov	r3, r4
 800f90e:	d807      	bhi.n	800f920 <memmove+0x20>
 800f910:	1e43      	subs	r3, r0, #1
 800f912:	42a1      	cmp	r1, r4
 800f914:	d008      	beq.n	800f928 <memmove+0x28>
 800f916:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f91a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f91e:	e7f8      	b.n	800f912 <memmove+0x12>
 800f920:	4601      	mov	r1, r0
 800f922:	4402      	add	r2, r0
 800f924:	428a      	cmp	r2, r1
 800f926:	d100      	bne.n	800f92a <memmove+0x2a>
 800f928:	bd10      	pop	{r4, pc}
 800f92a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f92e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f932:	e7f7      	b.n	800f924 <memmove+0x24>

0800f934 <__malloc_lock>:
 800f934:	4801      	ldr	r0, [pc, #4]	; (800f93c <__malloc_lock+0x8>)
 800f936:	f7ff bfe1 	b.w	800f8fc <__retarget_lock_acquire_recursive>
 800f93a:	bf00      	nop
 800f93c:	200014f0 	.word	0x200014f0

0800f940 <__malloc_unlock>:
 800f940:	4801      	ldr	r0, [pc, #4]	; (800f948 <__malloc_unlock+0x8>)
 800f942:	f7ff bfdc 	b.w	800f8fe <__retarget_lock_release_recursive>
 800f946:	bf00      	nop
 800f948:	200014f0 	.word	0x200014f0

0800f94c <_realloc_r>:
 800f94c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f950:	4680      	mov	r8, r0
 800f952:	4614      	mov	r4, r2
 800f954:	460e      	mov	r6, r1
 800f956:	b921      	cbnz	r1, 800f962 <_realloc_r+0x16>
 800f958:	4611      	mov	r1, r2
 800f95a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f95e:	f7fe bfc5 	b.w	800e8ec <_malloc_r>
 800f962:	b92a      	cbnz	r2, 800f970 <_realloc_r+0x24>
 800f964:	f7fe ff5a 	bl	800e81c <_free_r>
 800f968:	4625      	mov	r5, r4
 800f96a:	4628      	mov	r0, r5
 800f96c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f970:	f000 fa9e 	bl	800feb0 <_malloc_usable_size_r>
 800f974:	4284      	cmp	r4, r0
 800f976:	4607      	mov	r7, r0
 800f978:	d802      	bhi.n	800f980 <_realloc_r+0x34>
 800f97a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f97e:	d812      	bhi.n	800f9a6 <_realloc_r+0x5a>
 800f980:	4621      	mov	r1, r4
 800f982:	4640      	mov	r0, r8
 800f984:	f7fe ffb2 	bl	800e8ec <_malloc_r>
 800f988:	4605      	mov	r5, r0
 800f98a:	2800      	cmp	r0, #0
 800f98c:	d0ed      	beq.n	800f96a <_realloc_r+0x1e>
 800f98e:	42bc      	cmp	r4, r7
 800f990:	4622      	mov	r2, r4
 800f992:	4631      	mov	r1, r6
 800f994:	bf28      	it	cs
 800f996:	463a      	movcs	r2, r7
 800f998:	f7fb fa8c 	bl	800aeb4 <memcpy>
 800f99c:	4631      	mov	r1, r6
 800f99e:	4640      	mov	r0, r8
 800f9a0:	f7fe ff3c 	bl	800e81c <_free_r>
 800f9a4:	e7e1      	b.n	800f96a <_realloc_r+0x1e>
 800f9a6:	4635      	mov	r5, r6
 800f9a8:	e7df      	b.n	800f96a <_realloc_r+0x1e>

0800f9aa <__sfputc_r>:
 800f9aa:	6893      	ldr	r3, [r2, #8]
 800f9ac:	b410      	push	{r4}
 800f9ae:	3b01      	subs	r3, #1
 800f9b0:	2b00      	cmp	r3, #0
 800f9b2:	6093      	str	r3, [r2, #8]
 800f9b4:	da07      	bge.n	800f9c6 <__sfputc_r+0x1c>
 800f9b6:	6994      	ldr	r4, [r2, #24]
 800f9b8:	42a3      	cmp	r3, r4
 800f9ba:	db01      	blt.n	800f9c0 <__sfputc_r+0x16>
 800f9bc:	290a      	cmp	r1, #10
 800f9be:	d102      	bne.n	800f9c6 <__sfputc_r+0x1c>
 800f9c0:	bc10      	pop	{r4}
 800f9c2:	f000 b949 	b.w	800fc58 <__swbuf_r>
 800f9c6:	6813      	ldr	r3, [r2, #0]
 800f9c8:	1c58      	adds	r0, r3, #1
 800f9ca:	6010      	str	r0, [r2, #0]
 800f9cc:	7019      	strb	r1, [r3, #0]
 800f9ce:	4608      	mov	r0, r1
 800f9d0:	bc10      	pop	{r4}
 800f9d2:	4770      	bx	lr

0800f9d4 <__sfputs_r>:
 800f9d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9d6:	4606      	mov	r6, r0
 800f9d8:	460f      	mov	r7, r1
 800f9da:	4614      	mov	r4, r2
 800f9dc:	18d5      	adds	r5, r2, r3
 800f9de:	42ac      	cmp	r4, r5
 800f9e0:	d101      	bne.n	800f9e6 <__sfputs_r+0x12>
 800f9e2:	2000      	movs	r0, #0
 800f9e4:	e007      	b.n	800f9f6 <__sfputs_r+0x22>
 800f9e6:	463a      	mov	r2, r7
 800f9e8:	4630      	mov	r0, r6
 800f9ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f9ee:	f7ff ffdc 	bl	800f9aa <__sfputc_r>
 800f9f2:	1c43      	adds	r3, r0, #1
 800f9f4:	d1f3      	bne.n	800f9de <__sfputs_r+0xa>
 800f9f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f9f8 <_vfiprintf_r>:
 800f9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9fc:	460d      	mov	r5, r1
 800f9fe:	4614      	mov	r4, r2
 800fa00:	4698      	mov	r8, r3
 800fa02:	4606      	mov	r6, r0
 800fa04:	b09d      	sub	sp, #116	; 0x74
 800fa06:	b118      	cbz	r0, 800fa10 <_vfiprintf_r+0x18>
 800fa08:	6983      	ldr	r3, [r0, #24]
 800fa0a:	b90b      	cbnz	r3, 800fa10 <_vfiprintf_r+0x18>
 800fa0c:	f7ff fec6 	bl	800f79c <__sinit>
 800fa10:	4b89      	ldr	r3, [pc, #548]	; (800fc38 <_vfiprintf_r+0x240>)
 800fa12:	429d      	cmp	r5, r3
 800fa14:	d11b      	bne.n	800fa4e <_vfiprintf_r+0x56>
 800fa16:	6875      	ldr	r5, [r6, #4]
 800fa18:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fa1a:	07d9      	lsls	r1, r3, #31
 800fa1c:	d405      	bmi.n	800fa2a <_vfiprintf_r+0x32>
 800fa1e:	89ab      	ldrh	r3, [r5, #12]
 800fa20:	059a      	lsls	r2, r3, #22
 800fa22:	d402      	bmi.n	800fa2a <_vfiprintf_r+0x32>
 800fa24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fa26:	f7ff ff69 	bl	800f8fc <__retarget_lock_acquire_recursive>
 800fa2a:	89ab      	ldrh	r3, [r5, #12]
 800fa2c:	071b      	lsls	r3, r3, #28
 800fa2e:	d501      	bpl.n	800fa34 <_vfiprintf_r+0x3c>
 800fa30:	692b      	ldr	r3, [r5, #16]
 800fa32:	b9eb      	cbnz	r3, 800fa70 <_vfiprintf_r+0x78>
 800fa34:	4629      	mov	r1, r5
 800fa36:	4630      	mov	r0, r6
 800fa38:	f000 f960 	bl	800fcfc <__swsetup_r>
 800fa3c:	b1c0      	cbz	r0, 800fa70 <_vfiprintf_r+0x78>
 800fa3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fa40:	07dc      	lsls	r4, r3, #31
 800fa42:	d50e      	bpl.n	800fa62 <_vfiprintf_r+0x6a>
 800fa44:	f04f 30ff 	mov.w	r0, #4294967295
 800fa48:	b01d      	add	sp, #116	; 0x74
 800fa4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa4e:	4b7b      	ldr	r3, [pc, #492]	; (800fc3c <_vfiprintf_r+0x244>)
 800fa50:	429d      	cmp	r5, r3
 800fa52:	d101      	bne.n	800fa58 <_vfiprintf_r+0x60>
 800fa54:	68b5      	ldr	r5, [r6, #8]
 800fa56:	e7df      	b.n	800fa18 <_vfiprintf_r+0x20>
 800fa58:	4b79      	ldr	r3, [pc, #484]	; (800fc40 <_vfiprintf_r+0x248>)
 800fa5a:	429d      	cmp	r5, r3
 800fa5c:	bf08      	it	eq
 800fa5e:	68f5      	ldreq	r5, [r6, #12]
 800fa60:	e7da      	b.n	800fa18 <_vfiprintf_r+0x20>
 800fa62:	89ab      	ldrh	r3, [r5, #12]
 800fa64:	0598      	lsls	r0, r3, #22
 800fa66:	d4ed      	bmi.n	800fa44 <_vfiprintf_r+0x4c>
 800fa68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fa6a:	f7ff ff48 	bl	800f8fe <__retarget_lock_release_recursive>
 800fa6e:	e7e9      	b.n	800fa44 <_vfiprintf_r+0x4c>
 800fa70:	2300      	movs	r3, #0
 800fa72:	9309      	str	r3, [sp, #36]	; 0x24
 800fa74:	2320      	movs	r3, #32
 800fa76:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800fa7a:	2330      	movs	r3, #48	; 0x30
 800fa7c:	f04f 0901 	mov.w	r9, #1
 800fa80:	f8cd 800c 	str.w	r8, [sp, #12]
 800fa84:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 800fc44 <_vfiprintf_r+0x24c>
 800fa88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800fa8c:	4623      	mov	r3, r4
 800fa8e:	469a      	mov	sl, r3
 800fa90:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fa94:	b10a      	cbz	r2, 800fa9a <_vfiprintf_r+0xa2>
 800fa96:	2a25      	cmp	r2, #37	; 0x25
 800fa98:	d1f9      	bne.n	800fa8e <_vfiprintf_r+0x96>
 800fa9a:	ebba 0b04 	subs.w	fp, sl, r4
 800fa9e:	d00b      	beq.n	800fab8 <_vfiprintf_r+0xc0>
 800faa0:	465b      	mov	r3, fp
 800faa2:	4622      	mov	r2, r4
 800faa4:	4629      	mov	r1, r5
 800faa6:	4630      	mov	r0, r6
 800faa8:	f7ff ff94 	bl	800f9d4 <__sfputs_r>
 800faac:	3001      	adds	r0, #1
 800faae:	f000 80aa 	beq.w	800fc06 <_vfiprintf_r+0x20e>
 800fab2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fab4:	445a      	add	r2, fp
 800fab6:	9209      	str	r2, [sp, #36]	; 0x24
 800fab8:	f89a 3000 	ldrb.w	r3, [sl]
 800fabc:	2b00      	cmp	r3, #0
 800fabe:	f000 80a2 	beq.w	800fc06 <_vfiprintf_r+0x20e>
 800fac2:	2300      	movs	r3, #0
 800fac4:	f04f 32ff 	mov.w	r2, #4294967295
 800fac8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800facc:	f10a 0a01 	add.w	sl, sl, #1
 800fad0:	9304      	str	r3, [sp, #16]
 800fad2:	9307      	str	r3, [sp, #28]
 800fad4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800fad8:	931a      	str	r3, [sp, #104]	; 0x68
 800fada:	4654      	mov	r4, sl
 800fadc:	2205      	movs	r2, #5
 800fade:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fae2:	4858      	ldr	r0, [pc, #352]	; (800fc44 <_vfiprintf_r+0x24c>)
 800fae4:	f7fe f9c0 	bl	800de68 <memchr>
 800fae8:	9a04      	ldr	r2, [sp, #16]
 800faea:	b9d8      	cbnz	r0, 800fb24 <_vfiprintf_r+0x12c>
 800faec:	06d1      	lsls	r1, r2, #27
 800faee:	bf44      	itt	mi
 800faf0:	2320      	movmi	r3, #32
 800faf2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800faf6:	0713      	lsls	r3, r2, #28
 800faf8:	bf44      	itt	mi
 800fafa:	232b      	movmi	r3, #43	; 0x2b
 800fafc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800fb00:	f89a 3000 	ldrb.w	r3, [sl]
 800fb04:	2b2a      	cmp	r3, #42	; 0x2a
 800fb06:	d015      	beq.n	800fb34 <_vfiprintf_r+0x13c>
 800fb08:	4654      	mov	r4, sl
 800fb0a:	2000      	movs	r0, #0
 800fb0c:	f04f 0c0a 	mov.w	ip, #10
 800fb10:	9a07      	ldr	r2, [sp, #28]
 800fb12:	4621      	mov	r1, r4
 800fb14:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fb18:	3b30      	subs	r3, #48	; 0x30
 800fb1a:	2b09      	cmp	r3, #9
 800fb1c:	d94e      	bls.n	800fbbc <_vfiprintf_r+0x1c4>
 800fb1e:	b1b0      	cbz	r0, 800fb4e <_vfiprintf_r+0x156>
 800fb20:	9207      	str	r2, [sp, #28]
 800fb22:	e014      	b.n	800fb4e <_vfiprintf_r+0x156>
 800fb24:	eba0 0308 	sub.w	r3, r0, r8
 800fb28:	fa09 f303 	lsl.w	r3, r9, r3
 800fb2c:	4313      	orrs	r3, r2
 800fb2e:	46a2      	mov	sl, r4
 800fb30:	9304      	str	r3, [sp, #16]
 800fb32:	e7d2      	b.n	800fada <_vfiprintf_r+0xe2>
 800fb34:	9b03      	ldr	r3, [sp, #12]
 800fb36:	1d19      	adds	r1, r3, #4
 800fb38:	681b      	ldr	r3, [r3, #0]
 800fb3a:	9103      	str	r1, [sp, #12]
 800fb3c:	2b00      	cmp	r3, #0
 800fb3e:	bfbb      	ittet	lt
 800fb40:	425b      	neglt	r3, r3
 800fb42:	f042 0202 	orrlt.w	r2, r2, #2
 800fb46:	9307      	strge	r3, [sp, #28]
 800fb48:	9307      	strlt	r3, [sp, #28]
 800fb4a:	bfb8      	it	lt
 800fb4c:	9204      	strlt	r2, [sp, #16]
 800fb4e:	7823      	ldrb	r3, [r4, #0]
 800fb50:	2b2e      	cmp	r3, #46	; 0x2e
 800fb52:	d10c      	bne.n	800fb6e <_vfiprintf_r+0x176>
 800fb54:	7863      	ldrb	r3, [r4, #1]
 800fb56:	2b2a      	cmp	r3, #42	; 0x2a
 800fb58:	d135      	bne.n	800fbc6 <_vfiprintf_r+0x1ce>
 800fb5a:	9b03      	ldr	r3, [sp, #12]
 800fb5c:	3402      	adds	r4, #2
 800fb5e:	1d1a      	adds	r2, r3, #4
 800fb60:	681b      	ldr	r3, [r3, #0]
 800fb62:	9203      	str	r2, [sp, #12]
 800fb64:	2b00      	cmp	r3, #0
 800fb66:	bfb8      	it	lt
 800fb68:	f04f 33ff 	movlt.w	r3, #4294967295
 800fb6c:	9305      	str	r3, [sp, #20]
 800fb6e:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800fc48 <_vfiprintf_r+0x250>
 800fb72:	2203      	movs	r2, #3
 800fb74:	4650      	mov	r0, sl
 800fb76:	7821      	ldrb	r1, [r4, #0]
 800fb78:	f7fe f976 	bl	800de68 <memchr>
 800fb7c:	b140      	cbz	r0, 800fb90 <_vfiprintf_r+0x198>
 800fb7e:	2340      	movs	r3, #64	; 0x40
 800fb80:	eba0 000a 	sub.w	r0, r0, sl
 800fb84:	fa03 f000 	lsl.w	r0, r3, r0
 800fb88:	9b04      	ldr	r3, [sp, #16]
 800fb8a:	3401      	adds	r4, #1
 800fb8c:	4303      	orrs	r3, r0
 800fb8e:	9304      	str	r3, [sp, #16]
 800fb90:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fb94:	2206      	movs	r2, #6
 800fb96:	482d      	ldr	r0, [pc, #180]	; (800fc4c <_vfiprintf_r+0x254>)
 800fb98:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800fb9c:	f7fe f964 	bl	800de68 <memchr>
 800fba0:	2800      	cmp	r0, #0
 800fba2:	d03f      	beq.n	800fc24 <_vfiprintf_r+0x22c>
 800fba4:	4b2a      	ldr	r3, [pc, #168]	; (800fc50 <_vfiprintf_r+0x258>)
 800fba6:	bb1b      	cbnz	r3, 800fbf0 <_vfiprintf_r+0x1f8>
 800fba8:	9b03      	ldr	r3, [sp, #12]
 800fbaa:	3307      	adds	r3, #7
 800fbac:	f023 0307 	bic.w	r3, r3, #7
 800fbb0:	3308      	adds	r3, #8
 800fbb2:	9303      	str	r3, [sp, #12]
 800fbb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbb6:	443b      	add	r3, r7
 800fbb8:	9309      	str	r3, [sp, #36]	; 0x24
 800fbba:	e767      	b.n	800fa8c <_vfiprintf_r+0x94>
 800fbbc:	460c      	mov	r4, r1
 800fbbe:	2001      	movs	r0, #1
 800fbc0:	fb0c 3202 	mla	r2, ip, r2, r3
 800fbc4:	e7a5      	b.n	800fb12 <_vfiprintf_r+0x11a>
 800fbc6:	2300      	movs	r3, #0
 800fbc8:	f04f 0c0a 	mov.w	ip, #10
 800fbcc:	4619      	mov	r1, r3
 800fbce:	3401      	adds	r4, #1
 800fbd0:	9305      	str	r3, [sp, #20]
 800fbd2:	4620      	mov	r0, r4
 800fbd4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800fbd8:	3a30      	subs	r2, #48	; 0x30
 800fbda:	2a09      	cmp	r2, #9
 800fbdc:	d903      	bls.n	800fbe6 <_vfiprintf_r+0x1ee>
 800fbde:	2b00      	cmp	r3, #0
 800fbe0:	d0c5      	beq.n	800fb6e <_vfiprintf_r+0x176>
 800fbe2:	9105      	str	r1, [sp, #20]
 800fbe4:	e7c3      	b.n	800fb6e <_vfiprintf_r+0x176>
 800fbe6:	4604      	mov	r4, r0
 800fbe8:	2301      	movs	r3, #1
 800fbea:	fb0c 2101 	mla	r1, ip, r1, r2
 800fbee:	e7f0      	b.n	800fbd2 <_vfiprintf_r+0x1da>
 800fbf0:	ab03      	add	r3, sp, #12
 800fbf2:	9300      	str	r3, [sp, #0]
 800fbf4:	462a      	mov	r2, r5
 800fbf6:	4630      	mov	r0, r6
 800fbf8:	4b16      	ldr	r3, [pc, #88]	; (800fc54 <_vfiprintf_r+0x25c>)
 800fbfa:	a904      	add	r1, sp, #16
 800fbfc:	f7fb fa0e 	bl	800b01c <_printf_float>
 800fc00:	4607      	mov	r7, r0
 800fc02:	1c78      	adds	r0, r7, #1
 800fc04:	d1d6      	bne.n	800fbb4 <_vfiprintf_r+0x1bc>
 800fc06:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fc08:	07d9      	lsls	r1, r3, #31
 800fc0a:	d405      	bmi.n	800fc18 <_vfiprintf_r+0x220>
 800fc0c:	89ab      	ldrh	r3, [r5, #12]
 800fc0e:	059a      	lsls	r2, r3, #22
 800fc10:	d402      	bmi.n	800fc18 <_vfiprintf_r+0x220>
 800fc12:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fc14:	f7ff fe73 	bl	800f8fe <__retarget_lock_release_recursive>
 800fc18:	89ab      	ldrh	r3, [r5, #12]
 800fc1a:	065b      	lsls	r3, r3, #25
 800fc1c:	f53f af12 	bmi.w	800fa44 <_vfiprintf_r+0x4c>
 800fc20:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fc22:	e711      	b.n	800fa48 <_vfiprintf_r+0x50>
 800fc24:	ab03      	add	r3, sp, #12
 800fc26:	9300      	str	r3, [sp, #0]
 800fc28:	462a      	mov	r2, r5
 800fc2a:	4630      	mov	r0, r6
 800fc2c:	4b09      	ldr	r3, [pc, #36]	; (800fc54 <_vfiprintf_r+0x25c>)
 800fc2e:	a904      	add	r1, sp, #16
 800fc30:	f7fb fc90 	bl	800b554 <_printf_i>
 800fc34:	e7e4      	b.n	800fc00 <_vfiprintf_r+0x208>
 800fc36:	bf00      	nop
 800fc38:	080111b4 	.word	0x080111b4
 800fc3c:	080111d4 	.word	0x080111d4
 800fc40:	08011194 	.word	0x08011194
 800fc44:	0801112c 	.word	0x0801112c
 800fc48:	08011132 	.word	0x08011132
 800fc4c:	08011136 	.word	0x08011136
 800fc50:	0800b01d 	.word	0x0800b01d
 800fc54:	0800f9d5 	.word	0x0800f9d5

0800fc58 <__swbuf_r>:
 800fc58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc5a:	460e      	mov	r6, r1
 800fc5c:	4614      	mov	r4, r2
 800fc5e:	4605      	mov	r5, r0
 800fc60:	b118      	cbz	r0, 800fc6a <__swbuf_r+0x12>
 800fc62:	6983      	ldr	r3, [r0, #24]
 800fc64:	b90b      	cbnz	r3, 800fc6a <__swbuf_r+0x12>
 800fc66:	f7ff fd99 	bl	800f79c <__sinit>
 800fc6a:	4b21      	ldr	r3, [pc, #132]	; (800fcf0 <__swbuf_r+0x98>)
 800fc6c:	429c      	cmp	r4, r3
 800fc6e:	d12b      	bne.n	800fcc8 <__swbuf_r+0x70>
 800fc70:	686c      	ldr	r4, [r5, #4]
 800fc72:	69a3      	ldr	r3, [r4, #24]
 800fc74:	60a3      	str	r3, [r4, #8]
 800fc76:	89a3      	ldrh	r3, [r4, #12]
 800fc78:	071a      	lsls	r2, r3, #28
 800fc7a:	d52f      	bpl.n	800fcdc <__swbuf_r+0x84>
 800fc7c:	6923      	ldr	r3, [r4, #16]
 800fc7e:	b36b      	cbz	r3, 800fcdc <__swbuf_r+0x84>
 800fc80:	6923      	ldr	r3, [r4, #16]
 800fc82:	6820      	ldr	r0, [r4, #0]
 800fc84:	b2f6      	uxtb	r6, r6
 800fc86:	1ac0      	subs	r0, r0, r3
 800fc88:	6963      	ldr	r3, [r4, #20]
 800fc8a:	4637      	mov	r7, r6
 800fc8c:	4283      	cmp	r3, r0
 800fc8e:	dc04      	bgt.n	800fc9a <__swbuf_r+0x42>
 800fc90:	4621      	mov	r1, r4
 800fc92:	4628      	mov	r0, r5
 800fc94:	f7ff fcee 	bl	800f674 <_fflush_r>
 800fc98:	bb30      	cbnz	r0, 800fce8 <__swbuf_r+0x90>
 800fc9a:	68a3      	ldr	r3, [r4, #8]
 800fc9c:	3001      	adds	r0, #1
 800fc9e:	3b01      	subs	r3, #1
 800fca0:	60a3      	str	r3, [r4, #8]
 800fca2:	6823      	ldr	r3, [r4, #0]
 800fca4:	1c5a      	adds	r2, r3, #1
 800fca6:	6022      	str	r2, [r4, #0]
 800fca8:	701e      	strb	r6, [r3, #0]
 800fcaa:	6963      	ldr	r3, [r4, #20]
 800fcac:	4283      	cmp	r3, r0
 800fcae:	d004      	beq.n	800fcba <__swbuf_r+0x62>
 800fcb0:	89a3      	ldrh	r3, [r4, #12]
 800fcb2:	07db      	lsls	r3, r3, #31
 800fcb4:	d506      	bpl.n	800fcc4 <__swbuf_r+0x6c>
 800fcb6:	2e0a      	cmp	r6, #10
 800fcb8:	d104      	bne.n	800fcc4 <__swbuf_r+0x6c>
 800fcba:	4621      	mov	r1, r4
 800fcbc:	4628      	mov	r0, r5
 800fcbe:	f7ff fcd9 	bl	800f674 <_fflush_r>
 800fcc2:	b988      	cbnz	r0, 800fce8 <__swbuf_r+0x90>
 800fcc4:	4638      	mov	r0, r7
 800fcc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcc8:	4b0a      	ldr	r3, [pc, #40]	; (800fcf4 <__swbuf_r+0x9c>)
 800fcca:	429c      	cmp	r4, r3
 800fccc:	d101      	bne.n	800fcd2 <__swbuf_r+0x7a>
 800fcce:	68ac      	ldr	r4, [r5, #8]
 800fcd0:	e7cf      	b.n	800fc72 <__swbuf_r+0x1a>
 800fcd2:	4b09      	ldr	r3, [pc, #36]	; (800fcf8 <__swbuf_r+0xa0>)
 800fcd4:	429c      	cmp	r4, r3
 800fcd6:	bf08      	it	eq
 800fcd8:	68ec      	ldreq	r4, [r5, #12]
 800fcda:	e7ca      	b.n	800fc72 <__swbuf_r+0x1a>
 800fcdc:	4621      	mov	r1, r4
 800fcde:	4628      	mov	r0, r5
 800fce0:	f000 f80c 	bl	800fcfc <__swsetup_r>
 800fce4:	2800      	cmp	r0, #0
 800fce6:	d0cb      	beq.n	800fc80 <__swbuf_r+0x28>
 800fce8:	f04f 37ff 	mov.w	r7, #4294967295
 800fcec:	e7ea      	b.n	800fcc4 <__swbuf_r+0x6c>
 800fcee:	bf00      	nop
 800fcf0:	080111b4 	.word	0x080111b4
 800fcf4:	080111d4 	.word	0x080111d4
 800fcf8:	08011194 	.word	0x08011194

0800fcfc <__swsetup_r>:
 800fcfc:	4b32      	ldr	r3, [pc, #200]	; (800fdc8 <__swsetup_r+0xcc>)
 800fcfe:	b570      	push	{r4, r5, r6, lr}
 800fd00:	681d      	ldr	r5, [r3, #0]
 800fd02:	4606      	mov	r6, r0
 800fd04:	460c      	mov	r4, r1
 800fd06:	b125      	cbz	r5, 800fd12 <__swsetup_r+0x16>
 800fd08:	69ab      	ldr	r3, [r5, #24]
 800fd0a:	b913      	cbnz	r3, 800fd12 <__swsetup_r+0x16>
 800fd0c:	4628      	mov	r0, r5
 800fd0e:	f7ff fd45 	bl	800f79c <__sinit>
 800fd12:	4b2e      	ldr	r3, [pc, #184]	; (800fdcc <__swsetup_r+0xd0>)
 800fd14:	429c      	cmp	r4, r3
 800fd16:	d10f      	bne.n	800fd38 <__swsetup_r+0x3c>
 800fd18:	686c      	ldr	r4, [r5, #4]
 800fd1a:	89a3      	ldrh	r3, [r4, #12]
 800fd1c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fd20:	0719      	lsls	r1, r3, #28
 800fd22:	d42c      	bmi.n	800fd7e <__swsetup_r+0x82>
 800fd24:	06dd      	lsls	r5, r3, #27
 800fd26:	d411      	bmi.n	800fd4c <__swsetup_r+0x50>
 800fd28:	2309      	movs	r3, #9
 800fd2a:	6033      	str	r3, [r6, #0]
 800fd2c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800fd30:	f04f 30ff 	mov.w	r0, #4294967295
 800fd34:	81a3      	strh	r3, [r4, #12]
 800fd36:	e03e      	b.n	800fdb6 <__swsetup_r+0xba>
 800fd38:	4b25      	ldr	r3, [pc, #148]	; (800fdd0 <__swsetup_r+0xd4>)
 800fd3a:	429c      	cmp	r4, r3
 800fd3c:	d101      	bne.n	800fd42 <__swsetup_r+0x46>
 800fd3e:	68ac      	ldr	r4, [r5, #8]
 800fd40:	e7eb      	b.n	800fd1a <__swsetup_r+0x1e>
 800fd42:	4b24      	ldr	r3, [pc, #144]	; (800fdd4 <__swsetup_r+0xd8>)
 800fd44:	429c      	cmp	r4, r3
 800fd46:	bf08      	it	eq
 800fd48:	68ec      	ldreq	r4, [r5, #12]
 800fd4a:	e7e6      	b.n	800fd1a <__swsetup_r+0x1e>
 800fd4c:	0758      	lsls	r0, r3, #29
 800fd4e:	d512      	bpl.n	800fd76 <__swsetup_r+0x7a>
 800fd50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fd52:	b141      	cbz	r1, 800fd66 <__swsetup_r+0x6a>
 800fd54:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800fd58:	4299      	cmp	r1, r3
 800fd5a:	d002      	beq.n	800fd62 <__swsetup_r+0x66>
 800fd5c:	4630      	mov	r0, r6
 800fd5e:	f7fe fd5d 	bl	800e81c <_free_r>
 800fd62:	2300      	movs	r3, #0
 800fd64:	6363      	str	r3, [r4, #52]	; 0x34
 800fd66:	89a3      	ldrh	r3, [r4, #12]
 800fd68:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800fd6c:	81a3      	strh	r3, [r4, #12]
 800fd6e:	2300      	movs	r3, #0
 800fd70:	6063      	str	r3, [r4, #4]
 800fd72:	6923      	ldr	r3, [r4, #16]
 800fd74:	6023      	str	r3, [r4, #0]
 800fd76:	89a3      	ldrh	r3, [r4, #12]
 800fd78:	f043 0308 	orr.w	r3, r3, #8
 800fd7c:	81a3      	strh	r3, [r4, #12]
 800fd7e:	6923      	ldr	r3, [r4, #16]
 800fd80:	b94b      	cbnz	r3, 800fd96 <__swsetup_r+0x9a>
 800fd82:	89a3      	ldrh	r3, [r4, #12]
 800fd84:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800fd88:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fd8c:	d003      	beq.n	800fd96 <__swsetup_r+0x9a>
 800fd8e:	4621      	mov	r1, r4
 800fd90:	4630      	mov	r0, r6
 800fd92:	f000 f84d 	bl	800fe30 <__smakebuf_r>
 800fd96:	89a0      	ldrh	r0, [r4, #12]
 800fd98:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fd9c:	f010 0301 	ands.w	r3, r0, #1
 800fda0:	d00a      	beq.n	800fdb8 <__swsetup_r+0xbc>
 800fda2:	2300      	movs	r3, #0
 800fda4:	60a3      	str	r3, [r4, #8]
 800fda6:	6963      	ldr	r3, [r4, #20]
 800fda8:	425b      	negs	r3, r3
 800fdaa:	61a3      	str	r3, [r4, #24]
 800fdac:	6923      	ldr	r3, [r4, #16]
 800fdae:	b943      	cbnz	r3, 800fdc2 <__swsetup_r+0xc6>
 800fdb0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800fdb4:	d1ba      	bne.n	800fd2c <__swsetup_r+0x30>
 800fdb6:	bd70      	pop	{r4, r5, r6, pc}
 800fdb8:	0781      	lsls	r1, r0, #30
 800fdba:	bf58      	it	pl
 800fdbc:	6963      	ldrpl	r3, [r4, #20]
 800fdbe:	60a3      	str	r3, [r4, #8]
 800fdc0:	e7f4      	b.n	800fdac <__swsetup_r+0xb0>
 800fdc2:	2000      	movs	r0, #0
 800fdc4:	e7f7      	b.n	800fdb6 <__swsetup_r+0xba>
 800fdc6:	bf00      	nop
 800fdc8:	200001a4 	.word	0x200001a4
 800fdcc:	080111b4 	.word	0x080111b4
 800fdd0:	080111d4 	.word	0x080111d4
 800fdd4:	08011194 	.word	0x08011194

0800fdd8 <abort>:
 800fdd8:	2006      	movs	r0, #6
 800fdda:	b508      	push	{r3, lr}
 800fddc:	f000 f898 	bl	800ff10 <raise>
 800fde0:	2001      	movs	r0, #1
 800fde2:	f7f5 fa8a 	bl	80052fa <_exit>

0800fde6 <__swhatbuf_r>:
 800fde6:	b570      	push	{r4, r5, r6, lr}
 800fde8:	460e      	mov	r6, r1
 800fdea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fdee:	4614      	mov	r4, r2
 800fdf0:	2900      	cmp	r1, #0
 800fdf2:	461d      	mov	r5, r3
 800fdf4:	b096      	sub	sp, #88	; 0x58
 800fdf6:	da08      	bge.n	800fe0a <__swhatbuf_r+0x24>
 800fdf8:	2200      	movs	r2, #0
 800fdfa:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800fdfe:	602a      	str	r2, [r5, #0]
 800fe00:	061a      	lsls	r2, r3, #24
 800fe02:	d410      	bmi.n	800fe26 <__swhatbuf_r+0x40>
 800fe04:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fe08:	e00e      	b.n	800fe28 <__swhatbuf_r+0x42>
 800fe0a:	466a      	mov	r2, sp
 800fe0c:	f000 f89c 	bl	800ff48 <_fstat_r>
 800fe10:	2800      	cmp	r0, #0
 800fe12:	dbf1      	blt.n	800fdf8 <__swhatbuf_r+0x12>
 800fe14:	9a01      	ldr	r2, [sp, #4]
 800fe16:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fe1a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fe1e:	425a      	negs	r2, r3
 800fe20:	415a      	adcs	r2, r3
 800fe22:	602a      	str	r2, [r5, #0]
 800fe24:	e7ee      	b.n	800fe04 <__swhatbuf_r+0x1e>
 800fe26:	2340      	movs	r3, #64	; 0x40
 800fe28:	2000      	movs	r0, #0
 800fe2a:	6023      	str	r3, [r4, #0]
 800fe2c:	b016      	add	sp, #88	; 0x58
 800fe2e:	bd70      	pop	{r4, r5, r6, pc}

0800fe30 <__smakebuf_r>:
 800fe30:	898b      	ldrh	r3, [r1, #12]
 800fe32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fe34:	079d      	lsls	r5, r3, #30
 800fe36:	4606      	mov	r6, r0
 800fe38:	460c      	mov	r4, r1
 800fe3a:	d507      	bpl.n	800fe4c <__smakebuf_r+0x1c>
 800fe3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800fe40:	6023      	str	r3, [r4, #0]
 800fe42:	6123      	str	r3, [r4, #16]
 800fe44:	2301      	movs	r3, #1
 800fe46:	6163      	str	r3, [r4, #20]
 800fe48:	b002      	add	sp, #8
 800fe4a:	bd70      	pop	{r4, r5, r6, pc}
 800fe4c:	466a      	mov	r2, sp
 800fe4e:	ab01      	add	r3, sp, #4
 800fe50:	f7ff ffc9 	bl	800fde6 <__swhatbuf_r>
 800fe54:	9900      	ldr	r1, [sp, #0]
 800fe56:	4605      	mov	r5, r0
 800fe58:	4630      	mov	r0, r6
 800fe5a:	f7fe fd47 	bl	800e8ec <_malloc_r>
 800fe5e:	b948      	cbnz	r0, 800fe74 <__smakebuf_r+0x44>
 800fe60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fe64:	059a      	lsls	r2, r3, #22
 800fe66:	d4ef      	bmi.n	800fe48 <__smakebuf_r+0x18>
 800fe68:	f023 0303 	bic.w	r3, r3, #3
 800fe6c:	f043 0302 	orr.w	r3, r3, #2
 800fe70:	81a3      	strh	r3, [r4, #12]
 800fe72:	e7e3      	b.n	800fe3c <__smakebuf_r+0xc>
 800fe74:	4b0d      	ldr	r3, [pc, #52]	; (800feac <__smakebuf_r+0x7c>)
 800fe76:	62b3      	str	r3, [r6, #40]	; 0x28
 800fe78:	89a3      	ldrh	r3, [r4, #12]
 800fe7a:	6020      	str	r0, [r4, #0]
 800fe7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fe80:	81a3      	strh	r3, [r4, #12]
 800fe82:	9b00      	ldr	r3, [sp, #0]
 800fe84:	6120      	str	r0, [r4, #16]
 800fe86:	6163      	str	r3, [r4, #20]
 800fe88:	9b01      	ldr	r3, [sp, #4]
 800fe8a:	b15b      	cbz	r3, 800fea4 <__smakebuf_r+0x74>
 800fe8c:	4630      	mov	r0, r6
 800fe8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fe92:	f000 f86b 	bl	800ff6c <_isatty_r>
 800fe96:	b128      	cbz	r0, 800fea4 <__smakebuf_r+0x74>
 800fe98:	89a3      	ldrh	r3, [r4, #12]
 800fe9a:	f023 0303 	bic.w	r3, r3, #3
 800fe9e:	f043 0301 	orr.w	r3, r3, #1
 800fea2:	81a3      	strh	r3, [r4, #12]
 800fea4:	89a0      	ldrh	r0, [r4, #12]
 800fea6:	4305      	orrs	r5, r0
 800fea8:	81a5      	strh	r5, [r4, #12]
 800feaa:	e7cd      	b.n	800fe48 <__smakebuf_r+0x18>
 800feac:	0800f735 	.word	0x0800f735

0800feb0 <_malloc_usable_size_r>:
 800feb0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800feb4:	1f18      	subs	r0, r3, #4
 800feb6:	2b00      	cmp	r3, #0
 800feb8:	bfbc      	itt	lt
 800feba:	580b      	ldrlt	r3, [r1, r0]
 800febc:	18c0      	addlt	r0, r0, r3
 800febe:	4770      	bx	lr

0800fec0 <_raise_r>:
 800fec0:	291f      	cmp	r1, #31
 800fec2:	b538      	push	{r3, r4, r5, lr}
 800fec4:	4604      	mov	r4, r0
 800fec6:	460d      	mov	r5, r1
 800fec8:	d904      	bls.n	800fed4 <_raise_r+0x14>
 800feca:	2316      	movs	r3, #22
 800fecc:	6003      	str	r3, [r0, #0]
 800fece:	f04f 30ff 	mov.w	r0, #4294967295
 800fed2:	bd38      	pop	{r3, r4, r5, pc}
 800fed4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fed6:	b112      	cbz	r2, 800fede <_raise_r+0x1e>
 800fed8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fedc:	b94b      	cbnz	r3, 800fef2 <_raise_r+0x32>
 800fede:	4620      	mov	r0, r4
 800fee0:	f000 f830 	bl	800ff44 <_getpid_r>
 800fee4:	462a      	mov	r2, r5
 800fee6:	4601      	mov	r1, r0
 800fee8:	4620      	mov	r0, r4
 800feea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800feee:	f000 b817 	b.w	800ff20 <_kill_r>
 800fef2:	2b01      	cmp	r3, #1
 800fef4:	d00a      	beq.n	800ff0c <_raise_r+0x4c>
 800fef6:	1c59      	adds	r1, r3, #1
 800fef8:	d103      	bne.n	800ff02 <_raise_r+0x42>
 800fefa:	2316      	movs	r3, #22
 800fefc:	6003      	str	r3, [r0, #0]
 800fefe:	2001      	movs	r0, #1
 800ff00:	e7e7      	b.n	800fed2 <_raise_r+0x12>
 800ff02:	2400      	movs	r4, #0
 800ff04:	4628      	mov	r0, r5
 800ff06:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ff0a:	4798      	blx	r3
 800ff0c:	2000      	movs	r0, #0
 800ff0e:	e7e0      	b.n	800fed2 <_raise_r+0x12>

0800ff10 <raise>:
 800ff10:	4b02      	ldr	r3, [pc, #8]	; (800ff1c <raise+0xc>)
 800ff12:	4601      	mov	r1, r0
 800ff14:	6818      	ldr	r0, [r3, #0]
 800ff16:	f7ff bfd3 	b.w	800fec0 <_raise_r>
 800ff1a:	bf00      	nop
 800ff1c:	200001a4 	.word	0x200001a4

0800ff20 <_kill_r>:
 800ff20:	b538      	push	{r3, r4, r5, lr}
 800ff22:	2300      	movs	r3, #0
 800ff24:	4d06      	ldr	r5, [pc, #24]	; (800ff40 <_kill_r+0x20>)
 800ff26:	4604      	mov	r4, r0
 800ff28:	4608      	mov	r0, r1
 800ff2a:	4611      	mov	r1, r2
 800ff2c:	602b      	str	r3, [r5, #0]
 800ff2e:	f7f5 f9d4 	bl	80052da <_kill>
 800ff32:	1c43      	adds	r3, r0, #1
 800ff34:	d102      	bne.n	800ff3c <_kill_r+0x1c>
 800ff36:	682b      	ldr	r3, [r5, #0]
 800ff38:	b103      	cbz	r3, 800ff3c <_kill_r+0x1c>
 800ff3a:	6023      	str	r3, [r4, #0]
 800ff3c:	bd38      	pop	{r3, r4, r5, pc}
 800ff3e:	bf00      	nop
 800ff40:	200014ec 	.word	0x200014ec

0800ff44 <_getpid_r>:
 800ff44:	f7f5 b9c2 	b.w	80052cc <_getpid>

0800ff48 <_fstat_r>:
 800ff48:	b538      	push	{r3, r4, r5, lr}
 800ff4a:	2300      	movs	r3, #0
 800ff4c:	4d06      	ldr	r5, [pc, #24]	; (800ff68 <_fstat_r+0x20>)
 800ff4e:	4604      	mov	r4, r0
 800ff50:	4608      	mov	r0, r1
 800ff52:	4611      	mov	r1, r2
 800ff54:	602b      	str	r3, [r5, #0]
 800ff56:	f7f5 fa1e 	bl	8005396 <_fstat>
 800ff5a:	1c43      	adds	r3, r0, #1
 800ff5c:	d102      	bne.n	800ff64 <_fstat_r+0x1c>
 800ff5e:	682b      	ldr	r3, [r5, #0]
 800ff60:	b103      	cbz	r3, 800ff64 <_fstat_r+0x1c>
 800ff62:	6023      	str	r3, [r4, #0]
 800ff64:	bd38      	pop	{r3, r4, r5, pc}
 800ff66:	bf00      	nop
 800ff68:	200014ec 	.word	0x200014ec

0800ff6c <_isatty_r>:
 800ff6c:	b538      	push	{r3, r4, r5, lr}
 800ff6e:	2300      	movs	r3, #0
 800ff70:	4d05      	ldr	r5, [pc, #20]	; (800ff88 <_isatty_r+0x1c>)
 800ff72:	4604      	mov	r4, r0
 800ff74:	4608      	mov	r0, r1
 800ff76:	602b      	str	r3, [r5, #0]
 800ff78:	f7f5 fa1c 	bl	80053b4 <_isatty>
 800ff7c:	1c43      	adds	r3, r0, #1
 800ff7e:	d102      	bne.n	800ff86 <_isatty_r+0x1a>
 800ff80:	682b      	ldr	r3, [r5, #0]
 800ff82:	b103      	cbz	r3, 800ff86 <_isatty_r+0x1a>
 800ff84:	6023      	str	r3, [r4, #0]
 800ff86:	bd38      	pop	{r3, r4, r5, pc}
 800ff88:	200014ec 	.word	0x200014ec

0800ff8c <_init>:
 800ff8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff8e:	bf00      	nop
 800ff90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ff92:	bc08      	pop	{r3}
 800ff94:	469e      	mov	lr, r3
 800ff96:	4770      	bx	lr

0800ff98 <_fini>:
 800ff98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff9a:	bf00      	nop
 800ff9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ff9e:	bc08      	pop	{r3}
 800ffa0:	469e      	mov	lr, r3
 800ffa2:	4770      	bx	lr
 800ffa4:	0000      	movs	r0, r0
	...

0800ffa8 <__HAL_GPIO_EXTI_Callback_veneer>:
 800ffa8:	f85f f000 	ldr.w	pc, [pc]	; 800ffac <__HAL_GPIO_EXTI_Callback_veneer+0x4>
 800ffac:	200003ad 	.word	0x200003ad

Disassembly of section .data:

20000000 <USB_rx_command_buffer>:
20000000:	20000798 00000000 00010040              ... ....@...

2000000c <amp_target_speed>:
2000000c:	2b8cbccc                                ...+

20000010 <ramp_target_speed>:
20000010:	3dcccccd                                ...=

20000014 <DDS_target_multipiller>:
20000014:	00000001                                ....

20000018 <mode>:
20000018:	00000003                                ....

2000001c <DDS_clock_frequecny>:
2000001c:	4b189680                                ...K

20000020 <Display_need_wakeup>:
20000020:	                                         .

20000021 <CAL_STATE>:
20000021:	                                         ...

20000024 <SystemCoreClock>:
20000024:	001fff68                                h...

20000028 <TMP117_DeviceID>:
20000028:	00000092                                ....

2000002c <uwTickFreq>:
2000002c:	00000001                                ....

20000030 <uwTickPrio>:
20000030:	00000010                                ....

20000034 <USBD_CDC>:
20000034:	08009d95 08009d51 08009c8d 00000000     ....Q...........
20000044:	08009ba9 08009c45 08009c15 00000000     ....E...........
	...
2000005c:	08009be5 08009bd5 08009bf5 08009c05     ................

2000006c <USBD_CDC_CfgFSDesc>:
2000006c:	00430209 c0000102 00040932 02020100     ..C.....2.......
2000007c:	24050001 05011000 01000124 02022404     ...$....$....$..
2000008c:	00062405 82050701 10000803 00010409     .$..............
2000009c:	00000a02 01050700 00004002 02810507     .........@......
200000ac:	00000040                                @...

200000b0 <USBD_CDC_CfgHSDesc>:
200000b0:	00430209 c0000102 00040932 02020100     ..C.....2.......
200000c0:	24050001 05011000 01000124 02022404     ...$....$....$..
200000d0:	00062405 82050701 10000803 00010409     .$..............
200000e0:	00000a02 01050700 00020002 02810507     ................
200000f0:	00000200                                ....

200000f4 <USBD_CDC_DeviceQualifierDesc>:
200000f4:	0200060a 40000000 00000001              .......@....

20000100 <USBD_CDC_OtherSpeedCfgDesc>:
20000100:	00430709 c0040102 00040932 02020100     ..C.....2.......
20000110:	24050001 05011000 01000124 02022404     ...$....$....$..
20000120:	00062405 82050701 10000803 00010409     .$..............
20000130:	00000a02 01050700 00004002 02810507     .........@......
20000140:	00000040                                @...

20000144 <USBD_Interface_fops_FS>:
20000144:	0800a7b9 0800a7b5 0800a7e1 0800a7fd     ................

20000154 <FS_Desc>:
20000154:	0800a8a1 0800a8ad 0800a8b9 0800a8d5     ................
20000164:	0800a929 0800a8f1 0800a90d              )...........

20000170 <USBD_FS_DeviceDesc>:
20000170:	02000112 40000202 57400483 02010200     .......@..@W....
20000180:	00000103                                ....

20000184 <USBD_LangIDDesc>:
20000184:	04090304                                ....

20000188 <USBD_StringSerial>:
20000188:	0000031a 00000000 00000000 00000000     ................
	...

200001a4 <_impure_ptr>:
200001a4:	200001a8                                ... 

200001a8 <impure_data>:
200001a8:	00000000 080111b4 080111d4 08011194     ................
	...

20000208 <numempty>:
20000208:	000000ff                                ....

2000020c <__global_locale>:
2000020c:	00000043 00000000 00000000 00000000     C...............
	...
2000022c:	00000043 00000000 00000000 00000000     C...............
	...
2000024c:	00000043 00000000 00000000 00000000     C...............
	...
2000026c:	00000043 00000000 00000000 00000000     C...............
	...
2000028c:	00000043 00000000 00000000 00000000     C...............
	...
200002ac:	00000043 00000000 00000000 00000000     C...............
	...
200002cc:	00000043 00000000 00000000 00000000     C...............
	...
200002ec:	0800f519 0800de45 00000000 08010dc8     ....E...........
200002fc:	08010fbc 08011193 08011193 08011193     ................
2000030c:	08011193 08011193 08011193 08011193     ................
2000031c:	08011193 08011193 ffffffff ffffffff     ................
2000032c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000354:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000378 <DAC_Write_FAST>:
{
20000378:	b580      	push	{r7, lr}
2000037a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
2000037c:	2200      	movs	r2, #0
2000037e:	2110      	movs	r1, #16
20000380:	4807      	ldr	r0, [pc, #28]	; (200003a0 <DAC_Write_FAST+0x28>)
20000382:	f000 f8d9 	bl	20000538 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
20000386:	2302      	movs	r3, #2
20000388:	2202      	movs	r2, #2
2000038a:	4906      	ldr	r1, [pc, #24]	; (200003a4 <DAC_Write_FAST+0x2c>)
2000038c:	4806      	ldr	r0, [pc, #24]	; (200003a8 <DAC_Write_FAST+0x30>)
2000038e:	f000 f8d7 	bl	20000540 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
20000392:	2201      	movs	r2, #1
20000394:	2110      	movs	r1, #16
20000396:	4802      	ldr	r0, [pc, #8]	; (200003a0 <DAC_Write_FAST+0x28>)
20000398:	f000 f8ce 	bl	20000538 <__HAL_GPIO_WritePin_veneer>
}
2000039c:	bf00      	nop
2000039e:	bd80      	pop	{r7, pc}
200003a0:	40020000 	.word	0x40020000
200003a4:	200007dc 	.word	0x200007dc
200003a8:	20000820 	.word	0x20000820

200003ac <HAL_GPIO_EXTI_Callback>:
{
200003ac:	b580      	push	{r7, lr}
200003ae:	b082      	sub	sp, #8
200003b0:	af00      	add	r7, sp, #0
200003b2:	4603      	mov	r3, r0
200003b4:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == CPU_IRQ_Pin) // CPU_IRQ signal from Timebase CPLD
200003b6:	88fb      	ldrh	r3, [r7, #6]
200003b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
200003bc:	d17d      	bne.n	200004ba <HAL_GPIO_EXTI_Callback+0x10e>
		DAC_Write_FAST(); // Сначала стреляем, а потом уже разговариваем
200003be:	f7ff ffdb 	bl	20000378 <DAC_Write_FAST>
		Ramp_dac_step_complete=1;
200003c2:	4b53      	ldr	r3, [pc, #332]	; (20000510 <HAL_GPIO_EXTI_Callback+0x164>)
200003c4:	2201      	movs	r2, #1
200003c6:	701a      	strb	r2, [r3, #0]
		switch(DAC_code_direction)
200003c8:	4b52      	ldr	r3, [pc, #328]	; (20000514 <HAL_GPIO_EXTI_Callback+0x168>)
200003ca:	781b      	ldrb	r3, [r3, #0]
200003cc:	2b02      	cmp	r3, #2
200003ce:	d02d      	beq.n	2000042c <HAL_GPIO_EXTI_Callback+0x80>
200003d0:	2b02      	cmp	r3, #2
200003d2:	dc57      	bgt.n	20000484 <HAL_GPIO_EXTI_Callback+0xd8>
200003d4:	2b00      	cmp	r3, #0
200003d6:	d017      	beq.n	20000408 <HAL_GPIO_EXTI_Callback+0x5c>
200003d8:	2b01      	cmp	r3, #1
200003da:	d153      	bne.n	20000484 <HAL_GPIO_EXTI_Callback+0xd8>
			if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
200003dc:	4b4e      	ldr	r3, [pc, #312]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
200003de:	681b      	ldr	r3, [r3, #0]
200003e0:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
200003e4:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
200003e8:	4a4c      	ldr	r2, [pc, #304]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
200003ea:	6812      	ldr	r2, [r2, #0]
200003ec:	4293      	cmp	r3, r2
200003ee:	d307      	bcc.n	20000400 <HAL_GPIO_EXTI_Callback+0x54>
				DAC_code+=DDS_target_multipiller;
200003f0:	4b4a      	ldr	r3, [pc, #296]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
200003f2:	681a      	ldr	r2, [r3, #0]
200003f4:	4b48      	ldr	r3, [pc, #288]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
200003f6:	681b      	ldr	r3, [r3, #0]
200003f8:	4413      	add	r3, r2
200003fa:	4a48      	ldr	r2, [pc, #288]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
200003fc:	6013      	str	r3, [r2, #0]
			break;
200003fe:	e041      	b.n	20000484 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
20000400:	2000      	movs	r0, #0
20000402:	f000 f8a1 	bl	20000548 <__CPLD_control_veneer>
				return;
20000406:	e07f      	b.n	20000508 <HAL_GPIO_EXTI_Callback+0x15c>
			if(DAC_code>=DDS_target_multipiller)
20000408:	4b44      	ldr	r3, [pc, #272]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
2000040a:	681a      	ldr	r2, [r3, #0]
2000040c:	4b42      	ldr	r3, [pc, #264]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
2000040e:	681b      	ldr	r3, [r3, #0]
20000410:	429a      	cmp	r2, r3
20000412:	d307      	bcc.n	20000424 <HAL_GPIO_EXTI_Callback+0x78>
				DAC_code-=DDS_target_multipiller;
20000414:	4b41      	ldr	r3, [pc, #260]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000416:	681a      	ldr	r2, [r3, #0]
20000418:	4b3f      	ldr	r3, [pc, #252]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
2000041a:	681b      	ldr	r3, [r3, #0]
2000041c:	1ad3      	subs	r3, r2, r3
2000041e:	4a3f      	ldr	r2, [pc, #252]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000420:	6013      	str	r3, [r2, #0]
			break;
20000422:	e02f      	b.n	20000484 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
20000424:	2000      	movs	r0, #0
20000426:	f000 f88f 	bl	20000548 <__CPLD_control_veneer>
				return;
2000042a:	e06d      	b.n	20000508 <HAL_GPIO_EXTI_Callback+0x15c>
			if(DAC_code_direction_for_cycle_mode == 1)
2000042c:	4b3c      	ldr	r3, [pc, #240]	; (20000520 <HAL_GPIO_EXTI_Callback+0x174>)
2000042e:	781b      	ldrb	r3, [r3, #0]
20000430:	2b01      	cmp	r3, #1
20000432:	d115      	bne.n	20000460 <HAL_GPIO_EXTI_Callback+0xb4>
				if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
20000434:	4b38      	ldr	r3, [pc, #224]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
20000436:	681b      	ldr	r3, [r3, #0]
20000438:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
2000043c:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
20000440:	4a36      	ldr	r2, [pc, #216]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000442:	6812      	ldr	r2, [r2, #0]
20000444:	4293      	cmp	r3, r2
20000446:	d307      	bcc.n	20000458 <HAL_GPIO_EXTI_Callback+0xac>
					DAC_code+=DDS_target_multipiller;
20000448:	4b34      	ldr	r3, [pc, #208]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
2000044a:	681a      	ldr	r2, [r3, #0]
2000044c:	4b32      	ldr	r3, [pc, #200]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
2000044e:	681b      	ldr	r3, [r3, #0]
20000450:	4413      	add	r3, r2
20000452:	4a32      	ldr	r2, [pc, #200]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000454:	6013      	str	r3, [r2, #0]
			break;
20000456:	e014      	b.n	20000482 <HAL_GPIO_EXTI_Callback+0xd6>
				} else  DAC_code_direction_for_cycle_mode=0;
20000458:	4b31      	ldr	r3, [pc, #196]	; (20000520 <HAL_GPIO_EXTI_Callback+0x174>)
2000045a:	2200      	movs	r2, #0
2000045c:	701a      	strb	r2, [r3, #0]
			break;
2000045e:	e010      	b.n	20000482 <HAL_GPIO_EXTI_Callback+0xd6>
				if(DAC_code>=DDS_target_multipiller)
20000460:	4b2e      	ldr	r3, [pc, #184]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000462:	681a      	ldr	r2, [r3, #0]
20000464:	4b2c      	ldr	r3, [pc, #176]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
20000466:	681b      	ldr	r3, [r3, #0]
20000468:	429a      	cmp	r2, r3
2000046a:	d307      	bcc.n	2000047c <HAL_GPIO_EXTI_Callback+0xd0>
					DAC_code-=DDS_target_multipiller;
2000046c:	4b2b      	ldr	r3, [pc, #172]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
2000046e:	681a      	ldr	r2, [r3, #0]
20000470:	4b29      	ldr	r3, [pc, #164]	; (20000518 <HAL_GPIO_EXTI_Callback+0x16c>)
20000472:	681b      	ldr	r3, [r3, #0]
20000474:	1ad3      	subs	r3, r2, r3
20000476:	4a29      	ldr	r2, [pc, #164]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
20000478:	6013      	str	r3, [r2, #0]
			break;
2000047a:	e002      	b.n	20000482 <HAL_GPIO_EXTI_Callback+0xd6>
				} else DAC_code_direction_for_cycle_mode=1;
2000047c:	4b28      	ldr	r3, [pc, #160]	; (20000520 <HAL_GPIO_EXTI_Callback+0x174>)
2000047e:	2201      	movs	r2, #1
20000480:	701a      	strb	r2, [r3, #0]
			break;
20000482:	bf00      	nop
		DAC_tx_buffer=0x01000000; // Write DAC-DATA
20000484:	4b27      	ldr	r3, [pc, #156]	; (20000524 <HAL_GPIO_EXTI_Callback+0x178>)
20000486:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
2000048a:	601a      	str	r2, [r3, #0]
		DAC_tx_buffer+=(DAC_code & 0xFFFFF)<<4;
2000048c:	4b23      	ldr	r3, [pc, #140]	; (2000051c <HAL_GPIO_EXTI_Callback+0x170>)
2000048e:	681b      	ldr	r3, [r3, #0]
20000490:	011b      	lsls	r3, r3, #4
20000492:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
20000496:	f023 030f 	bic.w	r3, r3, #15
2000049a:	4a22      	ldr	r2, [pc, #136]	; (20000524 <HAL_GPIO_EXTI_Callback+0x178>)
2000049c:	6812      	ldr	r2, [r2, #0]
2000049e:	4413      	add	r3, r2
200004a0:	4a20      	ldr	r2, [pc, #128]	; (20000524 <HAL_GPIO_EXTI_Callback+0x178>)
200004a2:	6013      	str	r3, [r2, #0]
		DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
200004a4:	4b1f      	ldr	r3, [pc, #124]	; (20000524 <HAL_GPIO_EXTI_Callback+0x178>)
200004a6:	681b      	ldr	r3, [r3, #0]
200004a8:	0c1b      	lsrs	r3, r3, #16
200004aa:	b29a      	uxth	r2, r3
200004ac:	4b1e      	ldr	r3, [pc, #120]	; (20000528 <HAL_GPIO_EXTI_Callback+0x17c>)
200004ae:	801a      	strh	r2, [r3, #0]
		DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
200004b0:	4b1c      	ldr	r3, [pc, #112]	; (20000524 <HAL_GPIO_EXTI_Callback+0x178>)
200004b2:	681b      	ldr	r3, [r3, #0]
200004b4:	b29a      	uxth	r2, r3
200004b6:	4b1c      	ldr	r3, [pc, #112]	; (20000528 <HAL_GPIO_EXTI_Callback+0x17c>)
200004b8:	805a      	strh	r2, [r3, #2]
	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
200004ba:	88fb      	ldrh	r3, [r7, #6]
200004bc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
200004c0:	d003      	beq.n	200004ca <HAL_GPIO_EXTI_Callback+0x11e>
200004c2:	88fb      	ldrh	r3, [r7, #6]
200004c4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
200004c8:	d102      	bne.n	200004d0 <HAL_GPIO_EXTI_Callback+0x124>
200004ca:	4b18      	ldr	r3, [pc, #96]	; (2000052c <HAL_GPIO_EXTI_Callback+0x180>)
200004cc:	2201      	movs	r2, #1
200004ce:	701a      	strb	r2, [r3, #0]
	if(GPIO_Pin == Encode_Push_Pin)
200004d0:	88fb      	ldrh	r3, [r7, #6]
200004d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
200004d6:	d10c      	bne.n	200004f2 <HAL_GPIO_EXTI_Callback+0x146>
		mode++;
200004d8:	4b15      	ldr	r3, [pc, #84]	; (20000530 <HAL_GPIO_EXTI_Callback+0x184>)
200004da:	781b      	ldrb	r3, [r3, #0]
200004dc:	3301      	adds	r3, #1
200004de:	b2da      	uxtb	r2, r3
200004e0:	4b13      	ldr	r3, [pc, #76]	; (20000530 <HAL_GPIO_EXTI_Callback+0x184>)
200004e2:	701a      	strb	r2, [r3, #0]
		if(mode>VOLT_SCREEN)
200004e4:	4b12      	ldr	r3, [pc, #72]	; (20000530 <HAL_GPIO_EXTI_Callback+0x184>)
200004e6:	781b      	ldrb	r3, [r3, #0]
200004e8:	2b05      	cmp	r3, #5
200004ea:	d902      	bls.n	200004f2 <HAL_GPIO_EXTI_Callback+0x146>
			mode=dU_dt_SCREEN;
200004ec:	4b10      	ldr	r3, [pc, #64]	; (20000530 <HAL_GPIO_EXTI_Callback+0x184>)
200004ee:	2203      	movs	r2, #3
200004f0:	701a      	strb	r2, [r3, #0]
	if(GPIO_Pin == Start_button_Pin)
200004f2:	88fb      	ldrh	r3, [r7, #6]
200004f4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
200004f8:	d106      	bne.n	20000508 <HAL_GPIO_EXTI_Callback+0x15c>
		if(Push_start_button==0)Push_start_button=1;
200004fa:	4b0e      	ldr	r3, [pc, #56]	; (20000534 <HAL_GPIO_EXTI_Callback+0x188>)
200004fc:	781b      	ldrb	r3, [r3, #0]
200004fe:	2b00      	cmp	r3, #0
20000500:	d102      	bne.n	20000508 <HAL_GPIO_EXTI_Callback+0x15c>
20000502:	4b0c      	ldr	r3, [pc, #48]	; (20000534 <HAL_GPIO_EXTI_Callback+0x188>)
20000504:	2201      	movs	r2, #1
20000506:	701a      	strb	r2, [r3, #0]
}
20000508:	3708      	adds	r7, #8
2000050a:	46bd      	mov	sp, r7
2000050c:	bd80      	pop	{r7, pc}
2000050e:	bf00      	nop
20000510:	20000819 	.word	0x20000819
20000514:	20000814 	.word	0x20000814
20000518:	20000014 	.word	0x20000014
2000051c:	20000810 	.word	0x20000810
20000520:	20000815 	.word	0x20000815
20000524:	200007d8 	.word	0x200007d8
20000528:	200007dc 	.word	0x200007dc
2000052c:	20000020 	.word	0x20000020
20000530:	20000018 	.word	0x20000018
20000534:	2000081b 	.word	0x2000081b

20000538 <__HAL_GPIO_WritePin_veneer>:
20000538:	f85f f000 	ldr.w	pc, [pc]	; 2000053c <__HAL_GPIO_WritePin_veneer+0x4>
2000053c:	08005ff5 	.word	0x08005ff5

20000540 <__HAL_SPI_Transmit_veneer>:
20000540:	f85f f000 	ldr.w	pc, [pc]	; 20000544 <__HAL_SPI_Transmit_veneer+0x4>
20000544:	080080fd 	.word	0x080080fd

20000548 <__CPLD_control_veneer>:
20000548:	f85f f000 	ldr.w	pc, [pc]	; 2000054c <__CPLD_control_veneer+0x4>
2000054c:	080017c1 	.word	0x080017c1
