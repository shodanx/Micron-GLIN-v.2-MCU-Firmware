
Micron-GLIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000102c0  08000140  08000140  00010140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000012dc  08010400  08010400  00020400  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080116dc  080116dc  000306f0  2**0
                  CONTENTS
  4 .ARM          00000008  080116dc  080116dc  000216dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080116e4  080116e4  000306f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080116e4  080116e4  000216e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080116e8  080116e8  000216e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000006f0  20000000  080116ec  00030000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .bss          00000fac  200006f0  08011ddc  000306f0  2**2
                  ALLOC
 10 ._user_heap_stack 00001c04  2000169c  08011ddc  0003169c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000306f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008878  00000000  00000000  00030719  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001bb3  00000000  00000000  00038f91  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005e8  00000000  00000000  0003ab48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004f0  00000000  00000000  0003b130  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016889  00000000  00000000  0003b620  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00009ad5  00000000  00000000  00051ea9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083f1c  00000000  00000000  0005b97e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000df89a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002efc  00000000  00000000  000df8ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	200006f0 	.word	0x200006f0
 800015c:	00000000 	.word	0x00000000
 8000160:	080103cc 	.word	0x080103cc

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	200006f4 	.word	0x200006f4
 800017c:	080103cc 	.word	0x080103cc

08000180 <strcmp>:
 8000180:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000184:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000188:	2a01      	cmp	r2, #1
 800018a:	bf28      	it	cs
 800018c:	429a      	cmpcs	r2, r3
 800018e:	d0f7      	beq.n	8000180 <strcmp>
 8000190:	1ad0      	subs	r0, r2, r3
 8000192:	4770      	bx	lr

08000194 <strlen>:
 8000194:	4603      	mov	r3, r0
 8000196:	f813 2b01 	ldrb.w	r2, [r3], #1
 800019a:	2a00      	cmp	r2, #0
 800019c:	d1fb      	bne.n	8000196 <strlen+0x2>
 800019e:	1a18      	subs	r0, r3, r0
 80001a0:	3801      	subs	r0, #1
 80001a2:	4770      	bx	lr

080001a4 <__aeabi_drsub>:
 80001a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001a8:	e002      	b.n	80001b0 <__adddf3>
 80001aa:	bf00      	nop

080001ac <__aeabi_dsub>:
 80001ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001b0 <__adddf3>:
 80001b0:	b530      	push	{r4, r5, lr}
 80001b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ba:	ea94 0f05 	teq	r4, r5
 80001be:	bf08      	it	eq
 80001c0:	ea90 0f02 	teqeq	r0, r2
 80001c4:	bf1f      	itttt	ne
 80001c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001d6:	f000 80e2 	beq.w	800039e <__adddf3+0x1ee>
 80001da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001e2:	bfb8      	it	lt
 80001e4:	426d      	neglt	r5, r5
 80001e6:	dd0c      	ble.n	8000202 <__adddf3+0x52>
 80001e8:	442c      	add	r4, r5
 80001ea:	ea80 0202 	eor.w	r2, r0, r2
 80001ee:	ea81 0303 	eor.w	r3, r1, r3
 80001f2:	ea82 0000 	eor.w	r0, r2, r0
 80001f6:	ea83 0101 	eor.w	r1, r3, r1
 80001fa:	ea80 0202 	eor.w	r2, r0, r2
 80001fe:	ea81 0303 	eor.w	r3, r1, r3
 8000202:	2d36      	cmp	r5, #54	; 0x36
 8000204:	bf88      	it	hi
 8000206:	bd30      	pophi	{r4, r5, pc}
 8000208:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800020c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000210:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000214:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x70>
 800021a:	4240      	negs	r0, r0
 800021c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000220:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000224:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000228:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800022c:	d002      	beq.n	8000234 <__adddf3+0x84>
 800022e:	4252      	negs	r2, r2
 8000230:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000234:	ea94 0f05 	teq	r4, r5
 8000238:	f000 80a7 	beq.w	800038a <__adddf3+0x1da>
 800023c:	f1a4 0401 	sub.w	r4, r4, #1
 8000240:	f1d5 0e20 	rsbs	lr, r5, #32
 8000244:	db0d      	blt.n	8000262 <__adddf3+0xb2>
 8000246:	fa02 fc0e 	lsl.w	ip, r2, lr
 800024a:	fa22 f205 	lsr.w	r2, r2, r5
 800024e:	1880      	adds	r0, r0, r2
 8000250:	f141 0100 	adc.w	r1, r1, #0
 8000254:	fa03 f20e 	lsl.w	r2, r3, lr
 8000258:	1880      	adds	r0, r0, r2
 800025a:	fa43 f305 	asr.w	r3, r3, r5
 800025e:	4159      	adcs	r1, r3
 8000260:	e00e      	b.n	8000280 <__adddf3+0xd0>
 8000262:	f1a5 0520 	sub.w	r5, r5, #32
 8000266:	f10e 0e20 	add.w	lr, lr, #32
 800026a:	2a01      	cmp	r2, #1
 800026c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000270:	bf28      	it	cs
 8000272:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000276:	fa43 f305 	asr.w	r3, r3, r5
 800027a:	18c0      	adds	r0, r0, r3
 800027c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000280:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000284:	d507      	bpl.n	8000296 <__adddf3+0xe6>
 8000286:	f04f 0e00 	mov.w	lr, #0
 800028a:	f1dc 0c00 	rsbs	ip, ip, #0
 800028e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000292:	eb6e 0101 	sbc.w	r1, lr, r1
 8000296:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800029a:	d31b      	bcc.n	80002d4 <__adddf3+0x124>
 800029c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002a0:	d30c      	bcc.n	80002bc <__adddf3+0x10c>
 80002a2:	0849      	lsrs	r1, r1, #1
 80002a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80002a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002ac:	f104 0401 	add.w	r4, r4, #1
 80002b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002b8:	f080 809a 	bcs.w	80003f0 <__adddf3+0x240>
 80002bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002c0:	bf08      	it	eq
 80002c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002c6:	f150 0000 	adcs.w	r0, r0, #0
 80002ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ce:	ea41 0105 	orr.w	r1, r1, r5
 80002d2:	bd30      	pop	{r4, r5, pc}
 80002d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002d8:	4140      	adcs	r0, r0
 80002da:	eb41 0101 	adc.w	r1, r1, r1
 80002de:	3c01      	subs	r4, #1
 80002e0:	bf28      	it	cs
 80002e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002e6:	d2e9      	bcs.n	80002bc <__adddf3+0x10c>
 80002e8:	f091 0f00 	teq	r1, #0
 80002ec:	bf04      	itt	eq
 80002ee:	4601      	moveq	r1, r0
 80002f0:	2000      	moveq	r0, #0
 80002f2:	fab1 f381 	clz	r3, r1
 80002f6:	bf08      	it	eq
 80002f8:	3320      	addeq	r3, #32
 80002fa:	f1a3 030b 	sub.w	r3, r3, #11
 80002fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000302:	da0c      	bge.n	800031e <__adddf3+0x16e>
 8000304:	320c      	adds	r2, #12
 8000306:	dd08      	ble.n	800031a <__adddf3+0x16a>
 8000308:	f102 0c14 	add.w	ip, r2, #20
 800030c:	f1c2 020c 	rsb	r2, r2, #12
 8000310:	fa01 f00c 	lsl.w	r0, r1, ip
 8000314:	fa21 f102 	lsr.w	r1, r1, r2
 8000318:	e00c      	b.n	8000334 <__adddf3+0x184>
 800031a:	f102 0214 	add.w	r2, r2, #20
 800031e:	bfd8      	it	le
 8000320:	f1c2 0c20 	rsble	ip, r2, #32
 8000324:	fa01 f102 	lsl.w	r1, r1, r2
 8000328:	fa20 fc0c 	lsr.w	ip, r0, ip
 800032c:	bfdc      	itt	le
 800032e:	ea41 010c 	orrle.w	r1, r1, ip
 8000332:	4090      	lslle	r0, r2
 8000334:	1ae4      	subs	r4, r4, r3
 8000336:	bfa2      	ittt	ge
 8000338:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800033c:	4329      	orrge	r1, r5
 800033e:	bd30      	popge	{r4, r5, pc}
 8000340:	ea6f 0404 	mvn.w	r4, r4
 8000344:	3c1f      	subs	r4, #31
 8000346:	da1c      	bge.n	8000382 <__adddf3+0x1d2>
 8000348:	340c      	adds	r4, #12
 800034a:	dc0e      	bgt.n	800036a <__adddf3+0x1ba>
 800034c:	f104 0414 	add.w	r4, r4, #20
 8000350:	f1c4 0220 	rsb	r2, r4, #32
 8000354:	fa20 f004 	lsr.w	r0, r0, r4
 8000358:	fa01 f302 	lsl.w	r3, r1, r2
 800035c:	ea40 0003 	orr.w	r0, r0, r3
 8000360:	fa21 f304 	lsr.w	r3, r1, r4
 8000364:	ea45 0103 	orr.w	r1, r5, r3
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	f1c4 040c 	rsb	r4, r4, #12
 800036e:	f1c4 0220 	rsb	r2, r4, #32
 8000372:	fa20 f002 	lsr.w	r0, r0, r2
 8000376:	fa01 f304 	lsl.w	r3, r1, r4
 800037a:	ea40 0003 	orr.w	r0, r0, r3
 800037e:	4629      	mov	r1, r5
 8000380:	bd30      	pop	{r4, r5, pc}
 8000382:	fa21 f004 	lsr.w	r0, r1, r4
 8000386:	4629      	mov	r1, r5
 8000388:	bd30      	pop	{r4, r5, pc}
 800038a:	f094 0f00 	teq	r4, #0
 800038e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000392:	bf06      	itte	eq
 8000394:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000398:	3401      	addeq	r4, #1
 800039a:	3d01      	subne	r5, #1
 800039c:	e74e      	b.n	800023c <__adddf3+0x8c>
 800039e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003a2:	bf18      	it	ne
 80003a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003a8:	d029      	beq.n	80003fe <__adddf3+0x24e>
 80003aa:	ea94 0f05 	teq	r4, r5
 80003ae:	bf08      	it	eq
 80003b0:	ea90 0f02 	teqeq	r0, r2
 80003b4:	d005      	beq.n	80003c2 <__adddf3+0x212>
 80003b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ba:	bf04      	itt	eq
 80003bc:	4619      	moveq	r1, r3
 80003be:	4610      	moveq	r0, r2
 80003c0:	bd30      	pop	{r4, r5, pc}
 80003c2:	ea91 0f03 	teq	r1, r3
 80003c6:	bf1e      	ittt	ne
 80003c8:	2100      	movne	r1, #0
 80003ca:	2000      	movne	r0, #0
 80003cc:	bd30      	popne	{r4, r5, pc}
 80003ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003d2:	d105      	bne.n	80003e0 <__adddf3+0x230>
 80003d4:	0040      	lsls	r0, r0, #1
 80003d6:	4149      	adcs	r1, r1
 80003d8:	bf28      	it	cs
 80003da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003e4:	bf3c      	itt	cc
 80003e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003ea:	bd30      	popcc	{r4, r5, pc}
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003f8:	f04f 0000 	mov.w	r0, #0
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000402:	bf1a      	itte	ne
 8000404:	4619      	movne	r1, r3
 8000406:	4610      	movne	r0, r2
 8000408:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800040c:	bf1c      	itt	ne
 800040e:	460b      	movne	r3, r1
 8000410:	4602      	movne	r2, r0
 8000412:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000416:	bf06      	itte	eq
 8000418:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800041c:	ea91 0f03 	teqeq	r1, r3
 8000420:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	bf00      	nop

08000428 <__aeabi_ui2d>:
 8000428:	f090 0f00 	teq	r0, #0
 800042c:	bf04      	itt	eq
 800042e:	2100      	moveq	r1, #0
 8000430:	4770      	bxeq	lr
 8000432:	b530      	push	{r4, r5, lr}
 8000434:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000438:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800043c:	f04f 0500 	mov.w	r5, #0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e750      	b.n	80002e8 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_i2d>:
 8000448:	f090 0f00 	teq	r0, #0
 800044c:	bf04      	itt	eq
 800044e:	2100      	moveq	r1, #0
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000458:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800045c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000460:	bf48      	it	mi
 8000462:	4240      	negmi	r0, r0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e73e      	b.n	80002e8 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_f2d>:
 800046c:	0042      	lsls	r2, r0, #1
 800046e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000472:	ea4f 0131 	mov.w	r1, r1, rrx
 8000476:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800047a:	bf1f      	itttt	ne
 800047c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000480:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000484:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000488:	4770      	bxne	lr
 800048a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800048e:	bf08      	it	eq
 8000490:	4770      	bxeq	lr
 8000492:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000496:	bf04      	itt	eq
 8000498:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800049c:	4770      	bxeq	lr
 800049e:	b530      	push	{r4, r5, lr}
 80004a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004ac:	e71c      	b.n	80002e8 <__adddf3+0x138>
 80004ae:	bf00      	nop

080004b0 <__aeabi_ul2d>:
 80004b0:	ea50 0201 	orrs.w	r2, r0, r1
 80004b4:	bf08      	it	eq
 80004b6:	4770      	bxeq	lr
 80004b8:	b530      	push	{r4, r5, lr}
 80004ba:	f04f 0500 	mov.w	r5, #0
 80004be:	e00a      	b.n	80004d6 <__aeabi_l2d+0x16>

080004c0 <__aeabi_l2d>:
 80004c0:	ea50 0201 	orrs.w	r2, r0, r1
 80004c4:	bf08      	it	eq
 80004c6:	4770      	bxeq	lr
 80004c8:	b530      	push	{r4, r5, lr}
 80004ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004ce:	d502      	bpl.n	80004d6 <__aeabi_l2d+0x16>
 80004d0:	4240      	negs	r0, r0
 80004d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004e2:	f43f aed8 	beq.w	8000296 <__adddf3+0xe6>
 80004e6:	f04f 0203 	mov.w	r2, #3
 80004ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ee:	bf18      	it	ne
 80004f0:	3203      	addne	r2, #3
 80004f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004f6:	bf18      	it	ne
 80004f8:	3203      	addne	r2, #3
 80004fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004fe:	f1c2 0320 	rsb	r3, r2, #32
 8000502:	fa00 fc03 	lsl.w	ip, r0, r3
 8000506:	fa20 f002 	lsr.w	r0, r0, r2
 800050a:	fa01 fe03 	lsl.w	lr, r1, r3
 800050e:	ea40 000e 	orr.w	r0, r0, lr
 8000512:	fa21 f102 	lsr.w	r1, r1, r2
 8000516:	4414      	add	r4, r2
 8000518:	e6bd      	b.n	8000296 <__adddf3+0xe6>
 800051a:	bf00      	nop

0800051c <__aeabi_dmul>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000522:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000526:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800052a:	bf1d      	ittte	ne
 800052c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000530:	ea94 0f0c 	teqne	r4, ip
 8000534:	ea95 0f0c 	teqne	r5, ip
 8000538:	f000 f8de 	bleq	80006f8 <__aeabi_dmul+0x1dc>
 800053c:	442c      	add	r4, r5
 800053e:	ea81 0603 	eor.w	r6, r1, r3
 8000542:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000546:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800054a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800054e:	bf18      	it	ne
 8000550:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000554:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000558:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800055c:	d038      	beq.n	80005d0 <__aeabi_dmul+0xb4>
 800055e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000562:	f04f 0500 	mov.w	r5, #0
 8000566:	fbe1 e502 	umlal	lr, r5, r1, r2
 800056a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800056e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000572:	f04f 0600 	mov.w	r6, #0
 8000576:	fbe1 5603 	umlal	r5, r6, r1, r3
 800057a:	f09c 0f00 	teq	ip, #0
 800057e:	bf18      	it	ne
 8000580:	f04e 0e01 	orrne.w	lr, lr, #1
 8000584:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000588:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800058c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000590:	d204      	bcs.n	800059c <__aeabi_dmul+0x80>
 8000592:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000596:	416d      	adcs	r5, r5
 8000598:	eb46 0606 	adc.w	r6, r6, r6
 800059c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005b0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005b4:	bf88      	it	hi
 80005b6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ba:	d81e      	bhi.n	80005fa <__aeabi_dmul+0xde>
 80005bc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005c0:	bf08      	it	eq
 80005c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005c6:	f150 0000 	adcs.w	r0, r0, #0
 80005ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ce:	bd70      	pop	{r4, r5, r6, pc}
 80005d0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005d4:	ea46 0101 	orr.w	r1, r6, r1
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	ea81 0103 	eor.w	r1, r1, r3
 80005e0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005e4:	bfc2      	ittt	gt
 80005e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ee:	bd70      	popgt	{r4, r5, r6, pc}
 80005f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005f4:	f04f 0e00 	mov.w	lr, #0
 80005f8:	3c01      	subs	r4, #1
 80005fa:	f300 80ab 	bgt.w	8000754 <__aeabi_dmul+0x238>
 80005fe:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000602:	bfde      	ittt	le
 8000604:	2000      	movle	r0, #0
 8000606:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800060a:	bd70      	pople	{r4, r5, r6, pc}
 800060c:	f1c4 0400 	rsb	r4, r4, #0
 8000610:	3c20      	subs	r4, #32
 8000612:	da35      	bge.n	8000680 <__aeabi_dmul+0x164>
 8000614:	340c      	adds	r4, #12
 8000616:	dc1b      	bgt.n	8000650 <__aeabi_dmul+0x134>
 8000618:	f104 0414 	add.w	r4, r4, #20
 800061c:	f1c4 0520 	rsb	r5, r4, #32
 8000620:	fa00 f305 	lsl.w	r3, r0, r5
 8000624:	fa20 f004 	lsr.w	r0, r0, r4
 8000628:	fa01 f205 	lsl.w	r2, r1, r5
 800062c:	ea40 0002 	orr.w	r0, r0, r2
 8000630:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000634:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	fa21 f604 	lsr.w	r6, r1, r4
 8000640:	eb42 0106 	adc.w	r1, r2, r6
 8000644:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000648:	bf08      	it	eq
 800064a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f1c4 040c 	rsb	r4, r4, #12
 8000654:	f1c4 0520 	rsb	r5, r4, #32
 8000658:	fa00 f304 	lsl.w	r3, r0, r4
 800065c:	fa20 f005 	lsr.w	r0, r0, r5
 8000660:	fa01 f204 	lsl.w	r2, r1, r4
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	f141 0100 	adc.w	r1, r1, #0
 8000674:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000678:	bf08      	it	eq
 800067a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067e:	bd70      	pop	{r4, r5, r6, pc}
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f205 	lsl.w	r2, r0, r5
 8000688:	ea4e 0e02 	orr.w	lr, lr, r2
 800068c:	fa20 f304 	lsr.w	r3, r0, r4
 8000690:	fa01 f205 	lsl.w	r2, r1, r5
 8000694:	ea43 0302 	orr.w	r3, r3, r2
 8000698:	fa21 f004 	lsr.w	r0, r1, r4
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	fa21 f204 	lsr.w	r2, r1, r4
 80006a4:	ea20 0002 	bic.w	r0, r0, r2
 80006a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006b0:	bf08      	it	eq
 80006b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b6:	bd70      	pop	{r4, r5, r6, pc}
 80006b8:	f094 0f00 	teq	r4, #0
 80006bc:	d10f      	bne.n	80006de <__aeabi_dmul+0x1c2>
 80006be:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006c2:	0040      	lsls	r0, r0, #1
 80006c4:	eb41 0101 	adc.w	r1, r1, r1
 80006c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006cc:	bf08      	it	eq
 80006ce:	3c01      	subeq	r4, #1
 80006d0:	d0f7      	beq.n	80006c2 <__aeabi_dmul+0x1a6>
 80006d2:	ea41 0106 	orr.w	r1, r1, r6
 80006d6:	f095 0f00 	teq	r5, #0
 80006da:	bf18      	it	ne
 80006dc:	4770      	bxne	lr
 80006de:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006e2:	0052      	lsls	r2, r2, #1
 80006e4:	eb43 0303 	adc.w	r3, r3, r3
 80006e8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006ec:	bf08      	it	eq
 80006ee:	3d01      	subeq	r5, #1
 80006f0:	d0f7      	beq.n	80006e2 <__aeabi_dmul+0x1c6>
 80006f2:	ea43 0306 	orr.w	r3, r3, r6
 80006f6:	4770      	bx	lr
 80006f8:	ea94 0f0c 	teq	r4, ip
 80006fc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000700:	bf18      	it	ne
 8000702:	ea95 0f0c 	teqne	r5, ip
 8000706:	d00c      	beq.n	8000722 <__aeabi_dmul+0x206>
 8000708:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800070c:	bf18      	it	ne
 800070e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000712:	d1d1      	bne.n	80006b8 <__aeabi_dmul+0x19c>
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000726:	bf06      	itte	eq
 8000728:	4610      	moveq	r0, r2
 800072a:	4619      	moveq	r1, r3
 800072c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000730:	d019      	beq.n	8000766 <__aeabi_dmul+0x24a>
 8000732:	ea94 0f0c 	teq	r4, ip
 8000736:	d102      	bne.n	800073e <__aeabi_dmul+0x222>
 8000738:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800073c:	d113      	bne.n	8000766 <__aeabi_dmul+0x24a>
 800073e:	ea95 0f0c 	teq	r5, ip
 8000742:	d105      	bne.n	8000750 <__aeabi_dmul+0x234>
 8000744:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000748:	bf1c      	itt	ne
 800074a:	4610      	movne	r0, r2
 800074c:	4619      	movne	r1, r3
 800074e:	d10a      	bne.n	8000766 <__aeabi_dmul+0x24a>
 8000750:	ea81 0103 	eor.w	r1, r1, r3
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800075c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800076a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800076e:	bd70      	pop	{r4, r5, r6, pc}

08000770 <__aeabi_ddiv>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8a7 	bleq	80008de <__aeabi_ddiv+0x16e>
 8000790:	eba4 0405 	sub.w	r4, r4, r5
 8000794:	ea81 0e03 	eor.w	lr, r1, r3
 8000798:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800079c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007a0:	f000 8088 	beq.w	80008b4 <__aeabi_ddiv+0x144>
 80007a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007a8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007c4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007c8:	429d      	cmp	r5, r3
 80007ca:	bf08      	it	eq
 80007cc:	4296      	cmpeq	r6, r2
 80007ce:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007d2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007d6:	d202      	bcs.n	80007de <__aeabi_ddiv+0x6e>
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	1ab6      	subs	r6, r6, r2
 80007e0:	eb65 0503 	sbc.w	r5, r5, r3
 80007e4:	085b      	lsrs	r3, r3, #1
 80007e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ee:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fa:	bf22      	ittt	cs
 80007fc:	1ab6      	subcs	r6, r6, r2
 80007fe:	4675      	movcs	r5, lr
 8000800:	ea40 000c 	orrcs.w	r0, r0, ip
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	ebb6 0e02 	subs.w	lr, r6, r2
 800080e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000812:	bf22      	ittt	cs
 8000814:	1ab6      	subcs	r6, r6, r2
 8000816:	4675      	movcs	r5, lr
 8000818:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800081c:	085b      	lsrs	r3, r3, #1
 800081e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000822:	ebb6 0e02 	subs.w	lr, r6, r2
 8000826:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082a:	bf22      	ittt	cs
 800082c:	1ab6      	subcs	r6, r6, r2
 800082e:	4675      	movcs	r5, lr
 8000830:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000834:	085b      	lsrs	r3, r3, #1
 8000836:	ea4f 0232 	mov.w	r2, r2, rrx
 800083a:	ebb6 0e02 	subs.w	lr, r6, r2
 800083e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000842:	bf22      	ittt	cs
 8000844:	1ab6      	subcs	r6, r6, r2
 8000846:	4675      	movcs	r5, lr
 8000848:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800084c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000850:	d018      	beq.n	8000884 <__aeabi_ddiv+0x114>
 8000852:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000856:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800085a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800085e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000862:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000866:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800086a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800086e:	d1c0      	bne.n	80007f2 <__aeabi_ddiv+0x82>
 8000870:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000874:	d10b      	bne.n	800088e <__aeabi_ddiv+0x11e>
 8000876:	ea41 0100 	orr.w	r1, r1, r0
 800087a:	f04f 0000 	mov.w	r0, #0
 800087e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000882:	e7b6      	b.n	80007f2 <__aeabi_ddiv+0x82>
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf04      	itt	eq
 800088a:	4301      	orreq	r1, r0
 800088c:	2000      	moveq	r0, #0
 800088e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000892:	bf88      	it	hi
 8000894:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000898:	f63f aeaf 	bhi.w	80005fa <__aeabi_dmul+0xde>
 800089c:	ebb5 0c03 	subs.w	ip, r5, r3
 80008a0:	bf04      	itt	eq
 80008a2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008aa:	f150 0000 	adcs.w	r0, r0, #0
 80008ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008c0:	bfc2      	ittt	gt
 80008c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ca:	bd70      	popgt	{r4, r5, r6, pc}
 80008cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008d0:	f04f 0e00 	mov.w	lr, #0
 80008d4:	3c01      	subs	r4, #1
 80008d6:	e690      	b.n	80005fa <__aeabi_dmul+0xde>
 80008d8:	ea45 0e06 	orr.w	lr, r5, r6
 80008dc:	e68d      	b.n	80005fa <__aeabi_dmul+0xde>
 80008de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008e2:	ea94 0f0c 	teq	r4, ip
 80008e6:	bf08      	it	eq
 80008e8:	ea95 0f0c 	teqeq	r5, ip
 80008ec:	f43f af3b 	beq.w	8000766 <__aeabi_dmul+0x24a>
 80008f0:	ea94 0f0c 	teq	r4, ip
 80008f4:	d10a      	bne.n	800090c <__aeabi_ddiv+0x19c>
 80008f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008fa:	f47f af34 	bne.w	8000766 <__aeabi_dmul+0x24a>
 80008fe:	ea95 0f0c 	teq	r5, ip
 8000902:	f47f af25 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000906:	4610      	mov	r0, r2
 8000908:	4619      	mov	r1, r3
 800090a:	e72c      	b.n	8000766 <__aeabi_dmul+0x24a>
 800090c:	ea95 0f0c 	teq	r5, ip
 8000910:	d106      	bne.n	8000920 <__aeabi_ddiv+0x1b0>
 8000912:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000916:	f43f aefd 	beq.w	8000714 <__aeabi_dmul+0x1f8>
 800091a:	4610      	mov	r0, r2
 800091c:	4619      	mov	r1, r3
 800091e:	e722      	b.n	8000766 <__aeabi_dmul+0x24a>
 8000920:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000924:	bf18      	it	ne
 8000926:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800092a:	f47f aec5 	bne.w	80006b8 <__aeabi_dmul+0x19c>
 800092e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000932:	f47f af0d 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000936:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800093a:	f47f aeeb 	bne.w	8000714 <__aeabi_dmul+0x1f8>
 800093e:	e712      	b.n	8000766 <__aeabi_dmul+0x24a>

08000940 <__gedf2>:
 8000940:	f04f 3cff 	mov.w	ip, #4294967295
 8000944:	e006      	b.n	8000954 <__cmpdf2+0x4>
 8000946:	bf00      	nop

08000948 <__ledf2>:
 8000948:	f04f 0c01 	mov.w	ip, #1
 800094c:	e002      	b.n	8000954 <__cmpdf2+0x4>
 800094e:	bf00      	nop

08000950 <__cmpdf2>:
 8000950:	f04f 0c01 	mov.w	ip, #1
 8000954:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	bf18      	it	ne
 8000966:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800096a:	d01b      	beq.n	80009a4 <__cmpdf2+0x54>
 800096c:	b001      	add	sp, #4
 800096e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000972:	bf0c      	ite	eq
 8000974:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000978:	ea91 0f03 	teqne	r1, r3
 800097c:	bf02      	ittt	eq
 800097e:	ea90 0f02 	teqeq	r0, r2
 8000982:	2000      	moveq	r0, #0
 8000984:	4770      	bxeq	lr
 8000986:	f110 0f00 	cmn.w	r0, #0
 800098a:	ea91 0f03 	teq	r1, r3
 800098e:	bf58      	it	pl
 8000990:	4299      	cmppl	r1, r3
 8000992:	bf08      	it	eq
 8000994:	4290      	cmpeq	r0, r2
 8000996:	bf2c      	ite	cs
 8000998:	17d8      	asrcs	r0, r3, #31
 800099a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800099e:	f040 0001 	orr.w	r0, r0, #1
 80009a2:	4770      	bx	lr
 80009a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ac:	d102      	bne.n	80009b4 <__cmpdf2+0x64>
 80009ae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009b2:	d107      	bne.n	80009c4 <__cmpdf2+0x74>
 80009b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009bc:	d1d6      	bne.n	800096c <__cmpdf2+0x1c>
 80009be:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009c2:	d0d3      	beq.n	800096c <__cmpdf2+0x1c>
 80009c4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_cdrcmple>:
 80009cc:	4684      	mov	ip, r0
 80009ce:	4610      	mov	r0, r2
 80009d0:	4662      	mov	r2, ip
 80009d2:	468c      	mov	ip, r1
 80009d4:	4619      	mov	r1, r3
 80009d6:	4663      	mov	r3, ip
 80009d8:	e000      	b.n	80009dc <__aeabi_cdcmpeq>
 80009da:	bf00      	nop

080009dc <__aeabi_cdcmpeq>:
 80009dc:	b501      	push	{r0, lr}
 80009de:	f7ff ffb7 	bl	8000950 <__cmpdf2>
 80009e2:	2800      	cmp	r0, #0
 80009e4:	bf48      	it	mi
 80009e6:	f110 0f00 	cmnmi.w	r0, #0
 80009ea:	bd01      	pop	{r0, pc}

080009ec <__aeabi_dcmpeq>:
 80009ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f0:	f7ff fff4 	bl	80009dc <__aeabi_cdcmpeq>
 80009f4:	bf0c      	ite	eq
 80009f6:	2001      	moveq	r0, #1
 80009f8:	2000      	movne	r0, #0
 80009fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fe:	bf00      	nop

08000a00 <__aeabi_dcmplt>:
 8000a00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a04:	f7ff ffea 	bl	80009dc <__aeabi_cdcmpeq>
 8000a08:	bf34      	ite	cc
 8000a0a:	2001      	movcc	r0, #1
 8000a0c:	2000      	movcs	r0, #0
 8000a0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a12:	bf00      	nop

08000a14 <__aeabi_dcmple>:
 8000a14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a18:	f7ff ffe0 	bl	80009dc <__aeabi_cdcmpeq>
 8000a1c:	bf94      	ite	ls
 8000a1e:	2001      	movls	r0, #1
 8000a20:	2000      	movhi	r0, #0
 8000a22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a26:	bf00      	nop

08000a28 <__aeabi_dcmpge>:
 8000a28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a2c:	f7ff ffce 	bl	80009cc <__aeabi_cdrcmple>
 8000a30:	bf94      	ite	ls
 8000a32:	2001      	movls	r0, #1
 8000a34:	2000      	movhi	r0, #0
 8000a36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dcmpgt>:
 8000a3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a40:	f7ff ffc4 	bl	80009cc <__aeabi_cdrcmple>
 8000a44:	bf34      	ite	cc
 8000a46:	2001      	movcc	r0, #1
 8000a48:	2000      	movcs	r0, #0
 8000a4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4e:	bf00      	nop

08000a50 <__aeabi_dcmpun>:
 8000a50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d102      	bne.n	8000a60 <__aeabi_dcmpun+0x10>
 8000a5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a5e:	d10a      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d102      	bne.n	8000a70 <__aeabi_dcmpun+0x20>
 8000a6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a6e:	d102      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a70:	f04f 0000 	mov.w	r0, #0
 8000a74:	4770      	bx	lr
 8000a76:	f04f 0001 	mov.w	r0, #1
 8000a7a:	4770      	bx	lr

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2uiz>:
 8000acc:	004a      	lsls	r2, r1, #1
 8000ace:	d211      	bcs.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ad4:	d211      	bcs.n	8000afa <__aeabi_d2uiz+0x2e>
 8000ad6:	d50d      	bpl.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000adc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ae0:	d40e      	bmi.n	8000b00 <__aeabi_d2uiz+0x34>
 8000ae2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aee:	fa23 f002 	lsr.w	r0, r3, r2
 8000af2:	4770      	bx	lr
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000afe:	d102      	bne.n	8000b06 <__aeabi_d2uiz+0x3a>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	4770      	bx	lr
 8000b06:	f04f 0000 	mov.w	r0, #0
 8000b0a:	4770      	bx	lr

08000b0c <__aeabi_d2f>:
 8000b0c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b10:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b14:	bf24      	itt	cs
 8000b16:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b1a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b1e:	d90d      	bls.n	8000b3c <__aeabi_d2f+0x30>
 8000b20:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b24:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b28:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b2c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b30:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b34:	bf08      	it	eq
 8000b36:	f020 0001 	biceq.w	r0, r0, #1
 8000b3a:	4770      	bx	lr
 8000b3c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b40:	d121      	bne.n	8000b86 <__aeabi_d2f+0x7a>
 8000b42:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b46:	bfbc      	itt	lt
 8000b48:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b4c:	4770      	bxlt	lr
 8000b4e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b52:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b56:	f1c2 0218 	rsb	r2, r2, #24
 8000b5a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b5e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b62:	fa20 f002 	lsr.w	r0, r0, r2
 8000b66:	bf18      	it	ne
 8000b68:	f040 0001 	orrne.w	r0, r0, #1
 8000b6c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b70:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b74:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b78:	ea40 000c 	orr.w	r0, r0, ip
 8000b7c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b84:	e7cc      	b.n	8000b20 <__aeabi_d2f+0x14>
 8000b86:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b8a:	d107      	bne.n	8000b9c <__aeabi_d2f+0x90>
 8000b8c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b90:	bf1e      	ittt	ne
 8000b92:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b96:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b9a:	4770      	bxne	lr
 8000b9c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ba4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <__aeabi_frsub>:
 8000bac:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bb0:	e002      	b.n	8000bb8 <__addsf3>
 8000bb2:	bf00      	nop

08000bb4 <__aeabi_fsub>:
 8000bb4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000bb8 <__addsf3>:
 8000bb8:	0042      	lsls	r2, r0, #1
 8000bba:	bf1f      	itttt	ne
 8000bbc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bc0:	ea92 0f03 	teqne	r2, r3
 8000bc4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bc8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bcc:	d06a      	beq.n	8000ca4 <__addsf3+0xec>
 8000bce:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bd2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bd6:	bfc1      	itttt	gt
 8000bd8:	18d2      	addgt	r2, r2, r3
 8000bda:	4041      	eorgt	r1, r0
 8000bdc:	4048      	eorgt	r0, r1
 8000bde:	4041      	eorgt	r1, r0
 8000be0:	bfb8      	it	lt
 8000be2:	425b      	neglt	r3, r3
 8000be4:	2b19      	cmp	r3, #25
 8000be6:	bf88      	it	hi
 8000be8:	4770      	bxhi	lr
 8000bea:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bf6:	bf18      	it	ne
 8000bf8:	4240      	negne	r0, r0
 8000bfa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bfe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c02:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c06:	bf18      	it	ne
 8000c08:	4249      	negne	r1, r1
 8000c0a:	ea92 0f03 	teq	r2, r3
 8000c0e:	d03f      	beq.n	8000c90 <__addsf3+0xd8>
 8000c10:	f1a2 0201 	sub.w	r2, r2, #1
 8000c14:	fa41 fc03 	asr.w	ip, r1, r3
 8000c18:	eb10 000c 	adds.w	r0, r0, ip
 8000c1c:	f1c3 0320 	rsb	r3, r3, #32
 8000c20:	fa01 f103 	lsl.w	r1, r1, r3
 8000c24:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c28:	d502      	bpl.n	8000c30 <__addsf3+0x78>
 8000c2a:	4249      	negs	r1, r1
 8000c2c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c30:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c34:	d313      	bcc.n	8000c5e <__addsf3+0xa6>
 8000c36:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c3a:	d306      	bcc.n	8000c4a <__addsf3+0x92>
 8000c3c:	0840      	lsrs	r0, r0, #1
 8000c3e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c42:	f102 0201 	add.w	r2, r2, #1
 8000c46:	2afe      	cmp	r2, #254	; 0xfe
 8000c48:	d251      	bcs.n	8000cee <__addsf3+0x136>
 8000c4a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c4e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c52:	bf08      	it	eq
 8000c54:	f020 0001 	biceq.w	r0, r0, #1
 8000c58:	ea40 0003 	orr.w	r0, r0, r3
 8000c5c:	4770      	bx	lr
 8000c5e:	0049      	lsls	r1, r1, #1
 8000c60:	eb40 0000 	adc.w	r0, r0, r0
 8000c64:	3a01      	subs	r2, #1
 8000c66:	bf28      	it	cs
 8000c68:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c6c:	d2ed      	bcs.n	8000c4a <__addsf3+0x92>
 8000c6e:	fab0 fc80 	clz	ip, r0
 8000c72:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c76:	ebb2 020c 	subs.w	r2, r2, ip
 8000c7a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c7e:	bfaa      	itet	ge
 8000c80:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c84:	4252      	neglt	r2, r2
 8000c86:	4318      	orrge	r0, r3
 8000c88:	bfbc      	itt	lt
 8000c8a:	40d0      	lsrlt	r0, r2
 8000c8c:	4318      	orrlt	r0, r3
 8000c8e:	4770      	bx	lr
 8000c90:	f092 0f00 	teq	r2, #0
 8000c94:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c98:	bf06      	itte	eq
 8000c9a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c9e:	3201      	addeq	r2, #1
 8000ca0:	3b01      	subne	r3, #1
 8000ca2:	e7b5      	b.n	8000c10 <__addsf3+0x58>
 8000ca4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ca8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cac:	bf18      	it	ne
 8000cae:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb2:	d021      	beq.n	8000cf8 <__addsf3+0x140>
 8000cb4:	ea92 0f03 	teq	r2, r3
 8000cb8:	d004      	beq.n	8000cc4 <__addsf3+0x10c>
 8000cba:	f092 0f00 	teq	r2, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	4608      	moveq	r0, r1
 8000cc2:	4770      	bx	lr
 8000cc4:	ea90 0f01 	teq	r0, r1
 8000cc8:	bf1c      	itt	ne
 8000cca:	2000      	movne	r0, #0
 8000ccc:	4770      	bxne	lr
 8000cce:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cd2:	d104      	bne.n	8000cde <__addsf3+0x126>
 8000cd4:	0040      	lsls	r0, r0, #1
 8000cd6:	bf28      	it	cs
 8000cd8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cdc:	4770      	bx	lr
 8000cde:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ce2:	bf3c      	itt	cc
 8000ce4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ce8:	4770      	bxcc	lr
 8000cea:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cee:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cf2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cf6:	4770      	bx	lr
 8000cf8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cfc:	bf16      	itet	ne
 8000cfe:	4608      	movne	r0, r1
 8000d00:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d04:	4601      	movne	r1, r0
 8000d06:	0242      	lsls	r2, r0, #9
 8000d08:	bf06      	itte	eq
 8000d0a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d0e:	ea90 0f01 	teqeq	r0, r1
 8000d12:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d16:	4770      	bx	lr

08000d18 <__aeabi_ui2f>:
 8000d18:	f04f 0300 	mov.w	r3, #0
 8000d1c:	e004      	b.n	8000d28 <__aeabi_i2f+0x8>
 8000d1e:	bf00      	nop

08000d20 <__aeabi_i2f>:
 8000d20:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d24:	bf48      	it	mi
 8000d26:	4240      	negmi	r0, r0
 8000d28:	ea5f 0c00 	movs.w	ip, r0
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d34:	4601      	mov	r1, r0
 8000d36:	f04f 0000 	mov.w	r0, #0
 8000d3a:	e01c      	b.n	8000d76 <__aeabi_l2f+0x2a>

08000d3c <__aeabi_ul2f>:
 8000d3c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d40:	bf08      	it	eq
 8000d42:	4770      	bxeq	lr
 8000d44:	f04f 0300 	mov.w	r3, #0
 8000d48:	e00a      	b.n	8000d60 <__aeabi_l2f+0x14>
 8000d4a:	bf00      	nop

08000d4c <__aeabi_l2f>:
 8000d4c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d50:	bf08      	it	eq
 8000d52:	4770      	bxeq	lr
 8000d54:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__aeabi_l2f+0x14>
 8000d5a:	4240      	negs	r0, r0
 8000d5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d60:	ea5f 0c01 	movs.w	ip, r1
 8000d64:	bf02      	ittt	eq
 8000d66:	4684      	moveq	ip, r0
 8000d68:	4601      	moveq	r1, r0
 8000d6a:	2000      	moveq	r0, #0
 8000d6c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d70:	bf08      	it	eq
 8000d72:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d76:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d7a:	fabc f28c 	clz	r2, ip
 8000d7e:	3a08      	subs	r2, #8
 8000d80:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d84:	db10      	blt.n	8000da8 <__aeabi_l2f+0x5c>
 8000d86:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8a:	4463      	add	r3, ip
 8000d8c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d90:	f1c2 0220 	rsb	r2, r2, #32
 8000d94:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d98:	fa20 f202 	lsr.w	r2, r0, r2
 8000d9c:	eb43 0002 	adc.w	r0, r3, r2
 8000da0:	bf08      	it	eq
 8000da2:	f020 0001 	biceq.w	r0, r0, #1
 8000da6:	4770      	bx	lr
 8000da8:	f102 0220 	add.w	r2, r2, #32
 8000dac:	fa01 fc02 	lsl.w	ip, r1, r2
 8000db0:	f1c2 0220 	rsb	r2, r2, #32
 8000db4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000db8:	fa21 f202 	lsr.w	r2, r1, r2
 8000dbc:	eb43 0002 	adc.w	r0, r3, r2
 8000dc0:	bf08      	it	eq
 8000dc2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dc6:	4770      	bx	lr

08000dc8 <__aeabi_fmul>:
 8000dc8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000dcc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dd0:	bf1e      	ittt	ne
 8000dd2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dd6:	ea92 0f0c 	teqne	r2, ip
 8000dda:	ea93 0f0c 	teqne	r3, ip
 8000dde:	d06f      	beq.n	8000ec0 <__aeabi_fmul+0xf8>
 8000de0:	441a      	add	r2, r3
 8000de2:	ea80 0c01 	eor.w	ip, r0, r1
 8000de6:	0240      	lsls	r0, r0, #9
 8000de8:	bf18      	it	ne
 8000dea:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dee:	d01e      	beq.n	8000e2e <__aeabi_fmul+0x66>
 8000df0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000df4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000df8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dfc:	fba0 3101 	umull	r3, r1, r0, r1
 8000e00:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e04:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e08:	bf3e      	ittt	cc
 8000e0a:	0049      	lslcc	r1, r1, #1
 8000e0c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e10:	005b      	lslcc	r3, r3, #1
 8000e12:	ea40 0001 	orr.w	r0, r0, r1
 8000e16:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e1a:	2afd      	cmp	r2, #253	; 0xfd
 8000e1c:	d81d      	bhi.n	8000e5a <__aeabi_fmul+0x92>
 8000e1e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e22:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e26:	bf08      	it	eq
 8000e28:	f020 0001 	biceq.w	r0, r0, #1
 8000e2c:	4770      	bx	lr
 8000e2e:	f090 0f00 	teq	r0, #0
 8000e32:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e36:	bf08      	it	eq
 8000e38:	0249      	lsleq	r1, r1, #9
 8000e3a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e3e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e42:	3a7f      	subs	r2, #127	; 0x7f
 8000e44:	bfc2      	ittt	gt
 8000e46:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e4a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e4e:	4770      	bxgt	lr
 8000e50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e54:	f04f 0300 	mov.w	r3, #0
 8000e58:	3a01      	subs	r2, #1
 8000e5a:	dc5d      	bgt.n	8000f18 <__aeabi_fmul+0x150>
 8000e5c:	f112 0f19 	cmn.w	r2, #25
 8000e60:	bfdc      	itt	le
 8000e62:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e66:	4770      	bxle	lr
 8000e68:	f1c2 0200 	rsb	r2, r2, #0
 8000e6c:	0041      	lsls	r1, r0, #1
 8000e6e:	fa21 f102 	lsr.w	r1, r1, r2
 8000e72:	f1c2 0220 	rsb	r2, r2, #32
 8000e76:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e7a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e7e:	f140 0000 	adc.w	r0, r0, #0
 8000e82:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e86:	bf08      	it	eq
 8000e88:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e8c:	4770      	bx	lr
 8000e8e:	f092 0f00 	teq	r2, #0
 8000e92:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e96:	bf02      	ittt	eq
 8000e98:	0040      	lsleq	r0, r0, #1
 8000e9a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e9e:	3a01      	subeq	r2, #1
 8000ea0:	d0f9      	beq.n	8000e96 <__aeabi_fmul+0xce>
 8000ea2:	ea40 000c 	orr.w	r0, r0, ip
 8000ea6:	f093 0f00 	teq	r3, #0
 8000eaa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eae:	bf02      	ittt	eq
 8000eb0:	0049      	lsleq	r1, r1, #1
 8000eb2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000eb6:	3b01      	subeq	r3, #1
 8000eb8:	d0f9      	beq.n	8000eae <__aeabi_fmul+0xe6>
 8000eba:	ea41 010c 	orr.w	r1, r1, ip
 8000ebe:	e78f      	b.n	8000de0 <__aeabi_fmul+0x18>
 8000ec0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ec4:	ea92 0f0c 	teq	r2, ip
 8000ec8:	bf18      	it	ne
 8000eca:	ea93 0f0c 	teqne	r3, ip
 8000ece:	d00a      	beq.n	8000ee6 <__aeabi_fmul+0x11e>
 8000ed0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000ed4:	bf18      	it	ne
 8000ed6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eda:	d1d8      	bne.n	8000e8e <__aeabi_fmul+0xc6>
 8000edc:	ea80 0001 	eor.w	r0, r0, r1
 8000ee0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ee4:	4770      	bx	lr
 8000ee6:	f090 0f00 	teq	r0, #0
 8000eea:	bf17      	itett	ne
 8000eec:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ef0:	4608      	moveq	r0, r1
 8000ef2:	f091 0f00 	teqne	r1, #0
 8000ef6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000efa:	d014      	beq.n	8000f26 <__aeabi_fmul+0x15e>
 8000efc:	ea92 0f0c 	teq	r2, ip
 8000f00:	d101      	bne.n	8000f06 <__aeabi_fmul+0x13e>
 8000f02:	0242      	lsls	r2, r0, #9
 8000f04:	d10f      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f06:	ea93 0f0c 	teq	r3, ip
 8000f0a:	d103      	bne.n	8000f14 <__aeabi_fmul+0x14c>
 8000f0c:	024b      	lsls	r3, r1, #9
 8000f0e:	bf18      	it	ne
 8000f10:	4608      	movne	r0, r1
 8000f12:	d108      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f14:	ea80 0001 	eor.w	r0, r0, r1
 8000f18:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f24:	4770      	bx	lr
 8000f26:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f2a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f2e:	4770      	bx	lr

08000f30 <__aeabi_fdiv>:
 8000f30:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f34:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f38:	bf1e      	ittt	ne
 8000f3a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f3e:	ea92 0f0c 	teqne	r2, ip
 8000f42:	ea93 0f0c 	teqne	r3, ip
 8000f46:	d069      	beq.n	800101c <__aeabi_fdiv+0xec>
 8000f48:	eba2 0203 	sub.w	r2, r2, r3
 8000f4c:	ea80 0c01 	eor.w	ip, r0, r1
 8000f50:	0249      	lsls	r1, r1, #9
 8000f52:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f56:	d037      	beq.n	8000fc8 <__aeabi_fdiv+0x98>
 8000f58:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f5c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f60:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f64:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f68:	428b      	cmp	r3, r1
 8000f6a:	bf38      	it	cc
 8000f6c:	005b      	lslcc	r3, r3, #1
 8000f6e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f72:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f76:	428b      	cmp	r3, r1
 8000f78:	bf24      	itt	cs
 8000f7a:	1a5b      	subcs	r3, r3, r1
 8000f7c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f80:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f84:	bf24      	itt	cs
 8000f86:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f8a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f8e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f92:	bf24      	itt	cs
 8000f94:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f9c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fa0:	bf24      	itt	cs
 8000fa2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fa6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000faa:	011b      	lsls	r3, r3, #4
 8000fac:	bf18      	it	ne
 8000fae:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fb2:	d1e0      	bne.n	8000f76 <__aeabi_fdiv+0x46>
 8000fb4:	2afd      	cmp	r2, #253	; 0xfd
 8000fb6:	f63f af50 	bhi.w	8000e5a <__aeabi_fmul+0x92>
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fc0:	bf08      	it	eq
 8000fc2:	f020 0001 	biceq.w	r0, r0, #1
 8000fc6:	4770      	bx	lr
 8000fc8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fcc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fd0:	327f      	adds	r2, #127	; 0x7f
 8000fd2:	bfc2      	ittt	gt
 8000fd4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fd8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fdc:	4770      	bxgt	lr
 8000fde:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fe2:	f04f 0300 	mov.w	r3, #0
 8000fe6:	3a01      	subs	r2, #1
 8000fe8:	e737      	b.n	8000e5a <__aeabi_fmul+0x92>
 8000fea:	f092 0f00 	teq	r2, #0
 8000fee:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ff2:	bf02      	ittt	eq
 8000ff4:	0040      	lsleq	r0, r0, #1
 8000ff6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ffa:	3a01      	subeq	r2, #1
 8000ffc:	d0f9      	beq.n	8000ff2 <__aeabi_fdiv+0xc2>
 8000ffe:	ea40 000c 	orr.w	r0, r0, ip
 8001002:	f093 0f00 	teq	r3, #0
 8001006:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800100a:	bf02      	ittt	eq
 800100c:	0049      	lsleq	r1, r1, #1
 800100e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001012:	3b01      	subeq	r3, #1
 8001014:	d0f9      	beq.n	800100a <__aeabi_fdiv+0xda>
 8001016:	ea41 010c 	orr.w	r1, r1, ip
 800101a:	e795      	b.n	8000f48 <__aeabi_fdiv+0x18>
 800101c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001020:	ea92 0f0c 	teq	r2, ip
 8001024:	d108      	bne.n	8001038 <__aeabi_fdiv+0x108>
 8001026:	0242      	lsls	r2, r0, #9
 8001028:	f47f af7d 	bne.w	8000f26 <__aeabi_fmul+0x15e>
 800102c:	ea93 0f0c 	teq	r3, ip
 8001030:	f47f af70 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 8001034:	4608      	mov	r0, r1
 8001036:	e776      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001038:	ea93 0f0c 	teq	r3, ip
 800103c:	d104      	bne.n	8001048 <__aeabi_fdiv+0x118>
 800103e:	024b      	lsls	r3, r1, #9
 8001040:	f43f af4c 	beq.w	8000edc <__aeabi_fmul+0x114>
 8001044:	4608      	mov	r0, r1
 8001046:	e76e      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001048:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800104c:	bf18      	it	ne
 800104e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001052:	d1ca      	bne.n	8000fea <__aeabi_fdiv+0xba>
 8001054:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001058:	f47f af5c 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 800105c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001060:	f47f af3c 	bne.w	8000edc <__aeabi_fmul+0x114>
 8001064:	e75f      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001066:	bf00      	nop

08001068 <__gesf2>:
 8001068:	f04f 3cff 	mov.w	ip, #4294967295
 800106c:	e006      	b.n	800107c <__cmpsf2+0x4>
 800106e:	bf00      	nop

08001070 <__lesf2>:
 8001070:	f04f 0c01 	mov.w	ip, #1
 8001074:	e002      	b.n	800107c <__cmpsf2+0x4>
 8001076:	bf00      	nop

08001078 <__cmpsf2>:
 8001078:	f04f 0c01 	mov.w	ip, #1
 800107c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8001080:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001084:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001088:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800108c:	bf18      	it	ne
 800108e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8001092:	d011      	beq.n	80010b8 <__cmpsf2+0x40>
 8001094:	b001      	add	sp, #4
 8001096:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800109a:	bf18      	it	ne
 800109c:	ea90 0f01 	teqne	r0, r1
 80010a0:	bf58      	it	pl
 80010a2:	ebb2 0003 	subspl.w	r0, r2, r3
 80010a6:	bf88      	it	hi
 80010a8:	17c8      	asrhi	r0, r1, #31
 80010aa:	bf38      	it	cc
 80010ac:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010b0:	bf18      	it	ne
 80010b2:	f040 0001 	orrne.w	r0, r0, #1
 80010b6:	4770      	bx	lr
 80010b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010bc:	d102      	bne.n	80010c4 <__cmpsf2+0x4c>
 80010be:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010c2:	d105      	bne.n	80010d0 <__cmpsf2+0x58>
 80010c4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010c8:	d1e4      	bne.n	8001094 <__cmpsf2+0x1c>
 80010ca:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ce:	d0e1      	beq.n	8001094 <__cmpsf2+0x1c>
 80010d0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <__aeabi_cfrcmple>:
 80010d8:	4684      	mov	ip, r0
 80010da:	4608      	mov	r0, r1
 80010dc:	4661      	mov	r1, ip
 80010de:	e7ff      	b.n	80010e0 <__aeabi_cfcmpeq>

080010e0 <__aeabi_cfcmpeq>:
 80010e0:	b50f      	push	{r0, r1, r2, r3, lr}
 80010e2:	f7ff ffc9 	bl	8001078 <__cmpsf2>
 80010e6:	2800      	cmp	r0, #0
 80010e8:	bf48      	it	mi
 80010ea:	f110 0f00 	cmnmi.w	r0, #0
 80010ee:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010f0 <__aeabi_fcmpeq>:
 80010f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f4:	f7ff fff4 	bl	80010e0 <__aeabi_cfcmpeq>
 80010f8:	bf0c      	ite	eq
 80010fa:	2001      	moveq	r0, #1
 80010fc:	2000      	movne	r0, #0
 80010fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8001102:	bf00      	nop

08001104 <__aeabi_fcmplt>:
 8001104:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001108:	f7ff ffea 	bl	80010e0 <__aeabi_cfcmpeq>
 800110c:	bf34      	ite	cc
 800110e:	2001      	movcc	r0, #1
 8001110:	2000      	movcs	r0, #0
 8001112:	f85d fb08 	ldr.w	pc, [sp], #8
 8001116:	bf00      	nop

08001118 <__aeabi_fcmple>:
 8001118:	f84d ed08 	str.w	lr, [sp, #-8]!
 800111c:	f7ff ffe0 	bl	80010e0 <__aeabi_cfcmpeq>
 8001120:	bf94      	ite	ls
 8001122:	2001      	movls	r0, #1
 8001124:	2000      	movhi	r0, #0
 8001126:	f85d fb08 	ldr.w	pc, [sp], #8
 800112a:	bf00      	nop

0800112c <__aeabi_fcmpge>:
 800112c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001130:	f7ff ffd2 	bl	80010d8 <__aeabi_cfrcmple>
 8001134:	bf94      	ite	ls
 8001136:	2001      	movls	r0, #1
 8001138:	2000      	movhi	r0, #0
 800113a:	f85d fb08 	ldr.w	pc, [sp], #8
 800113e:	bf00      	nop

08001140 <__aeabi_fcmpgt>:
 8001140:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001144:	f7ff ffc8 	bl	80010d8 <__aeabi_cfrcmple>
 8001148:	bf34      	ite	cc
 800114a:	2001      	movcc	r0, #1
 800114c:	2000      	movcs	r0, #0
 800114e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001152:	bf00      	nop

08001154 <__aeabi_f2uiz>:
 8001154:	0042      	lsls	r2, r0, #1
 8001156:	d20e      	bcs.n	8001176 <__aeabi_f2uiz+0x22>
 8001158:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800115c:	d30b      	bcc.n	8001176 <__aeabi_f2uiz+0x22>
 800115e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001162:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001166:	d409      	bmi.n	800117c <__aeabi_f2uiz+0x28>
 8001168:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800116c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001170:	fa23 f002 	lsr.w	r0, r3, r2
 8001174:	4770      	bx	lr
 8001176:	f04f 0000 	mov.w	r0, #0
 800117a:	4770      	bx	lr
 800117c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001180:	d101      	bne.n	8001186 <__aeabi_f2uiz+0x32>
 8001182:	0242      	lsls	r2, r0, #9
 8001184:	d102      	bne.n	800118c <__aeabi_f2uiz+0x38>
 8001186:	f04f 30ff 	mov.w	r0, #4294967295
 800118a:	4770      	bx	lr
 800118c:	f04f 0000 	mov.w	r0, #0
 8001190:	4770      	bx	lr
 8001192:	bf00      	nop

08001194 <__aeabi_uldivmod>:
 8001194:	b953      	cbnz	r3, 80011ac <__aeabi_uldivmod+0x18>
 8001196:	b94a      	cbnz	r2, 80011ac <__aeabi_uldivmod+0x18>
 8001198:	2900      	cmp	r1, #0
 800119a:	bf08      	it	eq
 800119c:	2800      	cmpeq	r0, #0
 800119e:	bf1c      	itt	ne
 80011a0:	f04f 31ff 	movne.w	r1, #4294967295
 80011a4:	f04f 30ff 	movne.w	r0, #4294967295
 80011a8:	f000 b9ae 	b.w	8001508 <__aeabi_idiv0>
 80011ac:	f1ad 0c08 	sub.w	ip, sp, #8
 80011b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80011b4:	f000 f83e 	bl	8001234 <__udivmoddi4>
 80011b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80011bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80011c0:	b004      	add	sp, #16
 80011c2:	4770      	bx	lr

080011c4 <__aeabi_d2lz>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4605      	mov	r5, r0
 80011c8:	460c      	mov	r4, r1
 80011ca:	2200      	movs	r2, #0
 80011cc:	2300      	movs	r3, #0
 80011ce:	4628      	mov	r0, r5
 80011d0:	4621      	mov	r1, r4
 80011d2:	f7ff fc15 	bl	8000a00 <__aeabi_dcmplt>
 80011d6:	b928      	cbnz	r0, 80011e4 <__aeabi_d2lz+0x20>
 80011d8:	4628      	mov	r0, r5
 80011da:	4621      	mov	r1, r4
 80011dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011e0:	f000 b80a 	b.w	80011f8 <__aeabi_d2ulz>
 80011e4:	4628      	mov	r0, r5
 80011e6:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 80011ea:	f000 f805 	bl	80011f8 <__aeabi_d2ulz>
 80011ee:	4240      	negs	r0, r0
 80011f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011f4:	bd38      	pop	{r3, r4, r5, pc}
 80011f6:	bf00      	nop

080011f8 <__aeabi_d2ulz>:
 80011f8:	b5d0      	push	{r4, r6, r7, lr}
 80011fa:	2200      	movs	r2, #0
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <__aeabi_d2ulz+0x34>)
 80011fe:	4606      	mov	r6, r0
 8001200:	460f      	mov	r7, r1
 8001202:	f7ff f98b 	bl	800051c <__aeabi_dmul>
 8001206:	f7ff fc61 	bl	8000acc <__aeabi_d2uiz>
 800120a:	4604      	mov	r4, r0
 800120c:	f7ff f90c 	bl	8000428 <__aeabi_ui2d>
 8001210:	2200      	movs	r2, #0
 8001212:	4b07      	ldr	r3, [pc, #28]	; (8001230 <__aeabi_d2ulz+0x38>)
 8001214:	f7ff f982 	bl	800051c <__aeabi_dmul>
 8001218:	4602      	mov	r2, r0
 800121a:	460b      	mov	r3, r1
 800121c:	4630      	mov	r0, r6
 800121e:	4639      	mov	r1, r7
 8001220:	f7fe ffc4 	bl	80001ac <__aeabi_dsub>
 8001224:	f7ff fc52 	bl	8000acc <__aeabi_d2uiz>
 8001228:	4621      	mov	r1, r4
 800122a:	bdd0      	pop	{r4, r6, r7, pc}
 800122c:	3df00000 	.word	0x3df00000
 8001230:	41f00000 	.word	0x41f00000

08001234 <__udivmoddi4>:
 8001234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001238:	9e08      	ldr	r6, [sp, #32]
 800123a:	460d      	mov	r5, r1
 800123c:	4604      	mov	r4, r0
 800123e:	4688      	mov	r8, r1
 8001240:	2b00      	cmp	r3, #0
 8001242:	d14d      	bne.n	80012e0 <__udivmoddi4+0xac>
 8001244:	428a      	cmp	r2, r1
 8001246:	4694      	mov	ip, r2
 8001248:	d968      	bls.n	800131c <__udivmoddi4+0xe8>
 800124a:	fab2 f282 	clz	r2, r2
 800124e:	b152      	cbz	r2, 8001266 <__udivmoddi4+0x32>
 8001250:	fa01 f302 	lsl.w	r3, r1, r2
 8001254:	f1c2 0120 	rsb	r1, r2, #32
 8001258:	fa20 f101 	lsr.w	r1, r0, r1
 800125c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001260:	ea41 0803 	orr.w	r8, r1, r3
 8001264:	4094      	lsls	r4, r2
 8001266:	ea4f 411c 	mov.w	r1, ip, lsr #16
 800126a:	fbb8 f7f1 	udiv	r7, r8, r1
 800126e:	fa1f fe8c 	uxth.w	lr, ip
 8001272:	fb01 8817 	mls	r8, r1, r7, r8
 8001276:	fb07 f00e 	mul.w	r0, r7, lr
 800127a:	0c23      	lsrs	r3, r4, #16
 800127c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8001280:	4298      	cmp	r0, r3
 8001282:	d90a      	bls.n	800129a <__udivmoddi4+0x66>
 8001284:	eb1c 0303 	adds.w	r3, ip, r3
 8001288:	f107 35ff 	add.w	r5, r7, #4294967295
 800128c:	f080 811e 	bcs.w	80014cc <__udivmoddi4+0x298>
 8001290:	4298      	cmp	r0, r3
 8001292:	f240 811b 	bls.w	80014cc <__udivmoddi4+0x298>
 8001296:	3f02      	subs	r7, #2
 8001298:	4463      	add	r3, ip
 800129a:	1a1b      	subs	r3, r3, r0
 800129c:	fbb3 f0f1 	udiv	r0, r3, r1
 80012a0:	fb01 3310 	mls	r3, r1, r0, r3
 80012a4:	fb00 fe0e 	mul.w	lr, r0, lr
 80012a8:	b2a4      	uxth	r4, r4
 80012aa:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80012ae:	45a6      	cmp	lr, r4
 80012b0:	d90a      	bls.n	80012c8 <__udivmoddi4+0x94>
 80012b2:	eb1c 0404 	adds.w	r4, ip, r4
 80012b6:	f100 33ff 	add.w	r3, r0, #4294967295
 80012ba:	f080 8109 	bcs.w	80014d0 <__udivmoddi4+0x29c>
 80012be:	45a6      	cmp	lr, r4
 80012c0:	f240 8106 	bls.w	80014d0 <__udivmoddi4+0x29c>
 80012c4:	4464      	add	r4, ip
 80012c6:	3802      	subs	r0, #2
 80012c8:	2100      	movs	r1, #0
 80012ca:	eba4 040e 	sub.w	r4, r4, lr
 80012ce:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80012d2:	b11e      	cbz	r6, 80012dc <__udivmoddi4+0xa8>
 80012d4:	2300      	movs	r3, #0
 80012d6:	40d4      	lsrs	r4, r2
 80012d8:	e9c6 4300 	strd	r4, r3, [r6]
 80012dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012e0:	428b      	cmp	r3, r1
 80012e2:	d908      	bls.n	80012f6 <__udivmoddi4+0xc2>
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	f000 80ee 	beq.w	80014c6 <__udivmoddi4+0x292>
 80012ea:	2100      	movs	r1, #0
 80012ec:	e9c6 0500 	strd	r0, r5, [r6]
 80012f0:	4608      	mov	r0, r1
 80012f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012f6:	fab3 f183 	clz	r1, r3
 80012fa:	2900      	cmp	r1, #0
 80012fc:	d14a      	bne.n	8001394 <__udivmoddi4+0x160>
 80012fe:	42ab      	cmp	r3, r5
 8001300:	d302      	bcc.n	8001308 <__udivmoddi4+0xd4>
 8001302:	4282      	cmp	r2, r0
 8001304:	f200 80fc 	bhi.w	8001500 <__udivmoddi4+0x2cc>
 8001308:	1a84      	subs	r4, r0, r2
 800130a:	eb65 0303 	sbc.w	r3, r5, r3
 800130e:	2001      	movs	r0, #1
 8001310:	4698      	mov	r8, r3
 8001312:	2e00      	cmp	r6, #0
 8001314:	d0e2      	beq.n	80012dc <__udivmoddi4+0xa8>
 8001316:	e9c6 4800 	strd	r4, r8, [r6]
 800131a:	e7df      	b.n	80012dc <__udivmoddi4+0xa8>
 800131c:	b902      	cbnz	r2, 8001320 <__udivmoddi4+0xec>
 800131e:	deff      	udf	#255	; 0xff
 8001320:	fab2 f282 	clz	r2, r2
 8001324:	2a00      	cmp	r2, #0
 8001326:	f040 8091 	bne.w	800144c <__udivmoddi4+0x218>
 800132a:	eba1 000c 	sub.w	r0, r1, ip
 800132e:	2101      	movs	r1, #1
 8001330:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001334:	fa1f fe8c 	uxth.w	lr, ip
 8001338:	fbb0 f3f7 	udiv	r3, r0, r7
 800133c:	fb07 0013 	mls	r0, r7, r3, r0
 8001340:	0c25      	lsrs	r5, r4, #16
 8001342:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8001346:	fb0e f003 	mul.w	r0, lr, r3
 800134a:	42a8      	cmp	r0, r5
 800134c:	d908      	bls.n	8001360 <__udivmoddi4+0x12c>
 800134e:	eb1c 0505 	adds.w	r5, ip, r5
 8001352:	f103 38ff 	add.w	r8, r3, #4294967295
 8001356:	d202      	bcs.n	800135e <__udivmoddi4+0x12a>
 8001358:	42a8      	cmp	r0, r5
 800135a:	f200 80ce 	bhi.w	80014fa <__udivmoddi4+0x2c6>
 800135e:	4643      	mov	r3, r8
 8001360:	1a2d      	subs	r5, r5, r0
 8001362:	fbb5 f0f7 	udiv	r0, r5, r7
 8001366:	fb07 5510 	mls	r5, r7, r0, r5
 800136a:	fb0e fe00 	mul.w	lr, lr, r0
 800136e:	b2a4      	uxth	r4, r4
 8001370:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8001374:	45a6      	cmp	lr, r4
 8001376:	d908      	bls.n	800138a <__udivmoddi4+0x156>
 8001378:	eb1c 0404 	adds.w	r4, ip, r4
 800137c:	f100 35ff 	add.w	r5, r0, #4294967295
 8001380:	d202      	bcs.n	8001388 <__udivmoddi4+0x154>
 8001382:	45a6      	cmp	lr, r4
 8001384:	f200 80b6 	bhi.w	80014f4 <__udivmoddi4+0x2c0>
 8001388:	4628      	mov	r0, r5
 800138a:	eba4 040e 	sub.w	r4, r4, lr
 800138e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001392:	e79e      	b.n	80012d2 <__udivmoddi4+0x9e>
 8001394:	f1c1 0720 	rsb	r7, r1, #32
 8001398:	408b      	lsls	r3, r1
 800139a:	fa22 fc07 	lsr.w	ip, r2, r7
 800139e:	ea4c 0c03 	orr.w	ip, ip, r3
 80013a2:	fa25 fa07 	lsr.w	sl, r5, r7
 80013a6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80013aa:	fbba f8f9 	udiv	r8, sl, r9
 80013ae:	fa20 f307 	lsr.w	r3, r0, r7
 80013b2:	fb09 aa18 	mls	sl, r9, r8, sl
 80013b6:	408d      	lsls	r5, r1
 80013b8:	fa1f fe8c 	uxth.w	lr, ip
 80013bc:	431d      	orrs	r5, r3
 80013be:	fa00 f301 	lsl.w	r3, r0, r1
 80013c2:	fb08 f00e 	mul.w	r0, r8, lr
 80013c6:	0c2c      	lsrs	r4, r5, #16
 80013c8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80013cc:	42a0      	cmp	r0, r4
 80013ce:	fa02 f201 	lsl.w	r2, r2, r1
 80013d2:	d90b      	bls.n	80013ec <__udivmoddi4+0x1b8>
 80013d4:	eb1c 0404 	adds.w	r4, ip, r4
 80013d8:	f108 3aff 	add.w	sl, r8, #4294967295
 80013dc:	f080 8088 	bcs.w	80014f0 <__udivmoddi4+0x2bc>
 80013e0:	42a0      	cmp	r0, r4
 80013e2:	f240 8085 	bls.w	80014f0 <__udivmoddi4+0x2bc>
 80013e6:	f1a8 0802 	sub.w	r8, r8, #2
 80013ea:	4464      	add	r4, ip
 80013ec:	1a24      	subs	r4, r4, r0
 80013ee:	fbb4 f0f9 	udiv	r0, r4, r9
 80013f2:	fb09 4410 	mls	r4, r9, r0, r4
 80013f6:	fb00 fe0e 	mul.w	lr, r0, lr
 80013fa:	b2ad      	uxth	r5, r5
 80013fc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001400:	45a6      	cmp	lr, r4
 8001402:	d908      	bls.n	8001416 <__udivmoddi4+0x1e2>
 8001404:	eb1c 0404 	adds.w	r4, ip, r4
 8001408:	f100 35ff 	add.w	r5, r0, #4294967295
 800140c:	d26c      	bcs.n	80014e8 <__udivmoddi4+0x2b4>
 800140e:	45a6      	cmp	lr, r4
 8001410:	d96a      	bls.n	80014e8 <__udivmoddi4+0x2b4>
 8001412:	3802      	subs	r0, #2
 8001414:	4464      	add	r4, ip
 8001416:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800141a:	fba0 9502 	umull	r9, r5, r0, r2
 800141e:	eba4 040e 	sub.w	r4, r4, lr
 8001422:	42ac      	cmp	r4, r5
 8001424:	46c8      	mov	r8, r9
 8001426:	46ae      	mov	lr, r5
 8001428:	d356      	bcc.n	80014d8 <__udivmoddi4+0x2a4>
 800142a:	d053      	beq.n	80014d4 <__udivmoddi4+0x2a0>
 800142c:	2e00      	cmp	r6, #0
 800142e:	d069      	beq.n	8001504 <__udivmoddi4+0x2d0>
 8001430:	ebb3 0208 	subs.w	r2, r3, r8
 8001434:	eb64 040e 	sbc.w	r4, r4, lr
 8001438:	fa22 f301 	lsr.w	r3, r2, r1
 800143c:	fa04 f707 	lsl.w	r7, r4, r7
 8001440:	431f      	orrs	r7, r3
 8001442:	40cc      	lsrs	r4, r1
 8001444:	e9c6 7400 	strd	r7, r4, [r6]
 8001448:	2100      	movs	r1, #0
 800144a:	e747      	b.n	80012dc <__udivmoddi4+0xa8>
 800144c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001450:	f1c2 0120 	rsb	r1, r2, #32
 8001454:	fa25 f301 	lsr.w	r3, r5, r1
 8001458:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800145c:	fa20 f101 	lsr.w	r1, r0, r1
 8001460:	4095      	lsls	r5, r2
 8001462:	430d      	orrs	r5, r1
 8001464:	fbb3 f1f7 	udiv	r1, r3, r7
 8001468:	fb07 3311 	mls	r3, r7, r1, r3
 800146c:	fa1f fe8c 	uxth.w	lr, ip
 8001470:	0c28      	lsrs	r0, r5, #16
 8001472:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001476:	fb01 f30e 	mul.w	r3, r1, lr
 800147a:	4283      	cmp	r3, r0
 800147c:	fa04 f402 	lsl.w	r4, r4, r2
 8001480:	d908      	bls.n	8001494 <__udivmoddi4+0x260>
 8001482:	eb1c 0000 	adds.w	r0, ip, r0
 8001486:	f101 38ff 	add.w	r8, r1, #4294967295
 800148a:	d22f      	bcs.n	80014ec <__udivmoddi4+0x2b8>
 800148c:	4283      	cmp	r3, r0
 800148e:	d92d      	bls.n	80014ec <__udivmoddi4+0x2b8>
 8001490:	3902      	subs	r1, #2
 8001492:	4460      	add	r0, ip
 8001494:	1ac0      	subs	r0, r0, r3
 8001496:	fbb0 f3f7 	udiv	r3, r0, r7
 800149a:	fb07 0013 	mls	r0, r7, r3, r0
 800149e:	b2ad      	uxth	r5, r5
 80014a0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80014a4:	fb03 f00e 	mul.w	r0, r3, lr
 80014a8:	42a8      	cmp	r0, r5
 80014aa:	d908      	bls.n	80014be <__udivmoddi4+0x28a>
 80014ac:	eb1c 0505 	adds.w	r5, ip, r5
 80014b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80014b4:	d216      	bcs.n	80014e4 <__udivmoddi4+0x2b0>
 80014b6:	42a8      	cmp	r0, r5
 80014b8:	d914      	bls.n	80014e4 <__udivmoddi4+0x2b0>
 80014ba:	3b02      	subs	r3, #2
 80014bc:	4465      	add	r5, ip
 80014be:	1a28      	subs	r0, r5, r0
 80014c0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80014c4:	e738      	b.n	8001338 <__udivmoddi4+0x104>
 80014c6:	4631      	mov	r1, r6
 80014c8:	4630      	mov	r0, r6
 80014ca:	e707      	b.n	80012dc <__udivmoddi4+0xa8>
 80014cc:	462f      	mov	r7, r5
 80014ce:	e6e4      	b.n	800129a <__udivmoddi4+0x66>
 80014d0:	4618      	mov	r0, r3
 80014d2:	e6f9      	b.n	80012c8 <__udivmoddi4+0x94>
 80014d4:	454b      	cmp	r3, r9
 80014d6:	d2a9      	bcs.n	800142c <__udivmoddi4+0x1f8>
 80014d8:	ebb9 0802 	subs.w	r8, r9, r2
 80014dc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80014e0:	3801      	subs	r0, #1
 80014e2:	e7a3      	b.n	800142c <__udivmoddi4+0x1f8>
 80014e4:	4643      	mov	r3, r8
 80014e6:	e7ea      	b.n	80014be <__udivmoddi4+0x28a>
 80014e8:	4628      	mov	r0, r5
 80014ea:	e794      	b.n	8001416 <__udivmoddi4+0x1e2>
 80014ec:	4641      	mov	r1, r8
 80014ee:	e7d1      	b.n	8001494 <__udivmoddi4+0x260>
 80014f0:	46d0      	mov	r8, sl
 80014f2:	e77b      	b.n	80013ec <__udivmoddi4+0x1b8>
 80014f4:	4464      	add	r4, ip
 80014f6:	3802      	subs	r0, #2
 80014f8:	e747      	b.n	800138a <__udivmoddi4+0x156>
 80014fa:	3b02      	subs	r3, #2
 80014fc:	4465      	add	r5, ip
 80014fe:	e72f      	b.n	8001360 <__udivmoddi4+0x12c>
 8001500:	4608      	mov	r0, r1
 8001502:	e706      	b.n	8001312 <__udivmoddi4+0xde>
 8001504:	4631      	mov	r1, r6
 8001506:	e6e9      	b.n	80012dc <__udivmoddi4+0xa8>

08001508 <__aeabi_idiv0>:
 8001508:	4770      	bx	lr
 800150a:	bf00      	nop

0800150c <__circ_gbuf_pop>:
#include <string.h>

#include <circular_buffer.h>

int __circ_gbuf_pop(circ_gbuf_t *circ_buf, void *elem, int read_only)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b086      	sub	sp, #24
 8001510:	af00      	add	r7, sp, #0
 8001512:	60f8      	str	r0, [r7, #12]
 8001514:	60b9      	str	r1, [r7, #8]
 8001516:	607a      	str	r2, [r7, #4]
	int total;
	char *tail;

	total = circ_buf->push_count - circ_buf->pop_count;
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	889b      	ldrh	r3, [r3, #4]
 800151c:	461a      	mov	r2, r3
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	88db      	ldrh	r3, [r3, #6]
 8001522:	1ad3      	subs	r3, r2, r3
 8001524:	617b      	str	r3, [r7, #20]
	if (total < 0)
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	2b00      	cmp	r3, #0
 800152a:	da05      	bge.n	8001538 <__circ_gbuf_pop+0x2c>
		total += (2 * circ_buf->size);
 800152c:	68fb      	ldr	r3, [r7, #12]
 800152e:	891b      	ldrh	r3, [r3, #8]
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	697a      	ldr	r2, [r7, #20]
 8001534:	4413      	add	r3, r2
 8001536:	617b      	str	r3, [r7, #20]

	if (total == 0)
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	2b00      	cmp	r3, #0
 800153c:	d102      	bne.n	8001544 <__circ_gbuf_pop+0x38>
		return -1; // Empty
 800153e:	f04f 33ff 	mov.w	r3, #4294967295
 8001542:	e031      	b.n	80015a8 <__circ_gbuf_pop+0x9c>

	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	6819      	ldr	r1, [r3, #0]
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	88db      	ldrh	r3, [r3, #6]
 800154c:	68fa      	ldr	r2, [r7, #12]
 800154e:	8912      	ldrh	r2, [r2, #8]
 8001550:	fbb3 f0f2 	udiv	r0, r3, r2
 8001554:	fb00 f202 	mul.w	r2, r0, r2
 8001558:	1a9b      	subs	r3, r3, r2
 800155a:	b29b      	uxth	r3, r3
 800155c:	461a      	mov	r2, r3
			* circ_buf->element_size);
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	895b      	ldrh	r3, [r3, #10]
 8001562:	fb02 f303 	mul.w	r3, r2, r3
	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001566:	440b      	add	r3, r1
 8001568:	613b      	str	r3, [r7, #16]

	if (elem)
 800156a:	68bb      	ldr	r3, [r7, #8]
 800156c:	2b00      	cmp	r3, #0
 800156e:	d006      	beq.n	800157e <__circ_gbuf_pop+0x72>
		memcpy(elem, tail, circ_buf->element_size);
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	895b      	ldrh	r3, [r3, #10]
 8001574:	461a      	mov	r2, r3
 8001576:	6939      	ldr	r1, [r7, #16]
 8001578:	68b8      	ldr	r0, [r7, #8]
 800157a:	f009 febb 	bl	800b2f4 <memcpy>

	if (!read_only) {
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	2b00      	cmp	r3, #0
 8001582:	d110      	bne.n	80015a6 <__circ_gbuf_pop+0x9a>
#ifdef CRICBUF_CLEAN_ON_POP
		memset(tail, 0, circ_buf->element_size);
#endif
		circ_buf->pop_count++;
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	88db      	ldrh	r3, [r3, #6]
 8001588:	3301      	adds	r3, #1
 800158a:	b29a      	uxth	r2, r3
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	80da      	strh	r2, [r3, #6]
		if (circ_buf->pop_count >= (2*circ_buf->size))
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	88db      	ldrh	r3, [r3, #6]
 8001594:	461a      	mov	r2, r3
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	891b      	ldrh	r3, [r3, #8]
 800159a:	005b      	lsls	r3, r3, #1
 800159c:	429a      	cmp	r2, r3
 800159e:	db02      	blt.n	80015a6 <__circ_gbuf_pop+0x9a>
			circ_buf->pop_count = 0;
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	2200      	movs	r2, #0
 80015a4:	80da      	strh	r2, [r3, #6]
	}
	return 0;
 80015a6:	2300      	movs	r3, #0
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3718      	adds	r7, #24
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <__circ_gbuf_push>:

int __circ_gbuf_push(circ_gbuf_t *circ_buf, void *elem)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b084      	sub	sp, #16
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	6039      	str	r1, [r7, #0]
	int total;
	char *head;

	total = circ_buf->push_count - circ_buf->pop_count;
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	889b      	ldrh	r3, [r3, #4]
 80015be:	461a      	mov	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	88db      	ldrh	r3, [r3, #6]
 80015c4:	1ad3      	subs	r3, r2, r3
 80015c6:	60fb      	str	r3, [r7, #12]
	if (total < 0)
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	da05      	bge.n	80015da <__circ_gbuf_push+0x2a>
		total += (2 * circ_buf->size);
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	891b      	ldrh	r3, [r3, #8]
 80015d2:	005b      	lsls	r3, r3, #1
 80015d4:	68fa      	ldr	r2, [r7, #12]
 80015d6:	4413      	add	r3, r2
 80015d8:	60fb      	str	r3, [r7, #12]

	if (total >=  circ_buf->size)
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	891b      	ldrh	r3, [r3, #8]
 80015de:	461a      	mov	r2, r3
 80015e0:	68fb      	ldr	r3, [r7, #12]
 80015e2:	4293      	cmp	r3, r2
 80015e4:	db02      	blt.n	80015ec <__circ_gbuf_push+0x3c>
		return -1; // Full
 80015e6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ea:	e02b      	b.n	8001644 <__circ_gbuf_push+0x94>

	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	6819      	ldr	r1, [r3, #0]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	889b      	ldrh	r3, [r3, #4]
 80015f4:	687a      	ldr	r2, [r7, #4]
 80015f6:	8912      	ldrh	r2, [r2, #8]
 80015f8:	fbb3 f0f2 	udiv	r0, r3, r2
 80015fc:	fb00 f202 	mul.w	r2, r0, r2
 8001600:	1a9b      	subs	r3, r3, r2
 8001602:	b29b      	uxth	r3, r3
 8001604:	461a      	mov	r2, r3
			* circ_buf->element_size );
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	895b      	ldrh	r3, [r3, #10]
 800160a:	fb02 f303 	mul.w	r3, r2, r3
	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 800160e:	440b      	add	r3, r1
 8001610:	60bb      	str	r3, [r7, #8]
	memcpy(head, elem, circ_buf->element_size);
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	895b      	ldrh	r3, [r3, #10]
 8001616:	461a      	mov	r2, r3
 8001618:	6839      	ldr	r1, [r7, #0]
 800161a:	68b8      	ldr	r0, [r7, #8]
 800161c:	f009 fe6a 	bl	800b2f4 <memcpy>
	circ_buf->push_count++;
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	889b      	ldrh	r3, [r3, #4]
 8001624:	3301      	adds	r3, #1
 8001626:	b29a      	uxth	r2, r3
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	809a      	strh	r2, [r3, #4]
	if (circ_buf->push_count >= (2*circ_buf->size))
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	889b      	ldrh	r3, [r3, #4]
 8001630:	461a      	mov	r2, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	891b      	ldrh	r3, [r3, #8]
 8001636:	005b      	lsls	r3, r3, #1
 8001638:	429a      	cmp	r2, r3
 800163a:	db02      	blt.n	8001642 <__circ_gbuf_push+0x92>
		circ_buf->push_count = 0;
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	2200      	movs	r2, #0
 8001640:	809a      	strh	r2, [r3, #4]
	return 0;
 8001642:	2300      	movs	r3, #0
}
 8001644:	4618      	mov	r0, r3
 8001646:	3710      	adds	r7, #16
 8001648:	46bd      	mov	sp, r7
 800164a:	bd80      	pop	{r7, pc}

0800164c <Relay_control>:
extern uint16_t DAC_tx_tmp_buffer[2];
extern float DDS_FTW;


//==============================================================================================
void Relay_control(uint8_t relay,uint8_t state){
 800164c:	b580      	push	{r7, lr}
 800164e:	b084      	sub	sp, #16
 8001650:	af00      	add	r7, sp, #0
 8001652:	4603      	mov	r3, r0
 8001654:	460a      	mov	r2, r1
 8001656:	71fb      	strb	r3, [r7, #7]
 8001658:	4613      	mov	r3, r2
 800165a:	71bb      	strb	r3, [r7, #6]
	int Relay_address=0;
 800165c:	2300      	movs	r3, #0
 800165e:	60fb      	str	r3, [r7, #12]
	if(relay>3 || state>1) return;
 8001660:	79fb      	ldrb	r3, [r7, #7]
 8001662:	2b03      	cmp	r3, #3
 8001664:	f200 80a3 	bhi.w	80017ae <Relay_control+0x162>
 8001668:	79bb      	ldrb	r3, [r7, #6]
 800166a:	2b01      	cmp	r3, #1
 800166c:	f200 809f 	bhi.w	80017ae <Relay_control+0x162>

	if(relay==0x00 && state==0x00)
 8001670:	79fb      	ldrb	r3, [r7, #7]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d141      	bne.n	80016fa <Relay_control+0xae>
 8001676:	79bb      	ldrb	r3, [r7, #6]
 8001678:	2b00      	cmp	r3, #0
 800167a:	d13e      	bne.n	80016fa <Relay_control+0xae>
	{
		while(Relay_address<=0x5) // Set all OUTx to zero
 800167c:	e039      	b.n	80016f2 <Relay_control+0xa6>
		{
			HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 800167e:	68fb      	ldr	r3, [r7, #12]
 8001680:	b2db      	uxtb	r3, r3
 8001682:	f003 0301 	and.w	r3, r3, #1
 8001686:	b2db      	uxtb	r3, r3
 8001688:	461a      	mov	r2, r3
 800168a:	2102      	movs	r1, #2
 800168c:	484a      	ldr	r0, [pc, #296]	; (80017b8 <Relay_control+0x16c>)
 800168e:	f004 fed1 	bl	8006434 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001692:	68fb      	ldr	r3, [r7, #12]
 8001694:	105b      	asrs	r3, r3, #1
 8001696:	b2db      	uxtb	r3, r3
 8001698:	f003 0301 	and.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	461a      	mov	r2, r3
 80016a0:	2104      	movs	r1, #4
 80016a2:	4845      	ldr	r0, [pc, #276]	; (80017b8 <Relay_control+0x16c>)
 80016a4:	f004 fec6 	bl	8006434 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	109b      	asrs	r3, r3, #2
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	f003 0301 	and.w	r3, r3, #1
 80016b2:	b2db      	uxtb	r3, r3
 80016b4:	461a      	mov	r2, r3
 80016b6:	2108      	movs	r1, #8
 80016b8:	483f      	ldr	r0, [pc, #252]	; (80017b8 <Relay_control+0x16c>)
 80016ba:	f004 febb 	bl	8006434 <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 0); // LVL 0
 80016be:	2200      	movs	r2, #0
 80016c0:	2101      	movs	r1, #1
 80016c2:	483d      	ldr	r0, [pc, #244]	; (80017b8 <Relay_control+0x16c>)
 80016c4:	f004 feb6 	bl	8006434 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 80016c8:	2200      	movs	r2, #0
 80016ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016ce:	483b      	ldr	r0, [pc, #236]	; (80017bc <Relay_control+0x170>)
 80016d0:	f004 feb0 	bl	8006434 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016d4:	2001      	movs	r0, #1
 80016d6:	f004 fb5d 	bl	8005d94 <HAL_Delay>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1);
 80016da:	2201      	movs	r2, #1
 80016dc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016e0:	4836      	ldr	r0, [pc, #216]	; (80017bc <Relay_control+0x170>)
 80016e2:	f004 fea7 	bl	8006434 <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016e6:	2001      	movs	r0, #1
 80016e8:	f004 fb54 	bl	8005d94 <HAL_Delay>
			Relay_address++;
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	3301      	adds	r3, #1
 80016f0:	60fb      	str	r3, [r7, #12]
		while(Relay_address<=0x5) // Set all OUTx to zero
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	2b05      	cmp	r3, #5
 80016f6:	ddc2      	ble.n	800167e <Relay_control+0x32>
		}
		return;
 80016f8:	e05a      	b.n	80017b0 <Relay_control+0x164>
	}


	switch (relay)
 80016fa:	79fb      	ldrb	r3, [r7, #7]
 80016fc:	2b03      	cmp	r3, #3
 80016fe:	d006      	beq.n	800170e <Relay_control+0xc2>
 8001700:	2b03      	cmp	r3, #3
 8001702:	dc1f      	bgt.n	8001744 <Relay_control+0xf8>
 8001704:	2b01      	cmp	r3, #1
 8001706:	d014      	beq.n	8001732 <Relay_control+0xe6>
 8001708:	2b02      	cmp	r3, #2
 800170a:	d009      	beq.n	8001720 <Relay_control+0xd4>
 800170c:	e01a      	b.n	8001744 <Relay_control+0xf8>
	{
	case 3:
		if (state==1){
 800170e:	79bb      	ldrb	r3, [r7, #6]
 8001710:	2b01      	cmp	r3, #1
 8001712:	d102      	bne.n	800171a <Relay_control+0xce>
			Relay_address=0x5; //OUT6
 8001714:	2305      	movs	r3, #5
 8001716:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x4; //OUT5
		} break;
 8001718:	e014      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x4; //OUT5
 800171a:	2304      	movs	r3, #4
 800171c:	60fb      	str	r3, [r7, #12]
		} break;
 800171e:	e011      	b.n	8001744 <Relay_control+0xf8>
	case 2:
		if (state==1){
 8001720:	79bb      	ldrb	r3, [r7, #6]
 8001722:	2b01      	cmp	r3, #1
 8001724:	d102      	bne.n	800172c <Relay_control+0xe0>
			Relay_address=0x3; //OUT4
 8001726:	2303      	movs	r3, #3
 8001728:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x2; //OUT3
		} break;
 800172a:	e00b      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x2; //OUT3
 800172c:	2302      	movs	r3, #2
 800172e:	60fb      	str	r3, [r7, #12]
		} break;
 8001730:	e008      	b.n	8001744 <Relay_control+0xf8>
	case 1:
		if (state==1){
 8001732:	79bb      	ldrb	r3, [r7, #6]
 8001734:	2b01      	cmp	r3, #1
 8001736:	d102      	bne.n	800173e <Relay_control+0xf2>
			Relay_address=0x1; //OUT2
 8001738:	2301      	movs	r3, #1
 800173a:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x0; //OUT1
		} break;
 800173c:	e001      	b.n	8001742 <Relay_control+0xf6>
			Relay_address=0x0; //OUT1
 800173e:	2300      	movs	r3, #0
 8001740:	60fb      	str	r3, [r7, #12]
		} break;
 8001742:	bf00      	nop
	}

	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	b2db      	uxtb	r3, r3
 8001748:	f003 0301 	and.w	r3, r3, #1
 800174c:	b2db      	uxtb	r3, r3
 800174e:	461a      	mov	r2, r3
 8001750:	2102      	movs	r1, #2
 8001752:	4819      	ldr	r0, [pc, #100]	; (80017b8 <Relay_control+0x16c>)
 8001754:	f004 fe6e 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	105b      	asrs	r3, r3, #1
 800175c:	b2db      	uxtb	r3, r3
 800175e:	f003 0301 	and.w	r3, r3, #1
 8001762:	b2db      	uxtb	r3, r3
 8001764:	461a      	mov	r2, r3
 8001766:	2104      	movs	r1, #4
 8001768:	4813      	ldr	r0, [pc, #76]	; (80017b8 <Relay_control+0x16c>)
 800176a:	f004 fe63 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	109b      	asrs	r3, r3, #2
 8001772:	b2db      	uxtb	r3, r3
 8001774:	f003 0301 	and.w	r3, r3, #1
 8001778:	b2db      	uxtb	r3, r3
 800177a:	461a      	mov	r2, r3
 800177c:	2108      	movs	r1, #8
 800177e:	480e      	ldr	r0, [pc, #56]	; (80017b8 <Relay_control+0x16c>)
 8001780:	f004 fe58 	bl	8006434 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 1); // LVL 1
 8001784:	2201      	movs	r2, #1
 8001786:	2101      	movs	r1, #1
 8001788:	480b      	ldr	r0, [pc, #44]	; (80017b8 <Relay_control+0x16c>)
 800178a:	f004 fe53 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 800178e:	2200      	movs	r2, #0
 8001790:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001794:	4809      	ldr	r0, [pc, #36]	; (80017bc <Relay_control+0x170>)
 8001796:	f004 fe4d 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_Delay(1); // wait 1ms
 800179a:	2001      	movs	r0, #1
 800179c:	f004 fafa 	bl	8005d94 <HAL_Delay>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1); // End strobe
 80017a0:	2201      	movs	r2, #1
 80017a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80017a6:	4805      	ldr	r0, [pc, #20]	; (80017bc <Relay_control+0x170>)
 80017a8:	f004 fe44 	bl	8006434 <HAL_GPIO_WritePin>
 80017ac:	e000      	b.n	80017b0 <Relay_control+0x164>
	if(relay>3 || state>1) return;
 80017ae:	bf00      	nop
}
 80017b0:	3710      	adds	r7, #16
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020800 	.word	0x40020800

080017c0 <CPLD_control>:
//==============================================================================================



//==============================================================================================
void CPLD_control(FunctionalState state){
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	4603      	mov	r3, r0
 80017c8:	71fb      	strb	r3, [r7, #7]
	uint8_t send_word=0x00;
 80017ca:	2300      	movs	r3, #0
 80017cc:	75fb      	strb	r3, [r7, #23]

	// Calculate CPLD divider to expand DDS FTW to 0.1 ppm
	float dds_tmp_calc=DDS_clock_frequecny;
 80017ce:	4b3f      	ldr	r3, [pc, #252]	; (80018cc <CPLD_control+0x10c>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc/=(float)0xFFFFFFFF; // 10MHz / 2^32 = 0.0023283 Hz DDS FTW resolution
 80017d4:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 80017d8:	68f8      	ldr	r0, [r7, #12]
 80017da:	f7ff fba9 	bl	8000f30 <__aeabi_fdiv>
 80017de:	4603      	mov	r3, r0
 80017e0:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc=dds_tmp_calc/(DDS_target_frequecny/(float)1E7); // 0.0023283 Hz / (74.898214 Hz / 1E7) = 310.86 minimum CPLD divider
 80017e2:	4b3b      	ldr	r3, [pc, #236]	; (80018d0 <CPLD_control+0x110>)
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	493b      	ldr	r1, [pc, #236]	; (80018d4 <CPLD_control+0x114>)
 80017e8:	4618      	mov	r0, r3
 80017ea:	f7ff fba1 	bl	8000f30 <__aeabi_fdiv>
 80017ee:	4603      	mov	r3, r0
 80017f0:	4619      	mov	r1, r3
 80017f2:	68f8      	ldr	r0, [r7, #12]
 80017f4:	f7ff fb9c 	bl	8000f30 <__aeabi_fdiv>
 80017f8:	4603      	mov	r3, r0
 80017fa:	60fb      	str	r3, [r7, #12]

	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 80017fc:	2301      	movs	r3, #1
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	e017      	b.n	8001832 <CPLD_control+0x72>
	{
		if(((1<<i)+1) > dds_tmp_calc)
 8001802:	2201      	movs	r2, #1
 8001804:	693b      	ldr	r3, [r7, #16]
 8001806:	fa02 f303 	lsl.w	r3, r2, r3
 800180a:	3301      	adds	r3, #1
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fa87 	bl	8000d20 <__aeabi_i2f>
 8001812:	4603      	mov	r3, r0
 8001814:	4619      	mov	r1, r3
 8001816:	68f8      	ldr	r0, [r7, #12]
 8001818:	f7ff fc74 	bl	8001104 <__aeabi_fcmplt>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d004      	beq.n	800182c <CPLD_control+0x6c>
		{
			CPLD_WORD=i;
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	b2da      	uxtb	r2, r3
 8001826:	4b2c      	ldr	r3, [pc, #176]	; (80018d8 <CPLD_control+0x118>)
 8001828:	701a      	strb	r2, [r3, #0]
			break;
 800182a:	e005      	b.n	8001838 <CPLD_control+0x78>
	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 800182c:	693b      	ldr	r3, [r7, #16]
 800182e:	3301      	adds	r3, #1
 8001830:	613b      	str	r3, [r7, #16]
 8001832:	693b      	ldr	r3, [r7, #16]
 8001834:	2b0e      	cmp	r3, #14
 8001836:	dde4      	ble.n	8001802 <CPLD_control+0x42>
		}
	}

	if(state==CPLD_ON_STATE)send_word=CPLD_WORD;
 8001838:	79fb      	ldrb	r3, [r7, #7]
 800183a:	2b01      	cmp	r3, #1
 800183c:	d102      	bne.n	8001844 <CPLD_control+0x84>
 800183e:	4b26      	ldr	r3, [pc, #152]	; (80018d8 <CPLD_control+0x118>)
 8001840:	781b      	ldrb	r3, [r3, #0]
 8001842:	75fb      	strb	r3, [r7, #23]
	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin,  send_word & 0x1     );
 8001844:	7dfb      	ldrb	r3, [r7, #23]
 8001846:	f003 0301 	and.w	r3, r3, #1
 800184a:	b2db      	uxtb	r3, r3
 800184c:	461a      	mov	r2, r3
 800184e:	2101      	movs	r1, #1
 8001850:	4822      	ldr	r0, [pc, #136]	; (80018dc <CPLD_control+0x11c>)
 8001852:	f004 fdef 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin, (send_word & 0x2) >>1);
 8001856:	7dfb      	ldrb	r3, [r7, #23]
 8001858:	105b      	asrs	r3, r3, #1
 800185a:	b2db      	uxtb	r3, r3
 800185c:	f003 0301 	and.w	r3, r3, #1
 8001860:	b2db      	uxtb	r3, r3
 8001862:	461a      	mov	r2, r3
 8001864:	2102      	movs	r1, #2
 8001866:	481d      	ldr	r0, [pc, #116]	; (80018dc <CPLD_control+0x11c>)
 8001868:	f004 fde4 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (send_word & 0x4) >>2);
 800186c:	7dfb      	ldrb	r3, [r7, #23]
 800186e:	109b      	asrs	r3, r3, #2
 8001870:	b2db      	uxtb	r3, r3
 8001872:	f003 0301 	and.w	r3, r3, #1
 8001876:	b2db      	uxtb	r3, r3
 8001878:	461a      	mov	r2, r3
 800187a:	2104      	movs	r1, #4
 800187c:	4817      	ldr	r0, [pc, #92]	; (80018dc <CPLD_control+0x11c>)
 800187e:	f004 fdd9 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (send_word & 0x8) >>3);
 8001882:	7dfb      	ldrb	r3, [r7, #23]
 8001884:	10db      	asrs	r3, r3, #3
 8001886:	b2db      	uxtb	r3, r3
 8001888:	f003 0301 	and.w	r3, r3, #1
 800188c:	b2db      	uxtb	r3, r3
 800188e:	461a      	mov	r2, r3
 8001890:	2108      	movs	r1, #8
 8001892:	4812      	ldr	r0, [pc, #72]	; (80018dc <CPLD_control+0x11c>)
 8001894:	f004 fdce 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_SET); // Send strobe
 8001898:	2201      	movs	r2, #1
 800189a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800189e:	4810      	ldr	r0, [pc, #64]	; (80018e0 <CPLD_control+0x120>)
 80018a0:	f004 fdc8 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80018a4:	2200      	movs	r2, #0
 80018a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80018aa:	480d      	ldr	r0, [pc, #52]	; (80018e0 <CPLD_control+0x120>)
 80018ac:	f004 fdc2 	bl	8006434 <HAL_GPIO_WritePin>

	if(state==CPLD_OFF_STATE)
 80018b0:	79fb      	ldrb	r3, [r7, #7]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d103      	bne.n	80018be <CPLD_control+0xfe>
	{
		cfg.LDACMODE=0;
 80018b6:	4b0b      	ldr	r3, [pc, #44]	; (80018e4 <CPLD_control+0x124>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	709a      	strb	r2, [r3, #2]
	}
	else
	{
		cfg.LDACMODE=1;
	}
}
 80018bc:	e002      	b.n	80018c4 <CPLD_control+0x104>
		cfg.LDACMODE=1;
 80018be:	4b09      	ldr	r3, [pc, #36]	; (80018e4 <CPLD_control+0x124>)
 80018c0:	2201      	movs	r2, #1
 80018c2:	709a      	strb	r2, [r3, #2]
}
 80018c4:	bf00      	nop
 80018c6:	3718      	adds	r7, #24
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}
 80018cc:	2000001c 	.word	0x2000001c
 80018d0:	20000994 	.word	0x20000994
 80018d4:	4b189680 	.word	0x4b189680
 80018d8:	2000098e 	.word	0x2000098e
 80018dc:	40020000 	.word	0x40020000
 80018e0:	40020800 	.word	0x40020800
 80018e4:	20000984 	.word	0x20000984

080018e8 <DAC_TEMP_CAL>:

}

//==============================================================================================
void DAC_TEMP_CAL(void)
{
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b086      	sub	sp, #24
 80018ec:	af00      	add	r7, sp, #0
	uint32_t DAC_tx_buffer;
	uint16_t DAC_tx_tmp_buffer[2];

	uint16_t spi_receive[2]={0x0,0x0},DAC_tx_tmp_buffer2[2],ALM=0;
 80018ee:	2300      	movs	r3, #0
 80018f0:	813b      	strh	r3, [r7, #8]
 80018f2:	2300      	movs	r3, #0
 80018f4:	817b      	strh	r3, [r7, #10]
 80018f6:	2300      	movs	r3, #0
 80018f8:	82fb      	strh	r3, [r7, #22]

	//CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal

	cfg.EN_TMP_CAL=1;
 80018fa:	4b2f      	ldr	r3, [pc, #188]	; (80019b8 <DAC_TEMP_CAL+0xd0>)
 80018fc:	2201      	movs	r2, #1
 80018fe:	701a      	strb	r2, [r3, #0]
	DAC_SendInit();
 8001900:	f00e fd76 	bl	80103f0 <__DAC_SendInit_veneer>

	DAC_tx_buffer=0x04000100; // Write TRIGGER RCLTMP
 8001904:	4b2d      	ldr	r3, [pc, #180]	; (80019bc <DAC_TEMP_CAL+0xd4>)
 8001906:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001908:	693b      	ldr	r3, [r7, #16]
 800190a:	0c1b      	lsrs	r3, r3, #16
 800190c:	b29b      	uxth	r3, r3
 800190e:	81bb      	strh	r3, [r7, #12]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001910:	693b      	ldr	r3, [r7, #16]
 8001912:	b29b      	uxth	r3, r3
 8001914:	81fb      	strh	r3, [r7, #14]

	DAC_tx_buffer=0x85000000; // read status register
 8001916:	f04f 4305 	mov.w	r3, #2231369728	; 0x85000000
 800191a:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer2[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 800191c:	693b      	ldr	r3, [r7, #16]
 800191e:	0c1b      	lsrs	r3, r3, #16
 8001920:	b29b      	uxth	r3, r3
 8001922:	80bb      	strh	r3, [r7, #4]
	DAC_tx_tmp_buffer2[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001924:	693b      	ldr	r3, [r7, #16]
 8001926:	b29b      	uxth	r3, r3
 8001928:	80fb      	strh	r3, [r7, #6]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 800192a:	2200      	movs	r2, #0
 800192c:	2110      	movs	r1, #16
 800192e:	4824      	ldr	r0, [pc, #144]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 8001930:	f004 fd80 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 8001934:	f107 010c 	add.w	r1, r7, #12
 8001938:	2302      	movs	r3, #2
 800193a:	2202      	movs	r2, #2
 800193c:	4821      	ldr	r0, [pc, #132]	; (80019c4 <DAC_TEMP_CAL+0xdc>)
 800193e:	f006 fdfd 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001942:	2201      	movs	r2, #1
 8001944:	2110      	movs	r1, #16
 8001946:	481e      	ldr	r0, [pc, #120]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 8001948:	f004 fd74 	bl	8006434 <HAL_GPIO_WritePin>

	do{ // Check complete flag
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 800194c:	2200      	movs	r2, #0
 800194e:	2110      	movs	r1, #16
 8001950:	481b      	ldr	r0, [pc, #108]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 8001952:	f004 fd6f 	bl	8006434 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer2,2,2);
 8001956:	1d39      	adds	r1, r7, #4
 8001958:	2302      	movs	r3, #2
 800195a:	2202      	movs	r2, #2
 800195c:	4819      	ldr	r0, [pc, #100]	; (80019c4 <DAC_TEMP_CAL+0xdc>)
 800195e:	f006 fded 	bl	800853c <HAL_SPI_Transmit>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001962:	2201      	movs	r2, #1
 8001964:	2110      	movs	r1, #16
 8001966:	4816      	ldr	r0, [pc, #88]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 8001968:	f004 fd64 	bl	8006434 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 800196c:	2200      	movs	r2, #0
 800196e:	2110      	movs	r1, #16
 8001970:	4813      	ldr	r0, [pc, #76]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 8001972:	f004 fd5f 	bl	8006434 <HAL_GPIO_WritePin>
		HAL_SPI_Receive(&hspi1,(uint8_t *)spi_receive, 2, 2);
 8001976:	f107 0108 	add.w	r1, r7, #8
 800197a:	2302      	movs	r3, #2
 800197c:	2202      	movs	r2, #2
 800197e:	4811      	ldr	r0, [pc, #68]	; (80019c4 <DAC_TEMP_CAL+0xdc>)
 8001980:	f007 f880 	bl	8008a84 <HAL_SPI_Receive>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001984:	2201      	movs	r2, #1
 8001986:	2110      	movs	r1, #16
 8001988:	480d      	ldr	r0, [pc, #52]	; (80019c0 <DAC_TEMP_CAL+0xd8>)
 800198a:	f004 fd53 	bl	8006434 <HAL_GPIO_WritePin>
		ALM=(spi_receive[1] & 0x1000) >> 12;
 800198e:	897b      	ldrh	r3, [r7, #10]
 8001990:	131b      	asrs	r3, r3, #12
 8001992:	b29b      	uxth	r3, r3
 8001994:	f003 0301 	and.w	r3, r3, #1
 8001998:	82fb      	strh	r3, [r7, #22]
		if(ALM!=1)HAL_Delay(10);
 800199a:	8afb      	ldrh	r3, [r7, #22]
 800199c:	2b01      	cmp	r3, #1
 800199e:	d002      	beq.n	80019a6 <DAC_TEMP_CAL+0xbe>
 80019a0:	200a      	movs	r0, #10
 80019a2:	f004 f9f7 	bl	8005d94 <HAL_Delay>
	}while(ALM!=1);
 80019a6:	8afb      	ldrh	r3, [r7, #22]
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	d1cf      	bne.n	800194c <DAC_TEMP_CAL+0x64>
}
 80019ac:	bf00      	nop
 80019ae:	bf00      	nop
 80019b0:	3718      	adds	r7, #24
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bd80      	pop	{r7, pc}
 80019b6:	bf00      	nop
 80019b8:	20000984 	.word	0x20000984
 80019bc:	04000100 	.word	0x04000100
 80019c0:	40020000 	.word	0x40020000
 80019c4:	200009c8 	.word	0x200009c8

080019c8 <DDS_Calculation>:

void DDS_Calculation(void)
{
 80019c8:	b590      	push	{r4, r7, lr}
 80019ca:	b087      	sub	sp, #28
 80019cc:	af00      	add	r7, sp, #0
	float hw_limit=1000; // 1kHz hardware optimized limit
 80019ce:	4b87      	ldr	r3, [pc, #540]	; (8001bec <DDS_Calculation+0x224>)
 80019d0:	613b      	str	r3, [r7, #16]
	float dac_counts=DAC_CODE_TOP-1;
 80019d2:	4b87      	ldr	r3, [pc, #540]	; (8001bf0 <DDS_Calculation+0x228>)
 80019d4:	60fb      	str	r3, [r7, #12]
	float corr_coeff;
	float dac_tmp=DAC_code;
 80019d6:	4b87      	ldr	r3, [pc, #540]	; (8001bf4 <DDS_Calculation+0x22c>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	4618      	mov	r0, r3
 80019dc:	f7ff f99c 	bl	8000d18 <__aeabi_ui2f>
 80019e0:	4603      	mov	r3, r0
 80019e2:	60bb      	str	r3, [r7, #8]
	float second_left;
	uint32_t codes_left=0;
 80019e4:	2300      	movs	r3, #0
 80019e6:	617b      	str	r3, [r7, #20]

	// Linearity correction
	corr_coeff=corr_coeff_1*dac_tmp*dac_tmp;
 80019e8:	4b83      	ldr	r3, [pc, #524]	; (8001bf8 <DDS_Calculation+0x230>)
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	68b9      	ldr	r1, [r7, #8]
 80019ee:	4618      	mov	r0, r3
 80019f0:	f7ff f9ea 	bl	8000dc8 <__aeabi_fmul>
 80019f4:	4603      	mov	r3, r0
 80019f6:	4619      	mov	r1, r3
 80019f8:	68b8      	ldr	r0, [r7, #8]
 80019fa:	f7ff f9e5 	bl	8000dc8 <__aeabi_fmul>
 80019fe:	4603      	mov	r3, r0
 8001a00:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_2*dac_tmp;
 8001a02:	4b7e      	ldr	r3, [pc, #504]	; (8001bfc <DDS_Calculation+0x234>)
 8001a04:	681b      	ldr	r3, [r3, #0]
 8001a06:	68b9      	ldr	r1, [r7, #8]
 8001a08:	4618      	mov	r0, r3
 8001a0a:	f7ff f9dd 	bl	8000dc8 <__aeabi_fmul>
 8001a0e:	4603      	mov	r3, r0
 8001a10:	4619      	mov	r1, r3
 8001a12:	6878      	ldr	r0, [r7, #4]
 8001a14:	f7ff f8d0 	bl	8000bb8 <__addsf3>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_3;
 8001a1c:	4b78      	ldr	r3, [pc, #480]	; (8001c00 <DDS_Calculation+0x238>)
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	4619      	mov	r1, r3
 8001a22:	6878      	ldr	r0, [r7, #4]
 8001a24:	f7ff f8c8 	bl	8000bb8 <__addsf3>
 8001a28:	4603      	mov	r3, r0
 8001a2a:	607b      	str	r3, [r7, #4]

	DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed); // 1048575 / (14V / 0.01V/s) = 74.898214 Hz
 8001a2c:	4b75      	ldr	r3, [pc, #468]	; (8001c04 <DDS_Calculation+0x23c>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	4a75      	ldr	r2, [pc, #468]	; (8001c08 <DDS_Calculation+0x240>)
 8001a32:	6812      	ldr	r2, [r2, #0]
 8001a34:	4611      	mov	r1, r2
 8001a36:	4618      	mov	r0, r3
 8001a38:	f7ff fa7a 	bl	8000f30 <__aeabi_fdiv>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	4619      	mov	r1, r3
 8001a40:	68f8      	ldr	r0, [r7, #12]
 8001a42:	f7ff fa75 	bl	8000f30 <__aeabi_fdiv>
 8001a46:	4603      	mov	r3, r0
 8001a48:	461a      	mov	r2, r3
 8001a4a:	4b70      	ldr	r3, [pc, #448]	; (8001c0c <DDS_Calculation+0x244>)
 8001a4c:	601a      	str	r2, [r3, #0]

	if(DDS_target_frequecny>hw_limit)
 8001a4e:	4b6f      	ldr	r3, [pc, #444]	; (8001c0c <DDS_Calculation+0x244>)
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	4619      	mov	r1, r3
 8001a54:	6938      	ldr	r0, [r7, #16]
 8001a56:	f7ff fb55 	bl	8001104 <__aeabi_fcmplt>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d02e      	beq.n	8001abe <DDS_Calculation+0xf6>
	{
		DDS_target_multipiller=DDS_target_frequecny/hw_limit;
 8001a60:	4b6a      	ldr	r3, [pc, #424]	; (8001c0c <DDS_Calculation+0x244>)
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	6939      	ldr	r1, [r7, #16]
 8001a66:	4618      	mov	r0, r3
 8001a68:	f7ff fa62 	bl	8000f30 <__aeabi_fdiv>
 8001a6c:	4603      	mov	r3, r0
 8001a6e:	4618      	mov	r0, r3
 8001a70:	f7ff fb70 	bl	8001154 <__aeabi_f2uiz>
 8001a74:	4603      	mov	r3, r0
 8001a76:	4a66      	ldr	r2, [pc, #408]	; (8001c10 <DDS_Calculation+0x248>)
 8001a78:	6013      	str	r3, [r2, #0]
		DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed);
 8001a7a:	4b62      	ldr	r3, [pc, #392]	; (8001c04 <DDS_Calculation+0x23c>)
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	4a62      	ldr	r2, [pc, #392]	; (8001c08 <DDS_Calculation+0x240>)
 8001a80:	6812      	ldr	r2, [r2, #0]
 8001a82:	4611      	mov	r1, r2
 8001a84:	4618      	mov	r0, r3
 8001a86:	f7ff fa53 	bl	8000f30 <__aeabi_fdiv>
 8001a8a:	4603      	mov	r3, r0
 8001a8c:	4619      	mov	r1, r3
 8001a8e:	68f8      	ldr	r0, [r7, #12]
 8001a90:	f7ff fa4e 	bl	8000f30 <__aeabi_fdiv>
 8001a94:	4603      	mov	r3, r0
 8001a96:	461a      	mov	r2, r3
 8001a98:	4b5c      	ldr	r3, [pc, #368]	; (8001c0c <DDS_Calculation+0x244>)
 8001a9a:	601a      	str	r2, [r3, #0]
		DDS_target_frequecny/=(float)DDS_target_multipiller;
 8001a9c:	4b5b      	ldr	r3, [pc, #364]	; (8001c0c <DDS_Calculation+0x244>)
 8001a9e:	681c      	ldr	r4, [r3, #0]
 8001aa0:	4b5b      	ldr	r3, [pc, #364]	; (8001c10 <DDS_Calculation+0x248>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	f7ff f937 	bl	8000d18 <__aeabi_ui2f>
 8001aaa:	4603      	mov	r3, r0
 8001aac:	4619      	mov	r1, r3
 8001aae:	4620      	mov	r0, r4
 8001ab0:	f7ff fa3e 	bl	8000f30 <__aeabi_fdiv>
 8001ab4:	4603      	mov	r3, r0
 8001ab6:	461a      	mov	r2, r3
 8001ab8:	4b54      	ldr	r3, [pc, #336]	; (8001c0c <DDS_Calculation+0x244>)
 8001aba:	601a      	str	r2, [r3, #0]
 8001abc:	e002      	b.n	8001ac4 <DDS_Calculation+0xfc>
	} else DDS_target_multipiller = 1;
 8001abe:	4b54      	ldr	r3, [pc, #336]	; (8001c10 <DDS_Calculation+0x248>)
 8001ac0:	2201      	movs	r2, #1
 8001ac2:	601a      	str	r2, [r3, #0]

	DDS_FTW=(((DDS_target_frequecny/corr_coeff)*((1<<CPLD_WORD)+1))/DDS_clock_frequecny)*(float)0xFFFFFFFF;
 8001ac4:	4b51      	ldr	r3, [pc, #324]	; (8001c0c <DDS_Calculation+0x244>)
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	6879      	ldr	r1, [r7, #4]
 8001aca:	4618      	mov	r0, r3
 8001acc:	f7ff fa30 	bl	8000f30 <__aeabi_fdiv>
 8001ad0:	4603      	mov	r3, r0
 8001ad2:	461c      	mov	r4, r3
 8001ad4:	4b4f      	ldr	r3, [pc, #316]	; (8001c14 <DDS_Calculation+0x24c>)
 8001ad6:	781b      	ldrb	r3, [r3, #0]
 8001ad8:	461a      	mov	r2, r3
 8001ada:	2301      	movs	r3, #1
 8001adc:	4093      	lsls	r3, r2
 8001ade:	3301      	adds	r3, #1
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	f7ff f91d 	bl	8000d20 <__aeabi_i2f>
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	4619      	mov	r1, r3
 8001aea:	4620      	mov	r0, r4
 8001aec:	f7ff f96c 	bl	8000dc8 <__aeabi_fmul>
 8001af0:	4603      	mov	r3, r0
 8001af2:	461a      	mov	r2, r3
 8001af4:	4b48      	ldr	r3, [pc, #288]	; (8001c18 <DDS_Calculation+0x250>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	4619      	mov	r1, r3
 8001afa:	4610      	mov	r0, r2
 8001afc:	f7ff fa18 	bl	8000f30 <__aeabi_fdiv>
 8001b00:	4603      	mov	r3, r0
 8001b02:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 8001b06:	4618      	mov	r0, r3
 8001b08:	f7ff f95e 	bl	8000dc8 <__aeabi_fmul>
 8001b0c:	4603      	mov	r3, r0
 8001b0e:	461a      	mov	r2, r3
 8001b10:	4b42      	ldr	r3, [pc, #264]	; (8001c1c <DDS_Calculation+0x254>)
 8001b12:	601a      	str	r2, [r3, #0]

	switch(DAC_code_direction)
 8001b14:	4b42      	ldr	r3, [pc, #264]	; (8001c20 <DDS_Calculation+0x258>)
 8001b16:	781b      	ldrb	r3, [r3, #0]
 8001b18:	2b02      	cmp	r3, #2
 8001b1a:	d011      	beq.n	8001b40 <DDS_Calculation+0x178>
 8001b1c:	2b02      	cmp	r3, #2
 8001b1e:	dc1f      	bgt.n	8001b60 <DDS_Calculation+0x198>
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d009      	beq.n	8001b38 <DDS_Calculation+0x170>
 8001b24:	2b01      	cmp	r3, #1
 8001b26:	d11b      	bne.n	8001b60 <DDS_Calculation+0x198>
	{
	//----------------------------------------------------------//
	case DIRECTION_UP_STATE:
		codes_left=0xFFFFF-DAC_code;
 8001b28:	4b32      	ldr	r3, [pc, #200]	; (8001bf4 <DDS_Calculation+0x22c>)
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001b30:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001b34:	617b      	str	r3, [r7, #20]
		break;
 8001b36:	e013      	b.n	8001b60 <DDS_Calculation+0x198>
	case DIRECTION_DOWN_STATE:
		codes_left=DAC_code;
 8001b38:	4b2e      	ldr	r3, [pc, #184]	; (8001bf4 <DDS_Calculation+0x22c>)
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	617b      	str	r3, [r7, #20]
		break;
 8001b3e:	e00f      	b.n	8001b60 <DDS_Calculation+0x198>
	case DIRECTION_CYCLE_STATE:
		if(DAC_code_direction_for_cycle_mode == 1)
 8001b40:	4b38      	ldr	r3, [pc, #224]	; (8001c24 <DDS_Calculation+0x25c>)
 8001b42:	781b      	ldrb	r3, [r3, #0]
 8001b44:	2b01      	cmp	r3, #1
 8001b46:	d107      	bne.n	8001b58 <DDS_Calculation+0x190>
		{
			codes_left=0xFFFFF-DAC_code;
 8001b48:	4b2a      	ldr	r3, [pc, #168]	; (8001bf4 <DDS_Calculation+0x22c>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001b50:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001b54:	617b      	str	r3, [r7, #20]
		}
		else
		{
			codes_left=DAC_code;
		}
		break;
 8001b56:	e002      	b.n	8001b5e <DDS_Calculation+0x196>
			codes_left=DAC_code;
 8001b58:	4b26      	ldr	r3, [pc, #152]	; (8001bf4 <DDS_Calculation+0x22c>)
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	617b      	str	r3, [r7, #20]
		break;
 8001b5e:	bf00      	nop
	}

	second_left=codes_left/DDS_target_multipiller/DDS_target_frequecny;
 8001b60:	4b2b      	ldr	r3, [pc, #172]	; (8001c10 <DDS_Calculation+0x248>)
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	697a      	ldr	r2, [r7, #20]
 8001b66:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f7ff f8d4 	bl	8000d18 <__aeabi_ui2f>
 8001b70:	4602      	mov	r2, r0
 8001b72:	4b26      	ldr	r3, [pc, #152]	; (8001c0c <DDS_Calculation+0x244>)
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	4619      	mov	r1, r3
 8001b78:	4610      	mov	r0, r2
 8001b7a:	f7ff f9d9 	bl	8000f30 <__aeabi_fdiv>
 8001b7e:	4603      	mov	r3, r0
 8001b80:	603b      	str	r3, [r7, #0]
	eta_second=(uint32_t)second_left % 60;
 8001b82:	6838      	ldr	r0, [r7, #0]
 8001b84:	f7ff fae6 	bl	8001154 <__aeabi_f2uiz>
 8001b88:	4601      	mov	r1, r0
 8001b8a:	4b27      	ldr	r3, [pc, #156]	; (8001c28 <DDS_Calculation+0x260>)
 8001b8c:	fba3 2301 	umull	r2, r3, r3, r1
 8001b90:	095a      	lsrs	r2, r3, #5
 8001b92:	4613      	mov	r3, r2
 8001b94:	011b      	lsls	r3, r3, #4
 8001b96:	1a9b      	subs	r3, r3, r2
 8001b98:	009b      	lsls	r3, r3, #2
 8001b9a:	1aca      	subs	r2, r1, r3
 8001b9c:	b2d2      	uxtb	r2, r2
 8001b9e:	4b23      	ldr	r3, [pc, #140]	; (8001c2c <DDS_Calculation+0x264>)
 8001ba0:	701a      	strb	r2, [r3, #0]
	eta_minute=(uint32_t)(second_left / 60) % 60;
 8001ba2:	4923      	ldr	r1, [pc, #140]	; (8001c30 <DDS_Calculation+0x268>)
 8001ba4:	6838      	ldr	r0, [r7, #0]
 8001ba6:	f7ff f9c3 	bl	8000f30 <__aeabi_fdiv>
 8001baa:	4603      	mov	r3, r0
 8001bac:	4618      	mov	r0, r3
 8001bae:	f7ff fad1 	bl	8001154 <__aeabi_f2uiz>
 8001bb2:	4601      	mov	r1, r0
 8001bb4:	4b1c      	ldr	r3, [pc, #112]	; (8001c28 <DDS_Calculation+0x260>)
 8001bb6:	fba3 2301 	umull	r2, r3, r3, r1
 8001bba:	095a      	lsrs	r2, r3, #5
 8001bbc:	4613      	mov	r3, r2
 8001bbe:	011b      	lsls	r3, r3, #4
 8001bc0:	1a9b      	subs	r3, r3, r2
 8001bc2:	009b      	lsls	r3, r3, #2
 8001bc4:	1aca      	subs	r2, r1, r3
 8001bc6:	b2d2      	uxtb	r2, r2
 8001bc8:	4b1a      	ldr	r3, [pc, #104]	; (8001c34 <DDS_Calculation+0x26c>)
 8001bca:	701a      	strb	r2, [r3, #0]
	eta_hours=(uint32_t) second_left / 3600;
 8001bcc:	6838      	ldr	r0, [r7, #0]
 8001bce:	f7ff fac1 	bl	8001154 <__aeabi_f2uiz>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	4a18      	ldr	r2, [pc, #96]	; (8001c38 <DDS_Calculation+0x270>)
 8001bd6:	fba2 2303 	umull	r2, r3, r2, r3
 8001bda:	0adb      	lsrs	r3, r3, #11
 8001bdc:	b2da      	uxtb	r2, r3
 8001bde:	4b17      	ldr	r3, [pc, #92]	; (8001c3c <DDS_Calculation+0x274>)
 8001be0:	701a      	strb	r2, [r3, #0]
}
 8001be2:	bf00      	nop
 8001be4:	371c      	adds	r7, #28
 8001be6:	46bd      	mov	sp, r7
 8001be8:	bd90      	pop	{r4, r7, pc}
 8001bea:	bf00      	nop
 8001bec:	447a0000 	.word	0x447a0000
 8001bf0:	497fffe0 	.word	0x497fffe0
 8001bf4:	200009b8 	.word	0x200009b8
 8001bf8:	2000070c 	.word	0x2000070c
 8001bfc:	20000710 	.word	0x20000710
 8001c00:	20000714 	.word	0x20000714
 8001c04:	200009a8 	.word	0x200009a8
 8001c08:	20000998 	.word	0x20000998
 8001c0c:	20000994 	.word	0x20000994
 8001c10:	20000014 	.word	0x20000014
 8001c14:	2000098e 	.word	0x2000098e
 8001c18:	2000001c 	.word	0x2000001c
 8001c1c:	20000990 	.word	0x20000990
 8001c20:	200009bc 	.word	0x200009bc
 8001c24:	200009bd 	.word	0x200009bd
 8001c28:	88888889 	.word	0x88888889
 8001c2c:	2000092e 	.word	0x2000092e
 8001c30:	42700000 	.word	0x42700000
 8001c34:	2000092d 	.word	0x2000092d
 8001c38:	91a2b3c5 	.word	0x91a2b3c5
 8001c3c:	2000092c 	.word	0x2000092c

08001c40 <DDS_Init>:

//==============================================================================================
void DDS_Init(void)
{
 8001c40:	b590      	push	{r4, r7, lr}
 8001c42:	b083      	sub	sp, #12
 8001c44:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];
	DDS_Calculation();
 8001c46:	f7ff febf 	bl	80019c8 <DDS_Calculation>

	HAL_Delay(100);
 8001c4a:	2064      	movs	r0, #100	; 0x64
 8001c4c:	f004 f8a2 	bl	8005d94 <HAL_Delay>

	//CONTROL REGISTER WRITE SLEEP =1 ,	RESET = 1,	CLR = 1
	DDS_tx_buffer[0]=0xC000; // Control DDS (D15=1, D14=1)
 8001c50:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001c54:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=0x7 << 11; //  SLEEP = 1 , RESET = 1,	CLR = 1
 8001c56:	88bb      	ldrh	r3, [r7, #4]
 8001c58:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8001c5c:	b29b      	uxth	r3, r3
 8001c5e:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001c60:	2200      	movs	r2, #0
 8001c62:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001c66:	4861      	ldr	r0, [pc, #388]	; (8001dec <DDS_Init+0x1ac>)
 8001c68:	f004 fbe4 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001c6c:	1d39      	adds	r1, r7, #4
 8001c6e:	2305      	movs	r3, #5
 8001c70:	2201      	movs	r2, #1
 8001c72:	485f      	ldr	r0, [pc, #380]	; (8001df0 <DDS_Init+0x1b0>)
 8001c74:	f006 fc62 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001c78:	2201      	movs	r2, #1
 8001c7a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001c7e:	485b      	ldr	r0, [pc, #364]	; (8001dec <DDS_Init+0x1ac>)
 8001c80:	f004 fbd8 	bl	8006434 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001c84:	2064      	movs	r0, #100	; 0x64
 8001c86:	f004 f885 	bl	8005d94 <HAL_Delay>
	//DO NOT !!! SET SYNC AND/OR SELSRC TO 1

	//WRITE INITIAL DATA

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001c8a:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001c8e:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001c90:	88bc      	ldrh	r4, [r7, #4]
 8001c92:	4b58      	ldr	r3, [pc, #352]	; (8001df4 <DDS_Init+0x1b4>)
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	4618      	mov	r0, r3
 8001c98:	f7ff fa5c 	bl	8001154 <__aeabi_f2uiz>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	0e1b      	lsrs	r3, r3, #24
 8001ca0:	b29b      	uxth	r3, r3
 8001ca2:	4423      	add	r3, r4
 8001ca4:	b29b      	uxth	r3, r3
 8001ca6:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ca8:	2200      	movs	r2, #0
 8001caa:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001cae:	484f      	ldr	r0, [pc, #316]	; (8001dec <DDS_Init+0x1ac>)
 8001cb0:	f004 fbc0 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001cb4:	1d39      	adds	r1, r7, #4
 8001cb6:	2305      	movs	r3, #5
 8001cb8:	2201      	movs	r2, #1
 8001cba:	484d      	ldr	r0, [pc, #308]	; (8001df0 <DDS_Init+0x1b0>)
 8001cbc:	f006 fc3e 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001cc0:	2201      	movs	r2, #1
 8001cc2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001cc6:	4849      	ldr	r0, [pc, #292]	; (8001dec <DDS_Init+0x1ac>)
 8001cc8:	f004 fbb4 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ccc:	2032      	movs	r0, #50	; 0x32
 8001cce:	f004 f861 	bl	8005d94 <HAL_Delay>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001cd2:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001cd6:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001cd8:	88bc      	ldrh	r4, [r7, #4]
 8001cda:	4b46      	ldr	r3, [pc, #280]	; (8001df4 <DDS_Init+0x1b4>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	4618      	mov	r0, r3
 8001ce0:	f7ff fa38 	bl	8001154 <__aeabi_f2uiz>
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	0c1b      	lsrs	r3, r3, #16
 8001ce8:	b29b      	uxth	r3, r3
 8001cea:	b2db      	uxtb	r3, r3
 8001cec:	b29b      	uxth	r3, r3
 8001cee:	4423      	add	r3, r4
 8001cf0:	b29b      	uxth	r3, r3
 8001cf2:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001cf4:	2200      	movs	r2, #0
 8001cf6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001cfa:	483c      	ldr	r0, [pc, #240]	; (8001dec <DDS_Init+0x1ac>)
 8001cfc:	f004 fb9a 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001d00:	1d39      	adds	r1, r7, #4
 8001d02:	2305      	movs	r3, #5
 8001d04:	2201      	movs	r2, #1
 8001d06:	483a      	ldr	r0, [pc, #232]	; (8001df0 <DDS_Init+0x1b0>)
 8001d08:	f006 fc18 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001d0c:	2201      	movs	r2, #1
 8001d0e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d12:	4836      	ldr	r0, [pc, #216]	; (8001dec <DDS_Init+0x1ac>)
 8001d14:	f004 fb8e 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001d18:	2032      	movs	r0, #50	; 0x32
 8001d1a:	f004 f83b 	bl	8005d94 <HAL_Delay>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8001d1e:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 8001d22:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 8001d24:	88bc      	ldrh	r4, [r7, #4]
 8001d26:	4b33      	ldr	r3, [pc, #204]	; (8001df4 <DDS_Init+0x1b4>)
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	4618      	mov	r0, r3
 8001d2c:	f7ff fa12 	bl	8001154 <__aeabi_f2uiz>
 8001d30:	4603      	mov	r3, r0
 8001d32:	0a1b      	lsrs	r3, r3, #8
 8001d34:	b29b      	uxth	r3, r3
 8001d36:	b2db      	uxtb	r3, r3
 8001d38:	b29b      	uxth	r3, r3
 8001d3a:	4423      	add	r3, r4
 8001d3c:	b29b      	uxth	r3, r3
 8001d3e:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001d40:	2200      	movs	r2, #0
 8001d42:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d46:	4829      	ldr	r0, [pc, #164]	; (8001dec <DDS_Init+0x1ac>)
 8001d48:	f004 fb74 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001d4c:	1d39      	adds	r1, r7, #4
 8001d4e:	2305      	movs	r3, #5
 8001d50:	2201      	movs	r2, #1
 8001d52:	4827      	ldr	r0, [pc, #156]	; (8001df0 <DDS_Init+0x1b0>)
 8001d54:	f006 fbf2 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001d58:	2201      	movs	r2, #1
 8001d5a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d5e:	4823      	ldr	r0, [pc, #140]	; (8001dec <DDS_Init+0x1ac>)
 8001d60:	f004 fb68 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001d64:	2032      	movs	r0, #50	; 0x32
 8001d66:	f004 f815 	bl	8005d94 <HAL_Delay>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 8001d6a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001d6e:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8001d70:	88bc      	ldrh	r4, [r7, #4]
 8001d72:	4b20      	ldr	r3, [pc, #128]	; (8001df4 <DDS_Init+0x1b4>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	4618      	mov	r0, r3
 8001d78:	f7ff f9ec 	bl	8001154 <__aeabi_f2uiz>
 8001d7c:	4603      	mov	r3, r0
 8001d7e:	b29b      	uxth	r3, r3
 8001d80:	b2db      	uxtb	r3, r3
 8001d82:	b29b      	uxth	r3, r3
 8001d84:	4423      	add	r3, r4
 8001d86:	b29b      	uxth	r3, r3
 8001d88:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001d8a:	2200      	movs	r2, #0
 8001d8c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d90:	4816      	ldr	r0, [pc, #88]	; (8001dec <DDS_Init+0x1ac>)
 8001d92:	f004 fb4f 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001d96:	1d39      	adds	r1, r7, #4
 8001d98:	2305      	movs	r3, #5
 8001d9a:	2201      	movs	r2, #1
 8001d9c:	4814      	ldr	r0, [pc, #80]	; (8001df0 <DDS_Init+0x1b0>)
 8001d9e:	f006 fbcd 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001da2:	2201      	movs	r2, #1
 8001da4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001da8:	4810      	ldr	r0, [pc, #64]	; (8001dec <DDS_Init+0x1ac>)
 8001daa:	f004 fb43 	bl	8006434 <HAL_GPIO_WritePin>


	HAL_Delay(100);
 8001dae:	2064      	movs	r0, #100	; 0x64
 8001db0:	f003 fff0 	bl	8005d94 <HAL_Delay>

	// CONTROL REGISTER WRITE, 	SLEEP = 0,	RESET = 0, CLR = 0

	// Control DDS (D15=1, D14=1)
	DDS_tx_buffer[0]=0xC000; // Exit DAC from Sleep+Reset mode
 8001db4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001db8:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001dba:	2200      	movs	r2, #0
 8001dbc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001dc0:	480a      	ldr	r0, [pc, #40]	; (8001dec <DDS_Init+0x1ac>)
 8001dc2:	f004 fb37 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001dc6:	1d39      	adds	r1, r7, #4
 8001dc8:	2305      	movs	r3, #5
 8001dca:	2201      	movs	r2, #1
 8001dcc:	4808      	ldr	r0, [pc, #32]	; (8001df0 <DDS_Init+0x1b0>)
 8001dce:	f006 fbb5 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001dd2:	2201      	movs	r2, #1
 8001dd4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001dd8:	4804      	ldr	r0, [pc, #16]	; (8001dec <DDS_Init+0x1ac>)
 8001dda:	f004 fb2b 	bl	8006434 <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001dde:	2064      	movs	r0, #100	; 0x64
 8001de0:	f003 ffd8 	bl	8005d94 <HAL_Delay>

}
 8001de4:	bf00      	nop
 8001de6:	370c      	adds	r7, #12
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd90      	pop	{r4, r7, pc}
 8001dec:	40020400 	.word	0x40020400
 8001df0:	20000a20 	.word	0x20000a20
 8001df4:	20000990 	.word	0x20000990

08001df8 <DDS_Update>:

//==============================================================================================
void DDS_Update(void)
{
 8001df8:	b590      	push	{r4, r7, lr}
 8001dfa:	b083      	sub	sp, #12
 8001dfc:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001dfe:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001e02:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001e04:	88bc      	ldrh	r4, [r7, #4]
 8001e06:	4b44      	ldr	r3, [pc, #272]	; (8001f18 <DDS_Update+0x120>)
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	4618      	mov	r0, r3
 8001e0c:	f7ff f9a2 	bl	8001154 <__aeabi_f2uiz>
 8001e10:	4603      	mov	r3, r0
 8001e12:	0e1b      	lsrs	r3, r3, #24
 8001e14:	b29b      	uxth	r3, r3
 8001e16:	4423      	add	r3, r4
 8001e18:	b29b      	uxth	r3, r3
 8001e1a:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e22:	483e      	ldr	r0, [pc, #248]	; (8001f1c <DDS_Update+0x124>)
 8001e24:	f004 fb06 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e28:	1d39      	adds	r1, r7, #4
 8001e2a:	2305      	movs	r3, #5
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	483c      	ldr	r0, [pc, #240]	; (8001f20 <DDS_Update+0x128>)
 8001e30:	f006 fb84 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e34:	2201      	movs	r2, #1
 8001e36:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e3a:	4838      	ldr	r0, [pc, #224]	; (8001f1c <DDS_Update+0x124>)
 8001e3c:	f004 fafa 	bl	8006434 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001e40:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001e44:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001e46:	88bc      	ldrh	r4, [r7, #4]
 8001e48:	4b33      	ldr	r3, [pc, #204]	; (8001f18 <DDS_Update+0x120>)
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	f7ff f981 	bl	8001154 <__aeabi_f2uiz>
 8001e52:	4603      	mov	r3, r0
 8001e54:	0c1b      	lsrs	r3, r3, #16
 8001e56:	b29b      	uxth	r3, r3
 8001e58:	b2db      	uxtb	r3, r3
 8001e5a:	b29b      	uxth	r3, r3
 8001e5c:	4423      	add	r3, r4
 8001e5e:	b29b      	uxth	r3, r3
 8001e60:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e62:	2200      	movs	r2, #0
 8001e64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e68:	482c      	ldr	r0, [pc, #176]	; (8001f1c <DDS_Update+0x124>)
 8001e6a:	f004 fae3 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e6e:	1d39      	adds	r1, r7, #4
 8001e70:	2305      	movs	r3, #5
 8001e72:	2201      	movs	r2, #1
 8001e74:	482a      	ldr	r0, [pc, #168]	; (8001f20 <DDS_Update+0x128>)
 8001e76:	f006 fb61 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e7a:	2201      	movs	r2, #1
 8001e7c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e80:	4826      	ldr	r0, [pc, #152]	; (8001f1c <DDS_Update+0x124>)
 8001e82:	f004 fad7 	bl	8006434 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8001e86:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 8001e8a:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 8001e8c:	88bc      	ldrh	r4, [r7, #4]
 8001e8e:	4b22      	ldr	r3, [pc, #136]	; (8001f18 <DDS_Update+0x120>)
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	4618      	mov	r0, r3
 8001e94:	f7ff f95e 	bl	8001154 <__aeabi_f2uiz>
 8001e98:	4603      	mov	r3, r0
 8001e9a:	0a1b      	lsrs	r3, r3, #8
 8001e9c:	b29b      	uxth	r3, r3
 8001e9e:	b2db      	uxtb	r3, r3
 8001ea0:	b29b      	uxth	r3, r3
 8001ea2:	4423      	add	r3, r4
 8001ea4:	b29b      	uxth	r3, r3
 8001ea6:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ea8:	2200      	movs	r2, #0
 8001eaa:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001eae:	481b      	ldr	r0, [pc, #108]	; (8001f1c <DDS_Update+0x124>)
 8001eb0:	f004 fac0 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001eb4:	1d39      	adds	r1, r7, #4
 8001eb6:	2305      	movs	r3, #5
 8001eb8:	2201      	movs	r2, #1
 8001eba:	4819      	ldr	r0, [pc, #100]	; (8001f20 <DDS_Update+0x128>)
 8001ebc:	f006 fb3e 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001ec0:	2201      	movs	r2, #1
 8001ec2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ec6:	4815      	ldr	r0, [pc, #84]	; (8001f1c <DDS_Update+0x124>)
 8001ec8:	f004 fab4 	bl	8006434 <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 8001ecc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001ed0:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8001ed2:	88bc      	ldrh	r4, [r7, #4]
 8001ed4:	4b10      	ldr	r3, [pc, #64]	; (8001f18 <DDS_Update+0x120>)
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f7ff f93b 	bl	8001154 <__aeabi_f2uiz>
 8001ede:	4603      	mov	r3, r0
 8001ee0:	b29b      	uxth	r3, r3
 8001ee2:	b2db      	uxtb	r3, r3
 8001ee4:	b29b      	uxth	r3, r3
 8001ee6:	4423      	add	r3, r4
 8001ee8:	b29b      	uxth	r3, r3
 8001eea:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001eec:	2200      	movs	r2, #0
 8001eee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ef2:	480a      	ldr	r0, [pc, #40]	; (8001f1c <DDS_Update+0x124>)
 8001ef4:	f004 fa9e 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001ef8:	1d39      	adds	r1, r7, #4
 8001efa:	2305      	movs	r3, #5
 8001efc:	2201      	movs	r2, #1
 8001efe:	4808      	ldr	r0, [pc, #32]	; (8001f20 <DDS_Update+0x128>)
 8001f00:	f006 fb1c 	bl	800853c <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f04:	2201      	movs	r2, #1
 8001f06:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f0a:	4804      	ldr	r0, [pc, #16]	; (8001f1c <DDS_Update+0x124>)
 8001f0c:	f004 fa92 	bl	8006434 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
	 */
}
 8001f10:	bf00      	nop
 8001f12:	370c      	adds	r7, #12
 8001f14:	46bd      	mov	sp, r7
 8001f16:	bd90      	pop	{r4, r7, pc}
 8001f18:	20000990 	.word	0x20000990
 8001f1c:	40020400 	.word	0x40020400
 8001f20:	20000a20 	.word	0x20000a20

08001f24 <LcdSend>:
extern FunctionalState Display_need_wakeup;
extern FunctionalState Display_status;
extern uint8_t Need_update_Display;

void LcdSend(uint8_t data, uint8_t cmd) //Sends data to display controller
{
 8001f24:	b580      	push	{r7, lr}
 8001f26:	b084      	sub	sp, #16
 8001f28:	af00      	add	r7, sp, #0
 8001f2a:	4603      	mov	r3, r0
 8001f2c:	460a      	mov	r2, r1
 8001f2e:	71fb      	strb	r3, [r7, #7]
 8001f30:	4613      	mov	r3, r2
 8001f32:	71bb      	strb	r3, [r7, #6]
	uint8_t sdata = 0;
 8001f34:	2300      	movs	r3, #0
 8001f36:	73fb      	strb	r3, [r7, #15]

	lcd44780_RW_0;
 8001f38:	2200      	movs	r2, #0
 8001f3a:	2102      	movs	r1, #2
 8001f3c:	4811      	ldr	r0, [pc, #68]	; (8001f84 <LcdSend+0x60>)
 8001f3e:	f004 fa79 	bl	8006434 <HAL_GPIO_WritePin>

	sdata = data;
 8001f42:	79fb      	ldrb	r3, [r7, #7]
 8001f44:	73fb      	strb	r3, [r7, #15]
	if(cmd == lcd_CMD)
 8001f46:	79bb      	ldrb	r3, [r7, #6]
 8001f48:	2b01      	cmp	r3, #1
 8001f4a:	d105      	bne.n	8001f58 <LcdSend+0x34>
	{
		lcd44780_RS_0;
 8001f4c:	2201      	movs	r2, #1
 8001f4e:	2101      	movs	r1, #1
 8001f50:	480c      	ldr	r0, [pc, #48]	; (8001f84 <LcdSend+0x60>)
 8001f52:	f004 fa6f 	bl	8006434 <HAL_GPIO_WritePin>
 8001f56:	e004      	b.n	8001f62 <LcdSend+0x3e>
	}                             //идентефикатор кода
	else
	{
		lcd44780_RS_1;
 8001f58:	2200      	movs	r2, #0
 8001f5a:	2101      	movs	r1, #1
 8001f5c:	4809      	ldr	r0, [pc, #36]	; (8001f84 <LcdSend+0x60>)
 8001f5e:	f004 fa69 	bl	8006434 <HAL_GPIO_WritePin>
	}                             //идентефикатор данных
	send_data(sdata);
 8001f62:	7bfb      	ldrb	r3, [r7, #15]
 8001f64:	4618      	mov	r0, r3
 8001f66:	f000 f983 	bl	8002270 <send_data>

	if(cmd == lcd_CMD)while(check_busy_flag());
 8001f6a:	79bb      	ldrb	r3, [r7, #6]
 8001f6c:	2b01      	cmp	r3, #1
 8001f6e:	d105      	bne.n	8001f7c <LcdSend+0x58>
 8001f70:	bf00      	nop
 8001f72:	f000 f9bd 	bl	80022f0 <check_busy_flag>
 8001f76:	4603      	mov	r3, r0
 8001f78:	2b00      	cmp	r3, #0
 8001f7a:	d1fa      	bne.n	8001f72 <LcdSend+0x4e>
}
 8001f7c:	bf00      	nop
 8001f7e:	3710      	adds	r7, #16
 8001f80:	46bd      	mov	sp, r7
 8001f82:	bd80      	pop	{r7, pc}
 8001f84:	40020400 	.word	0x40020400

08001f88 <LcdUpdate>:

void LcdUpdate(void)            //Copies the LCD cache into the device RAM
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b082      	sub	sp, #8
 8001f8c:	af00      	add	r7, sp, #0
	int i = 0, j = 0;
 8001f8e:	2300      	movs	r3, #0
 8001f90:	607b      	str	r3, [r7, #4]
 8001f92:	2300      	movs	r3, #0
 8001f94:	603b      	str	r3, [r7, #0]

	Need_update_Display=0;
 8001f96:	4b17      	ldr	r3, [pc, #92]	; (8001ff4 <LcdUpdate+0x6c>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	701a      	strb	r2, [r3, #0]
	LcdSend(HD44780_SET_CGRAM_ADD, lcd_CMD);//Позицианируем курсор на начало координат
 8001f9c:	2101      	movs	r1, #1
 8001f9e:	2040      	movs	r0, #64	; 0x40
 8001fa0:	f7ff ffc0 	bl	8001f24 <LcdSend>
	LcdSend(HD44780_SET_DDRAM_ADD, lcd_CMD);
 8001fa4:	2101      	movs	r1, #1
 8001fa6:	2080      	movs	r0, #128	; 0x80
 8001fa8:	f7ff ffbc 	bl	8001f24 <LcdSend>

	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 8001fac:	2300      	movs	r3, #0
 8001fae:	607b      	str	r3, [r7, #4]
 8001fb0:	e017      	b.n	8001fe2 <LcdUpdate+0x5a>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8001fb2:	2300      	movs	r3, #0
 8001fb4:	603b      	str	r3, [r7, #0]
 8001fb6:	e00e      	b.n	8001fd6 <LcdUpdate+0x4e>
		{
			LcdSend(LcdCache[((i * LCD_X_RES) + j)], lcd_DATA);       //вычисляем адрес в фрейм буфере, и данные от туда грузим в дисплей.
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	2264      	movs	r2, #100	; 0x64
 8001fbc:	fb03 f202 	mul.w	r2, r3, r2
 8001fc0:	683b      	ldr	r3, [r7, #0]
 8001fc2:	4413      	add	r3, r2
 8001fc4:	4a0c      	ldr	r2, [pc, #48]	; (8001ff8 <LcdUpdate+0x70>)
 8001fc6:	5cd3      	ldrb	r3, [r2, r3]
 8001fc8:	2102      	movs	r1, #2
 8001fca:	4618      	mov	r0, r3
 8001fcc:	f7ff ffaa 	bl	8001f24 <LcdSend>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8001fd0:	683b      	ldr	r3, [r7, #0]
 8001fd2:	3301      	adds	r3, #1
 8001fd4:	603b      	str	r3, [r7, #0]
 8001fd6:	683b      	ldr	r3, [r7, #0]
 8001fd8:	2b63      	cmp	r3, #99	; 0x63
 8001fda:	dded      	ble.n	8001fb8 <LcdUpdate+0x30>
	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	3301      	adds	r3, #1
 8001fe0:	607b      	str	r3, [r7, #4]
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	2b01      	cmp	r3, #1
 8001fe6:	dde4      	ble.n	8001fb2 <LcdUpdate+0x2a>
		}
}
 8001fe8:	bf00      	nop
 8001fea:	bf00      	nop
 8001fec:	3708      	adds	r7, #8
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	200009bf 	.word	0x200009bf
 8001ff8:	20000734 	.word	0x20000734

08001ffc <LcdClear_massive>:
	LcdUpdate();
}


void LcdClear_massive(void)     //Clears the display
{
 8001ffc:	b480      	push	{r7}
 8001ffe:	b083      	sub	sp, #12
 8002000:	af00      	add	r7, sp, #0
	int i = 0;
 8002002:	2300      	movs	r3, #0
 8002004:	607b      	str	r3, [r7, #4]

	for (i = 0; i < LCD_CACHSIZE; i++)
 8002006:	2300      	movs	r3, #0
 8002008:	607b      	str	r3, [r7, #4]
 800200a:	e007      	b.n	800201c <LcdClear_massive+0x20>
		LcdCache[i] = 0;            //забиваем всю память 0
 800200c:	4a08      	ldr	r2, [pc, #32]	; (8002030 <LcdClear_massive+0x34>)
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	4413      	add	r3, r2
 8002012:	2200      	movs	r2, #0
 8002014:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < LCD_CACHSIZE; i++)
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	3301      	adds	r3, #1
 800201a:	607b      	str	r3, [r7, #4]
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	2bc7      	cmp	r3, #199	; 0xc7
 8002020:	ddf4      	ble.n	800200c <LcdClear_massive+0x10>
}
 8002022:	bf00      	nop
 8002024:	bf00      	nop
 8002026:	370c      	adds	r7, #12
 8002028:	46bd      	mov	sp, r7
 800202a:	bc80      	pop	{r7}
 800202c:	4770      	bx	lr
 800202e:	bf00      	nop
 8002030:	20000734 	.word	0x20000734

08002034 <LcdGotoXYFont>:
	}
}


void LcdGotoXYFont(unsigned char x, unsigned char y)    //Sets cursor location to xy location. Range: 1,1 .. 14,6
{
 8002034:	b480      	push	{r7}
 8002036:	b083      	sub	sp, #12
 8002038:	af00      	add	r7, sp, #0
 800203a:	4603      	mov	r3, r0
 800203c:	460a      	mov	r2, r1
 800203e:	71fb      	strb	r3, [r7, #7]
 8002040:	4613      	mov	r3, r2
 8002042:	71bb      	strb	r3, [r7, #6]
	LcdCacheIdx = ((int) (y) - 1) * Cntr_X_RES + ((int) (x) - 1) * Cntr_Y_RES;
 8002044:	79bb      	ldrb	r3, [r7, #6]
 8002046:	3b01      	subs	r3, #1
 8002048:	2264      	movs	r2, #100	; 0x64
 800204a:	fb03 f202 	mul.w	r2, r3, r2
 800204e:	79fb      	ldrb	r3, [r7, #7]
 8002050:	3b01      	subs	r3, #1
 8002052:	011b      	lsls	r3, r3, #4
 8002054:	4413      	add	r3, r2
 8002056:	461a      	mov	r2, r3
 8002058:	4b03      	ldr	r3, [pc, #12]	; (8002068 <LcdGotoXYFont+0x34>)
 800205a:	601a      	str	r2, [r3, #0]
}
 800205c:	bf00      	nop
 800205e:	370c      	adds	r7, #12
 8002060:	46bd      	mov	sp, r7
 8002062:	bc80      	pop	{r7}
 8002064:	4770      	bx	lr
 8002066:	bf00      	nop
 8002068:	200007fc 	.word	0x200007fc

0800206c <clean_lcd_buf>:

void clean_lcd_buf(void)        //очистка текстового буфера
{
 800206c:	b480      	push	{r7}
 800206e:	b083      	sub	sp, #12
 8002070:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 8002072:	2300      	movs	r3, #0
 8002074:	71fb      	strb	r3, [r7, #7]

	for (i = 0; i < 20; i++)
 8002076:	2300      	movs	r3, #0
 8002078:	71fb      	strb	r3, [r7, #7]
 800207a:	e006      	b.n	800208a <clean_lcd_buf+0x1e>
		lcd_buf[i] = 0;
 800207c:	79fb      	ldrb	r3, [r7, #7]
 800207e:	4a07      	ldr	r2, [pc, #28]	; (800209c <clean_lcd_buf+0x30>)
 8002080:	2100      	movs	r1, #0
 8002082:	54d1      	strb	r1, [r2, r3]
	for (i = 0; i < 20; i++)
 8002084:	79fb      	ldrb	r3, [r7, #7]
 8002086:	3301      	adds	r3, #1
 8002088:	71fb      	strb	r3, [r7, #7]
 800208a:	79fb      	ldrb	r3, [r7, #7]
 800208c:	2b13      	cmp	r3, #19
 800208e:	d9f5      	bls.n	800207c <clean_lcd_buf+0x10>
}
 8002090:	bf00      	nop
 8002092:	bf00      	nop
 8002094:	370c      	adds	r7, #12
 8002096:	46bd      	mov	sp, r7
 8002098:	bc80      	pop	{r7}
 800209a:	4770      	bx	lr
 800209c:	20000720 	.word	0x20000720

080020a0 <LcdChr>:

void LcdChr(int ch)             //Displays a character at current cursor location and increment cursor location
{
 80020a0:	b480      	push	{r7}
 80020a2:	b085      	sub	sp, #20
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	6078      	str	r0, [r7, #4]
	char i = 0;
 80020a8:	2300      	movs	r3, #0
 80020aa:	73fb      	strb	r3, [r7, #15]
	if(ch > 0x7f)
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	2b7f      	cmp	r3, #127	; 0x7f
 80020b0:	dd1a      	ble.n	80020e8 <LcdChr+0x48>
	{
		for (i = 0; i < 5; i++)
 80020b2:	2300      	movs	r3, #0
 80020b4:	73fb      	strb	r3, [r7, #15]
 80020b6:	e013      	b.n	80020e0 <LcdChr+0x40>
			LcdCache[LcdCacheIdx++] = lcd_font_table_rus[(ch * 5 + (i) - 0x3C0)];     //выделяем байт-столбик из символа и грузим в массив - 5 раз
 80020b8:	687a      	ldr	r2, [r7, #4]
 80020ba:	4613      	mov	r3, r2
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	441a      	add	r2, r3
 80020c0:	7bfb      	ldrb	r3, [r7, #15]
 80020c2:	4413      	add	r3, r2
 80020c4:	f5a3 7270 	sub.w	r2, r3, #960	; 0x3c0
 80020c8:	4b1b      	ldr	r3, [pc, #108]	; (8002138 <LcdChr+0x98>)
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	1c59      	adds	r1, r3, #1
 80020ce:	481a      	ldr	r0, [pc, #104]	; (8002138 <LcdChr+0x98>)
 80020d0:	6001      	str	r1, [r0, #0]
 80020d2:	491a      	ldr	r1, [pc, #104]	; (800213c <LcdChr+0x9c>)
 80020d4:	5c89      	ldrb	r1, [r1, r2]
 80020d6:	4a1a      	ldr	r2, [pc, #104]	; (8002140 <LcdChr+0xa0>)
 80020d8:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 80020da:	7bfb      	ldrb	r3, [r7, #15]
 80020dc:	3301      	adds	r3, #1
 80020de:	73fb      	strb	r3, [r7, #15]
 80020e0:	7bfb      	ldrb	r3, [r7, #15]
 80020e2:	2b04      	cmp	r3, #4
 80020e4:	d9e8      	bls.n	80020b8 <LcdChr+0x18>
 80020e6:	e019      	b.n	800211c <LcdChr+0x7c>
	} else
	{
		for (i = 0; i < 5; i++)
 80020e8:	2300      	movs	r3, #0
 80020ea:	73fb      	strb	r3, [r7, #15]
 80020ec:	e013      	b.n	8002116 <LcdChr+0x76>
			LcdCache[LcdCacheIdx++] = lcd_font_table[(ch * 5 + (i) - 0xA0)];  //выделяем байт-столбик из символа и грузим в массив - 5 раз
 80020ee:	687a      	ldr	r2, [r7, #4]
 80020f0:	4613      	mov	r3, r2
 80020f2:	009b      	lsls	r3, r3, #2
 80020f4:	441a      	add	r2, r3
 80020f6:	7bfb      	ldrb	r3, [r7, #15]
 80020f8:	4413      	add	r3, r2
 80020fa:	f1a3 02a0 	sub.w	r2, r3, #160	; 0xa0
 80020fe:	4b0e      	ldr	r3, [pc, #56]	; (8002138 <LcdChr+0x98>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	1c59      	adds	r1, r3, #1
 8002104:	480c      	ldr	r0, [pc, #48]	; (8002138 <LcdChr+0x98>)
 8002106:	6001      	str	r1, [r0, #0]
 8002108:	490e      	ldr	r1, [pc, #56]	; (8002144 <LcdChr+0xa4>)
 800210a:	5c89      	ldrb	r1, [r1, r2]
 800210c:	4a0c      	ldr	r2, [pc, #48]	; (8002140 <LcdChr+0xa0>)
 800210e:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 8002110:	7bfb      	ldrb	r3, [r7, #15]
 8002112:	3301      	adds	r3, #1
 8002114:	73fb      	strb	r3, [r7, #15]
 8002116:	7bfb      	ldrb	r3, [r7, #15]
 8002118:	2b04      	cmp	r3, #4
 800211a:	d9e8      	bls.n	80020ee <LcdChr+0x4e>
	}
	LcdCache[LcdCacheIdx++] = 0x00;       //добавляем пробел между символами
 800211c:	4b06      	ldr	r3, [pc, #24]	; (8002138 <LcdChr+0x98>)
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	1c5a      	adds	r2, r3, #1
 8002122:	4905      	ldr	r1, [pc, #20]	; (8002138 <LcdChr+0x98>)
 8002124:	600a      	str	r2, [r1, #0]
 8002126:	4a06      	ldr	r2, [pc, #24]	; (8002140 <LcdChr+0xa0>)
 8002128:	2100      	movs	r1, #0
 800212a:	54d1      	strb	r1, [r2, r3]
}
 800212c:	bf00      	nop
 800212e:	3714      	adds	r7, #20
 8002130:	46bd      	mov	sp, r7
 8002132:	bc80      	pop	{r7}
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop
 8002138:	200007fc 	.word	0x200007fc
 800213c:	08010a70 	.word	0x08010a70
 8002140:	20000734 	.word	0x20000734
 8002144:	08010890 	.word	0x08010890

08002148 <LcdString>:
	}
	LcdCache[LcdCacheIdx++] = 0xFF;       //добавляем пробел между символами
}

void LcdString(unsigned char x, unsigned char y)        //Displays a string at current cursor location
{
 8002148:	b580      	push	{r7, lr}
 800214a:	b084      	sub	sp, #16
 800214c:	af00      	add	r7, sp, #0
 800214e:	4603      	mov	r3, r0
 8002150:	460a      	mov	r2, r1
 8002152:	71fb      	strb	r3, [r7, #7]
 8002154:	4613      	mov	r3, r2
 8002156:	71bb      	strb	r3, [r7, #6]
	unsigned char i = 0;
 8002158:	2300      	movs	r3, #0
 800215a:	73fb      	strb	r3, [r7, #15]

	if(x > 17 || y > 8)
 800215c:	79fb      	ldrb	r3, [r7, #7]
 800215e:	2b11      	cmp	r3, #17
 8002160:	d81f      	bhi.n	80021a2 <LcdString+0x5a>
 8002162:	79bb      	ldrb	r3, [r7, #6]
 8002164:	2b08      	cmp	r3, #8
 8002166:	d81c      	bhi.n	80021a2 <LcdString+0x5a>
		return;
	LcdGotoXYFont(x, y);
 8002168:	79ba      	ldrb	r2, [r7, #6]
 800216a:	79fb      	ldrb	r3, [r7, #7]
 800216c:	4611      	mov	r1, r2
 800216e:	4618      	mov	r0, r3
 8002170:	f7ff ff60 	bl	8002034 <LcdGotoXYFont>
	for (i = 0; i < 17; i++)
 8002174:	2300      	movs	r3, #0
 8002176:	73fb      	strb	r3, [r7, #15]
 8002178:	e00d      	b.n	8002196 <LcdString+0x4e>
		if(lcd_buf[i])
 800217a:	7bfb      	ldrb	r3, [r7, #15]
 800217c:	4a0b      	ldr	r2, [pc, #44]	; (80021ac <LcdString+0x64>)
 800217e:	5cd3      	ldrb	r3, [r2, r3]
 8002180:	2b00      	cmp	r3, #0
 8002182:	d005      	beq.n	8002190 <LcdString+0x48>
			LcdChr(lcd_buf[i]);
 8002184:	7bfb      	ldrb	r3, [r7, #15]
 8002186:	4a09      	ldr	r2, [pc, #36]	; (80021ac <LcdString+0x64>)
 8002188:	5cd3      	ldrb	r3, [r2, r3]
 800218a:	4618      	mov	r0, r3
 800218c:	f7ff ff88 	bl	80020a0 <LcdChr>
	for (i = 0; i < 17; i++)
 8002190:	7bfb      	ldrb	r3, [r7, #15]
 8002192:	3301      	adds	r3, #1
 8002194:	73fb      	strb	r3, [r7, #15]
 8002196:	7bfb      	ldrb	r3, [r7, #15]
 8002198:	2b10      	cmp	r3, #16
 800219a:	d9ee      	bls.n	800217a <LcdString+0x32>
	clean_lcd_buf();
 800219c:	f7ff ff66 	bl	800206c <clean_lcd_buf>
 80021a0:	e000      	b.n	80021a4 <LcdString+0x5c>
		return;
 80021a2:	bf00      	nop
}
 80021a4:	3710      	adds	r7, #16
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bd80      	pop	{r7, pc}
 80021aa:	bf00      	nop
 80021ac:	20000720 	.word	0x20000720

080021b0 <pulse_e>:
//////////////////////////////////////////////////////////////////////////////////////



void pulse_e() //импульс на вход Е индикатора
{
 80021b0:	b580      	push	{r7, lr}
 80021b2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_SET);//    PIN_ON(PIN_E);
 80021b4:	2201      	movs	r2, #1
 80021b6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80021ba:	4805      	ldr	r0, [pc, #20]	; (80021d0 <pulse_e+0x20>)
 80021bc:	f004 f93a 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 80021c0:	2200      	movs	r2, #0
 80021c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80021c6:	4802      	ldr	r0, [pc, #8]	; (80021d0 <pulse_e+0x20>)
 80021c8:	f004 f934 	bl	8006434 <HAL_GPIO_WritePin>
}
 80021cc:	bf00      	nop
 80021ce:	bd80      	pop	{r7, pc}
 80021d0:	40020400 	.word	0x40020400

080021d4 <send_nibble>:

void send_nibble(unsigned char data) //полубайтовый вывод
{
 80021d4:	b580      	push	{r7, lr}
 80021d6:	b082      	sub	sp, #8
 80021d8:	af00      	add	r7, sp, #0
 80021da:	4603      	mov	r3, r0
 80021dc:	71fb      	strb	r3, [r7, #7]
	//выводим половину байта на соответствующие контакты
	if(data & 0x01)
 80021de:	79fb      	ldrb	r3, [r7, #7]
 80021e0:	f003 0301 	and.w	r3, r3, #1
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d005      	beq.n	80021f4 <send_nibble+0x20>
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB4);
 80021e8:	2201      	movs	r2, #1
 80021ea:	2104      	movs	r1, #4
 80021ec:	481f      	ldr	r0, [pc, #124]	; (800226c <send_nibble+0x98>)
 80021ee:	f004 f921 	bl	8006434 <HAL_GPIO_WritePin>
 80021f2:	e004      	b.n	80021fe <send_nibble+0x2a>
	else
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 80021f4:	2200      	movs	r2, #0
 80021f6:	2104      	movs	r1, #4
 80021f8:	481c      	ldr	r0, [pc, #112]	; (800226c <send_nibble+0x98>)
 80021fa:	f004 f91b 	bl	8006434 <HAL_GPIO_WritePin>

	if(data & 0x02)
 80021fe:	79fb      	ldrb	r3, [r7, #7]
 8002200:	f003 0302 	and.w	r3, r3, #2
 8002204:	2b00      	cmp	r3, #0
 8002206:	d005      	beq.n	8002214 <send_nibble+0x40>
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB5);
 8002208:	2201      	movs	r2, #1
 800220a:	2108      	movs	r1, #8
 800220c:	4817      	ldr	r0, [pc, #92]	; (800226c <send_nibble+0x98>)
 800220e:	f004 f911 	bl	8006434 <HAL_GPIO_WritePin>
 8002212:	e004      	b.n	800221e <send_nibble+0x4a>
	else
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 8002214:	2200      	movs	r2, #0
 8002216:	2108      	movs	r1, #8
 8002218:	4814      	ldr	r0, [pc, #80]	; (800226c <send_nibble+0x98>)
 800221a:	f004 f90b 	bl	8006434 <HAL_GPIO_WritePin>

	if(data & 0x04)
 800221e:	79fb      	ldrb	r3, [r7, #7]
 8002220:	f003 0304 	and.w	r3, r3, #4
 8002224:	2b00      	cmp	r3, #0
 8002226:	d005      	beq.n	8002234 <send_nibble+0x60>
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB6);
 8002228:	2201      	movs	r2, #1
 800222a:	2110      	movs	r1, #16
 800222c:	480f      	ldr	r0, [pc, #60]	; (800226c <send_nibble+0x98>)
 800222e:	f004 f901 	bl	8006434 <HAL_GPIO_WritePin>
 8002232:	e004      	b.n	800223e <send_nibble+0x6a>
	else
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 8002234:	2200      	movs	r2, #0
 8002236:	2110      	movs	r1, #16
 8002238:	480c      	ldr	r0, [pc, #48]	; (800226c <send_nibble+0x98>)
 800223a:	f004 f8fb 	bl	8006434 <HAL_GPIO_WritePin>

	if(data & 0x08)
 800223e:	79fb      	ldrb	r3, [r7, #7]
 8002240:	f003 0308 	and.w	r3, r3, #8
 8002244:	2b00      	cmp	r3, #0
 8002246:	d005      	beq.n	8002254 <send_nibble+0x80>
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB7);
 8002248:	2201      	movs	r2, #1
 800224a:	2120      	movs	r1, #32
 800224c:	4807      	ldr	r0, [pc, #28]	; (800226c <send_nibble+0x98>)
 800224e:	f004 f8f1 	bl	8006434 <HAL_GPIO_WritePin>
 8002252:	e004      	b.n	800225e <send_nibble+0x8a>
	else
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 8002254:	2200      	movs	r2, #0
 8002256:	2120      	movs	r1, #32
 8002258:	4804      	ldr	r0, [pc, #16]	; (800226c <send_nibble+0x98>)
 800225a:	f004 f8eb 	bl	8006434 <HAL_GPIO_WritePin>

	pulse_e(); //чтобы индикатор проглотил данные
 800225e:	f7ff ffa7 	bl	80021b0 <pulse_e>
}
 8002262:	bf00      	nop
 8002264:	3708      	adds	r7, #8
 8002266:	46bd      	mov	sp, r7
 8002268:	bd80      	pop	{r7, pc}
 800226a:	bf00      	nop
 800226c:	40020400 	.word	0x40020400

08002270 <send_data>:

void send_data(unsigned char data) //вывод 2хполбайта на индикатор
{
 8002270:	b580      	push	{r7, lr}
 8002272:	b082      	sub	sp, #8
 8002274:	af00      	add	r7, sp, #0
 8002276:	4603      	mov	r3, r0
 8002278:	71fb      	strb	r3, [r7, #7]
	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800227a:	79fb      	ldrb	r3, [r7, #7]
 800227c:	091b      	lsrs	r3, r3, #4
 800227e:	b2db      	uxtb	r3, r3
 8002280:	4618      	mov	r0, r3
 8002282:	f7ff ffa7 	bl	80021d4 <send_nibble>
	send_nibble(data & 0x0F);
 8002286:	79fb      	ldrb	r3, [r7, #7]
 8002288:	f003 030f 	and.w	r3, r3, #15
 800228c:	b2db      	uxtb	r3, r3
 800228e:	4618      	mov	r0, r3
 8002290:	f7ff ffa0 	bl	80021d4 <send_nibble>
}
 8002294:	bf00      	nop
 8002296:	3708      	adds	r7, #8
 8002298:	46bd      	mov	sp, r7
 800229a:	bd80      	pop	{r7, pc}

0800229c <send_command>:

void send_command(unsigned char data) //вывод 2хполбайта на индикатор
{
 800229c:	b580      	push	{r7, lr}
 800229e:	b082      	sub	sp, #8
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	4603      	mov	r3, r0
 80022a4:	71fb      	strb	r3, [r7, #7]
	lcd44780_RS_0;
 80022a6:	2201      	movs	r2, #1
 80022a8:	2101      	movs	r1, #1
 80022aa:	4810      	ldr	r0, [pc, #64]	; (80022ec <send_command+0x50>)
 80022ac:	f004 f8c2 	bl	8006434 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 80022b0:	2200      	movs	r2, #0
 80022b2:	2102      	movs	r1, #2
 80022b4:	480d      	ldr	r0, [pc, #52]	; (80022ec <send_command+0x50>)
 80022b6:	f004 f8bd 	bl	8006434 <HAL_GPIO_WritePin>

	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 80022ba:	79fb      	ldrb	r3, [r7, #7]
 80022bc:	091b      	lsrs	r3, r3, #4
 80022be:	b2db      	uxtb	r3, r3
 80022c0:	4618      	mov	r0, r3
 80022c2:	f7ff ff87 	bl	80021d4 <send_nibble>
	send_nibble(data & 0x0F);
 80022c6:	79fb      	ldrb	r3, [r7, #7]
 80022c8:	f003 030f 	and.w	r3, r3, #15
 80022cc:	b2db      	uxtb	r3, r3
 80022ce:	4618      	mov	r0, r3
 80022d0:	f7ff ff80 	bl	80021d4 <send_nibble>

	while(check_busy_flag());
 80022d4:	bf00      	nop
 80022d6:	f000 f80b 	bl	80022f0 <check_busy_flag>
 80022da:	4603      	mov	r3, r0
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d1fa      	bne.n	80022d6 <send_command+0x3a>
}
 80022e0:	bf00      	nop
 80022e2:	bf00      	nop
 80022e4:	3708      	adds	r7, #8
 80022e6:	46bd      	mov	sp, r7
 80022e8:	bd80      	pop	{r7, pc}
 80022ea:	bf00      	nop
 80022ec:	40020400 	.word	0x40020400

080022f0 <check_busy_flag>:

int check_busy_flag(void)
{
 80022f0:	b580      	push	{r7, lr}
 80022f2:	b086      	sub	sp, #24
 80022f4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022f6:	463b      	mov	r3, r7
 80022f8:	2200      	movs	r2, #0
 80022fa:	601a      	str	r2, [r3, #0]
 80022fc:	605a      	str	r2, [r3, #4]
 80022fe:	609a      	str	r2, [r3, #8]
 8002300:	60da      	str	r2, [r3, #12]
 8002302:	611a      	str	r2, [r3, #16]
	GPIO_PinState status;

	lcd44780_RW_1; // Read
 8002304:	2201      	movs	r2, #1
 8002306:	2102      	movs	r1, #2
 8002308:	4822      	ldr	r0, [pc, #136]	; (8002394 <check_busy_flag+0xa4>)
 800230a:	f004 f893 	bl	8006434 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 800230e:	2320      	movs	r3, #32
 8002310:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002312:	2300      	movs	r3, #0
 8002314:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002316:	2300      	movs	r3, #0
 8002318:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800231a:	2302      	movs	r3, #2
 800231c:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800231e:	463b      	mov	r3, r7
 8002320:	4619      	mov	r1, r3
 8002322:	481c      	ldr	r0, [pc, #112]	; (8002394 <check_busy_flag+0xa4>)
 8002324:	f003 ff96 	bl	8006254 <HAL_GPIO_Init>

	lcd44780_E_1;
 8002328:	2201      	movs	r2, #1
 800232a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800232e:	4819      	ldr	r0, [pc, #100]	; (8002394 <check_busy_flag+0xa4>)
 8002330:	f004 f880 	bl	8006434 <HAL_GPIO_WritePin>
	status=HAL_GPIO_ReadPin(Display_DB7_GPIO_Port, Display_DB7_Pin);
 8002334:	2120      	movs	r1, #32
 8002336:	4817      	ldr	r0, [pc, #92]	; (8002394 <check_busy_flag+0xa4>)
 8002338:	f004 f876 	bl	8006428 <HAL_GPIO_ReadPin>
 800233c:	4603      	mov	r3, r0
 800233e:	75fb      	strb	r3, [r7, #23]
	lcd44780_E_0;
 8002340:	2200      	movs	r2, #0
 8002342:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002346:	4813      	ldr	r0, [pc, #76]	; (8002394 <check_busy_flag+0xa4>)
 8002348:	f004 f874 	bl	8006434 <HAL_GPIO_WritePin>
	lcd44780_E_1;
 800234c:	2201      	movs	r2, #1
 800234e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002352:	4810      	ldr	r0, [pc, #64]	; (8002394 <check_busy_flag+0xa4>)
 8002354:	f004 f86e 	bl	8006434 <HAL_GPIO_WritePin>
	lcd44780_E_0;
 8002358:	2200      	movs	r2, #0
 800235a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800235e:	480d      	ldr	r0, [pc, #52]	; (8002394 <check_busy_flag+0xa4>)
 8002360:	f004 f868 	bl	8006434 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 8002364:	2320      	movs	r3, #32
 8002366:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8002368:	2311      	movs	r3, #17
 800236a:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800236c:	2300      	movs	r3, #0
 800236e:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002370:	2302      	movs	r3, #2
 8002372:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002374:	463b      	mov	r3, r7
 8002376:	4619      	mov	r1, r3
 8002378:	4806      	ldr	r0, [pc, #24]	; (8002394 <check_busy_flag+0xa4>)
 800237a:	f003 ff6b 	bl	8006254 <HAL_GPIO_Init>
	lcd44780_RW_0;
 800237e:	2200      	movs	r2, #0
 8002380:	2102      	movs	r1, #2
 8002382:	4804      	ldr	r0, [pc, #16]	; (8002394 <check_busy_flag+0xa4>)
 8002384:	f004 f856 	bl	8006434 <HAL_GPIO_WritePin>
	return status;
 8002388:	7dfb      	ldrb	r3, [r7, #23]
}
 800238a:	4618      	mov	r0, r3
 800238c:	3718      	adds	r7, #24
 800238e:	46bd      	mov	sp, r7
 8002390:	bd80      	pop	{r7, pc}
 8002392:	bf00      	nop
 8002394:	40020400 	.word	0x40020400

08002398 <Poweroff_LCD>:

void Poweroff_LCD() //выключение ЖК
{
 8002398:	b580      	push	{r7, lr}
 800239a:	af00      	add	r7, sp, #0
	Display_status=0;
 800239c:	4b06      	ldr	r3, [pc, #24]	; (80023b8 <Poweroff_LCD+0x20>)
 800239e:	2200      	movs	r2, #0
 80023a0:	701a      	strb	r2, [r3, #0]

	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 80023a2:	2001      	movs	r0, #1
 80023a4:	f7ff ff7a 	bl	800229c <send_command>
	send_command(0x0A); // Display off
 80023a8:	200a      	movs	r0, #10
 80023aa:	f7ff ff77 	bl	800229c <send_command>
	send_command(0x1B); // Internal DCDC off
 80023ae:	201b      	movs	r0, #27
 80023b0:	f7ff ff74 	bl	800229c <send_command>
}
 80023b4:	bf00      	nop
 80023b6:	bd80      	pop	{r7, pc}
 80023b8:	200009be 	.word	0x200009be

080023bc <Poweron_LCD>:

void Poweron_LCD() //включение ЖК
{
 80023bc:	b580      	push	{r7, lr}
 80023be:	af00      	add	r7, sp, #0
	Display_status=1;
 80023c0:	4b06      	ldr	r3, [pc, #24]	; (80023dc <Poweron_LCD+0x20>)
 80023c2:	2201      	movs	r2, #1
 80023c4:	701a      	strb	r2, [r3, #0]

	send_command(0x0E); // Display on
 80023c6:	200e      	movs	r0, #14
 80023c8:	f7ff ff68 	bl	800229c <send_command>
	send_command(0x1F); // Internal DCDC on
 80023cc:	201f      	movs	r0, #31
 80023ce:	f7ff ff65 	bl	800229c <send_command>
	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 80023d2:	2001      	movs	r0, #1
 80023d4:	f7ff ff62 	bl	800229c <send_command>
}
 80023d8:	bf00      	nop
 80023da:	bd80      	pop	{r7, pc}
 80023dc:	200009be 	.word	0x200009be

080023e0 <init_LCD>:


void init_LCD() //инициализация ЖК
{
 80023e0:	b580      	push	{r7, lr}
 80023e2:	af00      	add	r7, sp, #0
	Display_status=1;
 80023e4:	4b2f      	ldr	r3, [pc, #188]	; (80024a4 <init_LCD+0xc4>)
 80023e6:	2201      	movs	r2, #1
 80023e8:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(Display_Power_GPIO_Port, Display_Power_Pin, GPIO_PIN_RESET); // подаем питание на дисплей
 80023ea:	2200      	movs	r2, #0
 80023ec:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80023f0:	482d      	ldr	r0, [pc, #180]	; (80024a8 <init_LCD+0xc8>)
 80023f2:	f004 f81f 	bl	8006434 <HAL_GPIO_WritePin>
	//Выводы в 0
	HAL_GPIO_WritePin(Display_RS_GPIO_Port, Display_RS_Pin, GPIO_PIN_SET);//  PIN_OFF(PIN_RS); !!!
 80023f6:	2201      	movs	r2, #1
 80023f8:	2101      	movs	r1, #1
 80023fa:	482b      	ldr	r0, [pc, #172]	; (80024a8 <init_LCD+0xc8>)
 80023fc:	f004 f81a 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002400:	2200      	movs	r2, #0
 8002402:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002406:	4828      	ldr	r0, [pc, #160]	; (80024a8 <init_LCD+0xc8>)
 8002408:	f004 f814 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 800240c:	2200      	movs	r2, #0
 800240e:	2104      	movs	r1, #4
 8002410:	4825      	ldr	r0, [pc, #148]	; (80024a8 <init_LCD+0xc8>)
 8002412:	f004 f80f 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 8002416:	2200      	movs	r2, #0
 8002418:	2108      	movs	r1, #8
 800241a:	4823      	ldr	r0, [pc, #140]	; (80024a8 <init_LCD+0xc8>)
 800241c:	f004 f80a 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 8002420:	2200      	movs	r2, #0
 8002422:	2110      	movs	r1, #16
 8002424:	4820      	ldr	r0, [pc, #128]	; (80024a8 <init_LCD+0xc8>)
 8002426:	f004 f805 	bl	8006434 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 800242a:	2200      	movs	r2, #0
 800242c:	2120      	movs	r1, #32
 800242e:	481e      	ldr	r0, [pc, #120]	; (80024a8 <init_LCD+0xc8>)
 8002430:	f004 f800 	bl	8006434 <HAL_GPIO_WritePin>

	//Ждем включения ЖКИ
	HAL_Delay(500);
 8002434:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002438:	f003 fcac 	bl	8005d94 <HAL_Delay>
	lcd44780_RS_0;
 800243c:	2201      	movs	r2, #1
 800243e:	2101      	movs	r1, #1
 8002440:	4819      	ldr	r0, [pc, #100]	; (80024a8 <init_LCD+0xc8>)
 8002442:	f003 fff7 	bl	8006434 <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 8002446:	2200      	movs	r2, #0
 8002448:	2102      	movs	r1, #2
 800244a:	4817      	ldr	r0, [pc, #92]	; (80024a8 <init_LCD+0xc8>)
 800244c:	f003 fff2 	bl	8006434 <HAL_GPIO_WritePin>
	send_nibble(0x02);
 8002450:	2002      	movs	r0, #2
 8002452:	f7ff febf 	bl	80021d4 <send_nibble>
	send_nibble(0x02);
 8002456:	2002      	movs	r0, #2
 8002458:	f7ff febc 	bl	80021d4 <send_nibble>
	send_nibble(0x08);// N=1 F=0
 800245c:	2008      	movs	r0, #8
 800245e:	f7ff feb9 	bl	80021d4 <send_nibble>

	while(check_busy_flag());
 8002462:	bf00      	nop
 8002464:	f7ff ff44 	bl	80022f0 <check_busy_flag>
 8002468:	4603      	mov	r3, r0
 800246a:	2b00      	cmp	r3, #0
 800246c:	d1fa      	bne.n	8002464 <init_LCD+0x84>

	send_command(0x0E);// D=1 C=1 B=0
 800246e:	200e      	movs	r0, #14
 8002470:	f7ff ff14 	bl	800229c <send_command>
	send_command(0x01);
 8002474:	2001      	movs	r0, #1
 8002476:	f7ff ff11 	bl	800229c <send_command>
	send_command(0x06); // I/D=1  S/H=0
 800247a:	2006      	movs	r0, #6
 800247c:	f7ff ff0e 	bl	800229c <send_command>
	send_command(0x2A);// DL=0 N=1 F=0 FT1=1 FT0=0
 8002480:	202a      	movs	r0, #42	; 0x2a
 8002482:	f7ff ff0b 	bl	800229c <send_command>
	send_command(0x1F); //переключение в графику
 8002486:	201f      	movs	r0, #31
 8002488:	f7ff ff08 	bl	800229c <send_command>
	send_command(0x01); //очистили от мусора ОЗУ (т.с. что clear())
 800248c:	2001      	movs	r0, #1
 800248e:	f7ff ff05 	bl	800229c <send_command>

	lcd44780_RS_1;
 8002492:	2200      	movs	r2, #0
 8002494:	2101      	movs	r1, #1
 8002496:	4804      	ldr	r0, [pc, #16]	; (80024a8 <init_LCD+0xc8>)
 8002498:	f003 ffcc 	bl	8006434 <HAL_GPIO_WritePin>

	LcdClear_massive();
 800249c:	f7ff fdae 	bl	8001ffc <LcdClear_massive>

}
 80024a0:	bf00      	nop
 80024a2:	bd80      	pop	{r7, pc}
 80024a4:	200009be 	.word	0x200009be
 80024a8:	40020400 	.word	0x40020400

080024ac <LcdBarLine>:
	while(check_busy_flag());

}

void LcdBarLine(uint32_t fill)    // рисуем прогресс-бар в второй строке
{
 80024ac:	b5b0      	push	{r4, r5, r7, lr}
 80024ae:	b086      	sub	sp, #24
 80024b0:	af00      	add	r7, sp, #0
 80024b2:	6078      	str	r0, [r7, #4]
	uint16_t i, full_fill_position;
	float y;

	if(fill>0xFFFFF)return;
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80024ba:	f080 808f 	bcs.w	80025dc <LcdBarLine+0x130>

	// поиск свободного места в массиве кеша дисплея
	//	for (i = LCD_CACHSIZE-1; i > LCD_X_RES; i--) // поиск свободного места в массиве кеша дисплея, в указанной строке
	//		if(LcdCache[i]==0x00)
	//			found_free_position=i;
	y=LCD_X_RES;
 80024be:	4b49      	ldr	r3, [pc, #292]	; (80025e4 <LcdBarLine+0x138>)
 80024c0:	613b      	str	r3, [r7, #16]
	y*=8; //сколько всего диступно места
 80024c2:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 80024c6:	6938      	ldr	r0, [r7, #16]
 80024c8:	f7fe fc7e 	bl	8000dc8 <__aeabi_fmul>
 80024cc:	4603      	mov	r3, r0
 80024ce:	613b      	str	r3, [r7, #16]
	y/=(float)0xFFFFF;
 80024d0:	4945      	ldr	r1, [pc, #276]	; (80025e8 <LcdBarLine+0x13c>)
 80024d2:	6938      	ldr	r0, [r7, #16]
 80024d4:	f7fe fd2c 	bl	8000f30 <__aeabi_fdiv>
 80024d8:	4603      	mov	r3, r0
 80024da:	613b      	str	r3, [r7, #16]
	y*=(float)fill;// получаем коэфицент заполнения прогрессбара
 80024dc:	6878      	ldr	r0, [r7, #4]
 80024de:	f7fe fc1b 	bl	8000d18 <__aeabi_ui2f>
 80024e2:	4603      	mov	r3, r0
 80024e4:	4619      	mov	r1, r3
 80024e6:	6938      	ldr	r0, [r7, #16]
 80024e8:	f7fe fc6e 	bl	8000dc8 <__aeabi_fmul>
 80024ec:	4603      	mov	r3, r0
 80024ee:	613b      	str	r3, [r7, #16]
	full_fill_position=floor(y/8);
 80024f0:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 80024f4:	6938      	ldr	r0, [r7, #16]
 80024f6:	f7fe fd1b 	bl	8000f30 <__aeabi_fdiv>
 80024fa:	4603      	mov	r3, r0
 80024fc:	4618      	mov	r0, r3
 80024fe:	f7fd ffb5 	bl	800046c <__aeabi_f2d>
 8002502:	4602      	mov	r2, r0
 8002504:	460b      	mov	r3, r1
 8002506:	4610      	mov	r0, r2
 8002508:	4619      	mov	r1, r3
 800250a:	f008 fe01 	bl	800b110 <floor>
 800250e:	4602      	mov	r2, r0
 8002510:	460b      	mov	r3, r1
 8002512:	4610      	mov	r0, r2
 8002514:	4619      	mov	r1, r3
 8002516:	f7fe fad9 	bl	8000acc <__aeabi_d2uiz>
 800251a:	4603      	mov	r3, r0
 800251c:	81fb      	strh	r3, [r7, #14]
	//need_to_be_filled=(LCD_CACHSIZE-1-found_free_position)*8 - ;
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 800251e:	2364      	movs	r3, #100	; 0x64
 8002520:	82fb      	strh	r3, [r7, #22]
 8002522:	e057      	b.n	80025d4 <LcdBarLine+0x128>
		if(y!=0)
 8002524:	f04f 0100 	mov.w	r1, #0
 8002528:	6938      	ldr	r0, [r7, #16]
 800252a:	f7fe fde1 	bl	80010f0 <__aeabi_fcmpeq>
 800252e:	4603      	mov	r3, r0
 8002530:	2b00      	cmp	r3, #0
 8002532:	d14c      	bne.n	80025ce <LcdBarLine+0x122>
		{
			if(full_fill_position>(i-LCD_X_RES))
 8002534:	8afb      	ldrh	r3, [r7, #22]
 8002536:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 800253a:	89fb      	ldrh	r3, [r7, #14]
 800253c:	429a      	cmp	r2, r3
 800253e:	dc08      	bgt.n	8002552 <LcdBarLine+0xa6>
			{
				LcdCache[i]=LcdCache[i]^0xFF;
 8002540:	8afb      	ldrh	r3, [r7, #22]
 8002542:	4a2a      	ldr	r2, [pc, #168]	; (80025ec <LcdBarLine+0x140>)
 8002544:	5cd2      	ldrb	r2, [r2, r3]
 8002546:	8afb      	ldrh	r3, [r7, #22]
 8002548:	43d2      	mvns	r2, r2
 800254a:	b2d1      	uxtb	r1, r2
 800254c:	4a27      	ldr	r2, [pc, #156]	; (80025ec <LcdBarLine+0x140>)
 800254e:	54d1      	strb	r1, [r2, r3]
 8002550:	e03d      	b.n	80025ce <LcdBarLine+0x122>
			} else
			{
				y-=floor(y/8)*8;
 8002552:	6938      	ldr	r0, [r7, #16]
 8002554:	f7fd ff8a 	bl	800046c <__aeabi_f2d>
 8002558:	4604      	mov	r4, r0
 800255a:	460d      	mov	r5, r1
 800255c:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002560:	6938      	ldr	r0, [r7, #16]
 8002562:	f7fe fce5 	bl	8000f30 <__aeabi_fdiv>
 8002566:	4603      	mov	r3, r0
 8002568:	4618      	mov	r0, r3
 800256a:	f7fd ff7f 	bl	800046c <__aeabi_f2d>
 800256e:	4602      	mov	r2, r0
 8002570:	460b      	mov	r3, r1
 8002572:	4610      	mov	r0, r2
 8002574:	4619      	mov	r1, r3
 8002576:	f008 fdcb 	bl	800b110 <floor>
 800257a:	f04f 0200 	mov.w	r2, #0
 800257e:	4b1c      	ldr	r3, [pc, #112]	; (80025f0 <LcdBarLine+0x144>)
 8002580:	f7fd ffcc 	bl	800051c <__aeabi_dmul>
 8002584:	4602      	mov	r2, r0
 8002586:	460b      	mov	r3, r1
 8002588:	4620      	mov	r0, r4
 800258a:	4629      	mov	r1, r5
 800258c:	f7fd fe0e 	bl	80001ac <__aeabi_dsub>
 8002590:	4602      	mov	r2, r0
 8002592:	460b      	mov	r3, r1
 8002594:	4610      	mov	r0, r2
 8002596:	4619      	mov	r1, r3
 8002598:	f7fe fab8 	bl	8000b0c <__aeabi_d2f>
 800259c:	4603      	mov	r3, r0
 800259e:	613b      	str	r3, [r7, #16]
				LcdCache[i]=LcdCache[i]^((1<<(uint16_t)y)-1);
 80025a0:	8afb      	ldrh	r3, [r7, #22]
 80025a2:	4a12      	ldr	r2, [pc, #72]	; (80025ec <LcdBarLine+0x140>)
 80025a4:	5cd3      	ldrb	r3, [r2, r3]
 80025a6:	b25c      	sxtb	r4, r3
 80025a8:	6938      	ldr	r0, [r7, #16]
 80025aa:	f7fe fdd3 	bl	8001154 <__aeabi_f2uiz>
 80025ae:	4603      	mov	r3, r0
 80025b0:	b29b      	uxth	r3, r3
 80025b2:	461a      	mov	r2, r3
 80025b4:	2301      	movs	r3, #1
 80025b6:	4093      	lsls	r3, r2
 80025b8:	b2db      	uxtb	r3, r3
 80025ba:	3b01      	subs	r3, #1
 80025bc:	b2db      	uxtb	r3, r3
 80025be:	b25b      	sxtb	r3, r3
 80025c0:	4063      	eors	r3, r4
 80025c2:	b25a      	sxtb	r2, r3
 80025c4:	8afb      	ldrh	r3, [r7, #22]
 80025c6:	b2d1      	uxtb	r1, r2
 80025c8:	4a08      	ldr	r2, [pc, #32]	; (80025ec <LcdBarLine+0x140>)
 80025ca:	54d1      	strb	r1, [r2, r3]
				break;
 80025cc:	e007      	b.n	80025de <LcdBarLine+0x132>
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 80025ce:	8afb      	ldrh	r3, [r7, #22]
 80025d0:	3301      	adds	r3, #1
 80025d2:	82fb      	strh	r3, [r7, #22]
 80025d4:	8afb      	ldrh	r3, [r7, #22]
 80025d6:	2bc7      	cmp	r3, #199	; 0xc7
 80025d8:	d9a4      	bls.n	8002524 <LcdBarLine+0x78>
 80025da:	e000      	b.n	80025de <LcdBarLine+0x132>
	if(fill>0xFFFFF)return;
 80025dc:	bf00      	nop
			}
		}
	}

}
 80025de:	3718      	adds	r7, #24
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bdb0      	pop	{r4, r5, r7, pc}
 80025e4:	42c80000 	.word	0x42c80000
 80025e8:	497ffff0 	.word	0x497ffff0
 80025ec:	20000734 	.word	0x20000734
 80025f0:	40200000 	.word	0x40200000

080025f4 <output_state>:
//==============================================================================================


//==============================================================================================
void output_state(uint8_t type)
{
 80025f4:	b580      	push	{r7, lr}
 80025f6:	b084      	sub	sp, #16
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	4603      	mov	r3, r0
 80025fc:	71fb      	strb	r3, [r7, #7]
	int relay_settling_time_ms=50;
 80025fe:	2332      	movs	r3, #50	; 0x32
 8002600:	60fb      	str	r3, [r7, #12]
	switch(type)
 8002602:	79fb      	ldrb	r3, [r7, #7]
 8002604:	2b04      	cmp	r3, #4
 8002606:	f200 8101 	bhi.w	800280c <output_state+0x218>
 800260a:	a201      	add	r2, pc, #4	; (adr r2, 8002610 <output_state+0x1c>)
 800260c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002610:	08002625 	.word	0x08002625
 8002614:	0800265d 	.word	0x0800265d
 8002618:	080026ad 	.word	0x080026ad
 800261c:	0800270d 	.word	0x0800270d
 8002620:	0800276d 	.word	0x0800276d
	{
	//----------------------------------------------------------//
	case Output_off_STATE:
		Relay_control(0,0); // set all coils off
 8002624:	2100      	movs	r1, #0
 8002626:	2000      	movs	r0, #0
 8002628:	f7ff f810 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 800262c:	2100      	movs	r1, #0
 800262e:	2001      	movs	r0, #1
 8002630:	f7ff f80c 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 8002634:	2100      	movs	r1, #0
 8002636:	2002      	movs	r0, #2
 8002638:	f7ff f808 	bl	800164c <Relay_control>
		Relay_control(3,0); // Output Enable
 800263c:	2100      	movs	r1, #0
 800263e:	2003      	movs	r0, #3
 8002640:	f7ff f804 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 8002644:	68fb      	ldr	r3, [r7, #12]
 8002646:	4618      	mov	r0, r3
 8002648:	f003 fba4 	bl	8005d94 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 800264c:	2100      	movs	r1, #0
 800264e:	2000      	movs	r0, #0
 8002650:	f7fe fffc 	bl	800164c <Relay_control>
		Current_output_status=type;
 8002654:	4a6f      	ldr	r2, [pc, #444]	; (8002814 <output_state+0x220>)
 8002656:	79fb      	ldrb	r3, [r7, #7]
 8002658:	7013      	strb	r3, [r2, #0]
		break;
 800265a:	e0d7      	b.n	800280c <output_state+0x218>

	case Output_x1_STATE:
		Relay_control(0,0); // set all coils off
 800265c:	2100      	movs	r1, #0
 800265e:	2000      	movs	r0, #0
 8002660:	f7fe fff4 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 8002664:	2100      	movs	r1, #0
 8002666:	2001      	movs	r0, #1
 8002668:	f7fe fff0 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 800266c:	2100      	movs	r1, #0
 800266e:	2002      	movs	r0, #2
 8002670:	f7fe ffec 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002674:	2101      	movs	r1, #1
 8002676:	2003      	movs	r0, #3
 8002678:	f7fe ffe8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	4618      	mov	r0, r3
 8002680:	f003 fb88 	bl	8005d94 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002684:	2100      	movs	r1, #0
 8002686:	2000      	movs	r0, #0
 8002688:	f7fe ffe0 	bl	800164c <Relay_control>
		Current_output_status=type;
 800268c:	4a61      	ldr	r2, [pc, #388]	; (8002814 <output_state+0x220>)
 800268e:	79fb      	ldrb	r3, [r7, #7]
 8002690:	7013      	strb	r3, [r2, #0]
		DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8002692:	4b61      	ldr	r3, [pc, #388]	; (8002818 <output_state+0x224>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	4a61      	ldr	r2, [pc, #388]	; (800281c <output_state+0x228>)
 8002698:	6812      	ldr	r2, [r2, #0]
 800269a:	4611      	mov	r1, r2
 800269c:	4618      	mov	r0, r3
 800269e:	f7fe fa89 	bl	8000bb4 <__aeabi_fsub>
 80026a2:	4603      	mov	r3, r0
 80026a4:	461a      	mov	r2, r3
 80026a6:	4b5e      	ldr	r3, [pc, #376]	; (8002820 <output_state+0x22c>)
 80026a8:	601a      	str	r2, [r3, #0]
		break;
 80026aa:	e0af      	b.n	800280c <output_state+0x218>

	case Output_x2_STATE:
		Relay_control(0,0); // set all coils off
 80026ac:	2100      	movs	r1, #0
 80026ae:	2000      	movs	r0, #0
 80026b0:	f7fe ffcc 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 80026b4:	2101      	movs	r1, #1
 80026b6:	2001      	movs	r0, #1
 80026b8:	f7fe ffc8 	bl	800164c <Relay_control>
		Relay_control(2,1); // x2/x4 mode
 80026bc:	2101      	movs	r1, #1
 80026be:	2002      	movs	r0, #2
 80026c0:	f7fe ffc4 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 80026c4:	2101      	movs	r1, #1
 80026c6:	2003      	movs	r0, #3
 80026c8:	f7fe ffc0 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	4618      	mov	r0, r3
 80026d0:	f003 fb60 	bl	8005d94 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80026d4:	2100      	movs	r1, #0
 80026d6:	2000      	movs	r0, #0
 80026d8:	f7fe ffb8 	bl	800164c <Relay_control>
		Current_output_status=type;
 80026dc:	4a4d      	ldr	r2, [pc, #308]	; (8002814 <output_state+0x220>)
 80026de:	79fb      	ldrb	r3, [r7, #7]
 80026e0:	7013      	strb	r3, [r2, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x2_coeff;
 80026e2:	4b4d      	ldr	r3, [pc, #308]	; (8002818 <output_state+0x224>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	4a4d      	ldr	r2, [pc, #308]	; (800281c <output_state+0x228>)
 80026e8:	6812      	ldr	r2, [r2, #0]
 80026ea:	4611      	mov	r1, r2
 80026ec:	4618      	mov	r0, r3
 80026ee:	f7fe fa61 	bl	8000bb4 <__aeabi_fsub>
 80026f2:	4603      	mov	r3, r0
 80026f4:	461a      	mov	r2, r3
 80026f6:	4b4b      	ldr	r3, [pc, #300]	; (8002824 <output_state+0x230>)
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	4619      	mov	r1, r3
 80026fc:	4610      	mov	r0, r2
 80026fe:	f7fe fb63 	bl	8000dc8 <__aeabi_fmul>
 8002702:	4603      	mov	r3, r0
 8002704:	461a      	mov	r2, r3
 8002706:	4b46      	ldr	r3, [pc, #280]	; (8002820 <output_state+0x22c>)
 8002708:	601a      	str	r2, [r3, #0]
		break;
 800270a:	e07f      	b.n	800280c <output_state+0x218>

	case Output_x4_STATE:
		Relay_control(0,0); // set all coils off
 800270c:	2100      	movs	r1, #0
 800270e:	2000      	movs	r0, #0
 8002710:	f7fe ff9c 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 8002714:	2101      	movs	r1, #1
 8002716:	2001      	movs	r0, #1
 8002718:	f7fe ff98 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 800271c:	2100      	movs	r1, #0
 800271e:	2002      	movs	r0, #2
 8002720:	f7fe ff94 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002724:	2101      	movs	r1, #1
 8002726:	2003      	movs	r0, #3
 8002728:	f7fe ff90 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	4618      	mov	r0, r3
 8002730:	f003 fb30 	bl	8005d94 <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002734:	2100      	movs	r1, #0
 8002736:	2000      	movs	r0, #0
 8002738:	f7fe ff88 	bl	800164c <Relay_control>
		Current_output_status=type;
 800273c:	4a35      	ldr	r2, [pc, #212]	; (8002814 <output_state+0x220>)
 800273e:	79fb      	ldrb	r3, [r7, #7]
 8002740:	7013      	strb	r3, [r2, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x4_coeff;
 8002742:	4b35      	ldr	r3, [pc, #212]	; (8002818 <output_state+0x224>)
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	4a35      	ldr	r2, [pc, #212]	; (800281c <output_state+0x228>)
 8002748:	6812      	ldr	r2, [r2, #0]
 800274a:	4611      	mov	r1, r2
 800274c:	4618      	mov	r0, r3
 800274e:	f7fe fa31 	bl	8000bb4 <__aeabi_fsub>
 8002752:	4603      	mov	r3, r0
 8002754:	461a      	mov	r2, r3
 8002756:	4b34      	ldr	r3, [pc, #208]	; (8002828 <output_state+0x234>)
 8002758:	681b      	ldr	r3, [r3, #0]
 800275a:	4619      	mov	r1, r3
 800275c:	4610      	mov	r0, r2
 800275e:	f7fe fb33 	bl	8000dc8 <__aeabi_fmul>
 8002762:	4603      	mov	r3, r0
 8002764:	461a      	mov	r2, r3
 8002766:	4b2e      	ldr	r3, [pc, #184]	; (8002820 <output_state+0x22c>)
 8002768:	601a      	str	r2, [r3, #0]
		break;
 800276a:	e04f      	b.n	800280c <output_state+0x218>

	case Output_auto_STATE:
		if((cal_DAC_up_voltage-cal_DAC_down_voltage)/DAC_target_speed > 600)
 800276c:	4b2a      	ldr	r3, [pc, #168]	; (8002818 <output_state+0x224>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	4a2a      	ldr	r2, [pc, #168]	; (800281c <output_state+0x228>)
 8002772:	6812      	ldr	r2, [r2, #0]
 8002774:	4611      	mov	r1, r2
 8002776:	4618      	mov	r0, r3
 8002778:	f7fe fa1c 	bl	8000bb4 <__aeabi_fsub>
 800277c:	4603      	mov	r3, r0
 800277e:	461a      	mov	r2, r3
 8002780:	4b2a      	ldr	r3, [pc, #168]	; (800282c <output_state+0x238>)
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	4619      	mov	r1, r3
 8002786:	4610      	mov	r0, r2
 8002788:	f7fe fbd2 	bl	8000f30 <__aeabi_fdiv>
 800278c:	4603      	mov	r3, r0
 800278e:	4928      	ldr	r1, [pc, #160]	; (8002830 <output_state+0x23c>)
 8002790:	4618      	mov	r0, r3
 8002792:	f7fe fcd5 	bl	8001140 <__aeabi_fcmpgt>
 8002796:	4603      	mov	r3, r0
 8002798:	2b00      	cmp	r3, #0
 800279a:	d007      	beq.n	80027ac <output_state+0x1b8>
		{
			if(Current_output_status!=Output_x1_STATE)
 800279c:	4b1d      	ldr	r3, [pc, #116]	; (8002814 <output_state+0x220>)
 800279e:	781b      	ldrb	r3, [r3, #0]
 80027a0:	2b01      	cmp	r3, #1
 80027a2:	d032      	beq.n	800280a <output_state+0x216>
				output_state(Output_x1_STATE);
 80027a4:	2001      	movs	r0, #1
 80027a6:	f7ff ff25 	bl	80025f4 <output_state>
					output_state(Output_x2_STATE);
			}
			else
				if(Current_output_status!=Output_x4_STATE)
					output_state(Output_x4_STATE);
		break;
 80027aa:	e02e      	b.n	800280a <output_state+0x216>
			if (((cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x2_coeff)/DAC_target_speed > 600)
 80027ac:	4b1a      	ldr	r3, [pc, #104]	; (8002818 <output_state+0x224>)
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4a1a      	ldr	r2, [pc, #104]	; (800281c <output_state+0x228>)
 80027b2:	6812      	ldr	r2, [r2, #0]
 80027b4:	4611      	mov	r1, r2
 80027b6:	4618      	mov	r0, r3
 80027b8:	f7fe f9fc 	bl	8000bb4 <__aeabi_fsub>
 80027bc:	4603      	mov	r3, r0
 80027be:	461a      	mov	r2, r3
 80027c0:	4b18      	ldr	r3, [pc, #96]	; (8002824 <output_state+0x230>)
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	4619      	mov	r1, r3
 80027c6:	4610      	mov	r0, r2
 80027c8:	f7fe fafe 	bl	8000dc8 <__aeabi_fmul>
 80027cc:	4603      	mov	r3, r0
 80027ce:	461a      	mov	r2, r3
 80027d0:	4b16      	ldr	r3, [pc, #88]	; (800282c <output_state+0x238>)
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	4619      	mov	r1, r3
 80027d6:	4610      	mov	r0, r2
 80027d8:	f7fe fbaa 	bl	8000f30 <__aeabi_fdiv>
 80027dc:	4603      	mov	r3, r0
 80027de:	4914      	ldr	r1, [pc, #80]	; (8002830 <output_state+0x23c>)
 80027e0:	4618      	mov	r0, r3
 80027e2:	f7fe fcad 	bl	8001140 <__aeabi_fcmpgt>
 80027e6:	4603      	mov	r3, r0
 80027e8:	2b00      	cmp	r3, #0
 80027ea:	d007      	beq.n	80027fc <output_state+0x208>
				if(Current_output_status!=Output_x2_STATE)
 80027ec:	4b09      	ldr	r3, [pc, #36]	; (8002814 <output_state+0x220>)
 80027ee:	781b      	ldrb	r3, [r3, #0]
 80027f0:	2b02      	cmp	r3, #2
 80027f2:	d00a      	beq.n	800280a <output_state+0x216>
					output_state(Output_x2_STATE);
 80027f4:	2002      	movs	r0, #2
 80027f6:	f7ff fefd 	bl	80025f4 <output_state>
		break;
 80027fa:	e006      	b.n	800280a <output_state+0x216>
				if(Current_output_status!=Output_x4_STATE)
 80027fc:	4b05      	ldr	r3, [pc, #20]	; (8002814 <output_state+0x220>)
 80027fe:	781b      	ldrb	r3, [r3, #0]
 8002800:	2b03      	cmp	r3, #3
 8002802:	d002      	beq.n	800280a <output_state+0x216>
					output_state(Output_x4_STATE);
 8002804:	2003      	movs	r0, #3
 8002806:	f7ff fef5 	bl	80025f4 <output_state>
		break;
 800280a:	bf00      	nop
	}
}
 800280c:	bf00      	nop
 800280e:	3710      	adds	r7, #16
 8002810:	46bd      	mov	sp, r7
 8002812:	bd80      	pop	{r7, pc}
 8002814:	200009b4 	.word	0x200009b4
 8002818:	200009ac 	.word	0x200009ac
 800281c:	200009b0 	.word	0x200009b0
 8002820:	200009a8 	.word	0x200009a8
 8002824:	20000718 	.word	0x20000718
 8002828:	2000071c 	.word	0x2000071c
 800282c:	20000998 	.word	0x20000998
 8002830:	44160000 	.word	0x44160000

08002834 <display_screen>:
//==============================================================================================


//==============================================================================================
void display_screen(uint8_t type)
{
 8002834:	b590      	push	{r4, r7, lr}
 8002836:	b087      	sub	sp, #28
 8002838:	af02      	add	r7, sp, #8
 800283a:	4603      	mov	r3, r0
 800283c:	71fb      	strb	r3, [r7, #7]
	char sign;
	switch(type)
 800283e:	79fb      	ldrb	r3, [r7, #7]
 8002840:	2b07      	cmp	r3, #7
 8002842:	f200 81b5 	bhi.w	8002bb0 <display_screen+0x37c>
 8002846:	a201      	add	r2, pc, #4	; (adr r2, 800284c <display_screen+0x18>)
 8002848:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800284c:	08002acd 	.word	0x08002acd
 8002850:	08002aef 	.word	0x08002aef
 8002854:	08002b8d 	.word	0x08002b8d
 8002858:	08002a23 	.word	0x08002a23
 800285c:	0800286d 	.word	0x0800286d
 8002860:	0800299f 	.word	0x0800299f
 8002864:	08002961 	.word	0x08002961
 8002868:	08002917 	.word	0x08002917
	{
	//----------------------------------------------------------//
	case AMP_SCREEN:
		if(DAC_code_direction==DIRECTION_UP_STATE)
 800286c:	4ba8      	ldr	r3, [pc, #672]	; (8002b10 <display_screen+0x2dc>)
 800286e:	781b      	ldrb	r3, [r3, #0]
 8002870:	2b01      	cmp	r3, #1
 8002872:	d102      	bne.n	800287a <display_screen+0x46>
		{
			sign='+';
 8002874:	232b      	movs	r3, #43	; 0x2b
 8002876:	73fb      	strb	r3, [r7, #15]
 8002878:	e008      	b.n	800288c <display_screen+0x58>
		}
		else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 800287a:	4ba5      	ldr	r3, [pc, #660]	; (8002b10 <display_screen+0x2dc>)
 800287c:	781b      	ldrb	r3, [r3, #0]
 800287e:	2b00      	cmp	r3, #0
 8002880:	d102      	bne.n	8002888 <display_screen+0x54>
		{
			sign='-';
 8002882:	232d      	movs	r3, #45	; 0x2d
 8002884:	73fb      	strb	r3, [r7, #15]
 8002886:	e001      	b.n	800288c <display_screen+0x58>
		} else
		{
			sign='*';
 8002888:	232a      	movs	r3, #42	; 0x2a
 800288a:	73fb      	strb	r3, [r7, #15]
		}

		sprintf(lcd_buf,"I %c%1.4EA",sign, amp_target_speed);
 800288c:	7bfc      	ldrb	r4, [r7, #15]
 800288e:	4ba1      	ldr	r3, [pc, #644]	; (8002b14 <display_screen+0x2e0>)
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	4618      	mov	r0, r3
 8002894:	f7fd fdea 	bl	800046c <__aeabi_f2d>
 8002898:	4602      	mov	r2, r0
 800289a:	460b      	mov	r3, r1
 800289c:	e9cd 2300 	strd	r2, r3, [sp]
 80028a0:	4622      	mov	r2, r4
 80028a2:	499d      	ldr	r1, [pc, #628]	; (8002b18 <display_screen+0x2e4>)
 80028a4:	489d      	ldr	r0, [pc, #628]	; (8002b1c <display_screen+0x2e8>)
 80028a6:	f009 fbad 	bl	800c004 <siprintf>
		LcdString(1, 1);
 80028aa:	2101      	movs	r1, #1
 80028ac:	2001      	movs	r0, #1
 80028ae:	f7ff fc4b 	bl	8002148 <LcdString>

		if(cfg.LDACMODE==1){
 80028b2:	4b9b      	ldr	r3, [pc, #620]	; (8002b20 <display_screen+0x2ec>)
 80028b4:	789b      	ldrb	r3, [r3, #2]
 80028b6:	2b01      	cmp	r3, #1
 80028b8:	d117      	bne.n	80028ea <display_screen+0xb6>
			sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 80028ba:	4b9a      	ldr	r3, [pc, #616]	; (8002b24 <display_screen+0x2f0>)
 80028bc:	781b      	ldrb	r3, [r3, #0]
 80028be:	461a      	mov	r2, r3
 80028c0:	4b99      	ldr	r3, [pc, #612]	; (8002b28 <display_screen+0x2f4>)
 80028c2:	781b      	ldrb	r3, [r3, #0]
 80028c4:	4619      	mov	r1, r3
 80028c6:	4b99      	ldr	r3, [pc, #612]	; (8002b2c <display_screen+0x2f8>)
 80028c8:	781b      	ldrb	r3, [r3, #0]
 80028ca:	9300      	str	r3, [sp, #0]
 80028cc:	460b      	mov	r3, r1
 80028ce:	4998      	ldr	r1, [pc, #608]	; (8002b30 <display_screen+0x2fc>)
 80028d0:	4892      	ldr	r0, [pc, #584]	; (8002b1c <display_screen+0x2e8>)
 80028d2:	f009 fb97 	bl	800c004 <siprintf>
			LcdString(1, 2);
 80028d6:	2102      	movs	r1, #2
 80028d8:	2001      	movs	r0, #1
 80028da:	f7ff fc35 	bl	8002148 <LcdString>
			LcdBarLine(DAC_code);
 80028de:	4b95      	ldr	r3, [pc, #596]	; (8002b34 <display_screen+0x300>)
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	4618      	mov	r0, r3
 80028e4:	f7ff fde2 	bl	80024ac <LcdBarLine>
			{
				sprintf(lcd_buf,"READY TO GO");
				LcdString(1, 2);
			}
		}
		break;
 80028e8:	e162      	b.n	8002bb0 <display_screen+0x37c>
			if(Current_output_status==Output_off_STATE)
 80028ea:	4b93      	ldr	r3, [pc, #588]	; (8002b38 <display_screen+0x304>)
 80028ec:	781b      	ldrb	r3, [r3, #0]
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d108      	bne.n	8002904 <display_screen+0xd0>
				sprintf(lcd_buf,"OUTPUT DISABLED");
 80028f2:	4992      	ldr	r1, [pc, #584]	; (8002b3c <display_screen+0x308>)
 80028f4:	4889      	ldr	r0, [pc, #548]	; (8002b1c <display_screen+0x2e8>)
 80028f6:	f009 fb85 	bl	800c004 <siprintf>
				LcdString(1, 2);
 80028fa:	2102      	movs	r1, #2
 80028fc:	2001      	movs	r0, #1
 80028fe:	f7ff fc23 	bl	8002148 <LcdString>
		break;
 8002902:	e155      	b.n	8002bb0 <display_screen+0x37c>
				sprintf(lcd_buf,"READY TO GO");
 8002904:	498e      	ldr	r1, [pc, #568]	; (8002b40 <display_screen+0x30c>)
 8002906:	4885      	ldr	r0, [pc, #532]	; (8002b1c <display_screen+0x2e8>)
 8002908:	f009 fb7c 	bl	800c004 <siprintf>
				LcdString(1, 2);
 800290c:	2102      	movs	r1, #2
 800290e:	2001      	movs	r0, #1
 8002910:	f7ff fc1a 	bl	8002148 <LcdString>
		break;
 8002914:	e14c      	b.n	8002bb0 <display_screen+0x37c>

	//----------------------------------------------------------//
	case DIR_SELECT_SCREEN:
		sprintf(lcd_buf,"Ramp direction");
 8002916:	498b      	ldr	r1, [pc, #556]	; (8002b44 <display_screen+0x310>)
 8002918:	4880      	ldr	r0, [pc, #512]	; (8002b1c <display_screen+0x2e8>)
 800291a:	f009 fb73 	bl	800c004 <siprintf>
		LcdString(1, 1);
 800291e:	2101      	movs	r1, #1
 8002920:	2001      	movs	r0, #1
 8002922:	f7ff fc11 	bl	8002148 <LcdString>

		if(DAC_code_direction==DIRECTION_UP_STATE)
 8002926:	4b7a      	ldr	r3, [pc, #488]	; (8002b10 <display_screen+0x2dc>)
 8002928:	781b      	ldrb	r3, [r3, #0]
 800292a:	2b01      	cmp	r3, #1
 800292c:	d103      	bne.n	8002936 <display_screen+0x102>
			sprintf(lcd_buf,"UP");
 800292e:	4986      	ldr	r1, [pc, #536]	; (8002b48 <display_screen+0x314>)
 8002930:	487a      	ldr	r0, [pc, #488]	; (8002b1c <display_screen+0x2e8>)
 8002932:	f009 fb67 	bl	800c004 <siprintf>
		if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002936:	4b76      	ldr	r3, [pc, #472]	; (8002b10 <display_screen+0x2dc>)
 8002938:	781b      	ldrb	r3, [r3, #0]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d103      	bne.n	8002946 <display_screen+0x112>
			sprintf(lcd_buf,"DOWN");
 800293e:	4983      	ldr	r1, [pc, #524]	; (8002b4c <display_screen+0x318>)
 8002940:	4876      	ldr	r0, [pc, #472]	; (8002b1c <display_screen+0x2e8>)
 8002942:	f009 fb5f 	bl	800c004 <siprintf>
		if(DAC_code_direction==DIRECTION_CYCLE_STATE)
 8002946:	4b72      	ldr	r3, [pc, #456]	; (8002b10 <display_screen+0x2dc>)
 8002948:	781b      	ldrb	r3, [r3, #0]
 800294a:	2b02      	cmp	r3, #2
 800294c:	d103      	bne.n	8002956 <display_screen+0x122>
			sprintf(lcd_buf,"CYCLE");
 800294e:	4980      	ldr	r1, [pc, #512]	; (8002b50 <display_screen+0x31c>)
 8002950:	4872      	ldr	r0, [pc, #456]	; (8002b1c <display_screen+0x2e8>)
 8002952:	f009 fb57 	bl	800c004 <siprintf>
		LcdString(1, 2);
 8002956:	2102      	movs	r1, #2
 8002958:	2001      	movs	r0, #1
 800295a:	f7ff fbf5 	bl	8002148 <LcdString>
		break;
 800295e:	e127      	b.n	8002bb0 <display_screen+0x37c>
	//----------------------------------------------------------//
	case CAP_SELECT_SCREEN:
		sprintf(lcd_buf,"Reference C%1u",C_ref);
 8002960:	4b7c      	ldr	r3, [pc, #496]	; (8002b54 <display_screen+0x320>)
 8002962:	781b      	ldrb	r3, [r3, #0]
 8002964:	461a      	mov	r2, r3
 8002966:	497c      	ldr	r1, [pc, #496]	; (8002b58 <display_screen+0x324>)
 8002968:	486c      	ldr	r0, [pc, #432]	; (8002b1c <display_screen+0x2e8>)
 800296a:	f009 fb4b 	bl	800c004 <siprintf>
		LcdString(1, 1);
 800296e:	2101      	movs	r1, #1
 8002970:	2001      	movs	r0, #1
 8002972:	f7ff fbe9 	bl	8002148 <LcdString>

		sprintf(lcd_buf,"Cap %.6fpF",C_value[C_ref]);
 8002976:	4b77      	ldr	r3, [pc, #476]	; (8002b54 <display_screen+0x320>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	461a      	mov	r2, r3
 800297c:	4b77      	ldr	r3, [pc, #476]	; (8002b5c <display_screen+0x328>)
 800297e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002982:	4618      	mov	r0, r3
 8002984:	f7fd fd72 	bl	800046c <__aeabi_f2d>
 8002988:	4602      	mov	r2, r0
 800298a:	460b      	mov	r3, r1
 800298c:	4974      	ldr	r1, [pc, #464]	; (8002b60 <display_screen+0x32c>)
 800298e:	4863      	ldr	r0, [pc, #396]	; (8002b1c <display_screen+0x2e8>)
 8002990:	f009 fb38 	bl	800c004 <siprintf>
		LcdString(1, 2);
 8002994:	2102      	movs	r1, #2
 8002996:	2001      	movs	r0, #1
 8002998:	f7ff fbd6 	bl	8002148 <LcdString>
		break;
 800299c:	e108      	b.n	8002bb0 <display_screen+0x37c>
	//----------------------------------------------------------//

	case VOLT_SCREEN:

		sprintf(lcd_buf,"Vout %2.5fV",calculate_output_voltage());
 800299e:	f000 f911 	bl	8002bc4 <calculate_output_voltage>
 80029a2:	4603      	mov	r3, r0
 80029a4:	4618      	mov	r0, r3
 80029a6:	f7fd fd61 	bl	800046c <__aeabi_f2d>
 80029aa:	4602      	mov	r2, r0
 80029ac:	460b      	mov	r3, r1
 80029ae:	496d      	ldr	r1, [pc, #436]	; (8002b64 <display_screen+0x330>)
 80029b0:	485a      	ldr	r0, [pc, #360]	; (8002b1c <display_screen+0x2e8>)
 80029b2:	f009 fb27 	bl	800c004 <siprintf>
		LcdString(1, 1);
 80029b6:	2101      	movs	r1, #1
 80029b8:	2001      	movs	r0, #1
 80029ba:	f7ff fbc5 	bl	8002148 <LcdString>

		if(Current_output_status==Output_off_STATE)
 80029be:	4b5e      	ldr	r3, [pc, #376]	; (8002b38 <display_screen+0x304>)
 80029c0:	781b      	ldrb	r3, [r3, #0]
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d107      	bne.n	80029d6 <display_screen+0x1a2>
		{
			sprintf(lcd_buf,"OUTPUT DISABLED");
 80029c6:	495d      	ldr	r1, [pc, #372]	; (8002b3c <display_screen+0x308>)
 80029c8:	4854      	ldr	r0, [pc, #336]	; (8002b1c <display_screen+0x2e8>)
 80029ca:	f009 fb1b 	bl	800c004 <siprintf>
			LcdString(1, 2);
 80029ce:	2102      	movs	r1, #2
 80029d0:	2001      	movs	r0, #1
 80029d2:	f7ff fbb9 	bl	8002148 <LcdString>
		}
		if(Current_output_status==Output_x1_STATE)
 80029d6:	4b58      	ldr	r3, [pc, #352]	; (8002b38 <display_screen+0x304>)
 80029d8:	781b      	ldrb	r3, [r3, #0]
 80029da:	2b01      	cmp	r3, #1
 80029dc:	d107      	bne.n	80029ee <display_screen+0x1ba>
		{
			sprintf(lcd_buf,"X1 MODE");
 80029de:	4962      	ldr	r1, [pc, #392]	; (8002b68 <display_screen+0x334>)
 80029e0:	484e      	ldr	r0, [pc, #312]	; (8002b1c <display_screen+0x2e8>)
 80029e2:	f009 fb0f 	bl	800c004 <siprintf>
			LcdString(1, 2);
 80029e6:	2102      	movs	r1, #2
 80029e8:	2001      	movs	r0, #1
 80029ea:	f7ff fbad 	bl	8002148 <LcdString>
		}
		if(Current_output_status==Output_x2_STATE)
 80029ee:	4b52      	ldr	r3, [pc, #328]	; (8002b38 <display_screen+0x304>)
 80029f0:	781b      	ldrb	r3, [r3, #0]
 80029f2:	2b02      	cmp	r3, #2
 80029f4:	d107      	bne.n	8002a06 <display_screen+0x1d2>
		{
			sprintf(lcd_buf,"X2 MODE");
 80029f6:	495d      	ldr	r1, [pc, #372]	; (8002b6c <display_screen+0x338>)
 80029f8:	4848      	ldr	r0, [pc, #288]	; (8002b1c <display_screen+0x2e8>)
 80029fa:	f009 fb03 	bl	800c004 <siprintf>
			LcdString(1, 2);
 80029fe:	2102      	movs	r1, #2
 8002a00:	2001      	movs	r0, #1
 8002a02:	f7ff fba1 	bl	8002148 <LcdString>
		}
		if(Current_output_status==Output_x4_STATE)
 8002a06:	4b4c      	ldr	r3, [pc, #304]	; (8002b38 <display_screen+0x304>)
 8002a08:	781b      	ldrb	r3, [r3, #0]
 8002a0a:	2b03      	cmp	r3, #3
 8002a0c:	f040 80cf 	bne.w	8002bae <display_screen+0x37a>
		{
			sprintf(lcd_buf,"X4 MODE");
 8002a10:	4957      	ldr	r1, [pc, #348]	; (8002b70 <display_screen+0x33c>)
 8002a12:	4842      	ldr	r0, [pc, #264]	; (8002b1c <display_screen+0x2e8>)
 8002a14:	f009 faf6 	bl	800c004 <siprintf>
			LcdString(1, 2);
 8002a18:	2102      	movs	r1, #2
 8002a1a:	2001      	movs	r0, #1
 8002a1c:	f7ff fb94 	bl	8002148 <LcdString>
		}
		break;
 8002a20:	e0c5      	b.n	8002bae <display_screen+0x37a>
	//----------------------------------------------------------//
		case dU_dt_SCREEN:
			if(DAC_code_direction==DIRECTION_UP_STATE)
 8002a22:	4b3b      	ldr	r3, [pc, #236]	; (8002b10 <display_screen+0x2dc>)
 8002a24:	781b      	ldrb	r3, [r3, #0]
 8002a26:	2b01      	cmp	r3, #1
 8002a28:	d102      	bne.n	8002a30 <display_screen+0x1fc>
			{
				sign='+';
 8002a2a:	232b      	movs	r3, #43	; 0x2b
 8002a2c:	73fb      	strb	r3, [r7, #15]
 8002a2e:	e008      	b.n	8002a42 <display_screen+0x20e>
			}
			else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002a30:	4b37      	ldr	r3, [pc, #220]	; (8002b10 <display_screen+0x2dc>)
 8002a32:	781b      	ldrb	r3, [r3, #0]
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	d102      	bne.n	8002a3e <display_screen+0x20a>
			{
				sign='-';
 8002a38:	232d      	movs	r3, #45	; 0x2d
 8002a3a:	73fb      	strb	r3, [r7, #15]
 8002a3c:	e001      	b.n	8002a42 <display_screen+0x20e>
			} else
			{
				sign='*';
 8002a3e:	232a      	movs	r3, #42	; 0x2a
 8002a40:	73fb      	strb	r3, [r7, #15]
			}

			sprintf(lcd_buf,"' %c%1.4EV/s",sign, ramp_target_speed);
 8002a42:	7bfc      	ldrb	r4, [r7, #15]
 8002a44:	4b4b      	ldr	r3, [pc, #300]	; (8002b74 <display_screen+0x340>)
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4618      	mov	r0, r3
 8002a4a:	f7fd fd0f 	bl	800046c <__aeabi_f2d>
 8002a4e:	4602      	mov	r2, r0
 8002a50:	460b      	mov	r3, r1
 8002a52:	e9cd 2300 	strd	r2, r3, [sp]
 8002a56:	4622      	mov	r2, r4
 8002a58:	4947      	ldr	r1, [pc, #284]	; (8002b78 <display_screen+0x344>)
 8002a5a:	4830      	ldr	r0, [pc, #192]	; (8002b1c <display_screen+0x2e8>)
 8002a5c:	f009 fad2 	bl	800c004 <siprintf>
			LcdString(1, 1);
 8002a60:	2101      	movs	r1, #1
 8002a62:	2001      	movs	r0, #1
 8002a64:	f7ff fb70 	bl	8002148 <LcdString>

			if(cfg.LDACMODE==1){
 8002a68:	4b2d      	ldr	r3, [pc, #180]	; (8002b20 <display_screen+0x2ec>)
 8002a6a:	789b      	ldrb	r3, [r3, #2]
 8002a6c:	2b01      	cmp	r3, #1
 8002a6e:	d117      	bne.n	8002aa0 <display_screen+0x26c>
				sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002a70:	4b2c      	ldr	r3, [pc, #176]	; (8002b24 <display_screen+0x2f0>)
 8002a72:	781b      	ldrb	r3, [r3, #0]
 8002a74:	461a      	mov	r2, r3
 8002a76:	4b2c      	ldr	r3, [pc, #176]	; (8002b28 <display_screen+0x2f4>)
 8002a78:	781b      	ldrb	r3, [r3, #0]
 8002a7a:	4619      	mov	r1, r3
 8002a7c:	4b2b      	ldr	r3, [pc, #172]	; (8002b2c <display_screen+0x2f8>)
 8002a7e:	781b      	ldrb	r3, [r3, #0]
 8002a80:	9300      	str	r3, [sp, #0]
 8002a82:	460b      	mov	r3, r1
 8002a84:	492a      	ldr	r1, [pc, #168]	; (8002b30 <display_screen+0x2fc>)
 8002a86:	4825      	ldr	r0, [pc, #148]	; (8002b1c <display_screen+0x2e8>)
 8002a88:	f009 fabc 	bl	800c004 <siprintf>
				LcdString(1, 2);
 8002a8c:	2102      	movs	r1, #2
 8002a8e:	2001      	movs	r0, #1
 8002a90:	f7ff fb5a 	bl	8002148 <LcdString>
				LcdBarLine(DAC_code);
 8002a94:	4b27      	ldr	r3, [pc, #156]	; (8002b34 <display_screen+0x300>)
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	4618      	mov	r0, r3
 8002a9a:	f7ff fd07 	bl	80024ac <LcdBarLine>
				{
					sprintf(lcd_buf,"READY TO GO");
					LcdString(1, 2);
				}
			}
			break;
 8002a9e:	e087      	b.n	8002bb0 <display_screen+0x37c>
				if(Current_output_status==Output_off_STATE)
 8002aa0:	4b25      	ldr	r3, [pc, #148]	; (8002b38 <display_screen+0x304>)
 8002aa2:	781b      	ldrb	r3, [r3, #0]
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	d108      	bne.n	8002aba <display_screen+0x286>
					sprintf(lcd_buf,"OUTPUT DISABLED");
 8002aa8:	4924      	ldr	r1, [pc, #144]	; (8002b3c <display_screen+0x308>)
 8002aaa:	481c      	ldr	r0, [pc, #112]	; (8002b1c <display_screen+0x2e8>)
 8002aac:	f009 faaa 	bl	800c004 <siprintf>
					LcdString(1, 2);
 8002ab0:	2102      	movs	r1, #2
 8002ab2:	2001      	movs	r0, #1
 8002ab4:	f7ff fb48 	bl	8002148 <LcdString>
			break;
 8002ab8:	e07a      	b.n	8002bb0 <display_screen+0x37c>
					sprintf(lcd_buf,"READY TO GO");
 8002aba:	4921      	ldr	r1, [pc, #132]	; (8002b40 <display_screen+0x30c>)
 8002abc:	4817      	ldr	r0, [pc, #92]	; (8002b1c <display_screen+0x2e8>)
 8002abe:	f009 faa1 	bl	800c004 <siprintf>
					LcdString(1, 2);
 8002ac2:	2102      	movs	r1, #2
 8002ac4:	2001      	movs	r0, #1
 8002ac6:	f7ff fb3f 	bl	8002148 <LcdString>
			break;
 8002aca:	e071      	b.n	8002bb0 <display_screen+0x37c>
			//----------------------------------------------------------//
	case Hello_SCREEN:
		sprintf(lcd_buf,"Hello AmpNuts!");
 8002acc:	492b      	ldr	r1, [pc, #172]	; (8002b7c <display_screen+0x348>)
 8002ace:	4813      	ldr	r0, [pc, #76]	; (8002b1c <display_screen+0x2e8>)
 8002ad0:	f009 fa98 	bl	800c004 <siprintf>
		LcdString(1, 1);
 8002ad4:	2101      	movs	r1, #1
 8002ad6:	2001      	movs	r0, #1
 8002ad8:	f7ff fb36 	bl	8002148 <LcdString>
		sprintf(lcd_buf,"I`m Micron-GLIN");
 8002adc:	4928      	ldr	r1, [pc, #160]	; (8002b80 <display_screen+0x34c>)
 8002ade:	480f      	ldr	r0, [pc, #60]	; (8002b1c <display_screen+0x2e8>)
 8002ae0:	f009 fa90 	bl	800c004 <siprintf>
		LcdString(1, 2);
 8002ae4:	2102      	movs	r1, #2
 8002ae6:	2001      	movs	r0, #1
 8002ae8:	f7ff fb2e 	bl	8002148 <LcdString>
		break;
 8002aec:	e060      	b.n	8002bb0 <display_screen+0x37c>
		//----------------------------------------------------------//
	case Warm_up_SCREEN:
		sprintf(lcd_buf,"need time to");
 8002aee:	4925      	ldr	r1, [pc, #148]	; (8002b84 <display_screen+0x350>)
 8002af0:	480a      	ldr	r0, [pc, #40]	; (8002b1c <display_screen+0x2e8>)
 8002af2:	f009 fa87 	bl	800c004 <siprintf>
		LcdString(1, 1);
 8002af6:	2101      	movs	r1, #1
 8002af8:	2001      	movs	r0, #1
 8002afa:	f7ff fb25 	bl	8002148 <LcdString>
		sprintf(lcd_buf,"warm-up my refs");
 8002afe:	4922      	ldr	r1, [pc, #136]	; (8002b88 <display_screen+0x354>)
 8002b00:	4806      	ldr	r0, [pc, #24]	; (8002b1c <display_screen+0x2e8>)
 8002b02:	f009 fa7f 	bl	800c004 <siprintf>
		LcdString(1, 2);
 8002b06:	2102      	movs	r1, #2
 8002b08:	2001      	movs	r0, #1
 8002b0a:	f7ff fb1d 	bl	8002148 <LcdString>
		break;
 8002b0e:	e04f      	b.n	8002bb0 <display_screen+0x37c>
 8002b10:	200009bc 	.word	0x200009bc
 8002b14:	2000000c 	.word	0x2000000c
 8002b18:	08010400 	.word	0x08010400
 8002b1c:	20000720 	.word	0x20000720
 8002b20:	20000984 	.word	0x20000984
 8002b24:	2000092c 	.word	0x2000092c
 8002b28:	2000092d 	.word	0x2000092d
 8002b2c:	2000092e 	.word	0x2000092e
 8002b30:	0801040c 	.word	0x0801040c
 8002b34:	200009b8 	.word	0x200009b8
 8002b38:	200009b4 	.word	0x200009b4
 8002b3c:	08010424 	.word	0x08010424
 8002b40:	08010434 	.word	0x08010434
 8002b44:	08010440 	.word	0x08010440
 8002b48:	08010450 	.word	0x08010450
 8002b4c:	08010454 	.word	0x08010454
 8002b50:	0801045c 	.word	0x0801045c
 8002b54:	200009a0 	.word	0x200009a0
 8002b58:	08010464 	.word	0x08010464
 8002b5c:	20000800 	.word	0x20000800
 8002b60:	08010474 	.word	0x08010474
 8002b64:	08010480 	.word	0x08010480
 8002b68:	0801048c 	.word	0x0801048c
 8002b6c:	08010494 	.word	0x08010494
 8002b70:	0801049c 	.word	0x0801049c
 8002b74:	20000010 	.word	0x20000010
 8002b78:	080104a4 	.word	0x080104a4
 8002b7c:	080104b4 	.word	0x080104b4
 8002b80:	080104c4 	.word	0x080104c4
 8002b84:	080104d4 	.word	0x080104d4
 8002b88:	080104e4 	.word	0x080104e4
		//----------------------------------------------------------//
	case Ready_SCREEN:
		sprintf(lcd_buf,"I`m ready...");
 8002b8c:	490a      	ldr	r1, [pc, #40]	; (8002bb8 <display_screen+0x384>)
 8002b8e:	480b      	ldr	r0, [pc, #44]	; (8002bbc <display_screen+0x388>)
 8002b90:	f009 fa38 	bl	800c004 <siprintf>
		LcdString(1, 1);
 8002b94:	2101      	movs	r1, #1
 8002b96:	2001      	movs	r0, #1
 8002b98:	f7ff fad6 	bl	8002148 <LcdString>
		sprintf(lcd_buf,"      Let`s start!");
 8002b9c:	4908      	ldr	r1, [pc, #32]	; (8002bc0 <display_screen+0x38c>)
 8002b9e:	4807      	ldr	r0, [pc, #28]	; (8002bbc <display_screen+0x388>)
 8002ba0:	f009 fa30 	bl	800c004 <siprintf>
		LcdString(1, 2);
 8002ba4:	2102      	movs	r1, #2
 8002ba6:	2001      	movs	r0, #1
 8002ba8:	f7ff face 	bl	8002148 <LcdString>
		break;
 8002bac:	e000      	b.n	8002bb0 <display_screen+0x37c>
		break;
 8002bae:	bf00      	nop
	}

}
 8002bb0:	bf00      	nop
 8002bb2:	3714      	adds	r7, #20
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	bd90      	pop	{r4, r7, pc}
 8002bb8:	080104f4 	.word	0x080104f4
 8002bbc:	20000720 	.word	0x20000720
 8002bc0:	08010504 	.word	0x08010504

08002bc4 <calculate_output_voltage>:



//==============================================================================================
float calculate_output_voltage(void)
{
 8002bc4:	b580      	push	{r7, lr}
 8002bc6:	b082      	sub	sp, #8
 8002bc8:	af00      	add	r7, sp, #0
	float tmp=0;
 8002bca:	f04f 0300 	mov.w	r3, #0
 8002bce:	607b      	str	r3, [r7, #4]

	if(Current_output_status==Output_x4_STATE)
 8002bd0:	4b34      	ldr	r3, [pc, #208]	; (8002ca4 <calculate_output_voltage+0xe0>)
 8002bd2:	781b      	ldrb	r3, [r3, #0]
 8002bd4:	2b03      	cmp	r3, #3
 8002bd6:	d11d      	bne.n	8002c14 <calculate_output_voltage+0x50>
		tmp=(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x4_coeff;
 8002bd8:	4b33      	ldr	r3, [pc, #204]	; (8002ca8 <calculate_output_voltage+0xe4>)
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	4618      	mov	r0, r3
 8002bde:	f7fe f89b 	bl	8000d18 <__aeabi_ui2f>
 8002be2:	4602      	mov	r2, r0
 8002be4:	4b31      	ldr	r3, [pc, #196]	; (8002cac <calculate_output_voltage+0xe8>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	4619      	mov	r1, r3
 8002bea:	4610      	mov	r0, r2
 8002bec:	f7fe f8ec 	bl	8000dc8 <__aeabi_fmul>
 8002bf0:	4603      	mov	r3, r0
 8002bf2:	461a      	mov	r2, r3
 8002bf4:	4b2e      	ldr	r3, [pc, #184]	; (8002cb0 <calculate_output_voltage+0xec>)
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	4619      	mov	r1, r3
 8002bfa:	4610      	mov	r0, r2
 8002bfc:	f7fd ffdc 	bl	8000bb8 <__addsf3>
 8002c00:	4603      	mov	r3, r0
 8002c02:	461a      	mov	r2, r3
 8002c04:	4b2b      	ldr	r3, [pc, #172]	; (8002cb4 <calculate_output_voltage+0xf0>)
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	4619      	mov	r1, r3
 8002c0a:	4610      	mov	r0, r2
 8002c0c:	f7fe f8dc 	bl	8000dc8 <__aeabi_fmul>
 8002c10:	4603      	mov	r3, r0
 8002c12:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_x2_STATE)
 8002c14:	4b23      	ldr	r3, [pc, #140]	; (8002ca4 <calculate_output_voltage+0xe0>)
 8002c16:	781b      	ldrb	r3, [r3, #0]
 8002c18:	2b02      	cmp	r3, #2
 8002c1a:	d11d      	bne.n	8002c58 <calculate_output_voltage+0x94>
		tmp=(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x2_coeff;
 8002c1c:	4b22      	ldr	r3, [pc, #136]	; (8002ca8 <calculate_output_voltage+0xe4>)
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	4618      	mov	r0, r3
 8002c22:	f7fe f879 	bl	8000d18 <__aeabi_ui2f>
 8002c26:	4602      	mov	r2, r0
 8002c28:	4b20      	ldr	r3, [pc, #128]	; (8002cac <calculate_output_voltage+0xe8>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4619      	mov	r1, r3
 8002c2e:	4610      	mov	r0, r2
 8002c30:	f7fe f8ca 	bl	8000dc8 <__aeabi_fmul>
 8002c34:	4603      	mov	r3, r0
 8002c36:	461a      	mov	r2, r3
 8002c38:	4b1d      	ldr	r3, [pc, #116]	; (8002cb0 <calculate_output_voltage+0xec>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4619      	mov	r1, r3
 8002c3e:	4610      	mov	r0, r2
 8002c40:	f7fd ffba 	bl	8000bb8 <__addsf3>
 8002c44:	4603      	mov	r3, r0
 8002c46:	461a      	mov	r2, r3
 8002c48:	4b1b      	ldr	r3, [pc, #108]	; (8002cb8 <calculate_output_voltage+0xf4>)
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	4619      	mov	r1, r3
 8002c4e:	4610      	mov	r0, r2
 8002c50:	f7fe f8ba 	bl	8000dc8 <__aeabi_fmul>
 8002c54:	4603      	mov	r3, r0
 8002c56:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_x1_STATE)
 8002c58:	4b12      	ldr	r3, [pc, #72]	; (8002ca4 <calculate_output_voltage+0xe0>)
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	2b01      	cmp	r3, #1
 8002c5e:	d115      	bne.n	8002c8c <calculate_output_voltage+0xc8>
		tmp=cal_DAC_down_voltage+(DAC_code*dac_resolution);
 8002c60:	4b11      	ldr	r3, [pc, #68]	; (8002ca8 <calculate_output_voltage+0xe4>)
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	4618      	mov	r0, r3
 8002c66:	f7fe f857 	bl	8000d18 <__aeabi_ui2f>
 8002c6a:	4602      	mov	r2, r0
 8002c6c:	4b0f      	ldr	r3, [pc, #60]	; (8002cac <calculate_output_voltage+0xe8>)
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4619      	mov	r1, r3
 8002c72:	4610      	mov	r0, r2
 8002c74:	f7fe f8a8 	bl	8000dc8 <__aeabi_fmul>
 8002c78:	4603      	mov	r3, r0
 8002c7a:	461a      	mov	r2, r3
 8002c7c:	4b0c      	ldr	r3, [pc, #48]	; (8002cb0 <calculate_output_voltage+0xec>)
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	4619      	mov	r1, r3
 8002c82:	4610      	mov	r0, r2
 8002c84:	f7fd ff98 	bl	8000bb8 <__addsf3>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	607b      	str	r3, [r7, #4]
	if(Current_output_status==Output_off_STATE)
 8002c8c:	4b05      	ldr	r3, [pc, #20]	; (8002ca4 <calculate_output_voltage+0xe0>)
 8002c8e:	781b      	ldrb	r3, [r3, #0]
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d102      	bne.n	8002c9a <calculate_output_voltage+0xd6>
		tmp=0;
 8002c94:	f04f 0300 	mov.w	r3, #0
 8002c98:	607b      	str	r3, [r7, #4]
	return tmp;
 8002c9a:	687b      	ldr	r3, [r7, #4]
}
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	3708      	adds	r7, #8
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	200009b4 	.word	0x200009b4
 8002ca8:	200009b8 	.word	0x200009b8
 8002cac:	20000850 	.word	0x20000850
 8002cb0:	200009b0 	.word	0x200009b0
 8002cb4:	2000071c 	.word	0x2000071c
 8002cb8:	20000718 	.word	0x20000718

08002cbc <send_answer_to_CDC>:



//==============================================================================================
void send_answer_to_CDC(uint8_t type)
{
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b084      	sub	sp, #16
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	4603      	mov	r3, r0
 8002cc4:	71fb      	strb	r3, [r7, #7]
	uint8_t cdc_counter=0;
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	73fb      	strb	r3, [r7, #15]

	switch(type)
 8002cca:	79fb      	ldrb	r3, [r7, #7]
 8002ccc:	2b10      	cmp	r3, #16
 8002cce:	f200 80a6 	bhi.w	8002e1e <send_answer_to_CDC+0x162>
 8002cd2:	a201      	add	r2, pc, #4	; (adr r2, 8002cd8 <send_answer_to_CDC+0x1c>)
 8002cd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002cd8:	08002d23 	.word	0x08002d23
 8002cdc:	08002d41 	.word	0x08002d41
 8002ce0:	08002d5d 	.word	0x08002d5d
 8002ce4:	08002d79 	.word	0x08002d79
 8002ce8:	08002db3 	.word	0x08002db3
 8002cec:	08002dcf 	.word	0x08002dcf
 8002cf0:	08002e1f 	.word	0x08002e1f
 8002cf4:	08002e1f 	.word	0x08002e1f
 8002cf8:	08002e1f 	.word	0x08002e1f
 8002cfc:	08002e1f 	.word	0x08002e1f
 8002d00:	08002e1f 	.word	0x08002e1f
 8002d04:	08002e1f 	.word	0x08002e1f
 8002d08:	08002e1f 	.word	0x08002e1f
 8002d0c:	08002e1f 	.word	0x08002e1f
 8002d10:	08002e1f 	.word	0x08002e1f
 8002d14:	08002deb 	.word	0x08002deb
 8002d18:	08002d95 	.word	0x08002d95
	{
	case ERROR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Error1, strlen((const char *)Error1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002d1c:	7bfb      	ldrb	r3, [r7, #15]
 8002d1e:	3301      	adds	r3, #1
 8002d20:	73fb      	strb	r3, [r7, #15]
 8002d22:	f240 21dd 	movw	r1, #733	; 0x2dd
 8002d26:	4840      	ldr	r0, [pc, #256]	; (8002e28 <send_answer_to_CDC+0x16c>)
 8002d28:	f007 ffc4 	bl	800acb4 <CDC_Transmit_FS>
 8002d2c:	4603      	mov	r3, r0
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d066      	beq.n	8002e00 <send_answer_to_CDC+0x144>
 8002d32:	7bfb      	ldrb	r3, [r7, #15]
 8002d34:	2bff      	cmp	r3, #255	; 0xff
 8002d36:	d1f1      	bne.n	8002d1c <send_answer_to_CDC+0x60>
		break;
 8002d38:	e062      	b.n	8002e00 <send_answer_to_CDC+0x144>
	case ERROR_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)Error2, strlen((const char *)Error2))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002d3a:	7bfb      	ldrb	r3, [r7, #15]
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	73fb      	strb	r3, [r7, #15]
 8002d40:	2129      	movs	r1, #41	; 0x29
 8002d42:	483a      	ldr	r0, [pc, #232]	; (8002e2c <send_answer_to_CDC+0x170>)
 8002d44:	f007 ffb6 	bl	800acb4 <CDC_Transmit_FS>
 8002d48:	4603      	mov	r3, r0
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d05a      	beq.n	8002e04 <send_answer_to_CDC+0x148>
 8002d4e:	7bfb      	ldrb	r3, [r7, #15]
 8002d50:	2bff      	cmp	r3, #255	; 0xff
 8002d52:	d1f2      	bne.n	8002d3a <send_answer_to_CDC+0x7e>
		break;
 8002d54:	e056      	b.n	8002e04 <send_answer_to_CDC+0x148>
	case OK_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)OK, strlen((const char *)OK))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002d56:	7bfb      	ldrb	r3, [r7, #15]
 8002d58:	3301      	adds	r3, #1
 8002d5a:	73fb      	strb	r3, [r7, #15]
 8002d5c:	2104      	movs	r1, #4
 8002d5e:	4834      	ldr	r0, [pc, #208]	; (8002e30 <send_answer_to_CDC+0x174>)
 8002d60:	f007 ffa8 	bl	800acb4 <CDC_Transmit_FS>
 8002d64:	4603      	mov	r3, r0
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d04e      	beq.n	8002e08 <send_answer_to_CDC+0x14c>
 8002d6a:	7bfb      	ldrb	r3, [r7, #15]
 8002d6c:	2bff      	cmp	r3, #255	; 0xff
 8002d6e:	d1f2      	bne.n	8002d56 <send_answer_to_CDC+0x9a>
		break;
 8002d70:	e04a      	b.n	8002e08 <send_answer_to_CDC+0x14c>
	case OK_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)OK_Enter, strlen((const char *)OK_Enter))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002d72:	7bfb      	ldrb	r3, [r7, #15]
 8002d74:	3301      	adds	r3, #1
 8002d76:	73fb      	strb	r3, [r7, #15]
 8002d78:	2117      	movs	r1, #23
 8002d7a:	482e      	ldr	r0, [pc, #184]	; (8002e34 <send_answer_to_CDC+0x178>)
 8002d7c:	f007 ff9a 	bl	800acb4 <CDC_Transmit_FS>
 8002d80:	4603      	mov	r3, r0
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d042      	beq.n	8002e0c <send_answer_to_CDC+0x150>
 8002d86:	7bfb      	ldrb	r3, [r7, #15]
 8002d88:	2bff      	cmp	r3, #255	; 0xff
 8002d8a:	d1f2      	bne.n	8002d72 <send_answer_to_CDC+0xb6>
		break;
 8002d8c:	e03e      	b.n	8002e0c <send_answer_to_CDC+0x150>
	case EXTENDED_HELP:
		while((CDC_Transmit_FS((uint8_t *)extended_help1, strlen((const char *)extended_help1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002d8e:	7bfb      	ldrb	r3, [r7, #15]
 8002d90:	3301      	adds	r3, #1
 8002d92:	73fb      	strb	r3, [r7, #15]
 8002d94:	f240 21ab 	movw	r1, #683	; 0x2ab
 8002d98:	4827      	ldr	r0, [pc, #156]	; (8002e38 <send_answer_to_CDC+0x17c>)
 8002d9a:	f007 ff8b 	bl	800acb4 <CDC_Transmit_FS>
 8002d9e:	4603      	mov	r3, r0
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d035      	beq.n	8002e10 <send_answer_to_CDC+0x154>
 8002da4:	7bfb      	ldrb	r3, [r7, #15]
 8002da6:	2bff      	cmp	r3, #255	; 0xff
 8002da8:	d1f1      	bne.n	8002d8e <send_answer_to_CDC+0xd2>
		break;
 8002daa:	e031      	b.n	8002e10 <send_answer_to_CDC+0x154>
	case CLEAR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)clear, strlen((const char *)clear))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002dac:	7bfb      	ldrb	r3, [r7, #15]
 8002dae:	3301      	adds	r3, #1
 8002db0:	73fb      	strb	r3, [r7, #15]
 8002db2:	2105      	movs	r1, #5
 8002db4:	4821      	ldr	r0, [pc, #132]	; (8002e3c <send_answer_to_CDC+0x180>)
 8002db6:	f007 ff7d 	bl	800acb4 <CDC_Transmit_FS>
 8002dba:	4603      	mov	r3, r0
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d029      	beq.n	8002e14 <send_answer_to_CDC+0x158>
 8002dc0:	7bfb      	ldrb	r3, [r7, #15]
 8002dc2:	2bff      	cmp	r3, #255	; 0xff
 8002dc4:	d1f2      	bne.n	8002dac <send_answer_to_CDC+0xf0>
		break;
 8002dc6:	e025      	b.n	8002e14 <send_answer_to_CDC+0x158>
	case DONE_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Done, strlen((const char *)Done))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002dc8:	7bfb      	ldrb	r3, [r7, #15]
 8002dca:	3301      	adds	r3, #1
 8002dcc:	73fb      	strb	r3, [r7, #15]
 8002dce:	2116      	movs	r1, #22
 8002dd0:	481b      	ldr	r0, [pc, #108]	; (8002e40 <send_answer_to_CDC+0x184>)
 8002dd2:	f007 ff6f 	bl	800acb4 <CDC_Transmit_FS>
 8002dd6:	4603      	mov	r3, r0
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d01d      	beq.n	8002e18 <send_answer_to_CDC+0x15c>
 8002ddc:	7bfb      	ldrb	r3, [r7, #15]
 8002dde:	2bff      	cmp	r3, #255	; 0xff
 8002de0:	d1f2      	bne.n	8002dc8 <send_answer_to_CDC+0x10c>
		break;
 8002de2:	e019      	b.n	8002e18 <send_answer_to_CDC+0x15c>
	case RUN_CAL_TYPE_TEMP:
		while((CDC_Transmit_FS((uint8_t *)run_cal, strlen((const char *)run_cal))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002de4:	7bfb      	ldrb	r3, [r7, #15]
 8002de6:	3301      	adds	r3, #1
 8002de8:	73fb      	strb	r3, [r7, #15]
 8002dea:	211b      	movs	r1, #27
 8002dec:	4815      	ldr	r0, [pc, #84]	; (8002e44 <send_answer_to_CDC+0x188>)
 8002dee:	f007 ff61 	bl	800acb4 <CDC_Transmit_FS>
 8002df2:	4603      	mov	r3, r0
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d011      	beq.n	8002e1c <send_answer_to_CDC+0x160>
 8002df8:	7bfb      	ldrb	r3, [r7, #15]
 8002dfa:	2bff      	cmp	r3, #255	; 0xff
 8002dfc:	d1f2      	bne.n	8002de4 <send_answer_to_CDC+0x128>
		break;
 8002dfe:	e00d      	b.n	8002e1c <send_answer_to_CDC+0x160>
		break;
 8002e00:	bf00      	nop
 8002e02:	e00c      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e04:	bf00      	nop
 8002e06:	e00a      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e08:	bf00      	nop
 8002e0a:	e008      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e0c:	bf00      	nop
 8002e0e:	e006      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e10:	bf00      	nop
 8002e12:	e004      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e14:	bf00      	nop
 8002e16:	e002      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e18:	bf00      	nop
 8002e1a:	e000      	b.n	8002e1e <send_answer_to_CDC+0x162>
		break;
 8002e1c:	bf00      	nop
	}
}
 8002e1e:	bf00      	nop
 8002e20:	3710      	adds	r7, #16
 8002e22:	46bd      	mov	sp, r7
 8002e24:	bd80      	pop	{r7, pc}
 8002e26:	bf00      	nop
 8002e28:	08010bdc 	.word	0x08010bdc
 8002e2c:	08011180 	.word	0x08011180
 8002e30:	08010bb0 	.word	0x08010bb0
 8002e34:	08011168 	.word	0x08011168
 8002e38:	08010ebc 	.word	0x08010ebc
 8002e3c:	08010bd4 	.word	0x08010bd4
 8002e40:	080111ac 	.word	0x080111ac
 8002e44:	08010bb8 	.word	0x08010bb8

08002e48 <cmd_SWEEP_START>:



//==============================================================================================
void cmd_SWEEP_START()
{
 8002e48:	b580      	push	{r7, lr}
 8002e4a:	af00      	add	r7, sp, #0
	output_state(Output_auto_STATE);
 8002e4c:	2004      	movs	r0, #4
 8002e4e:	f7ff fbd1 	bl	80025f4 <output_state>
	DDS_Calculation();
 8002e52:	f7fe fdb9 	bl	80019c8 <DDS_Calculation>
	CPLD_control(CPLD_ON_STATE); // Enable LDAC signal
 8002e56:	2001      	movs	r0, #1
 8002e58:	f7fe fcb2 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002e5c:	f00d fac8 	bl	80103f0 <__DAC_SendInit_veneer>

}
 8002e60:	bf00      	nop
 8002e62:	bd80      	pop	{r7, pc}

08002e64 <cmd_SWEEP_STOP>:
//==============================================================================================


//==============================================================================================
void cmd_SWEEP_STOP()
{
 8002e64:	b580      	push	{r7, lr}
 8002e66:	af00      	add	r7, sp, #0
	// Stop and recharge DAC code
	if(DAC_code_direction==DIRECTION_UP_STATE)
 8002e68:	4b0a      	ldr	r3, [pc, #40]	; (8002e94 <cmd_SWEEP_STOP+0x30>)
 8002e6a:	781b      	ldrb	r3, [r3, #0]
 8002e6c:	2b01      	cmp	r3, #1
 8002e6e:	d103      	bne.n	8002e78 <cmd_SWEEP_STOP+0x14>
	{
		cmd_DAC_SET(DAC_CODE_DOWN);
 8002e70:	2000      	movs	r0, #0
 8002e72:	f000 f813 	bl	8002e9c <cmd_DAC_SET>
		return;
 8002e76:	e00c      	b.n	8002e92 <cmd_SWEEP_STOP+0x2e>
	}
	if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002e78:	4b06      	ldr	r3, [pc, #24]	; (8002e94 <cmd_SWEEP_STOP+0x30>)
 8002e7a:	781b      	ldrb	r3, [r3, #0]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	d103      	bne.n	8002e88 <cmd_SWEEP_STOP+0x24>
	{
		cmd_DAC_SET(DAC_CODE_TOP);
 8002e80:	4805      	ldr	r0, [pc, #20]	; (8002e98 <cmd_SWEEP_STOP+0x34>)
 8002e82:	f000 f80b 	bl	8002e9c <cmd_DAC_SET>
		return;
 8002e86:	e004      	b.n	8002e92 <cmd_SWEEP_STOP+0x2e>
	}

	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002e88:	2000      	movs	r0, #0
 8002e8a:	f7fe fc99 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002e8e:	f00d faaf 	bl	80103f0 <__DAC_SendInit_veneer>
}
 8002e92:	bd80      	pop	{r7, pc}
 8002e94:	200009bc 	.word	0x200009bc
 8002e98:	000fffff 	.word	0x000fffff

08002e9c <cmd_DAC_SET>:
//==============================================================================================


//==============================================================================================
FunctionalState cmd_DAC_SET(uint32_t code)
{
 8002e9c:	b580      	push	{r7, lr}
 8002e9e:	b082      	sub	sp, #8
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
	if (code>0xFFFFF)return ret_ERROR;
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002eaa:	d301      	bcc.n	8002eb0 <cmd_DAC_SET+0x14>
 8002eac:	2300      	movs	r3, #0
 8002eae:	e020      	b.n	8002ef2 <cmd_DAC_SET+0x56>

	DAC_code=code;
 8002eb0:	4a12      	ldr	r2, [pc, #72]	; (8002efc <cmd_DAC_SET+0x60>)
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	6013      	str	r3, [r2, #0]

	if(DAC_code_direction!=DIRECTION_CYCLE_STATE)
 8002eb6:	4b12      	ldr	r3, [pc, #72]	; (8002f00 <cmd_DAC_SET+0x64>)
 8002eb8:	781b      	ldrb	r3, [r3, #0]
 8002eba:	2b02      	cmp	r3, #2
 8002ebc:	d00f      	beq.n	8002ede <cmd_DAC_SET+0x42>
	{
		switch(code)
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	d004      	beq.n	8002ece <cmd_DAC_SET+0x32>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	4a0f      	ldr	r2, [pc, #60]	; (8002f04 <cmd_DAC_SET+0x68>)
 8002ec8:	4293      	cmp	r3, r2
 8002eca:	d004      	beq.n	8002ed6 <cmd_DAC_SET+0x3a>
 8002ecc:	e008      	b.n	8002ee0 <cmd_DAC_SET+0x44>
		{
		case DAC_CODE_DOWN:
			DAC_code_direction=DIRECTION_UP_STATE;
 8002ece:	4b0c      	ldr	r3, [pc, #48]	; (8002f00 <cmd_DAC_SET+0x64>)
 8002ed0:	2201      	movs	r2, #1
 8002ed2:	701a      	strb	r2, [r3, #0]
			break;
 8002ed4:	e004      	b.n	8002ee0 <cmd_DAC_SET+0x44>
		case DAC_CODE_TOP:
			DAC_code_direction=DIRECTION_DOWN_STATE;
 8002ed6:	4b0a      	ldr	r3, [pc, #40]	; (8002f00 <cmd_DAC_SET+0x64>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	701a      	strb	r2, [r3, #0]
			break;
 8002edc:	e000      	b.n	8002ee0 <cmd_DAC_SET+0x44>
		}
	}
 8002ede:	bf00      	nop

	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002ee0:	2000      	movs	r0, #0
 8002ee2:	f7fe fc6d 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002ee6:	f00d fa83 	bl	80103f0 <__DAC_SendInit_veneer>
	//DAC_TEMP_CAL();
	DAC_Write(code);
 8002eea:	6878      	ldr	r0, [r7, #4]
 8002eec:	f00d fa84 	bl	80103f8 <__DAC_Write_veneer>
	return ret_OK;
 8002ef0:	2301      	movs	r3, #1
}
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	3708      	adds	r7, #8
 8002ef6:	46bd      	mov	sp, r7
 8002ef8:	bd80      	pop	{r7, pc}
 8002efa:	bf00      	nop
 8002efc:	200009b8 	.word	0x200009b8
 8002f00:	200009bc 	.word	0x200009bc
 8002f04:	000fffff 	.word	0x000fffff

08002f08 <cmd_SET_OUTPUT_VOLTAGE>:
//==============================================================================================


//==============================================================================================
FunctionalState cmd_SET_OUTPUT_VOLTAGE(float volt)
{
 8002f08:	b580      	push	{r7, lr}
 8002f0a:	b084      	sub	sp, #16
 8002f0c:	af00      	add	r7, sp, #0
 8002f0e:	6078      	str	r0, [r7, #4]
	uint32_t DAC_code_tmp;

	if(volt>=cal_DAC_down_voltage && volt<=cal_DAC_up_voltage)
 8002f10:	4b88      	ldr	r3, [pc, #544]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4619      	mov	r1, r3
 8002f16:	6878      	ldr	r0, [r7, #4]
 8002f18:	f7fe f908 	bl	800112c <__aeabi_fcmpge>
 8002f1c:	4603      	mov	r3, r0
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d041      	beq.n	8002fa6 <cmd_SET_OUTPUT_VOLTAGE+0x9e>
 8002f22:	4b85      	ldr	r3, [pc, #532]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	4619      	mov	r1, r3
 8002f28:	6878      	ldr	r0, [r7, #4]
 8002f2a:	f7fe f8f5 	bl	8001118 <__aeabi_fcmple>
 8002f2e:	4603      	mov	r3, r0
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d038      	beq.n	8002fa6 <cmd_SET_OUTPUT_VOLTAGE+0x9e>
	{
		if(Current_output_status!=Output_x1_STATE)output_state(Output_x1_STATE);
 8002f34:	4b81      	ldr	r3, [pc, #516]	; (800313c <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8002f36:	781b      	ldrb	r3, [r3, #0]
 8002f38:	2b01      	cmp	r3, #1
 8002f3a:	d002      	beq.n	8002f42 <cmd_SET_OUTPUT_VOLTAGE+0x3a>
 8002f3c:	2001      	movs	r0, #1
 8002f3e:	f7ff fb59 	bl	80025f4 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8002f42:	4b7d      	ldr	r3, [pc, #500]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	4a7b      	ldr	r2, [pc, #492]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002f48:	6812      	ldr	r2, [r2, #0]
 8002f4a:	4611      	mov	r1, r2
 8002f4c:	4618      	mov	r0, r3
 8002f4e:	f7fd fe31 	bl	8000bb4 <__aeabi_fsub>
 8002f52:	4603      	mov	r3, r0
 8002f54:	497a      	ldr	r1, [pc, #488]	; (8003140 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 8002f56:	4618      	mov	r0, r3
 8002f58:	f7fd ffea 	bl	8000f30 <__aeabi_fdiv>
 8002f5c:	4603      	mov	r3, r0
 8002f5e:	461a      	mov	r2, r3
 8002f60:	4b78      	ldr	r3, [pc, #480]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8002f62:	601a      	str	r2, [r3, #0]
		DAC_code_tmp=(uint32_t)((volt-cal_DAC_down_voltage)/dac_resolution);
 8002f64:	4b73      	ldr	r3, [pc, #460]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	4619      	mov	r1, r3
 8002f6a:	6878      	ldr	r0, [r7, #4]
 8002f6c:	f7fd fe22 	bl	8000bb4 <__aeabi_fsub>
 8002f70:	4603      	mov	r3, r0
 8002f72:	461a      	mov	r2, r3
 8002f74:	4b73      	ldr	r3, [pc, #460]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	4619      	mov	r1, r3
 8002f7a:	4610      	mov	r0, r2
 8002f7c:	f7fd ffd8 	bl	8000f30 <__aeabi_fdiv>
 8002f80:	4603      	mov	r3, r0
 8002f82:	4618      	mov	r0, r3
 8002f84:	f7fe f8e6 	bl	8001154 <__aeabi_f2uiz>
 8002f88:	4603      	mov	r3, r0
 8002f8a:	60fb      	str	r3, [r7, #12]
		if(cmd_DAC_SET(DAC_code_tmp)==ret_ERROR)
 8002f8c:	68f8      	ldr	r0, [r7, #12]
 8002f8e:	f7ff ff85 	bl	8002e9c <cmd_DAC_SET>
 8002f92:	4603      	mov	r3, r0
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d101      	bne.n	8002f9c <cmd_SET_OUTPUT_VOLTAGE+0x94>
			return ret_ERROR;
 8002f98:	2300      	movs	r3, #0
 8002f9a:	e0c7      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
		Voltage=volt;
 8002f9c:	4a6a      	ldr	r2, [pc, #424]	; (8003148 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	6013      	str	r3, [r2, #0]
		return ret_OK;
 8002fa2:	2301      	movs	r3, #1
 8002fa4:	e0c2      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x2_coeff) && volt<=(cal_DAC_up_voltage*gain_x2_coeff))
 8002fa6:	4b63      	ldr	r3, [pc, #396]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a68      	ldr	r2, [pc, #416]	; (800314c <cmd_SET_OUTPUT_VOLTAGE+0x244>)
 8002fac:	6812      	ldr	r2, [r2, #0]
 8002fae:	4611      	mov	r1, r2
 8002fb0:	4618      	mov	r0, r3
 8002fb2:	f7fd ff09 	bl	8000dc8 <__aeabi_fmul>
 8002fb6:	4603      	mov	r3, r0
 8002fb8:	4619      	mov	r1, r3
 8002fba:	6878      	ldr	r0, [r7, #4]
 8002fbc:	f7fe f8b6 	bl	800112c <__aeabi_fcmpge>
 8002fc0:	4603      	mov	r3, r0
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d050      	beq.n	8003068 <cmd_SET_OUTPUT_VOLTAGE+0x160>
 8002fc6:	4b5c      	ldr	r3, [pc, #368]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	4a60      	ldr	r2, [pc, #384]	; (800314c <cmd_SET_OUTPUT_VOLTAGE+0x244>)
 8002fcc:	6812      	ldr	r2, [r2, #0]
 8002fce:	4611      	mov	r1, r2
 8002fd0:	4618      	mov	r0, r3
 8002fd2:	f7fd fef9 	bl	8000dc8 <__aeabi_fmul>
 8002fd6:	4603      	mov	r3, r0
 8002fd8:	4619      	mov	r1, r3
 8002fda:	6878      	ldr	r0, [r7, #4]
 8002fdc:	f7fe f89c 	bl	8001118 <__aeabi_fcmple>
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d040      	beq.n	8003068 <cmd_SET_OUTPUT_VOLTAGE+0x160>
	{
		if(Current_output_status!=Output_x2_STATE)output_state(Output_x2_STATE);
 8002fe6:	4b55      	ldr	r3, [pc, #340]	; (800313c <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8002fe8:	781b      	ldrb	r3, [r3, #0]
 8002fea:	2b02      	cmp	r3, #2
 8002fec:	d002      	beq.n	8002ff4 <cmd_SET_OUTPUT_VOLTAGE+0xec>
 8002fee:	2002      	movs	r0, #2
 8002ff0:	f7ff fb00 	bl	80025f4 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 8002ff4:	4b50      	ldr	r3, [pc, #320]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	4a4e      	ldr	r2, [pc, #312]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8002ffa:	6812      	ldr	r2, [r2, #0]
 8002ffc:	4611      	mov	r1, r2
 8002ffe:	4618      	mov	r0, r3
 8003000:	f7fd fdd8 	bl	8000bb4 <__aeabi_fsub>
 8003004:	4603      	mov	r3, r0
 8003006:	494e      	ldr	r1, [pc, #312]	; (8003140 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 8003008:	4618      	mov	r0, r3
 800300a:	f7fd ff91 	bl	8000f30 <__aeabi_fdiv>
 800300e:	4603      	mov	r3, r0
 8003010:	461a      	mov	r2, r3
 8003012:	4b4c      	ldr	r3, [pc, #304]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003014:	601a      	str	r2, [r3, #0]
		DAC_code_tmp=(uint32_t)((volt/gain_x2_coeff-cal_DAC_down_voltage)/dac_resolution);
 8003016:	4b4d      	ldr	r3, [pc, #308]	; (800314c <cmd_SET_OUTPUT_VOLTAGE+0x244>)
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	4619      	mov	r1, r3
 800301c:	6878      	ldr	r0, [r7, #4]
 800301e:	f7fd ff87 	bl	8000f30 <__aeabi_fdiv>
 8003022:	4603      	mov	r3, r0
 8003024:	461a      	mov	r2, r3
 8003026:	4b43      	ldr	r3, [pc, #268]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	4619      	mov	r1, r3
 800302c:	4610      	mov	r0, r2
 800302e:	f7fd fdc1 	bl	8000bb4 <__aeabi_fsub>
 8003032:	4603      	mov	r3, r0
 8003034:	461a      	mov	r2, r3
 8003036:	4b43      	ldr	r3, [pc, #268]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	4619      	mov	r1, r3
 800303c:	4610      	mov	r0, r2
 800303e:	f7fd ff77 	bl	8000f30 <__aeabi_fdiv>
 8003042:	4603      	mov	r3, r0
 8003044:	4618      	mov	r0, r3
 8003046:	f7fe f885 	bl	8001154 <__aeabi_f2uiz>
 800304a:	4603      	mov	r3, r0
 800304c:	60fb      	str	r3, [r7, #12]
		if(cmd_DAC_SET(DAC_code_tmp)==ret_ERROR)
 800304e:	68f8      	ldr	r0, [r7, #12]
 8003050:	f7ff ff24 	bl	8002e9c <cmd_DAC_SET>
 8003054:	4603      	mov	r3, r0
 8003056:	2b00      	cmp	r3, #0
 8003058:	d101      	bne.n	800305e <cmd_SET_OUTPUT_VOLTAGE+0x156>
			return ret_ERROR;
 800305a:	2300      	movs	r3, #0
 800305c:	e066      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
		Voltage=volt;
 800305e:	4a3a      	ldr	r2, [pc, #232]	; (8003148 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	6013      	str	r3, [r2, #0]
		return ret_OK;
 8003064:	2301      	movs	r3, #1
 8003066:	e061      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x4_coeff) && volt<=(cal_DAC_up_voltage*gain_x4_coeff))
 8003068:	4b32      	ldr	r3, [pc, #200]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	4a38      	ldr	r2, [pc, #224]	; (8003150 <cmd_SET_OUTPUT_VOLTAGE+0x248>)
 800306e:	6812      	ldr	r2, [r2, #0]
 8003070:	4611      	mov	r1, r2
 8003072:	4618      	mov	r0, r3
 8003074:	f7fd fea8 	bl	8000dc8 <__aeabi_fmul>
 8003078:	4603      	mov	r3, r0
 800307a:	4619      	mov	r1, r3
 800307c:	6878      	ldr	r0, [r7, #4]
 800307e:	f7fe f855 	bl	800112c <__aeabi_fcmpge>
 8003082:	4603      	mov	r3, r0
 8003084:	2b00      	cmp	r3, #0
 8003086:	d050      	beq.n	800312a <cmd_SET_OUTPUT_VOLTAGE+0x222>
 8003088:	4b2b      	ldr	r3, [pc, #172]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	4a30      	ldr	r2, [pc, #192]	; (8003150 <cmd_SET_OUTPUT_VOLTAGE+0x248>)
 800308e:	6812      	ldr	r2, [r2, #0]
 8003090:	4611      	mov	r1, r2
 8003092:	4618      	mov	r0, r3
 8003094:	f7fd fe98 	bl	8000dc8 <__aeabi_fmul>
 8003098:	4603      	mov	r3, r0
 800309a:	4619      	mov	r1, r3
 800309c:	6878      	ldr	r0, [r7, #4]
 800309e:	f7fe f83b 	bl	8001118 <__aeabi_fcmple>
 80030a2:	4603      	mov	r3, r0
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d040      	beq.n	800312a <cmd_SET_OUTPUT_VOLTAGE+0x222>
	{
		if(Current_output_status!=Output_x4_STATE)output_state(Output_x4_STATE);
 80030a8:	4b24      	ldr	r3, [pc, #144]	; (800313c <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80030aa:	781b      	ldrb	r3, [r3, #0]
 80030ac:	2b03      	cmp	r3, #3
 80030ae:	d002      	beq.n	80030b6 <cmd_SET_OUTPUT_VOLTAGE+0x1ae>
 80030b0:	2003      	movs	r0, #3
 80030b2:	f7ff fa9f 	bl	80025f4 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 80030b6:	4b20      	ldr	r3, [pc, #128]	; (8003138 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	4a1e      	ldr	r2, [pc, #120]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 80030bc:	6812      	ldr	r2, [r2, #0]
 80030be:	4611      	mov	r1, r2
 80030c0:	4618      	mov	r0, r3
 80030c2:	f7fd fd77 	bl	8000bb4 <__aeabi_fsub>
 80030c6:	4603      	mov	r3, r0
 80030c8:	491d      	ldr	r1, [pc, #116]	; (8003140 <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80030ca:	4618      	mov	r0, r3
 80030cc:	f7fd ff30 	bl	8000f30 <__aeabi_fdiv>
 80030d0:	4603      	mov	r3, r0
 80030d2:	461a      	mov	r2, r3
 80030d4:	4b1b      	ldr	r3, [pc, #108]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 80030d6:	601a      	str	r2, [r3, #0]
		DAC_code_tmp=(uint32_t)((volt/gain_x4_coeff-cal_DAC_down_voltage)/dac_resolution);
 80030d8:	4b1d      	ldr	r3, [pc, #116]	; (8003150 <cmd_SET_OUTPUT_VOLTAGE+0x248>)
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	4619      	mov	r1, r3
 80030de:	6878      	ldr	r0, [r7, #4]
 80030e0:	f7fd ff26 	bl	8000f30 <__aeabi_fdiv>
 80030e4:	4603      	mov	r3, r0
 80030e6:	461a      	mov	r2, r3
 80030e8:	4b12      	ldr	r3, [pc, #72]	; (8003134 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	4619      	mov	r1, r3
 80030ee:	4610      	mov	r0, r2
 80030f0:	f7fd fd60 	bl	8000bb4 <__aeabi_fsub>
 80030f4:	4603      	mov	r3, r0
 80030f6:	461a      	mov	r2, r3
 80030f8:	4b12      	ldr	r3, [pc, #72]	; (8003144 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	4619      	mov	r1, r3
 80030fe:	4610      	mov	r0, r2
 8003100:	f7fd ff16 	bl	8000f30 <__aeabi_fdiv>
 8003104:	4603      	mov	r3, r0
 8003106:	4618      	mov	r0, r3
 8003108:	f7fe f824 	bl	8001154 <__aeabi_f2uiz>
 800310c:	4603      	mov	r3, r0
 800310e:	60fb      	str	r3, [r7, #12]
		if(cmd_DAC_SET(DAC_code_tmp)==ret_ERROR)
 8003110:	68f8      	ldr	r0, [r7, #12]
 8003112:	f7ff fec3 	bl	8002e9c <cmd_DAC_SET>
 8003116:	4603      	mov	r3, r0
 8003118:	2b00      	cmp	r3, #0
 800311a:	d101      	bne.n	8003120 <cmd_SET_OUTPUT_VOLTAGE+0x218>
			return ret_ERROR;
 800311c:	2300      	movs	r3, #0
 800311e:	e005      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
		Voltage=volt;
 8003120:	4a09      	ldr	r2, [pc, #36]	; (8003148 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6013      	str	r3, [r2, #0]
		return ret_OK;
 8003126:	2301      	movs	r3, #1
 8003128:	e000      	b.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x224>
	}
	return ret_ERROR;
 800312a:	2300      	movs	r3, #0
}
 800312c:	4618      	mov	r0, r3
 800312e:	3710      	adds	r7, #16
 8003130:	46bd      	mov	sp, r7
 8003132:	bd80      	pop	{r7, pc}
 8003134:	200009b0 	.word	0x200009b0
 8003138:	200009ac 	.word	0x200009ac
 800313c:	200009b4 	.word	0x200009b4
 8003140:	497ffff0 	.word	0x497ffff0
 8003144:	20000850 	.word	0x20000850
 8003148:	200009a4 	.word	0x200009a4
 800314c:	20000718 	.word	0x20000718
 8003150:	2000071c 	.word	0x2000071c
 8003154:	00000000 	.word	0x00000000

08003158 <cmd_CAP_SET>:



//==============================================================================================
FunctionalState cmd_CAP_SET(uint8_t value)
{
 8003158:	b580      	push	{r7, lr}
 800315a:	b082      	sub	sp, #8
 800315c:	af00      	add	r7, sp, #0
 800315e:	4603      	mov	r3, r0
 8003160:	71fb      	strb	r3, [r7, #7]
	if(value>=C_value_max_count)
 8003162:	79fb      	ldrb	r3, [r7, #7]
 8003164:	2b09      	cmp	r3, #9
 8003166:	d901      	bls.n	800316c <cmd_CAP_SET+0x14>
		return ret_ERROR;
 8003168:	2300      	movs	r3, #0
 800316a:	e05f      	b.n	800322c <cmd_CAP_SET+0xd4>
	if(C_value[value]==0)
 800316c:	79fb      	ldrb	r3, [r7, #7]
 800316e:	4a38      	ldr	r2, [pc, #224]	; (8003250 <cmd_CAP_SET+0xf8>)
 8003170:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003174:	f04f 0100 	mov.w	r1, #0
 8003178:	4618      	mov	r0, r3
 800317a:	f7fd ffb9 	bl	80010f0 <__aeabi_fcmpeq>
 800317e:	4603      	mov	r3, r0
 8003180:	2b00      	cmp	r3, #0
 8003182:	d001      	beq.n	8003188 <cmd_CAP_SET+0x30>
		return ret_ERROR;
 8003184:	2300      	movs	r3, #0
 8003186:	e051      	b.n	800322c <cmd_CAP_SET+0xd4>

	C_ref=value;
 8003188:	4a32      	ldr	r2, [pc, #200]	; (8003254 <cmd_CAP_SET+0xfc>)
 800318a:	79fb      	ldrb	r3, [r7, #7]
 800318c:	7013      	strb	r3, [r2, #0]
	amp_target_speed=(C_value[C_ref]*1E-12)*0.1;
 800318e:	4b31      	ldr	r3, [pc, #196]	; (8003254 <cmd_CAP_SET+0xfc>)
 8003190:	781b      	ldrb	r3, [r3, #0]
 8003192:	461a      	mov	r2, r3
 8003194:	4b2e      	ldr	r3, [pc, #184]	; (8003250 <cmd_CAP_SET+0xf8>)
 8003196:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800319a:	4618      	mov	r0, r3
 800319c:	f7fd f966 	bl	800046c <__aeabi_f2d>
 80031a0:	a325      	add	r3, pc, #148	; (adr r3, 8003238 <cmd_CAP_SET+0xe0>)
 80031a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031a6:	f7fd f9b9 	bl	800051c <__aeabi_dmul>
 80031aa:	4602      	mov	r2, r0
 80031ac:	460b      	mov	r3, r1
 80031ae:	4610      	mov	r0, r2
 80031b0:	4619      	mov	r1, r3
 80031b2:	a323      	add	r3, pc, #140	; (adr r3, 8003240 <cmd_CAP_SET+0xe8>)
 80031b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031b8:	f7fd f9b0 	bl	800051c <__aeabi_dmul>
 80031bc:	4602      	mov	r2, r0
 80031be:	460b      	mov	r3, r1
 80031c0:	4610      	mov	r0, r2
 80031c2:	4619      	mov	r1, r3
 80031c4:	f7fd fca2 	bl	8000b0c <__aeabi_d2f>
 80031c8:	4603      	mov	r3, r0
 80031ca:	4a23      	ldr	r2, [pc, #140]	; (8003258 <cmd_CAP_SET+0x100>)
 80031cc:	6013      	str	r3, [r2, #0]
	amp_target_speed_maximum=(C_value[C_ref]*1E-12)*1.1;
 80031ce:	4b21      	ldr	r3, [pc, #132]	; (8003254 <cmd_CAP_SET+0xfc>)
 80031d0:	781b      	ldrb	r3, [r3, #0]
 80031d2:	461a      	mov	r2, r3
 80031d4:	4b1e      	ldr	r3, [pc, #120]	; (8003250 <cmd_CAP_SET+0xf8>)
 80031d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80031da:	4618      	mov	r0, r3
 80031dc:	f7fd f946 	bl	800046c <__aeabi_f2d>
 80031e0:	a315      	add	r3, pc, #84	; (adr r3, 8003238 <cmd_CAP_SET+0xe0>)
 80031e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031e6:	f7fd f999 	bl	800051c <__aeabi_dmul>
 80031ea:	4602      	mov	r2, r0
 80031ec:	460b      	mov	r3, r1
 80031ee:	4610      	mov	r0, r2
 80031f0:	4619      	mov	r1, r3
 80031f2:	a315      	add	r3, pc, #84	; (adr r3, 8003248 <cmd_CAP_SET+0xf0>)
 80031f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031f8:	f7fd f990 	bl	800051c <__aeabi_dmul>
 80031fc:	4602      	mov	r2, r0
 80031fe:	460b      	mov	r3, r1
 8003200:	4610      	mov	r0, r2
 8003202:	4619      	mov	r1, r3
 8003204:	f7fd fc82 	bl	8000b0c <__aeabi_d2f>
 8003208:	4603      	mov	r3, r0
 800320a:	4a14      	ldr	r2, [pc, #80]	; (800325c <cmd_CAP_SET+0x104>)
 800320c:	6013      	str	r3, [r2, #0]

	if(mode==AMP_SCREEN)return Recalculate_ramp_speed(mode,amp_target_speed);
 800320e:	4b14      	ldr	r3, [pc, #80]	; (8003260 <cmd_CAP_SET+0x108>)
 8003210:	781b      	ldrb	r3, [r3, #0]
 8003212:	2b04      	cmp	r3, #4
 8003214:	d109      	bne.n	800322a <cmd_CAP_SET+0xd2>
 8003216:	4b12      	ldr	r3, [pc, #72]	; (8003260 <cmd_CAP_SET+0x108>)
 8003218:	781b      	ldrb	r3, [r3, #0]
 800321a:	4a0f      	ldr	r2, [pc, #60]	; (8003258 <cmd_CAP_SET+0x100>)
 800321c:	6812      	ldr	r2, [r2, #0]
 800321e:	4611      	mov	r1, r2
 8003220:	4618      	mov	r0, r3
 8003222:	f000 f821 	bl	8003268 <Recalculate_ramp_speed>
 8003226:	4603      	mov	r3, r0
 8003228:	e000      	b.n	800322c <cmd_CAP_SET+0xd4>
	return ret_OK;
 800322a:	2301      	movs	r3, #1
}
 800322c:	4618      	mov	r0, r3
 800322e:	3708      	adds	r7, #8
 8003230:	46bd      	mov	sp, r7
 8003232:	bd80      	pop	{r7, pc}
 8003234:	f3af 8000 	nop.w
 8003238:	812dea11 	.word	0x812dea11
 800323c:	3d719799 	.word	0x3d719799
 8003240:	9999999a 	.word	0x9999999a
 8003244:	3fb99999 	.word	0x3fb99999
 8003248:	9999999a 	.word	0x9999999a
 800324c:	3ff19999 	.word	0x3ff19999
 8003250:	20000800 	.word	0x20000800
 8003254:	200009a0 	.word	0x200009a0
 8003258:	2000000c 	.word	0x2000000c
 800325c:	2000099c 	.word	0x2000099c
 8003260:	20000018 	.word	0x20000018
 8003264:	00000000 	.word	0x00000000

08003268 <Recalculate_ramp_speed>:


//==============================================================================================
FunctionalState Recalculate_ramp_speed(uint8_t new_state, float new_speed)
{
 8003268:	b5b0      	push	{r4, r5, r7, lr}
 800326a:	b084      	sub	sp, #16
 800326c:	af00      	add	r7, sp, #0
 800326e:	4603      	mov	r3, r0
 8003270:	6039      	str	r1, [r7, #0]
 8003272:	71fb      	strb	r3, [r7, #7]
	float tmp_speed=0;
 8003274:	f04f 0300 	mov.w	r3, #0
 8003278:	60fb      	str	r3, [r7, #12]

	if(new_state==AMP_SCREEN) // check current
 800327a:	79fb      	ldrb	r3, [r7, #7]
 800327c:	2b04      	cmp	r3, #4
 800327e:	d133      	bne.n	80032e8 <Recalculate_ramp_speed+0x80>
		tmp_speed=(new_speed-(calculate_output_voltage()*C_leakage[C_ref]))/(C_value[C_ref]*1E-12);
 8003280:	f7ff fca0 	bl	8002bc4 <calculate_output_voltage>
 8003284:	4602      	mov	r2, r0
 8003286:	4b42      	ldr	r3, [pc, #264]	; (8003390 <Recalculate_ramp_speed+0x128>)
 8003288:	781b      	ldrb	r3, [r3, #0]
 800328a:	4619      	mov	r1, r3
 800328c:	4b41      	ldr	r3, [pc, #260]	; (8003394 <Recalculate_ramp_speed+0x12c>)
 800328e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8003292:	4619      	mov	r1, r3
 8003294:	4610      	mov	r0, r2
 8003296:	f7fd fd97 	bl	8000dc8 <__aeabi_fmul>
 800329a:	4603      	mov	r3, r0
 800329c:	4619      	mov	r1, r3
 800329e:	6838      	ldr	r0, [r7, #0]
 80032a0:	f7fd fc88 	bl	8000bb4 <__aeabi_fsub>
 80032a4:	4603      	mov	r3, r0
 80032a6:	4618      	mov	r0, r3
 80032a8:	f7fd f8e0 	bl	800046c <__aeabi_f2d>
 80032ac:	4604      	mov	r4, r0
 80032ae:	460d      	mov	r5, r1
 80032b0:	4b37      	ldr	r3, [pc, #220]	; (8003390 <Recalculate_ramp_speed+0x128>)
 80032b2:	781b      	ldrb	r3, [r3, #0]
 80032b4:	461a      	mov	r2, r3
 80032b6:	4b38      	ldr	r3, [pc, #224]	; (8003398 <Recalculate_ramp_speed+0x130>)
 80032b8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80032bc:	4618      	mov	r0, r3
 80032be:	f7fd f8d5 	bl	800046c <__aeabi_f2d>
 80032c2:	a32d      	add	r3, pc, #180	; (adr r3, 8003378 <Recalculate_ramp_speed+0x110>)
 80032c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032c8:	f7fd f928 	bl	800051c <__aeabi_dmul>
 80032cc:	4602      	mov	r2, r0
 80032ce:	460b      	mov	r3, r1
 80032d0:	4620      	mov	r0, r4
 80032d2:	4629      	mov	r1, r5
 80032d4:	f7fd fa4c 	bl	8000770 <__aeabi_ddiv>
 80032d8:	4602      	mov	r2, r0
 80032da:	460b      	mov	r3, r1
 80032dc:	4610      	mov	r0, r2
 80032de:	4619      	mov	r1, r3
 80032e0:	f7fd fc14 	bl	8000b0c <__aeabi_d2f>
 80032e4:	4603      	mov	r3, r0
 80032e6:	60fb      	str	r3, [r7, #12]
	if(new_state==dU_dt_SCREEN) // check speed
 80032e8:	79fb      	ldrb	r3, [r7, #7]
 80032ea:	2b03      	cmp	r3, #3
 80032ec:	d101      	bne.n	80032f2 <Recalculate_ramp_speed+0x8a>
		tmp_speed=new_speed;
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	60fb      	str	r3, [r7, #12]

	if(tmp_speed<0.0009 || tmp_speed>1.1) // limit V/s
 80032f2:	68f8      	ldr	r0, [r7, #12]
 80032f4:	f7fd f8ba 	bl	800046c <__aeabi_f2d>
 80032f8:	a321      	add	r3, pc, #132	; (adr r3, 8003380 <Recalculate_ramp_speed+0x118>)
 80032fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032fe:	f7fd fb7f 	bl	8000a00 <__aeabi_dcmplt>
 8003302:	4603      	mov	r3, r0
 8003304:	2b00      	cmp	r3, #0
 8003306:	d10a      	bne.n	800331e <Recalculate_ramp_speed+0xb6>
 8003308:	68f8      	ldr	r0, [r7, #12]
 800330a:	f7fd f8af 	bl	800046c <__aeabi_f2d>
 800330e:	a31e      	add	r3, pc, #120	; (adr r3, 8003388 <Recalculate_ramp_speed+0x120>)
 8003310:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003314:	f7fd fb92 	bl	8000a3c <__aeabi_dcmpgt>
 8003318:	4603      	mov	r3, r0
 800331a:	2b00      	cmp	r3, #0
 800331c:	d001      	beq.n	8003322 <Recalculate_ramp_speed+0xba>
		return ret_ERROR;
 800331e:	2300      	movs	r3, #0
 8003320:	e025      	b.n	800336e <Recalculate_ramp_speed+0x106>

	if(new_state==AMP_SCREEN) // check current
 8003322:	79fb      	ldrb	r3, [r7, #7]
 8003324:	2b04      	cmp	r3, #4
 8003326:	d108      	bne.n	800333a <Recalculate_ramp_speed+0xd2>
	{
		amp_target_speed=new_speed;
 8003328:	4a1c      	ldr	r2, [pc, #112]	; (800339c <Recalculate_ramp_speed+0x134>)
 800332a:	683b      	ldr	r3, [r7, #0]
 800332c:	6013      	str	r3, [r2, #0]
		ramp_target_speed=tmp_speed;
 800332e:	4a1c      	ldr	r2, [pc, #112]	; (80033a0 <Recalculate_ramp_speed+0x138>)
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	6013      	str	r3, [r2, #0]
		mode=AMP_SCREEN;
 8003334:	4b1b      	ldr	r3, [pc, #108]	; (80033a4 <Recalculate_ramp_speed+0x13c>)
 8003336:	2204      	movs	r2, #4
 8003338:	701a      	strb	r2, [r3, #0]
	}

	if(new_state==dU_dt_SCREEN) // check speed
 800333a:	79fb      	ldrb	r3, [r7, #7]
 800333c:	2b03      	cmp	r3, #3
 800333e:	d105      	bne.n	800334c <Recalculate_ramp_speed+0xe4>
	{
		ramp_target_speed=new_speed;
 8003340:	4a17      	ldr	r2, [pc, #92]	; (80033a0 <Recalculate_ramp_speed+0x138>)
 8003342:	683b      	ldr	r3, [r7, #0]
 8003344:	6013      	str	r3, [r2, #0]
		mode=dU_dt_SCREEN;
 8003346:	4b17      	ldr	r3, [pc, #92]	; (80033a4 <Recalculate_ramp_speed+0x13c>)
 8003348:	2203      	movs	r2, #3
 800334a:	701a      	strb	r2, [r3, #0]
	}

	DAC_target_speed=tmp_speed;
 800334c:	4a16      	ldr	r2, [pc, #88]	; (80033a8 <Recalculate_ramp_speed+0x140>)
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	6013      	str	r3, [r2, #0]
	if(cfg.LDACMODE==0)
 8003352:	4b16      	ldr	r3, [pc, #88]	; (80033ac <Recalculate_ramp_speed+0x144>)
 8003354:	789b      	ldrb	r3, [r3, #2]
 8003356:	2b00      	cmp	r3, #0
 8003358:	d103      	bne.n	8003362 <Recalculate_ramp_speed+0xfa>
	{
		CPLD_control(CPLD_OFF_STATE);
 800335a:	2000      	movs	r0, #0
 800335c:	f7fe fa30 	bl	80017c0 <CPLD_control>
 8003360:	e002      	b.n	8003368 <Recalculate_ramp_speed+0x100>
	}
	else
	{
		CPLD_control(CPLD_ON_STATE);
 8003362:	2001      	movs	r0, #1
 8003364:	f7fe fa2c 	bl	80017c0 <CPLD_control>
	}
	DDS_Calculation();
 8003368:	f7fe fb2e 	bl	80019c8 <DDS_Calculation>
	return ret_OK;
 800336c:	2301      	movs	r3, #1
}
 800336e:	4618      	mov	r0, r3
 8003370:	3710      	adds	r7, #16
 8003372:	46bd      	mov	sp, r7
 8003374:	bdb0      	pop	{r4, r5, r7, pc}
 8003376:	bf00      	nop
 8003378:	812dea11 	.word	0x812dea11
 800337c:	3d719799 	.word	0x3d719799
 8003380:	487fcb92 	.word	0x487fcb92
 8003384:	3f4d7dbf 	.word	0x3f4d7dbf
 8003388:	9999999a 	.word	0x9999999a
 800338c:	3ff19999 	.word	0x3ff19999
 8003390:	200009a0 	.word	0x200009a0
 8003394:	20000828 	.word	0x20000828
 8003398:	20000800 	.word	0x20000800
 800339c:	2000000c 	.word	0x2000000c
 80033a0:	20000010 	.word	0x20000010
 80033a4:	20000018 	.word	0x20000018
 80033a8:	20000998 	.word	0x20000998
 80033ac:	20000984 	.word	0x20000984

080033b0 <cmd_CAL>:



//==============================================================================================
FunctionalState cmd_CAL(uint8_t cmd, float coeff)
{
 80033b0:	b580      	push	{r7, lr}
 80033b2:	b084      	sub	sp, #16
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	4603      	mov	r3, r0
 80033b8:	6039      	str	r1, [r7, #0]
 80033ba:	71fb      	strb	r3, [r7, #7]
	float tmpx;

	if(CAL_STATE==LOCK_STATE) return 0;
 80033bc:	4b96      	ldr	r3, [pc, #600]	; (8003618 <cmd_CAL+0x268>)
 80033be:	781b      	ldrb	r3, [r3, #0]
 80033c0:	2b01      	cmp	r3, #1
 80033c2:	d101      	bne.n	80033c8 <cmd_CAL+0x18>
 80033c4:	2300      	movs	r3, #0
 80033c6:	e0f0      	b.n	80035aa <cmd_CAL+0x1fa>

	tmpx=coeff;
 80033c8:	683b      	ldr	r3, [r7, #0]
 80033ca:	60fb      	str	r3, [r7, #12]

	switch(cmd)
 80033cc:	79fb      	ldrb	r3, [r7, #7]
 80033ce:	3b06      	subs	r3, #6
 80033d0:	2b07      	cmp	r3, #7
 80033d2:	f200 80e7 	bhi.w	80035a4 <cmd_CAL+0x1f4>
 80033d6:	a201      	add	r2, pc, #4	; (adr r2, 80033dc <cmd_CAL+0x2c>)
 80033d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80033dc:	080033fd 	.word	0x080033fd
 80033e0:	0800340f 	.word	0x0800340f
 80033e4:	08003421 	.word	0x08003421
 80033e8:	08003433 	.word	0x08003433
 80033ec:	080034c9 	.word	0x080034c9
 80033f0:	08003537 	.word	0x08003537
 80033f4:	08003445 	.word	0x08003445
 80033f8:	08003487 	.word	0x08003487
	{
	case DAC_CAL_TEMP:
		DAC_Write(DAC_CODE_MIDDLE);
 80033fc:	4887      	ldr	r0, [pc, #540]	; (800361c <cmd_CAL+0x26c>)
 80033fe:	f00c fffb 	bl	80103f8 <__DAC_Write_veneer>
		DAC_TEMP_CAL();
 8003402:	f7fe fa71 	bl	80018e8 <DAC_TEMP_CAL>
		DAC_Write(DAC_CODE_MIDDLE);
 8003406:	4885      	ldr	r0, [pc, #532]	; (800361c <cmd_CAL+0x26c>)
 8003408:	f00c fff6 	bl	80103f8 <__DAC_Write_veneer>
		break;
 800340c:	e0ca      	b.n	80035a4 <cmd_CAL+0x1f4>

	case DAC_CAL_POLY_A:
		EEPROM_write(corr_coeff_1_EEPROM_ADDRESS,float_to_binary(tmpx));
 800340e:	68f8      	ldr	r0, [r7, #12]
 8003410:	f000 f9e3 	bl	80037da <float_to_binary>
 8003414:	4603      	mov	r3, r0
 8003416:	4619      	mov	r1, r3
 8003418:	2010      	movs	r0, #16
 800341a:	f000 fa1d 	bl	8003858 <EEPROM_write>
		break;
 800341e:	e0c1      	b.n	80035a4 <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_B:
		EEPROM_write(corr_coeff_2_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003420:	68f8      	ldr	r0, [r7, #12]
 8003422:	f000 f9da 	bl	80037da <float_to_binary>
 8003426:	4603      	mov	r3, r0
 8003428:	4619      	mov	r1, r3
 800342a:	2018      	movs	r0, #24
 800342c:	f000 fa14 	bl	8003858 <EEPROM_write>
		break;
 8003430:	e0b8      	b.n	80035a4 <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_C:
		EEPROM_write(corr_coeff_3_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003432:	68f8      	ldr	r0, [r7, #12]
 8003434:	f000 f9d1 	bl	80037da <float_to_binary>
 8003438:	4603      	mov	r3, r0
 800343a:	4619      	mov	r1, r3
 800343c:	2020      	movs	r0, #32
 800343e:	f000 fa0b 	bl	8003858 <EEPROM_write>
		break;
 8003442:	e0af      	b.n	80035a4 <cmd_CAL+0x1f4>

	case GAIN_X2_CAL:
		if((tmpx<2.1 && tmpx>1.9))
 8003444:	68f8      	ldr	r0, [r7, #12]
 8003446:	f7fd f811 	bl	800046c <__aeabi_f2d>
 800344a:	a35b      	add	r3, pc, #364	; (adr r3, 80035b8 <cmd_CAL+0x208>)
 800344c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003450:	f7fd fad6 	bl	8000a00 <__aeabi_dcmplt>
 8003454:	4603      	mov	r3, r0
 8003456:	2b00      	cmp	r3, #0
 8003458:	d013      	beq.n	8003482 <cmd_CAL+0xd2>
 800345a:	68f8      	ldr	r0, [r7, #12]
 800345c:	f7fd f806 	bl	800046c <__aeabi_f2d>
 8003460:	a357      	add	r3, pc, #348	; (adr r3, 80035c0 <cmd_CAL+0x210>)
 8003462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003466:	f7fd fae9 	bl	8000a3c <__aeabi_dcmpgt>
 800346a:	4603      	mov	r3, r0
 800346c:	2b00      	cmp	r3, #0
 800346e:	d008      	beq.n	8003482 <cmd_CAL+0xd2>
		{
			EEPROM_write(gain_x2_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003470:	68f8      	ldr	r0, [r7, #12]
 8003472:	f000 f9b2 	bl	80037da <float_to_binary>
 8003476:	4603      	mov	r3, r0
 8003478:	4619      	mov	r1, r3
 800347a:	2028      	movs	r0, #40	; 0x28
 800347c:	f000 f9ec 	bl	8003858 <EEPROM_write>
		}
		else return 0;
		break;
 8003480:	e090      	b.n	80035a4 <cmd_CAL+0x1f4>
		else return 0;
 8003482:	2300      	movs	r3, #0
 8003484:	e091      	b.n	80035aa <cmd_CAL+0x1fa>
	case GAIN_X4_CAL:
		if((tmpx<4.1 && tmpx>3.9))
 8003486:	68f8      	ldr	r0, [r7, #12]
 8003488:	f7fc fff0 	bl	800046c <__aeabi_f2d>
 800348c:	a34e      	add	r3, pc, #312	; (adr r3, 80035c8 <cmd_CAL+0x218>)
 800348e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003492:	f7fd fab5 	bl	8000a00 <__aeabi_dcmplt>
 8003496:	4603      	mov	r3, r0
 8003498:	2b00      	cmp	r3, #0
 800349a:	d013      	beq.n	80034c4 <cmd_CAL+0x114>
 800349c:	68f8      	ldr	r0, [r7, #12]
 800349e:	f7fc ffe5 	bl	800046c <__aeabi_f2d>
 80034a2:	a34b      	add	r3, pc, #300	; (adr r3, 80035d0 <cmd_CAL+0x220>)
 80034a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034a8:	f7fd fac8 	bl	8000a3c <__aeabi_dcmpgt>
 80034ac:	4603      	mov	r3, r0
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d008      	beq.n	80034c4 <cmd_CAL+0x114>
		{
			EEPROM_write(gain_x4_EEPROM_ADDRESS,float_to_binary(tmpx));
 80034b2:	68f8      	ldr	r0, [r7, #12]
 80034b4:	f000 f991 	bl	80037da <float_to_binary>
 80034b8:	4603      	mov	r3, r0
 80034ba:	4619      	mov	r1, r3
 80034bc:	2030      	movs	r0, #48	; 0x30
 80034be:	f000 f9cb 	bl	8003858 <EEPROM_write>
		}
		else return 0;
		break;
 80034c2:	e06f      	b.n	80035a4 <cmd_CAL+0x1f4>
		else return 0;
 80034c4:	2300      	movs	r3, #0
 80034c6:	e070      	b.n	80035aa <cmd_CAL+0x1fa>
	case DAC_CAL_TOP:
		if((tmpx<10.1 && tmpx>9.9) || (tmpx>6.8 && tmpx<7.1))
 80034c8:	68f8      	ldr	r0, [r7, #12]
 80034ca:	f7fc ffcf 	bl	800046c <__aeabi_f2d>
 80034ce:	a342      	add	r3, pc, #264	; (adr r3, 80035d8 <cmd_CAL+0x228>)
 80034d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034d4:	f7fd fa94 	bl	8000a00 <__aeabi_dcmplt>
 80034d8:	4603      	mov	r3, r0
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d00a      	beq.n	80034f4 <cmd_CAL+0x144>
 80034de:	68f8      	ldr	r0, [r7, #12]
 80034e0:	f7fc ffc4 	bl	800046c <__aeabi_f2d>
 80034e4:	a33e      	add	r3, pc, #248	; (adr r3, 80035e0 <cmd_CAL+0x230>)
 80034e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034ea:	f7fd faa7 	bl	8000a3c <__aeabi_dcmpgt>
 80034ee:	4603      	mov	r3, r0
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d115      	bne.n	8003520 <cmd_CAL+0x170>
 80034f4:	68f8      	ldr	r0, [r7, #12]
 80034f6:	f7fc ffb9 	bl	800046c <__aeabi_f2d>
 80034fa:	a33b      	add	r3, pc, #236	; (adr r3, 80035e8 <cmd_CAL+0x238>)
 80034fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003500:	f7fd fa9c 	bl	8000a3c <__aeabi_dcmpgt>
 8003504:	4603      	mov	r3, r0
 8003506:	2b00      	cmp	r3, #0
 8003508:	d013      	beq.n	8003532 <cmd_CAL+0x182>
 800350a:	68f8      	ldr	r0, [r7, #12]
 800350c:	f7fc ffae 	bl	800046c <__aeabi_f2d>
 8003510:	a337      	add	r3, pc, #220	; (adr r3, 80035f0 <cmd_CAL+0x240>)
 8003512:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003516:	f7fd fa73 	bl	8000a00 <__aeabi_dcmplt>
 800351a:	4603      	mov	r3, r0
 800351c:	2b00      	cmp	r3, #0
 800351e:	d008      	beq.n	8003532 <cmd_CAL+0x182>
		{
			EEPROM_write(cal_DAC_up_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 8003520:	68f8      	ldr	r0, [r7, #12]
 8003522:	f000 f95a 	bl	80037da <float_to_binary>
 8003526:	4603      	mov	r3, r0
 8003528:	4619      	mov	r1, r3
 800352a:	2000      	movs	r0, #0
 800352c:	f000 f994 	bl	8003858 <EEPROM_write>
		}
		else return 0;
		break;
 8003530:	e038      	b.n	80035a4 <cmd_CAL+0x1f4>
		else return 0;
 8003532:	2300      	movs	r3, #0
 8003534:	e039      	b.n	80035aa <cmd_CAL+0x1fa>
	case DAC_CAL_DOWN:
		if((tmpx>-10.1 && tmpx<-9.9) || (tmpx<-6.8 && tmpx>-7.1))
 8003536:	68f8      	ldr	r0, [r7, #12]
 8003538:	f7fc ff98 	bl	800046c <__aeabi_f2d>
 800353c:	a32e      	add	r3, pc, #184	; (adr r3, 80035f8 <cmd_CAL+0x248>)
 800353e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003542:	f7fd fa7b 	bl	8000a3c <__aeabi_dcmpgt>
 8003546:	4603      	mov	r3, r0
 8003548:	2b00      	cmp	r3, #0
 800354a:	d00a      	beq.n	8003562 <cmd_CAL+0x1b2>
 800354c:	68f8      	ldr	r0, [r7, #12]
 800354e:	f7fc ff8d 	bl	800046c <__aeabi_f2d>
 8003552:	a32b      	add	r3, pc, #172	; (adr r3, 8003600 <cmd_CAL+0x250>)
 8003554:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003558:	f7fd fa52 	bl	8000a00 <__aeabi_dcmplt>
 800355c:	4603      	mov	r3, r0
 800355e:	2b00      	cmp	r3, #0
 8003560:	d115      	bne.n	800358e <cmd_CAL+0x1de>
 8003562:	68f8      	ldr	r0, [r7, #12]
 8003564:	f7fc ff82 	bl	800046c <__aeabi_f2d>
 8003568:	a327      	add	r3, pc, #156	; (adr r3, 8003608 <cmd_CAL+0x258>)
 800356a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800356e:	f7fd fa47 	bl	8000a00 <__aeabi_dcmplt>
 8003572:	4603      	mov	r3, r0
 8003574:	2b00      	cmp	r3, #0
 8003576:	d013      	beq.n	80035a0 <cmd_CAL+0x1f0>
 8003578:	68f8      	ldr	r0, [r7, #12]
 800357a:	f7fc ff77 	bl	800046c <__aeabi_f2d>
 800357e:	a324      	add	r3, pc, #144	; (adr r3, 8003610 <cmd_CAL+0x260>)
 8003580:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003584:	f7fd fa5a 	bl	8000a3c <__aeabi_dcmpgt>
 8003588:	4603      	mov	r3, r0
 800358a:	2b00      	cmp	r3, #0
 800358c:	d008      	beq.n	80035a0 <cmd_CAL+0x1f0>
		{
			EEPROM_write(cal_DAC_down_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 800358e:	68f8      	ldr	r0, [r7, #12]
 8003590:	f000 f923 	bl	80037da <float_to_binary>
 8003594:	4603      	mov	r3, r0
 8003596:	4619      	mov	r1, r3
 8003598:	2008      	movs	r0, #8
 800359a:	f000 f95d 	bl	8003858 <EEPROM_write>
		}
		else return 0;
		break;
 800359e:	e001      	b.n	80035a4 <cmd_CAL+0x1f4>
		else return 0;
 80035a0:	2300      	movs	r3, #0
 80035a2:	e002      	b.n	80035aa <cmd_CAL+0x1fa>
	}

	load_data_from_EEPROM();
 80035a4:	f000 f83c 	bl	8003620 <load_data_from_EEPROM>
	return 1;
 80035a8:	2301      	movs	r3, #1
}
 80035aa:	4618      	mov	r0, r3
 80035ac:	3710      	adds	r7, #16
 80035ae:	46bd      	mov	sp, r7
 80035b0:	bd80      	pop	{r7, pc}
 80035b2:	bf00      	nop
 80035b4:	f3af 8000 	nop.w
 80035b8:	cccccccd 	.word	0xcccccccd
 80035bc:	4000cccc 	.word	0x4000cccc
 80035c0:	66666666 	.word	0x66666666
 80035c4:	3ffe6666 	.word	0x3ffe6666
 80035c8:	66666666 	.word	0x66666666
 80035cc:	40106666 	.word	0x40106666
 80035d0:	33333333 	.word	0x33333333
 80035d4:	400f3333 	.word	0x400f3333
 80035d8:	33333333 	.word	0x33333333
 80035dc:	40243333 	.word	0x40243333
 80035e0:	cccccccd 	.word	0xcccccccd
 80035e4:	4023cccc 	.word	0x4023cccc
 80035e8:	33333333 	.word	0x33333333
 80035ec:	401b3333 	.word	0x401b3333
 80035f0:	66666666 	.word	0x66666666
 80035f4:	401c6666 	.word	0x401c6666
 80035f8:	33333333 	.word	0x33333333
 80035fc:	c0243333 	.word	0xc0243333
 8003600:	cccccccd 	.word	0xcccccccd
 8003604:	c023cccc 	.word	0xc023cccc
 8003608:	33333333 	.word	0x33333333
 800360c:	c01b3333 	.word	0xc01b3333
 8003610:	66666666 	.word	0x66666666
 8003614:	c01c6666 	.word	0xc01c6666
 8003618:	20000021 	.word	0x20000021
 800361c:	0007ffff 	.word	0x0007ffff

08003620 <load_data_from_EEPROM>:
//==============================================================================================


//==============================================================================================
void load_data_from_EEPROM(void)
{
 8003620:	b580      	push	{r7, lr}
 8003622:	b082      	sub	sp, #8
 8003624:	af00      	add	r7, sp, #0
	uint32_t addr_i,addr_hex;
	cal_DAC_up_voltage=binary_to_float(EEPROM_read(cal_DAC_up_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 8003626:	2000      	movs	r0, #0
 8003628:	f000 f8fc 	bl	8003824 <EEPROM_read>
 800362c:	4603      	mov	r3, r0
 800362e:	4618      	mov	r0, r3
 8003630:	f000 f8c0 	bl	80037b4 <binary_to_float>
 8003634:	4603      	mov	r3, r0
 8003636:	4a3b      	ldr	r2, [pc, #236]	; (8003724 <load_data_from_EEPROM+0x104>)
 8003638:	6013      	str	r3, [r2, #0]
	cal_DAC_down_voltage=binary_to_float(EEPROM_read(cal_DAC_down_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 800363a:	2008      	movs	r0, #8
 800363c:	f000 f8f2 	bl	8003824 <EEPROM_read>
 8003640:	4603      	mov	r3, r0
 8003642:	4618      	mov	r0, r3
 8003644:	f000 f8b6 	bl	80037b4 <binary_to_float>
 8003648:	4603      	mov	r3, r0
 800364a:	4a37      	ldr	r2, [pc, #220]	; (8003728 <load_data_from_EEPROM+0x108>)
 800364c:	6013      	str	r3, [r2, #0]
	DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 800364e:	4b35      	ldr	r3, [pc, #212]	; (8003724 <load_data_from_EEPROM+0x104>)
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	4a35      	ldr	r2, [pc, #212]	; (8003728 <load_data_from_EEPROM+0x108>)
 8003654:	6812      	ldr	r2, [r2, #0]
 8003656:	4611      	mov	r1, r2
 8003658:	4618      	mov	r0, r3
 800365a:	f7fd faab 	bl	8000bb4 <__aeabi_fsub>
 800365e:	4603      	mov	r3, r0
 8003660:	461a      	mov	r2, r3
 8003662:	4b32      	ldr	r3, [pc, #200]	; (800372c <load_data_from_EEPROM+0x10c>)
 8003664:	601a      	str	r2, [r3, #0]

	corr_coeff_1=binary_to_float(EEPROM_read(corr_coeff_1_EEPROM_ADDRESS));
 8003666:	2010      	movs	r0, #16
 8003668:	f000 f8dc 	bl	8003824 <EEPROM_read>
 800366c:	4603      	mov	r3, r0
 800366e:	4618      	mov	r0, r3
 8003670:	f000 f8a0 	bl	80037b4 <binary_to_float>
 8003674:	4603      	mov	r3, r0
 8003676:	4a2e      	ldr	r2, [pc, #184]	; (8003730 <load_data_from_EEPROM+0x110>)
 8003678:	6013      	str	r3, [r2, #0]
	corr_coeff_2=binary_to_float(EEPROM_read(corr_coeff_2_EEPROM_ADDRESS));
 800367a:	2018      	movs	r0, #24
 800367c:	f000 f8d2 	bl	8003824 <EEPROM_read>
 8003680:	4603      	mov	r3, r0
 8003682:	4618      	mov	r0, r3
 8003684:	f000 f896 	bl	80037b4 <binary_to_float>
 8003688:	4603      	mov	r3, r0
 800368a:	4a2a      	ldr	r2, [pc, #168]	; (8003734 <load_data_from_EEPROM+0x114>)
 800368c:	6013      	str	r3, [r2, #0]
	corr_coeff_3=binary_to_float(EEPROM_read(corr_coeff_3_EEPROM_ADDRESS));
 800368e:	2020      	movs	r0, #32
 8003690:	f000 f8c8 	bl	8003824 <EEPROM_read>
 8003694:	4603      	mov	r3, r0
 8003696:	4618      	mov	r0, r3
 8003698:	f000 f88c 	bl	80037b4 <binary_to_float>
 800369c:	4603      	mov	r3, r0
 800369e:	4a26      	ldr	r2, [pc, #152]	; (8003738 <load_data_from_EEPROM+0x118>)
 80036a0:	6013      	str	r3, [r2, #0]
	gain_x2_coeff=binary_to_float(EEPROM_read(gain_x2_EEPROM_ADDRESS));
 80036a2:	2028      	movs	r0, #40	; 0x28
 80036a4:	f000 f8be 	bl	8003824 <EEPROM_read>
 80036a8:	4603      	mov	r3, r0
 80036aa:	4618      	mov	r0, r3
 80036ac:	f000 f882 	bl	80037b4 <binary_to_float>
 80036b0:	4603      	mov	r3, r0
 80036b2:	4a22      	ldr	r2, [pc, #136]	; (800373c <load_data_from_EEPROM+0x11c>)
 80036b4:	6013      	str	r3, [r2, #0]
	gain_x4_coeff=binary_to_float(EEPROM_read(gain_x4_EEPROM_ADDRESS));
 80036b6:	2030      	movs	r0, #48	; 0x30
 80036b8:	f000 f8b4 	bl	8003824 <EEPROM_read>
 80036bc:	4603      	mov	r3, r0
 80036be:	4618      	mov	r0, r3
 80036c0:	f000 f878 	bl	80037b4 <binary_to_float>
 80036c4:	4603      	mov	r3, r0
 80036c6:	4a1e      	ldr	r2, [pc, #120]	; (8003740 <load_data_from_EEPROM+0x120>)
 80036c8:	6013      	str	r3, [r2, #0]

	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 80036ca:	2300      	movs	r3, #0
 80036cc:	607b      	str	r3, [r7, #4]
 80036ce:	e020      	b.n	8003712 <load_data_from_EEPROM+0xf2>
	{
		addr_hex=C_value_base_EEPROM_ADDRESS+(0x10*addr_i);
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	011b      	lsls	r3, r3, #4
 80036d4:	3338      	adds	r3, #56	; 0x38
 80036d6:	603b      	str	r3, [r7, #0]
		C_value[addr_i]=binary_to_float(EEPROM_read(addr_hex));
 80036d8:	6838      	ldr	r0, [r7, #0]
 80036da:	f000 f8a3 	bl	8003824 <EEPROM_read>
 80036de:	4603      	mov	r3, r0
 80036e0:	4618      	mov	r0, r3
 80036e2:	f000 f867 	bl	80037b4 <binary_to_float>
 80036e6:	4602      	mov	r2, r0
 80036e8:	4916      	ldr	r1, [pc, #88]	; (8003744 <load_data_from_EEPROM+0x124>)
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		C_leakage[addr_i]=binary_to_float(EEPROM_read(addr_hex+0x08));
 80036f0:	683b      	ldr	r3, [r7, #0]
 80036f2:	3308      	adds	r3, #8
 80036f4:	4618      	mov	r0, r3
 80036f6:	f000 f895 	bl	8003824 <EEPROM_read>
 80036fa:	4603      	mov	r3, r0
 80036fc:	4618      	mov	r0, r3
 80036fe:	f000 f859 	bl	80037b4 <binary_to_float>
 8003702:	4602      	mov	r2, r0
 8003704:	4910      	ldr	r1, [pc, #64]	; (8003748 <load_data_from_EEPROM+0x128>)
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	3301      	adds	r3, #1
 8003710:	607b      	str	r3, [r7, #4]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	2b09      	cmp	r3, #9
 8003716:	d9db      	bls.n	80036d0 <load_data_from_EEPROM+0xb0>
	}
}
 8003718:	bf00      	nop
 800371a:	bf00      	nop
 800371c:	3708      	adds	r7, #8
 800371e:	46bd      	mov	sp, r7
 8003720:	bd80      	pop	{r7, pc}
 8003722:	bf00      	nop
 8003724:	200009ac 	.word	0x200009ac
 8003728:	200009b0 	.word	0x200009b0
 800372c:	200009a8 	.word	0x200009a8
 8003730:	2000070c 	.word	0x2000070c
 8003734:	20000710 	.word	0x20000710
 8003738:	20000714 	.word	0x20000714
 800373c:	20000718 	.word	0x20000718
 8003740:	2000071c 	.word	0x2000071c
 8003744:	20000800 	.word	0x20000800
 8003748:	20000828 	.word	0x20000828

0800374c <write_c_value_to_EEPROM>:
//==============================================================================================


//==============================================================================================
void write_c_value_to_EEPROM(uint32_t addr_i, float value,float leakage)
{
 800374c:	b590      	push	{r4, r7, lr}
 800374e:	b087      	sub	sp, #28
 8003750:	af00      	add	r7, sp, #0
 8003752:	60f8      	str	r0, [r7, #12]
 8003754:	60b9      	str	r1, [r7, #8]
 8003756:	607a      	str	r2, [r7, #4]
	uint32_t addr_hex=C_value_base_EEPROM_ADDRESS+(0x10*addr_i);
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	011b      	lsls	r3, r3, #4
 800375c:	3338      	adds	r3, #56	; 0x38
 800375e:	617b      	str	r3, [r7, #20]

	if(addr_i>=C_value_max_count)return;
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	2b09      	cmp	r3, #9
 8003764:	d81d      	bhi.n	80037a2 <write_c_value_to_EEPROM+0x56>

	C_value[addr_i]=value;
 8003766:	4911      	ldr	r1, [pc, #68]	; (80037ac <write_c_value_to_EEPROM+0x60>)
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	68ba      	ldr	r2, [r7, #8]
 800376c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex,float_to_binary(value));
 8003770:	68b8      	ldr	r0, [r7, #8]
 8003772:	f000 f832 	bl	80037da <float_to_binary>
 8003776:	4603      	mov	r3, r0
 8003778:	4619      	mov	r1, r3
 800377a:	6978      	ldr	r0, [r7, #20]
 800377c:	f000 f86c 	bl	8003858 <EEPROM_write>
	C_leakage[addr_i]=leakage;
 8003780:	490b      	ldr	r1, [pc, #44]	; (80037b0 <write_c_value_to_EEPROM+0x64>)
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	687a      	ldr	r2, [r7, #4]
 8003786:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex+0x08,float_to_binary(leakage));
 800378a:	697b      	ldr	r3, [r7, #20]
 800378c:	f103 0408 	add.w	r4, r3, #8
 8003790:	6878      	ldr	r0, [r7, #4]
 8003792:	f000 f822 	bl	80037da <float_to_binary>
 8003796:	4603      	mov	r3, r0
 8003798:	4619      	mov	r1, r3
 800379a:	4620      	mov	r0, r4
 800379c:	f000 f85c 	bl	8003858 <EEPROM_write>
 80037a0:	e000      	b.n	80037a4 <write_c_value_to_EEPROM+0x58>
	if(addr_i>=C_value_max_count)return;
 80037a2:	bf00      	nop
}
 80037a4:	371c      	adds	r7, #28
 80037a6:	46bd      	mov	sp, r7
 80037a8:	bd90      	pop	{r4, r7, pc}
 80037aa:	bf00      	nop
 80037ac:	20000800 	.word	0x20000800
 80037b0:	20000828 	.word	0x20000828

080037b4 <binary_to_float>:
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC push_options
#pragma GCC optimize ("O0")

float binary_to_float(uint32_t a)
{
 80037b4:	b480      	push	{r7}
 80037b6:	b085      	sub	sp, #20
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
	int * p;
	float out=0;
 80037bc:	f04f 0300 	mov.w	r3, #0
 80037c0:	60bb      	str	r3, [r7, #8]

	p = &out;
 80037c2:	f107 0308 	add.w	r3, r7, #8
 80037c6:	60fb      	str	r3, [r7, #12]
	(*p)=a;
 80037c8:	687a      	ldr	r2, [r7, #4]
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	601a      	str	r2, [r3, #0]
	return out;
 80037ce:	68bb      	ldr	r3, [r7, #8]
}
 80037d0:	4618      	mov	r0, r3
 80037d2:	3714      	adds	r7, #20
 80037d4:	46bd      	mov	sp, r7
 80037d6:	bc80      	pop	{r7}
 80037d8:	4770      	bx	lr

080037da <float_to_binary>:


uint32_t float_to_binary(float a)
{
 80037da:	b480      	push	{r7}
 80037dc:	b087      	sub	sp, #28
 80037de:	af00      	add	r7, sp, #0
 80037e0:	6078      	str	r0, [r7, #4]
	int i;
	int * p;
	uint32_t out=0;
 80037e2:	2300      	movs	r3, #0
 80037e4:	613b      	str	r3, [r7, #16]

	p = &a;
 80037e6:	1d3b      	adds	r3, r7, #4
 80037e8:	60fb      	str	r3, [r7, #12]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 80037ea:	231f      	movs	r3, #31
 80037ec:	617b      	str	r3, [r7, #20]
 80037ee:	e010      	b.n	8003812 <float_to_binary+0x38>
	{
		out+=((*p) >> i & 1)<<i;
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	681a      	ldr	r2, [r3, #0]
 80037f4:	697b      	ldr	r3, [r7, #20]
 80037f6:	fa42 f303 	asr.w	r3, r2, r3
 80037fa:	f003 0201 	and.w	r2, r3, #1
 80037fe:	697b      	ldr	r3, [r7, #20]
 8003800:	fa02 f303 	lsl.w	r3, r2, r3
 8003804:	461a      	mov	r2, r3
 8003806:	693b      	ldr	r3, [r7, #16]
 8003808:	4413      	add	r3, r2
 800380a:	613b      	str	r3, [r7, #16]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 800380c:	697b      	ldr	r3, [r7, #20]
 800380e:	3b01      	subs	r3, #1
 8003810:	617b      	str	r3, [r7, #20]
 8003812:	697b      	ldr	r3, [r7, #20]
 8003814:	2b00      	cmp	r3, #0
 8003816:	daeb      	bge.n	80037f0 <float_to_binary+0x16>
	}

	return out;
 8003818:	693b      	ldr	r3, [r7, #16]
}
 800381a:	4618      	mov	r0, r3
 800381c:	371c      	adds	r7, #28
 800381e:	46bd      	mov	sp, r7
 8003820:	bc80      	pop	{r7}
 8003822:	4770      	bx	lr

08003824 <EEPROM_read>:
//==============================================================================================


//==============================================================================================
uint32_t EEPROM_read(uint32_t address_of_read)
{
 8003824:	b480      	push	{r7}
 8003826:	b085      	sub	sp, #20
 8003828:	af00      	add	r7, sp, #0
 800382a:	6078      	str	r0, [r7, #4]
	uint32_t Address;

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8003832:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 8003836:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	4a06      	ldr	r2, [pc, #24]	; (8003854 <EEPROM_read+0x30>)
 800383c:	4293      	cmp	r3, r2
 800383e:	d301      	bcc.n	8003844 <EEPROM_read+0x20>
	{
		return 0x00;
 8003840:	2300      	movs	r3, #0
 8003842:	e001      	b.n	8003848 <EEPROM_read+0x24>
	}
	return *(__IO uint32_t *) Address;
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	681b      	ldr	r3, [r3, #0]
}
 8003848:	4618      	mov	r0, r3
 800384a:	3714      	adds	r7, #20
 800384c:	46bd      	mov	sp, r7
 800384e:	bc80      	pop	{r7}
 8003850:	4770      	bx	lr
 8003852:	bf00      	nop
 8003854:	08082800 	.word	0x08082800

08003858 <EEPROM_write>:
//==============================================================================================


//==============================================================================================
void EEPROM_write(uint32_t address_of_read, uint32_t data)
{
 8003858:	b580      	push	{r7, lr}
 800385a:	b084      	sub	sp, #16
 800385c:	af00      	add	r7, sp, #0
 800385e:	6078      	str	r0, [r7, #4]
 8003860:	6039      	str	r1, [r7, #0]
	/* Clear all pending flags */
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
	     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8003868:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 800386c:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	4a0d      	ldr	r2, [pc, #52]	; (80038a8 <EEPROM_write+0x50>)
 8003872:	4293      	cmp	r3, r2
 8003874:	d212      	bcs.n	800389c <EEPROM_write+0x44>
	{
		return;
	}

	HAL_FLASHEx_DATAEEPROM_Unlock();
 8003876:	f002 fbc3 	bl	8006000 <HAL_FLASHEx_DATAEEPROM_Unlock>
	FLASHStatus = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_WORD, Address, data);
 800387a:	683a      	ldr	r2, [r7, #0]
 800387c:	68f9      	ldr	r1, [r7, #12]
 800387e:	2002      	movs	r0, #2
 8003880:	f002 fbda 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 8003884:	4603      	mov	r3, r0
 8003886:	72fb      	strb	r3, [r7, #11]
	HAL_FLASHEx_DATAEEPROM_Lock();
 8003888:	f002 fbcc 	bl	8006024 <HAL_FLASHEx_DATAEEPROM_Lock>

	if(FLASHStatus != HAL_OK)
 800388c:	7afb      	ldrb	r3, [r7, #11]
 800388e:	2b00      	cmp	r3, #0
 8003890:	d106      	bne.n	80038a0 <EEPROM_write+0x48>
	{
		return;
	}
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);

	if(*(__IO uint32_t *) Address != data)
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	683a      	ldr	r2, [r7, #0]
 8003898:	429a      	cmp	r2, r3
 800389a:	e002      	b.n	80038a2 <EEPROM_write+0x4a>
		return;
 800389c:	bf00      	nop
 800389e:	e000      	b.n	80038a2 <EEPROM_write+0x4a>
		return;
 80038a0:	bf00      	nop
	{
		return;
	}

}
 80038a2:	3710      	adds	r7, #16
 80038a4:	46bd      	mov	sp, r7
 80038a6:	bd80      	pop	{r7, pc}
 80038a8:	08082800 	.word	0x08082800

080038ac <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80038ac:	b580      	push	{r7, lr}
 80038ae:	b08a      	sub	sp, #40	; 0x28
 80038b0:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80038b2:	f107 0314 	add.w	r3, r7, #20
 80038b6:	2200      	movs	r2, #0
 80038b8:	601a      	str	r2, [r3, #0]
 80038ba:	605a      	str	r2, [r3, #4]
 80038bc:	609a      	str	r2, [r3, #8]
 80038be:	60da      	str	r2, [r3, #12]
 80038c0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80038c2:	4b7c      	ldr	r3, [pc, #496]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038c4:	69db      	ldr	r3, [r3, #28]
 80038c6:	4a7b      	ldr	r2, [pc, #492]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038c8:	f043 0304 	orr.w	r3, r3, #4
 80038cc:	61d3      	str	r3, [r2, #28]
 80038ce:	4b79      	ldr	r3, [pc, #484]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038d0:	69db      	ldr	r3, [r3, #28]
 80038d2:	f003 0304 	and.w	r3, r3, #4
 80038d6:	613b      	str	r3, [r7, #16]
 80038d8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80038da:	4b76      	ldr	r3, [pc, #472]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038dc:	69db      	ldr	r3, [r3, #28]
 80038de:	4a75      	ldr	r2, [pc, #468]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038e0:	f043 0320 	orr.w	r3, r3, #32
 80038e4:	61d3      	str	r3, [r2, #28]
 80038e6:	4b73      	ldr	r3, [pc, #460]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038e8:	69db      	ldr	r3, [r3, #28]
 80038ea:	f003 0320 	and.w	r3, r3, #32
 80038ee:	60fb      	str	r3, [r7, #12]
 80038f0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80038f2:	4b70      	ldr	r3, [pc, #448]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038f4:	69db      	ldr	r3, [r3, #28]
 80038f6:	4a6f      	ldr	r2, [pc, #444]	; (8003ab4 <MX_GPIO_Init+0x208>)
 80038f8:	f043 0301 	orr.w	r3, r3, #1
 80038fc:	61d3      	str	r3, [r2, #28]
 80038fe:	4b6d      	ldr	r3, [pc, #436]	; (8003ab4 <MX_GPIO_Init+0x208>)
 8003900:	69db      	ldr	r3, [r3, #28]
 8003902:	f003 0301 	and.w	r3, r3, #1
 8003906:	60bb      	str	r3, [r7, #8]
 8003908:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800390a:	4b6a      	ldr	r3, [pc, #424]	; (8003ab4 <MX_GPIO_Init+0x208>)
 800390c:	69db      	ldr	r3, [r3, #28]
 800390e:	4a69      	ldr	r2, [pc, #420]	; (8003ab4 <MX_GPIO_Init+0x208>)
 8003910:	f043 0302 	orr.w	r3, r3, #2
 8003914:	61d3      	str	r3, [r2, #28]
 8003916:	4b67      	ldr	r3, [pc, #412]	; (8003ab4 <MX_GPIO_Init+0x208>)
 8003918:	69db      	ldr	r3, [r3, #28]
 800391a:	f003 0302 	and.w	r3, r3, #2
 800391e:	607b      	str	r3, [r7, #4]
 8003920:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 8003922:	2200      	movs	r2, #0
 8003924:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003928:	4863      	ldr	r0, [pc, #396]	; (8003ab8 <MX_GPIO_Init+0x20c>)
 800392a:	f002 fd83 	bl	8006434 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, GPIO_PIN_SET);
 800392e:	2201      	movs	r2, #1
 8003930:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003934:	4860      	ldr	r0, [pc, #384]	; (8003ab8 <MX_GPIO_Init+0x20c>)
 8003936:	f002 fd7d 	bl	8006434 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 800393a:	2201      	movs	r2, #1
 800393c:	f248 011f 	movw	r1, #32799	; 0x801f
 8003940:	485e      	ldr	r0, [pc, #376]	; (8003abc <MX_GPIO_Init+0x210>)
 8003942:	f002 fd77 	bl	8006434 <HAL_GPIO_WritePin>
                          |DAC_SYNC_Pin|DAC_CLR_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RS_Pin|Display_Power_Pin, GPIO_PIN_RESET);
 8003946:	2200      	movs	r2, #0
 8003948:	f640 0101 	movw	r1, #2049	; 0x801
 800394c:	485c      	ldr	r0, [pc, #368]	; (8003ac0 <MX_GPIO_Init+0x214>)
 800394e:	f002 fd71 	bl	8006434 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|SPI2_NSS_Pin
 8003952:	2201      	movs	r2, #1
 8003954:	f241 413e 	movw	r1, #5182	; 0x143e
 8003958:	4859      	ldr	r0, [pc, #356]	; (8003ac0 <MX_GPIO_Init+0x214>)
 800395a:	f002 fd6b 	bl	8006434 <HAL_GPIO_WritePin>
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Start_button_Pin;
 800395e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003962:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003964:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8003968:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800396a:	2301      	movs	r3, #1
 800396c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Start_button_GPIO_Port, &GPIO_InitStruct);
 800396e:	f107 0314 	add.w	r3, r7, #20
 8003972:	4619      	mov	r1, r3
 8003974:	4850      	ldr	r0, [pc, #320]	; (8003ab8 <MX_GPIO_Init+0x20c>)
 8003976:	f002 fc6d 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Count_EN_Pin;
 800397a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800397e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003980:	2301      	movs	r3, #1
 8003982:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003984:	2300      	movs	r3, #0
 8003986:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003988:	2302      	movs	r3, #2
 800398a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Count_EN_GPIO_Port, &GPIO_InitStruct);
 800398c:	f107 0314 	add.w	r3, r7, #20
 8003990:	4619      	mov	r1, r3
 8003992:	4849      	ldr	r0, [pc, #292]	; (8003ab8 <MX_GPIO_Init+0x20c>)
 8003994:	f002 fc5e 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Relay_cs_Pin;
 8003998:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800399c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800399e:	2301      	movs	r3, #1
 80039a0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039a2:	2300      	movs	r3, #0
 80039a4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80039a6:	2303      	movs	r3, #3
 80039a8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Relay_cs_GPIO_Port, &GPIO_InitStruct);
 80039aa:	f107 0314 	add.w	r3, r7, #20
 80039ae:	4619      	mov	r1, r3
 80039b0:	4841      	ldr	r0, [pc, #260]	; (8003ab8 <MX_GPIO_Init+0x20c>)
 80039b2:	f002 fc4f 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin
                           PAPin */
  GPIO_InitStruct.Pin = Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 80039b6:	f248 030f 	movw	r3, #32783	; 0x800f
 80039ba:	617b      	str	r3, [r7, #20]
                          |DAC_CLR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039bc:	2301      	movs	r3, #1
 80039be:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039c0:	2300      	movs	r3, #0
 80039c2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80039c4:	2303      	movs	r3, #3
 80039c6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80039c8:	f107 0314 	add.w	r3, r7, #20
 80039cc:	4619      	mov	r1, r3
 80039ce:	483b      	ldr	r0, [pc, #236]	; (8003abc <MX_GPIO_Init+0x210>)
 80039d0:	f002 fc40 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_SYNC_Pin;
 80039d4:	2310      	movs	r3, #16
 80039d6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039d8:	2301      	movs	r3, #1
 80039da:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80039dc:	2301      	movs	r3, #1
 80039de:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80039e0:	2303      	movs	r3, #3
 80039e2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DAC_SYNC_GPIO_Port, &GPIO_InitStruct);
 80039e4:	f107 0314 	add.w	r3, r7, #20
 80039e8:	4619      	mov	r1, r3
 80039ea:	4834      	ldr	r0, [pc, #208]	; (8003abc <MX_GPIO_Init+0x210>)
 80039ec:	f002 fc32 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Display_RS_Pin;
 80039f0:	2301      	movs	r3, #1
 80039f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039f4:	2301      	movs	r3, #1
 80039f6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039f8:	2300      	movs	r3, #0
 80039fa:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80039fc:	2302      	movs	r3, #2
 80039fe:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Display_RS_GPIO_Port, &GPIO_InitStruct);
 8003a00:	f107 0314 	add.w	r3, r7, #20
 8003a04:	4619      	mov	r1, r3
 8003a06:	482e      	ldr	r0, [pc, #184]	; (8003ac0 <MX_GPIO_Init+0x214>)
 8003a08:	f002 fc24 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin
                           PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|Display_Power_Pin
 8003a0c:	f640 433e 	movw	r3, #3134	; 0xc3e
 8003a10:	617b      	str	r3, [r7, #20]
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8003a12:	2311      	movs	r3, #17
 8003a14:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a16:	2300      	movs	r3, #0
 8003a18:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003a1a:	2302      	movs	r3, #2
 8003a1c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003a1e:	f107 0314 	add.w	r3, r7, #20
 8003a22:	4619      	mov	r1, r3
 8003a24:	4826      	ldr	r0, [pc, #152]	; (8003ac0 <MX_GPIO_Init+0x214>)
 8003a26:	f002 fc15 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI2_NSS_Pin;
 8003a2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003a2e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003a30:	2301      	movs	r3, #1
 8003a32:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a34:	2300      	movs	r3, #0
 8003a36:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003a38:	2303      	movs	r3, #3
 8003a3a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI2_NSS_GPIO_Port, &GPIO_InitStruct);
 8003a3c:	f107 0314 	add.w	r3, r7, #20
 8003a40:	4619      	mov	r1, r3
 8003a42:	481f      	ldr	r0, [pc, #124]	; (8003ac0 <MX_GPIO_Init+0x214>)
 8003a44:	f002 fc06 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Encode_Push_Pin;
 8003a48:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a4c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003a4e:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8003a52:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003a54:	2301      	movs	r3, #1
 8003a56:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Encode_Push_GPIO_Port, &GPIO_InitStruct);
 8003a58:	f107 0314 	add.w	r3, r7, #20
 8003a5c:	4619      	mov	r1, r3
 8003a5e:	4817      	ldr	r0, [pc, #92]	; (8003abc <MX_GPIO_Init+0x210>)
 8003a60:	f002 fbf8 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = CPU_IRQ_Pin;
 8003a64:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003a68:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003a6a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8003a6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a70:	2300      	movs	r3, #0
 8003a72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(CPU_IRQ_GPIO_Port, &GPIO_InitStruct);
 8003a74:	f107 0314 	add.w	r3, r7, #20
 8003a78:	4619      	mov	r1, r3
 8003a7a:	4810      	ldr	r0, [pc, #64]	; (8003abc <MX_GPIO_Init+0x210>)
 8003a7c:	f002 fbea 	bl	8006254 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_ALARM_Pin;
 8003a80:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003a84:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003a86:	2300      	movs	r3, #0
 8003a88:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DAC_ALARM_GPIO_Port, &GPIO_InitStruct);
 8003a8e:	f107 0314 	add.w	r3, r7, #20
 8003a92:	4619      	mov	r1, r3
 8003a94:	4809      	ldr	r0, [pc, #36]	; (8003abc <MX_GPIO_Init+0x210>)
 8003a96:	f002 fbdd 	bl	8006254 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 8003a9a:	2200      	movs	r2, #0
 8003a9c:	2101      	movs	r1, #1
 8003a9e:	2028      	movs	r0, #40	; 0x28
 8003aa0:	f002 f99c 	bl	8005ddc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8003aa4:	2028      	movs	r0, #40	; 0x28
 8003aa6:	f002 f9d7 	bl	8005e58 <HAL_NVIC_EnableIRQ>

}
 8003aaa:	bf00      	nop
 8003aac:	3728      	adds	r7, #40	; 0x28
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	bd80      	pop	{r7, pc}
 8003ab2:	bf00      	nop
 8003ab4:	40023800 	.word	0x40023800
 8003ab8:	40020800 	.word	0x40020800
 8003abc:	40020000 	.word	0x40020000
 8003ac0:	40020400 	.word	0x40020400

08003ac4 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8003ac4:	b580      	push	{r7, lr}
 8003ac6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8003ac8:	4b12      	ldr	r3, [pc, #72]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003aca:	4a13      	ldr	r2, [pc, #76]	; (8003b18 <MX_I2C1_Init+0x54>)
 8003acc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8003ace:	4b11      	ldr	r3, [pc, #68]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003ad0:	4a12      	ldr	r2, [pc, #72]	; (8003b1c <MX_I2C1_Init+0x58>)
 8003ad2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003ad4:	4b0f      	ldr	r3, [pc, #60]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003ad6:	2200      	movs	r2, #0
 8003ad8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8003ada:	4b0e      	ldr	r3, [pc, #56]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003adc:	2200      	movs	r2, #0
 8003ade:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003ae0:	4b0c      	ldr	r3, [pc, #48]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003ae2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003ae6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003ae8:	4b0a      	ldr	r3, [pc, #40]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003aea:	2200      	movs	r2, #0
 8003aec:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8003aee:	4b09      	ldr	r3, [pc, #36]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003af0:	2200      	movs	r2, #0
 8003af2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003af4:	4b07      	ldr	r3, [pc, #28]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003af6:	2200      	movs	r2, #0
 8003af8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003afa:	4b06      	ldr	r3, [pc, #24]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003afc:	2200      	movs	r2, #0
 8003afe:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003b00:	4804      	ldr	r0, [pc, #16]	; (8003b14 <MX_I2C1_Init+0x50>)
 8003b02:	f002 fca7 	bl	8006454 <HAL_I2C_Init>
 8003b06:	4603      	mov	r3, r0
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d001      	beq.n	8003b10 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003b0c:	f001 fc5c 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003b10:	bf00      	nop
 8003b12:	bd80      	pop	{r7, pc}
 8003b14:	20000898 	.word	0x20000898
 8003b18:	40005400 	.word	0x40005400
 8003b1c:	000186a0 	.word	0x000186a0

08003b20 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b08a      	sub	sp, #40	; 0x28
 8003b24:	af00      	add	r7, sp, #0
 8003b26:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003b28:	f107 0314 	add.w	r3, r7, #20
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	601a      	str	r2, [r3, #0]
 8003b30:	605a      	str	r2, [r3, #4]
 8003b32:	609a      	str	r2, [r3, #8]
 8003b34:	60da      	str	r2, [r3, #12]
 8003b36:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	4a17      	ldr	r2, [pc, #92]	; (8003b9c <HAL_I2C_MspInit+0x7c>)
 8003b3e:	4293      	cmp	r3, r2
 8003b40:	d128      	bne.n	8003b94 <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003b42:	4b17      	ldr	r3, [pc, #92]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b44:	69db      	ldr	r3, [r3, #28]
 8003b46:	4a16      	ldr	r2, [pc, #88]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b48:	f043 0302 	orr.w	r3, r3, #2
 8003b4c:	61d3      	str	r3, [r2, #28]
 8003b4e:	4b14      	ldr	r3, [pc, #80]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b50:	69db      	ldr	r3, [r3, #28]
 8003b52:	f003 0302 	and.w	r3, r3, #2
 8003b56:	613b      	str	r3, [r7, #16]
 8003b58:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = TMP117_SCL_Pin|TMP117_SDA_Pin;
 8003b5a:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003b5e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003b60:	2312      	movs	r3, #18
 8003b62:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003b64:	2301      	movs	r3, #1
 8003b66:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003b68:	2303      	movs	r3, #3
 8003b6a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003b6c:	2304      	movs	r3, #4
 8003b6e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003b70:	f107 0314 	add.w	r3, r7, #20
 8003b74:	4619      	mov	r1, r3
 8003b76:	480b      	ldr	r0, [pc, #44]	; (8003ba4 <HAL_I2C_MspInit+0x84>)
 8003b78:	f002 fb6c 	bl	8006254 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003b7c:	4b08      	ldr	r3, [pc, #32]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b80:	4a07      	ldr	r2, [pc, #28]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b82:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b86:	6253      	str	r3, [r2, #36]	; 0x24
 8003b88:	4b05      	ldr	r3, [pc, #20]	; (8003ba0 <HAL_I2C_MspInit+0x80>)
 8003b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b8c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b90:	60fb      	str	r3, [r7, #12]
 8003b92:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8003b94:	bf00      	nop
 8003b96:	3728      	adds	r7, #40	; 0x28
 8003b98:	46bd      	mov	sp, r7
 8003b9a:	bd80      	pop	{r7, pc}
 8003b9c:	40005400 	.word	0x40005400
 8003ba0:	40023800 	.word	0x40023800
 8003ba4:	40020400 	.word	0x40020400

08003ba8 <USB_rx_command_buffer_push_refd>:
int16_t Enc_Counter = 0;
uint32_t Display_timeout=0;

int16_t Need_DAC_TEMP_CAL=0;

CIRC_GBUF_DEF(uint8_t, USB_rx_command_buffer, command_buffer_len);
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	b082      	sub	sp, #8
 8003bac:	af00      	add	r7, sp, #0
 8003bae:	6078      	str	r0, [r7, #4]
 8003bb0:	6879      	ldr	r1, [r7, #4]
 8003bb2:	4804      	ldr	r0, [pc, #16]	; (8003bc4 <USB_rx_command_buffer_push_refd+0x1c>)
 8003bb4:	f7fd fcfc 	bl	80015b0 <__circ_gbuf_push>
 8003bb8:	4603      	mov	r3, r0
 8003bba:	4618      	mov	r0, r3
 8003bbc:	3708      	adds	r7, #8
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bd80      	pop	{r7, pc}
 8003bc2:	bf00      	nop
 8003bc4:	20000000 	.word	0x20000000

08003bc8 <USB_rx_command_buffer_pop_refd>:
 8003bc8:	b580      	push	{r7, lr}
 8003bca:	b082      	sub	sp, #8
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	6078      	str	r0, [r7, #4]
 8003bd0:	2200      	movs	r2, #0
 8003bd2:	6879      	ldr	r1, [r7, #4]
 8003bd4:	4803      	ldr	r0, [pc, #12]	; (8003be4 <USB_rx_command_buffer_pop_refd+0x1c>)
 8003bd6:	f7fd fc99 	bl	800150c <__circ_gbuf_pop>
 8003bda:	4603      	mov	r3, r0
 8003bdc:	4618      	mov	r0, r3
 8003bde:	3708      	adds	r7, #8
 8003be0:	46bd      	mov	sp, r7
 8003be2:	bd80      	pop	{r7, pc}
 8003be4:	20000000 	.word	0x20000000

08003be8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003be8:	b5b0      	push	{r4, r5, r7, lr}
 8003bea:	b096      	sub	sp, #88	; 0x58
 8003bec:	af12      	add	r7, sp, #72	; 0x48
  /* USER CODE BEGIN 1 */
	cfg.PDN=0; // DAC power up
 8003bee:	4ba5      	ldr	r3, [pc, #660]	; (8003e84 <main+0x29c>)
 8003bf0:	2200      	movs	r2, #0
 8003bf2:	721a      	strb	r2, [r3, #8]
	cfg.VREFVAL=0x08; // 20 V ± 1.25 V
 8003bf4:	4ba3      	ldr	r3, [pc, #652]	; (8003e84 <main+0x29c>)
 8003bf6:	2208      	movs	r2, #8
 8003bf8:	71da      	strb	r2, [r3, #7]
	cfg.FSET=1; // Enhanced THD
 8003bfa:	4ba2      	ldr	r3, [pc, #648]	; (8003e84 <main+0x29c>)
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	719a      	strb	r2, [r3, #6]
	cfg.DSDO=1; // SDO enabled
 8003c00:	4ba0      	ldr	r3, [pc, #640]	; (8003e84 <main+0x29c>)
 8003c02:	2201      	movs	r2, #1
 8003c04:	715a      	strb	r2, [r3, #5]
	cfg.ENALMP=0; // Indicates end of temperature calibration cycle. ALARM pin pulled low
 8003c06:	4b9f      	ldr	r3, [pc, #636]	; (8003e84 <main+0x29c>)
 8003c08:	2200      	movs	r2, #0
 8003c0a:	711a      	strb	r2, [r3, #4]
	cfg.FSDO=0; // Fast SDO disabled
 8003c0c:	4b9d      	ldr	r3, [pc, #628]	; (8003e84 <main+0x29c>)
 8003c0e:	2200      	movs	r2, #0
 8003c10:	70da      	strb	r2, [r3, #3]
	cfg.LDACMODE=0; // DAC *NOT* updated on LDAC !!!!falling edge!!!!
 8003c12:	4b9c      	ldr	r3, [pc, #624]	; (8003e84 <main+0x29c>)
 8003c14:	2200      	movs	r2, #0
 8003c16:	709a      	strb	r2, [r3, #2]
	cfg.TNH_MASK=0x00; // This bit is writable only when FSET = 0
 8003c18:	4b9a      	ldr	r3, [pc, #616]	; (8003e84 <main+0x29c>)
 8003c1a:	2200      	movs	r2, #0
 8003c1c:	705a      	strb	r2, [r3, #1]
	cfg.EN_TMP_CAL=0; // Temperature calibration feature enabled
 8003c1e:	4b99      	ldr	r3, [pc, #612]	; (8003e84 <main+0x29c>)
 8003c20:	2200      	movs	r2, #0
 8003c22:	701a      	strb	r2, [r3, #0]

	DAC_target_speed=0.1; //  V/s
 8003c24:	4b98      	ldr	r3, [pc, #608]	; (8003e88 <main+0x2a0>)
 8003c26:	4a99      	ldr	r2, [pc, #612]	; (8003e8c <main+0x2a4>)
 8003c28:	601a      	str	r2, [r3, #0]
	DAC_code=DAC_CODE_MIDDLE;
 8003c2a:	4b99      	ldr	r3, [pc, #612]	; (8003e90 <main+0x2a8>)
 8003c2c:	4a99      	ldr	r2, [pc, #612]	; (8003e94 <main+0x2ac>)
 8003c2e:	601a      	str	r2, [r3, #0]
	DAC_code_direction=DIRECTION_UP_STATE;
 8003c30:	4b99      	ldr	r3, [pc, #612]	; (8003e98 <main+0x2b0>)
 8003c32:	2201      	movs	r2, #1
 8003c34:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003c36:	f002 f88b 	bl	8005d50 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003c3a:	f000 fc15 	bl	8004468 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003c3e:	f7ff fe35 	bl	80038ac <MX_GPIO_Init>
  MX_SPI1_Init();
 8003c42:	f001 fbc7 	bl	80053d4 <MX_SPI1_Init>
  MX_SPI2_Init();
 8003c46:	f001 fbf9 	bl	800543c <MX_SPI2_Init>
  MX_USB_DEVICE_Init();
 8003c4a:	f006 ff99 	bl	800ab80 <MX_USB_DEVICE_Init>
  MX_TIM3_Init();
 8003c4e:	f001 fe6f 	bl	8005930 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003c52:	f001 febb 	bl	80059cc <MX_TIM4_Init>
  MX_I2C1_Init();
 8003c56:	f7ff ff35 	bl	8003ac4 <MX_I2C1_Init>
  MX_TIM2_Init();
 8003c5a:	f001 fe1d 	bl	8005898 <MX_TIM2_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8003c5e:	f000 fc4f 	bl	8004500 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */

	init_LCD();
 8003c62:	f7fe fbbd 	bl	80023e0 <init_LCD>
  LcdUpdate();
  LcdClear_massive();
  HAL_Delay(3000); //WarmUP
	 */

	load_data_from_EEPROM();
 8003c66:	f7ff fcdb 	bl	8003620 <load_data_from_EEPROM>
	TMP117_Initialization(hi2c1);
 8003c6a:	4c8c      	ldr	r4, [pc, #560]	; (8003e9c <main+0x2b4>)
 8003c6c:	4668      	mov	r0, sp
 8003c6e:	f104 0310 	add.w	r3, r4, #16
 8003c72:	2244      	movs	r2, #68	; 0x44
 8003c74:	4619      	mov	r1, r3
 8003c76:	f007 fb3d 	bl	800b2f4 <memcpy>
 8003c7a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003c7e:	f001 ffe9 	bl	8005c54 <TMP117_Initialization>
	DDS_Init();
 8003c82:	f7fd ffdd 	bl	8001c40 <DDS_Init>
	DAC_SendInit();
 8003c86:	f00c fbb3 	bl	80103f0 <__DAC_SendInit_veneer>
	DAC_Write(DAC_code);
 8003c8a:	4b81      	ldr	r3, [pc, #516]	; (8003e90 <main+0x2a8>)
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	4618      	mov	r0, r3
 8003c90:	f00c fbb2 	bl	80103f8 <__DAC_Write_veneer>

	DAC_TEMP_CAL();
 8003c94:	f7fd fe28 	bl	80018e8 <DAC_TEMP_CAL>

	HAL_TIM_Base_Start_IT(&htim3);
 8003c98:	4881      	ldr	r0, [pc, #516]	; (8003ea0 <main+0x2b8>)
 8003c9a:	f005 f915 	bl	8008ec8 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim2);
 8003c9e:	4881      	ldr	r0, [pc, #516]	; (8003ea4 <main+0x2bc>)
 8003ca0:	f005 f912 	bl	8008ec8 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8003ca4:	213c      	movs	r1, #60	; 0x3c
 8003ca6:	4880      	ldr	r0, [pc, #512]	; (8003ea8 <main+0x2c0>)
 8003ca8:	f005 f9b6 	bl	8009018 <HAL_TIM_Encoder_Start>


	output_state(Output_off_STATE);
 8003cac:	2000      	movs	r0, #0
 8003cae:	f7fe fca1 	bl	80025f4 <output_state>
	CPLD_control(CPLD_OFF_STATE);
 8003cb2:	2000      	movs	r0, #0
 8003cb4:	f7fd fd84 	bl	80017c0 <CPLD_control>

	send_answer_to_CDC(CLEAR_TYPE_1);
 8003cb8:	2004      	movs	r0, #4
 8003cba:	f7fe ffff 	bl	8002cbc <send_answer_to_CDC>

	cmd_CAP_SET(C_ref);
 8003cbe:	4b7b      	ldr	r3, [pc, #492]	; (8003eac <main+0x2c4>)
 8003cc0:	781b      	ldrb	r3, [r3, #0]
 8003cc2:	4618      	mov	r0, r3
 8003cc4:	f7ff fa48 	bl	8003158 <cmd_CAP_SET>
	{
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(USB_CDC_End_Line_Received)
 8003cc8:	4b79      	ldr	r3, [pc, #484]	; (8003eb0 <main+0x2c8>)
 8003cca:	781b      	ldrb	r3, [r3, #0]
 8003ccc:	b2db      	uxtb	r3, r3
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	d062      	beq.n	8003d98 <main+0x1b0>
		{
			uint8_t i=0,x=0;
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	73fb      	strb	r3, [r7, #15]
 8003cd6:	2300      	movs	r3, #0
 8003cd8:	73bb      	strb	r3, [r7, #14]
			USB_CDC_End_Line_Received=0;
 8003cda:	4b75      	ldr	r3, [pc, #468]	; (8003eb0 <main+0x2c8>)
 8003cdc:	2200      	movs	r2, #0
 8003cde:	701a      	strb	r2, [r3, #0]
			while (1) {
				if (i>=command_buffer_len) break;
 8003ce0:	7bfb      	ldrb	r3, [r7, #15]
 8003ce2:	2b3f      	cmp	r3, #63	; 0x3f
 8003ce4:	d81a      	bhi.n	8003d1c <main+0x134>
				if (CIRC_GBUF_POP(USB_rx_command_buffer,&command_buffer[i])) command_buffer[i]='\n';
 8003ce6:	7bfb      	ldrb	r3, [r7, #15]
 8003ce8:	4a72      	ldr	r2, [pc, #456]	; (8003eb4 <main+0x2cc>)
 8003cea:	4413      	add	r3, r2
 8003cec:	4618      	mov	r0, r3
 8003cee:	f7ff ff6b 	bl	8003bc8 <USB_rx_command_buffer_pop_refd>
 8003cf2:	4603      	mov	r3, r0
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d003      	beq.n	8003d00 <main+0x118>
 8003cf8:	7bfb      	ldrb	r3, [r7, #15]
 8003cfa:	4a6e      	ldr	r2, [pc, #440]	; (8003eb4 <main+0x2cc>)
 8003cfc:	210a      	movs	r1, #10
 8003cfe:	54d1      	strb	r1, [r2, r3]
				if (command_buffer[i]=='\n' || command_buffer[i]=='\r') break;
 8003d00:	7bfb      	ldrb	r3, [r7, #15]
 8003d02:	4a6c      	ldr	r2, [pc, #432]	; (8003eb4 <main+0x2cc>)
 8003d04:	5cd3      	ldrb	r3, [r2, r3]
 8003d06:	2b0a      	cmp	r3, #10
 8003d08:	d009      	beq.n	8003d1e <main+0x136>
 8003d0a:	7bfb      	ldrb	r3, [r7, #15]
 8003d0c:	4a69      	ldr	r2, [pc, #420]	; (8003eb4 <main+0x2cc>)
 8003d0e:	5cd3      	ldrb	r3, [r2, r3]
 8003d10:	2b0d      	cmp	r3, #13
 8003d12:	d004      	beq.n	8003d1e <main+0x136>
				i++;
 8003d14:	7bfb      	ldrb	r3, [r7, #15]
 8003d16:	3301      	adds	r3, #1
 8003d18:	73fb      	strb	r3, [r7, #15]
				if (i>=command_buffer_len) break;
 8003d1a:	e7e1      	b.n	8003ce0 <main+0xf8>
 8003d1c:	bf00      	nop
			}
			i=0;
 8003d1e:	2300      	movs	r3, #0
 8003d20:	73fb      	strb	r3, [r7, #15]
			x=0;
 8003d22:	2300      	movs	r3, #0
 8003d24:	73bb      	strb	r3, [r7, #14]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003d26:	e017      	b.n	8003d58 <main+0x170>
			{
				if (command_buffer[i]=='\177') // Backspace
 8003d28:	7bfb      	ldrb	r3, [r7, #15]
 8003d2a:	4a62      	ldr	r2, [pc, #392]	; (8003eb4 <main+0x2cc>)
 8003d2c:	5cd3      	ldrb	r3, [r2, r3]
 8003d2e:	2b7f      	cmp	r3, #127	; 0x7f
 8003d30:	d106      	bne.n	8003d40 <main+0x158>
				{
					if(x>0)x--;
 8003d32:	7bbb      	ldrb	r3, [r7, #14]
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	d00c      	beq.n	8003d52 <main+0x16a>
 8003d38:	7bbb      	ldrb	r3, [r7, #14]
 8003d3a:	3b01      	subs	r3, #1
 8003d3c:	73bb      	strb	r3, [r7, #14]
 8003d3e:	e008      	b.n	8003d52 <main+0x16a>
				}
				else
				{
					command_buffer[x]=command_buffer[i];
 8003d40:	7bfa      	ldrb	r2, [r7, #15]
 8003d42:	7bbb      	ldrb	r3, [r7, #14]
 8003d44:	495b      	ldr	r1, [pc, #364]	; (8003eb4 <main+0x2cc>)
 8003d46:	5c89      	ldrb	r1, [r1, r2]
 8003d48:	4a5a      	ldr	r2, [pc, #360]	; (8003eb4 <main+0x2cc>)
 8003d4a:	54d1      	strb	r1, [r2, r3]
					x++;
 8003d4c:	7bbb      	ldrb	r3, [r7, #14]
 8003d4e:	3301      	adds	r3, #1
 8003d50:	73bb      	strb	r3, [r7, #14]
				}
				i++;
 8003d52:	7bfb      	ldrb	r3, [r7, #15]
 8003d54:	3301      	adds	r3, #1
 8003d56:	73fb      	strb	r3, [r7, #15]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003d58:	7bfb      	ldrb	r3, [r7, #15]
 8003d5a:	4a56      	ldr	r2, [pc, #344]	; (8003eb4 <main+0x2cc>)
 8003d5c:	5cd3      	ldrb	r3, [r2, r3]
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d00a      	beq.n	8003d78 <main+0x190>
 8003d62:	7bfb      	ldrb	r3, [r7, #15]
 8003d64:	2b3f      	cmp	r3, #63	; 0x3f
 8003d66:	d9df      	bls.n	8003d28 <main+0x140>
			}
			while (x<command_buffer_len)
 8003d68:	e006      	b.n	8003d78 <main+0x190>
			{
				command_buffer[x]='\0';
 8003d6a:	7bbb      	ldrb	r3, [r7, #14]
 8003d6c:	4a51      	ldr	r2, [pc, #324]	; (8003eb4 <main+0x2cc>)
 8003d6e:	2100      	movs	r1, #0
 8003d70:	54d1      	strb	r1, [r2, r3]
				x++;
 8003d72:	7bbb      	ldrb	r3, [r7, #14]
 8003d74:	3301      	adds	r3, #1
 8003d76:	73bb      	strb	r3, [r7, #14]
			while (x<command_buffer_len)
 8003d78:	7bbb      	ldrb	r3, [r7, #14]
 8003d7a:	2b3f      	cmp	r3, #63	; 0x3f
 8003d7c:	d9f5      	bls.n	8003d6a <main+0x182>
			}
			command_buffer[command_buffer_len-1]='\0';
 8003d7e:	4b4d      	ldr	r3, [pc, #308]	; (8003eb4 <main+0x2cc>)
 8003d80:	2200      	movs	r2, #0
 8003d82:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f

			Parsing_USB_command();
 8003d86:	f000 fc69 	bl	800465c <Parsing_USB_command>
			if(Display_status==0)Display_need_wakeup=1;
 8003d8a:	4b4b      	ldr	r3, [pc, #300]	; (8003eb8 <main+0x2d0>)
 8003d8c:	781b      	ldrb	r3, [r3, #0]
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d102      	bne.n	8003d98 <main+0x1b0>
 8003d92:	4b4a      	ldr	r3, [pc, #296]	; (8003ebc <main+0x2d4>)
 8003d94:	2201      	movs	r2, #1
 8003d96:	701a      	strb	r2, [r3, #0]
		}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(Need_DAC_TEMP_CAL>=6000 && Current_output_status==Output_off_STATE) // Each 5 min, do DAC temperature calibration, if output is off
 8003d98:	4b49      	ldr	r3, [pc, #292]	; (8003ec0 <main+0x2d8>)
 8003d9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003d9e:	f241 726f 	movw	r2, #5999	; 0x176f
 8003da2:	4293      	cmp	r3, r2
 8003da4:	dd08      	ble.n	8003db8 <main+0x1d0>
 8003da6:	4b47      	ldr	r3, [pc, #284]	; (8003ec4 <main+0x2dc>)
 8003da8:	781b      	ldrb	r3, [r3, #0]
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	d104      	bne.n	8003db8 <main+0x1d0>
		{
			DAC_TEMP_CAL();
 8003dae:	f7fd fd9b 	bl	80018e8 <DAC_TEMP_CAL>
			Need_DAC_TEMP_CAL=0;
 8003db2:	4b43      	ldr	r3, [pc, #268]	; (8003ec0 <main+0x2d8>)
 8003db4:	2200      	movs	r2, #0
 8003db6:	801a      	strh	r2, [r3, #0]
		}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(Need_update_DDS)
 8003db8:	4b43      	ldr	r3, [pc, #268]	; (8003ec8 <main+0x2e0>)
 8003dba:	781b      	ldrb	r3, [r3, #0]
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d018      	beq.n	8003df2 <main+0x20a>
		{
			if(Ramp_dac_step_complete)
 8003dc0:	4b42      	ldr	r3, [pc, #264]	; (8003ecc <main+0x2e4>)
 8003dc2:	781b      	ldrb	r3, [r3, #0]
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d007      	beq.n	8003dd8 <main+0x1f0>
			{
				DDS_Update();
 8003dc8:	f7fe f816 	bl	8001df8 <DDS_Update>
				Need_update_DDS=0;
 8003dcc:	4b3e      	ldr	r3, [pc, #248]	; (8003ec8 <main+0x2e0>)
 8003dce:	2200      	movs	r2, #0
 8003dd0:	701a      	strb	r2, [r3, #0]
				Ramp_dac_step_complete=0;
 8003dd2:	4b3e      	ldr	r3, [pc, #248]	; (8003ecc <main+0x2e4>)
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	701a      	strb	r2, [r3, #0]
			}
			if(mode==AMP_SCREEN)
 8003dd8:	4b3d      	ldr	r3, [pc, #244]	; (8003ed0 <main+0x2e8>)
 8003dda:	781b      	ldrb	r3, [r3, #0]
 8003ddc:	2b04      	cmp	r3, #4
 8003dde:	d106      	bne.n	8003dee <main+0x206>
			{
				Recalculate_ramp_speed(AMP_SCREEN,amp_target_speed);
 8003de0:	4b3c      	ldr	r3, [pc, #240]	; (8003ed4 <main+0x2ec>)
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	4619      	mov	r1, r3
 8003de6:	2004      	movs	r0, #4
 8003de8:	f7ff fa3e 	bl	8003268 <Recalculate_ramp_speed>
 8003dec:	e001      	b.n	8003df2 <main+0x20a>
			}
			else
			{
				DDS_Calculation();
 8003dee:	f7fd fdeb 	bl	80019c8 <DDS_Calculation>
		}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(Need_off_output==1)
 8003df2:	4b39      	ldr	r3, [pc, #228]	; (8003ed8 <main+0x2f0>)
 8003df4:	781b      	ldrb	r3, [r3, #0]
 8003df6:	2b01      	cmp	r3, #1
 8003df8:	d10a      	bne.n	8003e10 <main+0x228>
		{
			Push_start_button=10;
 8003dfa:	4b38      	ldr	r3, [pc, #224]	; (8003edc <main+0x2f4>)
 8003dfc:	220a      	movs	r2, #10
 8003dfe:	701a      	strb	r2, [r3, #0]
			cmd_SWEEP_STOP();
 8003e00:	f7ff f830 	bl	8002e64 <cmd_SWEEP_STOP>
			output_state(Output_off_STATE);
 8003e04:	2000      	movs	r0, #0
 8003e06:	f7fe fbf5 	bl	80025f4 <output_state>
			Need_off_output=0;
 8003e0a:	4b33      	ldr	r3, [pc, #204]	; (8003ed8 <main+0x2f0>)
 8003e0c:	2200      	movs	r2, #0
 8003e0e:	701a      	strb	r2, [r3, #0]
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------

		if(Push_Encode_button>2 && Push_Encode_button<5)
 8003e10:	4b33      	ldr	r3, [pc, #204]	; (8003ee0 <main+0x2f8>)
 8003e12:	781b      	ldrb	r3, [r3, #0]
 8003e14:	2b02      	cmp	r3, #2
 8003e16:	d913      	bls.n	8003e40 <main+0x258>
 8003e18:	4b31      	ldr	r3, [pc, #196]	; (8003ee0 <main+0x2f8>)
 8003e1a:	781b      	ldrb	r3, [r3, #0]
 8003e1c:	2b04      	cmp	r3, #4
 8003e1e:	d80f      	bhi.n	8003e40 <main+0x258>
		{
			mode++;
 8003e20:	4b2b      	ldr	r3, [pc, #172]	; (8003ed0 <main+0x2e8>)
 8003e22:	781b      	ldrb	r3, [r3, #0]
 8003e24:	3301      	adds	r3, #1
 8003e26:	b2da      	uxtb	r2, r3
 8003e28:	4b29      	ldr	r3, [pc, #164]	; (8003ed0 <main+0x2e8>)
 8003e2a:	701a      	strb	r2, [r3, #0]
			if(mode>DIR_SELECT_SCREEN)
 8003e2c:	4b28      	ldr	r3, [pc, #160]	; (8003ed0 <main+0x2e8>)
 8003e2e:	781b      	ldrb	r3, [r3, #0]
 8003e30:	2b07      	cmp	r3, #7
 8003e32:	d902      	bls.n	8003e3a <main+0x252>
				mode=dU_dt_SCREEN;
 8003e34:	4b26      	ldr	r3, [pc, #152]	; (8003ed0 <main+0x2e8>)
 8003e36:	2203      	movs	r2, #3
 8003e38:	701a      	strb	r2, [r3, #0]
			Push_Encode_button=5;
 8003e3a:	4b29      	ldr	r3, [pc, #164]	; (8003ee0 <main+0x2f8>)
 8003e3c:	2205      	movs	r2, #5
 8003e3e:	701a      	strb	r2, [r3, #0]
		}


		if(Push_start_button>2 && Push_start_button<10)
 8003e40:	4b26      	ldr	r3, [pc, #152]	; (8003edc <main+0x2f4>)
 8003e42:	781b      	ldrb	r3, [r3, #0]
 8003e44:	2b02      	cmp	r3, #2
 8003e46:	d954      	bls.n	8003ef2 <main+0x30a>
 8003e48:	4b24      	ldr	r3, [pc, #144]	; (8003edc <main+0x2f4>)
 8003e4a:	781b      	ldrb	r3, [r3, #0]
 8003e4c:	2b09      	cmp	r3, #9
 8003e4e:	d850      	bhi.n	8003ef2 <main+0x30a>
		{
			if(mode==VOLT_SCREEN)
 8003e50:	4b1f      	ldr	r3, [pc, #124]	; (8003ed0 <main+0x2e8>)
 8003e52:	781b      	ldrb	r3, [r3, #0]
 8003e54:	2b05      	cmp	r3, #5
 8003e56:	d10d      	bne.n	8003e74 <main+0x28c>
			{
				if(Current_output_status==Output_off_STATE)
 8003e58:	4b1a      	ldr	r3, [pc, #104]	; (8003ec4 <main+0x2dc>)
 8003e5a:	781b      	ldrb	r3, [r3, #0]
 8003e5c:	2b00      	cmp	r3, #0
 8003e5e:	d105      	bne.n	8003e6c <main+0x284>
				{
					cmd_SET_OUTPUT_VOLTAGE(Voltage);
 8003e60:	4b20      	ldr	r3, [pc, #128]	; (8003ee4 <main+0x2fc>)
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	4618      	mov	r0, r3
 8003e66:	f7ff f84f 	bl	8002f08 <cmd_SET_OUTPUT_VOLTAGE>
 8003e6a:	e03f      	b.n	8003eec <main+0x304>
				}
				else
				{
					output_state(Output_off_STATE);
 8003e6c:	2000      	movs	r0, #0
 8003e6e:	f7fe fbc1 	bl	80025f4 <output_state>
 8003e72:	e03b      	b.n	8003eec <main+0x304>
				}
			}
			else
			{
				if(cfg.LDACMODE==0)
 8003e74:	4b03      	ldr	r3, [pc, #12]	; (8003e84 <main+0x29c>)
 8003e76:	789b      	ldrb	r3, [r3, #2]
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	d135      	bne.n	8003ee8 <main+0x300>
				{
					cmd_SWEEP_START();
 8003e7c:	f7fe ffe4 	bl	8002e48 <cmd_SWEEP_START>
 8003e80:	e034      	b.n	8003eec <main+0x304>
 8003e82:	bf00      	nop
 8003e84:	20000984 	.word	0x20000984
 8003e88:	20000998 	.word	0x20000998
 8003e8c:	3dcccccd 	.word	0x3dcccccd
 8003e90:	200009b8 	.word	0x200009b8
 8003e94:	0007ffff 	.word	0x0007ffff
 8003e98:	200009bc 	.word	0x200009bc
 8003e9c:	20000898 	.word	0x20000898
 8003ea0:	20000abc 	.word	0x20000abc
 8003ea4:	20000a7c 	.word	0x20000a7c
 8003ea8:	20000afc 	.word	0x20000afc
 8003eac:	200009a0 	.word	0x200009a0
 8003eb0:	20000854 	.word	0x20000854
 8003eb4:	20000858 	.word	0x20000858
 8003eb8:	200009be 	.word	0x200009be
 8003ebc:	20000020 	.word	0x20000020
 8003ec0:	20000938 	.word	0x20000938
 8003ec4:	200009b4 	.word	0x200009b4
 8003ec8:	200009c0 	.word	0x200009c0
 8003ecc:	200009c1 	.word	0x200009c1
 8003ed0:	20000018 	.word	0x20000018
 8003ed4:	2000000c 	.word	0x2000000c
 8003ed8:	200009c2 	.word	0x200009c2
 8003edc:	200009c3 	.word	0x200009c3
 8003ee0:	200009c4 	.word	0x200009c4
 8003ee4:	200009a4 	.word	0x200009a4
				}
				else
				{
					cmd_SWEEP_STOP();
 8003ee8:	f7fe ffbc 	bl	8002e64 <cmd_SWEEP_STOP>
				}
			}
			Push_start_button=10;
 8003eec:	4bb6      	ldr	r3, [pc, #728]	; (80041c8 <main+0x5e0>)
 8003eee:	220a      	movs	r2, #10
 8003ef0:	701a      	strb	r2, [r3, #0]
		}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(Need_update_Display && Display_status)
 8003ef2:	4bb6      	ldr	r3, [pc, #728]	; (80041cc <main+0x5e4>)
 8003ef4:	781b      	ldrb	r3, [r3, #0]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d02e      	beq.n	8003f58 <main+0x370>
 8003efa:	4bb5      	ldr	r3, [pc, #724]	; (80041d0 <main+0x5e8>)
 8003efc:	781b      	ldrb	r3, [r3, #0]
 8003efe:	2b00      	cmp	r3, #0
 8003f00:	d02a      	beq.n	8003f58 <main+0x370>
		{
			switch(mode)
 8003f02:	4bb4      	ldr	r3, [pc, #720]	; (80041d4 <main+0x5ec>)
 8003f04:	781b      	ldrb	r3, [r3, #0]
 8003f06:	3b03      	subs	r3, #3
 8003f08:	2b04      	cmp	r3, #4
 8003f0a:	d821      	bhi.n	8003f50 <main+0x368>
 8003f0c:	a201      	add	r2, pc, #4	; (adr r2, 8003f14 <main+0x32c>)
 8003f0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f12:	bf00      	nop
 8003f14:	08003f29 	.word	0x08003f29
 8003f18:	08003f31 	.word	0x08003f31
 8003f1c:	08003f39 	.word	0x08003f39
 8003f20:	08003f49 	.word	0x08003f49
 8003f24:	08003f41 	.word	0x08003f41
			{
			//----------------------------------------------------------//
			case dU_dt_SCREEN:
				display_screen(dU_dt_SCREEN);
 8003f28:	2003      	movs	r0, #3
 8003f2a:	f7fe fc83 	bl	8002834 <display_screen>
			break;
 8003f2e:	e00f      	b.n	8003f50 <main+0x368>
			case AMP_SCREEN:
				display_screen(AMP_SCREEN);
 8003f30:	2004      	movs	r0, #4
 8003f32:	f7fe fc7f 	bl	8002834 <display_screen>
			break;
 8003f36:	e00b      	b.n	8003f50 <main+0x368>
			case VOLT_SCREEN:
				display_screen(VOLT_SCREEN);
 8003f38:	2005      	movs	r0, #5
 8003f3a:	f7fe fc7b 	bl	8002834 <display_screen>
			break;
 8003f3e:	e007      	b.n	8003f50 <main+0x368>
			case DIR_SELECT_SCREEN:
				display_screen(DIR_SELECT_SCREEN);
 8003f40:	2007      	movs	r0, #7
 8003f42:	f7fe fc77 	bl	8002834 <display_screen>
			break;
 8003f46:	e003      	b.n	8003f50 <main+0x368>
			case CAP_SELECT_SCREEN:
				display_screen(CAP_SELECT_SCREEN);
 8003f48:	2006      	movs	r0, #6
 8003f4a:	f7fe fc73 	bl	8002834 <display_screen>
			break;
 8003f4e:	bf00      	nop
			}
			LcdUpdate();
 8003f50:	f7fe f81a 	bl	8001f88 <LcdUpdate>
			LcdClear_massive();
 8003f54:	f7fe f852 	bl	8001ffc <LcdClear_massive>
		}
//----------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------
		if(Enc_Counter!=0)
 8003f58:	4b9f      	ldr	r3, [pc, #636]	; (80041d8 <main+0x5f0>)
 8003f5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	f000 8225 	beq.w	80043ae <main+0x7c6>
		{
		switch(mode)
 8003f64:	4b9b      	ldr	r3, [pc, #620]	; (80041d4 <main+0x5ec>)
 8003f66:	781b      	ldrb	r3, [r3, #0]
 8003f68:	3b03      	subs	r3, #3
 8003f6a:	2b04      	cmp	r3, #4
 8003f6c:	f200 8226 	bhi.w	80043bc <main+0x7d4>
 8003f70:	a201      	add	r2, pc, #4	; (adr r2, 8003f78 <main+0x390>)
 8003f72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f76:	bf00      	nop
 8003f78:	08003f8d 	.word	0x08003f8d
 8003f7c:	080040a3 	.word	0x080040a3
 8003f80:	080042b3 	.word	0x080042b3
 8003f84:	08004247 	.word	0x08004247
 8003f88:	0800427b 	.word	0x0800427b
		{
		//----------------------------------------------------------//
		case dU_dt_SCREEN:
		{
			if(Enc_Counter>2 || Enc_Counter<-2)
 8003f8c:	4b92      	ldr	r3, [pc, #584]	; (80041d8 <main+0x5f0>)
 8003f8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003f92:	2b02      	cmp	r3, #2
 8003f94:	dc05      	bgt.n	8003fa2 <main+0x3ba>
 8003f96:	4b90      	ldr	r3, [pc, #576]	; (80041d8 <main+0x5f0>)
 8003f98:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003f9c:	f113 0f02 	cmn.w	r3, #2
 8003fa0:	da37      	bge.n	8004012 <main+0x42a>
			{
				Recalculate_ramp_speed(dU_dt_SCREEN, round((ramp_target_speed+Enc_Counter*1E-2)*1E2)/1E2);
 8003fa2:	4b8e      	ldr	r3, [pc, #568]	; (80041dc <main+0x5f4>)
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	4618      	mov	r0, r3
 8003fa8:	f7fc fa60 	bl	800046c <__aeabi_f2d>
 8003fac:	4604      	mov	r4, r0
 8003fae:	460d      	mov	r5, r1
 8003fb0:	4b89      	ldr	r3, [pc, #548]	; (80041d8 <main+0x5f0>)
 8003fb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	f7fc fa46 	bl	8000448 <__aeabi_i2d>
 8003fbc:	a37e      	add	r3, pc, #504	; (adr r3, 80041b8 <main+0x5d0>)
 8003fbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fc2:	f7fc faab 	bl	800051c <__aeabi_dmul>
 8003fc6:	4602      	mov	r2, r0
 8003fc8:	460b      	mov	r3, r1
 8003fca:	4620      	mov	r0, r4
 8003fcc:	4629      	mov	r1, r5
 8003fce:	f7fc f8ef 	bl	80001b0 <__adddf3>
 8003fd2:	4602      	mov	r2, r0
 8003fd4:	460b      	mov	r3, r1
 8003fd6:	4610      	mov	r0, r2
 8003fd8:	4619      	mov	r1, r3
 8003fda:	f04f 0200 	mov.w	r2, #0
 8003fde:	4b80      	ldr	r3, [pc, #512]	; (80041e0 <main+0x5f8>)
 8003fe0:	f7fc fa9c 	bl	800051c <__aeabi_dmul>
 8003fe4:	4602      	mov	r2, r0
 8003fe6:	460b      	mov	r3, r1
 8003fe8:	4610      	mov	r0, r2
 8003fea:	4619      	mov	r1, r3
 8003fec:	f007 f910 	bl	800b210 <round>
 8003ff0:	f04f 0200 	mov.w	r2, #0
 8003ff4:	4b7a      	ldr	r3, [pc, #488]	; (80041e0 <main+0x5f8>)
 8003ff6:	f7fc fbbb 	bl	8000770 <__aeabi_ddiv>
 8003ffa:	4602      	mov	r2, r0
 8003ffc:	460b      	mov	r3, r1
 8003ffe:	4610      	mov	r0, r2
 8004000:	4619      	mov	r1, r3
 8004002:	f7fc fd83 	bl	8000b0c <__aeabi_d2f>
 8004006:	4603      	mov	r3, r0
 8004008:	4619      	mov	r1, r3
 800400a:	2003      	movs	r0, #3
 800400c:	f7ff f92c 	bl	8003268 <Recalculate_ramp_speed>
 8004010:	e036      	b.n	8004080 <main+0x498>
			}
			else
			{
				Recalculate_ramp_speed(dU_dt_SCREEN, round((ramp_target_speed+Enc_Counter*1E-3)*1E3)/1E3);
 8004012:	4b72      	ldr	r3, [pc, #456]	; (80041dc <main+0x5f4>)
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	4618      	mov	r0, r3
 8004018:	f7fc fa28 	bl	800046c <__aeabi_f2d>
 800401c:	4604      	mov	r4, r0
 800401e:	460d      	mov	r5, r1
 8004020:	4b6d      	ldr	r3, [pc, #436]	; (80041d8 <main+0x5f0>)
 8004022:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004026:	4618      	mov	r0, r3
 8004028:	f7fc fa0e 	bl	8000448 <__aeabi_i2d>
 800402c:	a364      	add	r3, pc, #400	; (adr r3, 80041c0 <main+0x5d8>)
 800402e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004032:	f7fc fa73 	bl	800051c <__aeabi_dmul>
 8004036:	4602      	mov	r2, r0
 8004038:	460b      	mov	r3, r1
 800403a:	4620      	mov	r0, r4
 800403c:	4629      	mov	r1, r5
 800403e:	f7fc f8b7 	bl	80001b0 <__adddf3>
 8004042:	4602      	mov	r2, r0
 8004044:	460b      	mov	r3, r1
 8004046:	4610      	mov	r0, r2
 8004048:	4619      	mov	r1, r3
 800404a:	f04f 0200 	mov.w	r2, #0
 800404e:	4b65      	ldr	r3, [pc, #404]	; (80041e4 <main+0x5fc>)
 8004050:	f7fc fa64 	bl	800051c <__aeabi_dmul>
 8004054:	4602      	mov	r2, r0
 8004056:	460b      	mov	r3, r1
 8004058:	4610      	mov	r0, r2
 800405a:	4619      	mov	r1, r3
 800405c:	f007 f8d8 	bl	800b210 <round>
 8004060:	f04f 0200 	mov.w	r2, #0
 8004064:	4b5f      	ldr	r3, [pc, #380]	; (80041e4 <main+0x5fc>)
 8004066:	f7fc fb83 	bl	8000770 <__aeabi_ddiv>
 800406a:	4602      	mov	r2, r0
 800406c:	460b      	mov	r3, r1
 800406e:	4610      	mov	r0, r2
 8004070:	4619      	mov	r1, r3
 8004072:	f7fc fd4b 	bl	8000b0c <__aeabi_d2f>
 8004076:	4603      	mov	r3, r0
 8004078:	4619      	mov	r1, r3
 800407a:	2003      	movs	r0, #3
 800407c:	f7ff f8f4 	bl	8003268 <Recalculate_ramp_speed>
			}
			Enc_Counter=0;
 8004080:	4b55      	ldr	r3, [pc, #340]	; (80041d8 <main+0x5f0>)
 8004082:	2200      	movs	r2, #0
 8004084:	801a      	strh	r2, [r3, #0]
			if(Current_output_status!=Output_off_STATE && cfg.LDACMODE==0)output_state(Output_auto_STATE);
 8004086:	4b58      	ldr	r3, [pc, #352]	; (80041e8 <main+0x600>)
 8004088:	781b      	ldrb	r3, [r3, #0]
 800408a:	2b00      	cmp	r3, #0
 800408c:	f000 8191 	beq.w	80043b2 <main+0x7ca>
 8004090:	4b56      	ldr	r3, [pc, #344]	; (80041ec <main+0x604>)
 8004092:	789b      	ldrb	r3, [r3, #2]
 8004094:	2b00      	cmp	r3, #0
 8004096:	f040 818c 	bne.w	80043b2 <main+0x7ca>
 800409a:	2004      	movs	r0, #4
 800409c:	f7fe faaa 	bl	80025f4 <output_state>
		}
		break;
 80040a0:	e187      	b.n	80043b2 <main+0x7ca>
		case AMP_SCREEN:
			{
				uint8_t Ei,Eix;
				float amp_target_speed_maximum_tmp=amp_target_speed_maximum;
 80040a2:	4b53      	ldr	r3, [pc, #332]	; (80041f0 <main+0x608>)
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	60bb      	str	r3, [r7, #8]
				float amp_target_speed_tmp=amp_target_speed;
 80040a8:	4b52      	ldr	r3, [pc, #328]	; (80041f4 <main+0x60c>)
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	607b      	str	r3, [r7, #4]
				for(Ei=1;Ei<21;Ei++)
 80040ae:	2301      	movs	r3, #1
 80040b0:	737b      	strb	r3, [r7, #13]
 80040b2:	e016      	b.n	80040e2 <main+0x4fa>
				{
					amp_target_speed_maximum_tmp*=10;
 80040b4:	4950      	ldr	r1, [pc, #320]	; (80041f8 <main+0x610>)
 80040b6:	68b8      	ldr	r0, [r7, #8]
 80040b8:	f7fc fe86 	bl	8000dc8 <__aeabi_fmul>
 80040bc:	4603      	mov	r3, r0
 80040be:	60bb      	str	r3, [r7, #8]
					amp_target_speed_tmp*=10;
 80040c0:	494d      	ldr	r1, [pc, #308]	; (80041f8 <main+0x610>)
 80040c2:	6878      	ldr	r0, [r7, #4]
 80040c4:	f7fc fe80 	bl	8000dc8 <__aeabi_fmul>
 80040c8:	4603      	mov	r3, r0
 80040ca:	607b      	str	r3, [r7, #4]
					if(amp_target_speed_maximum_tmp>=1)
 80040cc:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80040d0:	68b8      	ldr	r0, [r7, #8]
 80040d2:	f7fd f82b 	bl	800112c <__aeabi_fcmpge>
 80040d6:	4603      	mov	r3, r0
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d106      	bne.n	80040ea <main+0x502>
				for(Ei=1;Ei<21;Ei++)
 80040dc:	7b7b      	ldrb	r3, [r7, #13]
 80040de:	3301      	adds	r3, #1
 80040e0:	737b      	strb	r3, [r7, #13]
 80040e2:	7b7b      	ldrb	r3, [r7, #13]
 80040e4:	2b14      	cmp	r3, #20
 80040e6:	d9e5      	bls.n	80040b4 <main+0x4cc>
 80040e8:	e000      	b.n	80040ec <main+0x504>
						break;
 80040ea:	bf00      	nop
				}
				if(Enc_Counter>2 || Enc_Counter<-2)
 80040ec:	4b3a      	ldr	r3, [pc, #232]	; (80041d8 <main+0x5f0>)
 80040ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040f2:	2b02      	cmp	r3, #2
 80040f4:	dc05      	bgt.n	8004102 <main+0x51a>
 80040f6:	4b38      	ldr	r3, [pc, #224]	; (80041d8 <main+0x5f0>)
 80040f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040fc:	f113 0f02 	cmn.w	r3, #2
 8004100:	da2a      	bge.n	8004158 <main+0x570>
				{
					amp_target_speed_tmp*=100;
 8004102:	493e      	ldr	r1, [pc, #248]	; (80041fc <main+0x614>)
 8004104:	6878      	ldr	r0, [r7, #4]
 8004106:	f7fc fe5f 	bl	8000dc8 <__aeabi_fmul>
 800410a:	4603      	mov	r3, r0
 800410c:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp+=Enc_Counter;
 800410e:	4b32      	ldr	r3, [pc, #200]	; (80041d8 <main+0x5f0>)
 8004110:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004114:	4618      	mov	r0, r3
 8004116:	f7fc fe03 	bl	8000d20 <__aeabi_i2f>
 800411a:	4603      	mov	r3, r0
 800411c:	4619      	mov	r1, r3
 800411e:	6878      	ldr	r0, [r7, #4]
 8004120:	f7fc fd4a 	bl	8000bb8 <__addsf3>
 8004124:	4603      	mov	r3, r0
 8004126:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp=round(amp_target_speed_tmp);
 8004128:	6878      	ldr	r0, [r7, #4]
 800412a:	f7fc f99f 	bl	800046c <__aeabi_f2d>
 800412e:	4602      	mov	r2, r0
 8004130:	460b      	mov	r3, r1
 8004132:	4610      	mov	r0, r2
 8004134:	4619      	mov	r1, r3
 8004136:	f007 f86b 	bl	800b210 <round>
 800413a:	4602      	mov	r2, r0
 800413c:	460b      	mov	r3, r1
 800413e:	4610      	mov	r0, r2
 8004140:	4619      	mov	r1, r3
 8004142:	f7fc fce3 	bl	8000b0c <__aeabi_d2f>
 8004146:	4603      	mov	r3, r0
 8004148:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp/=100;
 800414a:	492c      	ldr	r1, [pc, #176]	; (80041fc <main+0x614>)
 800414c:	6878      	ldr	r0, [r7, #4]
 800414e:	f7fc feef 	bl	8000f30 <__aeabi_fdiv>
 8004152:	4603      	mov	r3, r0
 8004154:	607b      	str	r3, [r7, #4]
 8004156:	e029      	b.n	80041ac <main+0x5c4>
				}
				else
				{
					amp_target_speed_tmp*=1000;
 8004158:	4929      	ldr	r1, [pc, #164]	; (8004200 <main+0x618>)
 800415a:	6878      	ldr	r0, [r7, #4]
 800415c:	f7fc fe34 	bl	8000dc8 <__aeabi_fmul>
 8004160:	4603      	mov	r3, r0
 8004162:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp+=Enc_Counter;
 8004164:	4b1c      	ldr	r3, [pc, #112]	; (80041d8 <main+0x5f0>)
 8004166:	f9b3 3000 	ldrsh.w	r3, [r3]
 800416a:	4618      	mov	r0, r3
 800416c:	f7fc fdd8 	bl	8000d20 <__aeabi_i2f>
 8004170:	4603      	mov	r3, r0
 8004172:	4619      	mov	r1, r3
 8004174:	6878      	ldr	r0, [r7, #4]
 8004176:	f7fc fd1f 	bl	8000bb8 <__addsf3>
 800417a:	4603      	mov	r3, r0
 800417c:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp=round(amp_target_speed_tmp);
 800417e:	6878      	ldr	r0, [r7, #4]
 8004180:	f7fc f974 	bl	800046c <__aeabi_f2d>
 8004184:	4602      	mov	r2, r0
 8004186:	460b      	mov	r3, r1
 8004188:	4610      	mov	r0, r2
 800418a:	4619      	mov	r1, r3
 800418c:	f007 f840 	bl	800b210 <round>
 8004190:	4602      	mov	r2, r0
 8004192:	460b      	mov	r3, r1
 8004194:	4610      	mov	r0, r2
 8004196:	4619      	mov	r1, r3
 8004198:	f7fc fcb8 	bl	8000b0c <__aeabi_d2f>
 800419c:	4603      	mov	r3, r0
 800419e:	607b      	str	r3, [r7, #4]
					amp_target_speed_tmp/=1000 ;
 80041a0:	4917      	ldr	r1, [pc, #92]	; (8004200 <main+0x618>)
 80041a2:	6878      	ldr	r0, [r7, #4]
 80041a4:	f7fc fec4 	bl	8000f30 <__aeabi_fdiv>
 80041a8:	4603      	mov	r3, r0
 80041aa:	607b      	str	r3, [r7, #4]
				}
				for(Eix=Ei;Eix>0;Eix--)
 80041ac:	7b7b      	ldrb	r3, [r7, #13]
 80041ae:	733b      	strb	r3, [r7, #12]
 80041b0:	e031      	b.n	8004216 <main+0x62e>
 80041b2:	bf00      	nop
 80041b4:	f3af 8000 	nop.w
 80041b8:	47ae147b 	.word	0x47ae147b
 80041bc:	3f847ae1 	.word	0x3f847ae1
 80041c0:	d2f1a9fc 	.word	0xd2f1a9fc
 80041c4:	3f50624d 	.word	0x3f50624d
 80041c8:	200009c3 	.word	0x200009c3
 80041cc:	200009bf 	.word	0x200009bf
 80041d0:	200009be 	.word	0x200009be
 80041d4:	20000018 	.word	0x20000018
 80041d8:	20000930 	.word	0x20000930
 80041dc:	20000010 	.word	0x20000010
 80041e0:	40590000 	.word	0x40590000
 80041e4:	408f4000 	.word	0x408f4000
 80041e8:	200009b4 	.word	0x200009b4
 80041ec:	20000984 	.word	0x20000984
 80041f0:	2000099c 	.word	0x2000099c
 80041f4:	2000000c 	.word	0x2000000c
 80041f8:	41200000 	.word	0x41200000
 80041fc:	42c80000 	.word	0x42c80000
 8004200:	447a0000 	.word	0x447a0000
				{
					amp_target_speed_tmp/=10;
 8004204:	498a      	ldr	r1, [pc, #552]	; (8004430 <main+0x848>)
 8004206:	6878      	ldr	r0, [r7, #4]
 8004208:	f7fc fe92 	bl	8000f30 <__aeabi_fdiv>
 800420c:	4603      	mov	r3, r0
 800420e:	607b      	str	r3, [r7, #4]
				for(Eix=Ei;Eix>0;Eix--)
 8004210:	7b3b      	ldrb	r3, [r7, #12]
 8004212:	3b01      	subs	r3, #1
 8004214:	733b      	strb	r3, [r7, #12]
 8004216:	7b3b      	ldrb	r3, [r7, #12]
 8004218:	2b00      	cmp	r3, #0
 800421a:	d1f3      	bne.n	8004204 <main+0x61c>
				}

				Recalculate_ramp_speed(AMP_SCREEN, amp_target_speed_tmp);
 800421c:	6879      	ldr	r1, [r7, #4]
 800421e:	2004      	movs	r0, #4
 8004220:	f7ff f822 	bl	8003268 <Recalculate_ramp_speed>
			}
			Enc_Counter=0;
 8004224:	4b83      	ldr	r3, [pc, #524]	; (8004434 <main+0x84c>)
 8004226:	2200      	movs	r2, #0
 8004228:	801a      	strh	r2, [r3, #0]
			if(Current_output_status!=Output_off_STATE && cfg.LDACMODE==0)output_state(Output_auto_STATE);
 800422a:	4b83      	ldr	r3, [pc, #524]	; (8004438 <main+0x850>)
 800422c:	781b      	ldrb	r3, [r3, #0]
 800422e:	2b00      	cmp	r3, #0
 8004230:	f000 80c1 	beq.w	80043b6 <main+0x7ce>
 8004234:	4b81      	ldr	r3, [pc, #516]	; (800443c <main+0x854>)
 8004236:	789b      	ldrb	r3, [r3, #2]
 8004238:	2b00      	cmp	r3, #0
 800423a:	f040 80bc 	bne.w	80043b6 <main+0x7ce>
 800423e:	2004      	movs	r0, #4
 8004240:	f7fe f9d8 	bl	80025f4 <output_state>
		break;
 8004244:	e0b7      	b.n	80043b6 <main+0x7ce>
		case CAP_SELECT_SCREEN:
			C_ref+=Enc_Counter;
 8004246:	4b7b      	ldr	r3, [pc, #492]	; (8004434 <main+0x84c>)
 8004248:	f9b3 3000 	ldrsh.w	r3, [r3]
 800424c:	b2da      	uxtb	r2, r3
 800424e:	4b7c      	ldr	r3, [pc, #496]	; (8004440 <main+0x858>)
 8004250:	781b      	ldrb	r3, [r3, #0]
 8004252:	4413      	add	r3, r2
 8004254:	b2da      	uxtb	r2, r3
 8004256:	4b7a      	ldr	r3, [pc, #488]	; (8004440 <main+0x858>)
 8004258:	701a      	strb	r2, [r3, #0]
			if(C_ref>C_value_max_count)C_ref=0;
 800425a:	4b79      	ldr	r3, [pc, #484]	; (8004440 <main+0x858>)
 800425c:	781b      	ldrb	r3, [r3, #0]
 800425e:	2b0a      	cmp	r3, #10
 8004260:	d902      	bls.n	8004268 <main+0x680>
 8004262:	4b77      	ldr	r3, [pc, #476]	; (8004440 <main+0x858>)
 8004264:	2200      	movs	r2, #0
 8004266:	701a      	strb	r2, [r3, #0]
			cmd_CAP_SET(C_ref);
 8004268:	4b75      	ldr	r3, [pc, #468]	; (8004440 <main+0x858>)
 800426a:	781b      	ldrb	r3, [r3, #0]
 800426c:	4618      	mov	r0, r3
 800426e:	f7fe ff73 	bl	8003158 <cmd_CAP_SET>
			Enc_Counter=0;
 8004272:	4b70      	ldr	r3, [pc, #448]	; (8004434 <main+0x84c>)
 8004274:	2200      	movs	r2, #0
 8004276:	801a      	strh	r2, [r3, #0]
		break;
 8004278:	e0a0      	b.n	80043bc <main+0x7d4>
		case DIR_SELECT_SCREEN:
			DAC_code_direction+=Enc_Counter;
 800427a:	4b6e      	ldr	r3, [pc, #440]	; (8004434 <main+0x84c>)
 800427c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004280:	b2da      	uxtb	r2, r3
 8004282:	4b70      	ldr	r3, [pc, #448]	; (8004444 <main+0x85c>)
 8004284:	781b      	ldrb	r3, [r3, #0]
 8004286:	4413      	add	r3, r2
 8004288:	b2da      	uxtb	r2, r3
 800428a:	4b6e      	ldr	r3, [pc, #440]	; (8004444 <main+0x85c>)
 800428c:	701a      	strb	r2, [r3, #0]
			if(DAC_code_direction>DIRECTION_CYCLE_STATE)
 800428e:	4b6d      	ldr	r3, [pc, #436]	; (8004444 <main+0x85c>)
 8004290:	781b      	ldrb	r3, [r3, #0]
 8004292:	2b02      	cmp	r3, #2
 8004294:	d902      	bls.n	800429c <main+0x6b4>
				DAC_code_direction=DIRECTION_DOWN_STATE;
 8004296:	4b6b      	ldr	r3, [pc, #428]	; (8004444 <main+0x85c>)
 8004298:	2200      	movs	r2, #0
 800429a:	701a      	strb	r2, [r3, #0]
			Enc_Counter=0;
 800429c:	4b65      	ldr	r3, [pc, #404]	; (8004434 <main+0x84c>)
 800429e:	2200      	movs	r2, #0
 80042a0:	801a      	strh	r2, [r3, #0]
			if(cfg.LDACMODE==0)cmd_SWEEP_STOP();
 80042a2:	4b66      	ldr	r3, [pc, #408]	; (800443c <main+0x854>)
 80042a4:	789b      	ldrb	r3, [r3, #2]
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	f040 8087 	bne.w	80043ba <main+0x7d2>
 80042ac:	f7fe fdda 	bl	8002e64 <cmd_SWEEP_STOP>
		break;
 80042b0:	e083      	b.n	80043ba <main+0x7d2>
		case VOLT_SCREEN:
			if(Enc_Counter>4 || Enc_Counter<-4)
 80042b2:	4b60      	ldr	r3, [pc, #384]	; (8004434 <main+0x84c>)
 80042b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80042b8:	2b04      	cmp	r3, #4
 80042ba:	dc05      	bgt.n	80042c8 <main+0x6e0>
 80042bc:	4b5d      	ldr	r3, [pc, #372]	; (8004434 <main+0x84c>)
 80042be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80042c2:	f113 0f04 	cmn.w	r3, #4
 80042c6:	da37      	bge.n	8004338 <main+0x750>
			{
				cmd_SET_OUTPUT_VOLTAGE(round((calculate_output_voltage()+Enc_Counter*1E-1)*1E1)/1E1);
 80042c8:	f7fe fc7c 	bl	8002bc4 <calculate_output_voltage>
 80042cc:	4603      	mov	r3, r0
 80042ce:	4618      	mov	r0, r3
 80042d0:	f7fc f8cc 	bl	800046c <__aeabi_f2d>
 80042d4:	4604      	mov	r4, r0
 80042d6:	460d      	mov	r5, r1
 80042d8:	4b56      	ldr	r3, [pc, #344]	; (8004434 <main+0x84c>)
 80042da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80042de:	4618      	mov	r0, r3
 80042e0:	f7fc f8b2 	bl	8000448 <__aeabi_i2d>
 80042e4:	a34e      	add	r3, pc, #312	; (adr r3, 8004420 <main+0x838>)
 80042e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042ea:	f7fc f917 	bl	800051c <__aeabi_dmul>
 80042ee:	4602      	mov	r2, r0
 80042f0:	460b      	mov	r3, r1
 80042f2:	4620      	mov	r0, r4
 80042f4:	4629      	mov	r1, r5
 80042f6:	f7fb ff5b 	bl	80001b0 <__adddf3>
 80042fa:	4602      	mov	r2, r0
 80042fc:	460b      	mov	r3, r1
 80042fe:	4610      	mov	r0, r2
 8004300:	4619      	mov	r1, r3
 8004302:	f04f 0200 	mov.w	r2, #0
 8004306:	4b50      	ldr	r3, [pc, #320]	; (8004448 <main+0x860>)
 8004308:	f7fc f908 	bl	800051c <__aeabi_dmul>
 800430c:	4602      	mov	r2, r0
 800430e:	460b      	mov	r3, r1
 8004310:	4610      	mov	r0, r2
 8004312:	4619      	mov	r1, r3
 8004314:	f006 ff7c 	bl	800b210 <round>
 8004318:	f04f 0200 	mov.w	r2, #0
 800431c:	4b4a      	ldr	r3, [pc, #296]	; (8004448 <main+0x860>)
 800431e:	f7fc fa27 	bl	8000770 <__aeabi_ddiv>
 8004322:	4602      	mov	r2, r0
 8004324:	460b      	mov	r3, r1
 8004326:	4610      	mov	r0, r2
 8004328:	4619      	mov	r1, r3
 800432a:	f7fc fbef 	bl	8000b0c <__aeabi_d2f>
 800432e:	4603      	mov	r3, r0
 8004330:	4618      	mov	r0, r3
 8004332:	f7fe fde9 	bl	8002f08 <cmd_SET_OUTPUT_VOLTAGE>
 8004336:	e036      	b.n	80043a6 <main+0x7be>
			}
			else
			{
				cmd_SET_OUTPUT_VOLTAGE(round((calculate_output_voltage()+Enc_Counter*1E-3)*1E3)/1E3);
 8004338:	f7fe fc44 	bl	8002bc4 <calculate_output_voltage>
 800433c:	4603      	mov	r3, r0
 800433e:	4618      	mov	r0, r3
 8004340:	f7fc f894 	bl	800046c <__aeabi_f2d>
 8004344:	4604      	mov	r4, r0
 8004346:	460d      	mov	r5, r1
 8004348:	4b3a      	ldr	r3, [pc, #232]	; (8004434 <main+0x84c>)
 800434a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800434e:	4618      	mov	r0, r3
 8004350:	f7fc f87a 	bl	8000448 <__aeabi_i2d>
 8004354:	a334      	add	r3, pc, #208	; (adr r3, 8004428 <main+0x840>)
 8004356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800435a:	f7fc f8df 	bl	800051c <__aeabi_dmul>
 800435e:	4602      	mov	r2, r0
 8004360:	460b      	mov	r3, r1
 8004362:	4620      	mov	r0, r4
 8004364:	4629      	mov	r1, r5
 8004366:	f7fb ff23 	bl	80001b0 <__adddf3>
 800436a:	4602      	mov	r2, r0
 800436c:	460b      	mov	r3, r1
 800436e:	4610      	mov	r0, r2
 8004370:	4619      	mov	r1, r3
 8004372:	f04f 0200 	mov.w	r2, #0
 8004376:	4b35      	ldr	r3, [pc, #212]	; (800444c <main+0x864>)
 8004378:	f7fc f8d0 	bl	800051c <__aeabi_dmul>
 800437c:	4602      	mov	r2, r0
 800437e:	460b      	mov	r3, r1
 8004380:	4610      	mov	r0, r2
 8004382:	4619      	mov	r1, r3
 8004384:	f006 ff44 	bl	800b210 <round>
 8004388:	f04f 0200 	mov.w	r2, #0
 800438c:	4b2f      	ldr	r3, [pc, #188]	; (800444c <main+0x864>)
 800438e:	f7fc f9ef 	bl	8000770 <__aeabi_ddiv>
 8004392:	4602      	mov	r2, r0
 8004394:	460b      	mov	r3, r1
 8004396:	4610      	mov	r0, r2
 8004398:	4619      	mov	r1, r3
 800439a:	f7fc fbb7 	bl	8000b0c <__aeabi_d2f>
 800439e:	4603      	mov	r3, r0
 80043a0:	4618      	mov	r0, r3
 80043a2:	f7fe fdb1 	bl	8002f08 <cmd_SET_OUTPUT_VOLTAGE>
			}
			Enc_Counter=0;
 80043a6:	4b23      	ldr	r3, [pc, #140]	; (8004434 <main+0x84c>)
 80043a8:	2200      	movs	r2, #0
 80043aa:	801a      	strh	r2, [r3, #0]
		break;
 80043ac:	e006      	b.n	80043bc <main+0x7d4>
		}
		}
 80043ae:	bf00      	nop
 80043b0:	e004      	b.n	80043bc <main+0x7d4>
		break;
 80043b2:	bf00      	nop
 80043b4:	e002      	b.n	80043bc <main+0x7d4>
		break;
 80043b6:	bf00      	nop
 80043b8:	e000      	b.n	80043bc <main+0x7d4>
		break;
 80043ba:	bf00      	nop
		//----------------------------------------------------------------------------------------------------------


		//----------------------------------------------------------------------------------------------------------
		if(Display_need_wakeup)
 80043bc:	4b24      	ldr	r3, [pc, #144]	; (8004450 <main+0x868>)
 80043be:	781b      	ldrb	r3, [r3, #0]
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d00b      	beq.n	80043dc <main+0x7f4>
		{
			Display_need_wakeup=0;
 80043c4:	4b22      	ldr	r3, [pc, #136]	; (8004450 <main+0x868>)
 80043c6:	2200      	movs	r2, #0
 80043c8:	701a      	strb	r2, [r3, #0]
			Poweron_LCD();
 80043ca:	f7fd fff7 	bl	80023bc <Poweron_LCD>
			Display_timeout=0;
 80043ce:	4b21      	ldr	r3, [pc, #132]	; (8004454 <main+0x86c>)
 80043d0:	2200      	movs	r2, #0
 80043d2:	601a      	str	r2, [r3, #0]
			Need_update_Display=1;
 80043d4:	4b20      	ldr	r3, [pc, #128]	; (8004458 <main+0x870>)
 80043d6:	2201      	movs	r2, #1
 80043d8:	701a      	strb	r2, [r3, #0]
 80043da:	e475      	b.n	8003cc8 <main+0xe0>
		} else
		{
			if(Display_status==1) // If display on
 80043dc:	4b1f      	ldr	r3, [pc, #124]	; (800445c <main+0x874>)
 80043de:	781b      	ldrb	r3, [r3, #0]
 80043e0:	2b01      	cmp	r3, #1
 80043e2:	d119      	bne.n	8004418 <main+0x830>
			{
				// 1 hour timeout if output is off
				// 1 day timeout if output is on
				if((Display_timeout>72000 && Current_output_status==Output_off_STATE) || (Display_timeout>1728000 && Current_output_status!=Output_off_STATE))
 80043e4:	4b1b      	ldr	r3, [pc, #108]	; (8004454 <main+0x86c>)
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	4a1d      	ldr	r2, [pc, #116]	; (8004460 <main+0x878>)
 80043ea:	4293      	cmp	r3, r2
 80043ec:	d903      	bls.n	80043f6 <main+0x80e>
 80043ee:	4b12      	ldr	r3, [pc, #72]	; (8004438 <main+0x850>)
 80043f0:	781b      	ldrb	r3, [r3, #0]
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d00a      	beq.n	800440c <main+0x824>
 80043f6:	4b17      	ldr	r3, [pc, #92]	; (8004454 <main+0x86c>)
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	4a1a      	ldr	r2, [pc, #104]	; (8004464 <main+0x87c>)
 80043fc:	4293      	cmp	r3, r2
 80043fe:	f67f ac63 	bls.w	8003cc8 <main+0xe0>
 8004402:	4b0d      	ldr	r3, [pc, #52]	; (8004438 <main+0x850>)
 8004404:	781b      	ldrb	r3, [r3, #0]
 8004406:	2b00      	cmp	r3, #0
 8004408:	f43f ac5e 	beq.w	8003cc8 <main+0xe0>
				{
					Poweroff_LCD();
 800440c:	f7fd ffc4 	bl	8002398 <Poweroff_LCD>
					Display_timeout=0;
 8004410:	4b10      	ldr	r3, [pc, #64]	; (8004454 <main+0x86c>)
 8004412:	2200      	movs	r2, #0
 8004414:	601a      	str	r2, [r3, #0]
 8004416:	e457      	b.n	8003cc8 <main+0xe0>
				}
			} else Display_timeout=0;
 8004418:	4b0e      	ldr	r3, [pc, #56]	; (8004454 <main+0x86c>)
 800441a:	2200      	movs	r2, #0
 800441c:	601a      	str	r2, [r3, #0]
		if(USB_CDC_End_Line_Received)
 800441e:	e453      	b.n	8003cc8 <main+0xe0>
 8004420:	9999999a 	.word	0x9999999a
 8004424:	3fb99999 	.word	0x3fb99999
 8004428:	d2f1a9fc 	.word	0xd2f1a9fc
 800442c:	3f50624d 	.word	0x3f50624d
 8004430:	41200000 	.word	0x41200000
 8004434:	20000930 	.word	0x20000930
 8004438:	200009b4 	.word	0x200009b4
 800443c:	20000984 	.word	0x20000984
 8004440:	200009a0 	.word	0x200009a0
 8004444:	200009bc 	.word	0x200009bc
 8004448:	40240000 	.word	0x40240000
 800444c:	408f4000 	.word	0x408f4000
 8004450:	20000020 	.word	0x20000020
 8004454:	20000934 	.word	0x20000934
 8004458:	200009bf 	.word	0x200009bf
 800445c:	200009be 	.word	0x200009be
 8004460:	00011940 	.word	0x00011940
 8004464:	001a5e00 	.word	0x001a5e00

08004468 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004468:	b580      	push	{r7, lr}
 800446a:	b092      	sub	sp, #72	; 0x48
 800446c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800446e:	f107 0314 	add.w	r3, r7, #20
 8004472:	2234      	movs	r2, #52	; 0x34
 8004474:	2100      	movs	r1, #0
 8004476:	4618      	mov	r0, r3
 8004478:	f006 ff4a 	bl	800b310 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800447c:	463b      	mov	r3, r7
 800447e:	2200      	movs	r2, #0
 8004480:	601a      	str	r2, [r3, #0]
 8004482:	605a      	str	r2, [r3, #4]
 8004484:	609a      	str	r2, [r3, #8]
 8004486:	60da      	str	r2, [r3, #12]
 8004488:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800448a:	4b1c      	ldr	r3, [pc, #112]	; (80044fc <SystemClock_Config+0x94>)
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8004492:	4a1a      	ldr	r2, [pc, #104]	; (80044fc <SystemClock_Config+0x94>)
 8004494:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004498:	6013      	str	r3, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800449a:	2301      	movs	r3, #1
 800449c:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800449e:	2301      	movs	r3, #1
 80044a0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80044a2:	2302      	movs	r3, #2
 80044a4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80044a6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80044aa:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 80044ac:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80044b0:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 80044b2:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 80044b6:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80044b8:	f107 0314 	add.w	r3, r7, #20
 80044bc:	4618      	mov	r0, r3
 80044be:	f003 fbf9 	bl	8007cb4 <HAL_RCC_OscConfig>
 80044c2:	4603      	mov	r3, r0
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d001      	beq.n	80044cc <SystemClock_Config+0x64>
  {
    Error_Handler();
 80044c8:	f000 ff7e 	bl	80053c8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80044cc:	230f      	movs	r3, #15
 80044ce:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80044d0:	2303      	movs	r3, #3
 80044d2:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80044d4:	2300      	movs	r3, #0
 80044d6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80044d8:	2300      	movs	r3, #0
 80044da:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80044dc:	2300      	movs	r3, #0
 80044de:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80044e0:	463b      	mov	r3, r7
 80044e2:	2101      	movs	r1, #1
 80044e4:	4618      	mov	r0, r3
 80044e6:	f003 fe45 	bl	8008174 <HAL_RCC_ClockConfig>
 80044ea:	4603      	mov	r3, r0
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d001      	beq.n	80044f4 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 80044f0:	f000 ff6a 	bl	80053c8 <Error_Handler>
  }
}
 80044f4:	bf00      	nop
 80044f6:	3748      	adds	r7, #72	; 0x48
 80044f8:	46bd      	mov	sp, r7
 80044fa:	bd80      	pop	{r7, pc}
 80044fc:	40007000 	.word	0x40007000

08004500 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8004500:	b580      	push	{r7, lr}
 8004502:	af00      	add	r7, sp, #0
  /* EXTI9_5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8004504:	2200      	movs	r2, #0
 8004506:	2100      	movs	r1, #0
 8004508:	2017      	movs	r0, #23
 800450a:	f001 fc67 	bl	8005ddc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 800450e:	2017      	movs	r0, #23
 8004510:	f001 fca2 	bl	8005e58 <HAL_NVIC_EnableIRQ>
}
 8004514:	bf00      	nop
 8004516:	bd80      	pop	{r7, pc}

08004518 <HAL_TIM_PeriodElapsedCallback>:
//==============================================================================================


// Callback: timer has rolled over
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8004518:	b580      	push	{r7, lr}
 800451a:	b082      	sub	sp, #8
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
	if (htim == &htim3 )// INL correction, each 500ms
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	4a3f      	ldr	r2, [pc, #252]	; (8004620 <HAL_TIM_PeriodElapsedCallback+0x108>)
 8004524:	4293      	cmp	r3, r2
 8004526:	d106      	bne.n	8004536 <HAL_TIM_PeriodElapsedCallback+0x1e>
	{
		if(cfg.LDACMODE==1)Need_update_DDS=1;
 8004528:	4b3e      	ldr	r3, [pc, #248]	; (8004624 <HAL_TIM_PeriodElapsedCallback+0x10c>)
 800452a:	789b      	ldrb	r3, [r3, #2]
 800452c:	2b01      	cmp	r3, #1
 800452e:	d102      	bne.n	8004536 <HAL_TIM_PeriodElapsedCallback+0x1e>
 8004530:	4b3d      	ldr	r3, [pc, #244]	; (8004628 <HAL_TIM_PeriodElapsedCallback+0x110>)
 8004532:	2201      	movs	r2, #1
 8004534:	701a      	strb	r2, [r3, #0]
	}

	if (htim == &htim2 )//User interface workload, each 50ms
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	4a3c      	ldr	r2, [pc, #240]	; (800462c <HAL_TIM_PeriodElapsedCallback+0x114>)
 800453a:	4293      	cmp	r3, r2
 800453c:	d16c      	bne.n	8004618 <HAL_TIM_PeriodElapsedCallback+0x100>
	{
		Need_update_Display=1;
 800453e:	4b3c      	ldr	r3, [pc, #240]	; (8004630 <HAL_TIM_PeriodElapsedCallback+0x118>)
 8004540:	2201      	movs	r2, #1
 8004542:	701a      	strb	r2, [r3, #0]
		Display_timeout++;
 8004544:	4b3b      	ldr	r3, [pc, #236]	; (8004634 <HAL_TIM_PeriodElapsedCallback+0x11c>)
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	3301      	adds	r3, #1
 800454a:	4a3a      	ldr	r2, [pc, #232]	; (8004634 <HAL_TIM_PeriodElapsedCallback+0x11c>)
 800454c:	6013      	str	r3, [r2, #0]
		if(Push_start_button!=0)Push_start_button++;
 800454e:	4b3a      	ldr	r3, [pc, #232]	; (8004638 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8004550:	781b      	ldrb	r3, [r3, #0]
 8004552:	2b00      	cmp	r3, #0
 8004554:	d005      	beq.n	8004562 <HAL_TIM_PeriodElapsedCallback+0x4a>
 8004556:	4b38      	ldr	r3, [pc, #224]	; (8004638 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8004558:	781b      	ldrb	r3, [r3, #0]
 800455a:	3301      	adds	r3, #1
 800455c:	b2da      	uxtb	r2, r3
 800455e:	4b36      	ldr	r3, [pc, #216]	; (8004638 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8004560:	701a      	strb	r2, [r3, #0]
		if(Push_start_button>40)Push_start_button=0;
 8004562:	4b35      	ldr	r3, [pc, #212]	; (8004638 <HAL_TIM_PeriodElapsedCallback+0x120>)
 8004564:	781b      	ldrb	r3, [r3, #0]
 8004566:	2b28      	cmp	r3, #40	; 0x28
 8004568:	d902      	bls.n	8004570 <HAL_TIM_PeriodElapsedCallback+0x58>
 800456a:	4b33      	ldr	r3, [pc, #204]	; (8004638 <HAL_TIM_PeriodElapsedCallback+0x120>)
 800456c:	2200      	movs	r2, #0
 800456e:	701a      	strb	r2, [r3, #0]

		if(Push_Encode_button!=0)Push_Encode_button++;
 8004570:	4b32      	ldr	r3, [pc, #200]	; (800463c <HAL_TIM_PeriodElapsedCallback+0x124>)
 8004572:	781b      	ldrb	r3, [r3, #0]
 8004574:	2b00      	cmp	r3, #0
 8004576:	d005      	beq.n	8004584 <HAL_TIM_PeriodElapsedCallback+0x6c>
 8004578:	4b30      	ldr	r3, [pc, #192]	; (800463c <HAL_TIM_PeriodElapsedCallback+0x124>)
 800457a:	781b      	ldrb	r3, [r3, #0]
 800457c:	3301      	adds	r3, #1
 800457e:	b2da      	uxtb	r2, r3
 8004580:	4b2e      	ldr	r3, [pc, #184]	; (800463c <HAL_TIM_PeriodElapsedCallback+0x124>)
 8004582:	701a      	strb	r2, [r3, #0]
		if(Push_Encode_button>15)Push_Encode_button=0;
 8004584:	4b2d      	ldr	r3, [pc, #180]	; (800463c <HAL_TIM_PeriodElapsedCallback+0x124>)
 8004586:	781b      	ldrb	r3, [r3, #0]
 8004588:	2b0f      	cmp	r3, #15
 800458a:	d902      	bls.n	8004592 <HAL_TIM_PeriodElapsedCallback+0x7a>
 800458c:	4b2b      	ldr	r3, [pc, #172]	; (800463c <HAL_TIM_PeriodElapsedCallback+0x124>)
 800458e:	2200      	movs	r2, #0
 8004590:	701a      	strb	r2, [r3, #0]

		if(Current_output_status==Output_off_STATE)
 8004592:	4b2b      	ldr	r3, [pc, #172]	; (8004640 <HAL_TIM_PeriodElapsedCallback+0x128>)
 8004594:	781b      	ldrb	r3, [r3, #0]
 8004596:	2b00      	cmp	r3, #0
 8004598:	d108      	bne.n	80045ac <HAL_TIM_PeriodElapsedCallback+0x94>
			Need_DAC_TEMP_CAL++;
 800459a:	4b2a      	ldr	r3, [pc, #168]	; (8004644 <HAL_TIM_PeriodElapsedCallback+0x12c>)
 800459c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80045a0:	b29b      	uxth	r3, r3
 80045a2:	3301      	adds	r3, #1
 80045a4:	b29b      	uxth	r3, r3
 80045a6:	b21a      	sxth	r2, r3
 80045a8:	4b26      	ldr	r3, [pc, #152]	; (8004644 <HAL_TIM_PeriodElapsedCallback+0x12c>)
 80045aa:	801a      	strh	r2, [r3, #0]

		Enc_Counter+=((int16_t)TIM4->CNT)/2;
 80045ac:	4b26      	ldr	r3, [pc, #152]	; (8004648 <HAL_TIM_PeriodElapsedCallback+0x130>)
 80045ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045b0:	b21b      	sxth	r3, r3
 80045b2:	0fda      	lsrs	r2, r3, #31
 80045b4:	4413      	add	r3, r2
 80045b6:	105b      	asrs	r3, r3, #1
 80045b8:	b21b      	sxth	r3, r3
 80045ba:	b29a      	uxth	r2, r3
 80045bc:	4b23      	ldr	r3, [pc, #140]	; (800464c <HAL_TIM_PeriodElapsedCallback+0x134>)
 80045be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80045c2:	b29b      	uxth	r3, r3
 80045c4:	4413      	add	r3, r2
 80045c6:	b29b      	uxth	r3, r3
 80045c8:	b21a      	sxth	r2, r3
 80045ca:	4b20      	ldr	r3, [pc, #128]	; (800464c <HAL_TIM_PeriodElapsedCallback+0x134>)
 80045cc:	801a      	strh	r2, [r3, #0]
		TIM4->CNT = (uint16_t)(((int16_t)TIM4->CNT) % 2);
 80045ce:	4b1e      	ldr	r3, [pc, #120]	; (8004648 <HAL_TIM_PeriodElapsedCallback+0x130>)
 80045d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d2:	b21b      	sxth	r3, r3
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	f003 0301 	and.w	r3, r3, #1
 80045da:	bfb8      	it	lt
 80045dc:	425b      	neglt	r3, r3
 80045de:	b21b      	sxth	r3, r3
 80045e0:	b29a      	uxth	r2, r3
 80045e2:	4b19      	ldr	r3, [pc, #100]	; (8004648 <HAL_TIM_PeriodElapsedCallback+0x130>)
 80045e4:	625a      	str	r2, [r3, #36]	; 0x24
		if(!HAL_GPIO_ReadPin(Start_button_GPIO_Port, Start_button_Pin))
 80045e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80045ea:	4819      	ldr	r0, [pc, #100]	; (8004650 <HAL_TIM_PeriodElapsedCallback+0x138>)
 80045ec:	f001 ff1c 	bl	8006428 <HAL_GPIO_ReadPin>
 80045f0:	4603      	mov	r3, r0
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d106      	bne.n	8004604 <HAL_TIM_PeriodElapsedCallback+0xec>
		{
			Hold_start_button++;
 80045f6:	4b17      	ldr	r3, [pc, #92]	; (8004654 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 80045f8:	781b      	ldrb	r3, [r3, #0]
 80045fa:	3301      	adds	r3, #1
 80045fc:	b2da      	uxtb	r2, r3
 80045fe:	4b15      	ldr	r3, [pc, #84]	; (8004654 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 8004600:	701a      	strb	r2, [r3, #0]
 8004602:	e002      	b.n	800460a <HAL_TIM_PeriodElapsedCallback+0xf2>
		}
		else
		{
			Hold_start_button=0;
 8004604:	4b13      	ldr	r3, [pc, #76]	; (8004654 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 8004606:	2200      	movs	r2, #0
 8004608:	701a      	strb	r2, [r3, #0]
		}
		if(Hold_start_button>60)
 800460a:	4b12      	ldr	r3, [pc, #72]	; (8004654 <HAL_TIM_PeriodElapsedCallback+0x13c>)
 800460c:	781b      	ldrb	r3, [r3, #0]
 800460e:	2b3c      	cmp	r3, #60	; 0x3c
 8004610:	d902      	bls.n	8004618 <HAL_TIM_PeriodElapsedCallback+0x100>
		{
			Need_off_output=1;
 8004612:	4b11      	ldr	r3, [pc, #68]	; (8004658 <HAL_TIM_PeriodElapsedCallback+0x140>)
 8004614:	2201      	movs	r2, #1
 8004616:	701a      	strb	r2, [r3, #0]
		}


	}

}
 8004618:	bf00      	nop
 800461a:	3708      	adds	r7, #8
 800461c:	46bd      	mov	sp, r7
 800461e:	bd80      	pop	{r7, pc}
 8004620:	20000abc 	.word	0x20000abc
 8004624:	20000984 	.word	0x20000984
 8004628:	200009c0 	.word	0x200009c0
 800462c:	20000a7c 	.word	0x20000a7c
 8004630:	200009bf 	.word	0x200009bf
 8004634:	20000934 	.word	0x20000934
 8004638:	200009c3 	.word	0x200009c3
 800463c:	200009c4 	.word	0x200009c4
 8004640:	200009b4 	.word	0x200009b4
 8004644:	20000938 	.word	0x20000938
 8004648:	40000800 	.word	0x40000800
 800464c:	20000930 	.word	0x20000930
 8004650:	40020800 	.word	0x40020800
 8004654:	200009c5 	.word	0x200009c5
 8004658:	200009c2 	.word	0x200009c2

0800465c <Parsing_USB_command>:
	if(GPIO_Pin == Start_button_Pin)
		if(Push_start_button==0)Push_start_button=1;
}

void Parsing_USB_command(void)
{
 800465c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800465e:	b0b7      	sub	sp, #220	; 0xdc
 8004660:	af12      	add	r7, sp, #72	; 0x48
	//char *found;
	char decoded_string_1[command_buffer_len];
	char decoded_string_2[command_buffer_len];
	int num_of_cap;
	float f_value,f_value2;
	uint8_t cdc_counter=0;
 8004662:	2300      	movs	r3, #0
 8004664:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f

	if(sscanf((char *)command_buffer,"%s", decoded_string_1)!=1)
 8004668:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800466c:	461a      	mov	r2, r3
 800466e:	49ca      	ldr	r1, [pc, #808]	; (8004998 <Parsing_USB_command+0x33c>)
 8004670:	48ca      	ldr	r0, [pc, #808]	; (800499c <Parsing_USB_command+0x340>)
 8004672:	f007 fce7 	bl	800c044 <siscanf>
 8004676:	4603      	mov	r3, r0
 8004678:	2b01      	cmp	r3, #1
 800467a:	d004      	beq.n	8004686 <Parsing_USB_command+0x2a>
	{
		send_answer_to_CDC(ERROR_TYPE_1);
 800467c:	2000      	movs	r0, #0
 800467e:	f7fe fb1d 	bl	8002cbc <send_answer_to_CDC>
		return;
 8004682:	f000 be57 	b.w	8005334 <Parsing_USB_command+0xcd8>
	}

	// ==== SWEEP command ====
	if(!(strcmp(decoded_string_1,"SWEEP")))
 8004686:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800468a:	49c5      	ldr	r1, [pc, #788]	; (80049a0 <Parsing_USB_command+0x344>)
 800468c:	4618      	mov	r0, r3
 800468e:	f7fb fd77 	bl	8000180 <strcmp>
 8004692:	4603      	mov	r3, r0
 8004694:	2b00      	cmp	r3, #0
 8004696:	d13b      	bne.n	8004710 <Parsing_USB_command+0xb4>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004698:	f107 030c 	add.w	r3, r7, #12
 800469c:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80046a0:	49c0      	ldr	r1, [pc, #768]	; (80049a4 <Parsing_USB_command+0x348>)
 80046a2:	48be      	ldr	r0, [pc, #760]	; (800499c <Parsing_USB_command+0x340>)
 80046a4:	f007 fcce 	bl	800c044 <siscanf>
 80046a8:	4603      	mov	r3, r0
 80046aa:	2b02      	cmp	r3, #2
 80046ac:	d004      	beq.n	80046b8 <Parsing_USB_command+0x5c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80046ae:	2001      	movs	r0, #1
 80046b0:	f7fe fb04 	bl	8002cbc <send_answer_to_CDC>
			return;
 80046b4:	f000 be3e 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"START")))
 80046b8:	f107 030c 	add.w	r3, r7, #12
 80046bc:	49ba      	ldr	r1, [pc, #744]	; (80049a8 <Parsing_USB_command+0x34c>)
 80046be:	4618      	mov	r0, r3
 80046c0:	f7fb fd5e 	bl	8000180 <strcmp>
 80046c4:	4603      	mov	r3, r0
 80046c6:	2b00      	cmp	r3, #0
 80046c8:	d10d      	bne.n	80046e6 <Parsing_USB_command+0x8a>
		{
			cmd_SWEEP_START();
 80046ca:	f7fe fbbd 	bl	8002e48 <cmd_SWEEP_START>
			if(mode==VOLT_SCREEN)mode=dU_dt_SCREEN;
 80046ce:	4bb7      	ldr	r3, [pc, #732]	; (80049ac <Parsing_USB_command+0x350>)
 80046d0:	781b      	ldrb	r3, [r3, #0]
 80046d2:	2b05      	cmp	r3, #5
 80046d4:	d102      	bne.n	80046dc <Parsing_USB_command+0x80>
 80046d6:	4bb5      	ldr	r3, [pc, #724]	; (80049ac <Parsing_USB_command+0x350>)
 80046d8:	2203      	movs	r2, #3
 80046da:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 80046dc:	2003      	movs	r0, #3
 80046de:	f7fe faed 	bl	8002cbc <send_answer_to_CDC>
			return;
 80046e2:	f000 be27 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"STOP")))
 80046e6:	f107 030c 	add.w	r3, r7, #12
 80046ea:	49b1      	ldr	r1, [pc, #708]	; (80049b0 <Parsing_USB_command+0x354>)
 80046ec:	4618      	mov	r0, r3
 80046ee:	f7fb fd47 	bl	8000180 <strcmp>
 80046f2:	4603      	mov	r3, r0
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	d106      	bne.n	8004706 <Parsing_USB_command+0xaa>
			{
				cmd_SWEEP_STOP();
 80046f8:	f7fe fbb4 	bl	8002e64 <cmd_SWEEP_STOP>
				send_answer_to_CDC(OK_TYPE_2);
 80046fc:	2003      	movs	r0, #3
 80046fe:	f7fe fadd 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004702:	f000 be17 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 8004706:	2000      	movs	r0, #0
 8004708:	f7fe fad8 	bl	8002cbc <send_answer_to_CDC>
				return;
 800470c:	f000 be12 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}

		}
	}
	// ==== CAP_SET command ====
	if(!(strcmp(decoded_string_1,"CAP_SET")))
 8004710:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004714:	49a7      	ldr	r1, [pc, #668]	; (80049b4 <Parsing_USB_command+0x358>)
 8004716:	4618      	mov	r0, r3
 8004718:	f7fb fd32 	bl	8000180 <strcmp>
 800471c:	4603      	mov	r3, r0
 800471e:	2b00      	cmp	r3, #0
 8004720:	d121      	bne.n	8004766 <Parsing_USB_command+0x10a>
	{
		if(sscanf((char *)command_buffer,"%s %d", decoded_string_1, &num_of_cap)!=2)
 8004722:	f107 0308 	add.w	r3, r7, #8
 8004726:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800472a:	49a3      	ldr	r1, [pc, #652]	; (80049b8 <Parsing_USB_command+0x35c>)
 800472c:	489b      	ldr	r0, [pc, #620]	; (800499c <Parsing_USB_command+0x340>)
 800472e:	f007 fc89 	bl	800c044 <siscanf>
 8004732:	4603      	mov	r3, r0
 8004734:	2b02      	cmp	r3, #2
 8004736:	d004      	beq.n	8004742 <Parsing_USB_command+0xe6>
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004738:	2001      	movs	r0, #1
 800473a:	f7fe fabf 	bl	8002cbc <send_answer_to_CDC>
				return;
 800473e:	f000 bdf9 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}

			if(cmd_CAP_SET(num_of_cap))
 8004742:	68bb      	ldr	r3, [r7, #8]
 8004744:	b2db      	uxtb	r3, r3
 8004746:	4618      	mov	r0, r3
 8004748:	f7fe fd06 	bl	8003158 <cmd_CAP_SET>
 800474c:	4603      	mov	r3, r0
 800474e:	2b00      	cmp	r3, #0
 8004750:	d004      	beq.n	800475c <Parsing_USB_command+0x100>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004752:	2003      	movs	r0, #3
 8004754:	f7fe fab2 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004758:	f000 bdec 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 800475c:	2001      	movs	r0, #1
 800475e:	f7fe faad 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004762:	f000 bde7 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
	}


	// ==== DAC_SET command ====
	if(!(strcmp(decoded_string_1,"DAC_SET")))
 8004766:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800476a:	4994      	ldr	r1, [pc, #592]	; (80049bc <Parsing_USB_command+0x360>)
 800476c:	4618      	mov	r0, r3
 800476e:	f7fb fd07 	bl	8000180 <strcmp>
 8004772:	4603      	mov	r3, r0
 8004774:	2b00      	cmp	r3, #0
 8004776:	d154      	bne.n	8004822 <Parsing_USB_command+0x1c6>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004778:	f107 030c 	add.w	r3, r7, #12
 800477c:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004780:	4988      	ldr	r1, [pc, #544]	; (80049a4 <Parsing_USB_command+0x348>)
 8004782:	4886      	ldr	r0, [pc, #536]	; (800499c <Parsing_USB_command+0x340>)
 8004784:	f007 fc5e 	bl	800c044 <siscanf>
 8004788:	4603      	mov	r3, r0
 800478a:	2b02      	cmp	r3, #2
 800478c:	d004      	beq.n	8004798 <Parsing_USB_command+0x13c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800478e:	2001      	movs	r0, #1
 8004790:	f7fe fa94 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004794:	f000 bdce 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"TOP"))){
 8004798:	f107 030c 	add.w	r3, r7, #12
 800479c:	4988      	ldr	r1, [pc, #544]	; (80049c0 <Parsing_USB_command+0x364>)
 800479e:	4618      	mov	r0, r3
 80047a0:	f7fb fcee 	bl	8000180 <strcmp>
 80047a4:	4603      	mov	r3, r0
 80047a6:	2b00      	cmp	r3, #0
 80047a8:	d107      	bne.n	80047ba <Parsing_USB_command+0x15e>
			cmd_DAC_SET(DAC_CODE_TOP);
 80047aa:	4886      	ldr	r0, [pc, #536]	; (80049c4 <Parsing_USB_command+0x368>)
 80047ac:	f7fe fb76 	bl	8002e9c <cmd_DAC_SET>
			send_answer_to_CDC(OK_TYPE_2);
 80047b0:	2003      	movs	r0, #3
 80047b2:	f7fe fa83 	bl	8002cbc <send_answer_to_CDC>
			return;
 80047b6:	f000 bdbd 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 80047ba:	f107 030c 	add.w	r3, r7, #12
 80047be:	4982      	ldr	r1, [pc, #520]	; (80049c8 <Parsing_USB_command+0x36c>)
 80047c0:	4618      	mov	r0, r3
 80047c2:	f7fb fcdd 	bl	8000180 <strcmp>
 80047c6:	4603      	mov	r3, r0
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	d107      	bne.n	80047dc <Parsing_USB_command+0x180>
				cmd_DAC_SET(DAC_CODE_DOWN);
 80047cc:	2000      	movs	r0, #0
 80047ce:	f7fe fb65 	bl	8002e9c <cmd_DAC_SET>
				send_answer_to_CDC(OK_TYPE_2);
 80047d2:	2003      	movs	r0, #3
 80047d4:	f7fe fa72 	bl	8002cbc <send_answer_to_CDC>
				return;
 80047d8:	f000 bdac 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80047dc:	1d3b      	adds	r3, r7, #4
 80047de:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80047e2:	497a      	ldr	r1, [pc, #488]	; (80049cc <Parsing_USB_command+0x370>)
 80047e4:	486d      	ldr	r0, [pc, #436]	; (800499c <Parsing_USB_command+0x340>)
 80047e6:	f007 fc2d 	bl	800c044 <siscanf>
 80047ea:	4603      	mov	r3, r0
 80047ec:	2b02      	cmp	r3, #2
 80047ee:	d004      	beq.n	80047fa <Parsing_USB_command+0x19e>
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 80047f0:	2001      	movs	r0, #1
 80047f2:	f7fe fa63 	bl	8002cbc <send_answer_to_CDC>
					return;
 80047f6:	f000 bd9d 	b.w	8005334 <Parsing_USB_command+0xcd8>
				}

				if(cmd_SET_OUTPUT_VOLTAGE(f_value))
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	4618      	mov	r0, r3
 80047fe:	f7fe fb83 	bl	8002f08 <cmd_SET_OUTPUT_VOLTAGE>
 8004802:	4603      	mov	r3, r0
 8004804:	2b00      	cmp	r3, #0
 8004806:	d007      	beq.n	8004818 <Parsing_USB_command+0x1bc>
				{
					mode=VOLT_SCREEN;
 8004808:	4b68      	ldr	r3, [pc, #416]	; (80049ac <Parsing_USB_command+0x350>)
 800480a:	2205      	movs	r2, #5
 800480c:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 800480e:	2003      	movs	r0, #3
 8004810:	f7fe fa54 	bl	8002cbc <send_answer_to_CDC>
					return;
 8004814:	f000 bd8e 	b.w	8005334 <Parsing_USB_command+0xcd8>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 8004818:	2001      	movs	r0, #1
 800481a:	f7fe fa4f 	bl	8002cbc <send_answer_to_CDC>
					return;
 800481e:	f000 bd89 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
	}


	// ==== OUTPUT command ====
	if(!(strcmp(decoded_string_1,"OUTPUT")))
 8004822:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004826:	496a      	ldr	r1, [pc, #424]	; (80049d0 <Parsing_USB_command+0x374>)
 8004828:	4618      	mov	r0, r3
 800482a:	f7fb fca9 	bl	8000180 <strcmp>
 800482e:	4603      	mov	r3, r0
 8004830:	2b00      	cmp	r3, #0
 8004832:	d158      	bne.n	80048e6 <Parsing_USB_command+0x28a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004834:	f107 030c 	add.w	r3, r7, #12
 8004838:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800483c:	4959      	ldr	r1, [pc, #356]	; (80049a4 <Parsing_USB_command+0x348>)
 800483e:	4857      	ldr	r0, [pc, #348]	; (800499c <Parsing_USB_command+0x340>)
 8004840:	f007 fc00 	bl	800c044 <siscanf>
 8004844:	4603      	mov	r3, r0
 8004846:	2b02      	cmp	r3, #2
 8004848:	d004      	beq.n	8004854 <Parsing_USB_command+0x1f8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800484a:	2001      	movs	r0, #1
 800484c:	f7fe fa36 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004850:	f000 bd70 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"OFF"))){
 8004854:	f107 030c 	add.w	r3, r7, #12
 8004858:	495e      	ldr	r1, [pc, #376]	; (80049d4 <Parsing_USB_command+0x378>)
 800485a:	4618      	mov	r0, r3
 800485c:	f7fb fc90 	bl	8000180 <strcmp>
 8004860:	4603      	mov	r3, r0
 8004862:	2b00      	cmp	r3, #0
 8004864:	d107      	bne.n	8004876 <Parsing_USB_command+0x21a>
			output_state(Output_off_STATE);
 8004866:	2000      	movs	r0, #0
 8004868:	f7fd fec4 	bl	80025f4 <output_state>
			send_answer_to_CDC(OK_TYPE_2);
 800486c:	2003      	movs	r0, #3
 800486e:	f7fe fa25 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004872:	f000 bd5f 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"X1"))){
 8004876:	f107 030c 	add.w	r3, r7, #12
 800487a:	4957      	ldr	r1, [pc, #348]	; (80049d8 <Parsing_USB_command+0x37c>)
 800487c:	4618      	mov	r0, r3
 800487e:	f7fb fc7f 	bl	8000180 <strcmp>
 8004882:	4603      	mov	r3, r0
 8004884:	2b00      	cmp	r3, #0
 8004886:	d107      	bne.n	8004898 <Parsing_USB_command+0x23c>
				output_state(Output_x1_STATE);
 8004888:	2001      	movs	r0, #1
 800488a:	f7fd feb3 	bl	80025f4 <output_state>
				send_answer_to_CDC(OK_TYPE_2);
 800488e:	2003      	movs	r0, #3
 8004890:	f7fe fa14 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004894:	f000 bd4e 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"X2"))){
 8004898:	f107 030c 	add.w	r3, r7, #12
 800489c:	494f      	ldr	r1, [pc, #316]	; (80049dc <Parsing_USB_command+0x380>)
 800489e:	4618      	mov	r0, r3
 80048a0:	f7fb fc6e 	bl	8000180 <strcmp>
 80048a4:	4603      	mov	r3, r0
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d107      	bne.n	80048ba <Parsing_USB_command+0x25e>
					output_state(Output_x2_STATE);
 80048aa:	2002      	movs	r0, #2
 80048ac:	f7fd fea2 	bl	80025f4 <output_state>
					send_answer_to_CDC(OK_TYPE_2);
 80048b0:	2003      	movs	r0, #3
 80048b2:	f7fe fa03 	bl	8002cbc <send_answer_to_CDC>
					return;
 80048b6:	f000 bd3d 	b.w	8005334 <Parsing_USB_command+0xcd8>
				}
				else
				{
					if(!(strcmp(decoded_string_2,"X4"))){
 80048ba:	f107 030c 	add.w	r3, r7, #12
 80048be:	4948      	ldr	r1, [pc, #288]	; (80049e0 <Parsing_USB_command+0x384>)
 80048c0:	4618      	mov	r0, r3
 80048c2:	f7fb fc5d 	bl	8000180 <strcmp>
 80048c6:	4603      	mov	r3, r0
 80048c8:	2b00      	cmp	r3, #0
 80048ca:	d107      	bne.n	80048dc <Parsing_USB_command+0x280>
						output_state(Output_x4_STATE);
 80048cc:	2003      	movs	r0, #3
 80048ce:	f7fd fe91 	bl	80025f4 <output_state>
						send_answer_to_CDC(OK_TYPE_2);
 80048d2:	2003      	movs	r0, #3
 80048d4:	f7fe f9f2 	bl	8002cbc <send_answer_to_CDC>
						return;
 80048d8:	f000 bd2c 	b.w	8005334 <Parsing_USB_command+0xcd8>
					}
					else
					{
						send_answer_to_CDC(ERROR_TYPE_2);
 80048dc:	2001      	movs	r0, #1
 80048de:	f7fe f9ed 	bl	8002cbc <send_answer_to_CDC>
						return;
 80048e2:	f000 bd27 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
		}
	}

	// ==== CAL_STATE command ====
	if(!(strcmp(decoded_string_1,"CAL_STATE")))
 80048e6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80048ea:	493e      	ldr	r1, [pc, #248]	; (80049e4 <Parsing_USB_command+0x388>)
 80048ec:	4618      	mov	r0, r3
 80048ee:	f7fb fc47 	bl	8000180 <strcmp>
 80048f2:	4603      	mov	r3, r0
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	d136      	bne.n	8004966 <Parsing_USB_command+0x30a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80048f8:	f107 030c 	add.w	r3, r7, #12
 80048fc:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004900:	4928      	ldr	r1, [pc, #160]	; (80049a4 <Parsing_USB_command+0x348>)
 8004902:	4826      	ldr	r0, [pc, #152]	; (800499c <Parsing_USB_command+0x340>)
 8004904:	f007 fb9e 	bl	800c044 <siscanf>
 8004908:	4603      	mov	r3, r0
 800490a:	2b02      	cmp	r3, #2
 800490c:	d004      	beq.n	8004918 <Parsing_USB_command+0x2bc>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800490e:	2001      	movs	r0, #1
 8004910:	f7fe f9d4 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004914:	f000 bd0e 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"UNLOCK"))){
 8004918:	f107 030c 	add.w	r3, r7, #12
 800491c:	4932      	ldr	r1, [pc, #200]	; (80049e8 <Parsing_USB_command+0x38c>)
 800491e:	4618      	mov	r0, r3
 8004920:	f7fb fc2e 	bl	8000180 <strcmp>
 8004924:	4603      	mov	r3, r0
 8004926:	2b00      	cmp	r3, #0
 8004928:	d107      	bne.n	800493a <Parsing_USB_command+0x2de>
			CAL_STATE=UNLOCK_STATE;
 800492a:	4b30      	ldr	r3, [pc, #192]	; (80049ec <Parsing_USB_command+0x390>)
 800492c:	2200      	movs	r2, #0
 800492e:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004930:	2003      	movs	r0, #3
 8004932:	f7fe f9c3 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004936:	f000 bcfd 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"LOCK"))){
 800493a:	f107 030c 	add.w	r3, r7, #12
 800493e:	492c      	ldr	r1, [pc, #176]	; (80049f0 <Parsing_USB_command+0x394>)
 8004940:	4618      	mov	r0, r3
 8004942:	f7fb fc1d 	bl	8000180 <strcmp>
 8004946:	4603      	mov	r3, r0
 8004948:	2b00      	cmp	r3, #0
 800494a:	d107      	bne.n	800495c <Parsing_USB_command+0x300>
				CAL_STATE=LOCK_STATE;
 800494c:	4b27      	ldr	r3, [pc, #156]	; (80049ec <Parsing_USB_command+0x390>)
 800494e:	2201      	movs	r2, #1
 8004950:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 8004952:	2003      	movs	r0, #3
 8004954:	f7fe f9b2 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004958:	f000 bcec 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 800495c:	2001      	movs	r0, #1
 800495e:	f7fe f9ad 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004962:	f000 bce7 	b.w	8005334 <Parsing_USB_command+0xcd8>
			}
		}
	}

	// ==== DAC_CAL_TEMP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TEMP")))
 8004966:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800496a:	4922      	ldr	r1, [pc, #136]	; (80049f4 <Parsing_USB_command+0x398>)
 800496c:	4618      	mov	r0, r3
 800496e:	f7fb fc07 	bl	8000180 <strcmp>
 8004972:	4603      	mov	r3, r0
 8004974:	2b00      	cmp	r3, #0
 8004976:	d159      	bne.n	8004a2c <Parsing_USB_command+0x3d0>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004978:	f107 030c 	add.w	r3, r7, #12
 800497c:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004980:	4908      	ldr	r1, [pc, #32]	; (80049a4 <Parsing_USB_command+0x348>)
 8004982:	4806      	ldr	r0, [pc, #24]	; (800499c <Parsing_USB_command+0x340>)
 8004984:	f007 fb5e 	bl	800c044 <siscanf>
 8004988:	4603      	mov	r3, r0
 800498a:	2b02      	cmp	r3, #2
 800498c:	d034      	beq.n	80049f8 <Parsing_USB_command+0x39c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800498e:	2001      	movs	r0, #1
 8004990:	f7fe f994 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004994:	f000 bcce 	b.w	8005334 <Parsing_USB_command+0xcd8>
 8004998:	08010518 	.word	0x08010518
 800499c:	20000858 	.word	0x20000858
 80049a0:	0801051c 	.word	0x0801051c
 80049a4:	08010524 	.word	0x08010524
 80049a8:	0801052c 	.word	0x0801052c
 80049ac:	20000018 	.word	0x20000018
 80049b0:	08010534 	.word	0x08010534
 80049b4:	0801053c 	.word	0x0801053c
 80049b8:	08010544 	.word	0x08010544
 80049bc:	0801054c 	.word	0x0801054c
 80049c0:	08010554 	.word	0x08010554
 80049c4:	000fffff 	.word	0x000fffff
 80049c8:	08010558 	.word	0x08010558
 80049cc:	08010560 	.word	0x08010560
 80049d0:	08010568 	.word	0x08010568
 80049d4:	08010570 	.word	0x08010570
 80049d8:	08010574 	.word	0x08010574
 80049dc:	08010578 	.word	0x08010578
 80049e0:	0801057c 	.word	0x0801057c
 80049e4:	08010580 	.word	0x08010580
 80049e8:	0801058c 	.word	0x0801058c
 80049ec:	20000021 	.word	0x20000021
 80049f0:	08010594 	.word	0x08010594
 80049f4:	0801059c 	.word	0x0801059c
		}

		if(!(strcmp(decoded_string_2,"START"))){
 80049f8:	f107 030c 	add.w	r3, r7, #12
 80049fc:	49bf      	ldr	r1, [pc, #764]	; (8004cfc <Parsing_USB_command+0x6a0>)
 80049fe:	4618      	mov	r0, r3
 8004a00:	f7fb fbbe 	bl	8000180 <strcmp>
 8004a04:	4603      	mov	r3, r0
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d10b      	bne.n	8004a22 <Parsing_USB_command+0x3c6>
			send_answer_to_CDC(RUN_CAL_TYPE_TEMP);
 8004a0a:	200f      	movs	r0, #15
 8004a0c:	f7fe f956 	bl	8002cbc <send_answer_to_CDC>
			cmd_CAL(DAC_CAL_TEMP,NONE);
 8004a10:	49bb      	ldr	r1, [pc, #748]	; (8004d00 <Parsing_USB_command+0x6a4>)
 8004a12:	2006      	movs	r0, #6
 8004a14:	f7fe fccc 	bl	80033b0 <cmd_CAL>
			send_answer_to_CDC(OK_TYPE_1);
 8004a18:	2002      	movs	r0, #2
 8004a1a:	f7fe f94f 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004a1e:	f000 bc89 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 8004a22:	2000      	movs	r0, #0
 8004a24:	f7fe f94a 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004a28:	f000 bc84 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}
	}

	// ==== DAC_CAL_POLY_A command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_A")))
 8004a2c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004a30:	49b4      	ldr	r1, [pc, #720]	; (8004d04 <Parsing_USB_command+0x6a8>)
 8004a32:	4618      	mov	r0, r3
 8004a34:	f7fb fba4 	bl	8000180 <strcmp>
 8004a38:	4603      	mov	r3, r0
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	d118      	bne.n	8004a70 <Parsing_USB_command+0x414>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004a3e:	1d3b      	adds	r3, r7, #4
 8004a40:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004a44:	49b0      	ldr	r1, [pc, #704]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004a46:	48b1      	ldr	r0, [pc, #708]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004a48:	f007 fafc 	bl	800c044 <siscanf>
 8004a4c:	4603      	mov	r3, r0
 8004a4e:	2b02      	cmp	r3, #2
 8004a50:	d004      	beq.n	8004a5c <Parsing_USB_command+0x400>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004a52:	2001      	movs	r0, #1
 8004a54:	f7fe f932 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004a58:	f000 bc6c 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		cmd_CAL(DAC_CAL_POLY_A,f_value);
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	4619      	mov	r1, r3
 8004a60:	2007      	movs	r0, #7
 8004a62:	f7fe fca5 	bl	80033b0 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 8004a66:	2003      	movs	r0, #3
 8004a68:	f7fe f928 	bl	8002cbc <send_answer_to_CDC>
		return;
 8004a6c:	f000 bc62 	b.w	8005334 <Parsing_USB_command+0xcd8>
	}

	// ==== DAC_CAL_POLY_B command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_B")))
 8004a70:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004a74:	49a6      	ldr	r1, [pc, #664]	; (8004d10 <Parsing_USB_command+0x6b4>)
 8004a76:	4618      	mov	r0, r3
 8004a78:	f7fb fb82 	bl	8000180 <strcmp>
 8004a7c:	4603      	mov	r3, r0
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d118      	bne.n	8004ab4 <Parsing_USB_command+0x458>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004a82:	1d3b      	adds	r3, r7, #4
 8004a84:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004a88:	499f      	ldr	r1, [pc, #636]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004a8a:	48a0      	ldr	r0, [pc, #640]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004a8c:	f007 fada 	bl	800c044 <siscanf>
 8004a90:	4603      	mov	r3, r0
 8004a92:	2b02      	cmp	r3, #2
 8004a94:	d004      	beq.n	8004aa0 <Parsing_USB_command+0x444>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004a96:	2001      	movs	r0, #1
 8004a98:	f7fe f910 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004a9c:	f000 bc4a 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		cmd_CAL(DAC_CAL_POLY_B,f_value);
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	4619      	mov	r1, r3
 8004aa4:	2008      	movs	r0, #8
 8004aa6:	f7fe fc83 	bl	80033b0 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 8004aaa:	2003      	movs	r0, #3
 8004aac:	f7fe f906 	bl	8002cbc <send_answer_to_CDC>
		return;
 8004ab0:	f000 bc40 	b.w	8005334 <Parsing_USB_command+0xcd8>
	}

	// ==== DAC_CAL_POLY_C command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_C")))
 8004ab4:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004ab8:	4996      	ldr	r1, [pc, #600]	; (8004d14 <Parsing_USB_command+0x6b8>)
 8004aba:	4618      	mov	r0, r3
 8004abc:	f7fb fb60 	bl	8000180 <strcmp>
 8004ac0:	4603      	mov	r3, r0
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d118      	bne.n	8004af8 <Parsing_USB_command+0x49c>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004ac6:	1d3b      	adds	r3, r7, #4
 8004ac8:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004acc:	498e      	ldr	r1, [pc, #568]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004ace:	488f      	ldr	r0, [pc, #572]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004ad0:	f007 fab8 	bl	800c044 <siscanf>
 8004ad4:	4603      	mov	r3, r0
 8004ad6:	2b02      	cmp	r3, #2
 8004ad8:	d004      	beq.n	8004ae4 <Parsing_USB_command+0x488>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004ada:	2001      	movs	r0, #1
 8004adc:	f7fe f8ee 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004ae0:	f000 bc28 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		cmd_CAL(DAC_CAL_POLY_C,f_value);
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	4619      	mov	r1, r3
 8004ae8:	2009      	movs	r0, #9
 8004aea:	f7fe fc61 	bl	80033b0 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 8004aee:	2003      	movs	r0, #3
 8004af0:	f7fe f8e4 	bl	8002cbc <send_answer_to_CDC>
		return;
 8004af4:	f000 bc1e 	b.w	8005334 <Parsing_USB_command+0xcd8>
	}

	// ==== GAIN_X2_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X2_CAL")))
 8004af8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004afc:	4986      	ldr	r1, [pc, #536]	; (8004d18 <Parsing_USB_command+0x6bc>)
 8004afe:	4618      	mov	r0, r3
 8004b00:	f7fb fb3e 	bl	8000180 <strcmp>
 8004b04:	4603      	mov	r3, r0
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d11e      	bne.n	8004b48 <Parsing_USB_command+0x4ec>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004b0a:	1d3b      	adds	r3, r7, #4
 8004b0c:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004b10:	497d      	ldr	r1, [pc, #500]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004b12:	487e      	ldr	r0, [pc, #504]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004b14:	f007 fa96 	bl	800c044 <siscanf>
 8004b18:	4603      	mov	r3, r0
 8004b1a:	2b02      	cmp	r3, #2
 8004b1c:	d004      	beq.n	8004b28 <Parsing_USB_command+0x4cc>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004b1e:	2001      	movs	r0, #1
 8004b20:	f7fe f8cc 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b24:	f000 bc06 	b.w	8005334 <Parsing_USB_command+0xcd8>
		}

		if(cmd_CAL(GAIN_X2_CAL,f_value))
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	4619      	mov	r1, r3
 8004b2c:	200c      	movs	r0, #12
 8004b2e:	f7fe fc3f 	bl	80033b0 <cmd_CAL>
 8004b32:	4603      	mov	r3, r0
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	d003      	beq.n	8004b40 <Parsing_USB_command+0x4e4>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004b38:	2003      	movs	r0, #3
 8004b3a:	f7fe f8bf 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b3e:	e3f9      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004b40:	2001      	movs	r0, #1
 8004b42:	f7fe f8bb 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b46:	e3f5      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
	}

	// ==== GAIN_X4_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X4_CAL")))
 8004b48:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004b4c:	4973      	ldr	r1, [pc, #460]	; (8004d1c <Parsing_USB_command+0x6c0>)
 8004b4e:	4618      	mov	r0, r3
 8004b50:	f7fb fb16 	bl	8000180 <strcmp>
 8004b54:	4603      	mov	r3, r0
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	d11d      	bne.n	8004b96 <Parsing_USB_command+0x53a>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004b5a:	1d3b      	adds	r3, r7, #4
 8004b5c:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004b60:	4969      	ldr	r1, [pc, #420]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004b62:	486a      	ldr	r0, [pc, #424]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004b64:	f007 fa6e 	bl	800c044 <siscanf>
 8004b68:	4603      	mov	r3, r0
 8004b6a:	2b02      	cmp	r3, #2
 8004b6c:	d003      	beq.n	8004b76 <Parsing_USB_command+0x51a>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004b6e:	2001      	movs	r0, #1
 8004b70:	f7fe f8a4 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b74:	e3de      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}

		if(cmd_CAL(GAIN_X4_CAL,f_value))
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	4619      	mov	r1, r3
 8004b7a:	200d      	movs	r0, #13
 8004b7c:	f7fe fc18 	bl	80033b0 <cmd_CAL>
 8004b80:	4603      	mov	r3, r0
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d003      	beq.n	8004b8e <Parsing_USB_command+0x532>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004b86:	2003      	movs	r0, #3
 8004b88:	f7fe f898 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b8c:	e3d2      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004b8e:	2001      	movs	r0, #1
 8004b90:	f7fe f894 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004b94:	e3ce      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
	}


	// ==== DAC_CAL_TOP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TOP")))
 8004b96:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004b9a:	4961      	ldr	r1, [pc, #388]	; (8004d20 <Parsing_USB_command+0x6c4>)
 8004b9c:	4618      	mov	r0, r3
 8004b9e:	f7fb faef 	bl	8000180 <strcmp>
 8004ba2:	4603      	mov	r3, r0
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d11d      	bne.n	8004be4 <Parsing_USB_command+0x588>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004ba8:	1d3b      	adds	r3, r7, #4
 8004baa:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004bae:	4956      	ldr	r1, [pc, #344]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004bb0:	4856      	ldr	r0, [pc, #344]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004bb2:	f007 fa47 	bl	800c044 <siscanf>
 8004bb6:	4603      	mov	r3, r0
 8004bb8:	2b02      	cmp	r3, #2
 8004bba:	d003      	beq.n	8004bc4 <Parsing_USB_command+0x568>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004bbc:	2001      	movs	r0, #1
 8004bbe:	f7fe f87d 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004bc2:	e3b7      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}

		if(cmd_CAL(DAC_CAL_TOP,f_value))
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	4619      	mov	r1, r3
 8004bc8:	200a      	movs	r0, #10
 8004bca:	f7fe fbf1 	bl	80033b0 <cmd_CAL>
 8004bce:	4603      	mov	r3, r0
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d003      	beq.n	8004bdc <Parsing_USB_command+0x580>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004bd4:	2003      	movs	r0, #3
 8004bd6:	f7fe f871 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004bda:	e3ab      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004bdc:	2001      	movs	r0, #1
 8004bde:	f7fe f86d 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004be2:	e3a7      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
	}


	// ==== DAC_CAL_DOWN command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_DOWN")))
 8004be4:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004be8:	494e      	ldr	r1, [pc, #312]	; (8004d24 <Parsing_USB_command+0x6c8>)
 8004bea:	4618      	mov	r0, r3
 8004bec:	f7fb fac8 	bl	8000180 <strcmp>
 8004bf0:	4603      	mov	r3, r0
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d11d      	bne.n	8004c32 <Parsing_USB_command+0x5d6>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004bf6:	1d3b      	adds	r3, r7, #4
 8004bf8:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004bfc:	4942      	ldr	r1, [pc, #264]	; (8004d08 <Parsing_USB_command+0x6ac>)
 8004bfe:	4843      	ldr	r0, [pc, #268]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004c00:	f007 fa20 	bl	800c044 <siscanf>
 8004c04:	4603      	mov	r3, r0
 8004c06:	2b02      	cmp	r3, #2
 8004c08:	d003      	beq.n	8004c12 <Parsing_USB_command+0x5b6>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004c0a:	2001      	movs	r0, #1
 8004c0c:	f7fe f856 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c10:	e390      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}

		if(cmd_CAL(DAC_CAL_DOWN,f_value))
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	4619      	mov	r1, r3
 8004c16:	200b      	movs	r0, #11
 8004c18:	f7fe fbca 	bl	80033b0 <cmd_CAL>
 8004c1c:	4603      	mov	r3, r0
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d003      	beq.n	8004c2a <Parsing_USB_command+0x5ce>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004c22:	2003      	movs	r0, #3
 8004c24:	f7fe f84a 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c28:	e384      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004c2a:	2001      	movs	r0, #1
 8004c2c:	f7fe f846 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c30:	e380      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
	}

	// ==== CAL_C_VALUE command ====
	if(!(strcmp(decoded_string_1,"CAL_C_VALUE")))
 8004c32:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004c36:	493c      	ldr	r1, [pc, #240]	; (8004d28 <Parsing_USB_command+0x6cc>)
 8004c38:	4618      	mov	r0, r3
 8004c3a:	f7fb faa1 	bl	8000180 <strcmp>
 8004c3e:	4603      	mov	r3, r0
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d126      	bne.n	8004c92 <Parsing_USB_command+0x636>
	{
		if(sscanf((char *)command_buffer,"%s %d %f %f", decoded_string_1, &num_of_cap, &f_value, &f_value2)!=4)
 8004c44:	f107 0108 	add.w	r1, r7, #8
 8004c48:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004c4c:	463b      	mov	r3, r7
 8004c4e:	9301      	str	r3, [sp, #4]
 8004c50:	1d3b      	adds	r3, r7, #4
 8004c52:	9300      	str	r3, [sp, #0]
 8004c54:	460b      	mov	r3, r1
 8004c56:	4935      	ldr	r1, [pc, #212]	; (8004d2c <Parsing_USB_command+0x6d0>)
 8004c58:	482c      	ldr	r0, [pc, #176]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004c5a:	f007 f9f3 	bl	800c044 <siscanf>
 8004c5e:	4603      	mov	r3, r0
 8004c60:	2b04      	cmp	r3, #4
 8004c62:	d003      	beq.n	8004c6c <Parsing_USB_command+0x610>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004c64:	2001      	movs	r0, #1
 8004c66:	f7fe f829 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c6a:	e363      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		if(CAL_STATE!=LOCK_STATE)
 8004c6c:	4b30      	ldr	r3, [pc, #192]	; (8004d30 <Parsing_USB_command+0x6d4>)
 8004c6e:	781b      	ldrb	r3, [r3, #0]
 8004c70:	2b01      	cmp	r3, #1
 8004c72:	d00a      	beq.n	8004c8a <Parsing_USB_command+0x62e>
		{
			write_c_value_to_EEPROM(num_of_cap, f_value, f_value2);
 8004c74:	68bb      	ldr	r3, [r7, #8]
 8004c76:	4618      	mov	r0, r3
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	683a      	ldr	r2, [r7, #0]
 8004c7c:	4619      	mov	r1, r3
 8004c7e:	f7fe fd65 	bl	800374c <write_c_value_to_EEPROM>
			send_answer_to_CDC(OK_TYPE_2);
 8004c82:	2003      	movs	r0, #3
 8004c84:	f7fe f81a 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c88:	e354      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004c8a:	2001      	movs	r0, #1
 8004c8c:	f7fe f816 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004c90:	e350      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
	}


	// ==== SWEEP_RATE command ====
	if(!(strcmp(decoded_string_1,"SWEEP_RATE")))
 8004c92:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004c96:	4927      	ldr	r1, [pc, #156]	; (8004d34 <Parsing_USB_command+0x6d8>)
 8004c98:	4618      	mov	r0, r3
 8004c9a:	f7fb fa71 	bl	8000180 <strcmp>
 8004c9e:	4603      	mov	r3, r0
 8004ca0:	2b00      	cmp	r3, #0
 8004ca2:	d15d      	bne.n	8004d60 <Parsing_USB_command+0x704>
	{
		if(sscanf((char *)command_buffer,"%s %s %f", decoded_string_1, decoded_string_2, &f_value)!=3)
 8004ca4:	f107 010c 	add.w	r1, r7, #12
 8004ca8:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004cac:	1d3b      	adds	r3, r7, #4
 8004cae:	9300      	str	r3, [sp, #0]
 8004cb0:	460b      	mov	r3, r1
 8004cb2:	4921      	ldr	r1, [pc, #132]	; (8004d38 <Parsing_USB_command+0x6dc>)
 8004cb4:	4815      	ldr	r0, [pc, #84]	; (8004d0c <Parsing_USB_command+0x6b0>)
 8004cb6:	f007 f9c5 	bl	800c044 <siscanf>
 8004cba:	4603      	mov	r3, r0
 8004cbc:	2b03      	cmp	r3, #3
 8004cbe:	d003      	beq.n	8004cc8 <Parsing_USB_command+0x66c>
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 8004cc0:	2000      	movs	r0, #0
 8004cc2:	f7fd fffb 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004cc6:	e335      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		if(!(strcmp(decoded_string_2,"AMP")))
 8004cc8:	f107 030c 	add.w	r3, r7, #12
 8004ccc:	491b      	ldr	r1, [pc, #108]	; (8004d3c <Parsing_USB_command+0x6e0>)
 8004cce:	4618      	mov	r0, r3
 8004cd0:	f7fb fa56 	bl	8000180 <strcmp>
 8004cd4:	4603      	mov	r3, r0
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d132      	bne.n	8004d40 <Parsing_USB_command+0x6e4>
		{
			if(Recalculate_ramp_speed(AMP_SCREEN, f_value)==ret_OK)
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	4619      	mov	r1, r3
 8004cde:	2004      	movs	r0, #4
 8004ce0:	f7fe fac2 	bl	8003268 <Recalculate_ramp_speed>
 8004ce4:	4603      	mov	r3, r0
 8004ce6:	2b01      	cmp	r3, #1
 8004ce8:	d103      	bne.n	8004cf2 <Parsing_USB_command+0x696>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004cea:	2003      	movs	r0, #3
 8004cec:	f7fd ffe6 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004cf0:	e320      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004cf2:	2001      	movs	r0, #1
 8004cf4:	f7fd ffe2 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004cf8:	e31c      	b.n	8005334 <Parsing_USB_command+0xcd8>
 8004cfa:	bf00      	nop
 8004cfc:	0801052c 	.word	0x0801052c
 8004d00:	41600000 	.word	0x41600000
 8004d04:	080105ac 	.word	0x080105ac
 8004d08:	08010560 	.word	0x08010560
 8004d0c:	20000858 	.word	0x20000858
 8004d10:	080105bc 	.word	0x080105bc
 8004d14:	080105cc 	.word	0x080105cc
 8004d18:	080105dc 	.word	0x080105dc
 8004d1c:	080105e8 	.word	0x080105e8
 8004d20:	080105f4 	.word	0x080105f4
 8004d24:	08010600 	.word	0x08010600
 8004d28:	08010610 	.word	0x08010610
 8004d2c:	0801061c 	.word	0x0801061c
 8004d30:	20000021 	.word	0x20000021
 8004d34:	08010628 	.word	0x08010628
 8004d38:	08010634 	.word	0x08010634
 8004d3c:	08010640 	.word	0x08010640
			}
		}
		else
		{
			if(Recalculate_ramp_speed(dU_dt_SCREEN, f_value)==ret_OK)
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	4619      	mov	r1, r3
 8004d44:	2003      	movs	r0, #3
 8004d46:	f7fe fa8f 	bl	8003268 <Recalculate_ramp_speed>
 8004d4a:	4603      	mov	r3, r0
 8004d4c:	2b01      	cmp	r3, #1
 8004d4e:	d103      	bne.n	8004d58 <Parsing_USB_command+0x6fc>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004d50:	2003      	movs	r0, #3
 8004d52:	f7fd ffb3 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004d56:	e2ed      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004d58:	2001      	movs	r0, #1
 8004d5a:	f7fd ffaf 	bl	8002cbc <send_answer_to_CDC>
				return;
 8004d5e:	e2e9      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
		}
	}

	// ==== SHOW command ====
	if(!(strcmp(decoded_string_1,"SHOW")))
 8004d60:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004d64:	49a8      	ldr	r1, [pc, #672]	; (8005008 <Parsing_USB_command+0x9ac>)
 8004d66:	4618      	mov	r0, r3
 8004d68:	f7fb fa0a 	bl	8000180 <strcmp>
 8004d6c:	4603      	mov	r3, r0
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	f040 8290 	bne.w	8005294 <Parsing_USB_command+0xc38>
	{

		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004d74:	f107 030c 	add.w	r3, r7, #12
 8004d78:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8004d7c:	49a3      	ldr	r1, [pc, #652]	; (800500c <Parsing_USB_command+0x9b0>)
 8004d7e:	48a4      	ldr	r0, [pc, #656]	; (8005010 <Parsing_USB_command+0x9b4>)
 8004d80:	f007 f960 	bl	800c044 <siscanf>
 8004d84:	4603      	mov	r3, r0
 8004d86:	2b02      	cmp	r3, #2
 8004d88:	d003      	beq.n	8004d92 <Parsing_USB_command+0x736>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004d8a:	2001      	movs	r0, #1
 8004d8c:	f7fd ff96 	bl	8002cbc <send_answer_to_CDC>
			return;
 8004d90:	e2d0      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"INFO"))){
 8004d92:	f107 030c 	add.w	r3, r7, #12
 8004d96:	499f      	ldr	r1, [pc, #636]	; (8005014 <Parsing_USB_command+0x9b8>)
 8004d98:	4618      	mov	r0, r3
 8004d9a:	f7fb f9f1 	bl	8000180 <strcmp>
 8004d9e:	4603      	mov	r3, r0
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	f040 8266 	bne.w	8005272 <Parsing_USB_command+0xc16>
			sprintf((char *)large_string_buffer,"\n\rDAC 0xFFFFF voltage calibration constant: %1.6E\n\r",cal_DAC_up_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004da6:	4b9c      	ldr	r3, [pc, #624]	; (8005018 <Parsing_USB_command+0x9bc>)
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	4618      	mov	r0, r3
 8004dac:	f7fb fb5e 	bl	800046c <__aeabi_f2d>
 8004db0:	4602      	mov	r2, r0
 8004db2:	460b      	mov	r3, r1
 8004db4:	4999      	ldr	r1, [pc, #612]	; (800501c <Parsing_USB_command+0x9c0>)
 8004db6:	489a      	ldr	r0, [pc, #616]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004db8:	f007 f924 	bl	800c004 <siprintf>
 8004dbc:	e004      	b.n	8004dc8 <Parsing_USB_command+0x76c>
 8004dbe:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004dc2:	3301      	adds	r3, #1
 8004dc4:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004dc8:	4895      	ldr	r0, [pc, #596]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004dca:	f7fb f9e3 	bl	8000194 <strlen>
 8004dce:	4603      	mov	r3, r0
 8004dd0:	b29b      	uxth	r3, r3
 8004dd2:	4619      	mov	r1, r3
 8004dd4:	4892      	ldr	r0, [pc, #584]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004dd6:	f005 ff6d 	bl	800acb4 <CDC_Transmit_FS>
 8004dda:	4603      	mov	r3, r0
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d003      	beq.n	8004de8 <Parsing_USB_command+0x78c>
 8004de0:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004de4:	2bff      	cmp	r3, #255	; 0xff
 8004de6:	d1ea      	bne.n	8004dbe <Parsing_USB_command+0x762>
			sprintf((char *)large_string_buffer,"DAC 0x00000 voltage calibration constant: %1.6E\n\r",cal_DAC_down_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004de8:	4b8e      	ldr	r3, [pc, #568]	; (8005024 <Parsing_USB_command+0x9c8>)
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	4618      	mov	r0, r3
 8004dee:	f7fb fb3d 	bl	800046c <__aeabi_f2d>
 8004df2:	4602      	mov	r2, r0
 8004df4:	460b      	mov	r3, r1
 8004df6:	498c      	ldr	r1, [pc, #560]	; (8005028 <Parsing_USB_command+0x9cc>)
 8004df8:	4889      	ldr	r0, [pc, #548]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004dfa:	f007 f903 	bl	800c004 <siprintf>
 8004dfe:	e004      	b.n	8004e0a <Parsing_USB_command+0x7ae>
 8004e00:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e04:	3301      	adds	r3, #1
 8004e06:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004e0a:	4885      	ldr	r0, [pc, #532]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e0c:	f7fb f9c2 	bl	8000194 <strlen>
 8004e10:	4603      	mov	r3, r0
 8004e12:	b29b      	uxth	r3, r3
 8004e14:	4619      	mov	r1, r3
 8004e16:	4882      	ldr	r0, [pc, #520]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e18:	f005 ff4c 	bl	800acb4 <CDC_Transmit_FS>
 8004e1c:	4603      	mov	r3, r0
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d003      	beq.n	8004e2a <Parsing_USB_command+0x7ce>
 8004e22:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e26:	2bff      	cmp	r3, #255	; 0xff
 8004e28:	d1ea      	bne.n	8004e00 <Parsing_USB_command+0x7a4>
			sprintf((char *)large_string_buffer,"Linearity correction A: %1.6E\n\r",corr_coeff_1);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004e2a:	4b80      	ldr	r3, [pc, #512]	; (800502c <Parsing_USB_command+0x9d0>)
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	4618      	mov	r0, r3
 8004e30:	f7fb fb1c 	bl	800046c <__aeabi_f2d>
 8004e34:	4602      	mov	r2, r0
 8004e36:	460b      	mov	r3, r1
 8004e38:	497d      	ldr	r1, [pc, #500]	; (8005030 <Parsing_USB_command+0x9d4>)
 8004e3a:	4879      	ldr	r0, [pc, #484]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e3c:	f007 f8e2 	bl	800c004 <siprintf>
 8004e40:	e004      	b.n	8004e4c <Parsing_USB_command+0x7f0>
 8004e42:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e46:	3301      	adds	r3, #1
 8004e48:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004e4c:	4874      	ldr	r0, [pc, #464]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e4e:	f7fb f9a1 	bl	8000194 <strlen>
 8004e52:	4603      	mov	r3, r0
 8004e54:	b29b      	uxth	r3, r3
 8004e56:	4619      	mov	r1, r3
 8004e58:	4871      	ldr	r0, [pc, #452]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e5a:	f005 ff2b 	bl	800acb4 <CDC_Transmit_FS>
 8004e5e:	4603      	mov	r3, r0
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d003      	beq.n	8004e6c <Parsing_USB_command+0x810>
 8004e64:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e68:	2bff      	cmp	r3, #255	; 0xff
 8004e6a:	d1ea      	bne.n	8004e42 <Parsing_USB_command+0x7e6>
			sprintf((char *)large_string_buffer,"Linearity correction B: %1.6E\n\r",corr_coeff_2);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004e6c:	4b71      	ldr	r3, [pc, #452]	; (8005034 <Parsing_USB_command+0x9d8>)
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	4618      	mov	r0, r3
 8004e72:	f7fb fafb 	bl	800046c <__aeabi_f2d>
 8004e76:	4602      	mov	r2, r0
 8004e78:	460b      	mov	r3, r1
 8004e7a:	496f      	ldr	r1, [pc, #444]	; (8005038 <Parsing_USB_command+0x9dc>)
 8004e7c:	4868      	ldr	r0, [pc, #416]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e7e:	f007 f8c1 	bl	800c004 <siprintf>
 8004e82:	e004      	b.n	8004e8e <Parsing_USB_command+0x832>
 8004e84:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004e88:	3301      	adds	r3, #1
 8004e8a:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004e8e:	4864      	ldr	r0, [pc, #400]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e90:	f7fb f980 	bl	8000194 <strlen>
 8004e94:	4603      	mov	r3, r0
 8004e96:	b29b      	uxth	r3, r3
 8004e98:	4619      	mov	r1, r3
 8004e9a:	4861      	ldr	r0, [pc, #388]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004e9c:	f005 ff0a 	bl	800acb4 <CDC_Transmit_FS>
 8004ea0:	4603      	mov	r3, r0
 8004ea2:	2b00      	cmp	r3, #0
 8004ea4:	d003      	beq.n	8004eae <Parsing_USB_command+0x852>
 8004ea6:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004eaa:	2bff      	cmp	r3, #255	; 0xff
 8004eac:	d1ea      	bne.n	8004e84 <Parsing_USB_command+0x828>
			sprintf((char *)large_string_buffer,"Linearity correction C: %1.6E\n\r",corr_coeff_3);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004eae:	4b63      	ldr	r3, [pc, #396]	; (800503c <Parsing_USB_command+0x9e0>)
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	4618      	mov	r0, r3
 8004eb4:	f7fb fada 	bl	800046c <__aeabi_f2d>
 8004eb8:	4602      	mov	r2, r0
 8004eba:	460b      	mov	r3, r1
 8004ebc:	4960      	ldr	r1, [pc, #384]	; (8005040 <Parsing_USB_command+0x9e4>)
 8004ebe:	4858      	ldr	r0, [pc, #352]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004ec0:	f007 f8a0 	bl	800c004 <siprintf>
 8004ec4:	e004      	b.n	8004ed0 <Parsing_USB_command+0x874>
 8004ec6:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004eca:	3301      	adds	r3, #1
 8004ecc:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004ed0:	4853      	ldr	r0, [pc, #332]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004ed2:	f7fb f95f 	bl	8000194 <strlen>
 8004ed6:	4603      	mov	r3, r0
 8004ed8:	b29b      	uxth	r3, r3
 8004eda:	4619      	mov	r1, r3
 8004edc:	4850      	ldr	r0, [pc, #320]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004ede:	f005 fee9 	bl	800acb4 <CDC_Transmit_FS>
 8004ee2:	4603      	mov	r3, r0
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d003      	beq.n	8004ef0 <Parsing_USB_command+0x894>
 8004ee8:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004eec:	2bff      	cmp	r3, #255	; 0xff
 8004eee:	d1ea      	bne.n	8004ec6 <Parsing_USB_command+0x86a>
			sprintf((char *)large_string_buffer,"LT5400 gain X2 correction: %1.6E\n\r",gain_x2_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004ef0:	4b54      	ldr	r3, [pc, #336]	; (8005044 <Parsing_USB_command+0x9e8>)
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	4618      	mov	r0, r3
 8004ef6:	f7fb fab9 	bl	800046c <__aeabi_f2d>
 8004efa:	4602      	mov	r2, r0
 8004efc:	460b      	mov	r3, r1
 8004efe:	4952      	ldr	r1, [pc, #328]	; (8005048 <Parsing_USB_command+0x9ec>)
 8004f00:	4847      	ldr	r0, [pc, #284]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f02:	f007 f87f 	bl	800c004 <siprintf>
 8004f06:	e004      	b.n	8004f12 <Parsing_USB_command+0x8b6>
 8004f08:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004f0c:	3301      	adds	r3, #1
 8004f0e:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004f12:	4843      	ldr	r0, [pc, #268]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f14:	f7fb f93e 	bl	8000194 <strlen>
 8004f18:	4603      	mov	r3, r0
 8004f1a:	b29b      	uxth	r3, r3
 8004f1c:	4619      	mov	r1, r3
 8004f1e:	4840      	ldr	r0, [pc, #256]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f20:	f005 fec8 	bl	800acb4 <CDC_Transmit_FS>
 8004f24:	4603      	mov	r3, r0
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d003      	beq.n	8004f32 <Parsing_USB_command+0x8d6>
 8004f2a:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004f2e:	2bff      	cmp	r3, #255	; 0xff
 8004f30:	d1ea      	bne.n	8004f08 <Parsing_USB_command+0x8ac>
			sprintf((char *)large_string_buffer,"LT5400 gain X4 correction: %1.6E\n\r",gain_x4_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004f32:	4b46      	ldr	r3, [pc, #280]	; (800504c <Parsing_USB_command+0x9f0>)
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	4618      	mov	r0, r3
 8004f38:	f7fb fa98 	bl	800046c <__aeabi_f2d>
 8004f3c:	4602      	mov	r2, r0
 8004f3e:	460b      	mov	r3, r1
 8004f40:	4943      	ldr	r1, [pc, #268]	; (8005050 <Parsing_USB_command+0x9f4>)
 8004f42:	4837      	ldr	r0, [pc, #220]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f44:	f007 f85e 	bl	800c004 <siprintf>
 8004f48:	e004      	b.n	8004f54 <Parsing_USB_command+0x8f8>
 8004f4a:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004f4e:	3301      	adds	r3, #1
 8004f50:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004f54:	4832      	ldr	r0, [pc, #200]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f56:	f7fb f91d 	bl	8000194 <strlen>
 8004f5a:	4603      	mov	r3, r0
 8004f5c:	b29b      	uxth	r3, r3
 8004f5e:	4619      	mov	r1, r3
 8004f60:	482f      	ldr	r0, [pc, #188]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004f62:	f005 fea7 	bl	800acb4 <CDC_Transmit_FS>
 8004f66:	4603      	mov	r3, r0
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	d003      	beq.n	8004f74 <Parsing_USB_command+0x918>
 8004f6c:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004f70:	2bff      	cmp	r3, #255	; 0xff
 8004f72:	d1ea      	bne.n	8004f4a <Parsing_USB_command+0x8ee>
			for(uint8_t i=0;i<C_value_max_count;i++)
 8004f74:	2300      	movs	r3, #0
 8004f76:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 8004f7a:	e039      	b.n	8004ff0 <Parsing_USB_command+0x994>
			{
				sprintf((char *)large_string_buffer,"C%d capacitance: %1.6EpF, leakage: %1.6EA/V\n\r",(int)i,C_value[i],C_leakage[i]);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004f7c:	f897 608e 	ldrb.w	r6, [r7, #142]	; 0x8e
 8004f80:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004f84:	4a33      	ldr	r2, [pc, #204]	; (8005054 <Parsing_USB_command+0x9f8>)
 8004f86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004f8a:	4618      	mov	r0, r3
 8004f8c:	f7fb fa6e 	bl	800046c <__aeabi_f2d>
 8004f90:	4604      	mov	r4, r0
 8004f92:	460d      	mov	r5, r1
 8004f94:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004f98:	4a2f      	ldr	r2, [pc, #188]	; (8005058 <Parsing_USB_command+0x9fc>)
 8004f9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004f9e:	4618      	mov	r0, r3
 8004fa0:	f7fb fa64 	bl	800046c <__aeabi_f2d>
 8004fa4:	4602      	mov	r2, r0
 8004fa6:	460b      	mov	r3, r1
 8004fa8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004fac:	e9cd 4500 	strd	r4, r5, [sp]
 8004fb0:	4632      	mov	r2, r6
 8004fb2:	492a      	ldr	r1, [pc, #168]	; (800505c <Parsing_USB_command+0xa00>)
 8004fb4:	481a      	ldr	r0, [pc, #104]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004fb6:	f007 f825 	bl	800c004 <siprintf>
 8004fba:	e004      	b.n	8004fc6 <Parsing_USB_command+0x96a>
 8004fbc:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004fc0:	3301      	adds	r3, #1
 8004fc2:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8004fc6:	4816      	ldr	r0, [pc, #88]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004fc8:	f7fb f8e4 	bl	8000194 <strlen>
 8004fcc:	4603      	mov	r3, r0
 8004fce:	b29b      	uxth	r3, r3
 8004fd0:	4619      	mov	r1, r3
 8004fd2:	4813      	ldr	r0, [pc, #76]	; (8005020 <Parsing_USB_command+0x9c4>)
 8004fd4:	f005 fe6e 	bl	800acb4 <CDC_Transmit_FS>
 8004fd8:	4603      	mov	r3, r0
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d003      	beq.n	8004fe6 <Parsing_USB_command+0x98a>
 8004fde:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8004fe2:	2bff      	cmp	r3, #255	; 0xff
 8004fe4:	d1ea      	bne.n	8004fbc <Parsing_USB_command+0x960>
			for(uint8_t i=0;i<C_value_max_count;i++)
 8004fe6:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004fea:	3301      	adds	r3, #1
 8004fec:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 8004ff0:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 8004ff4:	2b09      	cmp	r3, #9
 8004ff6:	d9c1      	bls.n	8004f7c <Parsing_USB_command+0x920>
			}
			sprintf((char *)large_string_buffer,"\n\rDAC code: 0x%x\n\r",(unsigned int)DAC_code);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004ff8:	4b19      	ldr	r3, [pc, #100]	; (8005060 <Parsing_USB_command+0xa04>)
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	461a      	mov	r2, r3
 8004ffe:	4919      	ldr	r1, [pc, #100]	; (8005064 <Parsing_USB_command+0xa08>)
 8005000:	4807      	ldr	r0, [pc, #28]	; (8005020 <Parsing_USB_command+0x9c4>)
 8005002:	f006 ffff 	bl	800c004 <siprintf>
 8005006:	e034      	b.n	8005072 <Parsing_USB_command+0xa16>
 8005008:	08010644 	.word	0x08010644
 800500c:	08010524 	.word	0x08010524
 8005010:	20000858 	.word	0x20000858
 8005014:	0801064c 	.word	0x0801064c
 8005018:	200009ac 	.word	0x200009ac
 800501c:	08010654 	.word	0x08010654
 8005020:	200008ec 	.word	0x200008ec
 8005024:	200009b0 	.word	0x200009b0
 8005028:	08010688 	.word	0x08010688
 800502c:	2000070c 	.word	0x2000070c
 8005030:	080106bc 	.word	0x080106bc
 8005034:	20000710 	.word	0x20000710
 8005038:	080106dc 	.word	0x080106dc
 800503c:	20000714 	.word	0x20000714
 8005040:	080106fc 	.word	0x080106fc
 8005044:	20000718 	.word	0x20000718
 8005048:	0801071c 	.word	0x0801071c
 800504c:	2000071c 	.word	0x2000071c
 8005050:	08010740 	.word	0x08010740
 8005054:	20000800 	.word	0x20000800
 8005058:	20000828 	.word	0x20000828
 800505c:	08010764 	.word	0x08010764
 8005060:	200009b8 	.word	0x200009b8
 8005064:	08010794 	.word	0x08010794
 8005068:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 800506c:	3301      	adds	r3, #1
 800506e:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8005072:	48b2      	ldr	r0, [pc, #712]	; (800533c <Parsing_USB_command+0xce0>)
 8005074:	f7fb f88e 	bl	8000194 <strlen>
 8005078:	4603      	mov	r3, r0
 800507a:	b29b      	uxth	r3, r3
 800507c:	4619      	mov	r1, r3
 800507e:	48af      	ldr	r0, [pc, #700]	; (800533c <Parsing_USB_command+0xce0>)
 8005080:	f005 fe18 	bl	800acb4 <CDC_Transmit_FS>
 8005084:	4603      	mov	r3, r0
 8005086:	2b00      	cmp	r3, #0
 8005088:	d003      	beq.n	8005092 <Parsing_USB_command+0xa36>
 800508a:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 800508e:	2bff      	cmp	r3, #255	; 0xff
 8005090:	d1ea      	bne.n	8005068 <Parsing_USB_command+0xa0c>
			sprintf((char *)large_string_buffer,"DDS FTW: 0x%x\n\r",(unsigned int)DDS_FTW);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8005092:	4bab      	ldr	r3, [pc, #684]	; (8005340 <Parsing_USB_command+0xce4>)
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	4618      	mov	r0, r3
 8005098:	f7fc f85c 	bl	8001154 <__aeabi_f2uiz>
 800509c:	4603      	mov	r3, r0
 800509e:	461a      	mov	r2, r3
 80050a0:	49a8      	ldr	r1, [pc, #672]	; (8005344 <Parsing_USB_command+0xce8>)
 80050a2:	48a6      	ldr	r0, [pc, #664]	; (800533c <Parsing_USB_command+0xce0>)
 80050a4:	f006 ffae 	bl	800c004 <siprintf>
 80050a8:	e004      	b.n	80050b4 <Parsing_USB_command+0xa58>
 80050aa:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80050ae:	3301      	adds	r3, #1
 80050b0:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 80050b4:	48a1      	ldr	r0, [pc, #644]	; (800533c <Parsing_USB_command+0xce0>)
 80050b6:	f7fb f86d 	bl	8000194 <strlen>
 80050ba:	4603      	mov	r3, r0
 80050bc:	b29b      	uxth	r3, r3
 80050be:	4619      	mov	r1, r3
 80050c0:	489e      	ldr	r0, [pc, #632]	; (800533c <Parsing_USB_command+0xce0>)
 80050c2:	f005 fdf7 	bl	800acb4 <CDC_Transmit_FS>
 80050c6:	4603      	mov	r3, r0
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d003      	beq.n	80050d4 <Parsing_USB_command+0xa78>
 80050cc:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80050d0:	2bff      	cmp	r3, #255	; 0xff
 80050d2:	d1ea      	bne.n	80050aa <Parsing_USB_command+0xa4e>
			sprintf((char *)large_string_buffer,"CPLD control word: 0x%x\n\r",CPLD_WORD);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80050d4:	4b9c      	ldr	r3, [pc, #624]	; (8005348 <Parsing_USB_command+0xcec>)
 80050d6:	781b      	ldrb	r3, [r3, #0]
 80050d8:	461a      	mov	r2, r3
 80050da:	499c      	ldr	r1, [pc, #624]	; (800534c <Parsing_USB_command+0xcf0>)
 80050dc:	4897      	ldr	r0, [pc, #604]	; (800533c <Parsing_USB_command+0xce0>)
 80050de:	f006 ff91 	bl	800c004 <siprintf>
 80050e2:	e004      	b.n	80050ee <Parsing_USB_command+0xa92>
 80050e4:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80050e8:	3301      	adds	r3, #1
 80050ea:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 80050ee:	4893      	ldr	r0, [pc, #588]	; (800533c <Parsing_USB_command+0xce0>)
 80050f0:	f7fb f850 	bl	8000194 <strlen>
 80050f4:	4603      	mov	r3, r0
 80050f6:	b29b      	uxth	r3, r3
 80050f8:	4619      	mov	r1, r3
 80050fa:	4890      	ldr	r0, [pc, #576]	; (800533c <Parsing_USB_command+0xce0>)
 80050fc:	f005 fdda 	bl	800acb4 <CDC_Transmit_FS>
 8005100:	4603      	mov	r3, r0
 8005102:	2b00      	cmp	r3, #0
 8005104:	d003      	beq.n	800510e <Parsing_USB_command+0xab2>
 8005106:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 800510a:	2bff      	cmp	r3, #255	; 0xff
 800510c:	d1ea      	bne.n	80050e4 <Parsing_USB_command+0xa88>
			sprintf((char *)large_string_buffer,"Output mode: 0x%x\n\r",Current_output_status);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800510e:	4b90      	ldr	r3, [pc, #576]	; (8005350 <Parsing_USB_command+0xcf4>)
 8005110:	781b      	ldrb	r3, [r3, #0]
 8005112:	461a      	mov	r2, r3
 8005114:	498f      	ldr	r1, [pc, #572]	; (8005354 <Parsing_USB_command+0xcf8>)
 8005116:	4889      	ldr	r0, [pc, #548]	; (800533c <Parsing_USB_command+0xce0>)
 8005118:	f006 ff74 	bl	800c004 <siprintf>
 800511c:	e004      	b.n	8005128 <Parsing_USB_command+0xacc>
 800511e:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005122:	3301      	adds	r3, #1
 8005124:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 8005128:	4884      	ldr	r0, [pc, #528]	; (800533c <Parsing_USB_command+0xce0>)
 800512a:	f7fb f833 	bl	8000194 <strlen>
 800512e:	4603      	mov	r3, r0
 8005130:	b29b      	uxth	r3, r3
 8005132:	4619      	mov	r1, r3
 8005134:	4881      	ldr	r0, [pc, #516]	; (800533c <Parsing_USB_command+0xce0>)
 8005136:	f005 fdbd 	bl	800acb4 <CDC_Transmit_FS>
 800513a:	4603      	mov	r3, r0
 800513c:	2b00      	cmp	r3, #0
 800513e:	d003      	beq.n	8005148 <Parsing_USB_command+0xaec>
 8005140:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005144:	2bff      	cmp	r3, #255	; 0xff
 8005146:	d1ea      	bne.n	800511e <Parsing_USB_command+0xac2>
			sprintf((char *)large_string_buffer,"Sweep rate: %1.6EV/s\n\r",ramp_target_speed);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8005148:	4b83      	ldr	r3, [pc, #524]	; (8005358 <Parsing_USB_command+0xcfc>)
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	4618      	mov	r0, r3
 800514e:	f7fb f98d 	bl	800046c <__aeabi_f2d>
 8005152:	4602      	mov	r2, r0
 8005154:	460b      	mov	r3, r1
 8005156:	4981      	ldr	r1, [pc, #516]	; (800535c <Parsing_USB_command+0xd00>)
 8005158:	4878      	ldr	r0, [pc, #480]	; (800533c <Parsing_USB_command+0xce0>)
 800515a:	f006 ff53 	bl	800c004 <siprintf>
 800515e:	e004      	b.n	800516a <Parsing_USB_command+0xb0e>
 8005160:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005164:	3301      	adds	r3, #1
 8005166:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 800516a:	4874      	ldr	r0, [pc, #464]	; (800533c <Parsing_USB_command+0xce0>)
 800516c:	f7fb f812 	bl	8000194 <strlen>
 8005170:	4603      	mov	r3, r0
 8005172:	b29b      	uxth	r3, r3
 8005174:	4619      	mov	r1, r3
 8005176:	4871      	ldr	r0, [pc, #452]	; (800533c <Parsing_USB_command+0xce0>)
 8005178:	f005 fd9c 	bl	800acb4 <CDC_Transmit_FS>
 800517c:	4603      	mov	r3, r0
 800517e:	2b00      	cmp	r3, #0
 8005180:	d003      	beq.n	800518a <Parsing_USB_command+0xb2e>
 8005182:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005186:	2bff      	cmp	r3, #255	; 0xff
 8005188:	d1ea      	bne.n	8005160 <Parsing_USB_command+0xb04>
			sprintf((char *)large_string_buffer,"Current rate: %1.6EA\n\r",amp_target_speed);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800518a:	4b75      	ldr	r3, [pc, #468]	; (8005360 <Parsing_USB_command+0xd04>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	4618      	mov	r0, r3
 8005190:	f7fb f96c 	bl	800046c <__aeabi_f2d>
 8005194:	4602      	mov	r2, r0
 8005196:	460b      	mov	r3, r1
 8005198:	4972      	ldr	r1, [pc, #456]	; (8005364 <Parsing_USB_command+0xd08>)
 800519a:	4868      	ldr	r0, [pc, #416]	; (800533c <Parsing_USB_command+0xce0>)
 800519c:	f006 ff32 	bl	800c004 <siprintf>
 80051a0:	e004      	b.n	80051ac <Parsing_USB_command+0xb50>
 80051a2:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80051a6:	3301      	adds	r3, #1
 80051a8:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 80051ac:	4863      	ldr	r0, [pc, #396]	; (800533c <Parsing_USB_command+0xce0>)
 80051ae:	f7fa fff1 	bl	8000194 <strlen>
 80051b2:	4603      	mov	r3, r0
 80051b4:	b29b      	uxth	r3, r3
 80051b6:	4619      	mov	r1, r3
 80051b8:	4860      	ldr	r0, [pc, #384]	; (800533c <Parsing_USB_command+0xce0>)
 80051ba:	f005 fd7b 	bl	800acb4 <CDC_Transmit_FS>
 80051be:	4603      	mov	r3, r0
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	d003      	beq.n	80051cc <Parsing_USB_command+0xb70>
 80051c4:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80051c8:	2bff      	cmp	r3, #255	; 0xff
 80051ca:	d1ea      	bne.n	80051a2 <Parsing_USB_command+0xb46>
			sprintf((char *)large_string_buffer,"Selected reference capacitor: 0x%x\n\r",C_ref);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80051cc:	4b66      	ldr	r3, [pc, #408]	; (8005368 <Parsing_USB_command+0xd0c>)
 80051ce:	781b      	ldrb	r3, [r3, #0]
 80051d0:	461a      	mov	r2, r3
 80051d2:	4966      	ldr	r1, [pc, #408]	; (800536c <Parsing_USB_command+0xd10>)
 80051d4:	4859      	ldr	r0, [pc, #356]	; (800533c <Parsing_USB_command+0xce0>)
 80051d6:	f006 ff15 	bl	800c004 <siprintf>
 80051da:	e004      	b.n	80051e6 <Parsing_USB_command+0xb8a>
 80051dc:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 80051e0:	3301      	adds	r3, #1
 80051e2:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 80051e6:	4855      	ldr	r0, [pc, #340]	; (800533c <Parsing_USB_command+0xce0>)
 80051e8:	f7fa ffd4 	bl	8000194 <strlen>
 80051ec:	4603      	mov	r3, r0
 80051ee:	b29b      	uxth	r3, r3
 80051f0:	4619      	mov	r1, r3
 80051f2:	4852      	ldr	r0, [pc, #328]	; (800533c <Parsing_USB_command+0xce0>)
 80051f4:	f005 fd5e 	bl	800acb4 <CDC_Transmit_FS>
 80051f8:	4603      	mov	r3, r0
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d003      	beq.n	8005206 <Parsing_USB_command+0xbaa>
 80051fe:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005202:	2bff      	cmp	r3, #255	; 0xff
 8005204:	d1ea      	bne.n	80051dc <Parsing_USB_command+0xb80>
			sprintf((char *)large_string_buffer,"Temperature: %2.3f°C\n\r",TMP117_get_Temperature(hi2c1)*0.0078125);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8005206:	4c5a      	ldr	r4, [pc, #360]	; (8005370 <Parsing_USB_command+0xd14>)
 8005208:	4668      	mov	r0, sp
 800520a:	f104 0310 	add.w	r3, r4, #16
 800520e:	2244      	movs	r2, #68	; 0x44
 8005210:	4619      	mov	r1, r3
 8005212:	f006 f86f 	bl	800b2f4 <memcpy>
 8005216:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800521a:	f000 fcaf 	bl	8005b7c <TMP117_get_Temperature>
 800521e:	4603      	mov	r3, r0
 8005220:	4618      	mov	r0, r3
 8005222:	f7fb f911 	bl	8000448 <__aeabi_i2d>
 8005226:	f04f 0200 	mov.w	r2, #0
 800522a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800522e:	f7fb f975 	bl	800051c <__aeabi_dmul>
 8005232:	4602      	mov	r2, r0
 8005234:	460b      	mov	r3, r1
 8005236:	494f      	ldr	r1, [pc, #316]	; (8005374 <Parsing_USB_command+0xd18>)
 8005238:	4840      	ldr	r0, [pc, #256]	; (800533c <Parsing_USB_command+0xce0>)
 800523a:	f006 fee3 	bl	800c004 <siprintf>
 800523e:	e004      	b.n	800524a <Parsing_USB_command+0xbee>
 8005240:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005244:	3301      	adds	r3, #1
 8005246:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 800524a:	483c      	ldr	r0, [pc, #240]	; (800533c <Parsing_USB_command+0xce0>)
 800524c:	f7fa ffa2 	bl	8000194 <strlen>
 8005250:	4603      	mov	r3, r0
 8005252:	b29b      	uxth	r3, r3
 8005254:	4619      	mov	r1, r3
 8005256:	4839      	ldr	r0, [pc, #228]	; (800533c <Parsing_USB_command+0xce0>)
 8005258:	f005 fd2c 	bl	800acb4 <CDC_Transmit_FS>
 800525c:	4603      	mov	r3, r0
 800525e:	2b00      	cmp	r3, #0
 8005260:	d003      	beq.n	800526a <Parsing_USB_command+0xc0e>
 8005262:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 8005266:	2bff      	cmp	r3, #255	; 0xff
 8005268:	d1ea      	bne.n	8005240 <Parsing_USB_command+0xbe4>
			send_answer_to_CDC(OK_TYPE_2);
 800526a:	2003      	movs	r0, #3
 800526c:	f7fd fd26 	bl	8002cbc <send_answer_to_CDC>
			return;
 8005270:	e060      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"HELP_EXTENDED"))){
 8005272:	f107 030c 	add.w	r3, r7, #12
 8005276:	4940      	ldr	r1, [pc, #256]	; (8005378 <Parsing_USB_command+0xd1c>)
 8005278:	4618      	mov	r0, r3
 800527a:	f7fa ff81 	bl	8000180 <strcmp>
 800527e:	4603      	mov	r3, r0
 8005280:	2b00      	cmp	r3, #0
 8005282:	d103      	bne.n	800528c <Parsing_USB_command+0xc30>
				send_answer_to_CDC(EXTENDED_HELP);
 8005284:	2010      	movs	r0, #16
 8005286:	f7fd fd19 	bl	8002cbc <send_answer_to_CDC>
				return;
 800528a:	e053      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 800528c:	2000      	movs	r0, #0
 800528e:	f7fd fd15 	bl	8002cbc <send_answer_to_CDC>
				return;
 8005292:	e04f      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
		}
	}

	// ==== SWEEP_DIRECTION command ====
	if(!(strcmp(decoded_string_1,"SWEEP_DIRECTION")))
 8005294:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8005298:	4938      	ldr	r1, [pc, #224]	; (800537c <Parsing_USB_command+0xd20>)
 800529a:	4618      	mov	r0, r3
 800529c:	f7fa ff70 	bl	8000180 <strcmp>
 80052a0:	4603      	mov	r3, r0
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d142      	bne.n	800532c <Parsing_USB_command+0xcd0>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80052a6:	f107 030c 	add.w	r3, r7, #12
 80052aa:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 80052ae:	4934      	ldr	r1, [pc, #208]	; (8005380 <Parsing_USB_command+0xd24>)
 80052b0:	4834      	ldr	r0, [pc, #208]	; (8005384 <Parsing_USB_command+0xd28>)
 80052b2:	f006 fec7 	bl	800c044 <siscanf>
 80052b6:	4603      	mov	r3, r0
 80052b8:	2b02      	cmp	r3, #2
 80052ba:	d003      	beq.n	80052c4 <Parsing_USB_command+0xc68>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80052bc:	2001      	movs	r0, #1
 80052be:	f7fd fcfd 	bl	8002cbc <send_answer_to_CDC>
			return;
 80052c2:	e037      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}

		if(!(strcmp(decoded_string_2,"UP"))){
 80052c4:	f107 030c 	add.w	r3, r7, #12
 80052c8:	492f      	ldr	r1, [pc, #188]	; (8005388 <Parsing_USB_command+0xd2c>)
 80052ca:	4618      	mov	r0, r3
 80052cc:	f7fa ff58 	bl	8000180 <strcmp>
 80052d0:	4603      	mov	r3, r0
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d106      	bne.n	80052e4 <Parsing_USB_command+0xc88>
			DAC_code_direction=DIRECTION_UP_STATE;
 80052d6:	4b2d      	ldr	r3, [pc, #180]	; (800538c <Parsing_USB_command+0xd30>)
 80052d8:	2201      	movs	r2, #1
 80052da:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 80052dc:	2003      	movs	r0, #3
 80052de:	f7fd fced 	bl	8002cbc <send_answer_to_CDC>
			return;
 80052e2:	e027      	b.n	8005334 <Parsing_USB_command+0xcd8>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 80052e4:	f107 030c 	add.w	r3, r7, #12
 80052e8:	4929      	ldr	r1, [pc, #164]	; (8005390 <Parsing_USB_command+0xd34>)
 80052ea:	4618      	mov	r0, r3
 80052ec:	f7fa ff48 	bl	8000180 <strcmp>
 80052f0:	4603      	mov	r3, r0
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d106      	bne.n	8005304 <Parsing_USB_command+0xca8>
				DAC_code_direction=DIRECTION_DOWN_STATE;
 80052f6:	4b25      	ldr	r3, [pc, #148]	; (800538c <Parsing_USB_command+0xd30>)
 80052f8:	2200      	movs	r2, #0
 80052fa:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 80052fc:	2003      	movs	r0, #3
 80052fe:	f7fd fcdd 	bl	8002cbc <send_answer_to_CDC>
				return;
 8005302:	e017      	b.n	8005334 <Parsing_USB_command+0xcd8>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"CYCLE"))){
 8005304:	f107 030c 	add.w	r3, r7, #12
 8005308:	4922      	ldr	r1, [pc, #136]	; (8005394 <Parsing_USB_command+0xd38>)
 800530a:	4618      	mov	r0, r3
 800530c:	f7fa ff38 	bl	8000180 <strcmp>
 8005310:	4603      	mov	r3, r0
 8005312:	2b00      	cmp	r3, #0
 8005314:	d106      	bne.n	8005324 <Parsing_USB_command+0xcc8>
					DAC_code_direction=DIRECTION_CYCLE_STATE;
 8005316:	4b1d      	ldr	r3, [pc, #116]	; (800538c <Parsing_USB_command+0xd30>)
 8005318:	2202      	movs	r2, #2
 800531a:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 800531c:	2003      	movs	r0, #3
 800531e:	f7fd fccd 	bl	8002cbc <send_answer_to_CDC>
					return;
 8005322:	e007      	b.n	8005334 <Parsing_USB_command+0xcd8>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_1);
 8005324:	2000      	movs	r0, #0
 8005326:	f7fd fcc9 	bl	8002cbc <send_answer_to_CDC>
					return;
 800532a:	e003      	b.n	8005334 <Parsing_USB_command+0xcd8>
				}
			}
		}
	}

	send_answer_to_CDC(ERROR_TYPE_1);
 800532c:	2000      	movs	r0, #0
 800532e:	f7fd fcc5 	bl	8002cbc <send_answer_to_CDC>
	return;
 8005332:	bf00      	nop
}
 8005334:	3794      	adds	r7, #148	; 0x94
 8005336:	46bd      	mov	sp, r7
 8005338:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800533a:	bf00      	nop
 800533c:	200008ec 	.word	0x200008ec
 8005340:	20000990 	.word	0x20000990
 8005344:	080107a8 	.word	0x080107a8
 8005348:	2000098e 	.word	0x2000098e
 800534c:	080107b8 	.word	0x080107b8
 8005350:	200009b4 	.word	0x200009b4
 8005354:	080107d4 	.word	0x080107d4
 8005358:	20000010 	.word	0x20000010
 800535c:	080107e8 	.word	0x080107e8
 8005360:	2000000c 	.word	0x2000000c
 8005364:	08010800 	.word	0x08010800
 8005368:	200009a0 	.word	0x200009a0
 800536c:	08010818 	.word	0x08010818
 8005370:	20000898 	.word	0x20000898
 8005374:	08010840 	.word	0x08010840
 8005378:	08010858 	.word	0x08010858
 800537c:	08010868 	.word	0x08010868
 8005380:	08010524 	.word	0x08010524
 8005384:	20000858 	.word	0x20000858
 8005388:	08010878 	.word	0x08010878
 800538c:	200009bc 	.word	0x200009bc
 8005390:	08010558 	.word	0x08010558
 8005394:	0801087c 	.word	0x0801087c

08005398 <Write_to_circ_buffer>:

void Write_to_circ_buffer(uint8_t Buf)
{
 8005398:	b580      	push	{r7, lr}
 800539a:	b082      	sub	sp, #8
 800539c:	af00      	add	r7, sp, #0
 800539e:	4603      	mov	r3, r0
 80053a0:	71fb      	strb	r3, [r7, #7]
	if(CIRC_GBUF_PUSH(USB_rx_command_buffer, &Buf))	CIRC_GBUF_FLUSH(USB_rx_command_buffer); // If out of space, something wrong, clean all !!!
 80053a2:	1dfb      	adds	r3, r7, #7
 80053a4:	4618      	mov	r0, r3
 80053a6:	f7fe fbff 	bl	8003ba8 <USB_rx_command_buffer_push_refd>
 80053aa:	4603      	mov	r3, r0
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	d005      	beq.n	80053bc <Write_to_circ_buffer+0x24>
 80053b0:	4b04      	ldr	r3, [pc, #16]	; (80053c4 <Write_to_circ_buffer+0x2c>)
 80053b2:	2200      	movs	r2, #0
 80053b4:	809a      	strh	r2, [r3, #4]
 80053b6:	4b03      	ldr	r3, [pc, #12]	; (80053c4 <Write_to_circ_buffer+0x2c>)
 80053b8:	2200      	movs	r2, #0
 80053ba:	80da      	strh	r2, [r3, #6]
}
 80053bc:	bf00      	nop
 80053be:	3708      	adds	r7, #8
 80053c0:	46bd      	mov	sp, r7
 80053c2:	bd80      	pop	{r7, pc}
 80053c4:	20000000 	.word	0x20000000

080053c8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80053c8:	b480      	push	{r7}
 80053ca:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80053cc:	b672      	cpsid	i
}
 80053ce:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 80053d0:	e7fe      	b.n	80053d0 <Error_Handler+0x8>
	...

080053d4 <MX_SPI1_Init>:
SPI_HandleTypeDef hspi1;
SPI_HandleTypeDef hspi2;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 80053d4:	b580      	push	{r7, lr}
 80053d6:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 80053d8:	4b16      	ldr	r3, [pc, #88]	; (8005434 <MX_SPI1_Init+0x60>)
 80053da:	4a17      	ldr	r2, [pc, #92]	; (8005438 <MX_SPI1_Init+0x64>)
 80053dc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80053de:	4b15      	ldr	r3, [pc, #84]	; (8005434 <MX_SPI1_Init+0x60>)
 80053e0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80053e4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80053e6:	4b13      	ldr	r3, [pc, #76]	; (8005434 <MX_SPI1_Init+0x60>)
 80053e8:	2200      	movs	r2, #0
 80053ea:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 80053ec:	4b11      	ldr	r3, [pc, #68]	; (8005434 <MX_SPI1_Init+0x60>)
 80053ee:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80053f2:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80053f4:	4b0f      	ldr	r3, [pc, #60]	; (8005434 <MX_SPI1_Init+0x60>)
 80053f6:	2200      	movs	r2, #0
 80053f8:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 80053fa:	4b0e      	ldr	r3, [pc, #56]	; (8005434 <MX_SPI1_Init+0x60>)
 80053fc:	2201      	movs	r2, #1
 80053fe:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8005400:	4b0c      	ldr	r3, [pc, #48]	; (8005434 <MX_SPI1_Init+0x60>)
 8005402:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005406:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8005408:	4b0a      	ldr	r3, [pc, #40]	; (8005434 <MX_SPI1_Init+0x60>)
 800540a:	2218      	movs	r2, #24
 800540c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800540e:	4b09      	ldr	r3, [pc, #36]	; (8005434 <MX_SPI1_Init+0x60>)
 8005410:	2200      	movs	r2, #0
 8005412:	621a      	str	r2, [r3, #32]
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005414:	4b07      	ldr	r3, [pc, #28]	; (8005434 <MX_SPI1_Init+0x60>)
 8005416:	2200      	movs	r2, #0
 8005418:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 800541a:	4b06      	ldr	r3, [pc, #24]	; (8005434 <MX_SPI1_Init+0x60>)
 800541c:	220a      	movs	r2, #10
 800541e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8005420:	4804      	ldr	r0, [pc, #16]	; (8005434 <MX_SPI1_Init+0x60>)
 8005422:	f003 f833 	bl	800848c <HAL_SPI_Init>
 8005426:	4603      	mov	r3, r0
 8005428:	2b00      	cmp	r3, #0
 800542a:	d001      	beq.n	8005430 <MX_SPI1_Init+0x5c>
  {
    Error_Handler();
 800542c:	f7ff ffcc 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8005430:	bf00      	nop
 8005432:	bd80      	pop	{r7, pc}
 8005434:	200009c8 	.word	0x200009c8
 8005438:	40013000 	.word	0x40013000

0800543c <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 800543c:	b580      	push	{r7, lr}
 800543e:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8005440:	4b16      	ldr	r3, [pc, #88]	; (800549c <MX_SPI2_Init+0x60>)
 8005442:	4a17      	ldr	r2, [pc, #92]	; (80054a0 <MX_SPI2_Init+0x64>)
 8005444:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8005446:	4b15      	ldr	r3, [pc, #84]	; (800549c <MX_SPI2_Init+0x60>)
 8005448:	f44f 7282 	mov.w	r2, #260	; 0x104
 800544c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800544e:	4b13      	ldr	r3, [pc, #76]	; (800549c <MX_SPI2_Init+0x60>)
 8005450:	2200      	movs	r2, #0
 8005452:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 8005454:	4b11      	ldr	r3, [pc, #68]	; (800549c <MX_SPI2_Init+0x60>)
 8005456:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800545a:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800545c:	4b0f      	ldr	r3, [pc, #60]	; (800549c <MX_SPI2_Init+0x60>)
 800545e:	2200      	movs	r2, #0
 8005460:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8005462:	4b0e      	ldr	r3, [pc, #56]	; (800549c <MX_SPI2_Init+0x60>)
 8005464:	2201      	movs	r2, #1
 8005466:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8005468:	4b0c      	ldr	r3, [pc, #48]	; (800549c <MX_SPI2_Init+0x60>)
 800546a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800546e:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8005470:	4b0a      	ldr	r3, [pc, #40]	; (800549c <MX_SPI2_Init+0x60>)
 8005472:	2218      	movs	r2, #24
 8005474:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8005476:	4b09      	ldr	r3, [pc, #36]	; (800549c <MX_SPI2_Init+0x60>)
 8005478:	2200      	movs	r2, #0
 800547a:	621a      	str	r2, [r3, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800547c:	4b07      	ldr	r3, [pc, #28]	; (800549c <MX_SPI2_Init+0x60>)
 800547e:	2200      	movs	r2, #0
 8005480:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8005482:	4b06      	ldr	r3, [pc, #24]	; (800549c <MX_SPI2_Init+0x60>)
 8005484:	220a      	movs	r2, #10
 8005486:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8005488:	4804      	ldr	r0, [pc, #16]	; (800549c <MX_SPI2_Init+0x60>)
 800548a:	f002 ffff 	bl	800848c <HAL_SPI_Init>
 800548e:	4603      	mov	r3, r0
 8005490:	2b00      	cmp	r3, #0
 8005492:	d001      	beq.n	8005498 <MX_SPI2_Init+0x5c>
  {
    Error_Handler();
 8005494:	f7ff ff98 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8005498:	bf00      	nop
 800549a:	bd80      	pop	{r7, pc}
 800549c:	20000a20 	.word	0x20000a20
 80054a0:	40003800 	.word	0x40003800

080054a4 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80054a4:	b580      	push	{r7, lr}
 80054a6:	b08c      	sub	sp, #48	; 0x30
 80054a8:	af00      	add	r7, sp, #0
 80054aa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80054ac:	f107 031c 	add.w	r3, r7, #28
 80054b0:	2200      	movs	r2, #0
 80054b2:	601a      	str	r2, [r3, #0]
 80054b4:	605a      	str	r2, [r3, #4]
 80054b6:	609a      	str	r2, [r3, #8]
 80054b8:	60da      	str	r2, [r3, #12]
 80054ba:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	4a32      	ldr	r2, [pc, #200]	; (800558c <HAL_SPI_MspInit+0xe8>)
 80054c2:	4293      	cmp	r3, r2
 80054c4:	d130      	bne.n	8005528 <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80054c6:	4b32      	ldr	r3, [pc, #200]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054c8:	6a1b      	ldr	r3, [r3, #32]
 80054ca:	4a31      	ldr	r2, [pc, #196]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054cc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80054d0:	6213      	str	r3, [r2, #32]
 80054d2:	4b2f      	ldr	r3, [pc, #188]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054d4:	6a1b      	ldr	r3, [r3, #32]
 80054d6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80054da:	61bb      	str	r3, [r7, #24]
 80054dc:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80054de:	4b2c      	ldr	r3, [pc, #176]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054e0:	69db      	ldr	r3, [r3, #28]
 80054e2:	4a2b      	ldr	r2, [pc, #172]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054e4:	f043 0301 	orr.w	r3, r3, #1
 80054e8:	61d3      	str	r3, [r2, #28]
 80054ea:	4b29      	ldr	r3, [pc, #164]	; (8005590 <HAL_SPI_MspInit+0xec>)
 80054ec:	69db      	ldr	r3, [r3, #28]
 80054ee:	f003 0301 	and.w	r3, r3, #1
 80054f2:	617b      	str	r3, [r7, #20]
 80054f4:	697b      	ldr	r3, [r7, #20]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 80054f6:	23e0      	movs	r3, #224	; 0xe0
 80054f8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80054fa:	2302      	movs	r3, #2
 80054fc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80054fe:	2300      	movs	r3, #0
 8005500:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005502:	2303      	movs	r3, #3
 8005504:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8005506:	2305      	movs	r3, #5
 8005508:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800550a:	f107 031c 	add.w	r3, r7, #28
 800550e:	4619      	mov	r1, r3
 8005510:	4820      	ldr	r0, [pc, #128]	; (8005594 <HAL_SPI_MspInit+0xf0>)
 8005512:	f000 fe9f 	bl	8006254 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 1, 0);
 8005516:	2200      	movs	r2, #0
 8005518:	2101      	movs	r1, #1
 800551a:	2023      	movs	r0, #35	; 0x23
 800551c:	f000 fc5e 	bl	8005ddc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8005520:	2023      	movs	r0, #35	; 0x23
 8005522:	f000 fc99 	bl	8005e58 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8005526:	e02d      	b.n	8005584 <HAL_SPI_MspInit+0xe0>
  else if(spiHandle->Instance==SPI2)
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	4a1a      	ldr	r2, [pc, #104]	; (8005598 <HAL_SPI_MspInit+0xf4>)
 800552e:	4293      	cmp	r3, r2
 8005530:	d128      	bne.n	8005584 <HAL_SPI_MspInit+0xe0>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8005532:	4b17      	ldr	r3, [pc, #92]	; (8005590 <HAL_SPI_MspInit+0xec>)
 8005534:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005536:	4a16      	ldr	r2, [pc, #88]	; (8005590 <HAL_SPI_MspInit+0xec>)
 8005538:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800553c:	6253      	str	r3, [r2, #36]	; 0x24
 800553e:	4b14      	ldr	r3, [pc, #80]	; (8005590 <HAL_SPI_MspInit+0xec>)
 8005540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005542:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005546:	613b      	str	r3, [r7, #16]
 8005548:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800554a:	4b11      	ldr	r3, [pc, #68]	; (8005590 <HAL_SPI_MspInit+0xec>)
 800554c:	69db      	ldr	r3, [r3, #28]
 800554e:	4a10      	ldr	r2, [pc, #64]	; (8005590 <HAL_SPI_MspInit+0xec>)
 8005550:	f043 0302 	orr.w	r3, r3, #2
 8005554:	61d3      	str	r3, [r2, #28]
 8005556:	4b0e      	ldr	r3, [pc, #56]	; (8005590 <HAL_SPI_MspInit+0xec>)
 8005558:	69db      	ldr	r3, [r3, #28]
 800555a:	f003 0302 	and.w	r3, r3, #2
 800555e:	60fb      	str	r3, [r7, #12]
 8005560:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8005562:	f44f 4320 	mov.w	r3, #40960	; 0xa000
 8005566:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005568:	2302      	movs	r3, #2
 800556a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800556c:	2300      	movs	r3, #0
 800556e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005570:	2303      	movs	r3, #3
 8005572:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8005574:	2305      	movs	r3, #5
 8005576:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005578:	f107 031c 	add.w	r3, r7, #28
 800557c:	4619      	mov	r1, r3
 800557e:	4807      	ldr	r0, [pc, #28]	; (800559c <HAL_SPI_MspInit+0xf8>)
 8005580:	f000 fe68 	bl	8006254 <HAL_GPIO_Init>
}
 8005584:	bf00      	nop
 8005586:	3730      	adds	r7, #48	; 0x30
 8005588:	46bd      	mov	sp, r7
 800558a:	bd80      	pop	{r7, pc}
 800558c:	40013000 	.word	0x40013000
 8005590:	40023800 	.word	0x40023800
 8005594:	40020000 	.word	0x40020000
 8005598:	40003800 	.word	0x40003800
 800559c:	40020400 	.word	0x40020400

080055a0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80055a0:	b580      	push	{r7, lr}
 80055a2:	b084      	sub	sp, #16
 80055a4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 80055a6:	4b26      	ldr	r3, [pc, #152]	; (8005640 <HAL_MspInit+0xa0>)
 80055a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055aa:	4a25      	ldr	r2, [pc, #148]	; (8005640 <HAL_MspInit+0xa0>)
 80055ac:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80055b0:	6253      	str	r3, [r2, #36]	; 0x24
 80055b2:	4b23      	ldr	r3, [pc, #140]	; (8005640 <HAL_MspInit+0xa0>)
 80055b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055b6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80055ba:	60fb      	str	r3, [r7, #12]
 80055bc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80055be:	4b20      	ldr	r3, [pc, #128]	; (8005640 <HAL_MspInit+0xa0>)
 80055c0:	6a1b      	ldr	r3, [r3, #32]
 80055c2:	4a1f      	ldr	r2, [pc, #124]	; (8005640 <HAL_MspInit+0xa0>)
 80055c4:	f043 0301 	orr.w	r3, r3, #1
 80055c8:	6213      	str	r3, [r2, #32]
 80055ca:	4b1d      	ldr	r3, [pc, #116]	; (8005640 <HAL_MspInit+0xa0>)
 80055cc:	6a1b      	ldr	r3, [r3, #32]
 80055ce:	f003 0301 	and.w	r3, r3, #1
 80055d2:	60bb      	str	r3, [r7, #8]
 80055d4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80055d6:	4b1a      	ldr	r3, [pc, #104]	; (8005640 <HAL_MspInit+0xa0>)
 80055d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055da:	4a19      	ldr	r2, [pc, #100]	; (8005640 <HAL_MspInit+0xa0>)
 80055dc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80055e0:	6253      	str	r3, [r2, #36]	; 0x24
 80055e2:	4b17      	ldr	r3, [pc, #92]	; (8005640 <HAL_MspInit+0xa0>)
 80055e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80055ea:	607b      	str	r3, [r7, #4]
 80055ec:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 1, 0);
 80055ee:	2200      	movs	r2, #0
 80055f0:	2101      	movs	r1, #1
 80055f2:	f06f 000b 	mvn.w	r0, #11
 80055f6:	f000 fbf1 	bl	8005ddc <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 1, 0);
 80055fa:	2200      	movs	r2, #0
 80055fc:	2101      	movs	r1, #1
 80055fe:	f06f 000a 	mvn.w	r0, #10
 8005602:	f000 fbeb 	bl	8005ddc <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 1, 0);
 8005606:	2200      	movs	r2, #0
 8005608:	2101      	movs	r1, #1
 800560a:	f06f 0009 	mvn.w	r0, #9
 800560e:	f000 fbe5 	bl	8005ddc <HAL_NVIC_SetPriority>
  /* SVC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVC_IRQn, 1, 0);
 8005612:	2200      	movs	r2, #0
 8005614:	2101      	movs	r1, #1
 8005616:	f06f 0004 	mvn.w	r0, #4
 800561a:	f000 fbdf 	bl	8005ddc <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 1, 0);
 800561e:	2200      	movs	r2, #0
 8005620:	2101      	movs	r1, #1
 8005622:	f06f 0003 	mvn.w	r0, #3
 8005626:	f000 fbd9 	bl	8005ddc <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 1, 0);
 800562a:	2200      	movs	r2, #0
 800562c:	2101      	movs	r1, #1
 800562e:	f06f 0001 	mvn.w	r0, #1
 8005632:	f000 fbd3 	bl	8005ddc <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8005636:	bf00      	nop
 8005638:	3710      	adds	r7, #16
 800563a:	46bd      	mov	sp, r7
 800563c:	bd80      	pop	{r7, pc}
 800563e:	bf00      	nop
 8005640:	40023800 	.word	0x40023800

08005644 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8005644:	b480      	push	{r7}
 8005646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8005648:	e7fe      	b.n	8005648 <NMI_Handler+0x4>

0800564a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800564a:	b480      	push	{r7}
 800564c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800564e:	e7fe      	b.n	800564e <HardFault_Handler+0x4>

08005650 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8005650:	b480      	push	{r7}
 8005652:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8005654:	e7fe      	b.n	8005654 <MemManage_Handler+0x4>

08005656 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8005656:	b480      	push	{r7}
 8005658:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800565a:	e7fe      	b.n	800565a <BusFault_Handler+0x4>

0800565c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800565c:	b480      	push	{r7}
 800565e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8005660:	e7fe      	b.n	8005660 <UsageFault_Handler+0x4>

08005662 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8005662:	b480      	push	{r7}
 8005664:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8005666:	bf00      	nop
 8005668:	46bd      	mov	sp, r7
 800566a:	bc80      	pop	{r7}
 800566c:	4770      	bx	lr

0800566e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800566e:	b480      	push	{r7}
 8005670:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8005672:	bf00      	nop
 8005674:	46bd      	mov	sp, r7
 8005676:	bc80      	pop	{r7}
 8005678:	4770      	bx	lr

0800567a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800567a:	b480      	push	{r7}
 800567c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800567e:	bf00      	nop
 8005680:	46bd      	mov	sp, r7
 8005682:	bc80      	pop	{r7}
 8005684:	4770      	bx	lr

08005686 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8005686:	b580      	push	{r7, lr}
 8005688:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800568a:	f000 fb71 	bl	8005d70 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800568e:	bf00      	nop
 8005690:	bd80      	pop	{r7, pc}
	...

08005694 <USB_LP_IRQHandler>:

/**
  * @brief This function handles USB low priority interrupt.
  */
void USB_LP_IRQHandler(void)
{
 8005694:	b580      	push	{r7, lr}
 8005696:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8005698:	4802      	ldr	r0, [pc, #8]	; (80056a4 <USB_LP_IRQHandler+0x10>)
 800569a:	f001 fc29 	bl	8006ef0 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN USB_LP_IRQn 1 */

  /* USER CODE END USB_LP_IRQn 1 */
}
 800569e:	bf00      	nop
 80056a0:	bd80      	pop	{r7, pc}
 80056a2:	bf00      	nop
 80056a4:	20001180 	.word	0x20001180

080056a8 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80056a8:	b580      	push	{r7, lr}
 80056aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Encode_Push_Pin);
 80056ac:	f44f 7080 	mov.w	r0, #256	; 0x100
 80056b0:	f000 fec4 	bl	800643c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(CPU_IRQ_Pin);
 80056b4:	f44f 7000 	mov.w	r0, #512	; 0x200
 80056b8:	f000 fec0 	bl	800643c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80056bc:	bf00      	nop
 80056be:	bd80      	pop	{r7, pc}

080056c0 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80056c0:	b580      	push	{r7, lr}
 80056c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80056c4:	4802      	ldr	r0, [pc, #8]	; (80056d0 <TIM2_IRQHandler+0x10>)
 80056c6:	f003 fd97 	bl	80091f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80056ca:	bf00      	nop
 80056cc:	bd80      	pop	{r7, pc}
 80056ce:	bf00      	nop
 80056d0:	20000a7c 	.word	0x20000a7c

080056d4 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80056d4:	b580      	push	{r7, lr}
 80056d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80056d8:	4802      	ldr	r0, [pc, #8]	; (80056e4 <TIM3_IRQHandler+0x10>)
 80056da:	f003 fd8d 	bl	80091f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80056de:	bf00      	nop
 80056e0:	bd80      	pop	{r7, pc}
 80056e2:	bf00      	nop
 80056e4:	20000abc 	.word	0x20000abc

080056e8 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80056e8:	b580      	push	{r7, lr}
 80056ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 80056ec:	4802      	ldr	r0, [pc, #8]	; (80056f8 <SPI1_IRQHandler+0x10>)
 80056ee:	f003 fb07 	bl	8008d00 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 80056f2:	bf00      	nop
 80056f4:	bd80      	pop	{r7, pc}
 80056f6:	bf00      	nop
 80056f8:	200009c8 	.word	0x200009c8

080056fc <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80056fc:	b580      	push	{r7, lr}
 80056fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Start_button_Pin);
 8005700:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8005704:	f000 fe9a 	bl	800643c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8005708:	bf00      	nop
 800570a:	bd80      	pop	{r7, pc}

0800570c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800570c:	b480      	push	{r7}
 800570e:	af00      	add	r7, sp, #0
	return 1;
 8005710:	2301      	movs	r3, #1
}
 8005712:	4618      	mov	r0, r3
 8005714:	46bd      	mov	sp, r7
 8005716:	bc80      	pop	{r7}
 8005718:	4770      	bx	lr

0800571a <_kill>:

int _kill(int pid, int sig)
{
 800571a:	b580      	push	{r7, lr}
 800571c:	b082      	sub	sp, #8
 800571e:	af00      	add	r7, sp, #0
 8005720:	6078      	str	r0, [r7, #4]
 8005722:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8005724:	f005 fdbc 	bl	800b2a0 <__errno>
 8005728:	4603      	mov	r3, r0
 800572a:	2216      	movs	r2, #22
 800572c:	601a      	str	r2, [r3, #0]
	return -1;
 800572e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8005732:	4618      	mov	r0, r3
 8005734:	3708      	adds	r7, #8
 8005736:	46bd      	mov	sp, r7
 8005738:	bd80      	pop	{r7, pc}

0800573a <_exit>:

void _exit (int status)
{
 800573a:	b580      	push	{r7, lr}
 800573c:	b082      	sub	sp, #8
 800573e:	af00      	add	r7, sp, #0
 8005740:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8005742:	f04f 31ff 	mov.w	r1, #4294967295
 8005746:	6878      	ldr	r0, [r7, #4]
 8005748:	f7ff ffe7 	bl	800571a <_kill>
	while (1) {}		/* Make sure we hang here */
 800574c:	e7fe      	b.n	800574c <_exit+0x12>

0800574e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800574e:	b580      	push	{r7, lr}
 8005750:	b086      	sub	sp, #24
 8005752:	af00      	add	r7, sp, #0
 8005754:	60f8      	str	r0, [r7, #12]
 8005756:	60b9      	str	r1, [r7, #8]
 8005758:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800575a:	2300      	movs	r3, #0
 800575c:	617b      	str	r3, [r7, #20]
 800575e:	e00a      	b.n	8005776 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8005760:	f3af 8000 	nop.w
 8005764:	4601      	mov	r1, r0
 8005766:	68bb      	ldr	r3, [r7, #8]
 8005768:	1c5a      	adds	r2, r3, #1
 800576a:	60ba      	str	r2, [r7, #8]
 800576c:	b2ca      	uxtb	r2, r1
 800576e:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8005770:	697b      	ldr	r3, [r7, #20]
 8005772:	3301      	adds	r3, #1
 8005774:	617b      	str	r3, [r7, #20]
 8005776:	697a      	ldr	r2, [r7, #20]
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	429a      	cmp	r2, r3
 800577c:	dbf0      	blt.n	8005760 <_read+0x12>
	}

return len;
 800577e:	687b      	ldr	r3, [r7, #4]
}
 8005780:	4618      	mov	r0, r3
 8005782:	3718      	adds	r7, #24
 8005784:	46bd      	mov	sp, r7
 8005786:	bd80      	pop	{r7, pc}

08005788 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8005788:	b580      	push	{r7, lr}
 800578a:	b086      	sub	sp, #24
 800578c:	af00      	add	r7, sp, #0
 800578e:	60f8      	str	r0, [r7, #12]
 8005790:	60b9      	str	r1, [r7, #8]
 8005792:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8005794:	2300      	movs	r3, #0
 8005796:	617b      	str	r3, [r7, #20]
 8005798:	e009      	b.n	80057ae <_write+0x26>
	{
		__io_putchar(*ptr++);
 800579a:	68bb      	ldr	r3, [r7, #8]
 800579c:	1c5a      	adds	r2, r3, #1
 800579e:	60ba      	str	r2, [r7, #8]
 80057a0:	781b      	ldrb	r3, [r3, #0]
 80057a2:	4618      	mov	r0, r3
 80057a4:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80057a8:	697b      	ldr	r3, [r7, #20]
 80057aa:	3301      	adds	r3, #1
 80057ac:	617b      	str	r3, [r7, #20]
 80057ae:	697a      	ldr	r2, [r7, #20]
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	429a      	cmp	r2, r3
 80057b4:	dbf1      	blt.n	800579a <_write+0x12>
	}
	return len;
 80057b6:	687b      	ldr	r3, [r7, #4]
}
 80057b8:	4618      	mov	r0, r3
 80057ba:	3718      	adds	r7, #24
 80057bc:	46bd      	mov	sp, r7
 80057be:	bd80      	pop	{r7, pc}

080057c0 <_close>:

int _close(int file)
{
 80057c0:	b480      	push	{r7}
 80057c2:	b083      	sub	sp, #12
 80057c4:	af00      	add	r7, sp, #0
 80057c6:	6078      	str	r0, [r7, #4]
	return -1;
 80057c8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80057cc:	4618      	mov	r0, r3
 80057ce:	370c      	adds	r7, #12
 80057d0:	46bd      	mov	sp, r7
 80057d2:	bc80      	pop	{r7}
 80057d4:	4770      	bx	lr

080057d6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80057d6:	b480      	push	{r7}
 80057d8:	b083      	sub	sp, #12
 80057da:	af00      	add	r7, sp, #0
 80057dc:	6078      	str	r0, [r7, #4]
 80057de:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80057e0:	683b      	ldr	r3, [r7, #0]
 80057e2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80057e6:	605a      	str	r2, [r3, #4]
	return 0;
 80057e8:	2300      	movs	r3, #0
}
 80057ea:	4618      	mov	r0, r3
 80057ec:	370c      	adds	r7, #12
 80057ee:	46bd      	mov	sp, r7
 80057f0:	bc80      	pop	{r7}
 80057f2:	4770      	bx	lr

080057f4 <_isatty>:

int _isatty(int file)
{
 80057f4:	b480      	push	{r7}
 80057f6:	b083      	sub	sp, #12
 80057f8:	af00      	add	r7, sp, #0
 80057fa:	6078      	str	r0, [r7, #4]
	return 1;
 80057fc:	2301      	movs	r3, #1
}
 80057fe:	4618      	mov	r0, r3
 8005800:	370c      	adds	r7, #12
 8005802:	46bd      	mov	sp, r7
 8005804:	bc80      	pop	{r7}
 8005806:	4770      	bx	lr

08005808 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8005808:	b480      	push	{r7}
 800580a:	b085      	sub	sp, #20
 800580c:	af00      	add	r7, sp, #0
 800580e:	60f8      	str	r0, [r7, #12]
 8005810:	60b9      	str	r1, [r7, #8]
 8005812:	607a      	str	r2, [r7, #4]
	return 0;
 8005814:	2300      	movs	r3, #0
}
 8005816:	4618      	mov	r0, r3
 8005818:	3714      	adds	r7, #20
 800581a:	46bd      	mov	sp, r7
 800581c:	bc80      	pop	{r7}
 800581e:	4770      	bx	lr

08005820 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8005820:	b580      	push	{r7, lr}
 8005822:	b086      	sub	sp, #24
 8005824:	af00      	add	r7, sp, #0
 8005826:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8005828:	4a14      	ldr	r2, [pc, #80]	; (800587c <_sbrk+0x5c>)
 800582a:	4b15      	ldr	r3, [pc, #84]	; (8005880 <_sbrk+0x60>)
 800582c:	1ad3      	subs	r3, r2, r3
 800582e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8005830:	697b      	ldr	r3, [r7, #20]
 8005832:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8005834:	4b13      	ldr	r3, [pc, #76]	; (8005884 <_sbrk+0x64>)
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	2b00      	cmp	r3, #0
 800583a:	d102      	bne.n	8005842 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800583c:	4b11      	ldr	r3, [pc, #68]	; (8005884 <_sbrk+0x64>)
 800583e:	4a12      	ldr	r2, [pc, #72]	; (8005888 <_sbrk+0x68>)
 8005840:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8005842:	4b10      	ldr	r3, [pc, #64]	; (8005884 <_sbrk+0x64>)
 8005844:	681a      	ldr	r2, [r3, #0]
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	4413      	add	r3, r2
 800584a:	693a      	ldr	r2, [r7, #16]
 800584c:	429a      	cmp	r2, r3
 800584e:	d207      	bcs.n	8005860 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8005850:	f005 fd26 	bl	800b2a0 <__errno>
 8005854:	4603      	mov	r3, r0
 8005856:	220c      	movs	r2, #12
 8005858:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800585a:	f04f 33ff 	mov.w	r3, #4294967295
 800585e:	e009      	b.n	8005874 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8005860:	4b08      	ldr	r3, [pc, #32]	; (8005884 <_sbrk+0x64>)
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8005866:	4b07      	ldr	r3, [pc, #28]	; (8005884 <_sbrk+0x64>)
 8005868:	681a      	ldr	r2, [r3, #0]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	4413      	add	r3, r2
 800586e:	4a05      	ldr	r2, [pc, #20]	; (8005884 <_sbrk+0x64>)
 8005870:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8005872:	68fb      	ldr	r3, [r7, #12]
}
 8005874:	4618      	mov	r0, r3
 8005876:	3718      	adds	r7, #24
 8005878:	46bd      	mov	sp, r7
 800587a:	bd80      	pop	{r7, pc}
 800587c:	20004000 	.word	0x20004000
 8005880:	00000c00 	.word	0x00000c00
 8005884:	20000a78 	.word	0x20000a78
 8005888:	200016a0 	.word	0x200016a0

0800588c <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800588c:	b480      	push	{r7}
 800588e:	af00      	add	r7, sp, #0
    
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005890:	bf00      	nop
 8005892:	46bd      	mov	sp, r7
 8005894:	bc80      	pop	{r7}
 8005896:	4770      	bx	lr

08005898 <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8005898:	b580      	push	{r7, lr}
 800589a:	b086      	sub	sp, #24
 800589c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800589e:	f107 0308 	add.w	r3, r7, #8
 80058a2:	2200      	movs	r2, #0
 80058a4:	601a      	str	r2, [r3, #0]
 80058a6:	605a      	str	r2, [r3, #4]
 80058a8:	609a      	str	r2, [r3, #8]
 80058aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80058ac:	463b      	mov	r3, r7
 80058ae:	2200      	movs	r2, #0
 80058b0:	601a      	str	r2, [r3, #0]
 80058b2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80058b4:	4b1d      	ldr	r3, [pc, #116]	; (800592c <MX_TIM2_Init+0x94>)
 80058b6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80058ba:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 32000 -1;
 80058bc:	4b1b      	ldr	r3, [pc, #108]	; (800592c <MX_TIM2_Init+0x94>)
 80058be:	f647 42ff 	movw	r2, #31999	; 0x7cff
 80058c2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80058c4:	4b19      	ldr	r3, [pc, #100]	; (800592c <MX_TIM2_Init+0x94>)
 80058c6:	2200      	movs	r2, #0
 80058c8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50 - 1;
 80058ca:	4b18      	ldr	r3, [pc, #96]	; (800592c <MX_TIM2_Init+0x94>)
 80058cc:	2231      	movs	r2, #49	; 0x31
 80058ce:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80058d0:	4b16      	ldr	r3, [pc, #88]	; (800592c <MX_TIM2_Init+0x94>)
 80058d2:	2200      	movs	r2, #0
 80058d4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80058d6:	4b15      	ldr	r3, [pc, #84]	; (800592c <MX_TIM2_Init+0x94>)
 80058d8:	2200      	movs	r2, #0
 80058da:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80058dc:	4813      	ldr	r0, [pc, #76]	; (800592c <MX_TIM2_Init+0x94>)
 80058de:	f003 faa3 	bl	8008e28 <HAL_TIM_Base_Init>
 80058e2:	4603      	mov	r3, r0
 80058e4:	2b00      	cmp	r3, #0
 80058e6:	d001      	beq.n	80058ec <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80058e8:	f7ff fd6e 	bl	80053c8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80058ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80058f0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80058f2:	f107 0308 	add.w	r3, r7, #8
 80058f6:	4619      	mov	r1, r3
 80058f8:	480c      	ldr	r0, [pc, #48]	; (800592c <MX_TIM2_Init+0x94>)
 80058fa:	f003 fbcf 	bl	800909c <HAL_TIM_ConfigClockSource>
 80058fe:	4603      	mov	r3, r0
 8005900:	2b00      	cmp	r3, #0
 8005902:	d001      	beq.n	8005908 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8005904:	f7ff fd60 	bl	80053c8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005908:	2300      	movs	r3, #0
 800590a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800590c:	2300      	movs	r3, #0
 800590e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005910:	463b      	mov	r3, r7
 8005912:	4619      	mov	r1, r3
 8005914:	4805      	ldr	r0, [pc, #20]	; (800592c <MX_TIM2_Init+0x94>)
 8005916:	f003 fcfb 	bl	8009310 <HAL_TIMEx_MasterConfigSynchronization>
 800591a:	4603      	mov	r3, r0
 800591c:	2b00      	cmp	r3, #0
 800591e:	d001      	beq.n	8005924 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8005920:	f7ff fd52 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8005924:	bf00      	nop
 8005926:	3718      	adds	r7, #24
 8005928:	46bd      	mov	sp, r7
 800592a:	bd80      	pop	{r7, pc}
 800592c:	20000a7c 	.word	0x20000a7c

08005930 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8005930:	b580      	push	{r7, lr}
 8005932:	b086      	sub	sp, #24
 8005934:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005936:	f107 0308 	add.w	r3, r7, #8
 800593a:	2200      	movs	r2, #0
 800593c:	601a      	str	r2, [r3, #0]
 800593e:	605a      	str	r2, [r3, #4]
 8005940:	609a      	str	r2, [r3, #8]
 8005942:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005944:	463b      	mov	r3, r7
 8005946:	2200      	movs	r2, #0
 8005948:	601a      	str	r2, [r3, #0]
 800594a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800594c:	4b1d      	ldr	r3, [pc, #116]	; (80059c4 <MX_TIM3_Init+0x94>)
 800594e:	4a1e      	ldr	r2, [pc, #120]	; (80059c8 <MX_TIM3_Init+0x98>)
 8005950:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 32000 -1;
 8005952:	4b1c      	ldr	r3, [pc, #112]	; (80059c4 <MX_TIM3_Init+0x94>)
 8005954:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8005958:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800595a:	4b1a      	ldr	r3, [pc, #104]	; (80059c4 <MX_TIM3_Init+0x94>)
 800595c:	2200      	movs	r2, #0
 800595e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 500 -1;
 8005960:	4b18      	ldr	r3, [pc, #96]	; (80059c4 <MX_TIM3_Init+0x94>)
 8005962:	f240 12f3 	movw	r2, #499	; 0x1f3
 8005966:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005968:	4b16      	ldr	r3, [pc, #88]	; (80059c4 <MX_TIM3_Init+0x94>)
 800596a:	2200      	movs	r2, #0
 800596c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800596e:	4b15      	ldr	r3, [pc, #84]	; (80059c4 <MX_TIM3_Init+0x94>)
 8005970:	2200      	movs	r2, #0
 8005972:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8005974:	4813      	ldr	r0, [pc, #76]	; (80059c4 <MX_TIM3_Init+0x94>)
 8005976:	f003 fa57 	bl	8008e28 <HAL_TIM_Base_Init>
 800597a:	4603      	mov	r3, r0
 800597c:	2b00      	cmp	r3, #0
 800597e:	d001      	beq.n	8005984 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8005980:	f7ff fd22 	bl	80053c8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005984:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005988:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800598a:	f107 0308 	add.w	r3, r7, #8
 800598e:	4619      	mov	r1, r3
 8005990:	480c      	ldr	r0, [pc, #48]	; (80059c4 <MX_TIM3_Init+0x94>)
 8005992:	f003 fb83 	bl	800909c <HAL_TIM_ConfigClockSource>
 8005996:	4603      	mov	r3, r0
 8005998:	2b00      	cmp	r3, #0
 800599a:	d001      	beq.n	80059a0 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 800599c:	f7ff fd14 	bl	80053c8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80059a0:	2300      	movs	r3, #0
 80059a2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80059a4:	2300      	movs	r3, #0
 80059a6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80059a8:	463b      	mov	r3, r7
 80059aa:	4619      	mov	r1, r3
 80059ac:	4805      	ldr	r0, [pc, #20]	; (80059c4 <MX_TIM3_Init+0x94>)
 80059ae:	f003 fcaf 	bl	8009310 <HAL_TIMEx_MasterConfigSynchronization>
 80059b2:	4603      	mov	r3, r0
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d001      	beq.n	80059bc <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80059b8:	f7ff fd06 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80059bc:	bf00      	nop
 80059be:	3718      	adds	r7, #24
 80059c0:	46bd      	mov	sp, r7
 80059c2:	bd80      	pop	{r7, pc}
 80059c4:	20000abc 	.word	0x20000abc
 80059c8:	40000400 	.word	0x40000400

080059cc <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 80059cc:	b580      	push	{r7, lr}
 80059ce:	b08c      	sub	sp, #48	; 0x30
 80059d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80059d2:	f107 030c 	add.w	r3, r7, #12
 80059d6:	2224      	movs	r2, #36	; 0x24
 80059d8:	2100      	movs	r1, #0
 80059da:	4618      	mov	r0, r3
 80059dc:	f005 fc98 	bl	800b310 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80059e0:	1d3b      	adds	r3, r7, #4
 80059e2:	2200      	movs	r2, #0
 80059e4:	601a      	str	r2, [r3, #0]
 80059e6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80059e8:	4b20      	ldr	r3, [pc, #128]	; (8005a6c <MX_TIM4_Init+0xa0>)
 80059ea:	4a21      	ldr	r2, [pc, #132]	; (8005a70 <MX_TIM4_Init+0xa4>)
 80059ec:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 80059ee:	4b1f      	ldr	r3, [pc, #124]	; (8005a6c <MX_TIM4_Init+0xa0>)
 80059f0:	2200      	movs	r2, #0
 80059f2:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80059f4:	4b1d      	ldr	r3, [pc, #116]	; (8005a6c <MX_TIM4_Init+0xa0>)
 80059f6:	2200      	movs	r2, #0
 80059f8:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 80059fa:	4b1c      	ldr	r3, [pc, #112]	; (8005a6c <MX_TIM4_Init+0xa0>)
 80059fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005a00:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005a02:	4b1a      	ldr	r3, [pc, #104]	; (8005a6c <MX_TIM4_Init+0xa0>)
 8005a04:	2200      	movs	r2, #0
 8005a06:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005a08:	4b18      	ldr	r3, [pc, #96]	; (8005a6c <MX_TIM4_Init+0xa0>)
 8005a0a:	2200      	movs	r2, #0
 8005a0c:	615a      	str	r2, [r3, #20]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8005a0e:	2301      	movs	r3, #1
 8005a10:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8005a12:	2300      	movs	r3, #0
 8005a14:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8005a16:	2301      	movs	r3, #1
 8005a18:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8005a1a:	2300      	movs	r3, #0
 8005a1c:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8005a1e:	2300      	movs	r3, #0
 8005a20:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 8005a22:	2302      	movs	r3, #2
 8005a24:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8005a26:	2301      	movs	r3, #1
 8005a28:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8005a2a:	2300      	movs	r3, #0
 8005a2c:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8005a2e:	2300      	movs	r3, #0
 8005a30:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8005a32:	f107 030c 	add.w	r3, r7, #12
 8005a36:	4619      	mov	r1, r3
 8005a38:	480c      	ldr	r0, [pc, #48]	; (8005a6c <MX_TIM4_Init+0xa0>)
 8005a3a:	f003 fa71 	bl	8008f20 <HAL_TIM_Encoder_Init>
 8005a3e:	4603      	mov	r3, r0
 8005a40:	2b00      	cmp	r3, #0
 8005a42:	d001      	beq.n	8005a48 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 8005a44:	f7ff fcc0 	bl	80053c8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005a48:	2300      	movs	r3, #0
 8005a4a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005a4c:	2300      	movs	r3, #0
 8005a4e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8005a50:	1d3b      	adds	r3, r7, #4
 8005a52:	4619      	mov	r1, r3
 8005a54:	4805      	ldr	r0, [pc, #20]	; (8005a6c <MX_TIM4_Init+0xa0>)
 8005a56:	f003 fc5b 	bl	8009310 <HAL_TIMEx_MasterConfigSynchronization>
 8005a5a:	4603      	mov	r3, r0
 8005a5c:	2b00      	cmp	r3, #0
 8005a5e:	d001      	beq.n	8005a64 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8005a60:	f7ff fcb2 	bl	80053c8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8005a64:	bf00      	nop
 8005a66:	3730      	adds	r7, #48	; 0x30
 8005a68:	46bd      	mov	sp, r7
 8005a6a:	bd80      	pop	{r7, pc}
 8005a6c:	20000afc 	.word	0x20000afc
 8005a70:	40000800 	.word	0x40000800

08005a74 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8005a74:	b580      	push	{r7, lr}
 8005a76:	b084      	sub	sp, #16
 8005a78:	af00      	add	r7, sp, #0
 8005a7a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005a84:	d114      	bne.n	8005ab0 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8005a86:	4b19      	ldr	r3, [pc, #100]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005a88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a8a:	4a18      	ldr	r2, [pc, #96]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005a8c:	f043 0301 	orr.w	r3, r3, #1
 8005a90:	6253      	str	r3, [r2, #36]	; 0x24
 8005a92:	4b16      	ldr	r3, [pc, #88]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005a94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a96:	f003 0301 	and.w	r3, r3, #1
 8005a9a:	60fb      	str	r3, [r7, #12]
 8005a9c:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	2101      	movs	r1, #1
 8005aa2:	201c      	movs	r0, #28
 8005aa4:	f000 f99a 	bl	8005ddc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005aa8:	201c      	movs	r0, #28
 8005aaa:	f000 f9d5 	bl	8005e58 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 8005aae:	e018      	b.n	8005ae2 <HAL_TIM_Base_MspInit+0x6e>
  else if(tim_baseHandle->Instance==TIM3)
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	4a0e      	ldr	r2, [pc, #56]	; (8005af0 <HAL_TIM_Base_MspInit+0x7c>)
 8005ab6:	4293      	cmp	r3, r2
 8005ab8:	d113      	bne.n	8005ae2 <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8005aba:	4b0c      	ldr	r3, [pc, #48]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005abc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005abe:	4a0b      	ldr	r2, [pc, #44]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005ac0:	f043 0302 	orr.w	r3, r3, #2
 8005ac4:	6253      	str	r3, [r2, #36]	; 0x24
 8005ac6:	4b09      	ldr	r3, [pc, #36]	; (8005aec <HAL_TIM_Base_MspInit+0x78>)
 8005ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aca:	f003 0302 	and.w	r3, r3, #2
 8005ace:	60bb      	str	r3, [r7, #8]
 8005ad0:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 8005ad2:	2200      	movs	r2, #0
 8005ad4:	2101      	movs	r1, #1
 8005ad6:	201d      	movs	r0, #29
 8005ad8:	f000 f980 	bl	8005ddc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8005adc:	201d      	movs	r0, #29
 8005ade:	f000 f9bb 	bl	8005e58 <HAL_NVIC_EnableIRQ>
}
 8005ae2:	bf00      	nop
 8005ae4:	3710      	adds	r7, #16
 8005ae6:	46bd      	mov	sp, r7
 8005ae8:	bd80      	pop	{r7, pc}
 8005aea:	bf00      	nop
 8005aec:	40023800 	.word	0x40023800
 8005af0:	40000400 	.word	0x40000400

08005af4 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 8005af4:	b580      	push	{r7, lr}
 8005af6:	b08a      	sub	sp, #40	; 0x28
 8005af8:	af00      	add	r7, sp, #0
 8005afa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005afc:	f107 0314 	add.w	r3, r7, #20
 8005b00:	2200      	movs	r2, #0
 8005b02:	601a      	str	r2, [r3, #0]
 8005b04:	605a      	str	r2, [r3, #4]
 8005b06:	609a      	str	r2, [r3, #8]
 8005b08:	60da      	str	r2, [r3, #12]
 8005b0a:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM4)
 8005b0c:	687b      	ldr	r3, [r7, #4]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	4a17      	ldr	r2, [pc, #92]	; (8005b70 <HAL_TIM_Encoder_MspInit+0x7c>)
 8005b12:	4293      	cmp	r3, r2
 8005b14:	d127      	bne.n	8005b66 <HAL_TIM_Encoder_MspInit+0x72>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 8005b16:	4b17      	ldr	r3, [pc, #92]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b1a:	4a16      	ldr	r2, [pc, #88]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b1c:	f043 0304 	orr.w	r3, r3, #4
 8005b20:	6253      	str	r3, [r2, #36]	; 0x24
 8005b22:	4b14      	ldr	r3, [pc, #80]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b26:	f003 0304 	and.w	r3, r3, #4
 8005b2a:	613b      	str	r3, [r7, #16]
 8005b2c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005b2e:	4b11      	ldr	r3, [pc, #68]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b30:	69db      	ldr	r3, [r3, #28]
 8005b32:	4a10      	ldr	r2, [pc, #64]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b34:	f043 0302 	orr.w	r3, r3, #2
 8005b38:	61d3      	str	r3, [r2, #28]
 8005b3a:	4b0e      	ldr	r3, [pc, #56]	; (8005b74 <HAL_TIM_Encoder_MspInit+0x80>)
 8005b3c:	69db      	ldr	r3, [r3, #28]
 8005b3e:	f003 0302 	and.w	r3, r3, #2
 8005b42:	60fb      	str	r3, [r7, #12]
 8005b44:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8005b46:	23c0      	movs	r3, #192	; 0xc0
 8005b48:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005b4a:	2302      	movs	r3, #2
 8005b4c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b4e:	2300      	movs	r3, #0
 8005b50:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005b52:	2300      	movs	r3, #0
 8005b54:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8005b56:	2302      	movs	r3, #2
 8005b58:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005b5a:	f107 0314 	add.w	r3, r7, #20
 8005b5e:	4619      	mov	r1, r3
 8005b60:	4805      	ldr	r0, [pc, #20]	; (8005b78 <HAL_TIM_Encoder_MspInit+0x84>)
 8005b62:	f000 fb77 	bl	8006254 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8005b66:	bf00      	nop
 8005b68:	3728      	adds	r7, #40	; 0x28
 8005b6a:	46bd      	mov	sp, r7
 8005b6c:	bd80      	pop	{r7, pc}
 8005b6e:	bf00      	nop
 8005b70:	40000800 	.word	0x40000800
 8005b74:	40023800 	.word	0x40023800
 8005b78:	40020400 	.word	0x40020400

08005b7c <TMP117_get_Temperature>:
   @Description   Function gives to us ambient temperature
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  Float
 */
uint16_t TMP117_get_Temperature             (I2C_HandleTypeDef i2c)
{
 8005b7c:	b084      	sub	sp, #16
 8005b7e:	b580      	push	{r7, lr}
 8005b80:	b084      	sub	sp, #16
 8005b82:	af02      	add	r7, sp, #8
 8005b84:	f107 0c10 	add.w	ip, r7, #16
 8005b88:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      int16_t tmpx=0;
 8005b8c:	2300      	movs	r3, #0
 8005b8e:	80fb      	strh	r3, [r7, #6]
      buf[0]=TMP117_TemperatureRegister;
 8005b90:	4b18      	ldr	r3, [pc, #96]	; (8005bf4 <TMP117_get_Temperature+0x78>)
 8005b92:	2200      	movs	r2, #0
 8005b94:	701a      	strb	r2, [r3, #0]

//      buf[0]=TMP117_ConfigurationRegister;

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,1,100);
 8005b96:	4b18      	ldr	r3, [pc, #96]	; (8005bf8 <TMP117_get_Temperature+0x7c>)
 8005b98:	781b      	ldrb	r3, [r3, #0]
 8005b9a:	b299      	uxth	r1, r3
 8005b9c:	2364      	movs	r3, #100	; 0x64
 8005b9e:	9300      	str	r3, [sp, #0]
 8005ba0:	2301      	movs	r3, #1
 8005ba2:	4a14      	ldr	r2, [pc, #80]	; (8005bf4 <TMP117_get_Temperature+0x78>)
 8005ba4:	f107 0010 	add.w	r0, r7, #16
 8005ba8:	f000 fd1c 	bl	80065e4 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 8005bac:	2001      	movs	r0, #1
 8005bae:	f000 f8f1 	bl	8005d94 <HAL_Delay>
      HAL_I2C_Master_Receive(&i2c,TMP117_DeviceID,buf,2,1000);
 8005bb2:	4b11      	ldr	r3, [pc, #68]	; (8005bf8 <TMP117_get_Temperature+0x7c>)
 8005bb4:	781b      	ldrb	r3, [r3, #0]
 8005bb6:	b299      	uxth	r1, r3
 8005bb8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005bbc:	9300      	str	r3, [sp, #0]
 8005bbe:	2302      	movs	r3, #2
 8005bc0:	4a0c      	ldr	r2, [pc, #48]	; (8005bf4 <TMP117_get_Temperature+0x78>)
 8005bc2:	f107 0010 	add.w	r0, r7, #16
 8005bc6:	f000 fea3 	bl	8006910 <HAL_I2C_Master_Receive>
      tmpx=buf[0];
 8005bca:	4b0a      	ldr	r3, [pc, #40]	; (8005bf4 <TMP117_get_Temperature+0x78>)
 8005bcc:	781b      	ldrb	r3, [r3, #0]
 8005bce:	80fb      	strh	r3, [r7, #6]
      tmpx<<=8;
 8005bd0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005bd4:	021b      	lsls	r3, r3, #8
 8005bd6:	80fb      	strh	r3, [r7, #6]
      tmpx|=buf[1];
 8005bd8:	4b06      	ldr	r3, [pc, #24]	; (8005bf4 <TMP117_get_Temperature+0x78>)
 8005bda:	785b      	ldrb	r3, [r3, #1]
 8005bdc:	b21a      	sxth	r2, r3
 8005bde:	88fb      	ldrh	r3, [r7, #6]
 8005be0:	4313      	orrs	r3, r2
 8005be2:	80fb      	strh	r3, [r7, #6]

      return tmpx;
 8005be4:	88fb      	ldrh	r3, [r7, #6]
}
 8005be6:	4618      	mov	r0, r3
 8005be8:	3708      	adds	r7, #8
 8005bea:	46bd      	mov	sp, r7
 8005bec:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005bf0:	b004      	add	sp, #16
 8005bf2:	4770      	bx	lr
 8005bf4:	20000b3c 	.word	0x20000b3c
 8005bf8:	20000028 	.word	0x20000028

08005bfc <TMP117_set_Configuration>:
                  uint8_t first     ->  [15:8]
                  uint8_t second    ->  [7:0]
   @Return value  void
 */
void TMP117_set_Configuration            (I2C_HandleTypeDef i2c,uint8_t first,uint8_t second)
{
 8005bfc:	b084      	sub	sp, #16
 8005bfe:	b580      	push	{r7, lr}
 8005c00:	b082      	sub	sp, #8
 8005c02:	af02      	add	r7, sp, #8
 8005c04:	f107 0c08 	add.w	ip, r7, #8
 8005c08:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      buf[0]=TMP117_ConfigurationRegister;
 8005c0c:	4b0f      	ldr	r3, [pc, #60]	; (8005c4c <TMP117_set_Configuration+0x50>)
 8005c0e:	2201      	movs	r2, #1
 8005c10:	701a      	strb	r2, [r3, #0]
      buf[1]=first;
 8005c12:	4a0e      	ldr	r2, [pc, #56]	; (8005c4c <TMP117_set_Configuration+0x50>)
 8005c14:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 8005c18:	7053      	strb	r3, [r2, #1]
      buf[2]=second;
 8005c1a:	4a0c      	ldr	r2, [pc, #48]	; (8005c4c <TMP117_set_Configuration+0x50>)
 8005c1c:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8005c20:	7093      	strb	r3, [r2, #2]

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,2,100);
 8005c22:	4b0b      	ldr	r3, [pc, #44]	; (8005c50 <TMP117_set_Configuration+0x54>)
 8005c24:	781b      	ldrb	r3, [r3, #0]
 8005c26:	b299      	uxth	r1, r3
 8005c28:	2364      	movs	r3, #100	; 0x64
 8005c2a:	9300      	str	r3, [sp, #0]
 8005c2c:	2302      	movs	r3, #2
 8005c2e:	4a07      	ldr	r2, [pc, #28]	; (8005c4c <TMP117_set_Configuration+0x50>)
 8005c30:	f107 0008 	add.w	r0, r7, #8
 8005c34:	f000 fcd6 	bl	80065e4 <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 8005c38:	2001      	movs	r0, #1
 8005c3a:	f000 f8ab 	bl	8005d94 <HAL_Delay>
}
 8005c3e:	bf00      	nop
 8005c40:	46bd      	mov	sp, r7
 8005c42:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005c46:	b004      	add	sp, #16
 8005c48:	4770      	bx	lr
 8005c4a:	bf00      	nop
 8005c4c:	20000b40 	.word	0x20000b40
 8005c50:	20000028 	.word	0x20000028

08005c54 <TMP117_Initialization>:
   @Description   Custom Parameters for Sensor
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  void
 */
void TMP117_Initialization               (I2C_HandleTypeDef i2c)
{
 8005c54:	b084      	sub	sp, #16
 8005c56:	b580      	push	{r7, lr}
 8005c58:	b094      	sub	sp, #80	; 0x50
 8005c5a:	af14      	add	r7, sp, #80	; 0x50
 8005c5c:	f107 0c08 	add.w	ip, r7, #8
 8005c60:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    TMP117_set_Configuration(i2c,0x02,0x22);
 8005c64:	2322      	movs	r3, #34	; 0x22
 8005c66:	9312      	str	r3, [sp, #72]	; 0x48
 8005c68:	2302      	movs	r3, #2
 8005c6a:	9311      	str	r3, [sp, #68]	; 0x44
 8005c6c:	4668      	mov	r0, sp
 8005c6e:	f107 0318 	add.w	r3, r7, #24
 8005c72:	2244      	movs	r2, #68	; 0x44
 8005c74:	4619      	mov	r1, r3
 8005c76:	f005 fb3d 	bl	800b2f4 <memcpy>
 8005c7a:	f107 0308 	add.w	r3, r7, #8
 8005c7e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005c80:	f7ff ffbc 	bl	8005bfc <TMP117_set_Configuration>
	HAL_Delay(2); // wait 2ms
 8005c84:	2002      	movs	r0, #2
 8005c86:	f000 f885 	bl	8005d94 <HAL_Delay>
	TMP117_set_Configuration(i2c,0x03,0xA0);
 8005c8a:	23a0      	movs	r3, #160	; 0xa0
 8005c8c:	9312      	str	r3, [sp, #72]	; 0x48
 8005c8e:	2303      	movs	r3, #3
 8005c90:	9311      	str	r3, [sp, #68]	; 0x44
 8005c92:	4668      	mov	r0, sp
 8005c94:	f107 0318 	add.w	r3, r7, #24
 8005c98:	2244      	movs	r2, #68	; 0x44
 8005c9a:	4619      	mov	r1, r3
 8005c9c:	f005 fb2a 	bl	800b2f4 <memcpy>
 8005ca0:	f107 0308 	add.w	r3, r7, #8
 8005ca4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005ca6:	f7ff ffa9 	bl	8005bfc <TMP117_set_Configuration>
	//TMP117_set_Configuration(i2c,0x02,0x20);
//      TMP117_set_Temperature_Offset(i2c,0x00,0x00); //Default Value
//      TMP117_set_LowLimit(i2c,0x12,0x80);           //Set 10 Celcius
//      TMP117_set_HighLimit(i2c,0x51,0x20);          //Set 40 Celcius
}
 8005caa:	bf00      	nop
 8005cac:	46bd      	mov	sp, r7
 8005cae:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005cb2:	b004      	add	sp, #16
 8005cb4:	4770      	bx	lr
	...

08005cb8 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005cb8:	480c      	ldr	r0, [pc, #48]	; (8005cec <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8005cba:	490d      	ldr	r1, [pc, #52]	; (8005cf0 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8005cbc:	4a0d      	ldr	r2, [pc, #52]	; (8005cf4 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8005cbe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8005cc0:	e002      	b.n	8005cc8 <LoopCopyDataInit>

08005cc2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8005cc2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8005cc4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8005cc6:	3304      	adds	r3, #4

08005cc8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8005cc8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8005cca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8005ccc:	d3f9      	bcc.n	8005cc2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8005cce:	4a0a      	ldr	r2, [pc, #40]	; (8005cf8 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8005cd0:	4c0a      	ldr	r4, [pc, #40]	; (8005cfc <LoopFillZerobss+0x22>)
  movs r3, #0
 8005cd2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8005cd4:	e001      	b.n	8005cda <LoopFillZerobss>

08005cd6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8005cd6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8005cd8:	3204      	adds	r2, #4

08005cda <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8005cda:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8005cdc:	d3fb      	bcc.n	8005cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8005cde:	f7ff fdd5 	bl	800588c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8005ce2:	f005 fae3 	bl	800b2ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8005ce6:	f7fd ff7f 	bl	8003be8 <main>
  bx lr
 8005cea:	4770      	bx	lr
  ldr r0, =_sdata
 8005cec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8005cf0:	200006f0 	.word	0x200006f0
  ldr r2, =_sidata
 8005cf4:	080116ec 	.word	0x080116ec
  ldr r2, =_sbss
 8005cf8:	200006f0 	.word	0x200006f0
  ldr r4, =_ebss
 8005cfc:	2000169c 	.word	0x2000169c

08005d00 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8005d00:	e7fe      	b.n	8005d00 <ADC1_IRQHandler>
	...

08005d04 <HAL_InitTick>:
 8005d04:	b538      	push	{r3, r4, r5, lr}
 8005d06:	4b0f      	ldr	r3, [pc, #60]	; (8005d44 <HAL_InitTick+0x40>)
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	b90b      	cbnz	r3, 8005d10 <HAL_InitTick+0xc>
 8005d0c:	2001      	movs	r0, #1
 8005d0e:	bd38      	pop	{r3, r4, r5, pc}
 8005d10:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005d14:	fbb2 f3f3 	udiv	r3, r2, r3
 8005d18:	490b      	ldr	r1, [pc, #44]	; (8005d48 <HAL_InitTick+0x44>)
 8005d1a:	4605      	mov	r5, r0
 8005d1c:	6808      	ldr	r0, [r1, #0]
 8005d1e:	fbb0 f0f3 	udiv	r0, r0, r3
 8005d22:	f000 f8a7 	bl	8005e74 <HAL_SYSTICK_Config>
 8005d26:	4604      	mov	r4, r0
 8005d28:	2800      	cmp	r0, #0
 8005d2a:	d1ef      	bne.n	8005d0c <HAL_InitTick+0x8>
 8005d2c:	2d0f      	cmp	r5, #15
 8005d2e:	d8ed      	bhi.n	8005d0c <HAL_InitTick+0x8>
 8005d30:	4602      	mov	r2, r0
 8005d32:	4629      	mov	r1, r5
 8005d34:	f04f 30ff 	mov.w	r0, #4294967295
 8005d38:	f000 f850 	bl	8005ddc <HAL_NVIC_SetPriority>
 8005d3c:	4b03      	ldr	r3, [pc, #12]	; (8005d4c <HAL_InitTick+0x48>)
 8005d3e:	4620      	mov	r0, r4
 8005d40:	601d      	str	r5, [r3, #0]
 8005d42:	bd38      	pop	{r3, r4, r5, pc}
 8005d44:	2000002c 	.word	0x2000002c
 8005d48:	20000024 	.word	0x20000024
 8005d4c:	20000030 	.word	0x20000030

08005d50 <HAL_Init>:
 8005d50:	2003      	movs	r0, #3
 8005d52:	b510      	push	{r4, lr}
 8005d54:	f000 f830 	bl	8005db8 <HAL_NVIC_SetPriorityGrouping>
 8005d58:	200f      	movs	r0, #15
 8005d5a:	f7ff ffd3 	bl	8005d04 <HAL_InitTick>
 8005d5e:	b110      	cbz	r0, 8005d66 <HAL_Init+0x16>
 8005d60:	2401      	movs	r4, #1
 8005d62:	4620      	mov	r0, r4
 8005d64:	bd10      	pop	{r4, pc}
 8005d66:	4604      	mov	r4, r0
 8005d68:	f7ff fc1a 	bl	80055a0 <HAL_MspInit>
 8005d6c:	4620      	mov	r0, r4
 8005d6e:	bd10      	pop	{r4, pc}

08005d70 <HAL_IncTick>:
 8005d70:	4a03      	ldr	r2, [pc, #12]	; (8005d80 <HAL_IncTick+0x10>)
 8005d72:	4904      	ldr	r1, [pc, #16]	; (8005d84 <HAL_IncTick+0x14>)
 8005d74:	6813      	ldr	r3, [r2, #0]
 8005d76:	6809      	ldr	r1, [r1, #0]
 8005d78:	440b      	add	r3, r1
 8005d7a:	6013      	str	r3, [r2, #0]
 8005d7c:	4770      	bx	lr
 8005d7e:	bf00      	nop
 8005d80:	20000b44 	.word	0x20000b44
 8005d84:	2000002c 	.word	0x2000002c

08005d88 <HAL_GetTick>:
 8005d88:	4b01      	ldr	r3, [pc, #4]	; (8005d90 <HAL_GetTick+0x8>)
 8005d8a:	6818      	ldr	r0, [r3, #0]
 8005d8c:	4770      	bx	lr
 8005d8e:	bf00      	nop
 8005d90:	20000b44 	.word	0x20000b44

08005d94 <HAL_Delay>:
 8005d94:	b538      	push	{r3, r4, r5, lr}
 8005d96:	4604      	mov	r4, r0
 8005d98:	f7ff fff6 	bl	8005d88 <HAL_GetTick>
 8005d9c:	1c63      	adds	r3, r4, #1
 8005d9e:	4605      	mov	r5, r0
 8005da0:	d002      	beq.n	8005da8 <HAL_Delay+0x14>
 8005da2:	4b04      	ldr	r3, [pc, #16]	; (8005db4 <HAL_Delay+0x20>)
 8005da4:	681b      	ldr	r3, [r3, #0]
 8005da6:	441c      	add	r4, r3
 8005da8:	f7ff ffee 	bl	8005d88 <HAL_GetTick>
 8005dac:	1b40      	subs	r0, r0, r5
 8005dae:	42a0      	cmp	r0, r4
 8005db0:	d3fa      	bcc.n	8005da8 <HAL_Delay+0x14>
 8005db2:	bd38      	pop	{r3, r4, r5, pc}
 8005db4:	2000002c 	.word	0x2000002c

08005db8 <HAL_NVIC_SetPriorityGrouping>:
 8005db8:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 8005dbc:	4906      	ldr	r1, [pc, #24]	; (8005dd8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005dbe:	0203      	lsls	r3, r0, #8
 8005dc0:	68ca      	ldr	r2, [r1, #12]
 8005dc2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8005dc6:	ea02 020c 	and.w	r2, r2, ip
 8005dca:	4313      	orrs	r3, r2
 8005dcc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005dd0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005dd4:	60cb      	str	r3, [r1, #12]
 8005dd6:	4770      	bx	lr
 8005dd8:	e000ed00 	.word	0xe000ed00

08005ddc <HAL_NVIC_SetPriority>:
 8005ddc:	4b1c      	ldr	r3, [pc, #112]	; (8005e50 <HAL_NVIC_SetPriority+0x74>)
 8005dde:	b500      	push	{lr}
 8005de0:	68db      	ldr	r3, [r3, #12]
 8005de2:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8005de6:	f1c3 0e07 	rsb	lr, r3, #7
 8005dea:	f1be 0f04 	cmp.w	lr, #4
 8005dee:	f103 0c04 	add.w	ip, r3, #4
 8005df2:	bf28      	it	cs
 8005df4:	f04f 0e04 	movcs.w	lr, #4
 8005df8:	f1bc 0f06 	cmp.w	ip, #6
 8005dfc:	d91b      	bls.n	8005e36 <HAL_NVIC_SetPriority+0x5a>
 8005dfe:	f04f 3cff 	mov.w	ip, #4294967295
 8005e02:	3b03      	subs	r3, #3
 8005e04:	fa0c fc03 	lsl.w	ip, ip, r3
 8005e08:	ea22 020c 	bic.w	r2, r2, ip
 8005e0c:	f04f 3cff 	mov.w	ip, #4294967295
 8005e10:	fa0c fc0e 	lsl.w	ip, ip, lr
 8005e14:	ea21 010c 	bic.w	r1, r1, ip
 8005e18:	4099      	lsls	r1, r3
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	ea41 0102 	orr.w	r1, r1, r2
 8005e20:	db0c      	blt.n	8005e3c <HAL_NVIC_SetPriority+0x60>
 8005e22:	0109      	lsls	r1, r1, #4
 8005e24:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8005e28:	b2c9      	uxtb	r1, r1
 8005e2a:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8005e2e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 8005e32:	f85d fb04 	ldr.w	pc, [sp], #4
 8005e36:	2200      	movs	r2, #0
 8005e38:	4613      	mov	r3, r2
 8005e3a:	e7e7      	b.n	8005e0c <HAL_NVIC_SetPriority+0x30>
 8005e3c:	4b05      	ldr	r3, [pc, #20]	; (8005e54 <HAL_NVIC_SetPriority+0x78>)
 8005e3e:	f000 000f 	and.w	r0, r0, #15
 8005e42:	0109      	lsls	r1, r1, #4
 8005e44:	b2c9      	uxtb	r1, r1
 8005e46:	4403      	add	r3, r0
 8005e48:	7619      	strb	r1, [r3, #24]
 8005e4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005e4e:	bf00      	nop
 8005e50:	e000ed00 	.word	0xe000ed00
 8005e54:	e000ecfc 	.word	0xe000ecfc

08005e58 <HAL_NVIC_EnableIRQ>:
 8005e58:	2800      	cmp	r0, #0
 8005e5a:	db07      	blt.n	8005e6c <HAL_NVIC_EnableIRQ+0x14>
 8005e5c:	2301      	movs	r3, #1
 8005e5e:	f000 011f 	and.w	r1, r0, #31
 8005e62:	4a03      	ldr	r2, [pc, #12]	; (8005e70 <HAL_NVIC_EnableIRQ+0x18>)
 8005e64:	0940      	lsrs	r0, r0, #5
 8005e66:	408b      	lsls	r3, r1
 8005e68:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8005e6c:	4770      	bx	lr
 8005e6e:	bf00      	nop
 8005e70:	e000e100 	.word	0xe000e100

08005e74 <HAL_SYSTICK_Config>:
 8005e74:	3801      	subs	r0, #1
 8005e76:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8005e7a:	d20f      	bcs.n	8005e9c <HAL_SYSTICK_Config+0x28>
 8005e7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8005e80:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8005e84:	2200      	movs	r2, #0
 8005e86:	2107      	movs	r1, #7
 8005e88:	b410      	push	{r4}
 8005e8a:	4c05      	ldr	r4, [pc, #20]	; (8005ea0 <HAL_SYSTICK_Config+0x2c>)
 8005e8c:	6158      	str	r0, [r3, #20]
 8005e8e:	f884 c023 	strb.w	ip, [r4, #35]	; 0x23
 8005e92:	4610      	mov	r0, r2
 8005e94:	619a      	str	r2, [r3, #24]
 8005e96:	bc10      	pop	{r4}
 8005e98:	6119      	str	r1, [r3, #16]
 8005e9a:	4770      	bx	lr
 8005e9c:	2001      	movs	r0, #1
 8005e9e:	4770      	bx	lr
 8005ea0:	e000ed00 	.word	0xe000ed00

08005ea4 <HAL_DMA_Abort_IT>:
 8005ea4:	b538      	push	{r3, r4, r5, lr}
 8005ea6:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 8005eaa:	4603      	mov	r3, r0
 8005eac:	2a02      	cmp	r2, #2
 8005eae:	d003      	beq.n	8005eb8 <HAL_DMA_Abort_IT+0x14>
 8005eb0:	2204      	movs	r2, #4
 8005eb2:	2001      	movs	r0, #1
 8005eb4:	639a      	str	r2, [r3, #56]	; 0x38
 8005eb6:	bd38      	pop	{r3, r4, r5, pc}
 8005eb8:	6801      	ldr	r1, [r0, #0]
 8005eba:	f04f 0c01 	mov.w	ip, #1
 8005ebe:	680c      	ldr	r4, [r1, #0]
 8005ec0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ec2:	f024 040e 	bic.w	r4, r4, #14
 8005ec6:	600c      	str	r4, [r1, #0]
 8005ec8:	2400      	movs	r4, #0
 8005eca:	680d      	ldr	r5, [r1, #0]
 8005ecc:	f002 021c 	and.w	r2, r2, #28
 8005ed0:	f025 0501 	bic.w	r5, r5, #1
 8005ed4:	600d      	str	r5, [r1, #0]
 8005ed6:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8005ed8:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8005eda:	fa0c f202 	lsl.w	r2, ip, r2
 8005ede:	606a      	str	r2, [r5, #4]
 8005ee0:	f880 c021 	strb.w	ip, [r0, #33]	; 0x21
 8005ee4:	f880 4020 	strb.w	r4, [r0, #32]
 8005ee8:	b111      	cbz	r1, 8005ef0 <HAL_DMA_Abort_IT+0x4c>
 8005eea:	4788      	blx	r1
 8005eec:	4620      	mov	r0, r4
 8005eee:	bd38      	pop	{r3, r4, r5, pc}
 8005ef0:	4608      	mov	r0, r1
 8005ef2:	bd38      	pop	{r3, r4, r5, pc}

08005ef4 <FLASH_SetErrorCode>:
 8005ef4:	4b27      	ldr	r3, [pc, #156]	; (8005f94 <FLASH_SetErrorCode+0xa0>)
 8005ef6:	b570      	push	{r4, r5, r6, lr}
 8005ef8:	699b      	ldr	r3, [r3, #24]
 8005efa:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 8005efe:	d039      	beq.n	8005f74 <FLASH_SetErrorCode+0x80>
 8005f00:	4a25      	ldr	r2, [pc, #148]	; (8005f98 <FLASH_SetErrorCode+0xa4>)
 8005f02:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 8005f06:	6953      	ldr	r3, [r2, #20]
 8005f08:	f44f 6ee0 	mov.w	lr, #1792	; 0x700
 8005f0c:	f043 0302 	orr.w	r3, r3, #2
 8005f10:	6153      	str	r3, [r2, #20]
 8005f12:	f44f 6c30 	mov.w	ip, #2816	; 0xb00
 8005f16:	f44f 6050 	mov.w	r0, #3328	; 0xd00
 8005f1a:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8005f1e:	f44f 6110 	mov.w	r1, #2304	; 0x900
 8005f22:	f44f 7540 	mov.w	r5, #768	; 0x300
 8005f26:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005f2a:	4c1a      	ldr	r4, [pc, #104]	; (8005f94 <FLASH_SetErrorCode+0xa0>)
 8005f2c:	69a4      	ldr	r4, [r4, #24]
 8005f2e:	05a4      	lsls	r4, r4, #22
 8005f30:	d508      	bpl.n	8005f44 <FLASH_SetErrorCode+0x50>
 8005f32:	4630      	mov	r0, r6
 8005f34:	4672      	mov	r2, lr
 8005f36:	4661      	mov	r1, ip
 8005f38:	462b      	mov	r3, r5
 8005f3a:	4d17      	ldr	r5, [pc, #92]	; (8005f98 <FLASH_SetErrorCode+0xa4>)
 8005f3c:	696c      	ldr	r4, [r5, #20]
 8005f3e:	f044 0401 	orr.w	r4, r4, #1
 8005f42:	616c      	str	r4, [r5, #20]
 8005f44:	4c13      	ldr	r4, [pc, #76]	; (8005f94 <FLASH_SetErrorCode+0xa0>)
 8005f46:	69a4      	ldr	r4, [r4, #24]
 8005f48:	0524      	lsls	r4, r4, #20
 8005f4a:	d506      	bpl.n	8005f5a <FLASH_SetErrorCode+0x66>
 8005f4c:	4602      	mov	r2, r0
 8005f4e:	4812      	ldr	r0, [pc, #72]	; (8005f98 <FLASH_SetErrorCode+0xa4>)
 8005f50:	460b      	mov	r3, r1
 8005f52:	6941      	ldr	r1, [r0, #20]
 8005f54:	f041 0104 	orr.w	r1, r1, #4
 8005f58:	6141      	str	r1, [r0, #20]
 8005f5a:	490e      	ldr	r1, [pc, #56]	; (8005f94 <FLASH_SetErrorCode+0xa0>)
 8005f5c:	6989      	ldr	r1, [r1, #24]
 8005f5e:	0549      	lsls	r1, r1, #21
 8005f60:	d505      	bpl.n	8005f6e <FLASH_SetErrorCode+0x7a>
 8005f62:	490d      	ldr	r1, [pc, #52]	; (8005f98 <FLASH_SetErrorCode+0xa4>)
 8005f64:	4613      	mov	r3, r2
 8005f66:	694a      	ldr	r2, [r1, #20]
 8005f68:	f042 0208 	orr.w	r2, r2, #8
 8005f6c:	614a      	str	r2, [r1, #20]
 8005f6e:	4a09      	ldr	r2, [pc, #36]	; (8005f94 <FLASH_SetErrorCode+0xa0>)
 8005f70:	6193      	str	r3, [r2, #24]
 8005f72:	bd70      	pop	{r4, r5, r6, pc}
 8005f74:	f44f 6660 	mov.w	r6, #3584	; 0xe00
 8005f78:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
 8005f7c:	f44f 6c20 	mov.w	ip, #2560	; 0xa00
 8005f80:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8005f84:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005f88:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8005f8c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8005f90:	e7cb      	b.n	8005f2a <FLASH_SetErrorCode+0x36>
 8005f92:	bf00      	nop
 8005f94:	40023c00 	.word	0x40023c00
 8005f98:	20000b48 	.word	0x20000b48

08005f9c <FLASH_WaitForLastOperation>:
 8005f9c:	b570      	push	{r4, r5, r6, lr}
 8005f9e:	4604      	mov	r4, r0
 8005fa0:	f7ff fef2 	bl	8005d88 <HAL_GetTick>
 8005fa4:	4605      	mov	r5, r0
 8005fa6:	4e15      	ldr	r6, [pc, #84]	; (8005ffc <FLASH_WaitForLastOperation+0x60>)
 8005fa8:	1c60      	adds	r0, r4, #1
 8005faa:	d11c      	bne.n	8005fe6 <FLASH_WaitForLastOperation+0x4a>
 8005fac:	4a13      	ldr	r2, [pc, #76]	; (8005ffc <FLASH_WaitForLastOperation+0x60>)
 8005fae:	6993      	ldr	r3, [r2, #24]
 8005fb0:	07d9      	lsls	r1, r3, #31
 8005fb2:	d4fc      	bmi.n	8005fae <FLASH_WaitForLastOperation+0x12>
 8005fb4:	4b11      	ldr	r3, [pc, #68]	; (8005ffc <FLASH_WaitForLastOperation+0x60>)
 8005fb6:	699a      	ldr	r2, [r3, #24]
 8005fb8:	0794      	lsls	r4, r2, #30
 8005fba:	bf44      	itt	mi
 8005fbc:	2202      	movmi	r2, #2
 8005fbe:	619a      	strmi	r2, [r3, #24]
 8005fc0:	4b0e      	ldr	r3, [pc, #56]	; (8005ffc <FLASH_WaitForLastOperation+0x60>)
 8005fc2:	699a      	ldr	r2, [r3, #24]
 8005fc4:	05d0      	lsls	r0, r2, #23
 8005fc6:	d40a      	bmi.n	8005fde <FLASH_WaitForLastOperation+0x42>
 8005fc8:	699a      	ldr	r2, [r3, #24]
 8005fca:	0511      	lsls	r1, r2, #20
 8005fcc:	d407      	bmi.n	8005fde <FLASH_WaitForLastOperation+0x42>
 8005fce:	699a      	ldr	r2, [r3, #24]
 8005fd0:	0552      	lsls	r2, r2, #21
 8005fd2:	d404      	bmi.n	8005fde <FLASH_WaitForLastOperation+0x42>
 8005fd4:	6998      	ldr	r0, [r3, #24]
 8005fd6:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 8005fda:	d100      	bne.n	8005fde <FLASH_WaitForLastOperation+0x42>
 8005fdc:	bd70      	pop	{r4, r5, r6, pc}
 8005fde:	f7ff ff89 	bl	8005ef4 <FLASH_SetErrorCode>
 8005fe2:	2001      	movs	r0, #1
 8005fe4:	bd70      	pop	{r4, r5, r6, pc}
 8005fe6:	69b3      	ldr	r3, [r6, #24]
 8005fe8:	07db      	lsls	r3, r3, #31
 8005fea:	d5e3      	bpl.n	8005fb4 <FLASH_WaitForLastOperation+0x18>
 8005fec:	b124      	cbz	r4, 8005ff8 <FLASH_WaitForLastOperation+0x5c>
 8005fee:	f7ff fecb 	bl	8005d88 <HAL_GetTick>
 8005ff2:	1b40      	subs	r0, r0, r5
 8005ff4:	42a0      	cmp	r0, r4
 8005ff6:	d9d7      	bls.n	8005fa8 <FLASH_WaitForLastOperation+0xc>
 8005ff8:	2003      	movs	r0, #3
 8005ffa:	bd70      	pop	{r4, r5, r6, pc}
 8005ffc:	40023c00 	.word	0x40023c00

08006000 <HAL_FLASHEx_DATAEEPROM_Unlock>:
 8006000:	4b05      	ldr	r3, [pc, #20]	; (8006018 <HAL_FLASHEx_DATAEEPROM_Unlock+0x18>)
 8006002:	685a      	ldr	r2, [r3, #4]
 8006004:	07d2      	lsls	r2, r2, #31
 8006006:	d505      	bpl.n	8006014 <HAL_FLASHEx_DATAEEPROM_Unlock+0x14>
 8006008:	4904      	ldr	r1, [pc, #16]	; (800601c <HAL_FLASHEx_DATAEEPROM_Unlock+0x1c>)
 800600a:	4a05      	ldr	r2, [pc, #20]	; (8006020 <HAL_FLASHEx_DATAEEPROM_Unlock+0x20>)
 800600c:	60d9      	str	r1, [r3, #12]
 800600e:	2000      	movs	r0, #0
 8006010:	60da      	str	r2, [r3, #12]
 8006012:	4770      	bx	lr
 8006014:	2001      	movs	r0, #1
 8006016:	4770      	bx	lr
 8006018:	40023c00 	.word	0x40023c00
 800601c:	89abcdef 	.word	0x89abcdef
 8006020:	02030405 	.word	0x02030405

08006024 <HAL_FLASHEx_DATAEEPROM_Lock>:
 8006024:	4a03      	ldr	r2, [pc, #12]	; (8006034 <HAL_FLASHEx_DATAEEPROM_Lock+0x10>)
 8006026:	2000      	movs	r0, #0
 8006028:	6853      	ldr	r3, [r2, #4]
 800602a:	f043 0301 	orr.w	r3, r3, #1
 800602e:	6053      	str	r3, [r2, #4]
 8006030:	4770      	bx	lr
 8006032:	bf00      	nop
 8006034:	40023c00 	.word	0x40023c00

08006038 <HAL_FLASHEx_DATAEEPROM_Program>:
 8006038:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800603c:	4e83      	ldr	r6, [pc, #524]	; (800624c <HAL_FLASHEx_DATAEEPROM_Program+0x214>)
 800603e:	7c33      	ldrb	r3, [r6, #16]
 8006040:	2b01      	cmp	r3, #1
 8006042:	d01f      	beq.n	8006084 <HAL_FLASHEx_DATAEEPROM_Program+0x4c>
 8006044:	2701      	movs	r7, #1
 8006046:	4605      	mov	r5, r0
 8006048:	f24c 3050 	movw	r0, #50000	; 0xc350
 800604c:	4688      	mov	r8, r1
 800604e:	4691      	mov	r9, r2
 8006050:	7437      	strb	r7, [r6, #16]
 8006052:	f7ff ffa3 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006056:	4604      	mov	r4, r0
 8006058:	b978      	cbnz	r0, 800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800605a:	2d02      	cmp	r5, #2
 800605c:	6170      	str	r0, [r6, #20]
 800605e:	d045      	beq.n	80060ec <HAL_FLASHEx_DATAEEPROM_Program+0xb4>
 8006060:	2d01      	cmp	r5, #1
 8006062:	d052      	beq.n	800610a <HAL_FLASHEx_DATAEEPROM_Program+0xd2>
 8006064:	b195      	cbz	r5, 800608c <HAL_FLASHEx_DATAEEPROM_Program+0x54>
 8006066:	2d04      	cmp	r5, #4
 8006068:	f000 8083 	beq.w	8006172 <HAL_FLASHEx_DATAEEPROM_Program+0x13a>
 800606c:	2d08      	cmp	r5, #8
 800606e:	f000 80aa 	beq.w	80061c6 <HAL_FLASHEx_DATAEEPROM_Program+0x18e>
 8006072:	2d10      	cmp	r5, #16
 8006074:	f000 80c8 	beq.w	8006208 <HAL_FLASHEx_DATAEEPROM_Program+0x1d0>
 8006078:	463c      	mov	r4, r7
 800607a:	2300      	movs	r3, #0
 800607c:	4620      	mov	r0, r4
 800607e:	7433      	strb	r3, [r6, #16]
 8006080:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006084:	2402      	movs	r4, #2
 8006086:	4620      	mov	r0, r4
 8006088:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800608c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006090:	f7ff ff84 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006094:	4604      	mov	r4, r0
 8006096:	2800      	cmp	r0, #0
 8006098:	d1ef      	bne.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800609a:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 800609e:	f040 808a 	bne.w	80061b6 <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 80060a2:	22ff      	movs	r2, #255	; 0xff
 80060a4:	f028 0503 	bic.w	r5, r8, #3
 80060a8:	f008 0803 	and.w	r8, r8, #3
 80060ac:	682c      	ldr	r4, [r5, #0]
 80060ae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80060b2:	fa02 f208 	lsl.w	r2, r2, r8
 80060b6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80060ba:	ea24 0402 	bic.w	r4, r4, r2
 80060be:	f7ff ff6d 	bl	8005f9c <FLASH_WaitForLastOperation>
 80060c2:	4603      	mov	r3, r0
 80060c4:	b928      	cbnz	r0, 80060d2 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 80060c6:	6173      	str	r3, [r6, #20]
 80060c8:	f24c 3050 	movw	r0, #50000	; 0xc350
 80060cc:	602b      	str	r3, [r5, #0]
 80060ce:	f7ff ff65 	bl	8005f9c <FLASH_WaitForLastOperation>
 80060d2:	2300      	movs	r3, #0
 80060d4:	4622      	mov	r2, r4
 80060d6:	4629      	mov	r1, r5
 80060d8:	2010      	movs	r0, #16
 80060da:	7433      	strb	r3, [r6, #16]
 80060dc:	f7ff ffac 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 80060e0:	7c33      	ldrb	r3, [r6, #16]
 80060e2:	4604      	mov	r4, r0
 80060e4:	2b01      	cmp	r3, #1
 80060e6:	d1c8      	bne.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80060e8:	2402      	movs	r4, #2
 80060ea:	e7c6      	b.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80060ec:	f24c 3050 	movw	r0, #50000	; 0xc350
 80060f0:	f7ff ff54 	bl	8005f9c <FLASH_WaitForLastOperation>
 80060f4:	4604      	mov	r4, r0
 80060f6:	2800      	cmp	r0, #0
 80060f8:	d1bf      	bne.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80060fa:	f24c 3050 	movw	r0, #50000	; 0xc350
 80060fe:	f8c8 9000 	str.w	r9, [r8]
 8006102:	f7ff ff4b 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006106:	4604      	mov	r4, r0
 8006108:	e7b7      	b.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800610a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800610e:	f7ff ff45 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006112:	4604      	mov	r4, r0
 8006114:	2800      	cmp	r0, #0
 8006116:	d1b0      	bne.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8006118:	fa1f f289 	uxth.w	r2, r9
 800611c:	2a00      	cmp	r2, #0
 800611e:	f040 8081 	bne.w	8006224 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 8006122:	f008 0303 	and.w	r3, r8, #3
 8006126:	2b03      	cmp	r3, #3
 8006128:	7432      	strb	r2, [r6, #16]
 800612a:	f000 8083 	beq.w	8006234 <HAL_FLASHEx_DATAEEPROM_Program+0x1fc>
 800612e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006132:	f028 0803 	bic.w	r8, r8, #3
 8006136:	f8d8 4000 	ldr.w	r4, [r8]
 800613a:	00db      	lsls	r3, r3, #3
 800613c:	fa02 f303 	lsl.w	r3, r2, r3
 8006140:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006144:	ea24 0403 	bic.w	r4, r4, r3
 8006148:	f7ff ff28 	bl	8005f9c <FLASH_WaitForLastOperation>
 800614c:	4603      	mov	r3, r0
 800614e:	b930      	cbnz	r0, 800615e <HAL_FLASHEx_DATAEEPROM_Program+0x126>
 8006150:	6170      	str	r0, [r6, #20]
 8006152:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006156:	f8c8 3000 	str.w	r3, [r8]
 800615a:	f7ff ff1f 	bl	8005f9c <FLASH_WaitForLastOperation>
 800615e:	4622      	mov	r2, r4
 8006160:	4641      	mov	r1, r8
 8006162:	2010      	movs	r0, #16
 8006164:	f7ff ff68 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 8006168:	4604      	mov	r4, r0
 800616a:	7c33      	ldrb	r3, [r6, #16]
 800616c:	2b01      	cmp	r3, #1
 800616e:	d184      	bne.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8006170:	e7ba      	b.n	80060e8 <HAL_FLASHEx_DATAEEPROM_Program+0xb0>
 8006172:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006176:	f7ff ff11 	bl	8005f9c <FLASH_WaitForLastOperation>
 800617a:	4604      	mov	r4, r0
 800617c:	2800      	cmp	r0, #0
 800617e:	f47f af7c 	bne.w	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8006182:	4a33      	ldr	r2, [pc, #204]	; (8006250 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 8006184:	6853      	ldr	r3, [r2, #4]
 8006186:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800618a:	6053      	str	r3, [r2, #4]
 800618c:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 8006190:	d111      	bne.n	80061b6 <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 8006192:	f008 0303 	and.w	r3, r8, #3
 8006196:	00da      	lsls	r2, r3, #3
 8006198:	23ff      	movs	r3, #255	; 0xff
 800619a:	f028 0503 	bic.w	r5, r8, #3
 800619e:	682c      	ldr	r4, [r5, #0]
 80061a0:	4093      	lsls	r3, r2
 80061a2:	f24c 3050 	movw	r0, #50000	; 0xc350
 80061a6:	ea24 0403 	bic.w	r4, r4, r3
 80061aa:	f7ff fef7 	bl	8005f9c <FLASH_WaitForLastOperation>
 80061ae:	4603      	mov	r3, r0
 80061b0:	2800      	cmp	r0, #0
 80061b2:	d18e      	bne.n	80060d2 <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 80061b4:	e787      	b.n	80060c6 <HAL_FLASHEx_DATAEEPROM_Program+0x8e>
 80061b6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80061ba:	f888 2000 	strb.w	r2, [r8]
 80061be:	f7ff feed 	bl	8005f9c <FLASH_WaitForLastOperation>
 80061c2:	4604      	mov	r4, r0
 80061c4:	e759      	b.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80061c6:	f24c 3050 	movw	r0, #50000	; 0xc350
 80061ca:	f7ff fee7 	bl	8005f9c <FLASH_WaitForLastOperation>
 80061ce:	4604      	mov	r4, r0
 80061d0:	2800      	cmp	r0, #0
 80061d2:	f47f af52 	bne.w	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80061d6:	491e      	ldr	r1, [pc, #120]	; (8006250 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 80061d8:	fa1f f289 	uxth.w	r2, r9
 80061dc:	684b      	ldr	r3, [r1, #4]
 80061de:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80061e2:	604b      	str	r3, [r1, #4]
 80061e4:	b9f2      	cbnz	r2, 8006224 <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 80061e6:	f008 0303 	and.w	r3, r8, #3
 80061ea:	2b03      	cmp	r3, #3
 80061ec:	7430      	strb	r0, [r6, #16]
 80061ee:	d19e      	bne.n	800612e <HAL_FLASHEx_DATAEEPROM_Program+0xf6>
 80061f0:	4641      	mov	r1, r8
 80061f2:	2200      	movs	r2, #0
 80061f4:	2004      	movs	r0, #4
 80061f6:	f7ff ff1f 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 80061fa:	2200      	movs	r2, #0
 80061fc:	f108 0101 	add.w	r1, r8, #1
 8006200:	2004      	movs	r0, #4
 8006202:	f7ff ff19 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 8006206:	e7b0      	b.n	800616a <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 8006208:	f24c 3050 	movw	r0, #50000	; 0xc350
 800620c:	f7ff fec6 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006210:	4604      	mov	r4, r0
 8006212:	2800      	cmp	r0, #0
 8006214:	f47f af31 	bne.w	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8006218:	4a0d      	ldr	r2, [pc, #52]	; (8006250 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 800621a:	6853      	ldr	r3, [r2, #4]
 800621c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006220:	6053      	str	r3, [r2, #4]
 8006222:	e76a      	b.n	80060fa <HAL_FLASHEx_DATAEEPROM_Program+0xc2>
 8006224:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006228:	f8a8 2000 	strh.w	r2, [r8]
 800622c:	f7ff feb6 	bl	8005f9c <FLASH_WaitForLastOperation>
 8006230:	4604      	mov	r4, r0
 8006232:	e722      	b.n	800607a <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8006234:	4641      	mov	r1, r8
 8006236:	4602      	mov	r2, r0
 8006238:	2004      	movs	r0, #4
 800623a:	f7ff fefd 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 800623e:	4622      	mov	r2, r4
 8006240:	f108 0101 	add.w	r1, r8, #1
 8006244:	2004      	movs	r0, #4
 8006246:	f7ff fef7 	bl	8006038 <HAL_FLASHEx_DATAEEPROM_Program>
 800624a:	e78e      	b.n	800616a <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 800624c:	20000b48 	.word	0x20000b48
 8006250:	40023c00 	.word	0x40023c00

08006254 <HAL_GPIO_Init>:
 8006254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006258:	680c      	ldr	r4, [r1, #0]
 800625a:	b085      	sub	sp, #20
 800625c:	2c00      	cmp	r4, #0
 800625e:	d07c      	beq.n	800635a <HAL_GPIO_Init+0x106>
 8006260:	f04f 0e00 	mov.w	lr, #0
 8006264:	f04f 0b01 	mov.w	fp, #1
 8006268:	4673      	mov	r3, lr
 800626a:	468c      	mov	ip, r1
 800626c:	fa0b f503 	lsl.w	r5, fp, r3
 8006270:	ea15 0a04 	ands.w	sl, r5, r4
 8006274:	d06b      	beq.n	800634e <HAL_GPIO_Init+0xfa>
 8006276:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800627a:	f001 0203 	and.w	r2, r1, #3
 800627e:	1e57      	subs	r7, r2, #1
 8006280:	2f01      	cmp	r7, #1
 8006282:	d96d      	bls.n	8006360 <HAL_GPIO_Init+0x10c>
 8006284:	2a03      	cmp	r2, #3
 8006286:	f040 80ae 	bne.w	80063e6 <HAL_GPIO_Init+0x192>
 800628a:	fa02 f20e 	lsl.w	r2, r2, lr
 800628e:	43d7      	mvns	r7, r2
 8006290:	6805      	ldr	r5, [r0, #0]
 8006292:	f411 3f40 	tst.w	r1, #196608	; 0x30000
 8006296:	ea07 0705 	and.w	r7, r7, r5
 800629a:	ea42 0207 	orr.w	r2, r2, r7
 800629e:	6002      	str	r2, [r0, #0]
 80062a0:	d055      	beq.n	800634e <HAL_GPIO_Init+0xfa>
 80062a2:	260f      	movs	r6, #15
 80062a4:	4d5a      	ldr	r5, [pc, #360]	; (8006410 <HAL_GPIO_Init+0x1bc>)
 80062a6:	f003 0703 	and.w	r7, r3, #3
 80062aa:	6a2a      	ldr	r2, [r5, #32]
 80062ac:	00bf      	lsls	r7, r7, #2
 80062ae:	f042 0201 	orr.w	r2, r2, #1
 80062b2:	622a      	str	r2, [r5, #32]
 80062b4:	6a2a      	ldr	r2, [r5, #32]
 80062b6:	fa06 f807 	lsl.w	r8, r6, r7
 80062ba:	f002 0201 	and.w	r2, r2, #1
 80062be:	9203      	str	r2, [sp, #12]
 80062c0:	9a03      	ldr	r2, [sp, #12]
 80062c2:	f023 0203 	bic.w	r2, r3, #3
 80062c6:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80062ca:	4e52      	ldr	r6, [pc, #328]	; (8006414 <HAL_GPIO_Init+0x1c0>)
 80062cc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80062d0:	6895      	ldr	r5, [r2, #8]
 80062d2:	42b0      	cmp	r0, r6
 80062d4:	ea25 0508 	bic.w	r5, r5, r8
 80062d8:	d015      	beq.n	8006306 <HAL_GPIO_Init+0xb2>
 80062da:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80062de:	42b0      	cmp	r0, r6
 80062e0:	f000 808c 	beq.w	80063fc <HAL_GPIO_Init+0x1a8>
 80062e4:	4e4c      	ldr	r6, [pc, #304]	; (8006418 <HAL_GPIO_Init+0x1c4>)
 80062e6:	42b0      	cmp	r0, r6
 80062e8:	f000 808c 	beq.w	8006404 <HAL_GPIO_Init+0x1b0>
 80062ec:	4e4b      	ldr	r6, [pc, #300]	; (800641c <HAL_GPIO_Init+0x1c8>)
 80062ee:	42b0      	cmp	r0, r6
 80062f0:	d07e      	beq.n	80063f0 <HAL_GPIO_Init+0x19c>
 80062f2:	4e4b      	ldr	r6, [pc, #300]	; (8006420 <HAL_GPIO_Init+0x1cc>)
 80062f4:	42b0      	cmp	r0, r6
 80062f6:	bf0c      	ite	eq
 80062f8:	f04f 0804 	moveq.w	r8, #4
 80062fc:	f04f 0805 	movne.w	r8, #5
 8006300:	fa08 f707 	lsl.w	r7, r8, r7
 8006304:	433d      	orrs	r5, r7
 8006306:	ea6f 070a 	mvn.w	r7, sl
 800630a:	6095      	str	r5, [r2, #8]
 800630c:	4a45      	ldr	r2, [pc, #276]	; (8006424 <HAL_GPIO_Init+0x1d0>)
 800630e:	03cd      	lsls	r5, r1, #15
 8006310:	6812      	ldr	r2, [r2, #0]
 8006312:	4d44      	ldr	r5, [pc, #272]	; (8006424 <HAL_GPIO_Init+0x1d0>)
 8006314:	bf54      	ite	pl
 8006316:	403a      	andpl	r2, r7
 8006318:	ea4a 0202 	orrmi.w	r2, sl, r2
 800631c:	602a      	str	r2, [r5, #0]
 800631e:	686d      	ldr	r5, [r5, #4]
 8006320:	038a      	lsls	r2, r1, #14
 8006322:	4a40      	ldr	r2, [pc, #256]	; (8006424 <HAL_GPIO_Init+0x1d0>)
 8006324:	bf54      	ite	pl
 8006326:	403d      	andpl	r5, r7
 8006328:	ea4a 0505 	orrmi.w	r5, sl, r5
 800632c:	6055      	str	r5, [r2, #4]
 800632e:	6895      	ldr	r5, [r2, #8]
 8006330:	02ce      	lsls	r6, r1, #11
 8006332:	4a3c      	ldr	r2, [pc, #240]	; (8006424 <HAL_GPIO_Init+0x1d0>)
 8006334:	bf54      	ite	pl
 8006336:	403d      	andpl	r5, r7
 8006338:	ea4a 0505 	orrmi.w	r5, sl, r5
 800633c:	6095      	str	r5, [r2, #8]
 800633e:	68d2      	ldr	r2, [r2, #12]
 8006340:	0289      	lsls	r1, r1, #10
 8006342:	4938      	ldr	r1, [pc, #224]	; (8006424 <HAL_GPIO_Init+0x1d0>)
 8006344:	bf54      	ite	pl
 8006346:	403a      	andpl	r2, r7
 8006348:	ea4a 0202 	orrmi.w	r2, sl, r2
 800634c:	60ca      	str	r2, [r1, #12]
 800634e:	3301      	adds	r3, #1
 8006350:	fa34 f203 	lsrs.w	r2, r4, r3
 8006354:	f10e 0e02 	add.w	lr, lr, #2
 8006358:	d188      	bne.n	800626c <HAL_GPIO_Init+0x18>
 800635a:	b005      	add	sp, #20
 800635c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006360:	f04f 0903 	mov.w	r9, #3
 8006364:	6886      	ldr	r6, [r0, #8]
 8006366:	f8dc 700c 	ldr.w	r7, [ip, #12]
 800636a:	fa09 f90e 	lsl.w	r9, r9, lr
 800636e:	ea26 0609 	bic.w	r6, r6, r9
 8006372:	fa07 f70e 	lsl.w	r7, r7, lr
 8006376:	4337      	orrs	r7, r6
 8006378:	6087      	str	r7, [r0, #8]
 800637a:	ea6f 0709 	mvn.w	r7, r9
 800637e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8006382:	f3c1 1800 	ubfx	r8, r1, #4, #1
 8006386:	fa08 f803 	lsl.w	r8, r8, r3
 800638a:	ea29 0505 	bic.w	r5, r9, r5
 800638e:	ea48 0505 	orr.w	r5, r8, r5
 8006392:	6045      	str	r5, [r0, #4]
 8006394:	68c5      	ldr	r5, [r0, #12]
 8006396:	2a02      	cmp	r2, #2
 8006398:	ea05 0807 	and.w	r8, r5, r7
 800639c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80063a0:	fa02 f20e 	lsl.w	r2, r2, lr
 80063a4:	fa05 f50e 	lsl.w	r5, r5, lr
 80063a8:	ea45 0508 	orr.w	r5, r5, r8
 80063ac:	60c5      	str	r5, [r0, #12]
 80063ae:	f47f af6f 	bne.w	8006290 <HAL_GPIO_Init+0x3c>
 80063b2:	f8dc 5010 	ldr.w	r5, [ip, #16]
 80063b6:	f003 0807 	and.w	r8, r3, #7
 80063ba:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80063be:	fa05 f508 	lsl.w	r5, r5, r8
 80063c2:	9501      	str	r5, [sp, #4]
 80063c4:	250f      	movs	r5, #15
 80063c6:	ea4f 09d3 	mov.w	r9, r3, lsr #3
 80063ca:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 80063ce:	f8d9 6020 	ldr.w	r6, [r9, #32]
 80063d2:	fa05 f808 	lsl.w	r8, r5, r8
 80063d6:	9d01      	ldr	r5, [sp, #4]
 80063d8:	ea26 0808 	bic.w	r8, r6, r8
 80063dc:	ea45 0508 	orr.w	r5, r5, r8
 80063e0:	f8c9 5020 	str.w	r5, [r9, #32]
 80063e4:	e754      	b.n	8006290 <HAL_GPIO_Init+0x3c>
 80063e6:	2703      	movs	r7, #3
 80063e8:	fa07 f70e 	lsl.w	r7, r7, lr
 80063ec:	43ff      	mvns	r7, r7
 80063ee:	e7d1      	b.n	8006394 <HAL_GPIO_Init+0x140>
 80063f0:	f04f 0803 	mov.w	r8, #3
 80063f4:	fa08 f707 	lsl.w	r7, r8, r7
 80063f8:	433d      	orrs	r5, r7
 80063fa:	e784      	b.n	8006306 <HAL_GPIO_Init+0xb2>
 80063fc:	fa0b f707 	lsl.w	r7, fp, r7
 8006400:	433d      	orrs	r5, r7
 8006402:	e780      	b.n	8006306 <HAL_GPIO_Init+0xb2>
 8006404:	f04f 0802 	mov.w	r8, #2
 8006408:	fa08 f707 	lsl.w	r7, r8, r7
 800640c:	433d      	orrs	r5, r7
 800640e:	e77a      	b.n	8006306 <HAL_GPIO_Init+0xb2>
 8006410:	40023800 	.word	0x40023800
 8006414:	40020000 	.word	0x40020000
 8006418:	40020800 	.word	0x40020800
 800641c:	40020c00 	.word	0x40020c00
 8006420:	40021000 	.word	0x40021000
 8006424:	40010400 	.word	0x40010400

08006428 <HAL_GPIO_ReadPin>:
 8006428:	6903      	ldr	r3, [r0, #16]
 800642a:	4219      	tst	r1, r3
 800642c:	bf14      	ite	ne
 800642e:	2001      	movne	r0, #1
 8006430:	2000      	moveq	r0, #0
 8006432:	4770      	bx	lr

08006434 <HAL_GPIO_WritePin>:
 8006434:	b902      	cbnz	r2, 8006438 <HAL_GPIO_WritePin+0x4>
 8006436:	0409      	lsls	r1, r1, #16
 8006438:	6181      	str	r1, [r0, #24]
 800643a:	4770      	bx	lr

0800643c <HAL_GPIO_EXTI_IRQHandler>:
 800643c:	4a04      	ldr	r2, [pc, #16]	; (8006450 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800643e:	6951      	ldr	r1, [r2, #20]
 8006440:	4201      	tst	r1, r0
 8006442:	d100      	bne.n	8006446 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8006444:	4770      	bx	lr
 8006446:	b508      	push	{r3, lr}
 8006448:	6150      	str	r0, [r2, #20]
 800644a:	f009 ffcd 	bl	80103e8 <__HAL_GPIO_EXTI_Callback_veneer>
 800644e:	bd08      	pop	{r3, pc}
 8006450:	40010400 	.word	0x40010400

08006454 <HAL_I2C_Init>:
 8006454:	2800      	cmp	r0, #0
 8006456:	f000 80b9 	beq.w	80065cc <HAL_I2C_Init+0x178>
 800645a:	b538      	push	{r3, r4, r5, lr}
 800645c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006460:	4604      	mov	r4, r0
 8006462:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006466:	2b00      	cmp	r3, #0
 8006468:	f000 8098 	beq.w	800659c <HAL_I2C_Init+0x148>
 800646c:	2224      	movs	r2, #36	; 0x24
 800646e:	6823      	ldr	r3, [r4, #0]
 8006470:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8006474:	681a      	ldr	r2, [r3, #0]
 8006476:	f022 0201 	bic.w	r2, r2, #1
 800647a:	601a      	str	r2, [r3, #0]
 800647c:	681a      	ldr	r2, [r3, #0]
 800647e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006482:	601a      	str	r2, [r3, #0]
 8006484:	681a      	ldr	r2, [r3, #0]
 8006486:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800648a:	601a      	str	r2, [r3, #0]
 800648c:	f001 ff90 	bl	80083b0 <HAL_RCC_GetPCLK1Freq>
 8006490:	6863      	ldr	r3, [r4, #4]
 8006492:	494f      	ldr	r1, [pc, #316]	; (80065d0 <HAL_I2C_Init+0x17c>)
 8006494:	428b      	cmp	r3, r1
 8006496:	d84f      	bhi.n	8006538 <HAL_I2C_Init+0xe4>
 8006498:	4a4e      	ldr	r2, [pc, #312]	; (80065d4 <HAL_I2C_Init+0x180>)
 800649a:	4290      	cmp	r0, r2
 800649c:	d97c      	bls.n	8006598 <HAL_I2C_Init+0x144>
 800649e:	4d4e      	ldr	r5, [pc, #312]	; (80065d8 <HAL_I2C_Init+0x184>)
 80064a0:	005a      	lsls	r2, r3, #1
 80064a2:	fba5 3500 	umull	r3, r5, r5, r0
 80064a6:	1e43      	subs	r3, r0, #1
 80064a8:	fbb3 f3f2 	udiv	r3, r3, r2
 80064ac:	f640 7efc 	movw	lr, #4092	; 0xffc
 80064b0:	6822      	ldr	r2, [r4, #0]
 80064b2:	0ca9      	lsrs	r1, r5, #18
 80064b4:	6850      	ldr	r0, [r2, #4]
 80064b6:	f101 0c01 	add.w	ip, r1, #1
 80064ba:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 80064be:	ea40 4095 	orr.w	r0, r0, r5, lsr #18
 80064c2:	6050      	str	r0, [r2, #4]
 80064c4:	6a11      	ldr	r1, [r2, #32]
 80064c6:	3301      	adds	r3, #1
 80064c8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80064cc:	ea41 010c 	orr.w	r1, r1, ip
 80064d0:	6211      	str	r1, [r2, #32]
 80064d2:	69d1      	ldr	r1, [r2, #28]
 80064d4:	ea13 0f0e 	tst.w	r3, lr
 80064d8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80064dc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80064e0:	d161      	bne.n	80065a6 <HAL_I2C_Init+0x152>
 80064e2:	2304      	movs	r3, #4
 80064e4:	430b      	orrs	r3, r1
 80064e6:	61d3      	str	r3, [r2, #28]
 80064e8:	6811      	ldr	r1, [r2, #0]
 80064ea:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80064ee:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80064f2:	4303      	orrs	r3, r0
 80064f4:	430b      	orrs	r3, r1
 80064f6:	6013      	str	r3, [r2, #0]
 80064f8:	6891      	ldr	r1, [r2, #8]
 80064fa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80064fe:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006502:	4303      	orrs	r3, r0
 8006504:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006508:	430b      	orrs	r3, r1
 800650a:	6093      	str	r3, [r2, #8]
 800650c:	68d0      	ldr	r0, [r2, #12]
 800650e:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8006512:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8006516:	430b      	orrs	r3, r1
 8006518:	4303      	orrs	r3, r0
 800651a:	60d3      	str	r3, [r2, #12]
 800651c:	6813      	ldr	r3, [r2, #0]
 800651e:	2100      	movs	r1, #0
 8006520:	f043 0301 	orr.w	r3, r3, #1
 8006524:	6013      	str	r3, [r2, #0]
 8006526:	2320      	movs	r3, #32
 8006528:	6421      	str	r1, [r4, #64]	; 0x40
 800652a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800652e:	6321      	str	r1, [r4, #48]	; 0x30
 8006530:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8006534:	4608      	mov	r0, r1
 8006536:	bd38      	pop	{r3, r4, r5, pc}
 8006538:	4a28      	ldr	r2, [pc, #160]	; (80065dc <HAL_I2C_Init+0x188>)
 800653a:	4290      	cmp	r0, r2
 800653c:	d92c      	bls.n	8006598 <HAL_I2C_Init+0x144>
 800653e:	4d26      	ldr	r5, [pc, #152]	; (80065d8 <HAL_I2C_Init+0x184>)
 8006540:	fba5 2c00 	umull	r2, ip, r5, r0
 8006544:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8006548:	ea4f 419c 	mov.w	r1, ip, lsr #18
 800654c:	fb02 f101 	mul.w	r1, r2, r1
 8006550:	4d23      	ldr	r5, [pc, #140]	; (80065e0 <HAL_I2C_Init+0x18c>)
 8006552:	6822      	ldr	r2, [r4, #0]
 8006554:	fba5 5101 	umull	r5, r1, r5, r1
 8006558:	6855      	ldr	r5, [r2, #4]
 800655a:	0989      	lsrs	r1, r1, #6
 800655c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8006560:	ea45 459c 	orr.w	r5, r5, ip, lsr #18
 8006564:	6055      	str	r5, [r2, #4]
 8006566:	6a15      	ldr	r5, [r2, #32]
 8006568:	3101      	adds	r1, #1
 800656a:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800656e:	4329      	orrs	r1, r5
 8006570:	6211      	str	r1, [r2, #32]
 8006572:	69d1      	ldr	r1, [r2, #28]
 8006574:	68a5      	ldr	r5, [r4, #8]
 8006576:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800657a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800657e:	b9ad      	cbnz	r5, 80065ac <HAL_I2C_Init+0x158>
 8006580:	3801      	subs	r0, #1
 8006582:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8006586:	fbb0 f3f3 	udiv	r3, r0, r3
 800658a:	3301      	adds	r3, #1
 800658c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006590:	b1d3      	cbz	r3, 80065c8 <HAL_I2C_Init+0x174>
 8006592:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006596:	e7a5      	b.n	80064e4 <HAL_I2C_Init+0x90>
 8006598:	2001      	movs	r0, #1
 800659a:	bd38      	pop	{r3, r4, r5, pc}
 800659c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 80065a0:	f7fd fabe 	bl	8003b20 <HAL_I2C_MspInit>
 80065a4:	e762      	b.n	800646c <HAL_I2C_Init+0x18>
 80065a6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065aa:	e79b      	b.n	80064e4 <HAL_I2C_Init+0x90>
 80065ac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80065b0:	3801      	subs	r0, #1
 80065b2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80065b6:	fbb0 f3f3 	udiv	r3, r0, r3
 80065ba:	3301      	adds	r3, #1
 80065bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065c0:	b113      	cbz	r3, 80065c8 <HAL_I2C_Init+0x174>
 80065c2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80065c6:	e78d      	b.n	80064e4 <HAL_I2C_Init+0x90>
 80065c8:	2301      	movs	r3, #1
 80065ca:	e78b      	b.n	80064e4 <HAL_I2C_Init+0x90>
 80065cc:	2001      	movs	r0, #1
 80065ce:	4770      	bx	lr
 80065d0:	000186a0 	.word	0x000186a0
 80065d4:	001e847f 	.word	0x001e847f
 80065d8:	431bde83 	.word	0x431bde83
 80065dc:	003d08ff 	.word	0x003d08ff
 80065e0:	10624dd3 	.word	0x10624dd3

080065e4 <HAL_I2C_Master_Transmit>:
 80065e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065e8:	4605      	mov	r5, r0
 80065ea:	b083      	sub	sp, #12
 80065ec:	4699      	mov	r9, r3
 80065ee:	4688      	mov	r8, r1
 80065f0:	4692      	mov	sl, r2
 80065f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80065f4:	f7ff fbc8 	bl	8005d88 <HAL_GetTick>
 80065f8:	f895 303d 	ldrb.w	r3, [r5, #61]	; 0x3d
 80065fc:	2b20      	cmp	r3, #32
 80065fe:	d003      	beq.n	8006608 <HAL_I2C_Master_Transmit+0x24>
 8006600:	2002      	movs	r0, #2
 8006602:	b003      	add	sp, #12
 8006604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006608:	4606      	mov	r6, r0
 800660a:	e005      	b.n	8006618 <HAL_I2C_Master_Transmit+0x34>
 800660c:	f7ff fbbc 	bl	8005d88 <HAL_GetTick>
 8006610:	1b80      	subs	r0, r0, r6
 8006612:	2819      	cmp	r0, #25
 8006614:	f200 80f8 	bhi.w	8006808 <HAL_I2C_Master_Transmit+0x224>
 8006618:	682c      	ldr	r4, [r5, #0]
 800661a:	69a3      	ldr	r3, [r4, #24]
 800661c:	ea6f 0c03 	mvn.w	ip, r3
 8006620:	f01c 0b02 	ands.w	fp, ip, #2
 8006624:	d0f2      	beq.n	800660c <HAL_I2C_Master_Transmit+0x28>
 8006626:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800662a:	2b01      	cmp	r3, #1
 800662c:	d0e8      	beq.n	8006600 <HAL_I2C_Master_Transmit+0x1c>
 800662e:	2301      	movs	r3, #1
 8006630:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8006634:	6823      	ldr	r3, [r4, #0]
 8006636:	07d9      	lsls	r1, r3, #31
 8006638:	d571      	bpl.n	800671e <HAL_I2C_Master_Transmit+0x13a>
 800663a:	2200      	movs	r2, #0
 800663c:	2021      	movs	r0, #33	; 0x21
 800663e:	2110      	movs	r1, #16
 8006640:	6823      	ldr	r3, [r4, #0]
 8006642:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006646:	6023      	str	r3, [r4, #0]
 8006648:	f885 003d 	strb.w	r0, [r5, #61]	; 0x3d
 800664c:	f885 103e 	strb.w	r1, [r5, #62]	; 0x3e
 8006650:	642a      	str	r2, [r5, #64]	; 0x40
 8006652:	f8a5 902a 	strh.w	r9, [r5, #42]	; 0x2a
 8006656:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006658:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 800665c:	62ea      	str	r2, [r5, #44]	; 0x2c
 800665e:	852b      	strh	r3, [r5, #40]	; 0x28
 8006660:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006662:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8006666:	2b08      	cmp	r3, #8
 8006668:	d006      	beq.n	8006678 <HAL_I2C_Master_Transmit+0x94>
 800666a:	2b01      	cmp	r3, #1
 800666c:	d004      	beq.n	8006678 <HAL_I2C_Master_Transmit+0x94>
 800666e:	4293      	cmp	r3, r2
 8006670:	d002      	beq.n	8006678 <HAL_I2C_Master_Transmit+0x94>
 8006672:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8006674:	2b12      	cmp	r3, #18
 8006676:	d103      	bne.n	8006680 <HAL_I2C_Master_Transmit+0x9c>
 8006678:	6823      	ldr	r3, [r4, #0]
 800667a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800667e:	6023      	str	r3, [r4, #0]
 8006680:	1c7b      	adds	r3, r7, #1
 8006682:	d13e      	bne.n	8006702 <HAL_I2C_Master_Transmit+0x11e>
 8006684:	6963      	ldr	r3, [r4, #20]
 8006686:	07d8      	lsls	r0, r3, #31
 8006688:	d5fc      	bpl.n	8006684 <HAL_I2C_Master_Transmit+0xa0>
 800668a:	692b      	ldr	r3, [r5, #16]
 800668c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006690:	d14a      	bne.n	8006728 <HAL_I2C_Master_Transmit+0x144>
 8006692:	f008 01fe 	and.w	r1, r8, #254	; 0xfe
 8006696:	6121      	str	r1, [r4, #16]
 8006698:	1c78      	adds	r0, r7, #1
 800669a:	d004      	beq.n	80066a6 <HAL_I2C_Master_Transmit+0xc2>
 800669c:	e0dd      	b.n	800685a <HAL_I2C_Master_Transmit+0x276>
 800669e:	6963      	ldr	r3, [r4, #20]
 80066a0:	055a      	lsls	r2, r3, #21
 80066a2:	f100 80c2 	bmi.w	800682a <HAL_I2C_Master_Transmit+0x246>
 80066a6:	6963      	ldr	r3, [r4, #20]
 80066a8:	0799      	lsls	r1, r3, #30
 80066aa:	d5f8      	bpl.n	800669e <HAL_I2C_Master_Transmit+0xba>
 80066ac:	2200      	movs	r2, #0
 80066ae:	9201      	str	r2, [sp, #4]
 80066b0:	6962      	ldr	r2, [r4, #20]
 80066b2:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 80066b4:	9201      	str	r2, [sp, #4]
 80066b6:	69a2      	ldr	r2, [r4, #24]
 80066b8:	9201      	str	r2, [sp, #4]
 80066ba:	9a01      	ldr	r2, [sp, #4]
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d075      	beq.n	80067ac <HAL_I2C_Master_Transmit+0x1c8>
 80066c0:	1c79      	adds	r1, r7, #1
 80066c2:	f040 8081 	bne.w	80067c8 <HAL_I2C_Master_Transmit+0x1e4>
 80066c6:	6963      	ldr	r3, [r4, #20]
 80066c8:	061a      	lsls	r2, r3, #24
 80066ca:	d441      	bmi.n	8006750 <HAL_I2C_Master_Transmit+0x16c>
 80066cc:	6963      	ldr	r3, [r4, #20]
 80066ce:	055b      	lsls	r3, r3, #21
 80066d0:	d5f9      	bpl.n	80066c6 <HAL_I2C_Master_Transmit+0xe2>
 80066d2:	2200      	movs	r2, #0
 80066d4:	2320      	movs	r3, #32
 80066d6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 80066da:	6161      	str	r1, [r4, #20]
 80066dc:	632a      	str	r2, [r5, #48]	; 0x30
 80066de:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80066e2:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80066e6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80066e8:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80066ec:	f043 0304 	orr.w	r3, r3, #4
 80066f0:	642b      	str	r3, [r5, #64]	; 0x40
 80066f2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80066f4:	2b04      	cmp	r3, #4
 80066f6:	f000 80e6 	beq.w	80068c6 <HAL_I2C_Master_Transmit+0x2e2>
 80066fa:	2001      	movs	r0, #1
 80066fc:	b003      	add	sp, #12
 80066fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006702:	6963      	ldr	r3, [r4, #20]
 8006704:	07d9      	lsls	r1, r3, #31
 8006706:	d4c0      	bmi.n	800668a <HAL_I2C_Master_Transmit+0xa6>
 8006708:	f7ff fb3e 	bl	8005d88 <HAL_GetTick>
 800670c:	1b80      	subs	r0, r0, r6
 800670e:	4287      	cmp	r7, r0
 8006710:	f0c0 80b3 	bcc.w	800687a <HAL_I2C_Master_Transmit+0x296>
 8006714:	2f00      	cmp	r7, #0
 8006716:	f000 80b0 	beq.w	800687a <HAL_I2C_Master_Transmit+0x296>
 800671a:	682c      	ldr	r4, [r5, #0]
 800671c:	e7b0      	b.n	8006680 <HAL_I2C_Master_Transmit+0x9c>
 800671e:	6823      	ldr	r3, [r4, #0]
 8006720:	f043 0301 	orr.w	r3, r3, #1
 8006724:	6023      	str	r3, [r4, #0]
 8006726:	e788      	b.n	800663a <HAL_I2C_Master_Transmit+0x56>
 8006728:	ea4f 13e8 	mov.w	r3, r8, asr #7
 800672c:	f003 0306 	and.w	r3, r3, #6
 8006730:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8006734:	6123      	str	r3, [r4, #16]
 8006736:	1c7b      	adds	r3, r7, #1
 8006738:	d003      	beq.n	8006742 <HAL_I2C_Master_Transmit+0x15e>
 800673a:	e0b5      	b.n	80068a8 <HAL_I2C_Master_Transmit+0x2c4>
 800673c:	6963      	ldr	r3, [r4, #20]
 800673e:	0559      	lsls	r1, r3, #21
 8006740:	d473      	bmi.n	800682a <HAL_I2C_Master_Transmit+0x246>
 8006742:	6963      	ldr	r3, [r4, #20]
 8006744:	0718      	lsls	r0, r3, #28
 8006746:	d5f9      	bpl.n	800673c <HAL_I2C_Master_Transmit+0x158>
 8006748:	fa5f f388 	uxtb.w	r3, r8
 800674c:	6123      	str	r3, [r4, #16]
 800674e:	e7a3      	b.n	8006698 <HAL_I2C_Master_Transmit+0xb4>
 8006750:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8006752:	f8b5 c028 	ldrh.w	ip, [r5, #40]	; 0x28
 8006756:	4601      	mov	r1, r0
 8006758:	f811 3b01 	ldrb.w	r3, [r1], #1
 800675c:	f10c 32ff 	add.w	r2, ip, #4294967295
 8006760:	6123      	str	r3, [r4, #16]
 8006762:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006764:	b292      	uxth	r2, r2
 8006766:	3b01      	subs	r3, #1
 8006768:	b29b      	uxth	r3, r3
 800676a:	856b      	strh	r3, [r5, #42]	; 0x2a
 800676c:	6963      	ldr	r3, [r4, #20]
 800676e:	6269      	str	r1, [r5, #36]	; 0x24
 8006770:	0759      	lsls	r1, r3, #29
 8006772:	852a      	strh	r2, [r5, #40]	; 0x28
 8006774:	d50c      	bpl.n	8006790 <HAL_I2C_Master_Transmit+0x1ac>
 8006776:	b15a      	cbz	r2, 8006790 <HAL_I2C_Master_Transmit+0x1ac>
 8006778:	7843      	ldrb	r3, [r0, #1]
 800677a:	f1ac 0c02 	sub.w	ip, ip, #2
 800677e:	6123      	str	r3, [r4, #16]
 8006780:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8006782:	3002      	adds	r0, #2
 8006784:	3b01      	subs	r3, #1
 8006786:	b29b      	uxth	r3, r3
 8006788:	f8a5 c028 	strh.w	ip, [r5, #40]	; 0x28
 800678c:	6268      	str	r0, [r5, #36]	; 0x24
 800678e:	856b      	strh	r3, [r5, #42]	; 0x2a
 8006790:	1c78      	adds	r0, r7, #1
 8006792:	d129      	bne.n	80067e8 <HAL_I2C_Master_Transmit+0x204>
 8006794:	6963      	ldr	r3, [r4, #20]
 8006796:	0759      	lsls	r1, r3, #29
 8006798:	d405      	bmi.n	80067a6 <HAL_I2C_Master_Transmit+0x1c2>
 800679a:	6963      	ldr	r3, [r4, #20]
 800679c:	055a      	lsls	r2, r3, #21
 800679e:	d498      	bmi.n	80066d2 <HAL_I2C_Master_Transmit+0xee>
 80067a0:	6963      	ldr	r3, [r4, #20]
 80067a2:	0759      	lsls	r1, r3, #29
 80067a4:	d5f9      	bpl.n	800679a <HAL_I2C_Master_Transmit+0x1b6>
 80067a6:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 80067a8:	2b00      	cmp	r3, #0
 80067aa:	d189      	bne.n	80066c0 <HAL_I2C_Master_Transmit+0xdc>
 80067ac:	2300      	movs	r3, #0
 80067ae:	2120      	movs	r1, #32
 80067b0:	6822      	ldr	r2, [r4, #0]
 80067b2:	4618      	mov	r0, r3
 80067b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80067b8:	6022      	str	r2, [r4, #0]
 80067ba:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 80067be:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 80067c2:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
 80067c6:	e71c      	b.n	8006602 <HAL_I2C_Master_Transmit+0x1e>
 80067c8:	6963      	ldr	r3, [r4, #20]
 80067ca:	0618      	lsls	r0, r3, #24
 80067cc:	d4c0      	bmi.n	8006750 <HAL_I2C_Master_Transmit+0x16c>
 80067ce:	6963      	ldr	r3, [r4, #20]
 80067d0:	0558      	lsls	r0, r3, #21
 80067d2:	f53f af7e 	bmi.w	80066d2 <HAL_I2C_Master_Transmit+0xee>
 80067d6:	f7ff fad7 	bl	8005d88 <HAL_GetTick>
 80067da:	1b80      	subs	r0, r0, r6
 80067dc:	4287      	cmp	r7, r0
 80067de:	d379      	bcc.n	80068d4 <HAL_I2C_Master_Transmit+0x2f0>
 80067e0:	2f00      	cmp	r7, #0
 80067e2:	d077      	beq.n	80068d4 <HAL_I2C_Master_Transmit+0x2f0>
 80067e4:	682c      	ldr	r4, [r5, #0]
 80067e6:	e76b      	b.n	80066c0 <HAL_I2C_Master_Transmit+0xdc>
 80067e8:	6963      	ldr	r3, [r4, #20]
 80067ea:	075b      	lsls	r3, r3, #29
 80067ec:	d4db      	bmi.n	80067a6 <HAL_I2C_Master_Transmit+0x1c2>
 80067ee:	6963      	ldr	r3, [r4, #20]
 80067f0:	055b      	lsls	r3, r3, #21
 80067f2:	f53f af6e 	bmi.w	80066d2 <HAL_I2C_Master_Transmit+0xee>
 80067f6:	f7ff fac7 	bl	8005d88 <HAL_GetTick>
 80067fa:	1b80      	subs	r0, r0, r6
 80067fc:	4287      	cmp	r7, r0
 80067fe:	d369      	bcc.n	80068d4 <HAL_I2C_Master_Transmit+0x2f0>
 8006800:	2f00      	cmp	r7, #0
 8006802:	d067      	beq.n	80068d4 <HAL_I2C_Master_Transmit+0x2f0>
 8006804:	682c      	ldr	r4, [r5, #0]
 8006806:	e7c3      	b.n	8006790 <HAL_I2C_Master_Transmit+0x1ac>
 8006808:	2320      	movs	r3, #32
 800680a:	2002      	movs	r0, #2
 800680c:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 8006810:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8006814:	f885 b03e 	strb.w	fp, [r5, #62]	; 0x3e
 8006818:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800681a:	f885 b03c 	strb.w	fp, [r5, #60]	; 0x3c
 800681e:	f043 0320 	orr.w	r3, r3, #32
 8006822:	642b      	str	r3, [r5, #64]	; 0x40
 8006824:	b003      	add	sp, #12
 8006826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800682a:	2200      	movs	r2, #0
 800682c:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 8006830:	2120      	movs	r1, #32
 8006832:	2001      	movs	r0, #1
 8006834:	6823      	ldr	r3, [r4, #0]
 8006836:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800683a:	6023      	str	r3, [r4, #0]
 800683c:	6166      	str	r6, [r4, #20]
 800683e:	632a      	str	r2, [r5, #48]	; 0x30
 8006840:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 8006844:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006848:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800684a:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800684e:	f043 0304 	orr.w	r3, r3, #4
 8006852:	642b      	str	r3, [r5, #64]	; 0x40
 8006854:	b003      	add	sp, #12
 8006856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800685a:	6963      	ldr	r3, [r4, #20]
 800685c:	079b      	lsls	r3, r3, #30
 800685e:	f53f af25 	bmi.w	80066ac <HAL_I2C_Master_Transmit+0xc8>
 8006862:	6963      	ldr	r3, [r4, #20]
 8006864:	055b      	lsls	r3, r3, #21
 8006866:	d4e0      	bmi.n	800682a <HAL_I2C_Master_Transmit+0x246>
 8006868:	f7ff fa8e 	bl	8005d88 <HAL_GetTick>
 800686c:	1b80      	subs	r0, r0, r6
 800686e:	4287      	cmp	r7, r0
 8006870:	d33e      	bcc.n	80068f0 <HAL_I2C_Master_Transmit+0x30c>
 8006872:	2f00      	cmp	r7, #0
 8006874:	d03c      	beq.n	80068f0 <HAL_I2C_Master_Transmit+0x30c>
 8006876:	682c      	ldr	r4, [r5, #0]
 8006878:	e70e      	b.n	8006698 <HAL_I2C_Master_Transmit+0xb4>
 800687a:	2200      	movs	r2, #0
 800687c:	2320      	movs	r3, #32
 800687e:	632a      	str	r2, [r5, #48]	; 0x30
 8006880:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8006884:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006888:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800688a:	6829      	ldr	r1, [r5, #0]
 800688c:	f043 0320 	orr.w	r3, r3, #32
 8006890:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8006894:	642b      	str	r3, [r5, #64]	; 0x40
 8006896:	680b      	ldr	r3, [r1, #0]
 8006898:	05da      	lsls	r2, r3, #23
 800689a:	f57f af2e 	bpl.w	80066fa <HAL_I2C_Master_Transmit+0x116>
 800689e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068a2:	2001      	movs	r0, #1
 80068a4:	642b      	str	r3, [r5, #64]	; 0x40
 80068a6:	e6ac      	b.n	8006602 <HAL_I2C_Master_Transmit+0x1e>
 80068a8:	6963      	ldr	r3, [r4, #20]
 80068aa:	071a      	lsls	r2, r3, #28
 80068ac:	f53f af4c 	bmi.w	8006748 <HAL_I2C_Master_Transmit+0x164>
 80068b0:	6963      	ldr	r3, [r4, #20]
 80068b2:	055a      	lsls	r2, r3, #21
 80068b4:	d4b9      	bmi.n	800682a <HAL_I2C_Master_Transmit+0x246>
 80068b6:	f7ff fa67 	bl	8005d88 <HAL_GetTick>
 80068ba:	1b83      	subs	r3, r0, r6
 80068bc:	429f      	cmp	r7, r3
 80068be:	d317      	bcc.n	80068f0 <HAL_I2C_Master_Transmit+0x30c>
 80068c0:	b1b7      	cbz	r7, 80068f0 <HAL_I2C_Master_Transmit+0x30c>
 80068c2:	682c      	ldr	r4, [r5, #0]
 80068c4:	e737      	b.n	8006736 <HAL_I2C_Master_Transmit+0x152>
 80068c6:	682a      	ldr	r2, [r5, #0]
 80068c8:	2001      	movs	r0, #1
 80068ca:	6813      	ldr	r3, [r2, #0]
 80068cc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80068d0:	6013      	str	r3, [r2, #0]
 80068d2:	e696      	b.n	8006602 <HAL_I2C_Master_Transmit+0x1e>
 80068d4:	2200      	movs	r2, #0
 80068d6:	2320      	movs	r3, #32
 80068d8:	632a      	str	r2, [r5, #48]	; 0x30
 80068da:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80068de:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80068e2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80068e4:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80068e8:	f043 0320 	orr.w	r3, r3, #32
 80068ec:	642b      	str	r3, [r5, #64]	; 0x40
 80068ee:	e700      	b.n	80066f2 <HAL_I2C_Master_Transmit+0x10e>
 80068f0:	2200      	movs	r2, #0
 80068f2:	2320      	movs	r3, #32
 80068f4:	632a      	str	r2, [r5, #48]	; 0x30
 80068f6:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80068fa:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80068fe:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006900:	2001      	movs	r0, #1
 8006902:	f043 0320 	orr.w	r3, r3, #32
 8006906:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800690a:	642b      	str	r3, [r5, #64]	; 0x40
 800690c:	e679      	b.n	8006602 <HAL_I2C_Master_Transmit+0x1e>
 800690e:	bf00      	nop

08006910 <HAL_I2C_Master_Receive>:
 8006910:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006914:	4604      	mov	r4, r0
 8006916:	b086      	sub	sp, #24
 8006918:	4698      	mov	r8, r3
 800691a:	460f      	mov	r7, r1
 800691c:	4691      	mov	r9, r2
 800691e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8006920:	f7ff fa32 	bl	8005d88 <HAL_GetTick>
 8006924:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006928:	2b20      	cmp	r3, #32
 800692a:	d003      	beq.n	8006934 <HAL_I2C_Master_Receive+0x24>
 800692c:	2002      	movs	r0, #2
 800692e:	b006      	add	sp, #24
 8006930:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006934:	4606      	mov	r6, r0
 8006936:	e005      	b.n	8006944 <HAL_I2C_Master_Receive+0x34>
 8006938:	f7ff fa26 	bl	8005d88 <HAL_GetTick>
 800693c:	1b80      	subs	r0, r0, r6
 800693e:	2819      	cmp	r0, #25
 8006940:	f200 80a9 	bhi.w	8006a96 <HAL_I2C_Master_Receive+0x186>
 8006944:	6823      	ldr	r3, [r4, #0]
 8006946:	6998      	ldr	r0, [r3, #24]
 8006948:	43c0      	mvns	r0, r0
 800694a:	f010 0a02 	ands.w	sl, r0, #2
 800694e:	d0f3      	beq.n	8006938 <HAL_I2C_Master_Receive+0x28>
 8006950:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8006954:	2a01      	cmp	r2, #1
 8006956:	d0e9      	beq.n	800692c <HAL_I2C_Master_Receive+0x1c>
 8006958:	2201      	movs	r2, #1
 800695a:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 800695e:	681a      	ldr	r2, [r3, #0]
 8006960:	07d2      	lsls	r2, r2, #31
 8006962:	d563      	bpl.n	8006a2c <HAL_I2C_Master_Receive+0x11c>
 8006964:	2100      	movs	r1, #0
 8006966:	f04f 0c22 	mov.w	ip, #34	; 0x22
 800696a:	2010      	movs	r0, #16
 800696c:	681a      	ldr	r2, [r3, #0]
 800696e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006972:	601a      	str	r2, [r3, #0]
 8006974:	f884 c03d 	strb.w	ip, [r4, #61]	; 0x3d
 8006978:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
 800697c:	6421      	str	r1, [r4, #64]	; 0x40
 800697e:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
 8006982:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8006984:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006988:	62e1      	str	r1, [r4, #44]	; 0x2c
 800698a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800698c:	8522      	strh	r2, [r4, #40]	; 0x28
 800698e:	681a      	ldr	r2, [r3, #0]
 8006990:	2908      	cmp	r1, #8
 8006992:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006996:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 800699a:	601a      	str	r2, [r3, #0]
 800699c:	d007      	beq.n	80069ae <HAL_I2C_Master_Receive+0x9e>
 800699e:	2901      	cmp	r1, #1
 80069a0:	d005      	beq.n	80069ae <HAL_I2C_Master_Receive+0x9e>
 80069a2:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 80069a6:	d002      	beq.n	80069ae <HAL_I2C_Master_Receive+0x9e>
 80069a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80069aa:	2a11      	cmp	r2, #17
 80069ac:	d103      	bne.n	80069b6 <HAL_I2C_Master_Receive+0xa6>
 80069ae:	681a      	ldr	r2, [r3, #0]
 80069b0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80069b4:	601a      	str	r2, [r3, #0]
 80069b6:	1c69      	adds	r1, r5, #1
 80069b8:	d12a      	bne.n	8006a10 <HAL_I2C_Master_Receive+0x100>
 80069ba:	695a      	ldr	r2, [r3, #20]
 80069bc:	07d2      	lsls	r2, r2, #31
 80069be:	d5fc      	bpl.n	80069ba <HAL_I2C_Master_Receive+0xaa>
 80069c0:	6922      	ldr	r2, [r4, #16]
 80069c2:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 80069c6:	d136      	bne.n	8006a36 <HAL_I2C_Master_Receive+0x126>
 80069c8:	f047 0201 	orr.w	r2, r7, #1
 80069cc:	b2d2      	uxtb	r2, r2
 80069ce:	611a      	str	r2, [r3, #16]
 80069d0:	1c68      	adds	r0, r5, #1
 80069d2:	d003      	beq.n	80069dc <HAL_I2C_Master_Receive+0xcc>
 80069d4:	e109      	b.n	8006bea <HAL_I2C_Master_Receive+0x2da>
 80069d6:	695a      	ldr	r2, [r3, #20]
 80069d8:	0552      	lsls	r2, r2, #21
 80069da:	d46d      	bmi.n	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 80069dc:	695a      	ldr	r2, [r3, #20]
 80069de:	0791      	lsls	r1, r2, #30
 80069e0:	d5f9      	bpl.n	80069d6 <HAL_I2C_Master_Receive+0xc6>
 80069e2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80069e4:	2a00      	cmp	r2, #0
 80069e6:	d17f      	bne.n	8006ae8 <HAL_I2C_Master_Receive+0x1d8>
 80069e8:	9201      	str	r2, [sp, #4]
 80069ea:	695a      	ldr	r2, [r3, #20]
 80069ec:	9201      	str	r2, [sp, #4]
 80069ee:	699a      	ldr	r2, [r3, #24]
 80069f0:	9201      	str	r2, [sp, #4]
 80069f2:	9a01      	ldr	r2, [sp, #4]
 80069f4:	681a      	ldr	r2, [r3, #0]
 80069f6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80069fa:	601a      	str	r2, [r3, #0]
 80069fc:	2300      	movs	r3, #0
 80069fe:	2220      	movs	r2, #32
 8006a00:	4618      	mov	r0, r3
 8006a02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8006a06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8006a0a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006a0e:	e78e      	b.n	800692e <HAL_I2C_Master_Receive+0x1e>
 8006a10:	695a      	ldr	r2, [r3, #20]
 8006a12:	07d0      	lsls	r0, r2, #31
 8006a14:	d4d4      	bmi.n	80069c0 <HAL_I2C_Master_Receive+0xb0>
 8006a16:	f7ff f9b7 	bl	8005d88 <HAL_GetTick>
 8006a1a:	1b83      	subs	r3, r0, r6
 8006a1c:	429d      	cmp	r5, r3
 8006a1e:	f0c0 810e 	bcc.w	8006c3e <HAL_I2C_Master_Receive+0x32e>
 8006a22:	2d00      	cmp	r5, #0
 8006a24:	f000 810b 	beq.w	8006c3e <HAL_I2C_Master_Receive+0x32e>
 8006a28:	6823      	ldr	r3, [r4, #0]
 8006a2a:	e7c4      	b.n	80069b6 <HAL_I2C_Master_Receive+0xa6>
 8006a2c:	681a      	ldr	r2, [r3, #0]
 8006a2e:	f042 0201 	orr.w	r2, r2, #1
 8006a32:	601a      	str	r2, [r3, #0]
 8006a34:	e796      	b.n	8006964 <HAL_I2C_Master_Receive+0x54>
 8006a36:	ea4f 18e7 	mov.w	r8, r7, asr #7
 8006a3a:	f008 0806 	and.w	r8, r8, #6
 8006a3e:	f048 02f0 	orr.w	r2, r8, #240	; 0xf0
 8006a42:	611a      	str	r2, [r3, #16]
 8006a44:	1c6a      	adds	r2, r5, #1
 8006a46:	d003      	beq.n	8006a50 <HAL_I2C_Master_Receive+0x140>
 8006a48:	e10f      	b.n	8006c6a <HAL_I2C_Master_Receive+0x35a>
 8006a4a:	695a      	ldr	r2, [r3, #20]
 8006a4c:	0551      	lsls	r1, r2, #21
 8006a4e:	d433      	bmi.n	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 8006a50:	695a      	ldr	r2, [r3, #20]
 8006a52:	0710      	lsls	r0, r2, #28
 8006a54:	d5f9      	bpl.n	8006a4a <HAL_I2C_Master_Receive+0x13a>
 8006a56:	b2ff      	uxtb	r7, r7
 8006a58:	611f      	str	r7, [r3, #16]
 8006a5a:	1c68      	adds	r0, r5, #1
 8006a5c:	d003      	beq.n	8006a66 <HAL_I2C_Master_Receive+0x156>
 8006a5e:	e1a8      	b.n	8006db2 <HAL_I2C_Master_Receive+0x4a2>
 8006a60:	695a      	ldr	r2, [r3, #20]
 8006a62:	0552      	lsls	r2, r2, #21
 8006a64:	d428      	bmi.n	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 8006a66:	695a      	ldr	r2, [r3, #20]
 8006a68:	0791      	lsls	r1, r2, #30
 8006a6a:	d5f9      	bpl.n	8006a60 <HAL_I2C_Master_Receive+0x150>
 8006a6c:	2200      	movs	r2, #0
 8006a6e:	9205      	str	r2, [sp, #20]
 8006a70:	695a      	ldr	r2, [r3, #20]
 8006a72:	9205      	str	r2, [sp, #20]
 8006a74:	699a      	ldr	r2, [r3, #24]
 8006a76:	9205      	str	r2, [sp, #20]
 8006a78:	9a05      	ldr	r2, [sp, #20]
 8006a7a:	681a      	ldr	r2, [r3, #0]
 8006a7c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006a80:	601a      	str	r2, [r3, #0]
 8006a82:	1c68      	adds	r0, r5, #1
 8006a84:	f040 81a8 	bne.w	8006dd8 <HAL_I2C_Master_Receive+0x4c8>
 8006a88:	695a      	ldr	r2, [r3, #20]
 8006a8a:	07d1      	lsls	r1, r2, #31
 8006a8c:	d5fc      	bpl.n	8006a88 <HAL_I2C_Master_Receive+0x178>
 8006a8e:	f048 02f1 	orr.w	r2, r8, #241	; 0xf1
 8006a92:	611a      	str	r2, [r3, #16]
 8006a94:	e79c      	b.n	80069d0 <HAL_I2C_Master_Receive+0xc0>
 8006a96:	2320      	movs	r3, #32
 8006a98:	2002      	movs	r0, #2
 8006a9a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8006a9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006aa2:	f884 a03e 	strb.w	sl, [r4, #62]	; 0x3e
 8006aa6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006aa8:	f884 a03c 	strb.w	sl, [r4, #60]	; 0x3c
 8006aac:	f043 0320 	orr.w	r3, r3, #32
 8006ab0:	6423      	str	r3, [r4, #64]	; 0x40
 8006ab2:	b006      	add	sp, #24
 8006ab4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ab8:	2200      	movs	r2, #0
 8006aba:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 8006abe:	2520      	movs	r5, #32
 8006ac0:	2001      	movs	r0, #1
 8006ac2:	6819      	ldr	r1, [r3, #0]
 8006ac4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8006ac8:	6019      	str	r1, [r3, #0]
 8006aca:	615e      	str	r6, [r3, #20]
 8006acc:	6322      	str	r2, [r4, #48]	; 0x30
 8006ace:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
 8006ad2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006ad6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006ad8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006adc:	f043 0304 	orr.w	r3, r3, #4
 8006ae0:	6423      	str	r3, [r4, #64]	; 0x40
 8006ae2:	b006      	add	sp, #24
 8006ae4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ae8:	2a01      	cmp	r2, #1
 8006aea:	f04f 0000 	mov.w	r0, #0
 8006aee:	6819      	ldr	r1, [r3, #0]
 8006af0:	f000 8151 	beq.w	8006d96 <HAL_I2C_Master_Receive+0x486>
 8006af4:	2a02      	cmp	r2, #2
 8006af6:	f000 80fb 	beq.w	8006cf0 <HAL_I2C_Master_Receive+0x3e0>
 8006afa:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8006afe:	6019      	str	r1, [r3, #0]
 8006b00:	9004      	str	r0, [sp, #16]
 8006b02:	6959      	ldr	r1, [r3, #20]
 8006b04:	9104      	str	r1, [sp, #16]
 8006b06:	6999      	ldr	r1, [r3, #24]
 8006b08:	9104      	str	r1, [sp, #16]
 8006b0a:	9904      	ldr	r1, [sp, #16]
 8006b0c:	2a03      	cmp	r2, #3
 8006b0e:	d848      	bhi.n	8006ba2 <HAL_I2C_Master_Receive+0x292>
 8006b10:	2a01      	cmp	r2, #1
 8006b12:	f000 8118 	beq.w	8006d46 <HAL_I2C_Master_Receive+0x436>
 8006b16:	2a02      	cmp	r2, #2
 8006b18:	f000 80c3 	beq.w	8006ca2 <HAL_I2C_Master_Receive+0x392>
 8006b1c:	1c68      	adds	r0, r5, #1
 8006b1e:	f040 80f5 	bne.w	8006d0c <HAL_I2C_Master_Receive+0x3fc>
 8006b22:	695a      	ldr	r2, [r3, #20]
 8006b24:	0751      	lsls	r1, r2, #29
 8006b26:	d5fc      	bpl.n	8006b22 <HAL_I2C_Master_Receive+0x212>
 8006b28:	681a      	ldr	r2, [r3, #0]
 8006b2a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006b2c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b30:	601a      	str	r2, [r3, #0]
 8006b32:	691b      	ldr	r3, [r3, #16]
 8006b34:	700b      	strb	r3, [r1, #0]
 8006b36:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b38:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006b3a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006b3c:	3b01      	subs	r3, #1
 8006b3e:	3101      	adds	r1, #1
 8006b40:	3a01      	subs	r2, #1
 8006b42:	b29b      	uxth	r3, r3
 8006b44:	6261      	str	r1, [r4, #36]	; 0x24
 8006b46:	8522      	strh	r2, [r4, #40]	; 0x28
 8006b48:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006b4a:	1c6b      	adds	r3, r5, #1
 8006b4c:	6822      	ldr	r2, [r4, #0]
 8006b4e:	f040 80ec 	bne.w	8006d2a <HAL_I2C_Master_Receive+0x41a>
 8006b52:	6953      	ldr	r3, [r2, #20]
 8006b54:	075f      	lsls	r7, r3, #29
 8006b56:	d5fc      	bpl.n	8006b52 <HAL_I2C_Master_Receive+0x242>
 8006b58:	6813      	ldr	r3, [r2, #0]
 8006b5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006b5c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006b60:	6013      	str	r3, [r2, #0]
 8006b62:	6913      	ldr	r3, [r2, #16]
 8006b64:	700b      	strb	r3, [r1, #0]
 8006b66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b68:	6821      	ldr	r1, [r4, #0]
 8006b6a:	3b01      	subs	r3, #1
 8006b6c:	b29b      	uxth	r3, r3
 8006b6e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006b70:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006b72:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006b74:	6909      	ldr	r1, [r1, #16]
 8006b76:	1e53      	subs	r3, r2, #1
 8006b78:	1c47      	adds	r7, r0, #1
 8006b7a:	8523      	strh	r3, [r4, #40]	; 0x28
 8006b7c:	6267      	str	r7, [r4, #36]	; 0x24
 8006b7e:	7041      	strb	r1, [r0, #1]
 8006b80:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006b82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b84:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006b86:	3a01      	subs	r2, #1
 8006b88:	3b01      	subs	r3, #1
 8006b8a:	3101      	adds	r1, #1
 8006b8c:	b292      	uxth	r2, r2
 8006b8e:	b29b      	uxth	r3, r3
 8006b90:	6261      	str	r1, [r4, #36]	; 0x24
 8006b92:	8522      	strh	r2, [r4, #40]	; 0x28
 8006b94:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006b96:	2a00      	cmp	r2, #0
 8006b98:	f43f af30 	beq.w	80069fc <HAL_I2C_Master_Receive+0xec>
 8006b9c:	2a03      	cmp	r2, #3
 8006b9e:	6823      	ldr	r3, [r4, #0]
 8006ba0:	d9b6      	bls.n	8006b10 <HAL_I2C_Master_Receive+0x200>
 8006ba2:	b955      	cbnz	r5, 8006bba <HAL_I2C_Master_Receive+0x2aa>
 8006ba4:	e031      	b.n	8006c0a <HAL_I2C_Master_Receive+0x2fa>
 8006ba6:	695a      	ldr	r2, [r3, #20]
 8006ba8:	06d1      	lsls	r1, r2, #27
 8006baa:	f100 80df 	bmi.w	8006d6c <HAL_I2C_Master_Receive+0x45c>
 8006bae:	f7ff f8eb 	bl	8005d88 <HAL_GetTick>
 8006bb2:	1b80      	subs	r0, r0, r6
 8006bb4:	4285      	cmp	r5, r0
 8006bb6:	d331      	bcc.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006bb8:	6823      	ldr	r3, [r4, #0]
 8006bba:	695a      	ldr	r2, [r3, #20]
 8006bbc:	0650      	lsls	r0, r2, #25
 8006bbe:	d5f2      	bpl.n	8006ba6 <HAL_I2C_Master_Receive+0x296>
 8006bc0:	691a      	ldr	r2, [r3, #16]
 8006bc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006bc4:	701a      	strb	r2, [r3, #0]
 8006bc6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bc8:	6820      	ldr	r0, [r4, #0]
 8006bca:	3b01      	subs	r3, #1
 8006bcc:	b29b      	uxth	r3, r3
 8006bce:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006bd0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006bd2:	6943      	ldr	r3, [r0, #20]
 8006bd4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006bd6:	3a01      	subs	r2, #1
 8006bd8:	1c4f      	adds	r7, r1, #1
 8006bda:	b292      	uxth	r2, r2
 8006bdc:	075b      	lsls	r3, r3, #29
 8006bde:	6267      	str	r7, [r4, #36]	; 0x24
 8006be0:	8522      	strh	r2, [r4, #40]	; 0x28
 8006be2:	d5d8      	bpl.n	8006b96 <HAL_I2C_Master_Receive+0x286>
 8006be4:	6903      	ldr	r3, [r0, #16]
 8006be6:	704b      	strb	r3, [r1, #1]
 8006be8:	e074      	b.n	8006cd4 <HAL_I2C_Master_Receive+0x3c4>
 8006bea:	695a      	ldr	r2, [r3, #20]
 8006bec:	0797      	lsls	r7, r2, #30
 8006bee:	f53f aef8 	bmi.w	80069e2 <HAL_I2C_Master_Receive+0xd2>
 8006bf2:	695a      	ldr	r2, [r3, #20]
 8006bf4:	0557      	lsls	r7, r2, #21
 8006bf6:	f53f af5f 	bmi.w	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 8006bfa:	f7ff f8c5 	bl	8005d88 <HAL_GetTick>
 8006bfe:	1b83      	subs	r3, r0, r6
 8006c00:	429d      	cmp	r5, r3
 8006c02:	d30b      	bcc.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006c04:	b155      	cbz	r5, 8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006c06:	6823      	ldr	r3, [r4, #0]
 8006c08:	e6e2      	b.n	80069d0 <HAL_I2C_Master_Receive+0xc0>
 8006c0a:	695a      	ldr	r2, [r3, #20]
 8006c0c:	0652      	lsls	r2, r2, #25
 8006c0e:	d4d7      	bmi.n	8006bc0 <HAL_I2C_Master_Receive+0x2b0>
 8006c10:	695a      	ldr	r2, [r3, #20]
 8006c12:	06d1      	lsls	r1, r2, #27
 8006c14:	f100 80aa 	bmi.w	8006d6c <HAL_I2C_Master_Receive+0x45c>
 8006c18:	f7ff f8b6 	bl	8005d88 <HAL_GetTick>
 8006c1c:	2200      	movs	r2, #0
 8006c1e:	2320      	movs	r3, #32
 8006c20:	2001      	movs	r0, #1
 8006c22:	6322      	str	r2, [r4, #48]	; 0x30
 8006c24:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006c28:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006c2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006c2e:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006c32:	f043 0320 	orr.w	r3, r3, #32
 8006c36:	6423      	str	r3, [r4, #64]	; 0x40
 8006c38:	b006      	add	sp, #24
 8006c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006c3e:	2200      	movs	r2, #0
 8006c40:	2320      	movs	r3, #32
 8006c42:	6322      	str	r2, [r4, #48]	; 0x30
 8006c44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006c48:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006c4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006c4e:	6821      	ldr	r1, [r4, #0]
 8006c50:	f043 0320 	orr.w	r3, r3, #32
 8006c54:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006c58:	6423      	str	r3, [r4, #64]	; 0x40
 8006c5a:	680b      	ldr	r3, [r1, #0]
 8006c5c:	05d8      	lsls	r0, r3, #23
 8006c5e:	d545      	bpl.n	8006cec <HAL_I2C_Master_Receive+0x3dc>
 8006c60:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006c64:	2001      	movs	r0, #1
 8006c66:	6423      	str	r3, [r4, #64]	; 0x40
 8006c68:	e661      	b.n	800692e <HAL_I2C_Master_Receive+0x1e>
 8006c6a:	695a      	ldr	r2, [r3, #20]
 8006c6c:	0712      	lsls	r2, r2, #28
 8006c6e:	f53f aef2 	bmi.w	8006a56 <HAL_I2C_Master_Receive+0x146>
 8006c72:	695a      	ldr	r2, [r3, #20]
 8006c74:	0551      	lsls	r1, r2, #21
 8006c76:	f53f af1f 	bmi.w	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 8006c7a:	f7ff f885 	bl	8005d88 <HAL_GetTick>
 8006c7e:	1b83      	subs	r3, r0, r6
 8006c80:	429d      	cmp	r5, r3
 8006c82:	d3cb      	bcc.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006c84:	2d00      	cmp	r5, #0
 8006c86:	d0c9      	beq.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006c88:	6823      	ldr	r3, [r4, #0]
 8006c8a:	e6db      	b.n	8006a44 <HAL_I2C_Master_Receive+0x134>
 8006c8c:	695a      	ldr	r2, [r3, #20]
 8006c8e:	0757      	lsls	r7, r2, #29
 8006c90:	d40c      	bmi.n	8006cac <HAL_I2C_Master_Receive+0x39c>
 8006c92:	f7ff f879 	bl	8005d88 <HAL_GetTick>
 8006c96:	1b80      	subs	r0, r0, r6
 8006c98:	4285      	cmp	r5, r0
 8006c9a:	d3bf      	bcc.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006c9c:	2d00      	cmp	r5, #0
 8006c9e:	d0bd      	beq.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006ca0:	6823      	ldr	r3, [r4, #0]
 8006ca2:	1c69      	adds	r1, r5, #1
 8006ca4:	d1f2      	bne.n	8006c8c <HAL_I2C_Master_Receive+0x37c>
 8006ca6:	695a      	ldr	r2, [r3, #20]
 8006ca8:	0752      	lsls	r2, r2, #29
 8006caa:	d5fc      	bpl.n	8006ca6 <HAL_I2C_Master_Receive+0x396>
 8006cac:	681a      	ldr	r2, [r3, #0]
 8006cae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006cb2:	601a      	str	r2, [r3, #0]
 8006cb4:	691a      	ldr	r2, [r3, #16]
 8006cb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006cb8:	701a      	strb	r2, [r3, #0]
 8006cba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006cbc:	1c53      	adds	r3, r2, #1
 8006cbe:	6263      	str	r3, [r4, #36]	; 0x24
 8006cc0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006cc2:	3b01      	subs	r3, #1
 8006cc4:	8523      	strh	r3, [r4, #40]	; 0x28
 8006cc6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cc8:	3b01      	subs	r3, #1
 8006cca:	b29b      	uxth	r3, r3
 8006ccc:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006cce:	6823      	ldr	r3, [r4, #0]
 8006cd0:	691b      	ldr	r3, [r3, #16]
 8006cd2:	7053      	strb	r3, [r2, #1]
 8006cd4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006cd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006cda:	3a01      	subs	r2, #1
 8006cdc:	3b01      	subs	r3, #1
 8006cde:	3101      	adds	r1, #1
 8006ce0:	b292      	uxth	r2, r2
 8006ce2:	b29b      	uxth	r3, r3
 8006ce4:	6261      	str	r1, [r4, #36]	; 0x24
 8006ce6:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006ce8:	8522      	strh	r2, [r4, #40]	; 0x28
 8006cea:	e754      	b.n	8006b96 <HAL_I2C_Master_Receive+0x286>
 8006cec:	2001      	movs	r0, #1
 8006cee:	e61e      	b.n	800692e <HAL_I2C_Master_Receive+0x1e>
 8006cf0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8006cf4:	6019      	str	r1, [r3, #0]
 8006cf6:	6819      	ldr	r1, [r3, #0]
 8006cf8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8006cfc:	6019      	str	r1, [r3, #0]
 8006cfe:	9003      	str	r0, [sp, #12]
 8006d00:	6959      	ldr	r1, [r3, #20]
 8006d02:	9103      	str	r1, [sp, #12]
 8006d04:	6999      	ldr	r1, [r3, #24]
 8006d06:	9103      	str	r1, [sp, #12]
 8006d08:	9903      	ldr	r1, [sp, #12]
 8006d0a:	e6ff      	b.n	8006b0c <HAL_I2C_Master_Receive+0x1fc>
 8006d0c:	695a      	ldr	r2, [r3, #20]
 8006d0e:	0752      	lsls	r2, r2, #29
 8006d10:	f53f af0a 	bmi.w	8006b28 <HAL_I2C_Master_Receive+0x218>
 8006d14:	f7ff f838 	bl	8005d88 <HAL_GetTick>
 8006d18:	1b80      	subs	r0, r0, r6
 8006d1a:	4285      	cmp	r5, r0
 8006d1c:	f4ff af7e 	bcc.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006d20:	2d00      	cmp	r5, #0
 8006d22:	f43f af7b 	beq.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006d26:	6823      	ldr	r3, [r4, #0]
 8006d28:	e6f8      	b.n	8006b1c <HAL_I2C_Master_Receive+0x20c>
 8006d2a:	6953      	ldr	r3, [r2, #20]
 8006d2c:	0758      	lsls	r0, r3, #29
 8006d2e:	f53f af13 	bmi.w	8006b58 <HAL_I2C_Master_Receive+0x248>
 8006d32:	f7ff f829 	bl	8005d88 <HAL_GetTick>
 8006d36:	1b80      	subs	r0, r0, r6
 8006d38:	4285      	cmp	r5, r0
 8006d3a:	f4ff af6f 	bcc.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006d3e:	2d00      	cmp	r5, #0
 8006d40:	f47f af03 	bne.w	8006b4a <HAL_I2C_Master_Receive+0x23a>
 8006d44:	e76a      	b.n	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006d46:	b955      	cbnz	r5, 8006d5e <HAL_I2C_Master_Receive+0x44e>
 8006d48:	e020      	b.n	8006d8c <HAL_I2C_Master_Receive+0x47c>
 8006d4a:	695a      	ldr	r2, [r3, #20]
 8006d4c:	06d7      	lsls	r7, r2, #27
 8006d4e:	d40d      	bmi.n	8006d6c <HAL_I2C_Master_Receive+0x45c>
 8006d50:	f7ff f81a 	bl	8005d88 <HAL_GetTick>
 8006d54:	1b80      	subs	r0, r0, r6
 8006d56:	4285      	cmp	r5, r0
 8006d58:	f4ff af60 	bcc.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006d5c:	6823      	ldr	r3, [r4, #0]
 8006d5e:	695a      	ldr	r2, [r3, #20]
 8006d60:	0652      	lsls	r2, r2, #25
 8006d62:	d5f2      	bpl.n	8006d4a <HAL_I2C_Master_Receive+0x43a>
 8006d64:	691a      	ldr	r2, [r3, #16]
 8006d66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d68:	701a      	strb	r2, [r3, #0]
 8006d6a:	e7b3      	b.n	8006cd4 <HAL_I2C_Master_Receive+0x3c4>
 8006d6c:	2200      	movs	r2, #0
 8006d6e:	f06f 0510 	mvn.w	r5, #16
 8006d72:	2120      	movs	r1, #32
 8006d74:	615d      	str	r5, [r3, #20]
 8006d76:	6322      	str	r2, [r4, #48]	; 0x30
 8006d78:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8006d7c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006d80:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006d82:	2001      	movs	r0, #1
 8006d84:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006d88:	6423      	str	r3, [r4, #64]	; 0x40
 8006d8a:	e5d0      	b.n	800692e <HAL_I2C_Master_Receive+0x1e>
 8006d8c:	695a      	ldr	r2, [r3, #20]
 8006d8e:	0650      	lsls	r0, r2, #25
 8006d90:	f57f af3e 	bpl.w	8006c10 <HAL_I2C_Master_Receive+0x300>
 8006d94:	e7e6      	b.n	8006d64 <HAL_I2C_Master_Receive+0x454>
 8006d96:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8006d9a:	6019      	str	r1, [r3, #0]
 8006d9c:	9002      	str	r0, [sp, #8]
 8006d9e:	6959      	ldr	r1, [r3, #20]
 8006da0:	9102      	str	r1, [sp, #8]
 8006da2:	6999      	ldr	r1, [r3, #24]
 8006da4:	9102      	str	r1, [sp, #8]
 8006da6:	9902      	ldr	r1, [sp, #8]
 8006da8:	6819      	ldr	r1, [r3, #0]
 8006daa:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8006dae:	6019      	str	r1, [r3, #0]
 8006db0:	e6ac      	b.n	8006b0c <HAL_I2C_Master_Receive+0x1fc>
 8006db2:	695a      	ldr	r2, [r3, #20]
 8006db4:	0797      	lsls	r7, r2, #30
 8006db6:	f53f ae59 	bmi.w	8006a6c <HAL_I2C_Master_Receive+0x15c>
 8006dba:	695a      	ldr	r2, [r3, #20]
 8006dbc:	0557      	lsls	r7, r2, #21
 8006dbe:	f53f ae7b 	bmi.w	8006ab8 <HAL_I2C_Master_Receive+0x1a8>
 8006dc2:	f7fe ffe1 	bl	8005d88 <HAL_GetTick>
 8006dc6:	1b83      	subs	r3, r0, r6
 8006dc8:	429d      	cmp	r5, r3
 8006dca:	f4ff af27 	bcc.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006dce:	2d00      	cmp	r5, #0
 8006dd0:	f43f af24 	beq.w	8006c1c <HAL_I2C_Master_Receive+0x30c>
 8006dd4:	6823      	ldr	r3, [r4, #0]
 8006dd6:	e640      	b.n	8006a5a <HAL_I2C_Master_Receive+0x14a>
 8006dd8:	695a      	ldr	r2, [r3, #20]
 8006dda:	07d2      	lsls	r2, r2, #31
 8006ddc:	f53f ae57 	bmi.w	8006a8e <HAL_I2C_Master_Receive+0x17e>
 8006de0:	f7fe ffd2 	bl	8005d88 <HAL_GetTick>
 8006de4:	1b83      	subs	r3, r0, r6
 8006de6:	429d      	cmp	r5, r3
 8006de8:	f4ff af29 	bcc.w	8006c3e <HAL_I2C_Master_Receive+0x32e>
 8006dec:	2d00      	cmp	r5, #0
 8006dee:	f43f af26 	beq.w	8006c3e <HAL_I2C_Master_Receive+0x32e>
 8006df2:	6823      	ldr	r3, [r4, #0]
 8006df4:	e645      	b.n	8006a82 <HAL_I2C_Master_Receive+0x172>
 8006df6:	bf00      	nop

08006df8 <HAL_PCD_Init>:
 8006df8:	2800      	cmp	r0, #0
 8006dfa:	d05d      	beq.n	8006eb8 <HAL_PCD_Init+0xc0>
 8006dfc:	b570      	push	{r4, r5, r6, lr}
 8006dfe:	f890 32a9 	ldrb.w	r3, [r0, #681]	; 0x2a9
 8006e02:	4604      	mov	r4, r0
 8006e04:	b086      	sub	sp, #24
 8006e06:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006e0a:	2b00      	cmp	r3, #0
 8006e0c:	d04f      	beq.n	8006eae <HAL_PCD_Init+0xb6>
 8006e0e:	2303      	movs	r3, #3
 8006e10:	6820      	ldr	r0, [r4, #0]
 8006e12:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8006e16:	f002 fab7 	bl	8009388 <USB_DisableGlobalInt>
 8006e1a:	6860      	ldr	r0, [r4, #4]
 8006e1c:	b368      	cbz	r0, 8006e7a <HAL_PCD_Init+0x82>
 8006e1e:	2200      	movs	r2, #0
 8006e20:	f04f 0e01 	mov.w	lr, #1
 8006e24:	4611      	mov	r1, r2
 8006e26:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8006e2a:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006e2e:	f102 0c01 	add.w	ip, r2, #1
 8006e32:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006e36:	86da      	strh	r2, [r3, #54]	; 0x36
 8006e38:	fa5f f28c 	uxtb.w	r2, ip
 8006e3c:	4282      	cmp	r2, r0
 8006e3e:	e9c3 110e 	strd	r1, r1, [r3, #56]	; 0x38
 8006e42:	f883 e029 	strb.w	lr, [r3, #41]	; 0x29
 8006e46:	f883 102b 	strb.w	r1, [r3, #43]	; 0x2b
 8006e4a:	6419      	str	r1, [r3, #64]	; 0x40
 8006e4c:	d3eb      	bcc.n	8006e26 <HAL_PCD_Init+0x2e>
 8006e4e:	2200      	movs	r2, #0
 8006e50:	4611      	mov	r1, r2
 8006e52:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8006e56:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006e5a:	f102 0c01 	add.w	ip, r2, #1
 8006e5e:	f883 2168 	strb.w	r2, [r3, #360]	; 0x168
 8006e62:	fa5f f28c 	uxtb.w	r2, ip
 8006e66:	4282      	cmp	r2, r0
 8006e68:	e9c3 115e 	strd	r1, r1, [r3, #376]	; 0x178
 8006e6c:	f883 1169 	strb.w	r1, [r3, #361]	; 0x169
 8006e70:	f883 116b 	strb.w	r1, [r3, #363]	; 0x16b
 8006e74:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8006e78:	d3eb      	bcc.n	8006e52 <HAL_PCD_Init+0x5a>
 8006e7a:	46a4      	mov	ip, r4
 8006e7c:	46ee      	mov	lr, sp
 8006e7e:	f85c 6b10 	ldr.w	r6, [ip], #16
 8006e82:	1d25      	adds	r5, r4, #4
 8006e84:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8006e88:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8006e8c:	f8dc 3000 	ldr.w	r3, [ip]
 8006e90:	4630      	mov	r0, r6
 8006e92:	f8ce 3000 	str.w	r3, [lr]
 8006e96:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8006e9a:	f002 fa7f 	bl	800939c <USB_DevInit>
 8006e9e:	2000      	movs	r0, #0
 8006ea0:	2301      	movs	r3, #1
 8006ea2:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8006ea6:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8006eaa:	b006      	add	sp, #24
 8006eac:	bd70      	pop	{r4, r5, r6, pc}
 8006eae:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 8006eb2:	f003 fff1 	bl	800ae98 <HAL_PCD_MspInit>
 8006eb6:	e7aa      	b.n	8006e0e <HAL_PCD_Init+0x16>
 8006eb8:	2001      	movs	r0, #1
 8006eba:	4770      	bx	lr

08006ebc <HAL_PCD_Start>:
 8006ebc:	b538      	push	{r3, r4, r5, lr}
 8006ebe:	f890 32a8 	ldrb.w	r3, [r0, #680]	; 0x2a8
 8006ec2:	2b01      	cmp	r3, #1
 8006ec4:	d012      	beq.n	8006eec <HAL_PCD_Start+0x30>
 8006ec6:	4604      	mov	r4, r0
 8006ec8:	2501      	movs	r5, #1
 8006eca:	6800      	ldr	r0, [r0, #0]
 8006ecc:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8006ed0:	f002 fa50 	bl	8009374 <USB_EnableGlobalInt>
 8006ed4:	4629      	mov	r1, r5
 8006ed6:	4620      	mov	r0, r4
 8006ed8:	f003 ffd2 	bl	800ae80 <HAL_PCDEx_SetConnectionState>
 8006edc:	6820      	ldr	r0, [r4, #0]
 8006ede:	f003 f84d 	bl	8009f7c <USB_DevConnect>
 8006ee2:	2300      	movs	r3, #0
 8006ee4:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8006ee8:	4618      	mov	r0, r3
 8006eea:	bd38      	pop	{r3, r4, r5, pc}
 8006eec:	2002      	movs	r0, #2
 8006eee:	bd38      	pop	{r3, r4, r5, pc}

08006ef0 <HAL_PCD_IRQHandler>:
 8006ef0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ef4:	4604      	mov	r4, r0
 8006ef6:	6800      	ldr	r0, [r0, #0]
 8006ef8:	f003 f842 	bl	8009f80 <USB_ReadInterrupts>
 8006efc:	0406      	lsls	r6, r0, #16
 8006efe:	d443      	bmi.n	8006f88 <HAL_PCD_IRQHandler+0x98>
 8006f00:	6820      	ldr	r0, [r4, #0]
 8006f02:	f003 f83d 	bl	8009f80 <USB_ReadInterrupts>
 8006f06:	0545      	lsls	r5, r0, #21
 8006f08:	f100 8180 	bmi.w	800720c <HAL_PCD_IRQHandler+0x31c>
 8006f0c:	6820      	ldr	r0, [r4, #0]
 8006f0e:	f003 f837 	bl	8009f80 <USB_ReadInterrupts>
 8006f12:	f410 4f80 	tst.w	r0, #16384	; 0x4000
 8006f16:	6820      	ldr	r0, [r4, #0]
 8006f18:	d007      	beq.n	8006f2a <HAL_PCD_IRQHandler+0x3a>
 8006f1a:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006f1e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006f22:	041b      	lsls	r3, r3, #16
 8006f24:	0c1b      	lsrs	r3, r3, #16
 8006f26:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006f2a:	f003 f829 	bl	8009f80 <USB_ReadInterrupts>
 8006f2e:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 8006f32:	6820      	ldr	r0, [r4, #0]
 8006f34:	d007      	beq.n	8006f46 <HAL_PCD_IRQHandler+0x56>
 8006f36:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006f3a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006f3e:	041b      	lsls	r3, r3, #16
 8006f40:	0c1b      	lsrs	r3, r3, #16
 8006f42:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006f46:	f003 f81b 	bl	8009f80 <USB_ReadInterrupts>
 8006f4a:	04c0      	lsls	r0, r0, #19
 8006f4c:	f100 81f6 	bmi.w	800733c <HAL_PCD_IRQHandler+0x44c>
 8006f50:	6820      	ldr	r0, [r4, #0]
 8006f52:	f003 f815 	bl	8009f80 <USB_ReadInterrupts>
 8006f56:	0501      	lsls	r1, r0, #20
 8006f58:	f100 81d5 	bmi.w	8007306 <HAL_PCD_IRQHandler+0x416>
 8006f5c:	6820      	ldr	r0, [r4, #0]
 8006f5e:	f003 f80f 	bl	8009f80 <USB_ReadInterrupts>
 8006f62:	0582      	lsls	r2, r0, #22
 8006f64:	f100 81c2 	bmi.w	80072ec <HAL_PCD_IRQHandler+0x3fc>
 8006f68:	6820      	ldr	r0, [r4, #0]
 8006f6a:	f003 f809 	bl	8009f80 <USB_ReadInterrupts>
 8006f6e:	05c3      	lsls	r3, r0, #23
 8006f70:	d508      	bpl.n	8006f84 <HAL_PCD_IRQHandler+0x94>
 8006f72:	6822      	ldr	r2, [r4, #0]
 8006f74:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006f78:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006f7c:	041b      	lsls	r3, r3, #16
 8006f7e:	0c1b      	lsrs	r3, r3, #16
 8006f80:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006f84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f88:	6822      	ldr	r2, [r4, #0]
 8006f8a:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006f8e:	4610      	mov	r0, r2
 8006f90:	041d      	lsls	r5, r3, #16
 8006f92:	d5b6      	bpl.n	8006f02 <HAL_PCD_IRQHandler+0x12>
 8006f94:	f8df 934c 	ldr.w	r9, [pc, #844]	; 80072e4 <HAL_PCD_IRQHandler+0x3f4>
 8006f98:	f8df a34c 	ldr.w	sl, [pc, #844]	; 80072e8 <HAL_PCD_IRQHandler+0x3f8>
 8006f9c:	e011      	b.n	8006fc2 <HAL_PCD_IRQHandler+0xd2>
 8006f9e:	f011 0110 	ands.w	r1, r1, #16
 8006fa2:	f000 8151 	beq.w	8007248 <HAL_PCD_IRQHandler+0x358>
 8006fa6:	8801      	ldrh	r1, [r0, #0]
 8006fa8:	f411 6500 	ands.w	r5, r1, #2048	; 0x800
 8006fac:	b28b      	uxth	r3, r1
 8006fae:	f040 8176 	bne.w	800729e <HAL_PCD_IRQHandler+0x3ae>
 8006fb2:	0419      	lsls	r1, r3, #16
 8006fb4:	f100 821b 	bmi.w	80073ee <HAL_PCD_IRQHandler+0x4fe>
 8006fb8:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006fbc:	041e      	lsls	r6, r3, #16
 8006fbe:	f140 811f 	bpl.w	8007200 <HAL_PCD_IRQHandler+0x310>
 8006fc2:	f8b0 5044 	ldrh.w	r5, [r0, #68]	; 0x44
 8006fc6:	b2a9      	uxth	r1, r5
 8006fc8:	f015 050f 	ands.w	r5, r5, #15
 8006fcc:	d0e7      	beq.n	8006f9e <HAL_PCD_IRQHandler+0xae>
 8006fce:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 8006fd2:	00ae      	lsls	r6, r5, #2
 8006fd4:	041f      	lsls	r7, r3, #16
 8006fd6:	fa1f f883 	uxth.w	r8, r3
 8006fda:	f100 80a0 	bmi.w	800711e <HAL_PCD_IRQHandler+0x22e>
 8006fde:	f018 0f80 	tst.w	r8, #128	; 0x80
 8006fe2:	d0e9      	beq.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 8006fe4:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 8006fe8:	1977      	adds	r7, r6, r5
 8006fea:	b29b      	uxth	r3, r3
 8006fec:	ea03 0309 	and.w	r3, r3, r9
 8006ff0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006ff4:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 8006ff8:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 8006ffc:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8007000:	2b03      	cmp	r3, #3
 8007002:	f000 80d0 	beq.w	80071a6 <HAL_PCD_IRQHandler+0x2b6>
 8007006:	2b00      	cmp	r3, #0
 8007008:	f000 80cd 	beq.w	80071a6 <HAL_PCD_IRQHandler+0x2b6>
 800700c:	2b02      	cmp	r3, #2
 800700e:	d103      	bne.n	8007018 <HAL_PCD_IRQHandler+0x128>
 8007010:	f418 7f80 	tst.w	r8, #256	; 0x100
 8007014:	f000 80c7 	beq.w	80071a6 <HAL_PCD_IRQHandler+0x2b6>
 8007018:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800701c:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8007020:	b29b      	uxth	r3, r3
 8007022:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8007026:	f018 0c40 	ands.w	ip, r8, #64	; 0x40
 800702a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800702e:	f000 8255 	beq.w	80074dc <HAL_PCD_IRQHandler+0x5ec>
 8007032:	eb06 0c05 	add.w	ip, r6, r5
 8007036:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 800703a:	eb04 0ccc 	add.w	ip, r4, ip, lsl #3
 800703e:	f8dc e040 	ldr.w	lr, [ip, #64]	; 0x40
 8007042:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007046:	459e      	cmp	lr, r3
 8007048:	f240 834b 	bls.w	80076e2 <HAL_PCD_IRQHandler+0x7f2>
 800704c:	ebae 0e03 	sub.w	lr, lr, r3
 8007050:	f8cc e040 	str.w	lr, [ip, #64]	; 0x40
 8007054:	f1be 0f00 	cmp.w	lr, #0
 8007058:	f000 8346 	beq.w	80076e8 <HAL_PCD_IRQHandler+0x7f8>
 800705c:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8007060:	d00f      	beq.n	8007082 <HAL_PCD_IRQHandler+0x192>
 8007062:	f830 c021 	ldrh.w	ip, [r0, r1, lsl #2]
 8007066:	f42c 4ce0 	bic.w	ip, ip, #28672	; 0x7000
 800706a:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 800706e:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8007072:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8007076:	f44c 4c40 	orr.w	ip, ip, #49152	; 0xc000
 800707a:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 800707e:	f820 c021 	strh.w	ip, [r0, r1, lsl #2]
 8007082:	eb06 0e05 	add.w	lr, r6, r5
 8007086:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
 800708a:	f89e c04c 	ldrb.w	ip, [lr, #76]	; 0x4c
 800708e:	f1bc 0f01 	cmp.w	ip, #1
 8007092:	f040 8316 	bne.w	80076c2 <HAL_PCD_IRQHandler+0x7d2>
 8007096:	f8de 203c 	ldr.w	r2, [lr, #60]	; 0x3c
 800709a:	f8de 8038 	ldr.w	r8, [lr, #56]	; 0x38
 800709e:	eb02 0c03 	add.w	ip, r2, r3
 80070a2:	f8de 2044 	ldr.w	r2, [lr, #68]	; 0x44
 80070a6:	f8ce c03c 	str.w	ip, [lr, #60]	; 0x3c
 80070aa:	441a      	add	r2, r3
 80070ac:	f8ce 2044 	str.w	r2, [lr, #68]	; 0x44
 80070b0:	f8de 2048 	ldr.w	r2, [lr, #72]	; 0x48
 80070b4:	4542      	cmp	r2, r8
 80070b6:	f0c0 83e4 	bcc.w	8007882 <HAL_PCD_IRQHandler+0x992>
 80070ba:	eba2 0208 	sub.w	r2, r2, r8
 80070be:	f8ce 2048 	str.w	r2, [lr, #72]	; 0x48
 80070c2:	fa1f f388 	uxth.w	r3, r8
 80070c6:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 80070ca:	f1be 0f00 	cmp.w	lr, #0
 80070ce:	f040 83cb 	bne.w	8007868 <HAL_PCD_IRQHandler+0x978>
 80070d2:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80070d6:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80070da:	f201 4e04 	addw	lr, r1, #1028	; 0x404
 80070de:	b292      	uxth	r2, r2
 80070e0:	eb0e 0102 	add.w	r1, lr, r2
 80070e4:	f1b8 0f00 	cmp.w	r8, #0
 80070e8:	f040 83f8 	bne.w	80078dc <HAL_PCD_IRQHandler+0x9ec>
 80070ec:	f83e 1002 	ldrh.w	r1, [lr, r2]
 80070f0:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 80070f4:	0409      	lsls	r1, r1, #16
 80070f6:	0c09      	lsrs	r1, r1, #16
 80070f8:	f82e 1002 	strh.w	r1, [lr, r2]
 80070fc:	f83e 1002 	ldrh.w	r1, [lr, r2]
 8007100:	b289      	uxth	r1, r1
 8007102:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007106:	f82e 1002 	strh.w	r1, [lr, r2]
 800710a:	1972      	adds	r2, r6, r5
 800710c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007110:	8e12      	ldrh	r2, [r2, #48]	; 0x30
 8007112:	4661      	mov	r1, ip
 8007114:	f002 ff38 	bl	8009f88 <USB_WritePMA>
 8007118:	6820      	ldr	r0, [r4, #0]
 800711a:	4602      	mov	r2, r0
 800711c:	e2d1      	b.n	80076c2 <HAL_PCD_IRQHandler+0x7d2>
 800711e:	f640 738f 	movw	r3, #3983	; 0xf8f
 8007122:	f830 2025 	ldrh.w	r2, [r0, r5, lsl #2]
 8007126:	1971      	adds	r1, r6, r5
 8007128:	4013      	ands	r3, r2
 800712a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800712e:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 8007132:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007136:	f891 3174 	ldrb.w	r3, [r1, #372]	; 0x174
 800713a:	2b00      	cmp	r3, #0
 800713c:	f040 811c 	bne.w	8007378 <HAL_PCD_IRQHandler+0x488>
 8007140:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007144:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8007148:	b29b      	uxth	r3, r3
 800714a:	3306      	adds	r3, #6
 800714c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007150:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007154:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8007158:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800715c:	461f      	mov	r7, r3
 800715e:	2b00      	cmp	r3, #0
 8007160:	f040 81ac 	bne.w	80074bc <HAL_PCD_IRQHandler+0x5cc>
 8007164:	1971      	adds	r1, r6, r5
 8007166:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800716a:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 800716e:	00c9      	lsls	r1, r1, #3
 8007170:	443a      	add	r2, r7
 8007172:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8007176:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800717a:	443a      	add	r2, r7
 800717c:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 8007180:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 8007184:	b122      	cbz	r2, 8007190 <HAL_PCD_IRQHandler+0x2a0>
 8007186:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800718a:	42bb      	cmp	r3, r7
 800718c:	f240 819d 	bls.w	80074ca <HAL_PCD_IRQHandler+0x5da>
 8007190:	1973      	adds	r3, r6, r5
 8007192:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007196:	4620      	mov	r0, r4
 8007198:	f893 1168 	ldrb.w	r1, [r3, #360]	; 0x168
 800719c:	f003 fea4 	bl	800aee8 <HAL_PCD_DataOutStageCallback>
 80071a0:	6820      	ldr	r0, [r4, #0]
 80071a2:	4602      	mov	r2, r0
 80071a4:	e71b      	b.n	8006fde <HAL_PCD_IRQHandler+0xee>
 80071a6:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80071aa:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 80071ae:	b29b      	uxth	r3, r3
 80071b0:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80071b4:	442e      	add	r6, r5
 80071b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80071ba:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 80071be:	eb04 06c6 	add.w	r6, r4, r6, lsl #3
 80071c2:	6c32      	ldr	r2, [r6, #64]	; 0x40
 80071c4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80071c8:	429a      	cmp	r2, r3
 80071ca:	f240 8108 	bls.w	80073de <HAL_PCD_IRQHandler+0x4ee>
 80071ce:	1ad2      	subs	r2, r2, r3
 80071d0:	6432      	str	r2, [r6, #64]	; 0x40
 80071d2:	2a00      	cmp	r2, #0
 80071d4:	f000 8105 	beq.w	80073e2 <HAL_PCD_IRQHandler+0x4f2>
 80071d8:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80071da:	3501      	adds	r5, #1
 80071dc:	441a      	add	r2, r3
 80071de:	63f2      	str	r2, [r6, #60]	; 0x3c
 80071e0:	6c72      	ldr	r2, [r6, #68]	; 0x44
 80071e2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80071e6:	4413      	add	r3, r2
 80071e8:	6473      	str	r3, [r6, #68]	; 0x44
 80071ea:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80071ee:	f002 fb3d 	bl	800986c <USB_EPStartXfer>
 80071f2:	6820      	ldr	r0, [r4, #0]
 80071f4:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 80071f8:	4602      	mov	r2, r0
 80071fa:	041e      	lsls	r6, r3, #16
 80071fc:	f53f aee1 	bmi.w	8006fc2 <HAL_PCD_IRQHandler+0xd2>
 8007200:	4610      	mov	r0, r2
 8007202:	f002 febd 	bl	8009f80 <USB_ReadInterrupts>
 8007206:	0545      	lsls	r5, r0, #21
 8007208:	f57f ae80 	bpl.w	8006f0c <HAL_PCD_IRQHandler+0x1c>
 800720c:	6822      	ldr	r2, [r4, #0]
 800720e:	4620      	mov	r0, r4
 8007210:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8007214:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007218:	041b      	lsls	r3, r3, #16
 800721a:	0c1b      	lsrs	r3, r3, #16
 800721c:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8007220:	f003 fe7a 	bl	800af18 <HAL_PCD_ResetCallback>
 8007224:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007228:	2b01      	cmp	r3, #1
 800722a:	f43f ae6f 	beq.w	8006f0c <HAL_PCD_IRQHandler+0x1c>
 800722e:	2500      	movs	r5, #0
 8007230:	2301      	movs	r3, #1
 8007232:	4629      	mov	r1, r5
 8007234:	6820      	ldr	r0, [r4, #0]
 8007236:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800723a:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800723e:	f002 fe97 	bl	8009f70 <USB_SetDevAddress>
 8007242:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8007246:	e661      	b.n	8006f0c <HAL_PCD_IRQHandler+0x1c>
 8007248:	8803      	ldrh	r3, [r0, #0]
 800724a:	b29b      	uxth	r3, r3
 800724c:	ea03 0309 	and.w	r3, r3, r9
 8007250:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007254:	8003      	strh	r3, [r0, #0]
 8007256:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800725a:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 800725e:	b29b      	uxth	r3, r3
 8007260:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8007268:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 800726c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800726e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007272:	6463      	str	r3, [r4, #68]	; 0x44
 8007274:	4413      	add	r3, r2
 8007276:	63e3      	str	r3, [r4, #60]	; 0x3c
 8007278:	4620      	mov	r0, r4
 800727a:	f003 fe3f 	bl	800aefc <HAL_PCD_DataInStageCallback>
 800727e:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8007282:	b363      	cbz	r3, 80072de <HAL_PCD_IRQHandler+0x3ee>
 8007284:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007286:	bb53      	cbnz	r3, 80072de <HAL_PCD_IRQHandler+0x3ee>
 8007288:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800728c:	6820      	ldr	r0, [r4, #0]
 800728e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007292:	f8a0 204c 	strh.w	r2, [r0, #76]	; 0x4c
 8007296:	4602      	mov	r2, r0
 8007298:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800729c:	e68c      	b.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 800729e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80072a2:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 80072a6:	b29b      	uxth	r3, r3
 80072a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80072ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80072b0:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 80072b4:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 80072b8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80072bc:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 80072c0:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 80072c4:	f002 fe70 	bl	8009fa8 <USB_ReadPMA>
 80072c8:	f640 738f 	movw	r3, #3983	; 0xf8f
 80072cc:	6822      	ldr	r2, [r4, #0]
 80072ce:	4620      	mov	r0, r4
 80072d0:	8811      	ldrh	r1, [r2, #0]
 80072d2:	400b      	ands	r3, r1
 80072d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80072d8:	8013      	strh	r3, [r2, #0]
 80072da:	f003 fdfd 	bl	800aed8 <HAL_PCD_SetupStageCallback>
 80072de:	6820      	ldr	r0, [r4, #0]
 80072e0:	4602      	mov	r2, r0
 80072e2:	e669      	b.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 80072e4:	ffff8f0f 	.word	0xffff8f0f
 80072e8:	ffff8fbf 	.word	0xffff8fbf
 80072ec:	6822      	ldr	r2, [r4, #0]
 80072ee:	4620      	mov	r0, r4
 80072f0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80072f4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80072f8:	041b      	lsls	r3, r3, #16
 80072fa:	0c1b      	lsrs	r3, r3, #16
 80072fc:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8007300:	f003 fe06 	bl	800af10 <HAL_PCD_SOFCallback>
 8007304:	e630      	b.n	8006f68 <HAL_PCD_IRQHandler+0x78>
 8007306:	6822      	ldr	r2, [r4, #0]
 8007308:	4620      	mov	r0, r4
 800730a:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 800730e:	b29b      	uxth	r3, r3
 8007310:	f043 0308 	orr.w	r3, r3, #8
 8007314:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8007318:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800731c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007320:	041b      	lsls	r3, r3, #16
 8007322:	0c1b      	lsrs	r3, r3, #16
 8007324:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8007328:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 800732c:	b29b      	uxth	r3, r3
 800732e:	f043 0304 	orr.w	r3, r3, #4
 8007332:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8007336:	f003 fe01 	bl	800af3c <HAL_PCD_SuspendCallback>
 800733a:	e60f      	b.n	8006f5c <HAL_PCD_IRQHandler+0x6c>
 800733c:	6822      	ldr	r2, [r4, #0]
 800733e:	4620      	mov	r0, r4
 8007340:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8007344:	f023 0304 	bic.w	r3, r3, #4
 8007348:	041b      	lsls	r3, r3, #16
 800734a:	0c1b      	lsrs	r3, r3, #16
 800734c:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8007350:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8007354:	f023 0308 	bic.w	r3, r3, #8
 8007358:	041b      	lsls	r3, r3, #16
 800735a:	0c1b      	lsrs	r3, r3, #16
 800735c:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8007360:	f003 fdfc 	bl	800af5c <HAL_PCD_ResumeCallback>
 8007364:	6820      	ldr	r0, [r4, #0]
 8007366:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 800736a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800736e:	041b      	lsls	r3, r3, #16
 8007370:	0c1b      	lsrs	r3, r3, #16
 8007372:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8007376:	e5ec      	b.n	8006f52 <HAL_PCD_IRQHandler+0x62>
 8007378:	f891 316b 	ldrb.w	r3, [r1, #363]	; 0x16b
 800737c:	2b02      	cmp	r3, #2
 800737e:	f000 8120 	beq.w	80075c2 <HAL_PCD_IRQHandler+0x6d2>
 8007382:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8007386:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800738a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800738e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007392:	041b      	lsls	r3, r3, #16
 8007394:	0c1b      	lsrs	r3, r3, #16
 8007396:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800739a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800739e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80073a2:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 80073a6:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073aa:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 80073ae:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80073b2:	b29b      	uxth	r3, r3
 80073b4:	d06e      	beq.n	8007494 <HAL_PCD_IRQHandler+0x5a4>
 80073b6:	3302      	adds	r3, #2
 80073b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80073bc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80073c0:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 80073c4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80073c8:	461f      	mov	r7, r3
 80073ca:	2b00      	cmp	r3, #0
 80073cc:	f43f aeca 	beq.w	8007164 <HAL_PCD_IRQHandler+0x274>
 80073d0:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 80073d4:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 80073d8:	f002 fde6 	bl	8009fa8 <USB_ReadPMA>
 80073dc:	e6c2      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 80073de:	2300      	movs	r3, #0
 80073e0:	6433      	str	r3, [r6, #64]	; 0x40
 80073e2:	4620      	mov	r0, r4
 80073e4:	f003 fd8a 	bl	800aefc <HAL_PCD_DataInStageCallback>
 80073e8:	6820      	ldr	r0, [r4, #0]
 80073ea:	4602      	mov	r2, r0
 80073ec:	e5e4      	b.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 80073ee:	f640 738f 	movw	r3, #3983	; 0xf8f
 80073f2:	8802      	ldrh	r2, [r0, #0]
 80073f4:	4013      	ands	r3, r2
 80073f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80073fa:	8003      	strh	r3, [r0, #0]
 80073fc:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007400:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8007404:	b29b      	uxth	r3, r3
 8007406:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800740a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800740e:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8007412:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007416:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 800741a:	b193      	cbz	r3, 8007442 <HAL_PCD_IRQHandler+0x552>
 800741c:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
 8007420:	b179      	cbz	r1, 8007442 <HAL_PCD_IRQHandler+0x552>
 8007422:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8007426:	f002 fdbf 	bl	8009fa8 <USB_ReadPMA>
 800742a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800742e:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
 8007432:	4620      	mov	r0, r4
 8007434:	4413      	add	r3, r2
 8007436:	4629      	mov	r1, r5
 8007438:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
 800743c:	f003 fd54 	bl	800aee8 <HAL_PCD_DataOutStageCallback>
 8007440:	6820      	ldr	r0, [r4, #0]
 8007442:	8803      	ldrh	r3, [r0, #0]
 8007444:	4602      	mov	r2, r0
 8007446:	051b      	lsls	r3, r3, #20
 8007448:	f53f adb6 	bmi.w	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 800744c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007450:	f8d4 1178 	ldr.w	r1, [r4, #376]	; 0x178
 8007454:	b29b      	uxth	r3, r3
 8007456:	f200 450c 	addw	r5, r0, #1036	; 0x40c
 800745a:	2900      	cmp	r1, #0
 800745c:	f040 80a6 	bne.w	80075ac <HAL_PCD_IRQHandler+0x6bc>
 8007460:	5ae9      	ldrh	r1, [r5, r3]
 8007462:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8007466:	0409      	lsls	r1, r1, #16
 8007468:	0c09      	lsrs	r1, r1, #16
 800746a:	52e9      	strh	r1, [r5, r3]
 800746c:	5ae9      	ldrh	r1, [r5, r3]
 800746e:	b289      	uxth	r1, r1
 8007470:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007474:	52e9      	strh	r1, [r5, r3]
 8007476:	8803      	ldrh	r3, [r0, #0]
 8007478:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800747c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007480:	041b      	lsls	r3, r3, #16
 8007482:	0c1b      	lsrs	r3, r3, #16
 8007484:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8007488:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800748c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007490:	8003      	strh	r3, [r0, #0]
 8007492:	e591      	b.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 8007494:	3306      	adds	r3, #6
 8007496:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800749a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800749e:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 80074a2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80074a6:	461f      	mov	r7, r3
 80074a8:	2b00      	cmp	r3, #0
 80074aa:	f43f ae5b 	beq.w	8007164 <HAL_PCD_IRQHandler+0x274>
 80074ae:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 80074b2:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 80074b6:	f002 fd77 	bl	8009fa8 <USB_ReadPMA>
 80074ba:	e653      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 80074bc:	f8b1 216e 	ldrh.w	r2, [r1, #366]	; 0x16e
 80074c0:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 80074c4:	f002 fd70 	bl	8009fa8 <USB_ReadPMA>
 80074c8:	e64c      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 80074ca:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 80074ce:	6820      	ldr	r0, [r4, #0]
 80074d0:	4421      	add	r1, r4
 80074d2:	f002 f9cb 	bl	800986c <USB_EPStartXfer>
 80074d6:	6820      	ldr	r0, [r4, #0]
 80074d8:	4602      	mov	r2, r0
 80074da:	e580      	b.n	8006fde <HAL_PCD_IRQHandler+0xee>
 80074dc:	f8b3 e40c 	ldrh.w	lr, [r3, #1036]	; 0x40c
 80074e0:	1973      	adds	r3, r6, r5
 80074e2:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80074e6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 80074ea:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 80074ee:	45f3      	cmp	fp, lr
 80074f0:	f0c0 80a5 	bcc.w	800763e <HAL_PCD_IRQHandler+0x74e>
 80074f4:	ebab 0c0e 	sub.w	ip, fp, lr
 80074f8:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 80074fc:	f1bc 0f00 	cmp.w	ip, #0
 8007500:	f000 809f 	beq.w	8007642 <HAL_PCD_IRQHandler+0x752>
 8007504:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8007508:	d10d      	bne.n	8007526 <HAL_PCD_IRQHandler+0x636>
 800750a:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 800750e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007512:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007516:	041b      	lsls	r3, r3, #16
 8007518:	0c1b      	lsrs	r3, r3, #16
 800751a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800751e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007522:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8007526:	1973      	adds	r3, r6, r5
 8007528:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800752c:	f893 c04c 	ldrb.w	ip, [r3, #76]	; 0x4c
 8007530:	f1bc 0f01 	cmp.w	ip, #1
 8007534:	f040 80c5 	bne.w	80076c2 <HAL_PCD_IRQHandler+0x7d2>
 8007538:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800753a:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
 800753e:	eb02 0c0e 	add.w	ip, r2, lr
 8007542:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007544:	f8c3 c03c 	str.w	ip, [r3, #60]	; 0x3c
 8007548:	4472      	add	r2, lr
 800754a:	645a      	str	r2, [r3, #68]	; 0x44
 800754c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800754e:	4542      	cmp	r2, r8
 8007550:	f0c0 81ab 	bcc.w	80078aa <HAL_PCD_IRQHandler+0x9ba>
 8007554:	eba2 0208 	sub.w	r2, r2, r8
 8007558:	649a      	str	r2, [r3, #72]	; 0x48
 800755a:	fa1f fe88 	uxth.w	lr, r8
 800755e:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8007562:	2b00      	cmp	r3, #0
 8007564:	f040 8194 	bne.w	8007890 <HAL_PCD_IRQHandler+0x9a0>
 8007568:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800756c:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007570:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8007574:	b292      	uxth	r2, r2
 8007576:	188b      	adds	r3, r1, r2
 8007578:	f1b8 0f00 	cmp.w	r8, #0
 800757c:	f040 81d0 	bne.w	8007920 <HAL_PCD_IRQHandler+0xa30>
 8007580:	5a8b      	ldrh	r3, [r1, r2]
 8007582:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007586:	041b      	lsls	r3, r3, #16
 8007588:	0c1b      	lsrs	r3, r3, #16
 800758a:	528b      	strh	r3, [r1, r2]
 800758c:	5a8b      	ldrh	r3, [r1, r2]
 800758e:	b29b      	uxth	r3, r3
 8007590:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007594:	528b      	strh	r3, [r1, r2]
 8007596:	1972      	adds	r2, r6, r5
 8007598:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800759c:	4673      	mov	r3, lr
 800759e:	4661      	mov	r1, ip
 80075a0:	8e52      	ldrh	r2, [r2, #50]	; 0x32
 80075a2:	f002 fcf1 	bl	8009f88 <USB_WritePMA>
 80075a6:	6820      	ldr	r0, [r4, #0]
 80075a8:	4602      	mov	r2, r0
 80075aa:	e08a      	b.n	80076c2 <HAL_PCD_IRQHandler+0x7d2>
 80075ac:	293e      	cmp	r1, #62	; 0x3e
 80075ae:	f200 80cb 	bhi.w	8007748 <HAL_PCD_IRQHandler+0x858>
 80075b2:	084e      	lsrs	r6, r1, #1
 80075b4:	07cf      	lsls	r7, r1, #31
 80075b6:	bf48      	it	mi
 80075b8:	3601      	addmi	r6, #1
 80075ba:	02b1      	lsls	r1, r6, #10
 80075bc:	b289      	uxth	r1, r1
 80075be:	52e9      	strh	r1, [r5, r3]
 80075c0:	e759      	b.n	8007476 <HAL_PCD_IRQHandler+0x586>
 80075c2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80075c6:	f418 4c80 	ands.w	ip, r8, #16384	; 0x4000
 80075ca:	b29b      	uxth	r3, r3
 80075cc:	f000 80c7 	beq.w	800775e <HAL_PCD_IRQHandler+0x86e>
 80075d0:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 80075d4:	3302      	adds	r3, #2
 80075d6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80075da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80075de:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 80075e2:	f8d1 c180 	ldr.w	ip, [r1, #384]	; 0x180
 80075e6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80075ea:	459c      	cmp	ip, r3
 80075ec:	461f      	mov	r7, r3
 80075ee:	f0c0 8112 	bcc.w	8007816 <HAL_PCD_IRQHandler+0x926>
 80075f2:	ebac 0c03 	sub.w	ip, ip, r3
 80075f6:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 80075fa:	f1bc 0f00 	cmp.w	ip, #0
 80075fe:	f000 810e 	beq.w	800781e <HAL_PCD_IRQHandler+0x92e>
 8007602:	f018 0f40 	tst.w	r8, #64	; 0x40
 8007606:	d00d      	beq.n	8007624 <HAL_PCD_IRQHandler+0x734>
 8007608:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 800760c:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8007610:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8007614:	0409      	lsls	r1, r1, #16
 8007616:	0c09      	lsrs	r1, r1, #16
 8007618:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800761c:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8007620:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8007624:	2b00      	cmp	r3, #0
 8007626:	f000 80c3 	beq.w	80077b0 <HAL_PCD_IRQHandler+0x8c0>
 800762a:	1971      	adds	r1, r6, r5
 800762c:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007630:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8007634:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8007638:	f002 fcb6 	bl	8009fa8 <USB_ReadPMA>
 800763c:	e592      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 800763e:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8007642:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8007646:	2b00      	cmp	r3, #0
 8007648:	f040 80be 	bne.w	80077c8 <HAL_PCD_IRQHandler+0x8d8>
 800764c:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8007650:	010b      	lsls	r3, r1, #4
 8007652:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8007656:	4406      	add	r6, r0
 8007658:	b2ad      	uxth	r5, r5
 800765a:	5b72      	ldrh	r2, [r6, r5]
 800765c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8007660:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007664:	0412      	lsls	r2, r2, #16
 8007666:	0c12      	lsrs	r2, r2, #16
 8007668:	5372      	strh	r2, [r6, r5]
 800766a:	5b72      	ldrh	r2, [r6, r5]
 800766c:	4403      	add	r3, r0
 800766e:	b292      	uxth	r2, r2
 8007670:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007674:	5372      	strh	r2, [r6, r5]
 8007676:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 800767a:	b280      	uxth	r0, r0
 800767c:	5a1a      	ldrh	r2, [r3, r0]
 800767e:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007682:	0412      	lsls	r2, r2, #16
 8007684:	0c12      	lsrs	r2, r2, #16
 8007686:	521a      	strh	r2, [r3, r0]
 8007688:	5a1a      	ldrh	r2, [r3, r0]
 800768a:	b292      	uxth	r2, r2
 800768c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007690:	521a      	strh	r2, [r3, r0]
 8007692:	4620      	mov	r0, r4
 8007694:	f003 fc32 	bl	800aefc <HAL_PCD_DataInStageCallback>
 8007698:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 800769c:	6820      	ldr	r0, [r4, #0]
 800769e:	d183      	bne.n	80075a8 <HAL_PCD_IRQHandler+0x6b8>
 80076a0:	4602      	mov	r2, r0
 80076a2:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 80076a6:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80076aa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80076ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80076b2:	041b      	lsls	r3, r3, #16
 80076b4:	0c1b      	lsrs	r3, r3, #16
 80076b6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80076ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80076be:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 80076c2:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 80076c6:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80076ca:	b29b      	uxth	r3, r3
 80076cc:	ea03 030a 	and.w	r3, r3, sl
 80076d0:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 80076d4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80076d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80076dc:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 80076e0:	e46a      	b.n	8006fb8 <HAL_PCD_IRQHandler+0xc8>
 80076e2:	2300      	movs	r3, #0
 80076e4:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 80076e8:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80076ec:	2b00      	cmp	r3, #0
 80076ee:	d17f      	bne.n	80077f0 <HAL_PCD_IRQHandler+0x900>
 80076f0:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 80076f4:	010b      	lsls	r3, r1, #4
 80076f6:	f203 4604 	addw	r6, r3, #1028	; 0x404
 80076fa:	4406      	add	r6, r0
 80076fc:	b2ad      	uxth	r5, r5
 80076fe:	5b72      	ldrh	r2, [r6, r5]
 8007700:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8007704:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007708:	0412      	lsls	r2, r2, #16
 800770a:	0c12      	lsrs	r2, r2, #16
 800770c:	5372      	strh	r2, [r6, r5]
 800770e:	5b72      	ldrh	r2, [r6, r5]
 8007710:	4403      	add	r3, r0
 8007712:	b292      	uxth	r2, r2
 8007714:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007718:	5372      	strh	r2, [r6, r5]
 800771a:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 800771e:	b280      	uxth	r0, r0
 8007720:	5a1a      	ldrh	r2, [r3, r0]
 8007722:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007726:	0412      	lsls	r2, r2, #16
 8007728:	0c12      	lsrs	r2, r2, #16
 800772a:	521a      	strh	r2, [r3, r0]
 800772c:	5a1a      	ldrh	r2, [r3, r0]
 800772e:	b292      	uxth	r2, r2
 8007730:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007734:	521a      	strh	r2, [r3, r0]
 8007736:	4620      	mov	r0, r4
 8007738:	f003 fbe0 	bl	800aefc <HAL_PCD_DataInStageCallback>
 800773c:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8007740:	6820      	ldr	r0, [r4, #0]
 8007742:	d1ad      	bne.n	80076a0 <HAL_PCD_IRQHandler+0x7b0>
 8007744:	4602      	mov	r2, r0
 8007746:	e7bc      	b.n	80076c2 <HAL_PCD_IRQHandler+0x7d2>
 8007748:	094e      	lsrs	r6, r1, #5
 800774a:	06c9      	lsls	r1, r1, #27
 800774c:	4989      	ldr	r1, [pc, #548]	; (8007974 <HAL_PCD_IRQHandler+0xa84>)
 800774e:	bf08      	it	eq
 8007750:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007754:	ea41 2186 	orr.w	r1, r1, r6, lsl #10
 8007758:	b289      	uxth	r1, r1
 800775a:	52e9      	strh	r1, [r5, r3]
 800775c:	e68b      	b.n	8007476 <HAL_PCD_IRQHandler+0x586>
 800775e:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8007762:	3306      	adds	r3, #6
 8007764:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007768:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800776c:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8007770:	f8d1 e180 	ldr.w	lr, [r1, #384]	; 0x180
 8007774:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8007778:	459e      	cmp	lr, r3
 800777a:	461f      	mov	r7, r3
 800777c:	d360      	bcc.n	8007840 <HAL_PCD_IRQHandler+0x950>
 800777e:	ebae 0e03 	sub.w	lr, lr, r3
 8007782:	f8c1 e180 	str.w	lr, [r1, #384]	; 0x180
 8007786:	f1be 0f00 	cmp.w	lr, #0
 800778a:	d05b      	beq.n	8007844 <HAL_PCD_IRQHandler+0x954>
 800778c:	f018 0f40 	tst.w	r8, #64	; 0x40
 8007790:	d10d      	bne.n	80077ae <HAL_PCD_IRQHandler+0x8be>
 8007792:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007796:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800779a:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800779e:	0409      	lsls	r1, r1, #16
 80077a0:	0c09      	lsrs	r1, r1, #16
 80077a2:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80077a6:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 80077aa:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 80077ae:	b90b      	cbnz	r3, 80077b4 <HAL_PCD_IRQHandler+0x8c4>
 80077b0:	461f      	mov	r7, r3
 80077b2:	e4d7      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 80077b4:	1971      	adds	r1, r6, r5
 80077b6:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80077ba:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 80077be:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 80077c2:	f002 fbf1 	bl	8009fa8 <USB_ReadPMA>
 80077c6:	e4cd      	b.n	8007164 <HAL_PCD_IRQHandler+0x274>
 80077c8:	2b01      	cmp	r3, #1
 80077ca:	f47f af62 	bne.w	8007692 <HAL_PCD_IRQHandler+0x7a2>
 80077ce:	2500      	movs	r5, #0
 80077d0:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80077d4:	010b      	lsls	r3, r1, #4
 80077d6:	f203 4604 	addw	r6, r3, #1028	; 0x404
 80077da:	b292      	uxth	r2, r2
 80077dc:	4406      	add	r6, r0
 80077de:	52b5      	strh	r5, [r6, r2]
 80077e0:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80077e4:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80077e8:	4403      	add	r3, r0
 80077ea:	b292      	uxth	r2, r2
 80077ec:	529d      	strh	r5, [r3, r2]
 80077ee:	e750      	b.n	8007692 <HAL_PCD_IRQHandler+0x7a2>
 80077f0:	2b01      	cmp	r3, #1
 80077f2:	d1a0      	bne.n	8007736 <HAL_PCD_IRQHandler+0x846>
 80077f4:	2500      	movs	r5, #0
 80077f6:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80077fa:	010b      	lsls	r3, r1, #4
 80077fc:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8007800:	b292      	uxth	r2, r2
 8007802:	4406      	add	r6, r0
 8007804:	52b5      	strh	r5, [r6, r2]
 8007806:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800780a:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800780e:	4403      	add	r3, r0
 8007810:	b292      	uxth	r2, r2
 8007812:	529d      	strh	r5, [r3, r2]
 8007814:	e78f      	b.n	8007736 <HAL_PCD_IRQHandler+0x846>
 8007816:	f04f 0c00 	mov.w	ip, #0
 800781a:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 800781e:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007822:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8007826:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800782a:	0409      	lsls	r1, r1, #16
 800782c:	0c09      	lsrs	r1, r1, #16
 800782e:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8007832:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007836:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800783a:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 800783e:	e6e0      	b.n	8007602 <HAL_PCD_IRQHandler+0x712>
 8007840:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8007844:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007848:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800784c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8007850:	0409      	lsls	r1, r1, #16
 8007852:	0c09      	lsrs	r1, r1, #16
 8007854:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8007858:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800785c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8007860:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8007864:	e792      	b.n	800778c <HAL_PCD_IRQHandler+0x89c>
 8007866:	b293      	uxth	r3, r2
 8007868:	f1be 0f01 	cmp.w	lr, #1
 800786c:	f47f ac4d 	bne.w	800710a <HAL_PCD_IRQHandler+0x21a>
 8007870:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8007874:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007878:	f201 4104 	addw	r1, r1, #1028	; 0x404
 800787c:	b292      	uxth	r2, r2
 800787e:	528b      	strh	r3, [r1, r2]
 8007880:	e443      	b.n	800710a <HAL_PCD_IRQHandler+0x21a>
 8007882:	b9ba      	cbnz	r2, 80078b4 <HAL_PCD_IRQHandler+0x9c4>
 8007884:	4698      	mov	r8, r3
 8007886:	f88e 204c 	strb.w	r2, [lr, #76]	; 0x4c
 800788a:	e41c      	b.n	80070c6 <HAL_PCD_IRQHandler+0x1d6>
 800788c:	fa1f fe82 	uxth.w	lr, r2
 8007890:	2b01      	cmp	r3, #1
 8007892:	f47f ae80 	bne.w	8007596 <HAL_PCD_IRQHandler+0x6a6>
 8007896:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800789a:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 800789e:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 80078a2:	b29b      	uxth	r3, r3
 80078a4:	f822 e003 	strh.w	lr, [r2, r3]
 80078a8:	e675      	b.n	8007596 <HAL_PCD_IRQHandler+0x6a6>
 80078aa:	bb22      	cbnz	r2, 80078f6 <HAL_PCD_IRQHandler+0xa06>
 80078ac:	46f0      	mov	r8, lr
 80078ae:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 80078b2:	e654      	b.n	800755e <HAL_PCD_IRQHandler+0x66e>
 80078b4:	2300      	movs	r3, #0
 80078b6:	f88e 304c 	strb.w	r3, [lr, #76]	; 0x4c
 80078ba:	f8ce 3048 	str.w	r3, [lr, #72]	; 0x48
 80078be:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 80078c2:	f1be 0f00 	cmp.w	lr, #0
 80078c6:	d1ce      	bne.n	8007866 <HAL_PCD_IRQHandler+0x976>
 80078c8:	4690      	mov	r8, r2
 80078ca:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80078ce:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80078d2:	b29b      	uxth	r3, r3
 80078d4:	f201 4104 	addw	r1, r1, #1028	; 0x404
 80078d8:	4419      	add	r1, r3
 80078da:	b293      	uxth	r3, r2
 80078dc:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 80078e0:	d82b      	bhi.n	800793a <HAL_PCD_IRQHandler+0xa4a>
 80078e2:	ea4f 0258 	mov.w	r2, r8, lsr #1
 80078e6:	f018 0f01 	tst.w	r8, #1
 80078ea:	bf18      	it	ne
 80078ec:	3201      	addne	r2, #1
 80078ee:	0292      	lsls	r2, r2, #10
 80078f0:	b292      	uxth	r2, r2
 80078f2:	800a      	strh	r2, [r1, #0]
 80078f4:	e409      	b.n	800710a <HAL_PCD_IRQHandler+0x21a>
 80078f6:	f04f 0e00 	mov.w	lr, #0
 80078fa:	f8c3 e048 	str.w	lr, [r3, #72]	; 0x48
 80078fe:	f883 e04c 	strb.w	lr, [r3, #76]	; 0x4c
 8007902:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8007906:	2b00      	cmp	r3, #0
 8007908:	d1c0      	bne.n	800788c <HAL_PCD_IRQHandler+0x99c>
 800790a:	4690      	mov	r8, r2
 800790c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007910:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007914:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8007918:	b29b      	uxth	r3, r3
 800791a:	440b      	add	r3, r1
 800791c:	fa1f fe82 	uxth.w	lr, r2
 8007920:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 8007924:	d818      	bhi.n	8007958 <HAL_PCD_IRQHandler+0xa68>
 8007926:	ea4f 0258 	mov.w	r2, r8, lsr #1
 800792a:	f018 0f01 	tst.w	r8, #1
 800792e:	bf18      	it	ne
 8007930:	3201      	addne	r2, #1
 8007932:	0292      	lsls	r2, r2, #10
 8007934:	b292      	uxth	r2, r2
 8007936:	801a      	strh	r2, [r3, #0]
 8007938:	e62d      	b.n	8007596 <HAL_PCD_IRQHandler+0x6a6>
 800793a:	ea4f 1258 	mov.w	r2, r8, lsr #5
 800793e:	f8df e034 	ldr.w	lr, [pc, #52]	; 8007974 <HAL_PCD_IRQHandler+0xa84>
 8007942:	f018 0f1f 	tst.w	r8, #31
 8007946:	bf08      	it	eq
 8007948:	f102 32ff 	addeq.w	r2, r2, #4294967295
 800794c:	ea4e 2282 	orr.w	r2, lr, r2, lsl #10
 8007950:	b292      	uxth	r2, r2
 8007952:	800a      	strh	r2, [r1, #0]
 8007954:	f7ff bbd9 	b.w	800710a <HAL_PCD_IRQHandler+0x21a>
 8007958:	ea4f 1258 	mov.w	r2, r8, lsr #5
 800795c:	4905      	ldr	r1, [pc, #20]	; (8007974 <HAL_PCD_IRQHandler+0xa84>)
 800795e:	f018 0f1f 	tst.w	r8, #31
 8007962:	bf08      	it	eq
 8007964:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8007968:	ea41 2282 	orr.w	r2, r1, r2, lsl #10
 800796c:	b292      	uxth	r2, r2
 800796e:	801a      	strh	r2, [r3, #0]
 8007970:	e611      	b.n	8007596 <HAL_PCD_IRQHandler+0x6a6>
 8007972:	bf00      	nop
 8007974:	ffff8000 	.word	0xffff8000

08007978 <HAL_PCD_SetAddress>:
 8007978:	f890 22a8 	ldrb.w	r2, [r0, #680]	; 0x2a8
 800797c:	2a01      	cmp	r2, #1
 800797e:	d00e      	beq.n	800799e <HAL_PCD_SetAddress+0x26>
 8007980:	b510      	push	{r4, lr}
 8007982:	2201      	movs	r2, #1
 8007984:	4604      	mov	r4, r0
 8007986:	6800      	ldr	r0, [r0, #0]
 8007988:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 800798c:	f884 22a8 	strb.w	r2, [r4, #680]	; 0x2a8
 8007990:	f002 faee 	bl	8009f70 <USB_SetDevAddress>
 8007994:	2300      	movs	r3, #0
 8007996:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800799a:	4618      	mov	r0, r3
 800799c:	bd10      	pop	{r4, pc}
 800799e:	2002      	movs	r0, #2
 80079a0:	4770      	bx	lr
 80079a2:	bf00      	nop

080079a4 <HAL_PCD_EP_Open>:
 80079a4:	f001 0c07 	and.w	ip, r1, #7
 80079a8:	0609      	lsls	r1, r1, #24
 80079aa:	b510      	push	{r4, lr}
 80079ac:	4604      	mov	r4, r0
 80079ae:	d425      	bmi.n	80079fc <HAL_PCD_EP_Open+0x58>
 80079b0:	f04f 0e00 	mov.w	lr, #0
 80079b4:	eb0c 008c 	add.w	r0, ip, ip, lsl #2
 80079b8:	00c0      	lsls	r0, r0, #3
 80079ba:	f500 71b4 	add.w	r1, r0, #360	; 0x168
 80079be:	4420      	add	r0, r4
 80079c0:	f880 e169 	strb.w	lr, [r0, #361]	; 0x169
 80079c4:	4421      	add	r1, r4
 80079c6:	610a      	str	r2, [r1, #16]
 80079c8:	784a      	ldrb	r2, [r1, #1]
 80079ca:	f881 c000 	strb.w	ip, [r1]
 80079ce:	70cb      	strb	r3, [r1, #3]
 80079d0:	b10a      	cbz	r2, 80079d6 <HAL_PCD_EP_Open+0x32>
 80079d2:	f8a1 c00e 	strh.w	ip, [r1, #14]
 80079d6:	2b02      	cmp	r3, #2
 80079d8:	bf04      	itt	eq
 80079da:	2300      	moveq	r3, #0
 80079dc:	710b      	strbeq	r3, [r1, #4]
 80079de:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80079e2:	2b01      	cmp	r3, #1
 80079e4:	d019      	beq.n	8007a1a <HAL_PCD_EP_Open+0x76>
 80079e6:	2301      	movs	r3, #1
 80079e8:	6820      	ldr	r0, [r4, #0]
 80079ea:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80079ee:	f001 fce9 	bl	80093c4 <USB_ActivateEndpoint>
 80079f2:	2300      	movs	r3, #0
 80079f4:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80079f8:	4618      	mov	r0, r3
 80079fa:	bd10      	pop	{r4, pc}
 80079fc:	f10c 0101 	add.w	r1, ip, #1
 8007a00:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007a04:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007a08:	2001      	movs	r0, #1
 8007a0a:	7048      	strb	r0, [r1, #1]
 8007a0c:	eb0c 0100 	add.w	r1, ip, r0
 8007a10:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007a14:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007a18:	e7d5      	b.n	80079c6 <HAL_PCD_EP_Open+0x22>
 8007a1a:	2002      	movs	r0, #2
 8007a1c:	bd10      	pop	{r4, pc}
 8007a1e:	bf00      	nop

08007a20 <HAL_PCD_EP_Close>:
 8007a20:	060b      	lsls	r3, r1, #24
 8007a22:	b510      	push	{r4, lr}
 8007a24:	4604      	mov	r4, r0
 8007a26:	d41b      	bmi.n	8007a60 <HAL_PCD_EP_Close+0x40>
 8007a28:	f001 0307 	and.w	r3, r1, #7
 8007a2c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8007a30:	00d2      	lsls	r2, r2, #3
 8007a32:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 8007a36:	4401      	add	r1, r0
 8007a38:	4402      	add	r2, r0
 8007a3a:	2000      	movs	r0, #0
 8007a3c:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007a40:	700b      	strb	r3, [r1, #0]
 8007a42:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007a46:	2b01      	cmp	r3, #1
 8007a48:	d019      	beq.n	8007a7e <HAL_PCD_EP_Close+0x5e>
 8007a4a:	2301      	movs	r3, #1
 8007a4c:	6820      	ldr	r0, [r4, #0]
 8007a4e:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007a52:	f001 fe2b 	bl	80096ac <USB_DeactivateEndpoint>
 8007a56:	2300      	movs	r3, #0
 8007a58:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	bd10      	pop	{r4, pc}
 8007a60:	2001      	movs	r0, #1
 8007a62:	f001 0307 	and.w	r3, r1, #7
 8007a66:	181a      	adds	r2, r3, r0
 8007a68:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007a6c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007a70:	4611      	mov	r1, r2
 8007a72:	7050      	strb	r0, [r2, #1]
 8007a74:	700b      	strb	r3, [r1, #0]
 8007a76:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007a7a:	2b01      	cmp	r3, #1
 8007a7c:	d1e5      	bne.n	8007a4a <HAL_PCD_EP_Close+0x2a>
 8007a7e:	2002      	movs	r0, #2
 8007a80:	bd10      	pop	{r4, pc}
 8007a82:	bf00      	nop

08007a84 <HAL_PCD_EP_Receive>:
 8007a84:	b510      	push	{r4, lr}
 8007a86:	2400      	movs	r4, #0
 8007a88:	f001 0e07 	and.w	lr, r1, #7
 8007a8c:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 8007a90:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 8007a94:	e9cc 235f 	strd	r2, r3, [ip, #380]	; 0x17c
 8007a98:	6800      	ldr	r0, [r0, #0]
 8007a9a:	f50c 71b4 	add.w	r1, ip, #360	; 0x168
 8007a9e:	f8cc 4184 	str.w	r4, [ip, #388]	; 0x184
 8007aa2:	f88c 4169 	strb.w	r4, [ip, #361]	; 0x169
 8007aa6:	f88c e168 	strb.w	lr, [ip, #360]	; 0x168
 8007aaa:	f001 fedf 	bl	800986c <USB_EPStartXfer>
 8007aae:	4620      	mov	r0, r4
 8007ab0:	bd10      	pop	{r4, pc}
 8007ab2:	bf00      	nop

08007ab4 <HAL_PCD_EP_GetRxCount>:
 8007ab4:	f001 0107 	and.w	r1, r1, #7
 8007ab8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007abc:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007ac0:	f8d1 0184 	ldr.w	r0, [r1, #388]	; 0x184
 8007ac4:	4770      	bx	lr
 8007ac6:	bf00      	nop

08007ac8 <HAL_PCD_EP_Transmit>:
 8007ac8:	b570      	push	{r4, r5, r6, lr}
 8007aca:	2601      	movs	r6, #1
 8007acc:	2500      	movs	r5, #0
 8007ace:	4604      	mov	r4, r0
 8007ad0:	f001 0e07 	and.w	lr, r1, #7
 8007ad4:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 8007ad8:	eb0e 0106 	add.w	r1, lr, r6
 8007adc:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 8007ae0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007ae4:	f8cc 203c 	str.w	r2, [ip, #60]	; 0x3c
 8007ae8:	f88c e028 	strb.w	lr, [ip, #40]	; 0x28
 8007aec:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 8007af0:	f8cc 3048 	str.w	r3, [ip, #72]	; 0x48
 8007af4:	f88c 604c 	strb.w	r6, [ip, #76]	; 0x4c
 8007af8:	f8cc 5044 	str.w	r5, [ip, #68]	; 0x44
 8007afc:	f88c 6029 	strb.w	r6, [ip, #41]	; 0x29
 8007b00:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007b04:	6800      	ldr	r0, [r0, #0]
 8007b06:	f001 feb1 	bl	800986c <USB_EPStartXfer>
 8007b0a:	4628      	mov	r0, r5
 8007b0c:	bd70      	pop	{r4, r5, r6, pc}
 8007b0e:	bf00      	nop

08007b10 <HAL_PCD_EP_SetStall>:
 8007b10:	6843      	ldr	r3, [r0, #4]
 8007b12:	b510      	push	{r4, lr}
 8007b14:	4604      	mov	r4, r0
 8007b16:	f001 0007 	and.w	r0, r1, #7
 8007b1a:	4298      	cmp	r0, r3
 8007b1c:	d82d      	bhi.n	8007b7a <HAL_PCD_EP_SetStall+0x6a>
 8007b1e:	060b      	lsls	r3, r1, #24
 8007b20:	d41a      	bmi.n	8007b58 <HAL_PCD_EP_SetStall+0x48>
 8007b22:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007b26:	00c9      	lsls	r1, r1, #3
 8007b28:	f501 72b4 	add.w	r2, r1, #360	; 0x168
 8007b2c:	1863      	adds	r3, r4, r1
 8007b2e:	18a1      	adds	r1, r4, r2
 8007b30:	2200      	movs	r2, #0
 8007b32:	f883 2169 	strb.w	r2, [r3, #361]	; 0x169
 8007b36:	2301      	movs	r3, #1
 8007b38:	7008      	strb	r0, [r1, #0]
 8007b3a:	708b      	strb	r3, [r1, #2]
 8007b3c:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007b40:	429a      	cmp	r2, r3
 8007b42:	d018      	beq.n	8007b76 <HAL_PCD_EP_SetStall+0x66>
 8007b44:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007b48:	6820      	ldr	r0, [r4, #0]
 8007b4a:	f002 f999 	bl	8009e80 <USB_EPSetStall>
 8007b4e:	2300      	movs	r3, #0
 8007b50:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007b54:	4618      	mov	r0, r3
 8007b56:	bd10      	pop	{r4, pc}
 8007b58:	2201      	movs	r2, #1
 8007b5a:	1883      	adds	r3, r0, r2
 8007b5c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007b60:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8007b64:	705a      	strb	r2, [r3, #1]
 8007b66:	4619      	mov	r1, r3
 8007b68:	2301      	movs	r3, #1
 8007b6a:	7008      	strb	r0, [r1, #0]
 8007b6c:	708b      	strb	r3, [r1, #2]
 8007b6e:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007b72:	429a      	cmp	r2, r3
 8007b74:	d1e6      	bne.n	8007b44 <HAL_PCD_EP_SetStall+0x34>
 8007b76:	2002      	movs	r0, #2
 8007b78:	bd10      	pop	{r4, pc}
 8007b7a:	2001      	movs	r0, #1
 8007b7c:	bd10      	pop	{r4, pc}
 8007b7e:	bf00      	nop

08007b80 <HAL_PCD_EP_ClrStall>:
 8007b80:	b538      	push	{r3, r4, r5, lr}
 8007b82:	6843      	ldr	r3, [r0, #4]
 8007b84:	f001 020f 	and.w	r2, r1, #15
 8007b88:	429a      	cmp	r2, r3
 8007b8a:	d832      	bhi.n	8007bf2 <HAL_PCD_EP_ClrStall+0x72>
 8007b8c:	060b      	lsls	r3, r1, #24
 8007b8e:	4604      	mov	r4, r0
 8007b90:	d41c      	bmi.n	8007bcc <HAL_PCD_EP_ClrStall+0x4c>
 8007b92:	f001 0307 	and.w	r3, r1, #7
 8007b96:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8007b9a:	00d2      	lsls	r2, r2, #3
 8007b9c:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 8007ba0:	4401      	add	r1, r0
 8007ba2:	4402      	add	r2, r0
 8007ba4:	2500      	movs	r5, #0
 8007ba6:	2000      	movs	r0, #0
 8007ba8:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007bac:	700b      	strb	r3, [r1, #0]
 8007bae:	708d      	strb	r5, [r1, #2]
 8007bb0:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007bb4:	2b01      	cmp	r3, #1
 8007bb6:	d01a      	beq.n	8007bee <HAL_PCD_EP_ClrStall+0x6e>
 8007bb8:	2301      	movs	r3, #1
 8007bba:	6820      	ldr	r0, [r4, #0]
 8007bbc:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007bc0:	f002 f986 	bl	8009ed0 <USB_EPClearStall>
 8007bc4:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8007bc8:	4628      	mov	r0, r5
 8007bca:	bd38      	pop	{r3, r4, r5, pc}
 8007bcc:	2001      	movs	r0, #1
 8007bce:	f001 0307 	and.w	r3, r1, #7
 8007bd2:	181a      	adds	r2, r3, r0
 8007bd4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007bd8:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007bdc:	4611      	mov	r1, r2
 8007bde:	2500      	movs	r5, #0
 8007be0:	7050      	strb	r0, [r2, #1]
 8007be2:	700b      	strb	r3, [r1, #0]
 8007be4:	708d      	strb	r5, [r1, #2]
 8007be6:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007bea:	2b01      	cmp	r3, #1
 8007bec:	d1e4      	bne.n	8007bb8 <HAL_PCD_EP_ClrStall+0x38>
 8007bee:	2002      	movs	r0, #2
 8007bf0:	bd38      	pop	{r3, r4, r5, pc}
 8007bf2:	2001      	movs	r0, #1
 8007bf4:	bd38      	pop	{r3, r4, r5, pc}
 8007bf6:	bf00      	nop

08007bf8 <HAL_PCDEx_PMAConfig>:
 8007bf8:	f011 0f80 	tst.w	r1, #128	; 0x80
 8007bfc:	d00b      	beq.n	8007c16 <HAL_PCDEx_PMAConfig+0x1e>
 8007bfe:	f001 0107 	and.w	r1, r1, #7
 8007c02:	3101      	adds	r1, #1
 8007c04:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007c08:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007c0c:	b95a      	cbnz	r2, 8007c26 <HAL_PCDEx_PMAConfig+0x2e>
 8007c0e:	2000      	movs	r0, #0
 8007c10:	80cb      	strh	r3, [r1, #6]
 8007c12:	730a      	strb	r2, [r1, #12]
 8007c14:	4770      	bx	lr
 8007c16:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007c1a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007c1e:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 8007c22:	2a00      	cmp	r2, #0
 8007c24:	d0f3      	beq.n	8007c0e <HAL_PCDEx_PMAConfig+0x16>
 8007c26:	2201      	movs	r2, #1
 8007c28:	2000      	movs	r0, #0
 8007c2a:	608b      	str	r3, [r1, #8]
 8007c2c:	730a      	strb	r2, [r1, #12]
 8007c2e:	4770      	bx	lr

08007c30 <RCC_SetFlashLatencyFromMSIRange>:
 8007c30:	4b1d      	ldr	r3, [pc, #116]	; (8007ca8 <RCC_SetFlashLatencyFromMSIRange+0x78>)
 8007c32:	b082      	sub	sp, #8
 8007c34:	689a      	ldr	r2, [r3, #8]
 8007c36:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8007c3a:	d116      	bne.n	8007c6a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007c3c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007c3e:	00d2      	lsls	r2, r2, #3
 8007c40:	d420      	bmi.n	8007c84 <RCC_SetFlashLatencyFromMSIRange+0x54>
 8007c42:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007c44:	4919      	ldr	r1, [pc, #100]	; (8007cac <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8007c46:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007c4a:	625a      	str	r2, [r3, #36]	; 0x24
 8007c4c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007c4e:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8007c52:	9201      	str	r2, [sp, #4]
 8007c54:	9a01      	ldr	r2, [sp, #4]
 8007c56:	680a      	ldr	r2, [r1, #0]
 8007c58:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8007c5a:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 8007c5e:	f021 5180 	bic.w	r1, r1, #268435456	; 0x10000000
 8007c62:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 8007c66:	6259      	str	r1, [r3, #36]	; 0x24
 8007c68:	d013      	beq.n	8007c92 <RCC_SetFlashLatencyFromMSIRange+0x62>
 8007c6a:	2000      	movs	r0, #0
 8007c6c:	4a10      	ldr	r2, [pc, #64]	; (8007cb0 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8007c6e:	6813      	ldr	r3, [r2, #0]
 8007c70:	f023 0301 	bic.w	r3, r3, #1
 8007c74:	4303      	orrs	r3, r0
 8007c76:	6013      	str	r3, [r2, #0]
 8007c78:	6813      	ldr	r3, [r2, #0]
 8007c7a:	f003 0301 	and.w	r3, r3, #1
 8007c7e:	4058      	eors	r0, r3
 8007c80:	b002      	add	sp, #8
 8007c82:	4770      	bx	lr
 8007c84:	4b09      	ldr	r3, [pc, #36]	; (8007cac <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8007c86:	681a      	ldr	r2, [r3, #0]
 8007c88:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 8007c8c:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 8007c90:	d1eb      	bne.n	8007c6a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007c92:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 8007c96:	d1e8      	bne.n	8007c6a <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007c98:	4a05      	ldr	r2, [pc, #20]	; (8007cb0 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8007c9a:	2001      	movs	r0, #1
 8007c9c:	6813      	ldr	r3, [r2, #0]
 8007c9e:	f043 0304 	orr.w	r3, r3, #4
 8007ca2:	6013      	str	r3, [r2, #0]
 8007ca4:	e7e2      	b.n	8007c6c <RCC_SetFlashLatencyFromMSIRange+0x3c>
 8007ca6:	bf00      	nop
 8007ca8:	40023800 	.word	0x40023800
 8007cac:	40007000 	.word	0x40007000
 8007cb0:	40023c00 	.word	0x40023c00

08007cb4 <HAL_RCC_OscConfig>:
 8007cb4:	2800      	cmp	r0, #0
 8007cb6:	f000 81f8 	beq.w	80080aa <HAL_RCC_OscConfig+0x3f6>
 8007cba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007cbe:	4aa2      	ldr	r2, [pc, #648]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007cc0:	6803      	ldr	r3, [r0, #0]
 8007cc2:	6895      	ldr	r5, [r2, #8]
 8007cc4:	6896      	ldr	r6, [r2, #8]
 8007cc6:	07d9      	lsls	r1, r3, #31
 8007cc8:	4604      	mov	r4, r0
 8007cca:	b083      	sub	sp, #12
 8007ccc:	f005 050c 	and.w	r5, r5, #12
 8007cd0:	f406 3680 	and.w	r6, r6, #65536	; 0x10000
 8007cd4:	d52e      	bpl.n	8007d34 <HAL_RCC_OscConfig+0x80>
 8007cd6:	2d08      	cmp	r5, #8
 8007cd8:	f000 8128 	beq.w	8007f2c <HAL_RCC_OscConfig+0x278>
 8007cdc:	2d0c      	cmp	r5, #12
 8007cde:	f000 8122 	beq.w	8007f26 <HAL_RCC_OscConfig+0x272>
 8007ce2:	6863      	ldr	r3, [r4, #4]
 8007ce4:	2b01      	cmp	r3, #1
 8007ce6:	d00f      	beq.n	8007d08 <HAL_RCC_OscConfig+0x54>
 8007ce8:	2b00      	cmp	r3, #0
 8007cea:	f000 8180 	beq.w	8007fee <HAL_RCC_OscConfig+0x33a>
 8007cee:	2b05      	cmp	r3, #5
 8007cf0:	4b95      	ldr	r3, [pc, #596]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007cf2:	681a      	ldr	r2, [r3, #0]
 8007cf4:	f000 81db 	beq.w	80080ae <HAL_RCC_OscConfig+0x3fa>
 8007cf8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8007cfc:	601a      	str	r2, [r3, #0]
 8007cfe:	681a      	ldr	r2, [r3, #0]
 8007d00:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8007d04:	601a      	str	r2, [r3, #0]
 8007d06:	e004      	b.n	8007d12 <HAL_RCC_OscConfig+0x5e>
 8007d08:	4a8f      	ldr	r2, [pc, #572]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007d0a:	6813      	ldr	r3, [r2, #0]
 8007d0c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d10:	6013      	str	r3, [r2, #0]
 8007d12:	f7fe f839 	bl	8005d88 <HAL_GetTick>
 8007d16:	f8df 8230 	ldr.w	r8, [pc, #560]	; 8007f48 <HAL_RCC_OscConfig+0x294>
 8007d1a:	4607      	mov	r7, r0
 8007d1c:	e005      	b.n	8007d2a <HAL_RCC_OscConfig+0x76>
 8007d1e:	f7fe f833 	bl	8005d88 <HAL_GetTick>
 8007d22:	1bc0      	subs	r0, r0, r7
 8007d24:	2864      	cmp	r0, #100	; 0x64
 8007d26:	f200 815e 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007d2a:	f8d8 3000 	ldr.w	r3, [r8]
 8007d2e:	039b      	lsls	r3, r3, #14
 8007d30:	d5f5      	bpl.n	8007d1e <HAL_RCC_OscConfig+0x6a>
 8007d32:	6823      	ldr	r3, [r4, #0]
 8007d34:	0799      	lsls	r1, r3, #30
 8007d36:	d522      	bpl.n	8007d7e <HAL_RCC_OscConfig+0xca>
 8007d38:	2d04      	cmp	r5, #4
 8007d3a:	f000 8114 	beq.w	8007f66 <HAL_RCC_OscConfig+0x2b2>
 8007d3e:	2d0c      	cmp	r5, #12
 8007d40:	f000 810e 	beq.w	8007f60 <HAL_RCC_OscConfig+0x2ac>
 8007d44:	68e3      	ldr	r3, [r4, #12]
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	f000 8179 	beq.w	800803e <HAL_RCC_OscConfig+0x38a>
 8007d4c:	2201      	movs	r2, #1
 8007d4e:	4b7f      	ldr	r3, [pc, #508]	; (8007f4c <HAL_RCC_OscConfig+0x298>)
 8007d50:	4f7d      	ldr	r7, [pc, #500]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007d52:	601a      	str	r2, [r3, #0]
 8007d54:	f7fe f818 	bl	8005d88 <HAL_GetTick>
 8007d58:	4606      	mov	r6, r0
 8007d5a:	e005      	b.n	8007d68 <HAL_RCC_OscConfig+0xb4>
 8007d5c:	f7fe f814 	bl	8005d88 <HAL_GetTick>
 8007d60:	1b80      	subs	r0, r0, r6
 8007d62:	2802      	cmp	r0, #2
 8007d64:	f200 813f 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007d68:	683b      	ldr	r3, [r7, #0]
 8007d6a:	079b      	lsls	r3, r3, #30
 8007d6c:	d5f6      	bpl.n	8007d5c <HAL_RCC_OscConfig+0xa8>
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	6922      	ldr	r2, [r4, #16]
 8007d72:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007d76:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007d7a:	607b      	str	r3, [r7, #4]
 8007d7c:	6823      	ldr	r3, [r4, #0]
 8007d7e:	06d9      	lsls	r1, r3, #27
 8007d80:	d525      	bpl.n	8007dce <HAL_RCC_OscConfig+0x11a>
 8007d82:	2d00      	cmp	r5, #0
 8007d84:	f000 8098 	beq.w	8007eb8 <HAL_RCC_OscConfig+0x204>
 8007d88:	69a3      	ldr	r3, [r4, #24]
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	f000 816a 	beq.w	8008064 <HAL_RCC_OscConfig+0x3b0>
 8007d90:	2201      	movs	r2, #1
 8007d92:	4b6e      	ldr	r3, [pc, #440]	; (8007f4c <HAL_RCC_OscConfig+0x298>)
 8007d94:	4e6c      	ldr	r6, [pc, #432]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007d96:	621a      	str	r2, [r3, #32]
 8007d98:	f7fd fff6 	bl	8005d88 <HAL_GetTick>
 8007d9c:	4607      	mov	r7, r0
 8007d9e:	e005      	b.n	8007dac <HAL_RCC_OscConfig+0xf8>
 8007da0:	f7fd fff2 	bl	8005d88 <HAL_GetTick>
 8007da4:	1bc0      	subs	r0, r0, r7
 8007da6:	2802      	cmp	r0, #2
 8007da8:	f200 811d 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007dac:	6833      	ldr	r3, [r6, #0]
 8007dae:	059b      	lsls	r3, r3, #22
 8007db0:	d5f6      	bpl.n	8007da0 <HAL_RCC_OscConfig+0xec>
 8007db2:	6873      	ldr	r3, [r6, #4]
 8007db4:	6a22      	ldr	r2, [r4, #32]
 8007db6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007dba:	4313      	orrs	r3, r2
 8007dbc:	6073      	str	r3, [r6, #4]
 8007dbe:	6873      	ldr	r3, [r6, #4]
 8007dc0:	69e2      	ldr	r2, [r4, #28]
 8007dc2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8007dc6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007dca:	6073      	str	r3, [r6, #4]
 8007dcc:	6823      	ldr	r3, [r4, #0]
 8007dce:	0719      	lsls	r1, r3, #28
 8007dd0:	d516      	bpl.n	8007e00 <HAL_RCC_OscConfig+0x14c>
 8007dd2:	6963      	ldr	r3, [r4, #20]
 8007dd4:	2b00      	cmp	r3, #0
 8007dd6:	f000 8121 	beq.w	800801c <HAL_RCC_OscConfig+0x368>
 8007dda:	2201      	movs	r2, #1
 8007ddc:	4b5b      	ldr	r3, [pc, #364]	; (8007f4c <HAL_RCC_OscConfig+0x298>)
 8007dde:	4f5a      	ldr	r7, [pc, #360]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007de0:	f8c3 2680 	str.w	r2, [r3, #1664]	; 0x680
 8007de4:	f7fd ffd0 	bl	8005d88 <HAL_GetTick>
 8007de8:	4606      	mov	r6, r0
 8007dea:	e005      	b.n	8007df8 <HAL_RCC_OscConfig+0x144>
 8007dec:	f7fd ffcc 	bl	8005d88 <HAL_GetTick>
 8007df0:	1b80      	subs	r0, r0, r6
 8007df2:	2802      	cmp	r0, #2
 8007df4:	f200 80f7 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007df8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007dfa:	079a      	lsls	r2, r3, #30
 8007dfc:	d5f6      	bpl.n	8007dec <HAL_RCC_OscConfig+0x138>
 8007dfe:	6823      	ldr	r3, [r4, #0]
 8007e00:	075e      	lsls	r6, r3, #29
 8007e02:	d53b      	bpl.n	8007e7c <HAL_RCC_OscConfig+0x1c8>
 8007e04:	4b50      	ldr	r3, [pc, #320]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007e06:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007e08:	00d0      	lsls	r0, r2, #3
 8007e0a:	f100 8129 	bmi.w	8008060 <HAL_RCC_OscConfig+0x3ac>
 8007e0e:	2601      	movs	r6, #1
 8007e10:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007e12:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007e16:	625a      	str	r2, [r3, #36]	; 0x24
 8007e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007e1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007e1e:	9301      	str	r3, [sp, #4]
 8007e20:	9b01      	ldr	r3, [sp, #4]
 8007e22:	4f4b      	ldr	r7, [pc, #300]	; (8007f50 <HAL_RCC_OscConfig+0x29c>)
 8007e24:	683b      	ldr	r3, [r7, #0]
 8007e26:	05d9      	lsls	r1, r3, #23
 8007e28:	f140 80cc 	bpl.w	8007fc4 <HAL_RCC_OscConfig+0x310>
 8007e2c:	68a3      	ldr	r3, [r4, #8]
 8007e2e:	2b01      	cmp	r3, #1
 8007e30:	f000 8175 	beq.w	800811e <HAL_RCC_OscConfig+0x46a>
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	f000 80a9 	beq.w	8007f8c <HAL_RCC_OscConfig+0x2d8>
 8007e3a:	2b05      	cmp	r3, #5
 8007e3c:	4b42      	ldr	r3, [pc, #264]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007e3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e40:	f000 818b 	beq.w	800815a <HAL_RCC_OscConfig+0x4a6>
 8007e44:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007e48:	635a      	str	r2, [r3, #52]	; 0x34
 8007e4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e4c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007e50:	635a      	str	r2, [r3, #52]	; 0x34
 8007e52:	f7fd ff99 	bl	8005d88 <HAL_GetTick>
 8007e56:	f241 3988 	movw	r9, #5000	; 0x1388
 8007e5a:	4607      	mov	r7, r0
 8007e5c:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 8007f48 <HAL_RCC_OscConfig+0x294>
 8007e60:	e005      	b.n	8007e6e <HAL_RCC_OscConfig+0x1ba>
 8007e62:	f7fd ff91 	bl	8005d88 <HAL_GetTick>
 8007e66:	1bc0      	subs	r0, r0, r7
 8007e68:	4548      	cmp	r0, r9
 8007e6a:	f200 80bc 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007e6e:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
 8007e72:	059b      	lsls	r3, r3, #22
 8007e74:	d5f5      	bpl.n	8007e62 <HAL_RCC_OscConfig+0x1ae>
 8007e76:	2e00      	cmp	r6, #0
 8007e78:	f040 814b 	bne.w	8008112 <HAL_RCC_OscConfig+0x45e>
 8007e7c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007e7e:	b1b8      	cbz	r0, 8007eb0 <HAL_RCC_OscConfig+0x1fc>
 8007e80:	2d0c      	cmp	r5, #12
 8007e82:	f000 8152 	beq.w	800812a <HAL_RCC_OscConfig+0x476>
 8007e86:	2802      	cmp	r0, #2
 8007e88:	f04f 0200 	mov.w	r2, #0
 8007e8c:	4b2f      	ldr	r3, [pc, #188]	; (8007f4c <HAL_RCC_OscConfig+0x298>)
 8007e8e:	f000 8116 	beq.w	80080be <HAL_RCC_OscConfig+0x40a>
 8007e92:	661a      	str	r2, [r3, #96]	; 0x60
 8007e94:	f7fd ff78 	bl	8005d88 <HAL_GetTick>
 8007e98:	4d2b      	ldr	r5, [pc, #172]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007e9a:	4604      	mov	r4, r0
 8007e9c:	e005      	b.n	8007eaa <HAL_RCC_OscConfig+0x1f6>
 8007e9e:	f7fd ff73 	bl	8005d88 <HAL_GetTick>
 8007ea2:	1b00      	subs	r0, r0, r4
 8007ea4:	2802      	cmp	r0, #2
 8007ea6:	f200 809e 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007eaa:	682b      	ldr	r3, [r5, #0]
 8007eac:	019b      	lsls	r3, r3, #6
 8007eae:	d4f6      	bmi.n	8007e9e <HAL_RCC_OscConfig+0x1ea>
 8007eb0:	2000      	movs	r0, #0
 8007eb2:	b003      	add	sp, #12
 8007eb4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007eb8:	4b23      	ldr	r3, [pc, #140]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	059a      	lsls	r2, r3, #22
 8007ebe:	d502      	bpl.n	8007ec6 <HAL_RCC_OscConfig+0x212>
 8007ec0:	69a3      	ldr	r3, [r4, #24]
 8007ec2:	2b00      	cmp	r3, #0
 8007ec4:	d03b      	beq.n	8007f3e <HAL_RCC_OscConfig+0x28a>
 8007ec6:	4e20      	ldr	r6, [pc, #128]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007ec8:	6a20      	ldr	r0, [r4, #32]
 8007eca:	6873      	ldr	r3, [r6, #4]
 8007ecc:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8007ed0:	4298      	cmp	r0, r3
 8007ed2:	f240 80d7 	bls.w	8008084 <HAL_RCC_OscConfig+0x3d0>
 8007ed6:	f7ff feab 	bl	8007c30 <RCC_SetFlashLatencyFromMSIRange>
 8007eda:	2800      	cmp	r0, #0
 8007edc:	d12f      	bne.n	8007f3e <HAL_RCC_OscConfig+0x28a>
 8007ede:	6872      	ldr	r2, [r6, #4]
 8007ee0:	6a23      	ldr	r3, [r4, #32]
 8007ee2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007ee6:	431a      	orrs	r2, r3
 8007ee8:	6072      	str	r2, [r6, #4]
 8007eea:	6872      	ldr	r2, [r6, #4]
 8007eec:	69e1      	ldr	r1, [r4, #28]
 8007eee:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007ef2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8007ef6:	6072      	str	r2, [r6, #4]
 8007ef8:	4a13      	ldr	r2, [pc, #76]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007efa:	0b5b      	lsrs	r3, r3, #13
 8007efc:	6891      	ldr	r1, [r2, #8]
 8007efe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8007f02:	3301      	adds	r3, #1
 8007f04:	fa02 f303 	lsl.w	r3, r2, r3
 8007f08:	4a12      	ldr	r2, [pc, #72]	; (8007f54 <HAL_RCC_OscConfig+0x2a0>)
 8007f0a:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8007f0e:	5c52      	ldrb	r2, [r2, r1]
 8007f10:	4811      	ldr	r0, [pc, #68]	; (8007f58 <HAL_RCC_OscConfig+0x2a4>)
 8007f12:	40d3      	lsrs	r3, r2
 8007f14:	4a11      	ldr	r2, [pc, #68]	; (8007f5c <HAL_RCC_OscConfig+0x2a8>)
 8007f16:	6003      	str	r3, [r0, #0]
 8007f18:	6810      	ldr	r0, [r2, #0]
 8007f1a:	f7fd fef3 	bl	8005d04 <HAL_InitTick>
 8007f1e:	2800      	cmp	r0, #0
 8007f20:	d1c7      	bne.n	8007eb2 <HAL_RCC_OscConfig+0x1fe>
 8007f22:	6823      	ldr	r3, [r4, #0]
 8007f24:	e753      	b.n	8007dce <HAL_RCC_OscConfig+0x11a>
 8007f26:	2e00      	cmp	r6, #0
 8007f28:	f43f aedb 	beq.w	8007ce2 <HAL_RCC_OscConfig+0x2e>
 8007f2c:	4a06      	ldr	r2, [pc, #24]	; (8007f48 <HAL_RCC_OscConfig+0x294>)
 8007f2e:	6812      	ldr	r2, [r2, #0]
 8007f30:	0392      	lsls	r2, r2, #14
 8007f32:	f57f aeff 	bpl.w	8007d34 <HAL_RCC_OscConfig+0x80>
 8007f36:	6862      	ldr	r2, [r4, #4]
 8007f38:	2a00      	cmp	r2, #0
 8007f3a:	f47f aefb 	bne.w	8007d34 <HAL_RCC_OscConfig+0x80>
 8007f3e:	2001      	movs	r0, #1
 8007f40:	b003      	add	sp, #12
 8007f42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007f46:	bf00      	nop
 8007f48:	40023800 	.word	0x40023800
 8007f4c:	42470000 	.word	0x42470000
 8007f50:	40007000 	.word	0x40007000
 8007f54:	080111d0 	.word	0x080111d0
 8007f58:	20000024 	.word	0x20000024
 8007f5c:	20000030 	.word	0x20000030
 8007f60:	2e00      	cmp	r6, #0
 8007f62:	f47f aeef 	bne.w	8007d44 <HAL_RCC_OscConfig+0x90>
 8007f66:	4a81      	ldr	r2, [pc, #516]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8007f68:	6812      	ldr	r2, [r2, #0]
 8007f6a:	0792      	lsls	r2, r2, #30
 8007f6c:	d502      	bpl.n	8007f74 <HAL_RCC_OscConfig+0x2c0>
 8007f6e:	68e2      	ldr	r2, [r4, #12]
 8007f70:	2a01      	cmp	r2, #1
 8007f72:	d1e4      	bne.n	8007f3e <HAL_RCC_OscConfig+0x28a>
 8007f74:	497d      	ldr	r1, [pc, #500]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8007f76:	6920      	ldr	r0, [r4, #16]
 8007f78:	684a      	ldr	r2, [r1, #4]
 8007f7a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8007f7e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8007f82:	604a      	str	r2, [r1, #4]
 8007f84:	06d9      	lsls	r1, r3, #27
 8007f86:	f57f af22 	bpl.w	8007dce <HAL_RCC_OscConfig+0x11a>
 8007f8a:	e6fa      	b.n	8007d82 <HAL_RCC_OscConfig+0xce>
 8007f8c:	4f77      	ldr	r7, [pc, #476]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8007f8e:	f241 3988 	movw	r9, #5000	; 0x1388
 8007f92:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f94:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007f98:	637b      	str	r3, [r7, #52]	; 0x34
 8007f9a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f9c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007fa0:	637b      	str	r3, [r7, #52]	; 0x34
 8007fa2:	f7fd fef1 	bl	8005d88 <HAL_GetTick>
 8007fa6:	4680      	mov	r8, r0
 8007fa8:	e005      	b.n	8007fb6 <HAL_RCC_OscConfig+0x302>
 8007faa:	f7fd feed 	bl	8005d88 <HAL_GetTick>
 8007fae:	eba0 0008 	sub.w	r0, r0, r8
 8007fb2:	4548      	cmp	r0, r9
 8007fb4:	d817      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 8007fb6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007fb8:	0598      	lsls	r0, r3, #22
 8007fba:	d4f6      	bmi.n	8007faa <HAL_RCC_OscConfig+0x2f6>
 8007fbc:	2e00      	cmp	r6, #0
 8007fbe:	f43f af5d 	beq.w	8007e7c <HAL_RCC_OscConfig+0x1c8>
 8007fc2:	e0a6      	b.n	8008112 <HAL_RCC_OscConfig+0x45e>
 8007fc4:	683b      	ldr	r3, [r7, #0]
 8007fc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007fca:	603b      	str	r3, [r7, #0]
 8007fcc:	f7fd fedc 	bl	8005d88 <HAL_GetTick>
 8007fd0:	4680      	mov	r8, r0
 8007fd2:	683b      	ldr	r3, [r7, #0]
 8007fd4:	05da      	lsls	r2, r3, #23
 8007fd6:	f53f af29 	bmi.w	8007e2c <HAL_RCC_OscConfig+0x178>
 8007fda:	f7fd fed5 	bl	8005d88 <HAL_GetTick>
 8007fde:	eba0 0008 	sub.w	r0, r0, r8
 8007fe2:	2864      	cmp	r0, #100	; 0x64
 8007fe4:	d9f5      	bls.n	8007fd2 <HAL_RCC_OscConfig+0x31e>
 8007fe6:	2003      	movs	r0, #3
 8007fe8:	b003      	add	sp, #12
 8007fea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007fee:	4f5f      	ldr	r7, [pc, #380]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8007ff0:	683b      	ldr	r3, [r7, #0]
 8007ff2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007ff6:	603b      	str	r3, [r7, #0]
 8007ff8:	683b      	ldr	r3, [r7, #0]
 8007ffa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007ffe:	603b      	str	r3, [r7, #0]
 8008000:	f7fd fec2 	bl	8005d88 <HAL_GetTick>
 8008004:	4680      	mov	r8, r0
 8008006:	e005      	b.n	8008014 <HAL_RCC_OscConfig+0x360>
 8008008:	f7fd febe 	bl	8005d88 <HAL_GetTick>
 800800c:	eba0 0008 	sub.w	r0, r0, r8
 8008010:	2864      	cmp	r0, #100	; 0x64
 8008012:	d8e8      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 8008014:	683b      	ldr	r3, [r7, #0]
 8008016:	0398      	lsls	r0, r3, #14
 8008018:	d4f6      	bmi.n	8008008 <HAL_RCC_OscConfig+0x354>
 800801a:	e68a      	b.n	8007d32 <HAL_RCC_OscConfig+0x7e>
 800801c:	4a54      	ldr	r2, [pc, #336]	; (8008170 <HAL_RCC_OscConfig+0x4bc>)
 800801e:	4f53      	ldr	r7, [pc, #332]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008020:	f8c2 3680 	str.w	r3, [r2, #1664]	; 0x680
 8008024:	f7fd feb0 	bl	8005d88 <HAL_GetTick>
 8008028:	4606      	mov	r6, r0
 800802a:	e004      	b.n	8008036 <HAL_RCC_OscConfig+0x382>
 800802c:	f7fd feac 	bl	8005d88 <HAL_GetTick>
 8008030:	1b80      	subs	r0, r0, r6
 8008032:	2802      	cmp	r0, #2
 8008034:	d8d7      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 8008036:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008038:	079b      	lsls	r3, r3, #30
 800803a:	d4f7      	bmi.n	800802c <HAL_RCC_OscConfig+0x378>
 800803c:	e6df      	b.n	8007dfe <HAL_RCC_OscConfig+0x14a>
 800803e:	4a4c      	ldr	r2, [pc, #304]	; (8008170 <HAL_RCC_OscConfig+0x4bc>)
 8008040:	4f4a      	ldr	r7, [pc, #296]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008042:	6013      	str	r3, [r2, #0]
 8008044:	f7fd fea0 	bl	8005d88 <HAL_GetTick>
 8008048:	4606      	mov	r6, r0
 800804a:	e004      	b.n	8008056 <HAL_RCC_OscConfig+0x3a2>
 800804c:	f7fd fe9c 	bl	8005d88 <HAL_GetTick>
 8008050:	1b80      	subs	r0, r0, r6
 8008052:	2802      	cmp	r0, #2
 8008054:	d8c7      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 8008056:	683b      	ldr	r3, [r7, #0]
 8008058:	0798      	lsls	r0, r3, #30
 800805a:	d4f7      	bmi.n	800804c <HAL_RCC_OscConfig+0x398>
 800805c:	6823      	ldr	r3, [r4, #0]
 800805e:	e68e      	b.n	8007d7e <HAL_RCC_OscConfig+0xca>
 8008060:	2600      	movs	r6, #0
 8008062:	e6de      	b.n	8007e22 <HAL_RCC_OscConfig+0x16e>
 8008064:	4a42      	ldr	r2, [pc, #264]	; (8008170 <HAL_RCC_OscConfig+0x4bc>)
 8008066:	4f41      	ldr	r7, [pc, #260]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008068:	6213      	str	r3, [r2, #32]
 800806a:	f7fd fe8d 	bl	8005d88 <HAL_GetTick>
 800806e:	4606      	mov	r6, r0
 8008070:	e004      	b.n	800807c <HAL_RCC_OscConfig+0x3c8>
 8008072:	f7fd fe89 	bl	8005d88 <HAL_GetTick>
 8008076:	1b80      	subs	r0, r0, r6
 8008078:	2802      	cmp	r0, #2
 800807a:	d8b4      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 800807c:	683b      	ldr	r3, [r7, #0]
 800807e:	0598      	lsls	r0, r3, #22
 8008080:	d4f7      	bmi.n	8008072 <HAL_RCC_OscConfig+0x3be>
 8008082:	e74e      	b.n	8007f22 <HAL_RCC_OscConfig+0x26e>
 8008084:	6873      	ldr	r3, [r6, #4]
 8008086:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800808a:	4303      	orrs	r3, r0
 800808c:	6073      	str	r3, [r6, #4]
 800808e:	6873      	ldr	r3, [r6, #4]
 8008090:	69e2      	ldr	r2, [r4, #28]
 8008092:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8008096:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800809a:	6073      	str	r3, [r6, #4]
 800809c:	f7ff fdc8 	bl	8007c30 <RCC_SetFlashLatencyFromMSIRange>
 80080a0:	2800      	cmp	r0, #0
 80080a2:	f47f af4c 	bne.w	8007f3e <HAL_RCC_OscConfig+0x28a>
 80080a6:	6a23      	ldr	r3, [r4, #32]
 80080a8:	e726      	b.n	8007ef8 <HAL_RCC_OscConfig+0x244>
 80080aa:	2001      	movs	r0, #1
 80080ac:	4770      	bx	lr
 80080ae:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80080b2:	601a      	str	r2, [r3, #0]
 80080b4:	681a      	ldr	r2, [r3, #0]
 80080b6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80080ba:	601a      	str	r2, [r3, #0]
 80080bc:	e629      	b.n	8007d12 <HAL_RCC_OscConfig+0x5e>
 80080be:	661a      	str	r2, [r3, #96]	; 0x60
 80080c0:	f7fd fe62 	bl	8005d88 <HAL_GetTick>
 80080c4:	4e29      	ldr	r6, [pc, #164]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 80080c6:	4605      	mov	r5, r0
 80080c8:	e004      	b.n	80080d4 <HAL_RCC_OscConfig+0x420>
 80080ca:	f7fd fe5d 	bl	8005d88 <HAL_GetTick>
 80080ce:	1b40      	subs	r0, r0, r5
 80080d0:	2802      	cmp	r0, #2
 80080d2:	d888      	bhi.n	8007fe6 <HAL_RCC_OscConfig+0x332>
 80080d4:	6833      	ldr	r3, [r6, #0]
 80080d6:	0199      	lsls	r1, r3, #6
 80080d8:	d4f7      	bmi.n	80080ca <HAL_RCC_OscConfig+0x416>
 80080da:	e9d4 310a 	ldrd	r3, r1, [r4, #40]	; 0x28
 80080de:	430b      	orrs	r3, r1
 80080e0:	2101      	movs	r1, #1
 80080e2:	68b2      	ldr	r2, [r6, #8]
 80080e4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80080e6:	f422 027d 	bic.w	r2, r2, #16580608	; 0xfd0000
 80080ea:	4313      	orrs	r3, r2
 80080ec:	4a20      	ldr	r2, [pc, #128]	; (8008170 <HAL_RCC_OscConfig+0x4bc>)
 80080ee:	4303      	orrs	r3, r0
 80080f0:	60b3      	str	r3, [r6, #8]
 80080f2:	6611      	str	r1, [r2, #96]	; 0x60
 80080f4:	f7fd fe48 	bl	8005d88 <HAL_GetTick>
 80080f8:	4d1c      	ldr	r5, [pc, #112]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 80080fa:	4604      	mov	r4, r0
 80080fc:	e005      	b.n	800810a <HAL_RCC_OscConfig+0x456>
 80080fe:	f7fd fe43 	bl	8005d88 <HAL_GetTick>
 8008102:	1b00      	subs	r0, r0, r4
 8008104:	2802      	cmp	r0, #2
 8008106:	f63f af6e 	bhi.w	8007fe6 <HAL_RCC_OscConfig+0x332>
 800810a:	682b      	ldr	r3, [r5, #0]
 800810c:	019a      	lsls	r2, r3, #6
 800810e:	d5f6      	bpl.n	80080fe <HAL_RCC_OscConfig+0x44a>
 8008110:	e6ce      	b.n	8007eb0 <HAL_RCC_OscConfig+0x1fc>
 8008112:	4a16      	ldr	r2, [pc, #88]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008114:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8008116:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800811a:	6253      	str	r3, [r2, #36]	; 0x24
 800811c:	e6ae      	b.n	8007e7c <HAL_RCC_OscConfig+0x1c8>
 800811e:	4a13      	ldr	r2, [pc, #76]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008120:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008122:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008126:	6353      	str	r3, [r2, #52]	; 0x34
 8008128:	e693      	b.n	8007e52 <HAL_RCC_OscConfig+0x19e>
 800812a:	2801      	cmp	r0, #1
 800812c:	f43f aec1 	beq.w	8007eb2 <HAL_RCC_OscConfig+0x1fe>
 8008130:	4b0e      	ldr	r3, [pc, #56]	; (800816c <HAL_RCC_OscConfig+0x4b8>)
 8008132:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008134:	689b      	ldr	r3, [r3, #8]
 8008136:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 800813a:	4291      	cmp	r1, r2
 800813c:	f47f aeff 	bne.w	8007f3e <HAL_RCC_OscConfig+0x28a>
 8008140:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008142:	f403 1170 	and.w	r1, r3, #3932160	; 0x3c0000
 8008146:	4291      	cmp	r1, r2
 8008148:	f47f aef9 	bne.w	8007f3e <HAL_RCC_OscConfig+0x28a>
 800814c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800814e:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8008152:	1a18      	subs	r0, r3, r0
 8008154:	bf18      	it	ne
 8008156:	2001      	movne	r0, #1
 8008158:	e6ab      	b.n	8007eb2 <HAL_RCC_OscConfig+0x1fe>
 800815a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800815e:	635a      	str	r2, [r3, #52]	; 0x34
 8008160:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008162:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008166:	635a      	str	r2, [r3, #52]	; 0x34
 8008168:	e673      	b.n	8007e52 <HAL_RCC_OscConfig+0x19e>
 800816a:	bf00      	nop
 800816c:	40023800 	.word	0x40023800
 8008170:	42470000 	.word	0x42470000

08008174 <HAL_RCC_ClockConfig>:
 8008174:	2800      	cmp	r0, #0
 8008176:	f000 80c2 	beq.w	80082fe <HAL_RCC_ClockConfig+0x18a>
 800817a:	4a85      	ldr	r2, [pc, #532]	; (8008390 <HAL_RCC_ClockConfig+0x21c>)
 800817c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008180:	6813      	ldr	r3, [r2, #0]
 8008182:	4604      	mov	r4, r0
 8008184:	f003 0301 	and.w	r3, r3, #1
 8008188:	428b      	cmp	r3, r1
 800818a:	460d      	mov	r5, r1
 800818c:	d213      	bcs.n	80081b6 <HAL_RCC_ClockConfig+0x42>
 800818e:	2901      	cmp	r1, #1
 8008190:	d103      	bne.n	800819a <HAL_RCC_ClockConfig+0x26>
 8008192:	6813      	ldr	r3, [r2, #0]
 8008194:	f043 0304 	orr.w	r3, r3, #4
 8008198:	6013      	str	r3, [r2, #0]
 800819a:	4a7d      	ldr	r2, [pc, #500]	; (8008390 <HAL_RCC_ClockConfig+0x21c>)
 800819c:	6813      	ldr	r3, [r2, #0]
 800819e:	f023 0301 	bic.w	r3, r3, #1
 80081a2:	432b      	orrs	r3, r5
 80081a4:	6013      	str	r3, [r2, #0]
 80081a6:	6813      	ldr	r3, [r2, #0]
 80081a8:	f003 0301 	and.w	r3, r3, #1
 80081ac:	42ab      	cmp	r3, r5
 80081ae:	d002      	beq.n	80081b6 <HAL_RCC_ClockConfig+0x42>
 80081b0:	2001      	movs	r0, #1
 80081b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081b6:	6823      	ldr	r3, [r4, #0]
 80081b8:	0799      	lsls	r1, r3, #30
 80081ba:	d506      	bpl.n	80081ca <HAL_RCC_ClockConfig+0x56>
 80081bc:	4975      	ldr	r1, [pc, #468]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 80081be:	68a0      	ldr	r0, [r4, #8]
 80081c0:	688a      	ldr	r2, [r1, #8]
 80081c2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80081c6:	4302      	orrs	r2, r0
 80081c8:	608a      	str	r2, [r1, #8]
 80081ca:	07da      	lsls	r2, r3, #31
 80081cc:	d529      	bpl.n	8008222 <HAL_RCC_ClockConfig+0xae>
 80081ce:	6862      	ldr	r2, [r4, #4]
 80081d0:	4b70      	ldr	r3, [pc, #448]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 80081d2:	2a02      	cmp	r2, #2
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	f000 808e 	beq.w	80082f6 <HAL_RCC_ClockConfig+0x182>
 80081da:	2a03      	cmp	r2, #3
 80081dc:	f000 8085 	beq.w	80082ea <HAL_RCC_ClockConfig+0x176>
 80081e0:	2a01      	cmp	r2, #1
 80081e2:	f000 80d1 	beq.w	8008388 <HAL_RCC_ClockConfig+0x214>
 80081e6:	0598      	lsls	r0, r3, #22
 80081e8:	d5e2      	bpl.n	80081b0 <HAL_RCC_ClockConfig+0x3c>
 80081ea:	4e6a      	ldr	r6, [pc, #424]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 80081ec:	f241 3888 	movw	r8, #5000	; 0x1388
 80081f0:	68b3      	ldr	r3, [r6, #8]
 80081f2:	f023 0303 	bic.w	r3, r3, #3
 80081f6:	4313      	orrs	r3, r2
 80081f8:	60b3      	str	r3, [r6, #8]
 80081fa:	f7fd fdc5 	bl	8005d88 <HAL_GetTick>
 80081fe:	6863      	ldr	r3, [r4, #4]
 8008200:	4607      	mov	r7, r0
 8008202:	2b02      	cmp	r3, #2
 8008204:	d055      	beq.n	80082b2 <HAL_RCC_ClockConfig+0x13e>
 8008206:	2b03      	cmp	r3, #3
 8008208:	d05e      	beq.n	80082c8 <HAL_RCC_ClockConfig+0x154>
 800820a:	2b01      	cmp	r3, #1
 800820c:	d105      	bne.n	800821a <HAL_RCC_ClockConfig+0xa6>
 800820e:	e066      	b.n	80082de <HAL_RCC_ClockConfig+0x16a>
 8008210:	f7fd fdba 	bl	8005d88 <HAL_GetTick>
 8008214:	1bc0      	subs	r0, r0, r7
 8008216:	4540      	cmp	r0, r8
 8008218:	d873      	bhi.n	8008302 <HAL_RCC_ClockConfig+0x18e>
 800821a:	68b3      	ldr	r3, [r6, #8]
 800821c:	f013 0f0c 	tst.w	r3, #12
 8008220:	d1f6      	bne.n	8008210 <HAL_RCC_ClockConfig+0x9c>
 8008222:	4a5b      	ldr	r2, [pc, #364]	; (8008390 <HAL_RCC_ClockConfig+0x21c>)
 8008224:	6813      	ldr	r3, [r2, #0]
 8008226:	f003 0301 	and.w	r3, r3, #1
 800822a:	42ab      	cmp	r3, r5
 800822c:	d906      	bls.n	800823c <HAL_RCC_ClockConfig+0xc8>
 800822e:	6813      	ldr	r3, [r2, #0]
 8008230:	f023 0301 	bic.w	r3, r3, #1
 8008234:	6013      	str	r3, [r2, #0]
 8008236:	6813      	ldr	r3, [r2, #0]
 8008238:	07da      	lsls	r2, r3, #31
 800823a:	d4b9      	bmi.n	80081b0 <HAL_RCC_ClockConfig+0x3c>
 800823c:	6823      	ldr	r3, [r4, #0]
 800823e:	0759      	lsls	r1, r3, #29
 8008240:	d506      	bpl.n	8008250 <HAL_RCC_ClockConfig+0xdc>
 8008242:	4954      	ldr	r1, [pc, #336]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 8008244:	68e0      	ldr	r0, [r4, #12]
 8008246:	688a      	ldr	r2, [r1, #8]
 8008248:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800824c:	4302      	orrs	r2, r0
 800824e:	608a      	str	r2, [r1, #8]
 8008250:	071b      	lsls	r3, r3, #28
 8008252:	d420      	bmi.n	8008296 <HAL_RCC_ClockConfig+0x122>
 8008254:	494f      	ldr	r1, [pc, #316]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 8008256:	688a      	ldr	r2, [r1, #8]
 8008258:	f002 030c 	and.w	r3, r2, #12
 800825c:	2b08      	cmp	r3, #8
 800825e:	d079      	beq.n	8008354 <HAL_RCC_ClockConfig+0x1e0>
 8008260:	2b0c      	cmp	r3, #12
 8008262:	d050      	beq.n	8008306 <HAL_RCC_ClockConfig+0x192>
 8008264:	2b04      	cmp	r3, #4
 8008266:	d044      	beq.n	80082f2 <HAL_RCC_ClockConfig+0x17e>
 8008268:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800826c:	684b      	ldr	r3, [r1, #4]
 800826e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8008272:	3301      	adds	r3, #1
 8008274:	4098      	lsls	r0, r3
 8008276:	4b47      	ldr	r3, [pc, #284]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 8008278:	4a47      	ldr	r2, [pc, #284]	; (8008398 <HAL_RCC_ClockConfig+0x224>)
 800827a:	689b      	ldr	r3, [r3, #8]
 800827c:	4947      	ldr	r1, [pc, #284]	; (800839c <HAL_RCC_ClockConfig+0x228>)
 800827e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008282:	5cd3      	ldrb	r3, [r2, r3]
 8008284:	4a46      	ldr	r2, [pc, #280]	; (80083a0 <HAL_RCC_ClockConfig+0x22c>)
 8008286:	fa20 f303 	lsr.w	r3, r0, r3
 800828a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800828e:	6808      	ldr	r0, [r1, #0]
 8008290:	6013      	str	r3, [r2, #0]
 8008292:	f7fd bd37 	b.w	8005d04 <HAL_InitTick>
 8008296:	4a3f      	ldr	r2, [pc, #252]	; (8008394 <HAL_RCC_ClockConfig+0x220>)
 8008298:	6921      	ldr	r1, [r4, #16]
 800829a:	6893      	ldr	r3, [r2, #8]
 800829c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80082a0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80082a4:	6093      	str	r3, [r2, #8]
 80082a6:	e7d5      	b.n	8008254 <HAL_RCC_ClockConfig+0xe0>
 80082a8:	f7fd fd6e 	bl	8005d88 <HAL_GetTick>
 80082ac:	1bc3      	subs	r3, r0, r7
 80082ae:	4543      	cmp	r3, r8
 80082b0:	d827      	bhi.n	8008302 <HAL_RCC_ClockConfig+0x18e>
 80082b2:	68b3      	ldr	r3, [r6, #8]
 80082b4:	f003 030c 	and.w	r3, r3, #12
 80082b8:	2b08      	cmp	r3, #8
 80082ba:	d1f5      	bne.n	80082a8 <HAL_RCC_ClockConfig+0x134>
 80082bc:	e7b1      	b.n	8008222 <HAL_RCC_ClockConfig+0xae>
 80082be:	f7fd fd63 	bl	8005d88 <HAL_GetTick>
 80082c2:	1bc0      	subs	r0, r0, r7
 80082c4:	4540      	cmp	r0, r8
 80082c6:	d81c      	bhi.n	8008302 <HAL_RCC_ClockConfig+0x18e>
 80082c8:	68b3      	ldr	r3, [r6, #8]
 80082ca:	f003 030c 	and.w	r3, r3, #12
 80082ce:	2b0c      	cmp	r3, #12
 80082d0:	d1f5      	bne.n	80082be <HAL_RCC_ClockConfig+0x14a>
 80082d2:	e7a6      	b.n	8008222 <HAL_RCC_ClockConfig+0xae>
 80082d4:	f7fd fd58 	bl	8005d88 <HAL_GetTick>
 80082d8:	1bc0      	subs	r0, r0, r7
 80082da:	4540      	cmp	r0, r8
 80082dc:	d811      	bhi.n	8008302 <HAL_RCC_ClockConfig+0x18e>
 80082de:	68b3      	ldr	r3, [r6, #8]
 80082e0:	f003 030c 	and.w	r3, r3, #12
 80082e4:	2b04      	cmp	r3, #4
 80082e6:	d1f5      	bne.n	80082d4 <HAL_RCC_ClockConfig+0x160>
 80082e8:	e79b      	b.n	8008222 <HAL_RCC_ClockConfig+0xae>
 80082ea:	019f      	lsls	r7, r3, #6
 80082ec:	f53f af7d 	bmi.w	80081ea <HAL_RCC_ClockConfig+0x76>
 80082f0:	e75e      	b.n	80081b0 <HAL_RCC_ClockConfig+0x3c>
 80082f2:	482c      	ldr	r0, [pc, #176]	; (80083a4 <HAL_RCC_ClockConfig+0x230>)
 80082f4:	e7bf      	b.n	8008276 <HAL_RCC_ClockConfig+0x102>
 80082f6:	039b      	lsls	r3, r3, #14
 80082f8:	f53f af77 	bmi.w	80081ea <HAL_RCC_ClockConfig+0x76>
 80082fc:	e758      	b.n	80081b0 <HAL_RCC_ClockConfig+0x3c>
 80082fe:	2001      	movs	r0, #1
 8008300:	4770      	bx	lr
 8008302:	2003      	movs	r0, #3
 8008304:	e755      	b.n	80081b2 <HAL_RCC_ClockConfig+0x3e>
 8008306:	4828      	ldr	r0, [pc, #160]	; (80083a8 <HAL_RCC_ClockConfig+0x234>)
 8008308:	688b      	ldr	r3, [r1, #8]
 800830a:	f3c2 4183 	ubfx	r1, r2, #18, #4
 800830e:	5c44      	ldrb	r4, [r0, r1]
 8008310:	f3c2 5281 	ubfx	r2, r2, #22, #2
 8008314:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8008318:	f102 0201 	add.w	r2, r2, #1
 800831c:	ea4f 1144 	mov.w	r1, r4, lsl #5
 8008320:	d01a      	beq.n	8008358 <HAL_RCC_ClockConfig+0x1e4>
 8008322:	1b09      	subs	r1, r1, r4
 8008324:	eb65 0505 	sbc.w	r5, r5, r5
 8008328:	01ab      	lsls	r3, r5, #6
 800832a:	0188      	lsls	r0, r1, #6
 800832c:	1a40      	subs	r0, r0, r1
 800832e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008332:	eb63 0305 	sbc.w	r3, r3, r5
 8008336:	00c1      	lsls	r1, r0, #3
 8008338:	00db      	lsls	r3, r3, #3
 800833a:	190c      	adds	r4, r1, r4
 800833c:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8008340:	f143 0300 	adc.w	r3, r3, #0
 8008344:	0259      	lsls	r1, r3, #9
 8008346:	0260      	lsls	r0, r4, #9
 8008348:	2300      	movs	r3, #0
 800834a:	ea41 51d4 	orr.w	r1, r1, r4, lsr #23
 800834e:	f7f8 ff21 	bl	8001194 <__aeabi_uldivmod>
 8008352:	e790      	b.n	8008276 <HAL_RCC_ClockConfig+0x102>
 8008354:	4815      	ldr	r0, [pc, #84]	; (80083ac <HAL_RCC_ClockConfig+0x238>)
 8008356:	e78e      	b.n	8008276 <HAL_RCC_ClockConfig+0x102>
 8008358:	1b0d      	subs	r5, r1, r4
 800835a:	eb66 0606 	sbc.w	r6, r6, r6
 800835e:	01b0      	lsls	r0, r6, #6
 8008360:	01a9      	lsls	r1, r5, #6
 8008362:	1b49      	subs	r1, r1, r5
 8008364:	ea40 6095 	orr.w	r0, r0, r5, lsr #26
 8008368:	eb60 0006 	sbc.w	r0, r0, r6
 800836c:	00c0      	lsls	r0, r0, #3
 800836e:	ea40 7051 	orr.w	r0, r0, r1, lsr #29
 8008372:	00c9      	lsls	r1, r1, #3
 8008374:	190c      	adds	r4, r1, r4
 8008376:	f140 0000 	adc.w	r0, r0, #0
 800837a:	0281      	lsls	r1, r0, #10
 800837c:	ea41 5194 	orr.w	r1, r1, r4, lsr #22
 8008380:	02a0      	lsls	r0, r4, #10
 8008382:	f7f8 ff07 	bl	8001194 <__aeabi_uldivmod>
 8008386:	e776      	b.n	8008276 <HAL_RCC_ClockConfig+0x102>
 8008388:	079e      	lsls	r6, r3, #30
 800838a:	f53f af2e 	bmi.w	80081ea <HAL_RCC_ClockConfig+0x76>
 800838e:	e70f      	b.n	80081b0 <HAL_RCC_ClockConfig+0x3c>
 8008390:	40023c00 	.word	0x40023c00
 8008394:	40023800 	.word	0x40023800
 8008398:	080111d0 	.word	0x080111d0
 800839c:	20000030 	.word	0x20000030
 80083a0:	20000024 	.word	0x20000024
 80083a4:	00f42400 	.word	0x00f42400
 80083a8:	080111c4 	.word	0x080111c4
 80083ac:	007a1200 	.word	0x007a1200

080083b0 <HAL_RCC_GetPCLK1Freq>:
 80083b0:	4b04      	ldr	r3, [pc, #16]	; (80083c4 <HAL_RCC_GetPCLK1Freq+0x14>)
 80083b2:	4a05      	ldr	r2, [pc, #20]	; (80083c8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80083b4:	689b      	ldr	r3, [r3, #8]
 80083b6:	4905      	ldr	r1, [pc, #20]	; (80083cc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80083b8:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80083bc:	5ccb      	ldrb	r3, [r1, r3]
 80083be:	6810      	ldr	r0, [r2, #0]
 80083c0:	40d8      	lsrs	r0, r3
 80083c2:	4770      	bx	lr
 80083c4:	40023800 	.word	0x40023800
 80083c8:	20000024 	.word	0x20000024
 80083cc:	080111e0 	.word	0x080111e0

080083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80083d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083d4:	461d      	mov	r5, r3
 80083d6:	4616      	mov	r6, r2
 80083d8:	b082      	sub	sp, #8
 80083da:	460c      	mov	r4, r1
 80083dc:	4607      	mov	r7, r0
 80083de:	f7fd fcd3 	bl	8005d88 <HAL_GetTick>
 80083e2:	4435      	add	r5, r6
 80083e4:	1a2d      	subs	r5, r5, r0
 80083e6:	f7fd fccf 	bl	8005d88 <HAL_GetTick>
 80083ea:	4680      	mov	r8, r0
 80083ec:	4b26      	ldr	r3, [pc, #152]	; (8008488 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 80083ee:	681b      	ldr	r3, [r3, #0]
 80083f0:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80083f4:	fb05 f303 	mul.w	r3, r5, r3
 80083f8:	9301      	str	r3, [sp, #4]
 80083fa:	1c73      	adds	r3, r6, #1
 80083fc:	6839      	ldr	r1, [r7, #0]
 80083fe:	d107      	bne.n	8008410 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 8008400:	688b      	ldr	r3, [r1, #8]
 8008402:	ea34 0303 	bics.w	r3, r4, r3
 8008406:	d0fb      	beq.n	8008400 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
 8008408:	2000      	movs	r0, #0
 800840a:	b002      	add	sp, #8
 800840c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008410:	688b      	ldr	r3, [r1, #8]
 8008412:	ea34 0303 	bics.w	r3, r4, r3
 8008416:	d1f7      	bne.n	8008408 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
 8008418:	f7fd fcb6 	bl	8005d88 <HAL_GetTick>
 800841c:	eba0 0308 	sub.w	r3, r0, r8
 8008420:	42ab      	cmp	r3, r5
 8008422:	d207      	bcs.n	8008434 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
 8008424:	9b01      	ldr	r3, [sp, #4]
 8008426:	2b00      	cmp	r3, #0
 8008428:	9b01      	ldr	r3, [sp, #4]
 800842a:	bf08      	it	eq
 800842c:	2500      	moveq	r5, #0
 800842e:	3b01      	subs	r3, #1
 8008430:	9301      	str	r3, [sp, #4]
 8008432:	e7e2      	b.n	80083fa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
 8008434:	e9d7 3100 	ldrd	r3, r1, [r7]
 8008438:	685a      	ldr	r2, [r3, #4]
 800843a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 800843e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008442:	605a      	str	r2, [r3, #4]
 8008444:	d014      	beq.n	8008470 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
 8008446:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008448:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800844c:	d007      	beq.n	800845e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8e>
 800844e:	2201      	movs	r2, #1
 8008450:	2300      	movs	r3, #0
 8008452:	2003      	movs	r0, #3
 8008454:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
 8008458:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800845c:	e7d5      	b.n	800840a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
 800845e:	681a      	ldr	r2, [r3, #0]
 8008460:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008464:	601a      	str	r2, [r3, #0]
 8008466:	681a      	ldr	r2, [r3, #0]
 8008468:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800846c:	601a      	str	r2, [r3, #0]
 800846e:	e7ee      	b.n	800844e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
 8008470:	68ba      	ldr	r2, [r7, #8]
 8008472:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008476:	d002      	beq.n	800847e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
 8008478:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800847c:	d1e3      	bne.n	8008446 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 800847e:	681a      	ldr	r2, [r3, #0]
 8008480:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008484:	601a      	str	r2, [r3, #0]
 8008486:	e7de      	b.n	8008446 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8008488:	20000024 	.word	0x20000024

0800848c <HAL_SPI_Init>:
 800848c:	2800      	cmp	r0, #0
 800848e:	d053      	beq.n	8008538 <HAL_SPI_Init+0xac>
 8008490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008492:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8008494:	4604      	mov	r4, r0
 8008496:	2b00      	cmp	r3, #0
 8008498:	d03f      	beq.n	800851a <HAL_SPI_Init+0x8e>
 800849a:	2300      	movs	r3, #0
 800849c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80084a0:	2000      	movs	r0, #0
 80084a2:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 80084a6:	62a0      	str	r0, [r4, #40]	; 0x28
 80084a8:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80084ac:	2a00      	cmp	r2, #0
 80084ae:	d03a      	beq.n	8008526 <HAL_SPI_Init+0x9a>
 80084b0:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 80084b4:	2702      	movs	r7, #2
 80084b6:	f04f 0c01 	mov.w	ip, #1
 80084ba:	2600      	movs	r6, #0
 80084bc:	f402 4204 	and.w	r2, r2, #33792	; 0x8400
 80084c0:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80084c4:	4313      	orrs	r3, r2
 80084c6:	68e2      	ldr	r2, [r4, #12]
 80084c8:	f884 7051 	strb.w	r7, [r4, #81]	; 0x51
 80084cc:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 80084d0:	4313      	orrs	r3, r2
 80084d2:	6922      	ldr	r2, [r4, #16]
 80084d4:	69a1      	ldr	r1, [r4, #24]
 80084d6:	403a      	ands	r2, r7
 80084d8:	4313      	orrs	r3, r2
 80084da:	6962      	ldr	r2, [r4, #20]
 80084dc:	6825      	ldr	r5, [r4, #0]
 80084de:	ea02 020c 	and.w	r2, r2, ip
 80084e2:	431a      	orrs	r2, r3
 80084e4:	69e3      	ldr	r3, [r4, #28]
 80084e6:	f003 0738 	and.w	r7, r3, #56	; 0x38
 80084ea:	6a23      	ldr	r3, [r4, #32]
 80084ec:	f003 0e80 	and.w	lr, r3, #128	; 0x80
 80084f0:	f401 7300 	and.w	r3, r1, #512	; 0x200
 80084f4:	4313      	orrs	r3, r2
 80084f6:	433b      	orrs	r3, r7
 80084f8:	682a      	ldr	r2, [r5, #0]
 80084fa:	ea43 030e 	orr.w	r3, r3, lr
 80084fe:	0c09      	lsrs	r1, r1, #16
 8008500:	4303      	orrs	r3, r0
 8008502:	f001 0104 	and.w	r1, r1, #4
 8008506:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800850a:	602a      	str	r2, [r5, #0]
 800850c:	602b      	str	r3, [r5, #0]
 800850e:	6069      	str	r1, [r5, #4]
 8008510:	6566      	str	r6, [r4, #84]	; 0x54
 8008512:	f884 c051 	strb.w	ip, [r4, #81]	; 0x51
 8008516:	4630      	mov	r0, r6
 8008518:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800851a:	6842      	ldr	r2, [r0, #4]
 800851c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008520:	d0be      	beq.n	80084a0 <HAL_SPI_Init+0x14>
 8008522:	61c3      	str	r3, [r0, #28]
 8008524:	e7bc      	b.n	80084a0 <HAL_SPI_Init+0x14>
 8008526:	4620      	mov	r0, r4
 8008528:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
 800852c:	f7fc ffba 	bl	80054a4 <HAL_SPI_MspInit>
 8008530:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008532:	f403 5000 	and.w	r0, r3, #8192	; 0x2000
 8008536:	e7bb      	b.n	80084b0 <HAL_SPI_Init+0x24>
 8008538:	2001      	movs	r0, #1
 800853a:	4770      	bx	lr

0800853c <HAL_SPI_Transmit>:
 800853c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008540:	461d      	mov	r5, r3
 8008542:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8008546:	b082      	sub	sp, #8
 8008548:	2b01      	cmp	r3, #1
 800854a:	f000 8088 	beq.w	800865e <HAL_SPI_Transmit+0x122>
 800854e:	2301      	movs	r3, #1
 8008550:	4604      	mov	r4, r0
 8008552:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8008556:	4688      	mov	r8, r1
 8008558:	4617      	mov	r7, r2
 800855a:	f7fd fc15 	bl	8005d88 <HAL_GetTick>
 800855e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008562:	4606      	mov	r6, r0
 8008564:	2b01      	cmp	r3, #1
 8008566:	b2d8      	uxtb	r0, r3
 8008568:	d009      	beq.n	800857e <HAL_SPI_Transmit+0x42>
 800856a:	2002      	movs	r0, #2
 800856c:	2201      	movs	r2, #1
 800856e:	2300      	movs	r3, #0
 8008570:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008574:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008578:	b002      	add	sp, #8
 800857a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800857e:	f1b8 0f00 	cmp.w	r8, #0
 8008582:	d0f3      	beq.n	800856c <HAL_SPI_Transmit+0x30>
 8008584:	2f00      	cmp	r7, #0
 8008586:	d0f1      	beq.n	800856c <HAL_SPI_Transmit+0x30>
 8008588:	2300      	movs	r3, #0
 800858a:	2203      	movs	r2, #3
 800858c:	63a3      	str	r3, [r4, #56]	; 0x38
 800858e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008592:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8008594:	6563      	str	r3, [r4, #84]	; 0x54
 8008596:	6463      	str	r3, [r4, #68]	; 0x44
 8008598:	86e7      	strh	r7, [r4, #54]	; 0x36
 800859a:	6423      	str	r3, [r4, #64]	; 0x40
 800859c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800859e:	68a3      	ldr	r3, [r4, #8]
 80085a0:	6820      	ldr	r0, [r4, #0]
 80085a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80085a6:	4684      	mov	ip, r0
 80085a8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 80085ac:	86a7      	strh	r7, [r4, #52]	; 0x34
 80085ae:	f000 8083 	beq.w	80086b8 <HAL_SPI_Transmit+0x17c>
 80085b2:	6803      	ldr	r3, [r0, #0]
 80085b4:	065b      	lsls	r3, r3, #25
 80085b6:	d403      	bmi.n	80085c0 <HAL_SPI_Transmit+0x84>
 80085b8:	6803      	ldr	r3, [r0, #0]
 80085ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80085be:	6003      	str	r3, [r0, #0]
 80085c0:	68e3      	ldr	r3, [r4, #12]
 80085c2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80085c6:	6863      	ldr	r3, [r4, #4]
 80085c8:	d04d      	beq.n	8008666 <HAL_SPI_Transmit+0x12a>
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	f000 8096 	beq.w	80086fc <HAL_SPI_Transmit+0x1c0>
 80085d0:	2f01      	cmp	r7, #1
 80085d2:	f000 8093 	beq.w	80086fc <HAL_SPI_Transmit+0x1c0>
 80085d6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80085d8:	b29b      	uxth	r3, r3
 80085da:	b1bb      	cbz	r3, 800860c <HAL_SPI_Transmit+0xd0>
 80085dc:	2d00      	cmp	r5, #0
 80085de:	f000 80cc 	beq.w	800877a <HAL_SPI_Transmit+0x23e>
 80085e2:	1c6f      	adds	r7, r5, #1
 80085e4:	d17f      	bne.n	80086e6 <HAL_SPI_Transmit+0x1aa>
 80085e6:	6823      	ldr	r3, [r4, #0]
 80085e8:	689a      	ldr	r2, [r3, #8]
 80085ea:	0790      	lsls	r0, r2, #30
 80085ec:	f140 8091 	bpl.w	8008712 <HAL_SPI_Transmit+0x1d6>
 80085f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80085f2:	7812      	ldrb	r2, [r2, #0]
 80085f4:	731a      	strb	r2, [r3, #12]
 80085f6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 80085f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80085fa:	3901      	subs	r1, #1
 80085fc:	b289      	uxth	r1, r1
 80085fe:	86e1      	strh	r1, [r4, #54]	; 0x36
 8008600:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8008602:	3301      	adds	r3, #1
 8008604:	b289      	uxth	r1, r1
 8008606:	6323      	str	r3, [r4, #48]	; 0x30
 8008608:	2900      	cmp	r1, #0
 800860a:	d1ec      	bne.n	80085e6 <HAL_SPI_Transmit+0xaa>
 800860c:	6862      	ldr	r2, [r4, #4]
 800860e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008612:	4b72      	ldr	r3, [pc, #456]	; (80087dc <HAL_SPI_Transmit+0x2a0>)
 8008614:	4872      	ldr	r0, [pc, #456]	; (80087e0 <HAL_SPI_Transmit+0x2a4>)
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800861c:	fba0 0303 	umull	r0, r3, r0, r3
 8008620:	ea4f 5353 	mov.w	r3, r3, lsr #21
 8008624:	fb01 f303 	mul.w	r3, r1, r3
 8008628:	9301      	str	r3, [sp, #4]
 800862a:	d107      	bne.n	800863c <HAL_SPI_Transmit+0x100>
 800862c:	e0c6      	b.n	80087bc <HAL_SPI_Transmit+0x280>
 800862e:	9b01      	ldr	r3, [sp, #4]
 8008630:	6822      	ldr	r2, [r4, #0]
 8008632:	3b01      	subs	r3, #1
 8008634:	9301      	str	r3, [sp, #4]
 8008636:	6893      	ldr	r3, [r2, #8]
 8008638:	061b      	lsls	r3, r3, #24
 800863a:	d502      	bpl.n	8008642 <HAL_SPI_Transmit+0x106>
 800863c:	9b01      	ldr	r3, [sp, #4]
 800863e:	2b00      	cmp	r3, #0
 8008640:	d1f5      	bne.n	800862e <HAL_SPI_Transmit+0xf2>
 8008642:	68a3      	ldr	r3, [r4, #8]
 8008644:	b933      	cbnz	r3, 8008654 <HAL_SPI_Transmit+0x118>
 8008646:	6822      	ldr	r2, [r4, #0]
 8008648:	9300      	str	r3, [sp, #0]
 800864a:	68d3      	ldr	r3, [r2, #12]
 800864c:	9300      	str	r3, [sp, #0]
 800864e:	6893      	ldr	r3, [r2, #8]
 8008650:	9300      	str	r3, [sp, #0]
 8008652:	9b00      	ldr	r3, [sp, #0]
 8008654:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008656:	3800      	subs	r0, #0
 8008658:	bf18      	it	ne
 800865a:	2001      	movne	r0, #1
 800865c:	e786      	b.n	800856c <HAL_SPI_Transmit+0x30>
 800865e:	2002      	movs	r0, #2
 8008660:	b002      	add	sp, #8
 8008662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008666:	461a      	mov	r2, r3
 8008668:	2b00      	cmp	r3, #0
 800866a:	d174      	bne.n	8008756 <HAL_SPI_Transmit+0x21a>
 800866c:	4641      	mov	r1, r8
 800866e:	f831 7b02 	ldrh.w	r7, [r1], #2
 8008672:	60c7      	str	r7, [r0, #12]
 8008674:	6321      	str	r1, [r4, #48]	; 0x30
 8008676:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8008678:	3901      	subs	r1, #1
 800867a:	b289      	uxth	r1, r1
 800867c:	86e1      	strh	r1, [r4, #54]	; 0x36
 800867e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8008680:	b289      	uxth	r1, r1
 8008682:	2900      	cmp	r1, #0
 8008684:	d0c3      	beq.n	800860e <HAL_SPI_Transmit+0xd2>
 8008686:	2d00      	cmp	r5, #0
 8008688:	f000 808b 	beq.w	80087a2 <HAL_SPI_Transmit+0x266>
 800868c:	1c69      	adds	r1, r5, #1
 800868e:	d158      	bne.n	8008742 <HAL_SPI_Transmit+0x206>
 8008690:	6883      	ldr	r3, [r0, #8]
 8008692:	079a      	lsls	r2, r3, #30
 8008694:	f140 8089 	bpl.w	80087aa <HAL_SPI_Transmit+0x26e>
 8008698:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800869a:	f832 3b02 	ldrh.w	r3, [r2], #2
 800869e:	60c3      	str	r3, [r0, #12]
 80086a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80086a2:	6322      	str	r2, [r4, #48]	; 0x30
 80086a4:	3b01      	subs	r3, #1
 80086a6:	b29b      	uxth	r3, r3
 80086a8:	86e3      	strh	r3, [r4, #54]	; 0x36
 80086aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80086ac:	b29b      	uxth	r3, r3
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	d1ee      	bne.n	8008690 <HAL_SPI_Transmit+0x154>
 80086b2:	6863      	ldr	r3, [r4, #4]
 80086b4:	461a      	mov	r2, r3
 80086b6:	e7aa      	b.n	800860e <HAL_SPI_Transmit+0xd2>
 80086b8:	6803      	ldr	r3, [r0, #0]
 80086ba:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80086be:	6003      	str	r3, [r0, #0]
 80086c0:	6803      	ldr	r3, [r0, #0]
 80086c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80086c6:	6003      	str	r3, [r0, #0]
 80086c8:	e773      	b.n	80085b2 <HAL_SPI_Transmit+0x76>
 80086ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80086cc:	7812      	ldrb	r2, [r2, #0]
 80086ce:	731a      	strb	r2, [r3, #12]
 80086d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80086d2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80086d4:	3b01      	subs	r3, #1
 80086d6:	3201      	adds	r2, #1
 80086d8:	b29b      	uxth	r3, r3
 80086da:	86e3      	strh	r3, [r4, #54]	; 0x36
 80086dc:	6322      	str	r2, [r4, #48]	; 0x30
 80086de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80086e0:	b29b      	uxth	r3, r3
 80086e2:	2b00      	cmp	r3, #0
 80086e4:	d092      	beq.n	800860c <HAL_SPI_Transmit+0xd0>
 80086e6:	6823      	ldr	r3, [r4, #0]
 80086e8:	689a      	ldr	r2, [r3, #8]
 80086ea:	0791      	lsls	r1, r2, #30
 80086ec:	d4ed      	bmi.n	80086ca <HAL_SPI_Transmit+0x18e>
 80086ee:	f7fd fb4b 	bl	8005d88 <HAL_GetTick>
 80086f2:	1b83      	subs	r3, r0, r6
 80086f4:	429d      	cmp	r5, r3
 80086f6:	d8f2      	bhi.n	80086de <HAL_SPI_Transmit+0x1a2>
 80086f8:	2003      	movs	r0, #3
 80086fa:	e737      	b.n	800856c <HAL_SPI_Transmit+0x30>
 80086fc:	f898 3000 	ldrb.w	r3, [r8]
 8008700:	7303      	strb	r3, [r0, #12]
 8008702:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008704:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008706:	3b01      	subs	r3, #1
 8008708:	3201      	adds	r2, #1
 800870a:	b29b      	uxth	r3, r3
 800870c:	6322      	str	r2, [r4, #48]	; 0x30
 800870e:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008710:	e761      	b.n	80085d6 <HAL_SPI_Transmit+0x9a>
 8008712:	f7fd fb39 	bl	8005d88 <HAL_GetTick>
 8008716:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008718:	b29b      	uxth	r3, r3
 800871a:	2b00      	cmp	r3, #0
 800871c:	f47f af63 	bne.w	80085e6 <HAL_SPI_Transmit+0xaa>
 8008720:	e774      	b.n	800860c <HAL_SPI_Transmit+0xd0>
 8008722:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008724:	f832 3b02 	ldrh.w	r3, [r2], #2
 8008728:	f8cc 300c 	str.w	r3, [ip, #12]
 800872c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800872e:	6322      	str	r2, [r4, #48]	; 0x30
 8008730:	3b01      	subs	r3, #1
 8008732:	b29b      	uxth	r3, r3
 8008734:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008736:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008738:	b29b      	uxth	r3, r3
 800873a:	2b00      	cmp	r3, #0
 800873c:	d0b9      	beq.n	80086b2 <HAL_SPI_Transmit+0x176>
 800873e:	f8d4 c000 	ldr.w	ip, [r4]
 8008742:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8008746:	079b      	lsls	r3, r3, #30
 8008748:	d4eb      	bmi.n	8008722 <HAL_SPI_Transmit+0x1e6>
 800874a:	f7fd fb1d 	bl	8005d88 <HAL_GetTick>
 800874e:	1b83      	subs	r3, r0, r6
 8008750:	429d      	cmp	r5, r3
 8008752:	d9d1      	bls.n	80086f8 <HAL_SPI_Transmit+0x1bc>
 8008754:	e7ef      	b.n	8008736 <HAL_SPI_Transmit+0x1fa>
 8008756:	2f01      	cmp	r7, #1
 8008758:	d191      	bne.n	800867e <HAL_SPI_Transmit+0x142>
 800875a:	e787      	b.n	800866c <HAL_SPI_Transmit+0x130>
 800875c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800875e:	7812      	ldrb	r2, [r2, #0]
 8008760:	731a      	strb	r2, [r3, #12]
 8008762:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008764:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008766:	3b01      	subs	r3, #1
 8008768:	b29b      	uxth	r3, r3
 800876a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800876c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800876e:	3201      	adds	r2, #1
 8008770:	b29b      	uxth	r3, r3
 8008772:	6322      	str	r2, [r4, #48]	; 0x30
 8008774:	2b00      	cmp	r3, #0
 8008776:	f43f af49 	beq.w	800860c <HAL_SPI_Transmit+0xd0>
 800877a:	6823      	ldr	r3, [r4, #0]
 800877c:	689a      	ldr	r2, [r3, #8]
 800877e:	0792      	lsls	r2, r2, #30
 8008780:	d4ec      	bmi.n	800875c <HAL_SPI_Transmit+0x220>
 8008782:	f7fd fb01 	bl	8005d88 <HAL_GetTick>
 8008786:	e7b7      	b.n	80086f8 <HAL_SPI_Transmit+0x1bc>
 8008788:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800878a:	f831 2b02 	ldrh.w	r2, [r1], #2
 800878e:	60c2      	str	r2, [r0, #12]
 8008790:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008792:	6321      	str	r1, [r4, #48]	; 0x30
 8008794:	3a01      	subs	r2, #1
 8008796:	b292      	uxth	r2, r2
 8008798:	86e2      	strh	r2, [r4, #54]	; 0x36
 800879a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800879c:	b292      	uxth	r2, r2
 800879e:	2a00      	cmp	r2, #0
 80087a0:	d088      	beq.n	80086b4 <HAL_SPI_Transmit+0x178>
 80087a2:	6882      	ldr	r2, [r0, #8]
 80087a4:	0797      	lsls	r7, r2, #30
 80087a6:	d5ec      	bpl.n	8008782 <HAL_SPI_Transmit+0x246>
 80087a8:	e7ee      	b.n	8008788 <HAL_SPI_Transmit+0x24c>
 80087aa:	f7fd faed 	bl	8005d88 <HAL_GetTick>
 80087ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80087b0:	b29b      	uxth	r3, r3
 80087b2:	2b00      	cmp	r3, #0
 80087b4:	f43f af7d 	beq.w	80086b2 <HAL_SPI_Transmit+0x176>
 80087b8:	6820      	ldr	r0, [r4, #0]
 80087ba:	e769      	b.n	8008690 <HAL_SPI_Transmit+0x154>
 80087bc:	4633      	mov	r3, r6
 80087be:	462a      	mov	r2, r5
 80087c0:	2180      	movs	r1, #128	; 0x80
 80087c2:	4620      	mov	r0, r4
 80087c4:	f7ff fe04 	bl	80083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80087c8:	2800      	cmp	r0, #0
 80087ca:	f43f af3a 	beq.w	8008642 <HAL_SPI_Transmit+0x106>
 80087ce:	2220      	movs	r2, #32
 80087d0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80087d2:	4313      	orrs	r3, r2
 80087d4:	6563      	str	r3, [r4, #84]	; 0x54
 80087d6:	6562      	str	r2, [r4, #84]	; 0x54
 80087d8:	e733      	b.n	8008642 <HAL_SPI_Transmit+0x106>
 80087da:	bf00      	nop
 80087dc:	20000024 	.word	0x20000024
 80087e0:	165e9f81 	.word	0x165e9f81

080087e4 <HAL_SPI_TransmitReceive>:
 80087e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087e8:	4604      	mov	r4, r0
 80087ea:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 80087ee:	b082      	sub	sp, #8
 80087f0:	2801      	cmp	r0, #1
 80087f2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80087f4:	f000 8089 	beq.w	800890a <HAL_SPI_TransmitReceive+0x126>
 80087f8:	4698      	mov	r8, r3
 80087fa:	2301      	movs	r3, #1
 80087fc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008800:	468a      	mov	sl, r1
 8008802:	4691      	mov	r9, r2
 8008804:	f7fd fac0 	bl	8005d88 <HAL_GetTick>
 8008808:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
 800880c:	4606      	mov	r6, r0
 800880e:	2f01      	cmp	r7, #1
 8008810:	6863      	ldr	r3, [r4, #4]
 8008812:	b2f9      	uxtb	r1, r7
 8008814:	d011      	beq.n	800883a <HAL_SPI_TransmitReceive+0x56>
 8008816:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800881a:	d009      	beq.n	8008830 <HAL_SPI_TransmitReceive+0x4c>
 800881c:	2002      	movs	r0, #2
 800881e:	2201      	movs	r2, #1
 8008820:	2300      	movs	r3, #0
 8008822:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008826:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800882a:	b002      	add	sp, #8
 800882c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008830:	68a2      	ldr	r2, [r4, #8]
 8008832:	2a00      	cmp	r2, #0
 8008834:	d1f2      	bne.n	800881c <HAL_SPI_TransmitReceive+0x38>
 8008836:	2904      	cmp	r1, #4
 8008838:	d1f0      	bne.n	800881c <HAL_SPI_TransmitReceive+0x38>
 800883a:	f1ba 0f00 	cmp.w	sl, #0
 800883e:	d068      	beq.n	8008912 <HAL_SPI_TransmitReceive+0x12e>
 8008840:	f1b9 0f00 	cmp.w	r9, #0
 8008844:	d065      	beq.n	8008912 <HAL_SPI_TransmitReceive+0x12e>
 8008846:	f1b8 0f00 	cmp.w	r8, #0
 800884a:	d062      	beq.n	8008912 <HAL_SPI_TransmitReceive+0x12e>
 800884c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8008850:	6820      	ldr	r0, [r4, #0]
 8008852:	2a04      	cmp	r2, #4
 8008854:	bf1c      	itt	ne
 8008856:	2205      	movne	r2, #5
 8008858:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
 800885c:	2200      	movs	r2, #0
 800885e:	6562      	str	r2, [r4, #84]	; 0x54
 8008860:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 8008864:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
 8008868:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
 800886c:	6802      	ldr	r2, [r0, #0]
 800886e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 8008872:	0651      	lsls	r1, r2, #25
 8008874:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8008878:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 800887c:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
 8008880:	d403      	bmi.n	800888a <HAL_SPI_TransmitReceive+0xa6>
 8008882:	6802      	ldr	r2, [r0, #0]
 8008884:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008888:	6002      	str	r2, [r0, #0]
 800888a:	68e2      	ldr	r2, [r4, #12]
 800888c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8008890:	d04f      	beq.n	8008932 <HAL_SPI_TransmitReceive+0x14e>
 8008892:	2b00      	cmp	r3, #0
 8008894:	d03f      	beq.n	8008916 <HAL_SPI_TransmitReceive+0x132>
 8008896:	f1b8 0f01 	cmp.w	r8, #1
 800889a:	d03c      	beq.n	8008916 <HAL_SPI_TransmitReceive+0x132>
 800889c:	2701      	movs	r7, #1
 800889e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80088a0:	b29b      	uxth	r3, r3
 80088a2:	b91b      	cbnz	r3, 80088ac <HAL_SPI_TransmitReceive+0xc8>
 80088a4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80088a6:	b29b      	uxth	r3, r3
 80088a8:	2b00      	cmp	r3, #0
 80088aa:	d07f      	beq.n	80089ac <HAL_SPI_TransmitReceive+0x1c8>
 80088ac:	6822      	ldr	r2, [r4, #0]
 80088ae:	6893      	ldr	r3, [r2, #8]
 80088b0:	0799      	lsls	r1, r3, #30
 80088b2:	d50f      	bpl.n	80088d4 <HAL_SPI_TransmitReceive+0xf0>
 80088b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80088b6:	b29b      	uxth	r3, r3
 80088b8:	b163      	cbz	r3, 80088d4 <HAL_SPI_TransmitReceive+0xf0>
 80088ba:	b15f      	cbz	r7, 80088d4 <HAL_SPI_TransmitReceive+0xf0>
 80088bc:	2700      	movs	r7, #0
 80088be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80088c0:	781b      	ldrb	r3, [r3, #0]
 80088c2:	7313      	strb	r3, [r2, #12]
 80088c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80088c6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80088c8:	3b01      	subs	r3, #1
 80088ca:	3201      	adds	r2, #1
 80088cc:	6322      	str	r2, [r4, #48]	; 0x30
 80088ce:	b29b      	uxth	r3, r3
 80088d0:	6822      	ldr	r2, [r4, #0]
 80088d2:	86e3      	strh	r3, [r4, #54]	; 0x36
 80088d4:	6893      	ldr	r3, [r2, #8]
 80088d6:	f013 0301 	ands.w	r3, r3, #1
 80088da:	d00d      	beq.n	80088f8 <HAL_SPI_TransmitReceive+0x114>
 80088dc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80088de:	b289      	uxth	r1, r1
 80088e0:	b151      	cbz	r1, 80088f8 <HAL_SPI_TransmitReceive+0x114>
 80088e2:	68d2      	ldr	r2, [r2, #12]
 80088e4:	461f      	mov	r7, r3
 80088e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80088e8:	701a      	strb	r2, [r3, #0]
 80088ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80088ec:	3301      	adds	r3, #1
 80088ee:	63a3      	str	r3, [r4, #56]	; 0x38
 80088f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80088f2:	3b01      	subs	r3, #1
 80088f4:	b29b      	uxth	r3, r3
 80088f6:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80088f8:	f7fd fa46 	bl	8005d88 <HAL_GetTick>
 80088fc:	1b80      	subs	r0, r0, r6
 80088fe:	42a8      	cmp	r0, r5
 8008900:	d314      	bcc.n	800892c <HAL_SPI_TransmitReceive+0x148>
 8008902:	1c6a      	adds	r2, r5, #1
 8008904:	d0cb      	beq.n	800889e <HAL_SPI_TransmitReceive+0xba>
 8008906:	2003      	movs	r0, #3
 8008908:	e789      	b.n	800881e <HAL_SPI_TransmitReceive+0x3a>
 800890a:	2002      	movs	r0, #2
 800890c:	b002      	add	sp, #8
 800890e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008912:	2001      	movs	r0, #1
 8008914:	e783      	b.n	800881e <HAL_SPI_TransmitReceive+0x3a>
 8008916:	f89a 3000 	ldrb.w	r3, [sl]
 800891a:	7303      	strb	r3, [r0, #12]
 800891c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800891e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008920:	3b01      	subs	r3, #1
 8008922:	3201      	adds	r2, #1
 8008924:	b29b      	uxth	r3, r3
 8008926:	6322      	str	r2, [r4, #48]	; 0x30
 8008928:	86e3      	strh	r3, [r4, #54]	; 0x36
 800892a:	e7b7      	b.n	800889c <HAL_SPI_TransmitReceive+0xb8>
 800892c:	2d00      	cmp	r5, #0
 800892e:	d1b6      	bne.n	800889e <HAL_SPI_TransmitReceive+0xba>
 8008930:	e7e9      	b.n	8008906 <HAL_SPI_TransmitReceive+0x122>
 8008932:	2b00      	cmp	r3, #0
 8008934:	d16c      	bne.n	8008a10 <HAL_SPI_TransmitReceive+0x22c>
 8008936:	4651      	mov	r1, sl
 8008938:	f831 3b02 	ldrh.w	r3, [r1], #2
 800893c:	60c3      	str	r3, [r0, #12]
 800893e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008940:	6321      	str	r1, [r4, #48]	; 0x30
 8008942:	3b01      	subs	r3, #1
 8008944:	b29b      	uxth	r3, r3
 8008946:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008948:	1c6a      	adds	r2, r5, #1
 800894a:	f04f 0701 	mov.w	r7, #1
 800894e:	d025      	beq.n	800899c <HAL_SPI_TransmitReceive+0x1b8>
 8008950:	e062      	b.n	8008a18 <HAL_SPI_TransmitReceive+0x234>
 8008952:	6822      	ldr	r2, [r4, #0]
 8008954:	6893      	ldr	r3, [r2, #8]
 8008956:	079b      	lsls	r3, r3, #30
 8008958:	d50d      	bpl.n	8008976 <HAL_SPI_TransmitReceive+0x192>
 800895a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800895c:	b29b      	uxth	r3, r3
 800895e:	b153      	cbz	r3, 8008976 <HAL_SPI_TransmitReceive+0x192>
 8008960:	b14f      	cbz	r7, 8008976 <HAL_SPI_TransmitReceive+0x192>
 8008962:	2700      	movs	r7, #0
 8008964:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008966:	f831 3b02 	ldrh.w	r3, [r1], #2
 800896a:	60d3      	str	r3, [r2, #12]
 800896c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800896e:	6321      	str	r1, [r4, #48]	; 0x30
 8008970:	3b01      	subs	r3, #1
 8008972:	b29b      	uxth	r3, r3
 8008974:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008976:	6893      	ldr	r3, [r2, #8]
 8008978:	f013 0301 	ands.w	r3, r3, #1
 800897c:	d00c      	beq.n	8008998 <HAL_SPI_TransmitReceive+0x1b4>
 800897e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008980:	b289      	uxth	r1, r1
 8008982:	b149      	cbz	r1, 8008998 <HAL_SPI_TransmitReceive+0x1b4>
 8008984:	461f      	mov	r7, r3
 8008986:	68d3      	ldr	r3, [r2, #12]
 8008988:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800898a:	f822 3b02 	strh.w	r3, [r2], #2
 800898e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008990:	63a2      	str	r2, [r4, #56]	; 0x38
 8008992:	3b01      	subs	r3, #1
 8008994:	b29b      	uxth	r3, r3
 8008996:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008998:	f7fd f9f6 	bl	8005d88 <HAL_GetTick>
 800899c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800899e:	b29b      	uxth	r3, r3
 80089a0:	2b00      	cmp	r3, #0
 80089a2:	d1d6      	bne.n	8008952 <HAL_SPI_TransmitReceive+0x16e>
 80089a4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80089a6:	b29b      	uxth	r3, r3
 80089a8:	2b00      	cmp	r3, #0
 80089aa:	d1d2      	bne.n	8008952 <HAL_SPI_TransmitReceive+0x16e>
 80089ac:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80089b0:	4b32      	ldr	r3, [pc, #200]	; (8008a7c <HAL_SPI_TransmitReceive+0x298>)
 80089b2:	4a33      	ldr	r2, [pc, #204]	; (8008a80 <HAL_SPI_TransmitReceive+0x29c>)
 80089b4:	681b      	ldr	r3, [r3, #0]
 80089b6:	fba2 2303 	umull	r2, r3, r2, r3
 80089ba:	0d5b      	lsrs	r3, r3, #21
 80089bc:	fb01 f303 	mul.w	r3, r1, r3
 80089c0:	6862      	ldr	r2, [r4, #4]
 80089c2:	9301      	str	r3, [sp, #4]
 80089c4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80089c8:	d114      	bne.n	80089f4 <HAL_SPI_TransmitReceive+0x210>
 80089ca:	4633      	mov	r3, r6
 80089cc:	462a      	mov	r2, r5
 80089ce:	2180      	movs	r1, #128	; 0x80
 80089d0:	4620      	mov	r0, r4
 80089d2:	f7ff fcfd 	bl	80083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80089d6:	b180      	cbz	r0, 80089fa <HAL_SPI_TransmitReceive+0x216>
 80089d8:	2220      	movs	r2, #32
 80089da:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80089dc:	2001      	movs	r0, #1
 80089de:	4313      	orrs	r3, r2
 80089e0:	6563      	str	r3, [r4, #84]	; 0x54
 80089e2:	6562      	str	r2, [r4, #84]	; 0x54
 80089e4:	e71b      	b.n	800881e <HAL_SPI_TransmitReceive+0x3a>
 80089e6:	9b01      	ldr	r3, [sp, #4]
 80089e8:	6822      	ldr	r2, [r4, #0]
 80089ea:	3b01      	subs	r3, #1
 80089ec:	9301      	str	r3, [sp, #4]
 80089ee:	6893      	ldr	r3, [r2, #8]
 80089f0:	061b      	lsls	r3, r3, #24
 80089f2:	d502      	bpl.n	80089fa <HAL_SPI_TransmitReceive+0x216>
 80089f4:	9b01      	ldr	r3, [sp, #4]
 80089f6:	2b00      	cmp	r3, #0
 80089f8:	d1f5      	bne.n	80089e6 <HAL_SPI_TransmitReceive+0x202>
 80089fa:	68a0      	ldr	r0, [r4, #8]
 80089fc:	2800      	cmp	r0, #0
 80089fe:	d13b      	bne.n	8008a78 <HAL_SPI_TransmitReceive+0x294>
 8008a00:	6823      	ldr	r3, [r4, #0]
 8008a02:	9000      	str	r0, [sp, #0]
 8008a04:	68da      	ldr	r2, [r3, #12]
 8008a06:	9200      	str	r2, [sp, #0]
 8008a08:	689b      	ldr	r3, [r3, #8]
 8008a0a:	9300      	str	r3, [sp, #0]
 8008a0c:	9b00      	ldr	r3, [sp, #0]
 8008a0e:	e706      	b.n	800881e <HAL_SPI_TransmitReceive+0x3a>
 8008a10:	f1b8 0f01 	cmp.w	r8, #1
 8008a14:	d198      	bne.n	8008948 <HAL_SPI_TransmitReceive+0x164>
 8008a16:	e78e      	b.n	8008936 <HAL_SPI_TransmitReceive+0x152>
 8008a18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008a1a:	b29b      	uxth	r3, r3
 8008a1c:	b91b      	cbnz	r3, 8008a26 <HAL_SPI_TransmitReceive+0x242>
 8008a1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008a20:	b29b      	uxth	r3, r3
 8008a22:	2b00      	cmp	r3, #0
 8008a24:	d0c2      	beq.n	80089ac <HAL_SPI_TransmitReceive+0x1c8>
 8008a26:	6822      	ldr	r2, [r4, #0]
 8008a28:	6893      	ldr	r3, [r2, #8]
 8008a2a:	0798      	lsls	r0, r3, #30
 8008a2c:	d50d      	bpl.n	8008a4a <HAL_SPI_TransmitReceive+0x266>
 8008a2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008a30:	b29b      	uxth	r3, r3
 8008a32:	b153      	cbz	r3, 8008a4a <HAL_SPI_TransmitReceive+0x266>
 8008a34:	b14f      	cbz	r7, 8008a4a <HAL_SPI_TransmitReceive+0x266>
 8008a36:	2700      	movs	r7, #0
 8008a38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008a3a:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008a3e:	60d1      	str	r1, [r2, #12]
 8008a40:	6323      	str	r3, [r4, #48]	; 0x30
 8008a42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008a44:	3b01      	subs	r3, #1
 8008a46:	b29b      	uxth	r3, r3
 8008a48:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008a4a:	6893      	ldr	r3, [r2, #8]
 8008a4c:	f013 0301 	ands.w	r3, r3, #1
 8008a50:	d00c      	beq.n	8008a6c <HAL_SPI_TransmitReceive+0x288>
 8008a52:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008a54:	b289      	uxth	r1, r1
 8008a56:	b149      	cbz	r1, 8008a6c <HAL_SPI_TransmitReceive+0x288>
 8008a58:	461f      	mov	r7, r3
 8008a5a:	68d3      	ldr	r3, [r2, #12]
 8008a5c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008a5e:	f822 3b02 	strh.w	r3, [r2], #2
 8008a62:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008a64:	63a2      	str	r2, [r4, #56]	; 0x38
 8008a66:	3b01      	subs	r3, #1
 8008a68:	b29b      	uxth	r3, r3
 8008a6a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008a6c:	f7fd f98c 	bl	8005d88 <HAL_GetTick>
 8008a70:	1b80      	subs	r0, r0, r6
 8008a72:	42a8      	cmp	r0, r5
 8008a74:	d3d0      	bcc.n	8008a18 <HAL_SPI_TransmitReceive+0x234>
 8008a76:	e746      	b.n	8008906 <HAL_SPI_TransmitReceive+0x122>
 8008a78:	2000      	movs	r0, #0
 8008a7a:	e6d0      	b.n	800881e <HAL_SPI_TransmitReceive+0x3a>
 8008a7c:	20000024 	.word	0x20000024
 8008a80:	165e9f81 	.word	0x165e9f81

08008a84 <HAL_SPI_Receive>:
 8008a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a88:	6846      	ldr	r6, [r0, #4]
 8008a8a:	4604      	mov	r4, r0
 8008a8c:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
 8008a90:	4690      	mov	r8, r2
 8008a92:	461d      	mov	r5, r3
 8008a94:	460f      	mov	r7, r1
 8008a96:	b082      	sub	sp, #8
 8008a98:	d071      	beq.n	8008b7e <HAL_SPI_Receive+0xfa>
 8008a9a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008a9e:	2b01      	cmp	r3, #1
 8008aa0:	d079      	beq.n	8008b96 <HAL_SPI_Receive+0x112>
 8008aa2:	2301      	movs	r3, #1
 8008aa4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008aa8:	f7fd f96e 	bl	8005d88 <HAL_GetTick>
 8008aac:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 8008ab0:	4606      	mov	r6, r0
 8008ab2:	f1bc 0f01 	cmp.w	ip, #1
 8008ab6:	fa5f f08c 	uxtb.w	r0, ip
 8008aba:	d009      	beq.n	8008ad0 <HAL_SPI_Receive+0x4c>
 8008abc:	2002      	movs	r0, #2
 8008abe:	2201      	movs	r2, #1
 8008ac0:	2300      	movs	r3, #0
 8008ac2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8008ac6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008aca:	b002      	add	sp, #8
 8008acc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ad0:	2f00      	cmp	r7, #0
 8008ad2:	d0f4      	beq.n	8008abe <HAL_SPI_Receive+0x3a>
 8008ad4:	f1b8 0f00 	cmp.w	r8, #0
 8008ad8:	d0f1      	beq.n	8008abe <HAL_SPI_Receive+0x3a>
 8008ada:	2300      	movs	r3, #0
 8008adc:	2104      	movs	r1, #4
 8008ade:	68a2      	ldr	r2, [r4, #8]
 8008ae0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
 8008ae4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008ae8:	6822      	ldr	r2, [r4, #0]
 8008aea:	6563      	str	r3, [r4, #84]	; 0x54
 8008aec:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8008af0:	6323      	str	r3, [r4, #48]	; 0x30
 8008af2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 8008af6:	86a3      	strh	r3, [r4, #52]	; 0x34
 8008af8:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008afa:	63a7      	str	r7, [r4, #56]	; 0x38
 8008afc:	4613      	mov	r3, r2
 8008afe:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8008b02:	d107      	bne.n	8008b14 <HAL_SPI_Receive+0x90>
 8008b04:	6811      	ldr	r1, [r2, #0]
 8008b06:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008b0a:	6011      	str	r1, [r2, #0]
 8008b0c:	6811      	ldr	r1, [r2, #0]
 8008b0e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008b12:	6011      	str	r1, [r2, #0]
 8008b14:	6811      	ldr	r1, [r2, #0]
 8008b16:	064f      	lsls	r7, r1, #25
 8008b18:	d403      	bmi.n	8008b22 <HAL_SPI_Receive+0x9e>
 8008b1a:	6811      	ldr	r1, [r2, #0]
 8008b1c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8008b20:	6011      	str	r1, [r2, #0]
 8008b22:	68e1      	ldr	r1, [r4, #12]
 8008b24:	2900      	cmp	r1, #0
 8008b26:	d05a      	beq.n	8008bde <HAL_SPI_Receive+0x15a>
 8008b28:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008b2a:	b289      	uxth	r1, r1
 8008b2c:	b1a1      	cbz	r1, 8008b58 <HAL_SPI_Receive+0xd4>
 8008b2e:	2d00      	cmp	r5, #0
 8008b30:	f000 80b3 	beq.w	8008c9a <HAL_SPI_Receive+0x216>
 8008b34:	1c68      	adds	r0, r5, #1
 8008b36:	d140      	bne.n	8008bba <HAL_SPI_Receive+0x136>
 8008b38:	6893      	ldr	r3, [r2, #8]
 8008b3a:	07d9      	lsls	r1, r3, #31
 8008b3c:	d547      	bpl.n	8008bce <HAL_SPI_Receive+0x14a>
 8008b3e:	68d1      	ldr	r1, [r2, #12]
 8008b40:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008b42:	f823 1b02 	strh.w	r1, [r3], #2
 8008b46:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008b48:	63a3      	str	r3, [r4, #56]	; 0x38
 8008b4a:	3901      	subs	r1, #1
 8008b4c:	b289      	uxth	r1, r1
 8008b4e:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008b50:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008b52:	b29b      	uxth	r3, r3
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	d1ef      	bne.n	8008b38 <HAL_SPI_Receive+0xb4>
 8008b58:	6863      	ldr	r3, [r4, #4]
 8008b5a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008b5e:	f000 80a0 	beq.w	8008ca2 <HAL_SPI_Receive+0x21e>
 8008b62:	4633      	mov	r3, r6
 8008b64:	462a      	mov	r2, r5
 8008b66:	2101      	movs	r1, #1
 8008b68:	4620      	mov	r0, r4
 8008b6a:	f7ff fc31 	bl	80083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008b6e:	2800      	cmp	r0, #0
 8008b70:	f040 80a7 	bne.w	8008cc2 <HAL_SPI_Receive+0x23e>
 8008b74:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008b76:	3800      	subs	r0, #0
 8008b78:	bf18      	it	ne
 8008b7a:	2001      	movne	r0, #1
 8008b7c:	e79f      	b.n	8008abe <HAL_SPI_Receive+0x3a>
 8008b7e:	6883      	ldr	r3, [r0, #8]
 8008b80:	2b00      	cmp	r3, #0
 8008b82:	d18a      	bne.n	8008a9a <HAL_SPI_Receive+0x16>
 8008b84:	9500      	str	r5, [sp, #0]
 8008b86:	2504      	movs	r5, #4
 8008b88:	4613      	mov	r3, r2
 8008b8a:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
 8008b8e:	460a      	mov	r2, r1
 8008b90:	f7ff fe28 	bl	80087e4 <HAL_SPI_TransmitReceive>
 8008b94:	e799      	b.n	8008aca <HAL_SPI_Receive+0x46>
 8008b96:	2002      	movs	r0, #2
 8008b98:	b002      	add	sp, #8
 8008b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b9e:	68db      	ldr	r3, [r3, #12]
 8008ba0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008ba2:	f822 3b02 	strh.w	r3, [r2], #2
 8008ba6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008ba8:	63a2      	str	r2, [r4, #56]	; 0x38
 8008baa:	3b01      	subs	r3, #1
 8008bac:	b29b      	uxth	r3, r3
 8008bae:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008bb0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008bb2:	b29b      	uxth	r3, r3
 8008bb4:	2b00      	cmp	r3, #0
 8008bb6:	d0cf      	beq.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008bb8:	6823      	ldr	r3, [r4, #0]
 8008bba:	689a      	ldr	r2, [r3, #8]
 8008bbc:	07d2      	lsls	r2, r2, #31
 8008bbe:	d4ee      	bmi.n	8008b9e <HAL_SPI_Receive+0x11a>
 8008bc0:	f7fd f8e2 	bl	8005d88 <HAL_GetTick>
 8008bc4:	1b83      	subs	r3, r0, r6
 8008bc6:	429d      	cmp	r5, r3
 8008bc8:	d8f2      	bhi.n	8008bb0 <HAL_SPI_Receive+0x12c>
 8008bca:	2003      	movs	r0, #3
 8008bcc:	e777      	b.n	8008abe <HAL_SPI_Receive+0x3a>
 8008bce:	f7fd f8db 	bl	8005d88 <HAL_GetTick>
 8008bd2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008bd4:	b29b      	uxth	r3, r3
 8008bd6:	2b00      	cmp	r3, #0
 8008bd8:	d0be      	beq.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008bda:	6822      	ldr	r2, [r4, #0]
 8008bdc:	e7ac      	b.n	8008b38 <HAL_SPI_Receive+0xb4>
 8008bde:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8008be0:	b292      	uxth	r2, r2
 8008be2:	2a00      	cmp	r2, #0
 8008be4:	d0b8      	beq.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008be6:	2d00      	cmp	r5, #0
 8008be8:	d043      	beq.n	8008c72 <HAL_SPI_Receive+0x1ee>
 8008bea:	1c6f      	adds	r7, r5, #1
 8008bec:	d00f      	beq.n	8008c0e <HAL_SPI_Receive+0x18a>
 8008bee:	e027      	b.n	8008c40 <HAL_SPI_Receive+0x1bc>
 8008bf0:	7b1a      	ldrb	r2, [r3, #12]
 8008bf2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008bf4:	701a      	strb	r2, [r3, #0]
 8008bf6:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008bf8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008bfa:	3901      	subs	r1, #1
 8008bfc:	b289      	uxth	r1, r1
 8008bfe:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008c00:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c02:	3201      	adds	r2, #1
 8008c04:	b29b      	uxth	r3, r3
 8008c06:	63a2      	str	r2, [r4, #56]	; 0x38
 8008c08:	2b00      	cmp	r3, #0
 8008c0a:	d0a5      	beq.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008c0c:	6823      	ldr	r3, [r4, #0]
 8008c0e:	689a      	ldr	r2, [r3, #8]
 8008c10:	07d0      	lsls	r0, r2, #31
 8008c12:	d4ed      	bmi.n	8008bf0 <HAL_SPI_Receive+0x16c>
 8008c14:	f7fd f8b8 	bl	8005d88 <HAL_GetTick>
 8008c18:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c1a:	b29b      	uxth	r3, r3
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d1f5      	bne.n	8008c0c <HAL_SPI_Receive+0x188>
 8008c20:	e79a      	b.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008c22:	7b1a      	ldrb	r2, [r3, #12]
 8008c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008c26:	701a      	strb	r2, [r3, #0]
 8008c28:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008c2c:	3b01      	subs	r3, #1
 8008c2e:	3201      	adds	r2, #1
 8008c30:	b29b      	uxth	r3, r3
 8008c32:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008c34:	63a2      	str	r2, [r4, #56]	; 0x38
 8008c36:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c38:	b29b      	uxth	r3, r3
 8008c3a:	2b00      	cmp	r3, #0
 8008c3c:	d08c      	beq.n	8008b58 <HAL_SPI_Receive+0xd4>
 8008c3e:	6823      	ldr	r3, [r4, #0]
 8008c40:	689a      	ldr	r2, [r3, #8]
 8008c42:	07d1      	lsls	r1, r2, #31
 8008c44:	d4ed      	bmi.n	8008c22 <HAL_SPI_Receive+0x19e>
 8008c46:	f7fd f89f 	bl	8005d88 <HAL_GetTick>
 8008c4a:	1b83      	subs	r3, r0, r6
 8008c4c:	429d      	cmp	r5, r3
 8008c4e:	d9bc      	bls.n	8008bca <HAL_SPI_Receive+0x146>
 8008c50:	e7f1      	b.n	8008c36 <HAL_SPI_Receive+0x1b2>
 8008c52:	7b1a      	ldrb	r2, [r3, #12]
 8008c54:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008c56:	701a      	strb	r2, [r3, #0]
 8008c58:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008c5c:	3b01      	subs	r3, #1
 8008c5e:	b29b      	uxth	r3, r3
 8008c60:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008c62:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c64:	3201      	adds	r2, #1
 8008c66:	b29b      	uxth	r3, r3
 8008c68:	63a2      	str	r2, [r4, #56]	; 0x38
 8008c6a:	2b00      	cmp	r3, #0
 8008c6c:	f43f af74 	beq.w	8008b58 <HAL_SPI_Receive+0xd4>
 8008c70:	6823      	ldr	r3, [r4, #0]
 8008c72:	689a      	ldr	r2, [r3, #8]
 8008c74:	07d2      	lsls	r2, r2, #31
 8008c76:	d4ec      	bmi.n	8008c52 <HAL_SPI_Receive+0x1ce>
 8008c78:	f7fd f886 	bl	8005d88 <HAL_GetTick>
 8008c7c:	e7a5      	b.n	8008bca <HAL_SPI_Receive+0x146>
 8008c7e:	68d3      	ldr	r3, [r2, #12]
 8008c80:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8008c82:	f821 3b02 	strh.w	r3, [r1], #2
 8008c86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c88:	63a1      	str	r1, [r4, #56]	; 0x38
 8008c8a:	3b01      	subs	r3, #1
 8008c8c:	b29b      	uxth	r3, r3
 8008c8e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008c90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c92:	b29b      	uxth	r3, r3
 8008c94:	2b00      	cmp	r3, #0
 8008c96:	f43f af5f 	beq.w	8008b58 <HAL_SPI_Receive+0xd4>
 8008c9a:	6893      	ldr	r3, [r2, #8]
 8008c9c:	07db      	lsls	r3, r3, #31
 8008c9e:	d5eb      	bpl.n	8008c78 <HAL_SPI_Receive+0x1f4>
 8008ca0:	e7ed      	b.n	8008c7e <HAL_SPI_Receive+0x1fa>
 8008ca2:	68a3      	ldr	r3, [r4, #8]
 8008ca4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008ca8:	d021      	beq.n	8008cee <HAL_SPI_Receive+0x26a>
 8008caa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008cae:	d00f      	beq.n	8008cd0 <HAL_SPI_Receive+0x24c>
 8008cb0:	4633      	mov	r3, r6
 8008cb2:	462a      	mov	r2, r5
 8008cb4:	2180      	movs	r1, #128	; 0x80
 8008cb6:	4620      	mov	r0, r4
 8008cb8:	f7ff fb8a 	bl	80083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008cbc:	2800      	cmp	r0, #0
 8008cbe:	f43f af59 	beq.w	8008b74 <HAL_SPI_Receive+0xf0>
 8008cc2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008cc4:	f043 0320 	orr.w	r3, r3, #32
 8008cc8:	6563      	str	r3, [r4, #84]	; 0x54
 8008cca:	2320      	movs	r3, #32
 8008ccc:	6563      	str	r3, [r4, #84]	; 0x54
 8008cce:	e751      	b.n	8008b74 <HAL_SPI_Receive+0xf0>
 8008cd0:	6820      	ldr	r0, [r4, #0]
 8008cd2:	4633      	mov	r3, r6
 8008cd4:	6801      	ldr	r1, [r0, #0]
 8008cd6:	462a      	mov	r2, r5
 8008cd8:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008cdc:	6001      	str	r1, [r0, #0]
 8008cde:	2101      	movs	r1, #1
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	f7ff fb75 	bl	80083d0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008ce6:	2800      	cmp	r0, #0
 8008ce8:	f43f af44 	beq.w	8008b74 <HAL_SPI_Receive+0xf0>
 8008cec:	e7e9      	b.n	8008cc2 <HAL_SPI_Receive+0x23e>
 8008cee:	6822      	ldr	r2, [r4, #0]
 8008cf0:	6813      	ldr	r3, [r2, #0]
 8008cf2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008cf6:	6013      	str	r3, [r2, #0]
 8008cf8:	e7da      	b.n	8008cb0 <HAL_SPI_Receive+0x22c>
 8008cfa:	bf00      	nop

08008cfc <HAL_SPI_ErrorCallback>:
 8008cfc:	4770      	bx	lr
 8008cfe:	bf00      	nop

08008d00 <HAL_SPI_IRQHandler>:
 8008d00:	b530      	push	{r4, r5, lr}
 8008d02:	6802      	ldr	r2, [r0, #0]
 8008d04:	4604      	mov	r4, r0
 8008d06:	6851      	ldr	r1, [r2, #4]
 8008d08:	6893      	ldr	r3, [r2, #8]
 8008d0a:	b085      	sub	sp, #20
 8008d0c:	f013 0f40 	tst.w	r3, #64	; 0x40
 8008d10:	f3c3 1580 	ubfx	r5, r3, #6, #1
 8008d14:	d105      	bne.n	8008d22 <HAL_SPI_IRQHandler+0x22>
 8008d16:	f013 0f01 	tst.w	r3, #1
 8008d1a:	d002      	beq.n	8008d22 <HAL_SPI_IRQHandler+0x22>
 8008d1c:	f011 0f40 	tst.w	r1, #64	; 0x40
 8008d20:	d159      	bne.n	8008dd6 <HAL_SPI_IRQHandler+0xd6>
 8008d22:	0798      	lsls	r0, r3, #30
 8008d24:	d501      	bpl.n	8008d2a <HAL_SPI_IRQHandler+0x2a>
 8008d26:	0608      	lsls	r0, r1, #24
 8008d28:	d44f      	bmi.n	8008dca <HAL_SPI_IRQHandler+0xca>
 8008d2a:	f3c3 1040 	ubfx	r0, r3, #5, #1
 8008d2e:	069b      	lsls	r3, r3, #26
 8008d30:	d510      	bpl.n	8008d54 <HAL_SPI_IRQHandler+0x54>
 8008d32:	0688      	lsls	r0, r1, #26
 8008d34:	d50c      	bpl.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008d36:	2d00      	cmp	r5, #0
 8008d38:	d05a      	beq.n	8008df0 <HAL_SPI_IRQHandler+0xf0>
 8008d3a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008d3e:	2b03      	cmp	r3, #3
 8008d40:	d14b      	bne.n	8008dda <HAL_SPI_IRQHandler+0xda>
 8008d42:	2300      	movs	r3, #0
 8008d44:	9302      	str	r3, [sp, #8]
 8008d46:	68d3      	ldr	r3, [r2, #12]
 8008d48:	9302      	str	r3, [sp, #8]
 8008d4a:	6893      	ldr	r3, [r2, #8]
 8008d4c:	9302      	str	r3, [sp, #8]
 8008d4e:	9b02      	ldr	r3, [sp, #8]
 8008d50:	b005      	add	sp, #20
 8008d52:	bd30      	pop	{r4, r5, pc}
 8008d54:	2d00      	cmp	r5, #0
 8008d56:	d0fb      	beq.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008d58:	068b      	lsls	r3, r1, #26
 8008d5a:	d5f9      	bpl.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008d5c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008d60:	2b03      	cmp	r3, #3
 8008d62:	d0ee      	beq.n	8008d42 <HAL_SPI_IRQHandler+0x42>
 8008d64:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008d66:	f043 0304 	orr.w	r3, r3, #4
 8008d6a:	6563      	str	r3, [r4, #84]	; 0x54
 8008d6c:	9001      	str	r0, [sp, #4]
 8008d6e:	68d3      	ldr	r3, [r2, #12]
 8008d70:	9301      	str	r3, [sp, #4]
 8008d72:	6893      	ldr	r3, [r2, #8]
 8008d74:	9301      	str	r3, [sp, #4]
 8008d76:	9b01      	ldr	r3, [sp, #4]
 8008d78:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008d7a:	2b00      	cmp	r3, #0
 8008d7c:	d0e8      	beq.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008d7e:	2001      	movs	r0, #1
 8008d80:	6853      	ldr	r3, [r2, #4]
 8008d82:	0789      	lsls	r1, r1, #30
 8008d84:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8008d88:	6053      	str	r3, [r2, #4]
 8008d8a:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 8008d8e:	d03d      	beq.n	8008e0c <HAL_SPI_IRQHandler+0x10c>
 8008d90:	6853      	ldr	r3, [r2, #4]
 8008d92:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8008d94:	f023 0303 	bic.w	r3, r3, #3
 8008d98:	6053      	str	r3, [r2, #4]
 8008d9a:	b140      	cbz	r0, 8008dae <HAL_SPI_IRQHandler+0xae>
 8008d9c:	4b1d      	ldr	r3, [pc, #116]	; (8008e14 <HAL_SPI_IRQHandler+0x114>)
 8008d9e:	6343      	str	r3, [r0, #52]	; 0x34
 8008da0:	f7fd f880 	bl	8005ea4 <HAL_DMA_Abort_IT>
 8008da4:	b118      	cbz	r0, 8008dae <HAL_SPI_IRQHandler+0xae>
 8008da6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008da8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008dac:	6563      	str	r3, [r4, #84]	; 0x54
 8008dae:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8008db0:	2800      	cmp	r0, #0
 8008db2:	d0cd      	beq.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008db4:	4b17      	ldr	r3, [pc, #92]	; (8008e14 <HAL_SPI_IRQHandler+0x114>)
 8008db6:	6343      	str	r3, [r0, #52]	; 0x34
 8008db8:	f7fd f874 	bl	8005ea4 <HAL_DMA_Abort_IT>
 8008dbc:	2800      	cmp	r0, #0
 8008dbe:	d0c7      	beq.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008dc0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008dc2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008dc6:	6563      	str	r3, [r4, #84]	; 0x54
 8008dc8:	e7c2      	b.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008dca:	4620      	mov	r0, r4
 8008dcc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008dce:	b005      	add	sp, #20
 8008dd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008dd4:	4718      	bx	r3
 8008dd6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008dd8:	e7f9      	b.n	8008dce <HAL_SPI_IRQHandler+0xce>
 8008dda:	2000      	movs	r0, #0
 8008ddc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008dde:	f043 0304 	orr.w	r3, r3, #4
 8008de2:	6563      	str	r3, [r4, #84]	; 0x54
 8008de4:	9001      	str	r0, [sp, #4]
 8008de6:	68d3      	ldr	r3, [r2, #12]
 8008de8:	9301      	str	r3, [sp, #4]
 8008dea:	6893      	ldr	r3, [r2, #8]
 8008dec:	9301      	str	r3, [sp, #4]
 8008dee:	9b01      	ldr	r3, [sp, #4]
 8008df0:	2000      	movs	r0, #0
 8008df2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008df4:	f043 0301 	orr.w	r3, r3, #1
 8008df8:	6563      	str	r3, [r4, #84]	; 0x54
 8008dfa:	9003      	str	r0, [sp, #12]
 8008dfc:	6893      	ldr	r3, [r2, #8]
 8008dfe:	9303      	str	r3, [sp, #12]
 8008e00:	6813      	ldr	r3, [r2, #0]
 8008e02:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008e06:	6013      	str	r3, [r2, #0]
 8008e08:	9b03      	ldr	r3, [sp, #12]
 8008e0a:	e7b5      	b.n	8008d78 <HAL_SPI_IRQHandler+0x78>
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	f7ff ff75 	bl	8008cfc <HAL_SPI_ErrorCallback>
 8008e12:	e79d      	b.n	8008d50 <HAL_SPI_IRQHandler+0x50>
 8008e14:	08008e19 	.word	0x08008e19

08008e18 <SPI_DMAAbortOnError>:
 8008e18:	b508      	push	{r3, lr}
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008e1e:	87c3      	strh	r3, [r0, #62]	; 0x3e
 8008e20:	86c3      	strh	r3, [r0, #54]	; 0x36
 8008e22:	f7ff ff6b 	bl	8008cfc <HAL_SPI_ErrorCallback>
 8008e26:	bd08      	pop	{r3, pc}

08008e28 <HAL_TIM_Base_Init>:
 8008e28:	2800      	cmp	r0, #0
 8008e2a:	d049      	beq.n	8008ec0 <HAL_TIM_Base_Init+0x98>
 8008e2c:	b510      	push	{r4, lr}
 8008e2e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008e32:	4604      	mov	r4, r0
 8008e34:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008e38:	2b00      	cmp	r3, #0
 8008e3a:	d03c      	beq.n	8008eb6 <HAL_TIM_Base_Init+0x8e>
 8008e3c:	2302      	movs	r3, #2
 8008e3e:	6822      	ldr	r2, [r4, #0]
 8008e40:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8008e44:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008e48:	6813      	ldr	r3, [r2, #0]
 8008e4a:	d013      	beq.n	8008e74 <HAL_TIM_Base_Init+0x4c>
 8008e4c:	491d      	ldr	r1, [pc, #116]	; (8008ec4 <HAL_TIM_Base_Init+0x9c>)
 8008e4e:	428a      	cmp	r2, r1
 8008e50:	d010      	beq.n	8008e74 <HAL_TIM_Base_Init+0x4c>
 8008e52:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008e56:	428a      	cmp	r2, r1
 8008e58:	d00c      	beq.n	8008e74 <HAL_TIM_Base_Init+0x4c>
 8008e5a:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008e5e:	428a      	cmp	r2, r1
 8008e60:	d00c      	beq.n	8008e7c <HAL_TIM_Base_Init+0x54>
 8008e62:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008e66:	428a      	cmp	r2, r1
 8008e68:	d008      	beq.n	8008e7c <HAL_TIM_Base_Init+0x54>
 8008e6a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008e6e:	428a      	cmp	r2, r1
 8008e70:	d108      	bne.n	8008e84 <HAL_TIM_Base_Init+0x5c>
 8008e72:	e003      	b.n	8008e7c <HAL_TIM_Base_Init+0x54>
 8008e74:	68a1      	ldr	r1, [r4, #8]
 8008e76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008e7a:	430b      	orrs	r3, r1
 8008e7c:	6921      	ldr	r1, [r4, #16]
 8008e7e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008e82:	430b      	orrs	r3, r1
 8008e84:	2101      	movs	r1, #1
 8008e86:	6960      	ldr	r0, [r4, #20]
 8008e88:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008e8c:	4303      	orrs	r3, r0
 8008e8e:	68e0      	ldr	r0, [r4, #12]
 8008e90:	6013      	str	r3, [r2, #0]
 8008e92:	6863      	ldr	r3, [r4, #4]
 8008e94:	62d0      	str	r0, [r2, #44]	; 0x2c
 8008e96:	6293      	str	r3, [r2, #40]	; 0x28
 8008e98:	6151      	str	r1, [r2, #20]
 8008e9a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8008e9e:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
 8008ea2:	f884 103b 	strb.w	r1, [r4, #59]	; 0x3b
 8008ea6:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
 8008eaa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8008eae:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8008eb2:	2000      	movs	r0, #0
 8008eb4:	bd10      	pop	{r4, pc}
 8008eb6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8008eba:	f7fc fddb 	bl	8005a74 <HAL_TIM_Base_MspInit>
 8008ebe:	e7bd      	b.n	8008e3c <HAL_TIM_Base_Init+0x14>
 8008ec0:	2001      	movs	r0, #1
 8008ec2:	4770      	bx	lr
 8008ec4:	40000400 	.word	0x40000400

08008ec8 <HAL_TIM_Base_Start_IT>:
 8008ec8:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008ecc:	2b01      	cmp	r3, #1
 8008ece:	d120      	bne.n	8008f12 <HAL_TIM_Base_Start_IT+0x4a>
 8008ed0:	2202      	movs	r2, #2
 8008ed2:	6803      	ldr	r3, [r0, #0]
 8008ed4:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8008ed8:	68da      	ldr	r2, [r3, #12]
 8008eda:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008ede:	f042 0201 	orr.w	r2, r2, #1
 8008ee2:	60da      	str	r2, [r3, #12]
 8008ee4:	d00a      	beq.n	8008efc <HAL_TIM_Base_Start_IT+0x34>
 8008ee6:	4a0d      	ldr	r2, [pc, #52]	; (8008f1c <HAL_TIM_Base_Start_IT+0x54>)
 8008ee8:	4293      	cmp	r3, r2
 8008eea:	d007      	beq.n	8008efc <HAL_TIM_Base_Start_IT+0x34>
 8008eec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008ef0:	4293      	cmp	r3, r2
 8008ef2:	d003      	beq.n	8008efc <HAL_TIM_Base_Start_IT+0x34>
 8008ef4:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8008ef8:	4293      	cmp	r3, r2
 8008efa:	d104      	bne.n	8008f06 <HAL_TIM_Base_Start_IT+0x3e>
 8008efc:	689a      	ldr	r2, [r3, #8]
 8008efe:	f002 0207 	and.w	r2, r2, #7
 8008f02:	2a06      	cmp	r2, #6
 8008f04:	d007      	beq.n	8008f16 <HAL_TIM_Base_Start_IT+0x4e>
 8008f06:	681a      	ldr	r2, [r3, #0]
 8008f08:	2000      	movs	r0, #0
 8008f0a:	f042 0201 	orr.w	r2, r2, #1
 8008f0e:	601a      	str	r2, [r3, #0]
 8008f10:	4770      	bx	lr
 8008f12:	2001      	movs	r0, #1
 8008f14:	4770      	bx	lr
 8008f16:	2000      	movs	r0, #0
 8008f18:	4770      	bx	lr
 8008f1a:	bf00      	nop
 8008f1c:	40000400 	.word	0x40000400

08008f20 <HAL_TIM_Encoder_Init>:
 8008f20:	2800      	cmp	r0, #0
 8008f22:	d075      	beq.n	8009010 <HAL_TIM_Encoder_Init+0xf0>
 8008f24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f26:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008f2a:	4604      	mov	r4, r0
 8008f2c:	460d      	mov	r5, r1
 8008f2e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d067      	beq.n	8009006 <HAL_TIM_Encoder_Init+0xe6>
 8008f36:	2202      	movs	r2, #2
 8008f38:	6823      	ldr	r3, [r4, #0]
 8008f3a:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
 8008f3e:	689a      	ldr	r2, [r3, #8]
 8008f40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008f44:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8008f48:	f022 0207 	bic.w	r2, r2, #7
 8008f4c:	609a      	str	r2, [r3, #8]
 8008f4e:	681a      	ldr	r2, [r3, #0]
 8008f50:	d013      	beq.n	8008f7a <HAL_TIM_Encoder_Init+0x5a>
 8008f52:	4930      	ldr	r1, [pc, #192]	; (8009014 <HAL_TIM_Encoder_Init+0xf4>)
 8008f54:	428b      	cmp	r3, r1
 8008f56:	d010      	beq.n	8008f7a <HAL_TIM_Encoder_Init+0x5a>
 8008f58:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008f5c:	428b      	cmp	r3, r1
 8008f5e:	d00c      	beq.n	8008f7a <HAL_TIM_Encoder_Init+0x5a>
 8008f60:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008f64:	428b      	cmp	r3, r1
 8008f66:	d00c      	beq.n	8008f82 <HAL_TIM_Encoder_Init+0x62>
 8008f68:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008f6c:	428b      	cmp	r3, r1
 8008f6e:	d008      	beq.n	8008f82 <HAL_TIM_Encoder_Init+0x62>
 8008f70:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008f74:	428b      	cmp	r3, r1
 8008f76:	d108      	bne.n	8008f8a <HAL_TIM_Encoder_Init+0x6a>
 8008f78:	e003      	b.n	8008f82 <HAL_TIM_Encoder_Init+0x62>
 8008f7a:	68a1      	ldr	r1, [r4, #8]
 8008f7c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008f80:	430a      	orrs	r2, r1
 8008f82:	6921      	ldr	r1, [r4, #16]
 8008f84:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8008f88:	430a      	orrs	r2, r1
 8008f8a:	2601      	movs	r6, #1
 8008f8c:	6961      	ldr	r1, [r4, #20]
 8008f8e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008f92:	430a      	orrs	r2, r1
 8008f94:	68e1      	ldr	r1, [r4, #12]
 8008f96:	601a      	str	r2, [r3, #0]
 8008f98:	6862      	ldr	r2, [r4, #4]
 8008f9a:	62d9      	str	r1, [r3, #44]	; 0x2c
 8008f9c:	629a      	str	r2, [r3, #40]	; 0x28
 8008f9e:	69a9      	ldr	r1, [r5, #24]
 8008fa0:	68aa      	ldr	r2, [r5, #8]
 8008fa2:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 8008fa6:	692a      	ldr	r2, [r5, #16]
 8008fa8:	615e      	str	r6, [r3, #20]
 8008faa:	6898      	ldr	r0, [r3, #8]
 8008fac:	699f      	ldr	r7, [r3, #24]
 8008fae:	0112      	lsls	r2, r2, #4
 8008fb0:	f427 7c40 	bic.w	ip, r7, #768	; 0x300
 8008fb4:	69ef      	ldr	r7, [r5, #28]
 8008fb6:	f02c 0c03 	bic.w	ip, ip, #3
 8008fba:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8008fbe:	68ef      	ldr	r7, [r5, #12]
 8008fc0:	ea41 010c 	orr.w	r1, r1, ip
 8008fc4:	433a      	orrs	r2, r7
 8008fc6:	6a1f      	ldr	r7, [r3, #32]
 8008fc8:	f421 417c 	bic.w	r1, r1, #64512	; 0xfc00
 8008fcc:	f027 0caa 	bic.w	ip, r7, #170	; 0xaa
 8008fd0:	6a2f      	ldr	r7, [r5, #32]
 8008fd2:	f021 01fc 	bic.w	r1, r1, #252	; 0xfc
 8008fd6:	ea42 3207 	orr.w	r2, r2, r7, lsl #12
 8008fda:	430a      	orrs	r2, r1
 8008fdc:	696f      	ldr	r7, [r5, #20]
 8008fde:	6869      	ldr	r1, [r5, #4]
 8008fe0:	682d      	ldr	r5, [r5, #0]
 8008fe2:	ea41 1107 	orr.w	r1, r1, r7, lsl #4
 8008fe6:	4328      	orrs	r0, r5
 8008fe8:	ea41 010c 	orr.w	r1, r1, ip
 8008fec:	6098      	str	r0, [r3, #8]
 8008fee:	619a      	str	r2, [r3, #24]
 8008ff0:	6219      	str	r1, [r3, #32]
 8008ff2:	f884 603e 	strb.w	r6, [r4, #62]	; 0x3e
 8008ff6:	f884 603a 	strb.w	r6, [r4, #58]	; 0x3a
 8008ffa:	f884 603b 	strb.w	r6, [r4, #59]	; 0x3b
 8008ffe:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8009002:	2000      	movs	r0, #0
 8009004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009006:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800900a:	f7fc fd73 	bl	8005af4 <HAL_TIM_Encoder_MspInit>
 800900e:	e792      	b.n	8008f36 <HAL_TIM_Encoder_Init+0x16>
 8009010:	2001      	movs	r0, #1
 8009012:	4770      	bx	lr
 8009014:	40000400 	.word	0x40000400

08009018 <HAL_TIM_Encoder_Start>:
 8009018:	4603      	mov	r3, r0
 800901a:	f890 003a 	ldrb.w	r0, [r0, #58]	; 0x3a
 800901e:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8009022:	b2c0      	uxtb	r0, r0
 8009024:	b2d2      	uxtb	r2, r2
 8009026:	b9a9      	cbnz	r1, 8009054 <HAL_TIM_Encoder_Start+0x3c>
 8009028:	2801      	cmp	r0, #1
 800902a:	d001      	beq.n	8009030 <HAL_TIM_Encoder_Start+0x18>
 800902c:	2001      	movs	r0, #1
 800902e:	4770      	bx	lr
 8009030:	2102      	movs	r1, #2
 8009032:	681a      	ldr	r2, [r3, #0]
 8009034:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8009038:	6a13      	ldr	r3, [r2, #32]
 800903a:	f023 0301 	bic.w	r3, r3, #1
 800903e:	6213      	str	r3, [r2, #32]
 8009040:	6a13      	ldr	r3, [r2, #32]
 8009042:	f043 0301 	orr.w	r3, r3, #1
 8009046:	6213      	str	r3, [r2, #32]
 8009048:	6813      	ldr	r3, [r2, #0]
 800904a:	2000      	movs	r0, #0
 800904c:	f043 0301 	orr.w	r3, r3, #1
 8009050:	6013      	str	r3, [r2, #0]
 8009052:	4770      	bx	lr
 8009054:	2904      	cmp	r1, #4
 8009056:	d01a      	beq.n	800908e <HAL_TIM_Encoder_Start+0x76>
 8009058:	2801      	cmp	r0, #1
 800905a:	d1e7      	bne.n	800902c <HAL_TIM_Encoder_Start+0x14>
 800905c:	2a01      	cmp	r2, #1
 800905e:	d1e6      	bne.n	800902e <HAL_TIM_Encoder_Start+0x16>
 8009060:	2102      	movs	r1, #2
 8009062:	681a      	ldr	r2, [r3, #0]
 8009064:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8009068:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 800906c:	6a13      	ldr	r3, [r2, #32]
 800906e:	f023 0301 	bic.w	r3, r3, #1
 8009072:	6213      	str	r3, [r2, #32]
 8009074:	6a13      	ldr	r3, [r2, #32]
 8009076:	f043 0301 	orr.w	r3, r3, #1
 800907a:	6213      	str	r3, [r2, #32]
 800907c:	6a13      	ldr	r3, [r2, #32]
 800907e:	f023 0310 	bic.w	r3, r3, #16
 8009082:	6213      	str	r3, [r2, #32]
 8009084:	6a13      	ldr	r3, [r2, #32]
 8009086:	f043 0310 	orr.w	r3, r3, #16
 800908a:	6213      	str	r3, [r2, #32]
 800908c:	e7dc      	b.n	8009048 <HAL_TIM_Encoder_Start+0x30>
 800908e:	2a01      	cmp	r2, #1
 8009090:	d1cc      	bne.n	800902c <HAL_TIM_Encoder_Start+0x14>
 8009092:	2102      	movs	r1, #2
 8009094:	681a      	ldr	r2, [r3, #0]
 8009096:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 800909a:	e7ef      	b.n	800907c <HAL_TIM_Encoder_Start+0x64>

0800909c <HAL_TIM_ConfigClockSource>:
 800909c:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 80090a0:	2a01      	cmp	r2, #1
 80090a2:	d075      	beq.n	8009190 <HAL_TIM_ConfigClockSource+0xf4>
 80090a4:	b430      	push	{r4, r5}
 80090a6:	4603      	mov	r3, r0
 80090a8:	2401      	movs	r4, #1
 80090aa:	2202      	movs	r2, #2
 80090ac:	6800      	ldr	r0, [r0, #0]
 80090ae:	f883 4038 	strb.w	r4, [r3, #56]	; 0x38
 80090b2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80090b6:	6884      	ldr	r4, [r0, #8]
 80090b8:	680a      	ldr	r2, [r1, #0]
 80090ba:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 80090be:	f024 0477 	bic.w	r4, r4, #119	; 0x77
 80090c2:	2a60      	cmp	r2, #96	; 0x60
 80090c4:	6084      	str	r4, [r0, #8]
 80090c6:	d065      	beq.n	8009194 <HAL_TIM_ConfigClockSource+0xf8>
 80090c8:	d831      	bhi.n	800912e <HAL_TIM_ConfigClockSource+0x92>
 80090ca:	2a40      	cmp	r2, #64	; 0x40
 80090cc:	d048      	beq.n	8009160 <HAL_TIM_ConfigClockSource+0xc4>
 80090ce:	d921      	bls.n	8009114 <HAL_TIM_ConfigClockSource+0x78>
 80090d0:	2a50      	cmp	r2, #80	; 0x50
 80090d2:	d116      	bne.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 80090d4:	684c      	ldr	r4, [r1, #4]
 80090d6:	68cd      	ldr	r5, [r1, #12]
 80090d8:	6a01      	ldr	r1, [r0, #32]
 80090da:	f021 010a 	bic.w	r1, r1, #10
 80090de:	4321      	orrs	r1, r4
 80090e0:	6a04      	ldr	r4, [r0, #32]
 80090e2:	f024 0401 	bic.w	r4, r4, #1
 80090e6:	6204      	str	r4, [r0, #32]
 80090e8:	6982      	ldr	r2, [r0, #24]
 80090ea:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80090ee:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 80090f2:	6182      	str	r2, [r0, #24]
 80090f4:	6201      	str	r1, [r0, #32]
 80090f6:	6882      	ldr	r2, [r0, #8]
 80090f8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80090fc:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 8009100:	6082      	str	r2, [r0, #8]
 8009102:	2200      	movs	r2, #0
 8009104:	2101      	movs	r1, #1
 8009106:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800910a:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 800910e:	4610      	mov	r0, r2
 8009110:	bc30      	pop	{r4, r5}
 8009112:	4770      	bx	lr
 8009114:	2a20      	cmp	r2, #32
 8009116:	d002      	beq.n	800911e <HAL_TIM_ConfigClockSource+0x82>
 8009118:	d91e      	bls.n	8009158 <HAL_TIM_ConfigClockSource+0xbc>
 800911a:	2a30      	cmp	r2, #48	; 0x30
 800911c:	d1f1      	bne.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 800911e:	6881      	ldr	r1, [r0, #8]
 8009120:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8009124:	430a      	orrs	r2, r1
 8009126:	f042 0207 	orr.w	r2, r2, #7
 800912a:	6082      	str	r2, [r0, #8]
 800912c:	e7e9      	b.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 800912e:	2a70      	cmp	r2, #112	; 0x70
 8009130:	d049      	beq.n	80091c6 <HAL_TIM_ConfigClockSource+0x12a>
 8009132:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8009136:	d1e4      	bne.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 8009138:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 800913c:	6884      	ldr	r4, [r0, #8]
 800913e:	432a      	orrs	r2, r5
 8009140:	68cd      	ldr	r5, [r1, #12]
 8009142:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 8009146:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800914a:	430a      	orrs	r2, r1
 800914c:	6082      	str	r2, [r0, #8]
 800914e:	6882      	ldr	r2, [r0, #8]
 8009150:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009154:	6082      	str	r2, [r0, #8]
 8009156:	e7d4      	b.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 8009158:	f032 0110 	bics.w	r1, r2, #16
 800915c:	d1d1      	bne.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 800915e:	e7de      	b.n	800911e <HAL_TIM_ConfigClockSource+0x82>
 8009160:	684c      	ldr	r4, [r1, #4]
 8009162:	68cd      	ldr	r5, [r1, #12]
 8009164:	6a01      	ldr	r1, [r0, #32]
 8009166:	f021 010a 	bic.w	r1, r1, #10
 800916a:	4321      	orrs	r1, r4
 800916c:	6a04      	ldr	r4, [r0, #32]
 800916e:	f024 0401 	bic.w	r4, r4, #1
 8009172:	6204      	str	r4, [r0, #32]
 8009174:	6982      	ldr	r2, [r0, #24]
 8009176:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800917a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 800917e:	6182      	str	r2, [r0, #24]
 8009180:	6201      	str	r1, [r0, #32]
 8009182:	6882      	ldr	r2, [r0, #8]
 8009184:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8009188:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 800918c:	6082      	str	r2, [r0, #8]
 800918e:	e7b8      	b.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 8009190:	2002      	movs	r0, #2
 8009192:	4770      	bx	lr
 8009194:	6a04      	ldr	r4, [r0, #32]
 8009196:	68ca      	ldr	r2, [r1, #12]
 8009198:	f024 0410 	bic.w	r4, r4, #16
 800919c:	684d      	ldr	r5, [r1, #4]
 800919e:	6204      	str	r4, [r0, #32]
 80091a0:	6981      	ldr	r1, [r0, #24]
 80091a2:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 80091a6:	ea41 3102 	orr.w	r1, r1, r2, lsl #12
 80091aa:	6a02      	ldr	r2, [r0, #32]
 80091ac:	6181      	str	r1, [r0, #24]
 80091ae:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 80091b2:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 80091b6:	6202      	str	r2, [r0, #32]
 80091b8:	6882      	ldr	r2, [r0, #8]
 80091ba:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80091be:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 80091c2:	6082      	str	r2, [r0, #8]
 80091c4:	e79d      	b.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 80091c6:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 80091ca:	6884      	ldr	r4, [r0, #8]
 80091cc:	432a      	orrs	r2, r5
 80091ce:	68cd      	ldr	r5, [r1, #12]
 80091d0:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 80091d4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80091d8:	430a      	orrs	r2, r1
 80091da:	6082      	str	r2, [r0, #8]
 80091dc:	6882      	ldr	r2, [r0, #8]
 80091de:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 80091e2:	6082      	str	r2, [r0, #8]
 80091e4:	e78d      	b.n	8009102 <HAL_TIM_ConfigClockSource+0x66>
 80091e6:	bf00      	nop

080091e8 <HAL_TIM_OC_DelayElapsedCallback>:
 80091e8:	4770      	bx	lr
 80091ea:	bf00      	nop

080091ec <HAL_TIM_IC_CaptureCallback>:
 80091ec:	4770      	bx	lr
 80091ee:	bf00      	nop

080091f0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80091f0:	4770      	bx	lr
 80091f2:	bf00      	nop

080091f4 <HAL_TIM_TriggerCallback>:
 80091f4:	4770      	bx	lr
 80091f6:	bf00      	nop

080091f8 <HAL_TIM_IRQHandler>:
 80091f8:	6803      	ldr	r3, [r0, #0]
 80091fa:	b510      	push	{r4, lr}
 80091fc:	691a      	ldr	r2, [r3, #16]
 80091fe:	4604      	mov	r4, r0
 8009200:	0791      	lsls	r1, r2, #30
 8009202:	d502      	bpl.n	800920a <HAL_TIM_IRQHandler+0x12>
 8009204:	68da      	ldr	r2, [r3, #12]
 8009206:	0792      	lsls	r2, r2, #30
 8009208:	d450      	bmi.n	80092ac <HAL_TIM_IRQHandler+0xb4>
 800920a:	691a      	ldr	r2, [r3, #16]
 800920c:	0752      	lsls	r2, r2, #29
 800920e:	d502      	bpl.n	8009216 <HAL_TIM_IRQHandler+0x1e>
 8009210:	68da      	ldr	r2, [r3, #12]
 8009212:	0750      	lsls	r0, r2, #29
 8009214:	d437      	bmi.n	8009286 <HAL_TIM_IRQHandler+0x8e>
 8009216:	691a      	ldr	r2, [r3, #16]
 8009218:	0711      	lsls	r1, r2, #28
 800921a:	d502      	bpl.n	8009222 <HAL_TIM_IRQHandler+0x2a>
 800921c:	68da      	ldr	r2, [r3, #12]
 800921e:	0712      	lsls	r2, r2, #28
 8009220:	d422      	bmi.n	8009268 <HAL_TIM_IRQHandler+0x70>
 8009222:	691a      	ldr	r2, [r3, #16]
 8009224:	06d0      	lsls	r0, r2, #27
 8009226:	d502      	bpl.n	800922e <HAL_TIM_IRQHandler+0x36>
 8009228:	68da      	ldr	r2, [r3, #12]
 800922a:	06d1      	lsls	r1, r2, #27
 800922c:	d40c      	bmi.n	8009248 <HAL_TIM_IRQHandler+0x50>
 800922e:	691a      	ldr	r2, [r3, #16]
 8009230:	07d2      	lsls	r2, r2, #31
 8009232:	d502      	bpl.n	800923a <HAL_TIM_IRQHandler+0x42>
 8009234:	68da      	ldr	r2, [r3, #12]
 8009236:	07d0      	lsls	r0, r2, #31
 8009238:	d450      	bmi.n	80092dc <HAL_TIM_IRQHandler+0xe4>
 800923a:	691a      	ldr	r2, [r3, #16]
 800923c:	0651      	lsls	r1, r2, #25
 800923e:	d502      	bpl.n	8009246 <HAL_TIM_IRQHandler+0x4e>
 8009240:	68da      	ldr	r2, [r3, #12]
 8009242:	0652      	lsls	r2, r2, #25
 8009244:	d443      	bmi.n	80092ce <HAL_TIM_IRQHandler+0xd6>
 8009246:	bd10      	pop	{r4, pc}
 8009248:	f06f 0110 	mvn.w	r1, #16
 800924c:	2208      	movs	r2, #8
 800924e:	6119      	str	r1, [r3, #16]
 8009250:	7622      	strb	r2, [r4, #24]
 8009252:	69db      	ldr	r3, [r3, #28]
 8009254:	4620      	mov	r0, r4
 8009256:	f413 7f40 	tst.w	r3, #768	; 0x300
 800925a:	d047      	beq.n	80092ec <HAL_TIM_IRQHandler+0xf4>
 800925c:	f7ff ffc6 	bl	80091ec <HAL_TIM_IC_CaptureCallback>
 8009260:	2200      	movs	r2, #0
 8009262:	6823      	ldr	r3, [r4, #0]
 8009264:	7622      	strb	r2, [r4, #24]
 8009266:	e7e2      	b.n	800922e <HAL_TIM_IRQHandler+0x36>
 8009268:	f06f 0108 	mvn.w	r1, #8
 800926c:	2204      	movs	r2, #4
 800926e:	6119      	str	r1, [r3, #16]
 8009270:	7622      	strb	r2, [r4, #24]
 8009272:	69db      	ldr	r3, [r3, #28]
 8009274:	4620      	mov	r0, r4
 8009276:	079b      	lsls	r3, r3, #30
 8009278:	d044      	beq.n	8009304 <HAL_TIM_IRQHandler+0x10c>
 800927a:	f7ff ffb7 	bl	80091ec <HAL_TIM_IC_CaptureCallback>
 800927e:	2200      	movs	r2, #0
 8009280:	6823      	ldr	r3, [r4, #0]
 8009282:	7622      	strb	r2, [r4, #24]
 8009284:	e7cd      	b.n	8009222 <HAL_TIM_IRQHandler+0x2a>
 8009286:	f06f 0104 	mvn.w	r1, #4
 800928a:	2202      	movs	r2, #2
 800928c:	6119      	str	r1, [r3, #16]
 800928e:	7622      	strb	r2, [r4, #24]
 8009290:	699b      	ldr	r3, [r3, #24]
 8009292:	4620      	mov	r0, r4
 8009294:	f413 7f40 	tst.w	r3, #768	; 0x300
 8009298:	d131      	bne.n	80092fe <HAL_TIM_IRQHandler+0x106>
 800929a:	f7ff ffa5 	bl	80091e8 <HAL_TIM_OC_DelayElapsedCallback>
 800929e:	4620      	mov	r0, r4
 80092a0:	f7ff ffa6 	bl	80091f0 <HAL_TIM_PWM_PulseFinishedCallback>
 80092a4:	2200      	movs	r2, #0
 80092a6:	6823      	ldr	r3, [r4, #0]
 80092a8:	7622      	strb	r2, [r4, #24]
 80092aa:	e7b4      	b.n	8009216 <HAL_TIM_IRQHandler+0x1e>
 80092ac:	f06f 0102 	mvn.w	r1, #2
 80092b0:	2201      	movs	r2, #1
 80092b2:	6119      	str	r1, [r3, #16]
 80092b4:	7602      	strb	r2, [r0, #24]
 80092b6:	699b      	ldr	r3, [r3, #24]
 80092b8:	0799      	lsls	r1, r3, #30
 80092ba:	d11d      	bne.n	80092f8 <HAL_TIM_IRQHandler+0x100>
 80092bc:	f7ff ff94 	bl	80091e8 <HAL_TIM_OC_DelayElapsedCallback>
 80092c0:	4620      	mov	r0, r4
 80092c2:	f7ff ff95 	bl	80091f0 <HAL_TIM_PWM_PulseFinishedCallback>
 80092c6:	2200      	movs	r2, #0
 80092c8:	6823      	ldr	r3, [r4, #0]
 80092ca:	7622      	strb	r2, [r4, #24]
 80092cc:	e79d      	b.n	800920a <HAL_TIM_IRQHandler+0x12>
 80092ce:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80092d2:	4620      	mov	r0, r4
 80092d4:	611a      	str	r2, [r3, #16]
 80092d6:	f7ff ff8d 	bl	80091f4 <HAL_TIM_TriggerCallback>
 80092da:	bd10      	pop	{r4, pc}
 80092dc:	f06f 0201 	mvn.w	r2, #1
 80092e0:	4620      	mov	r0, r4
 80092e2:	611a      	str	r2, [r3, #16]
 80092e4:	f7fb f918 	bl	8004518 <HAL_TIM_PeriodElapsedCallback>
 80092e8:	6823      	ldr	r3, [r4, #0]
 80092ea:	e7a6      	b.n	800923a <HAL_TIM_IRQHandler+0x42>
 80092ec:	f7ff ff7c 	bl	80091e8 <HAL_TIM_OC_DelayElapsedCallback>
 80092f0:	4620      	mov	r0, r4
 80092f2:	f7ff ff7d 	bl	80091f0 <HAL_TIM_PWM_PulseFinishedCallback>
 80092f6:	e7b3      	b.n	8009260 <HAL_TIM_IRQHandler+0x68>
 80092f8:	f7ff ff78 	bl	80091ec <HAL_TIM_IC_CaptureCallback>
 80092fc:	e7e3      	b.n	80092c6 <HAL_TIM_IRQHandler+0xce>
 80092fe:	f7ff ff75 	bl	80091ec <HAL_TIM_IC_CaptureCallback>
 8009302:	e7cf      	b.n	80092a4 <HAL_TIM_IRQHandler+0xac>
 8009304:	f7ff ff70 	bl	80091e8 <HAL_TIM_OC_DelayElapsedCallback>
 8009308:	4620      	mov	r0, r4
 800930a:	f7ff ff71 	bl	80091f0 <HAL_TIM_PWM_PulseFinishedCallback>
 800930e:	e7b6      	b.n	800927e <HAL_TIM_IRQHandler+0x86>

08009310 <HAL_TIMEx_MasterConfigSynchronization>:
 8009310:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8009314:	2a01      	cmp	r2, #1
 8009316:	d028      	beq.n	800936a <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 8009318:	4603      	mov	r3, r0
 800931a:	2002      	movs	r0, #2
 800931c:	681a      	ldr	r2, [r3, #0]
 800931e:	b430      	push	{r4, r5}
 8009320:	f883 0039 	strb.w	r0, [r3, #57]	; 0x39
 8009324:	6850      	ldr	r0, [r2, #4]
 8009326:	680d      	ldr	r5, [r1, #0]
 8009328:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 800932c:	4328      	orrs	r0, r5
 800932e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8009332:	6894      	ldr	r4, [r2, #8]
 8009334:	6050      	str	r0, [r2, #4]
 8009336:	d00a      	beq.n	800934e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8009338:	480d      	ldr	r0, [pc, #52]	; (8009370 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 800933a:	4282      	cmp	r2, r0
 800933c:	d007      	beq.n	800934e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 800933e:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8009342:	4282      	cmp	r2, r0
 8009344:	d003      	beq.n	800934e <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8009346:	f500 3080 	add.w	r0, r0, #65536	; 0x10000
 800934a:	4282      	cmp	r2, r0
 800934c:	d104      	bne.n	8009358 <HAL_TIMEx_MasterConfigSynchronization+0x48>
 800934e:	6849      	ldr	r1, [r1, #4]
 8009350:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8009354:	430c      	orrs	r4, r1
 8009356:	6094      	str	r4, [r2, #8]
 8009358:	2200      	movs	r2, #0
 800935a:	2101      	movs	r1, #1
 800935c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8009360:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8009364:	4610      	mov	r0, r2
 8009366:	bc30      	pop	{r4, r5}
 8009368:	4770      	bx	lr
 800936a:	2002      	movs	r0, #2
 800936c:	4770      	bx	lr
 800936e:	bf00      	nop
 8009370:	40000400 	.word	0x40000400

08009374 <USB_EnableGlobalInt>:
 8009374:	4603      	mov	r3, r0
 8009376:	2200      	movs	r2, #0
 8009378:	f44f 413f 	mov.w	r1, #48896	; 0xbf00
 800937c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8009380:	4610      	mov	r0, r2
 8009382:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8009386:	4770      	bx	lr

08009388 <USB_DisableGlobalInt>:
 8009388:	4603      	mov	r3, r0
 800938a:	f244 02ff 	movw	r2, #16639	; 0x40ff
 800938e:	f8b3 1040 	ldrh.w	r1, [r3, #64]	; 0x40
 8009392:	2000      	movs	r0, #0
 8009394:	400a      	ands	r2, r1
 8009396:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800939a:	4770      	bx	lr

0800939c <USB_DevInit>:
 800939c:	b084      	sub	sp, #16
 800939e:	f10d 0c04 	add.w	ip, sp, #4
 80093a2:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 80093a6:	4603      	mov	r3, r0
 80093a8:	2200      	movs	r2, #0
 80093aa:	2101      	movs	r1, #1
 80093ac:	4610      	mov	r0, r2
 80093ae:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 80093b2:	b004      	add	sp, #16
 80093b4:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80093b8:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 80093bc:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 80093c0:	4770      	bx	lr
 80093c2:	bf00      	nop

080093c4 <USB_ActivateEndpoint>:
 80093c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093c6:	780a      	ldrb	r2, [r1, #0]
 80093c8:	f891 e003 	ldrb.w	lr, [r1, #3]
 80093cc:	f830 c022 	ldrh.w	ip, [r0, r2, lsl #2]
 80093d0:	4603      	mov	r3, r0
 80093d2:	f42c 4cec 	bic.w	ip, ip, #30208	; 0x7600
 80093d6:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 80093da:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 80093de:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80093e2:	f1be 0f03 	cmp.w	lr, #3
 80093e6:	f200 815a 	bhi.w	800969e <USB_ActivateEndpoint+0x2da>
 80093ea:	e8df f00e 	tbb	[pc, lr]
 80093ee:	4e52      	.short	0x4e52
 80093f0:	0204      	.short	0x0204
 80093f2:	f44c 6cc0 	orr.w	ip, ip, #1536	; 0x600
 80093f6:	2000      	movs	r0, #0
 80093f8:	f248 0580 	movw	r5, #32896	; 0x8080
 80093fc:	ea4c 0c05 	orr.w	ip, ip, r5
 8009400:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8009404:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8009408:	4ca6      	ldr	r4, [pc, #664]	; (80096a4 <USB_ActivateEndpoint+0x2e0>)
 800940a:	fa1f fc8c 	uxth.w	ip, ip
 800940e:	ea0c 0c04 	and.w	ip, ip, r4
 8009412:	ea4c 0c02 	orr.w	ip, ip, r2
 8009416:	ea45 050c 	orr.w	r5, r5, ip
 800941a:	f823 5022 	strh.w	r5, [r3, r2, lsl #2]
 800941e:	7b0d      	ldrb	r5, [r1, #12]
 8009420:	2d00      	cmp	r5, #0
 8009422:	d17e      	bne.n	8009522 <USB_ActivateEndpoint+0x15e>
 8009424:	784d      	ldrb	r5, [r1, #1]
 8009426:	2d00      	cmp	r5, #0
 8009428:	f000 80dd 	beq.w	80095e6 <USB_ActivateEndpoint+0x222>
 800942c:	88c9      	ldrh	r1, [r1, #6]
 800942e:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8009432:	0849      	lsrs	r1, r1, #1
 8009434:	eb03 1602 	add.w	r6, r3, r2, lsl #4
 8009438:	0049      	lsls	r1, r1, #1
 800943a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800943e:	b2ad      	uxth	r5, r5
 8009440:	5371      	strh	r1, [r6, r5]
 8009442:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009446:	064e      	lsls	r6, r1, #25
 8009448:	d509      	bpl.n	800945e <USB_ActivateEndpoint+0x9a>
 800944a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800944e:	b289      	uxth	r1, r1
 8009450:	400c      	ands	r4, r1
 8009452:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8009456:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
 800945a:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 800945e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009462:	f1be 0f01 	cmp.w	lr, #1
 8009466:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800946a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800946e:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8009472:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8009476:	d04d      	beq.n	8009514 <USB_ActivateEndpoint+0x150>
 8009478:	f081 0120 	eor.w	r1, r1, #32
 800947c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009480:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8009484:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009488:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800948a:	2000      	movs	r0, #0
 800948c:	f44c 6c80 	orr.w	ip, ip, #1024	; 0x400
 8009490:	e7b2      	b.n	80093f8 <USB_ActivateEndpoint+0x34>
 8009492:	4670      	mov	r0, lr
 8009494:	f44c 7c00 	orr.w	ip, ip, #512	; 0x200
 8009498:	e7ae      	b.n	80093f8 <USB_ActivateEndpoint+0x34>
 800949a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800949e:	044d      	lsls	r5, r1, #17
 80094a0:	d509      	bpl.n	80094b6 <USB_ActivateEndpoint+0xf2>
 80094a2:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80094a6:	b289      	uxth	r1, r1
 80094a8:	400c      	ands	r4, r1
 80094aa:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 80094ae:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80094b2:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 80094b6:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80094ba:	0649      	lsls	r1, r1, #25
 80094bc:	d50d      	bpl.n	80094da <USB_ActivateEndpoint+0x116>
 80094be:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80094c2:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80094c6:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80094ca:	0409      	lsls	r1, r1, #16
 80094cc:	0c09      	lsrs	r1, r1, #16
 80094ce:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80094d2:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 80094d6:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80094da:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80094de:	f1be 0f01 	cmp.w	lr, #1
 80094e2:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80094e6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80094ea:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80094ee:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80094f2:	bf18      	it	ne
 80094f4:	f081 0120 	eorne.w	r1, r1, #32
 80094f8:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80094fc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8009500:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009504:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009508:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800950c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8009510:	0409      	lsls	r1, r1, #16
 8009512:	0c09      	lsrs	r1, r1, #16
 8009514:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009518:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800951c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009520:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009522:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8009526:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 800952a:	fa1f fc8c 	uxth.w	ip, ip
 800952e:	ea0c 0c04 	and.w	ip, ip, r4
 8009532:	f44c 4c01 	orr.w	ip, ip, #33024	; 0x8100
 8009536:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 800953a:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 800953e:	f8b3 c050 	ldrh.w	ip, [r3, #80]	; 0x50
 8009542:	890e      	ldrh	r6, [r1, #8]
 8009544:	fa1f fc8c 	uxth.w	ip, ip
 8009548:	0876      	lsrs	r6, r6, #1
 800954a:	44bc      	add	ip, r7
 800954c:	0076      	lsls	r6, r6, #1
 800954e:	f8ac 6400 	strh.w	r6, [ip, #1024]	; 0x400
 8009552:	f8b1 c00a 	ldrh.w	ip, [r1, #10]
 8009556:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 800955a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800955e:	b2ad      	uxth	r5, r5
 8009560:	443d      	add	r5, r7
 8009562:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8009566:	f8a5 c408 	strh.w	ip, [r5, #1032]	; 0x408
 800956a:	7849      	ldrb	r1, [r1, #1]
 800956c:	2900      	cmp	r1, #0
 800956e:	d194      	bne.n	800949a <USB_ActivateEndpoint+0xd6>
 8009570:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009574:	044f      	lsls	r7, r1, #17
 8009576:	d509      	bpl.n	800958c <USB_ActivateEndpoint+0x1c8>
 8009578:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 800957c:	b289      	uxth	r1, r1
 800957e:	400c      	ands	r4, r1
 8009580:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8009584:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009588:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 800958c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009590:	064e      	lsls	r6, r1, #25
 8009592:	d50d      	bpl.n	80095b0 <USB_ActivateEndpoint+0x1ec>
 8009594:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009598:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800959c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80095a0:	0409      	lsls	r1, r1, #16
 80095a2:	0c09      	lsrs	r1, r1, #16
 80095a4:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80095a8:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 80095ac:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80095b0:	f248 0480 	movw	r4, #32896	; 0x8080
 80095b4:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80095b8:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 80095bc:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 80095c0:	0409      	lsls	r1, r1, #16
 80095c2:	0c09      	lsrs	r1, r1, #16
 80095c4:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 80095c8:	4321      	orrs	r1, r4
 80095ca:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80095ce:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 80095d2:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 80095d6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80095da:	0409      	lsls	r1, r1, #16
 80095dc:	0c09      	lsrs	r1, r1, #16
 80095de:	4321      	orrs	r1, r4
 80095e0:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 80095e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80095e6:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 80095ea:	88cd      	ldrh	r5, [r1, #6]
 80095ec:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 80095f0:	b2a4      	uxth	r4, r4
 80095f2:	086d      	lsrs	r5, r5, #1
 80095f4:	006d      	lsls	r5, r5, #1
 80095f6:	443c      	add	r4, r7
 80095f8:	690e      	ldr	r6, [r1, #16]
 80095fa:	f8a4 5408 	strh.w	r5, [r4, #1032]	; 0x408
 80095fe:	f8b3 1050 	ldrh.w	r1, [r3, #80]	; 0x50
 8009602:	b289      	uxth	r1, r1
 8009604:	4439      	add	r1, r7
 8009606:	b366      	cbz	r6, 8009662 <USB_ActivateEndpoint+0x29e>
 8009608:	2e3e      	cmp	r6, #62	; 0x3e
 800960a:	d83c      	bhi.n	8009686 <USB_ActivateEndpoint+0x2c2>
 800960c:	0874      	lsrs	r4, r6, #1
 800960e:	07f5      	lsls	r5, r6, #31
 8009610:	bf48      	it	mi
 8009612:	3401      	addmi	r4, #1
 8009614:	02a4      	lsls	r4, r4, #10
 8009616:	b2a4      	uxth	r4, r4
 8009618:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 800961c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009620:	0449      	lsls	r1, r1, #17
 8009622:	d50d      	bpl.n	8009640 <USB_ActivateEndpoint+0x27c>
 8009624:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009628:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 800962c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8009630:	0409      	lsls	r1, r1, #16
 8009632:	0c09      	lsrs	r1, r1, #16
 8009634:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8009638:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800963c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009640:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8009644:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8009648:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800964c:	0409      	lsls	r1, r1, #16
 800964e:	0c09      	lsrs	r1, r1, #16
 8009650:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8009654:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009658:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800965c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8009660:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009662:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8009666:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 800966a:	0424      	lsls	r4, r4, #16
 800966c:	0c24      	lsrs	r4, r4, #16
 800966e:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8009672:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8009676:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 800967a:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 800967e:	b2a4      	uxth	r4, r4
 8009680:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8009684:	e7ca      	b.n	800961c <USB_ActivateEndpoint+0x258>
 8009686:	0975      	lsrs	r5, r6, #5
 8009688:	06f4      	lsls	r4, r6, #27
 800968a:	4c07      	ldr	r4, [pc, #28]	; (80096a8 <USB_ActivateEndpoint+0x2e4>)
 800968c:	bf08      	it	eq
 800968e:	f105 35ff 	addeq.w	r5, r5, #4294967295
 8009692:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
 8009696:	b2a4      	uxth	r4, r4
 8009698:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 800969c:	e7be      	b.n	800961c <USB_ActivateEndpoint+0x258>
 800969e:	2001      	movs	r0, #1
 80096a0:	e6aa      	b.n	80093f8 <USB_ActivateEndpoint+0x34>
 80096a2:	bf00      	nop
 80096a4:	ffff8f8f 	.word	0xffff8f8f
 80096a8:	ffff8000 	.word	0xffff8000

080096ac <USB_DeactivateEndpoint>:
 80096ac:	7b0b      	ldrb	r3, [r1, #12]
 80096ae:	b9cb      	cbnz	r3, 80096e4 <USB_DeactivateEndpoint+0x38>
 80096b0:	784b      	ldrb	r3, [r1, #1]
 80096b2:	780a      	ldrb	r2, [r1, #0]
 80096b4:	2b00      	cmp	r3, #0
 80096b6:	f000 80b1 	beq.w	800981c <USB_DeactivateEndpoint+0x170>
 80096ba:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096be:	0659      	lsls	r1, r3, #25
 80096c0:	f100 80c5 	bmi.w	800984e <USB_DeactivateEndpoint+0x1a2>
 80096c4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096c8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80096cc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80096d0:	041b      	lsls	r3, r3, #16
 80096d2:	0c1b      	lsrs	r3, r3, #16
 80096d4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80096d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80096dc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80096e0:	2000      	movs	r0, #0
 80096e2:	4770      	bx	lr
 80096e4:	784b      	ldrb	r3, [r1, #1]
 80096e6:	780a      	ldrb	r2, [r1, #0]
 80096e8:	2b00      	cmp	r3, #0
 80096ea:	d14b      	bne.n	8009784 <USB_DeactivateEndpoint+0xd8>
 80096ec:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096f0:	0459      	lsls	r1, r3, #17
 80096f2:	d50d      	bpl.n	8009710 <USB_DeactivateEndpoint+0x64>
 80096f4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096f8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80096fc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009700:	041b      	lsls	r3, r3, #16
 8009702:	0c1b      	lsrs	r3, r3, #16
 8009704:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009708:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800970c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009710:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009714:	065b      	lsls	r3, r3, #25
 8009716:	d50d      	bpl.n	8009734 <USB_DeactivateEndpoint+0x88>
 8009718:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800971c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009720:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009724:	041b      	lsls	r3, r3, #16
 8009726:	0c1b      	lsrs	r3, r3, #16
 8009728:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800972c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009730:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009734:	f248 0180 	movw	r1, #32896	; 0x8080
 8009738:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800973c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009740:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009744:	041b      	lsls	r3, r3, #16
 8009746:	0c1b      	lsrs	r3, r3, #16
 8009748:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800974c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009750:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009754:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009758:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800975c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009760:	041b      	lsls	r3, r3, #16
 8009762:	0c1b      	lsrs	r3, r3, #16
 8009764:	430b      	orrs	r3, r1
 8009766:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800976a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800976e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009772:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009776:	041b      	lsls	r3, r3, #16
 8009778:	0c1b      	lsrs	r3, r3, #16
 800977a:	430b      	orrs	r3, r1
 800977c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009780:	2000      	movs	r0, #0
 8009782:	4770      	bx	lr
 8009784:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009788:	0459      	lsls	r1, r3, #17
 800978a:	d50d      	bpl.n	80097a8 <USB_DeactivateEndpoint+0xfc>
 800978c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009790:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009794:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009798:	041b      	lsls	r3, r3, #16
 800979a:	0c1b      	lsrs	r3, r3, #16
 800979c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80097a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80097a4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80097a8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80097ac:	065b      	lsls	r3, r3, #25
 80097ae:	d50d      	bpl.n	80097cc <USB_DeactivateEndpoint+0x120>
 80097b0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80097b4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80097b8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80097bc:	041b      	lsls	r3, r3, #16
 80097be:	0c1b      	lsrs	r3, r3, #16
 80097c0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80097c4:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80097c8:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80097cc:	f248 0180 	movw	r1, #32896	; 0x8080
 80097d0:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80097d4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80097d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80097dc:	041b      	lsls	r3, r3, #16
 80097de:	0c1b      	lsrs	r3, r3, #16
 80097e0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80097e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80097e8:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80097ec:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80097f0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80097f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80097f8:	041b      	lsls	r3, r3, #16
 80097fa:	0c1b      	lsrs	r3, r3, #16
 80097fc:	430b      	orrs	r3, r1
 80097fe:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009802:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009806:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800980a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800980e:	041b      	lsls	r3, r3, #16
 8009810:	0c1b      	lsrs	r3, r3, #16
 8009812:	430b      	orrs	r3, r1
 8009814:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009818:	2000      	movs	r0, #0
 800981a:	4770      	bx	lr
 800981c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009820:	045b      	lsls	r3, r3, #17
 8009822:	d50d      	bpl.n	8009840 <USB_DeactivateEndpoint+0x194>
 8009824:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009828:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800982c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009830:	041b      	lsls	r3, r3, #16
 8009832:	0c1b      	lsrs	r3, r3, #16
 8009834:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009838:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800983c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009840:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009844:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009848:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800984c:	e740      	b.n	80096d0 <USB_DeactivateEndpoint+0x24>
 800984e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009852:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009856:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800985a:	041b      	lsls	r3, r3, #16
 800985c:	0c1b      	lsrs	r3, r3, #16
 800985e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009862:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009866:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800986a:	e72b      	b.n	80096c4 <USB_DeactivateEndpoint+0x18>

0800986c <USB_EPStartXfer>:
 800986c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009870:	784b      	ldrb	r3, [r1, #1]
 8009872:	4602      	mov	r2, r0
 8009874:	2b01      	cmp	r3, #1
 8009876:	d06b      	beq.n	8009950 <USB_EPStartXfer+0xe4>
 8009878:	7b08      	ldrb	r0, [r1, #12]
 800987a:	2800      	cmp	r0, #0
 800987c:	d037      	beq.n	80098ee <USB_EPStartXfer+0x82>
 800987e:	78c8      	ldrb	r0, [r1, #3]
 8009880:	2802      	cmp	r0, #2
 8009882:	f000 812d 	beq.w	8009ae0 <USB_EPStartXfer+0x274>
 8009886:	2801      	cmp	r0, #1
 8009888:	f040 810a 	bne.w	8009aa0 <USB_EPStartXfer+0x234>
 800988c:	6988      	ldr	r0, [r1, #24]
 800988e:	690c      	ldr	r4, [r1, #16]
 8009890:	42a0      	cmp	r0, r4
 8009892:	bf94      	ite	ls
 8009894:	2500      	movls	r5, #0
 8009896:	1b05      	subhi	r5, r0, r4
 8009898:	618d      	str	r5, [r1, #24]
 800989a:	bf88      	it	hi
 800989c:	4620      	movhi	r0, r4
 800989e:	2b00      	cmp	r3, #0
 80098a0:	f040 811b 	bne.w	8009ada <USB_EPStartXfer+0x26e>
 80098a4:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80098a8:	780b      	ldrb	r3, [r1, #0]
 80098aa:	b2a4      	uxth	r4, r4
 80098ac:	f202 4504 	addw	r5, r2, #1028	; 0x404
 80098b0:	011b      	lsls	r3, r3, #4
 80098b2:	442c      	add	r4, r5
 80098b4:	2800      	cmp	r0, #0
 80098b6:	f000 8251 	beq.w	8009d5c <USB_EPStartXfer+0x4f0>
 80098ba:	283e      	cmp	r0, #62	; 0x3e
 80098bc:	f200 80f3 	bhi.w	8009aa6 <USB_EPStartXfer+0x23a>
 80098c0:	0845      	lsrs	r5, r0, #1
 80098c2:	462e      	mov	r6, r5
 80098c4:	f010 0001 	ands.w	r0, r0, #1
 80098c8:	bf18      	it	ne
 80098ca:	1c6e      	addne	r6, r5, #1
 80098cc:	02b6      	lsls	r6, r6, #10
 80098ce:	b2b6      	uxth	r6, r6
 80098d0:	52e6      	strh	r6, [r4, r3]
 80098d2:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80098d6:	b2a6      	uxth	r6, r4
 80098d8:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80098dc:	4434      	add	r4, r6
 80098de:	b100      	cbz	r0, 80098e2 <USB_EPStartXfer+0x76>
 80098e0:	3501      	adds	r5, #1
 80098e2:	02ad      	lsls	r5, r5, #10
 80098e4:	b2a8      	uxth	r0, r5
 80098e6:	52e0      	strh	r0, [r4, r3]
 80098e8:	f891 c000 	ldrb.w	ip, [r1]
 80098ec:	e01d      	b.n	800992a <USB_EPStartXfer+0xbe>
 80098ee:	698c      	ldr	r4, [r1, #24]
 80098f0:	690b      	ldr	r3, [r1, #16]
 80098f2:	780d      	ldrb	r5, [r1, #0]
 80098f4:	429c      	cmp	r4, r3
 80098f6:	bf84      	itt	hi
 80098f8:	1ae0      	subhi	r0, r4, r3
 80098fa:	461c      	movhi	r4, r3
 80098fc:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009900:	6188      	str	r0, [r1, #24]
 8009902:	b29b      	uxth	r3, r3
 8009904:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009908:	012d      	lsls	r5, r5, #4
 800990a:	4403      	add	r3, r0
 800990c:	2c00      	cmp	r4, #0
 800990e:	f000 80b7 	beq.w	8009a80 <USB_EPStartXfer+0x214>
 8009912:	2c3e      	cmp	r4, #62	; 0x3e
 8009914:	f200 8129 	bhi.w	8009b6a <USB_EPStartXfer+0x2fe>
 8009918:	0860      	lsrs	r0, r4, #1
 800991a:	07e4      	lsls	r4, r4, #31
 800991c:	bf48      	it	mi
 800991e:	3001      	addmi	r0, #1
 8009920:	0280      	lsls	r0, r0, #10
 8009922:	b280      	uxth	r0, r0
 8009924:	52e8      	strh	r0, [r5, r3]
 8009926:	f891 c000 	ldrb.w	ip, [r1]
 800992a:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 800992e:	2000      	movs	r0, #0
 8009930:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009934:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009938:	041b      	lsls	r3, r3, #16
 800993a:	0c1b      	lsrs	r3, r3, #16
 800993c:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009940:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009944:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009948:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 800994c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009950:	690d      	ldr	r5, [r1, #16]
 8009952:	6988      	ldr	r0, [r1, #24]
 8009954:	7b0b      	ldrb	r3, [r1, #12]
 8009956:	42a8      	cmp	r0, r5
 8009958:	bf28      	it	cs
 800995a:	4628      	movcs	r0, r5
 800995c:	2b00      	cmp	r3, #0
 800995e:	d05d      	beq.n	8009a1c <USB_EPStartXfer+0x1b0>
 8009960:	78cb      	ldrb	r3, [r1, #3]
 8009962:	2b02      	cmp	r3, #2
 8009964:	f000 810e 	beq.w	8009b84 <USB_EPStartXfer+0x318>
 8009968:	f891 8000 	ldrb.w	r8, [r1]
 800996c:	6a0b      	ldr	r3, [r1, #32]
 800996e:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009972:	1a1b      	subs	r3, r3, r0
 8009974:	f424 44e0 	bic.w	r4, r4, #28672	; 0x7000
 8009978:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 800997c:	0424      	lsls	r4, r4, #16
 800997e:	0c24      	lsrs	r4, r4, #16
 8009980:	f444 4401 	orr.w	r4, r4, #33024	; 0x8100
 8009984:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009988:	f822 4028 	strh.w	r4, [r2, r8, lsl #2]
 800998c:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009990:	620b      	str	r3, [r1, #32]
 8009992:	f014 0f40 	tst.w	r4, #64	; 0x40
 8009996:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 800999a:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800999e:	b2a6      	uxth	r6, r4
 80099a0:	f000 814a 	beq.w	8009c38 <USB_EPStartXfer+0x3cc>
 80099a4:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80099a8:	4434      	add	r4, r6
 80099aa:	b286      	uxth	r6, r0
 80099ac:	f824 6008 	strh.w	r6, [r4, r8]
 80099b0:	894c      	ldrh	r4, [r1, #10]
 80099b2:	3601      	adds	r6, #1
 80099b4:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 80099b8:	0876      	lsrs	r6, r6, #1
 80099ba:	f8d1 9014 	ldr.w	r9, [r1, #20]
 80099be:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80099c2:	d008      	beq.n	80099d6 <USB_EPStartXfer+0x16a>
 80099c4:	46cc      	mov	ip, r9
 80099c6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80099ca:	f83c eb02 	ldrh.w	lr, [ip], #2
 80099ce:	f824 eb04 	strh.w	lr, [r4], #4
 80099d2:	42a6      	cmp	r6, r4
 80099d4:	d1f9      	bne.n	80099ca <USB_EPStartXfer+0x15e>
 80099d6:	eb09 0400 	add.w	r4, r9, r0
 80099da:	429d      	cmp	r5, r3
 80099dc:	614c      	str	r4, [r1, #20]
 80099de:	f0c0 81b7 	bcc.w	8009d50 <USB_EPStartXfer+0x4e4>
 80099e2:	2500      	movs	r5, #0
 80099e4:	620d      	str	r5, [r1, #32]
 80099e6:	2b00      	cmp	r3, #0
 80099e8:	d036      	beq.n	8009a58 <USB_EPStartXfer+0x1ec>
 80099ea:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80099ee:	b285      	uxth	r5, r0
 80099f0:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80099f4:	4428      	add	r0, r5
 80099f6:	b29d      	uxth	r5, r3
 80099f8:	462b      	mov	r3, r5
 80099fa:	f820 5008 	strh.w	r5, [r0, r8]
 80099fe:	8908      	ldrh	r0, [r1, #8]
 8009a00:	3301      	adds	r3, #1
 8009a02:	085b      	lsrs	r3, r3, #1
 8009a04:	eb07 0040 	add.w	r0, r7, r0, lsl #1
 8009a08:	d026      	beq.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009a0a:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8009a0e:	f834 3b02 	ldrh.w	r3, [r4], #2
 8009a12:	f820 3b04 	strh.w	r3, [r0], #4
 8009a16:	4285      	cmp	r5, r0
 8009a18:	d1f9      	bne.n	8009a0e <USB_EPStartXfer+0x1a2>
 8009a1a:	e01d      	b.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009a1c:	b284      	uxth	r4, r0
 8009a1e:	694b      	ldr	r3, [r1, #20]
 8009a20:	88cd      	ldrh	r5, [r1, #6]
 8009a22:	f104 0e01 	add.w	lr, r4, #1
 8009a26:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 8009a2a:	ea5f 0e5e 	movs.w	lr, lr, lsr #1
 8009a2e:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 8009a32:	bf18      	it	ne
 8009a34:	eb03 0e4e 	addne.w	lr, r3, lr, lsl #1
 8009a38:	d005      	beq.n	8009a46 <USB_EPStartXfer+0x1da>
 8009a3a:	f833 cb02 	ldrh.w	ip, [r3], #2
 8009a3e:	4573      	cmp	r3, lr
 8009a40:	f820 cb04 	strh.w	ip, [r0], #4
 8009a44:	d1f9      	bne.n	8009a3a <USB_EPStartXfer+0x1ce>
 8009a46:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009a4a:	7808      	ldrb	r0, [r1, #0]
 8009a4c:	b29d      	uxth	r5, r3
 8009a4e:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009a52:	0100      	lsls	r0, r0, #4
 8009a54:	442b      	add	r3, r5
 8009a56:	52c4      	strh	r4, [r0, r3]
 8009a58:	7809      	ldrb	r1, [r1, #0]
 8009a5a:	2000      	movs	r0, #0
 8009a5c:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8009a60:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009a64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009a68:	041b      	lsls	r3, r3, #16
 8009a6a:	0c1b      	lsrs	r3, r3, #16
 8009a6c:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8009a70:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009a78:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 8009a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a80:	5ae8      	ldrh	r0, [r5, r3]
 8009a82:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8009a86:	0400      	lsls	r0, r0, #16
 8009a88:	0c00      	lsrs	r0, r0, #16
 8009a8a:	52e8      	strh	r0, [r5, r3]
 8009a8c:	5ae8      	ldrh	r0, [r5, r3]
 8009a8e:	ea6f 4040 	mvn.w	r0, r0, lsl #17
 8009a92:	ea6f 4050 	mvn.w	r0, r0, lsr #17
 8009a96:	b280      	uxth	r0, r0
 8009a98:	52e8      	strh	r0, [r5, r3]
 8009a9a:	f891 c000 	ldrb.w	ip, [r1]
 8009a9e:	e744      	b.n	800992a <USB_EPStartXfer+0xbe>
 8009aa0:	2001      	movs	r0, #1
 8009aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009aa6:	0945      	lsrs	r5, r0, #5
 8009aa8:	462f      	mov	r7, r5
 8009aaa:	f010 001f 	ands.w	r0, r0, #31
 8009aae:	bf08      	it	eq
 8009ab0:	f105 37ff 	addeq.w	r7, r5, #4294967295
 8009ab4:	462e      	mov	r6, r5
 8009ab6:	4dbb      	ldr	r5, [pc, #748]	; (8009da4 <USB_EPStartXfer+0x538>)
 8009ab8:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 8009abc:	b2ad      	uxth	r5, r5
 8009abe:	52e5      	strh	r5, [r4, r3]
 8009ac0:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009ac4:	b2a5      	uxth	r5, r4
 8009ac6:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009aca:	442c      	add	r4, r5
 8009acc:	b900      	cbnz	r0, 8009ad0 <USB_EPStartXfer+0x264>
 8009ace:	3e01      	subs	r6, #1
 8009ad0:	48b4      	ldr	r0, [pc, #720]	; (8009da4 <USB_EPStartXfer+0x538>)
 8009ad2:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009ad6:	b280      	uxth	r0, r0
 8009ad8:	52e0      	strh	r0, [r4, r3]
 8009ada:	f891 c000 	ldrb.w	ip, [r1]
 8009ade:	e724      	b.n	800992a <USB_EPStartXfer+0xbe>
 8009ae0:	bb13      	cbnz	r3, 8009b28 <USB_EPStartXfer+0x2bc>
 8009ae2:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009ae6:	780b      	ldrb	r3, [r1, #0]
 8009ae8:	b284      	uxth	r4, r0
 8009aea:	f202 4004 	addw	r0, r2, #1028	; 0x404
 8009aee:	4420      	add	r0, r4
 8009af0:	690c      	ldr	r4, [r1, #16]
 8009af2:	011b      	lsls	r3, r3, #4
 8009af4:	2c00      	cmp	r4, #0
 8009af6:	f000 8109 	beq.w	8009d0c <USB_EPStartXfer+0x4a0>
 8009afa:	2c3e      	cmp	r4, #62	; 0x3e
 8009afc:	f200 818e 	bhi.w	8009e1c <USB_EPStartXfer+0x5b0>
 8009b00:	0865      	lsrs	r5, r4, #1
 8009b02:	462e      	mov	r6, r5
 8009b04:	f014 0401 	ands.w	r4, r4, #1
 8009b08:	bf18      	it	ne
 8009b0a:	1c6e      	addne	r6, r5, #1
 8009b0c:	02b6      	lsls	r6, r6, #10
 8009b0e:	b2b6      	uxth	r6, r6
 8009b10:	52c6      	strh	r6, [r0, r3]
 8009b12:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009b16:	f202 460c 	addw	r6, r2, #1036	; 0x40c
 8009b1a:	b280      	uxth	r0, r0
 8009b1c:	4406      	add	r6, r0
 8009b1e:	b104      	cbz	r4, 8009b22 <USB_EPStartXfer+0x2b6>
 8009b20:	3501      	adds	r5, #1
 8009b22:	02ad      	lsls	r5, r5, #10
 8009b24:	b2a8      	uxth	r0, r5
 8009b26:	52f0      	strh	r0, [r6, r3]
 8009b28:	69cb      	ldr	r3, [r1, #28]
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	d0d5      	beq.n	8009ada <USB_EPStartXfer+0x26e>
 8009b2e:	f244 0340 	movw	r3, #16448	; 0x4040
 8009b32:	f891 c000 	ldrb.w	ip, [r1]
 8009b36:	f832 002c 	ldrh.w	r0, [r2, ip, lsl #2]
 8009b3a:	ea03 0400 	and.w	r4, r3, r0
 8009b3e:	4383      	bics	r3, r0
 8009b40:	d002      	beq.n	8009b48 <USB_EPStartXfer+0x2dc>
 8009b42:	2c00      	cmp	r4, #0
 8009b44:	f47f aef1 	bne.w	800992a <USB_EPStartXfer+0xbe>
 8009b48:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 8009b4c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009b50:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009b54:	041b      	lsls	r3, r3, #16
 8009b56:	0c1b      	lsrs	r3, r3, #16
 8009b58:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009b5c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009b60:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 8009b64:	f891 c000 	ldrb.w	ip, [r1]
 8009b68:	e6df      	b.n	800992a <USB_EPStartXfer+0xbe>
 8009b6a:	0966      	lsrs	r6, r4, #5
 8009b6c:	06e0      	lsls	r0, r4, #27
 8009b6e:	488d      	ldr	r0, [pc, #564]	; (8009da4 <USB_EPStartXfer+0x538>)
 8009b70:	bf08      	it	eq
 8009b72:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8009b76:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009b7a:	b280      	uxth	r0, r0
 8009b7c:	52e8      	strh	r0, [r5, r3]
 8009b7e:	f891 c000 	ldrb.w	ip, [r1]
 8009b82:	e6d2      	b.n	800992a <USB_EPStartXfer+0xbe>
 8009b84:	6a0c      	ldr	r4, [r1, #32]
 8009b86:	42a5      	cmp	r5, r4
 8009b88:	f080 8094 	bcs.w	8009cb4 <USB_EPStartXfer+0x448>
 8009b8c:	780e      	ldrb	r6, [r1, #0]
 8009b8e:	1a24      	subs	r4, r4, r0
 8009b90:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 8009b94:	ea4f 1906 	mov.w	r9, r6, lsl #4
 8009b98:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009b9c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009ba0:	041b      	lsls	r3, r3, #16
 8009ba2:	0c1b      	lsrs	r3, r3, #16
 8009ba4:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8009ba8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009bac:	f822 3026 	strh.w	r3, [r2, r6, lsl #2]
 8009bb0:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 8009bb4:	620c      	str	r4, [r1, #32]
 8009bb6:	f013 0f40 	tst.w	r3, #64	; 0x40
 8009bba:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009bbe:	b29e      	uxth	r6, r3
 8009bc0:	f000 80f2 	beq.w	8009da8 <USB_EPStartXfer+0x53c>
 8009bc4:	f202 430c 	addw	r3, r2, #1036	; 0x40c
 8009bc8:	4433      	add	r3, r6
 8009bca:	fa1f fa80 	uxth.w	sl, r0
 8009bce:	f823 a009 	strh.w	sl, [r3, r9]
 8009bd2:	894e      	ldrh	r6, [r1, #10]
 8009bd4:	f10a 0801 	add.w	r8, sl, #1
 8009bd8:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009bdc:	ea5f 0858 	movs.w	r8, r8, lsr #1
 8009be0:	694f      	ldr	r7, [r1, #20]
 8009be2:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 8009be6:	d008      	beq.n	8009bfa <USB_EPStartXfer+0x38e>
 8009be8:	46bc      	mov	ip, r7
 8009bea:	eb06 0b88 	add.w	fp, r6, r8, lsl #2
 8009bee:	f83c eb02 	ldrh.w	lr, [ip], #2
 8009bf2:	f826 eb04 	strh.w	lr, [r6], #4
 8009bf6:	45b3      	cmp	fp, r6
 8009bf8:	d1f9      	bne.n	8009bee <USB_EPStartXfer+0x382>
 8009bfa:	4407      	add	r7, r0
 8009bfc:	42a5      	cmp	r5, r4
 8009bfe:	614f      	str	r7, [r1, #20]
 8009c00:	f080 8127 	bcs.w	8009e52 <USB_EPStartXfer+0x5e6>
 8009c04:	1a24      	subs	r4, r4, r0
 8009c06:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009c0a:	620c      	str	r4, [r1, #32]
 8009c0c:	b284      	uxth	r4, r0
 8009c0e:	f202 4004 	addw	r0, r2, #1028	; 0x404
 8009c12:	4420      	add	r0, r4
 8009c14:	f820 a009 	strh.w	sl, [r0, r9]
 8009c18:	8908      	ldrh	r0, [r1, #8]
 8009c1a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8009c1e:	f1b8 0f00 	cmp.w	r8, #0
 8009c22:	f43f af19 	beq.w	8009a58 <USB_EPStartXfer+0x1ec>
 8009c26:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 8009c2a:	f837 0b02 	ldrh.w	r0, [r7], #2
 8009c2e:	f823 0b04 	strh.w	r0, [r3], #4
 8009c32:	429c      	cmp	r4, r3
 8009c34:	d1f9      	bne.n	8009c2a <USB_EPStartXfer+0x3be>
 8009c36:	e70f      	b.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009c38:	f202 4404 	addw	r4, r2, #1028	; 0x404
 8009c3c:	4434      	add	r4, r6
 8009c3e:	b286      	uxth	r6, r0
 8009c40:	f824 6008 	strh.w	r6, [r4, r8]
 8009c44:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 8009c48:	3601      	adds	r6, #1
 8009c4a:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 8009c4e:	0876      	lsrs	r6, r6, #1
 8009c50:	f8d1 9014 	ldr.w	r9, [r1, #20]
 8009c54:	eb07 0c4c 	add.w	ip, r7, ip, lsl #1
 8009c58:	d008      	beq.n	8009c6c <USB_EPStartXfer+0x400>
 8009c5a:	464c      	mov	r4, r9
 8009c5c:	eb09 0646 	add.w	r6, r9, r6, lsl #1
 8009c60:	f834 eb02 	ldrh.w	lr, [r4], #2
 8009c64:	42b4      	cmp	r4, r6
 8009c66:	f82c eb04 	strh.w	lr, [ip], #4
 8009c6a:	d1f9      	bne.n	8009c60 <USB_EPStartXfer+0x3f4>
 8009c6c:	eb09 0400 	add.w	r4, r9, r0
 8009c70:	429d      	cmp	r5, r3
 8009c72:	614c      	str	r4, [r1, #20]
 8009c74:	d36f      	bcc.n	8009d56 <USB_EPStartXfer+0x4ea>
 8009c76:	2500      	movs	r5, #0
 8009c78:	620d      	str	r5, [r1, #32]
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	f43f aeec 	beq.w	8009a58 <USB_EPStartXfer+0x1ec>
 8009c80:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009c84:	b285      	uxth	r5, r0
 8009c86:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009c8a:	4428      	add	r0, r5
 8009c8c:	b29d      	uxth	r5, r3
 8009c8e:	462b      	mov	r3, r5
 8009c90:	f820 5008 	strh.w	r5, [r0, r8]
 8009c94:	8948      	ldrh	r0, [r1, #10]
 8009c96:	3301      	adds	r3, #1
 8009c98:	085b      	lsrs	r3, r3, #1
 8009c9a:	eb07 0740 	add.w	r7, r7, r0, lsl #1
 8009c9e:	f43f aedb 	beq.w	8009a58 <USB_EPStartXfer+0x1ec>
 8009ca2:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8009ca6:	f834 0b02 	ldrh.w	r0, [r4], #2
 8009caa:	f827 0b04 	strh.w	r0, [r7], #4
 8009cae:	429f      	cmp	r7, r3
 8009cb0:	d1f9      	bne.n	8009ca6 <USB_EPStartXfer+0x43a>
 8009cb2:	e6d1      	b.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009cb4:	7808      	ldrb	r0, [r1, #0]
 8009cb6:	f832 3020 	ldrh.w	r3, [r2, r0, lsl #2]
 8009cba:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 8009cbe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009cc2:	041b      	lsls	r3, r3, #16
 8009cc4:	0c1b      	lsrs	r3, r3, #16
 8009cc6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009cca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009cce:	f822 3020 	strh.w	r3, [r2, r0, lsl #2]
 8009cd2:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009cd6:	0100      	lsls	r0, r0, #4
 8009cd8:	b29d      	uxth	r5, r3
 8009cda:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009cde:	442b      	add	r3, r5
 8009ce0:	b2a5      	uxth	r5, r4
 8009ce2:	521d      	strh	r5, [r3, r0]
 8009ce4:	b2a0      	uxth	r0, r4
 8009ce6:	890d      	ldrh	r5, [r1, #8]
 8009ce8:	3001      	adds	r0, #1
 8009cea:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009cee:	0840      	lsrs	r0, r0, #1
 8009cf0:	694c      	ldr	r4, [r1, #20]
 8009cf2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8009cf6:	f43f aeaf 	beq.w	8009a58 <USB_EPStartXfer+0x1ec>
 8009cfa:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8009cfe:	f834 5b02 	ldrh.w	r5, [r4], #2
 8009d02:	f823 5b04 	strh.w	r5, [r3], #4
 8009d06:	4298      	cmp	r0, r3
 8009d08:	d1f9      	bne.n	8009cfe <USB_EPStartXfer+0x492>
 8009d0a:	e6a5      	b.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009d0c:	5ac4      	ldrh	r4, [r0, r3]
 8009d0e:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009d12:	0424      	lsls	r4, r4, #16
 8009d14:	0c24      	lsrs	r4, r4, #16
 8009d16:	52c4      	strh	r4, [r0, r3]
 8009d18:	5ac5      	ldrh	r5, [r0, r3]
 8009d1a:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009d1e:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8009d22:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 8009d26:	b2ad      	uxth	r5, r5
 8009d28:	52c5      	strh	r5, [r0, r3]
 8009d2a:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009d2e:	b285      	uxth	r5, r0
 8009d30:	4620      	mov	r0, r4
 8009d32:	4428      	add	r0, r5
 8009d34:	5ac4      	ldrh	r4, [r0, r3]
 8009d36:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009d3a:	0424      	lsls	r4, r4, #16
 8009d3c:	0c24      	lsrs	r4, r4, #16
 8009d3e:	52c4      	strh	r4, [r0, r3]
 8009d40:	5ac4      	ldrh	r4, [r0, r3]
 8009d42:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8009d46:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8009d4a:	b2a4      	uxth	r4, r4
 8009d4c:	52c4      	strh	r4, [r0, r3]
 8009d4e:	e6eb      	b.n	8009b28 <USB_EPStartXfer+0x2bc>
 8009d50:	1a1d      	subs	r5, r3, r0
 8009d52:	4603      	mov	r3, r0
 8009d54:	e646      	b.n	80099e4 <USB_EPStartXfer+0x178>
 8009d56:	1a1d      	subs	r5, r3, r0
 8009d58:	4603      	mov	r3, r0
 8009d5a:	e78d      	b.n	8009c78 <USB_EPStartXfer+0x40c>
 8009d5c:	5ae0      	ldrh	r0, [r4, r3]
 8009d5e:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 8009d62:	0400      	lsls	r0, r0, #16
 8009d64:	0c00      	lsrs	r0, r0, #16
 8009d66:	52e0      	strh	r0, [r4, r3]
 8009d68:	5ae5      	ldrh	r5, [r4, r3]
 8009d6a:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009d6e:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8009d72:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 8009d76:	b2ad      	uxth	r5, r5
 8009d78:	52e5      	strh	r5, [r4, r3]
 8009d7a:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009d7e:	b2a4      	uxth	r4, r4
 8009d80:	4420      	add	r0, r4
 8009d82:	5ac4      	ldrh	r4, [r0, r3]
 8009d84:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009d88:	0424      	lsls	r4, r4, #16
 8009d8a:	0c24      	lsrs	r4, r4, #16
 8009d8c:	52c4      	strh	r4, [r0, r3]
 8009d8e:	5ac4      	ldrh	r4, [r0, r3]
 8009d90:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8009d94:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8009d98:	b2a4      	uxth	r4, r4
 8009d9a:	52c4      	strh	r4, [r0, r3]
 8009d9c:	f891 c000 	ldrb.w	ip, [r1]
 8009da0:	e5c3      	b.n	800992a <USB_EPStartXfer+0xbe>
 8009da2:	bf00      	nop
 8009da4:	ffff8000 	.word	0xffff8000
 8009da8:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009dac:	4433      	add	r3, r6
 8009dae:	fa1f fa80 	uxth.w	sl, r0
 8009db2:	f823 a009 	strh.w	sl, [r3, r9]
 8009db6:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 8009dba:	f10a 0801 	add.w	r8, sl, #1
 8009dbe:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 8009dc2:	ea5f 0858 	movs.w	r8, r8, lsr #1
 8009dc6:	694f      	ldr	r7, [r1, #20]
 8009dc8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8009dcc:	d008      	beq.n	8009de0 <USB_EPStartXfer+0x574>
 8009dce:	463e      	mov	r6, r7
 8009dd0:	eb07 0b48 	add.w	fp, r7, r8, lsl #1
 8009dd4:	f836 eb02 	ldrh.w	lr, [r6], #2
 8009dd8:	45b3      	cmp	fp, r6
 8009dda:	f82c eb04 	strh.w	lr, [ip], #4
 8009dde:	d1f9      	bne.n	8009dd4 <USB_EPStartXfer+0x568>
 8009de0:	4407      	add	r7, r0
 8009de2:	42a5      	cmp	r5, r4
 8009de4:	614f      	str	r7, [r1, #20]
 8009de6:	d23e      	bcs.n	8009e66 <USB_EPStartXfer+0x5fa>
 8009de8:	1a24      	subs	r4, r4, r0
 8009dea:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009dee:	620c      	str	r4, [r1, #32]
 8009df0:	b284      	uxth	r4, r0
 8009df2:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009df6:	4420      	add	r0, r4
 8009df8:	f820 a009 	strh.w	sl, [r0, r9]
 8009dfc:	8948      	ldrh	r0, [r1, #10]
 8009dfe:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8009e02:	f1b8 0f00 	cmp.w	r8, #0
 8009e06:	f43f ae27 	beq.w	8009a58 <USB_EPStartXfer+0x1ec>
 8009e0a:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 8009e0e:	f837 0b02 	ldrh.w	r0, [r7], #2
 8009e12:	f823 0b04 	strh.w	r0, [r3], #4
 8009e16:	429c      	cmp	r4, r3
 8009e18:	d1f9      	bne.n	8009e0e <USB_EPStartXfer+0x5a2>
 8009e1a:	e61d      	b.n	8009a58 <USB_EPStartXfer+0x1ec>
 8009e1c:	0965      	lsrs	r5, r4, #5
 8009e1e:	462f      	mov	r7, r5
 8009e20:	f014 041f 	ands.w	r4, r4, #31
 8009e24:	bf08      	it	eq
 8009e26:	f105 37ff 	addeq.w	r7, r5, #4294967295
 8009e2a:	462e      	mov	r6, r5
 8009e2c:	4d13      	ldr	r5, [pc, #76]	; (8009e7c <USB_EPStartXfer+0x610>)
 8009e2e:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 8009e32:	b2ad      	uxth	r5, r5
 8009e34:	52c5      	strh	r5, [r0, r3]
 8009e36:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009e3a:	f202 450c 	addw	r5, r2, #1036	; 0x40c
 8009e3e:	b280      	uxth	r0, r0
 8009e40:	4405      	add	r5, r0
 8009e42:	b904      	cbnz	r4, 8009e46 <USB_EPStartXfer+0x5da>
 8009e44:	3e01      	subs	r6, #1
 8009e46:	480d      	ldr	r0, [pc, #52]	; (8009e7c <USB_EPStartXfer+0x610>)
 8009e48:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009e4c:	b280      	uxth	r0, r0
 8009e4e:	52e8      	strh	r0, [r5, r3]
 8009e50:	e66a      	b.n	8009b28 <USB_EPStartXfer+0x2bc>
 8009e52:	fa1f f884 	uxth.w	r8, r4
 8009e56:	f108 0801 	add.w	r8, r8, #1
 8009e5a:	fa1f fa84 	uxth.w	sl, r4
 8009e5e:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8009e62:	2400      	movs	r4, #0
 8009e64:	e6cf      	b.n	8009c06 <USB_EPStartXfer+0x39a>
 8009e66:	fa1f f884 	uxth.w	r8, r4
 8009e6a:	f108 0801 	add.w	r8, r8, #1
 8009e6e:	fa1f fa84 	uxth.w	sl, r4
 8009e72:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8009e76:	2400      	movs	r4, #0
 8009e78:	e7b7      	b.n	8009dea <USB_EPStartXfer+0x57e>
 8009e7a:	bf00      	nop
 8009e7c:	ffff8000 	.word	0xffff8000

08009e80 <USB_EPSetStall>:
 8009e80:	784b      	ldrb	r3, [r1, #1]
 8009e82:	780a      	ldrb	r2, [r1, #0]
 8009e84:	b18b      	cbz	r3, 8009eaa <USB_EPSetStall+0x2a>
 8009e86:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009e8a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009e8e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009e92:	041b      	lsls	r3, r3, #16
 8009e94:	0c1b      	lsrs	r3, r3, #16
 8009e96:	f083 0310 	eor.w	r3, r3, #16
 8009e9a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009e9e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ea2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009ea6:	2000      	movs	r0, #0
 8009ea8:	4770      	bx	lr
 8009eaa:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009eae:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009eb2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009eb6:	041b      	lsls	r3, r3, #16
 8009eb8:	0c1b      	lsrs	r3, r3, #16
 8009eba:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8009ebe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009ec2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ec6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009eca:	2000      	movs	r0, #0
 8009ecc:	4770      	bx	lr
 8009ece:	bf00      	nop

08009ed0 <USB_EPClearStall>:
 8009ed0:	7b0b      	ldrb	r3, [r1, #12]
 8009ed2:	bb3b      	cbnz	r3, 8009f24 <USB_EPClearStall+0x54>
 8009ed4:	784b      	ldrb	r3, [r1, #1]
 8009ed6:	780a      	ldrb	r2, [r1, #0]
 8009ed8:	b333      	cbz	r3, 8009f28 <USB_EPClearStall+0x58>
 8009eda:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009ede:	065b      	lsls	r3, r3, #25
 8009ee0:	d50d      	bpl.n	8009efe <USB_EPClearStall+0x2e>
 8009ee2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009ee6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009eea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009eee:	041b      	lsls	r3, r3, #16
 8009ef0:	0c1b      	lsrs	r3, r3, #16
 8009ef2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009ef6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009efa:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009efe:	78cb      	ldrb	r3, [r1, #3]
 8009f00:	2b01      	cmp	r3, #1
 8009f02:	d00f      	beq.n	8009f24 <USB_EPClearStall+0x54>
 8009f04:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009f08:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009f0c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009f10:	041b      	lsls	r3, r3, #16
 8009f12:	0c1b      	lsrs	r3, r3, #16
 8009f14:	f083 0320 	eor.w	r3, r3, #32
 8009f18:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009f1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009f20:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009f24:	2000      	movs	r0, #0
 8009f26:	4770      	bx	lr
 8009f28:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009f2c:	045b      	lsls	r3, r3, #17
 8009f2e:	d50d      	bpl.n	8009f4c <USB_EPClearStall+0x7c>
 8009f30:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009f34:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009f38:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009f3c:	041b      	lsls	r3, r3, #16
 8009f3e:	0c1b      	lsrs	r3, r3, #16
 8009f40:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009f44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009f48:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009f4c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009f50:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009f54:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009f58:	041b      	lsls	r3, r3, #16
 8009f5a:	0c1b      	lsrs	r3, r3, #16
 8009f5c:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009f60:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009f64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009f68:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009f6c:	2000      	movs	r0, #0
 8009f6e:	4770      	bx	lr

08009f70 <USB_SetDevAddress>:
 8009f70:	b911      	cbnz	r1, 8009f78 <USB_SetDevAddress+0x8>
 8009f72:	2380      	movs	r3, #128	; 0x80
 8009f74:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 8009f78:	2000      	movs	r0, #0
 8009f7a:	4770      	bx	lr

08009f7c <USB_DevConnect>:
 8009f7c:	2000      	movs	r0, #0
 8009f7e:	4770      	bx	lr

08009f80 <USB_ReadInterrupts>:
 8009f80:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 8009f84:	b280      	uxth	r0, r0
 8009f86:	4770      	bx	lr

08009f88 <USB_WritePMA>:
 8009f88:	3301      	adds	r3, #1
 8009f8a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8009f8e:	085b      	lsrs	r3, r3, #1
 8009f90:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009f94:	d007      	beq.n	8009fa6 <USB_WritePMA+0x1e>
 8009f96:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8009f9a:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009f9e:	f822 3b04 	strh.w	r3, [r2], #4
 8009fa2:	4282      	cmp	r2, r0
 8009fa4:	d1f9      	bne.n	8009f9a <USB_WritePMA+0x12>
 8009fa6:	4770      	bx	lr

08009fa8 <USB_ReadPMA>:
 8009fa8:	b570      	push	{r4, r5, r6, lr}
 8009faa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8009fae:	085e      	lsrs	r6, r3, #1
 8009fb0:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8009fb4:	d012      	beq.n	8009fdc <USB_ReadPMA+0x34>
 8009fb6:	46ae      	mov	lr, r5
 8009fb8:	46b4      	mov	ip, r6
 8009fba:	1c88      	adds	r0, r1, #2
 8009fbc:	f83e 2b04 	ldrh.w	r2, [lr], #4
 8009fc0:	3002      	adds	r0, #2
 8009fc2:	b292      	uxth	r2, r2
 8009fc4:	0a14      	lsrs	r4, r2, #8
 8009fc6:	f1bc 0c01 	subs.w	ip, ip, #1
 8009fca:	f800 2c04 	strb.w	r2, [r0, #-4]
 8009fce:	f800 4c03 	strb.w	r4, [r0, #-3]
 8009fd2:	d1f3      	bne.n	8009fbc <USB_ReadPMA+0x14>
 8009fd4:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 8009fd8:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 8009fdc:	07db      	lsls	r3, r3, #31
 8009fde:	bf44      	itt	mi
 8009fe0:	882b      	ldrhmi	r3, [r5, #0]
 8009fe2:	700b      	strbmi	r3, [r1, #0]
 8009fe4:	bd70      	pop	{r4, r5, r6, pc}
 8009fe6:	bf00      	nop

08009fe8 <USBD_CDC_EP0_RxReady>:
 8009fe8:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8009fec:	b183      	cbz	r3, 800a010 <USBD_CDC_EP0_RxReady+0x28>
 8009fee:	b510      	push	{r4, lr}
 8009ff0:	f8d0 4290 	ldr.w	r4, [r0, #656]	; 0x290
 8009ff4:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 8009ff8:	28ff      	cmp	r0, #255	; 0xff
 8009ffa:	d007      	beq.n	800a00c <USBD_CDC_EP0_RxReady+0x24>
 8009ffc:	689b      	ldr	r3, [r3, #8]
 8009ffe:	4621      	mov	r1, r4
 800a000:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 800a004:	4798      	blx	r3
 800a006:	23ff      	movs	r3, #255	; 0xff
 800a008:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 800a00c:	2000      	movs	r0, #0
 800a00e:	bd10      	pop	{r4, pc}
 800a010:	2000      	movs	r0, #0
 800a012:	4770      	bx	lr

0800a014 <USBD_CDC_GetFSCfgDesc>:
 800a014:	4603      	mov	r3, r0
 800a016:	2243      	movs	r2, #67	; 0x43
 800a018:	4801      	ldr	r0, [pc, #4]	; (800a020 <USBD_CDC_GetFSCfgDesc+0xc>)
 800a01a:	801a      	strh	r2, [r3, #0]
 800a01c:	4770      	bx	lr
 800a01e:	bf00      	nop
 800a020:	2000006c 	.word	0x2000006c

0800a024 <USBD_CDC_GetHSCfgDesc>:
 800a024:	4603      	mov	r3, r0
 800a026:	2243      	movs	r2, #67	; 0x43
 800a028:	4801      	ldr	r0, [pc, #4]	; (800a030 <USBD_CDC_GetHSCfgDesc+0xc>)
 800a02a:	801a      	strh	r2, [r3, #0]
 800a02c:	4770      	bx	lr
 800a02e:	bf00      	nop
 800a030:	200000b0 	.word	0x200000b0

0800a034 <USBD_CDC_GetOtherSpeedCfgDesc>:
 800a034:	4603      	mov	r3, r0
 800a036:	2243      	movs	r2, #67	; 0x43
 800a038:	4801      	ldr	r0, [pc, #4]	; (800a040 <USBD_CDC_GetOtherSpeedCfgDesc+0xc>)
 800a03a:	801a      	strh	r2, [r3, #0]
 800a03c:	4770      	bx	lr
 800a03e:	bf00      	nop
 800a040:	20000100 	.word	0x20000100

0800a044 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800a044:	4603      	mov	r3, r0
 800a046:	220a      	movs	r2, #10
 800a048:	4801      	ldr	r0, [pc, #4]	; (800a050 <USBD_CDC_GetDeviceQualifierDescriptor+0xc>)
 800a04a:	801a      	strh	r2, [r3, #0]
 800a04c:	4770      	bx	lr
 800a04e:	bf00      	nop
 800a050:	200000f4 	.word	0x200000f4

0800a054 <USBD_CDC_DataOut>:
 800a054:	b538      	push	{r3, r4, r5, lr}
 800a056:	4604      	mov	r4, r0
 800a058:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 800a05c:	f001 f84c 	bl	800b0f8 <USBD_LL_GetRxDataSize>
 800a060:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a064:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
 800a068:	b14b      	cbz	r3, 800a07e <USBD_CDC_DataOut+0x2a>
 800a06a:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 800a06e:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 800a072:	68db      	ldr	r3, [r3, #12]
 800a074:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 800a078:	4798      	blx	r3
 800a07a:	2000      	movs	r0, #0
 800a07c:	bd38      	pop	{r3, r4, r5, pc}
 800a07e:	2002      	movs	r0, #2
 800a080:	bd38      	pop	{r3, r4, r5, pc}
 800a082:	bf00      	nop

0800a084 <USBD_CDC_DataIn>:
 800a084:	b538      	push	{r3, r4, r5, lr}
 800a086:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 800a08a:	b1ed      	cbz	r5, 800a0c8 <USBD_CDC_DataIn+0x44>
 800a08c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800a090:	eb00 0c83 	add.w	ip, r0, r3, lsl #2
 800a094:	f8dc 201c 	ldr.w	r2, [ip, #28]
 800a098:	b14a      	cbz	r2, 800a0ae <USBD_CDC_DataIn+0x2a>
 800a09a:	f8d0 4298 	ldr.w	r4, [r0, #664]	; 0x298
 800a09e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800a0a2:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800a0a4:	fbb2 f3f4 	udiv	r3, r2, r4
 800a0a8:	fb04 2413 	mls	r4, r4, r3, r2
 800a0ac:	b124      	cbz	r4, 800a0b8 <USBD_CDC_DataIn+0x34>
 800a0ae:	2300      	movs	r3, #0
 800a0b0:	4618      	mov	r0, r3
 800a0b2:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
 800a0b6:	bd38      	pop	{r3, r4, r5, pc}
 800a0b8:	4623      	mov	r3, r4
 800a0ba:	4622      	mov	r2, r4
 800a0bc:	f8cc 401c 	str.w	r4, [ip, #28]
 800a0c0:	f000 fffe 	bl	800b0c0 <USBD_LL_Transmit>
 800a0c4:	4620      	mov	r0, r4
 800a0c6:	bd38      	pop	{r3, r4, r5, pc}
 800a0c8:	2002      	movs	r0, #2
 800a0ca:	bd38      	pop	{r3, r4, r5, pc}

0800a0cc <USBD_CDC_Setup>:
 800a0cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0d0:	2700      	movs	r7, #0
 800a0d2:	780b      	ldrb	r3, [r1, #0]
 800a0d4:	b082      	sub	sp, #8
 800a0d6:	f013 0660 	ands.w	r6, r3, #96	; 0x60
 800a0da:	460c      	mov	r4, r1
 800a0dc:	4605      	mov	r5, r0
 800a0de:	f8d0 8290 	ldr.w	r8, [r0, #656]	; 0x290
 800a0e2:	f88d 7005 	strb.w	r7, [sp, #5]
 800a0e6:	f8ad 7006 	strh.w	r7, [sp, #6]
 800a0ea:	d013      	beq.n	800a114 <USBD_CDC_Setup+0x48>
 800a0ec:	2e20      	cmp	r6, #32
 800a0ee:	d117      	bne.n	800a120 <USBD_CDC_Setup+0x54>
 800a0f0:	88ce      	ldrh	r6, [r1, #6]
 800a0f2:	b1f6      	cbz	r6, 800a132 <USBD_CDC_Setup+0x66>
 800a0f4:	061b      	lsls	r3, r3, #24
 800a0f6:	d53f      	bpl.n	800a178 <USBD_CDC_Setup+0xac>
 800a0f8:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 800a0fc:	4632      	mov	r2, r6
 800a0fe:	4641      	mov	r1, r8
 800a100:	689b      	ldr	r3, [r3, #8]
 800a102:	7860      	ldrb	r0, [r4, #1]
 800a104:	4798      	blx	r3
 800a106:	4641      	mov	r1, r8
 800a108:	4628      	mov	r0, r5
 800a10a:	88e2      	ldrh	r2, [r4, #6]
 800a10c:	463e      	mov	r6, r7
 800a10e:	f000 fcef 	bl	800aaf0 <USBD_CtlSendData>
 800a112:	e00a      	b.n	800a12a <USBD_CDC_Setup+0x5e>
 800a114:	784b      	ldrb	r3, [r1, #1]
 800a116:	2b0a      	cmp	r3, #10
 800a118:	d01f      	beq.n	800a15a <USBD_CDC_Setup+0x8e>
 800a11a:	2b0b      	cmp	r3, #11
 800a11c:	d027      	beq.n	800a16e <USBD_CDC_Setup+0xa2>
 800a11e:	b193      	cbz	r3, 800a146 <USBD_CDC_Setup+0x7a>
 800a120:	4621      	mov	r1, r4
 800a122:	4628      	mov	r0, r5
 800a124:	f000 fcae 	bl	800aa84 <USBD_CtlError>
 800a128:	2602      	movs	r6, #2
 800a12a:	4630      	mov	r0, r6
 800a12c:	b002      	add	sp, #8
 800a12e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a132:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 800a136:	4632      	mov	r2, r6
 800a138:	689b      	ldr	r3, [r3, #8]
 800a13a:	7848      	ldrb	r0, [r1, #1]
 800a13c:	4798      	blx	r3
 800a13e:	4630      	mov	r0, r6
 800a140:	b002      	add	sp, #8
 800a142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a146:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a14a:	2b03      	cmp	r3, #3
 800a14c:	d1e8      	bne.n	800a120 <USBD_CDC_Setup+0x54>
 800a14e:	2202      	movs	r2, #2
 800a150:	f10d 0106 	add.w	r1, sp, #6
 800a154:	f000 fccc 	bl	800aaf0 <USBD_CtlSendData>
 800a158:	e7e7      	b.n	800a12a <USBD_CDC_Setup+0x5e>
 800a15a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a15e:	2b03      	cmp	r3, #3
 800a160:	d1de      	bne.n	800a120 <USBD_CDC_Setup+0x54>
 800a162:	2201      	movs	r2, #1
 800a164:	f10d 0105 	add.w	r1, sp, #5
 800a168:	f000 fcc2 	bl	800aaf0 <USBD_CtlSendData>
 800a16c:	e7dd      	b.n	800a12a <USBD_CDC_Setup+0x5e>
 800a16e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a172:	2b03      	cmp	r3, #3
 800a174:	d0d9      	beq.n	800a12a <USBD_CDC_Setup+0x5e>
 800a176:	e7d3      	b.n	800a120 <USBD_CDC_Setup+0x54>
 800a178:	784b      	ldrb	r3, [r1, #1]
 800a17a:	4632      	mov	r2, r6
 800a17c:	f888 6201 	strb.w	r6, [r8, #513]	; 0x201
 800a180:	4641      	mov	r1, r8
 800a182:	f888 3200 	strb.w	r3, [r8, #512]	; 0x200
 800a186:	f000 fccb 	bl	800ab20 <USBD_CtlPrepareRx>
 800a18a:	463e      	mov	r6, r7
 800a18c:	e7cd      	b.n	800a12a <USBD_CDC_Setup+0x5e>
 800a18e:	bf00      	nop

0800a190 <USBD_CDC_DeInit>:
 800a190:	b538      	push	{r3, r4, r5, lr}
 800a192:	4604      	mov	r4, r0
 800a194:	2500      	movs	r5, #0
 800a196:	2181      	movs	r1, #129	; 0x81
 800a198:	f000 ff46 	bl	800b028 <USBD_LL_CloseEP>
 800a19c:	2101      	movs	r1, #1
 800a19e:	4620      	mov	r0, r4
 800a1a0:	62e5      	str	r5, [r4, #44]	; 0x2c
 800a1a2:	f000 ff41 	bl	800b028 <USBD_LL_CloseEP>
 800a1a6:	2182      	movs	r1, #130	; 0x82
 800a1a8:	4620      	mov	r0, r4
 800a1aa:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800a1ae:	f000 ff3b 	bl	800b028 <USBD_LL_CloseEP>
 800a1b2:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a1b6:	6425      	str	r5, [r4, #64]	; 0x40
 800a1b8:	b14b      	cbz	r3, 800a1ce <USBD_CDC_DeInit+0x3e>
 800a1ba:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 800a1be:	685b      	ldr	r3, [r3, #4]
 800a1c0:	4798      	blx	r3
 800a1c2:	f8d4 0290 	ldr.w	r0, [r4, #656]	; 0x290
 800a1c6:	f000 ff9f 	bl	800b108 <USBD_static_free>
 800a1ca:	f8c4 5290 	str.w	r5, [r4, #656]	; 0x290
 800a1ce:	2000      	movs	r0, #0
 800a1d0:	bd38      	pop	{r3, r4, r5, pc}
 800a1d2:	bf00      	nop

0800a1d4 <USBD_CDC_Init>:
 800a1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1d8:	7c03      	ldrb	r3, [r0, #16]
 800a1da:	4604      	mov	r4, r0
 800a1dc:	bbbb      	cbnz	r3, 800a24e <USBD_CDC_Init+0x7a>
 800a1de:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a1e2:	2202      	movs	r2, #2
 800a1e4:	2181      	movs	r1, #129	; 0x81
 800a1e6:	f000 ff0f 	bl	800b008 <USBD_LL_OpenEP>
 800a1ea:	2501      	movs	r5, #1
 800a1ec:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a1f0:	2701      	movs	r7, #1
 800a1f2:	4629      	mov	r1, r5
 800a1f4:	2202      	movs	r2, #2
 800a1f6:	62e5      	str	r5, [r4, #44]	; 0x2c
 800a1f8:	4620      	mov	r0, r4
 800a1fa:	f000 ff05 	bl	800b008 <USBD_LL_OpenEP>
 800a1fe:	2308      	movs	r3, #8
 800a200:	2203      	movs	r2, #3
 800a202:	2182      	movs	r1, #130	; 0x82
 800a204:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800a208:	4620      	mov	r0, r4
 800a20a:	f000 fefd 	bl	800b008 <USBD_LL_OpenEP>
 800a20e:	f44f 7007 	mov.w	r0, #540	; 0x21c
 800a212:	6427      	str	r7, [r4, #64]	; 0x40
 800a214:	f000 ff74 	bl	800b100 <USBD_static_malloc>
 800a218:	4605      	mov	r5, r0
 800a21a:	f8c4 0290 	str.w	r0, [r4, #656]	; 0x290
 800a21e:	b348      	cbz	r0, 800a274 <USBD_CDC_Init+0xa0>
 800a220:	f04f 0800 	mov.w	r8, #0
 800a224:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 800a228:	681b      	ldr	r3, [r3, #0]
 800a22a:	4798      	blx	r3
 800a22c:	f8c5 8214 	str.w	r8, [r5, #532]	; 0x214
 800a230:	f8c5 8218 	str.w	r8, [r5, #536]	; 0x218
 800a234:	7c26      	ldrb	r6, [r4, #16]
 800a236:	b196      	cbz	r6, 800a25e <USBD_CDC_Init+0x8a>
 800a238:	4646      	mov	r6, r8
 800a23a:	2340      	movs	r3, #64	; 0x40
 800a23c:	4639      	mov	r1, r7
 800a23e:	4620      	mov	r0, r4
 800a240:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 800a244:	f000 ff4a 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a248:	4630      	mov	r0, r6
 800a24a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a24e:	2340      	movs	r3, #64	; 0x40
 800a250:	2202      	movs	r2, #2
 800a252:	2181      	movs	r1, #129	; 0x81
 800a254:	f000 fed8 	bl	800b008 <USBD_LL_OpenEP>
 800a258:	2501      	movs	r5, #1
 800a25a:	2340      	movs	r3, #64	; 0x40
 800a25c:	e7c8      	b.n	800a1f0 <USBD_CDC_Init+0x1c>
 800a25e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a262:	4639      	mov	r1, r7
 800a264:	4620      	mov	r0, r4
 800a266:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 800a26a:	f000 ff37 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a26e:	4630      	mov	r0, r6
 800a270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a274:	463e      	mov	r6, r7
 800a276:	4630      	mov	r0, r6
 800a278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a27c <USBD_CDC_RegisterInterface>:
 800a27c:	4603      	mov	r3, r0
 800a27e:	b119      	cbz	r1, 800a288 <USBD_CDC_RegisterInterface+0xc>
 800a280:	2000      	movs	r0, #0
 800a282:	f8c3 1294 	str.w	r1, [r3, #660]	; 0x294
 800a286:	4770      	bx	lr
 800a288:	2002      	movs	r0, #2
 800a28a:	4770      	bx	lr

0800a28c <USBD_CDC_SetTxBuffer>:
 800a28c:	4603      	mov	r3, r0
 800a28e:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 800a292:	2000      	movs	r0, #0
 800a294:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 800a298:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 800a29c:	4770      	bx	lr
 800a29e:	bf00      	nop

0800a2a0 <USBD_CDC_SetRxBuffer>:
 800a2a0:	4603      	mov	r3, r0
 800a2a2:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 800a2a6:	2000      	movs	r0, #0
 800a2a8:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 800a2ac:	4770      	bx	lr
 800a2ae:	bf00      	nop

0800a2b0 <USBD_CDC_TransmitPacket>:
 800a2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a2b2:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 800a2b6:	b195      	cbz	r5, 800a2de <USBD_CDC_TransmitPacket+0x2e>
 800a2b8:	f8d5 4214 	ldr.w	r4, [r5, #532]	; 0x214
 800a2bc:	b10c      	cbz	r4, 800a2c2 <USBD_CDC_TransmitPacket+0x12>
 800a2be:	2001      	movs	r0, #1
 800a2c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2c2:	2701      	movs	r7, #1
 800a2c4:	f8d5 6210 	ldr.w	r6, [r5, #528]	; 0x210
 800a2c8:	f8d5 2208 	ldr.w	r2, [r5, #520]	; 0x208
 800a2cc:	f8c5 7214 	str.w	r7, [r5, #532]	; 0x214
 800a2d0:	2181      	movs	r1, #129	; 0x81
 800a2d2:	b2b3      	uxth	r3, r6
 800a2d4:	6306      	str	r6, [r0, #48]	; 0x30
 800a2d6:	f000 fef3 	bl	800b0c0 <USBD_LL_Transmit>
 800a2da:	4620      	mov	r0, r4
 800a2dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2de:	2002      	movs	r0, #2
 800a2e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2e2:	bf00      	nop

0800a2e4 <USBD_CDC_ReceivePacket>:
 800a2e4:	f8d0 2290 	ldr.w	r2, [r0, #656]	; 0x290
 800a2e8:	b510      	push	{r4, lr}
 800a2ea:	b19a      	cbz	r2, 800a314 <USBD_CDC_ReceivePacket+0x30>
 800a2ec:	7c04      	ldrb	r4, [r0, #16]
 800a2ee:	b144      	cbz	r4, 800a302 <USBD_CDC_ReceivePacket+0x1e>
 800a2f0:	2400      	movs	r4, #0
 800a2f2:	2340      	movs	r3, #64	; 0x40
 800a2f4:	2101      	movs	r1, #1
 800a2f6:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 800a2fa:	f000 feef 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a2fe:	4620      	mov	r0, r4
 800a300:	bd10      	pop	{r4, pc}
 800a302:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a306:	2101      	movs	r1, #1
 800a308:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 800a30c:	f000 fee6 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a310:	4620      	mov	r0, r4
 800a312:	bd10      	pop	{r4, pc}
 800a314:	2402      	movs	r4, #2
 800a316:	4620      	mov	r0, r4
 800a318:	bd10      	pop	{r4, pc}
 800a31a:	bf00      	nop

0800a31c <USBD_Init>:
 800a31c:	b188      	cbz	r0, 800a342 <USBD_Init+0x26>
 800a31e:	b508      	push	{r3, lr}
 800a320:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a324:	b113      	cbz	r3, 800a32c <USBD_Init+0x10>
 800a326:	2300      	movs	r3, #0
 800a328:	f8c0 328c 	str.w	r3, [r0, #652]	; 0x28c
 800a32c:	b109      	cbz	r1, 800a332 <USBD_Init+0x16>
 800a32e:	f8c0 1288 	str.w	r1, [r0, #648]	; 0x288
 800a332:	2301      	movs	r3, #1
 800a334:	7002      	strb	r2, [r0, #0]
 800a336:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a33a:	f000 fe13 	bl	800af64 <USBD_LL_Init>
 800a33e:	2000      	movs	r0, #0
 800a340:	bd08      	pop	{r3, pc}
 800a342:	2002      	movs	r0, #2
 800a344:	4770      	bx	lr
 800a346:	bf00      	nop

0800a348 <USBD_RegisterClass>:
 800a348:	4603      	mov	r3, r0
 800a34a:	b119      	cbz	r1, 800a354 <USBD_RegisterClass+0xc>
 800a34c:	2000      	movs	r0, #0
 800a34e:	f8c3 128c 	str.w	r1, [r3, #652]	; 0x28c
 800a352:	4770      	bx	lr
 800a354:	2002      	movs	r0, #2
 800a356:	4770      	bx	lr

0800a358 <USBD_Start>:
 800a358:	b508      	push	{r3, lr}
 800a35a:	f000 fe47 	bl	800afec <USBD_LL_Start>
 800a35e:	2000      	movs	r0, #0
 800a360:	bd08      	pop	{r3, pc}
 800a362:	bf00      	nop

0800a364 <USBD_SetClassConfig>:
 800a364:	b508      	push	{r3, lr}
 800a366:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a36a:	b11b      	cbz	r3, 800a374 <USBD_SetClassConfig+0x10>
 800a36c:	681b      	ldr	r3, [r3, #0]
 800a36e:	4798      	blx	r3
 800a370:	b900      	cbnz	r0, 800a374 <USBD_SetClassConfig+0x10>
 800a372:	bd08      	pop	{r3, pc}
 800a374:	2002      	movs	r0, #2
 800a376:	bd08      	pop	{r3, pc}

0800a378 <USBD_ClrClassConfig>:
 800a378:	b508      	push	{r3, lr}
 800a37a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a37e:	685b      	ldr	r3, [r3, #4]
 800a380:	4798      	blx	r3
 800a382:	2000      	movs	r0, #0
 800a384:	bd08      	pop	{r3, pc}
 800a386:	bf00      	nop

0800a388 <USBD_LL_SetupStage>:
 800a388:	b538      	push	{r3, r4, r5, lr}
 800a38a:	4604      	mov	r4, r0
 800a38c:	f500 7520 	add.w	r5, r0, #640	; 0x280
 800a390:	4628      	mov	r0, r5
 800a392:	f000 fb63 	bl	800aa5c <USBD_ParseSetupRequest>
 800a396:	2201      	movs	r2, #1
 800a398:	f8b4 3286 	ldrh.w	r3, [r4, #646]	; 0x286
 800a39c:	f894 1280 	ldrb.w	r1, [r4, #640]	; 0x280
 800a3a0:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
 800a3a4:	f001 031f 	and.w	r3, r1, #31
 800a3a8:	4293      	cmp	r3, r2
 800a3aa:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 800a3ae:	d009      	beq.n	800a3c4 <USBD_LL_SetupStage+0x3c>
 800a3b0:	2b02      	cmp	r3, #2
 800a3b2:	d013      	beq.n	800a3dc <USBD_LL_SetupStage+0x54>
 800a3b4:	b163      	cbz	r3, 800a3d0 <USBD_LL_SetupStage+0x48>
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800a3bc:	f000 fe42 	bl	800b044 <USBD_LL_StallEP>
 800a3c0:	2000      	movs	r0, #0
 800a3c2:	bd38      	pop	{r3, r4, r5, pc}
 800a3c4:	4629      	mov	r1, r5
 800a3c6:	4620      	mov	r0, r4
 800a3c8:	f000 fa78 	bl	800a8bc <USBD_StdItfReq>
 800a3cc:	2000      	movs	r0, #0
 800a3ce:	bd38      	pop	{r3, r4, r5, pc}
 800a3d0:	4629      	mov	r1, r5
 800a3d2:	4620      	mov	r0, r4
 800a3d4:	f000 f8f8 	bl	800a5c8 <USBD_StdDevReq>
 800a3d8:	2000      	movs	r0, #0
 800a3da:	bd38      	pop	{r3, r4, r5, pc}
 800a3dc:	4629      	mov	r1, r5
 800a3de:	4620      	mov	r0, r4
 800a3e0:	f000 faa0 	bl	800a924 <USBD_StdEPReq>
 800a3e4:	2000      	movs	r0, #0
 800a3e6:	bd38      	pop	{r3, r4, r5, pc}

0800a3e8 <USBD_LL_DataOutStage>:
 800a3e8:	b538      	push	{r3, r4, r5, lr}
 800a3ea:	4605      	mov	r5, r0
 800a3ec:	b969      	cbnz	r1, 800a40a <USBD_LL_DataOutStage+0x22>
 800a3ee:	4613      	mov	r3, r2
 800a3f0:	f8d0 226c 	ldr.w	r2, [r0, #620]	; 0x26c
 800a3f4:	2a03      	cmp	r2, #3
 800a3f6:	d015      	beq.n	800a424 <USBD_LL_DataOutStage+0x3c>
 800a3f8:	2a05      	cmp	r2, #5
 800a3fa:	460c      	mov	r4, r1
 800a3fc:	d10e      	bne.n	800a41c <USBD_LL_DataOutStage+0x34>
 800a3fe:	f8c5 126c 	str.w	r1, [r5, #620]	; 0x26c
 800a402:	f000 fe1f 	bl	800b044 <USBD_LL_StallEP>
 800a406:	4620      	mov	r0, r4
 800a408:	bd38      	pop	{r3, r4, r5, pc}
 800a40a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a40e:	699b      	ldr	r3, [r3, #24]
 800a410:	b133      	cbz	r3, 800a420 <USBD_LL_DataOutStage+0x38>
 800a412:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a416:	2a03      	cmp	r2, #3
 800a418:	d102      	bne.n	800a420 <USBD_LL_DataOutStage+0x38>
 800a41a:	4798      	blx	r3
 800a41c:	2000      	movs	r0, #0
 800a41e:	bd38      	pop	{r3, r4, r5, pc}
 800a420:	2002      	movs	r0, #2
 800a422:	bd38      	pop	{r3, r4, r5, pc}
 800a424:	e9d0 1253 	ldrd	r1, r2, [r0, #332]	; 0x14c
 800a428:	4291      	cmp	r1, r2
 800a42a:	d90c      	bls.n	800a446 <USBD_LL_DataOutStage+0x5e>
 800a42c:	1a89      	subs	r1, r1, r2
 800a42e:	428a      	cmp	r2, r1
 800a430:	bf88      	it	hi
 800a432:	b28a      	uxthhi	r2, r1
 800a434:	f8c0 114c 	str.w	r1, [r0, #332]	; 0x14c
 800a438:	bf98      	it	ls
 800a43a:	b292      	uxthls	r2, r2
 800a43c:	4619      	mov	r1, r3
 800a43e:	f000 fb7d 	bl	800ab3c <USBD_CtlContinueRx>
 800a442:	2000      	movs	r0, #0
 800a444:	bd38      	pop	{r3, r4, r5, pc}
 800a446:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a44a:	691b      	ldr	r3, [r3, #16]
 800a44c:	b11b      	cbz	r3, 800a456 <USBD_LL_DataOutStage+0x6e>
 800a44e:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a452:	2a03      	cmp	r2, #3
 800a454:	d004      	beq.n	800a460 <USBD_LL_DataOutStage+0x78>
 800a456:	4628      	mov	r0, r5
 800a458:	f000 fb7a 	bl	800ab50 <USBD_CtlSendStatus>
 800a45c:	2000      	movs	r0, #0
 800a45e:	bd38      	pop	{r3, r4, r5, pc}
 800a460:	4798      	blx	r3
 800a462:	e7f8      	b.n	800a456 <USBD_LL_DataOutStage+0x6e>

0800a464 <USBD_LL_DataInStage>:
 800a464:	b570      	push	{r4, r5, r6, lr}
 800a466:	4604      	mov	r4, r0
 800a468:	b961      	cbnz	r1, 800a484 <USBD_LL_DataInStage+0x20>
 800a46a:	f8d0 326c 	ldr.w	r3, [r0, #620]	; 0x26c
 800a46e:	2b02      	cmp	r3, #2
 800a470:	d015      	beq.n	800a49e <USBD_LL_DataInStage+0x3a>
 800a472:	f033 0304 	bics.w	r3, r3, #4
 800a476:	d02e      	beq.n	800a4d6 <USBD_LL_DataInStage+0x72>
 800a478:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 800a47c:	2b01      	cmp	r3, #1
 800a47e:	d031      	beq.n	800a4e4 <USBD_LL_DataInStage+0x80>
 800a480:	2000      	movs	r0, #0
 800a482:	bd70      	pop	{r4, r5, r6, pc}
 800a484:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a488:	695b      	ldr	r3, [r3, #20]
 800a48a:	b133      	cbz	r3, 800a49a <USBD_LL_DataInStage+0x36>
 800a48c:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a490:	2a03      	cmp	r2, #3
 800a492:	d102      	bne.n	800a49a <USBD_LL_DataInStage+0x36>
 800a494:	4798      	blx	r3
 800a496:	2000      	movs	r0, #0
 800a498:	bd70      	pop	{r4, r5, r6, pc}
 800a49a:	2002      	movs	r0, #2
 800a49c:	bd70      	pop	{r4, r5, r6, pc}
 800a49e:	e9d0 6308 	ldrd	r6, r3, [r0, #32]
 800a4a2:	429e      	cmp	r6, r3
 800a4a4:	d833      	bhi.n	800a50e <USBD_LL_DataInStage+0xaa>
 800a4a6:	69c2      	ldr	r2, [r0, #28]
 800a4a8:	fbb2 f5f3 	udiv	r5, r2, r3
 800a4ac:	fb03 2515 	mls	r5, r3, r5, r2
 800a4b0:	b9ed      	cbnz	r5, 800a4ee <USBD_LL_DataInStage+0x8a>
 800a4b2:	4293      	cmp	r3, r2
 800a4b4:	d81b      	bhi.n	800a4ee <USBD_LL_DataInStage+0x8a>
 800a4b6:	f8d0 3270 	ldr.w	r3, [r0, #624]	; 0x270
 800a4ba:	429a      	cmp	r2, r3
 800a4bc:	d217      	bcs.n	800a4ee <USBD_LL_DataInStage+0x8a>
 800a4be:	462a      	mov	r2, r5
 800a4c0:	f000 fb24 	bl	800ab0c <USBD_CtlContinueSendData>
 800a4c4:	462b      	mov	r3, r5
 800a4c6:	462a      	mov	r2, r5
 800a4c8:	4629      	mov	r1, r5
 800a4ca:	4620      	mov	r0, r4
 800a4cc:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
 800a4d0:	f000 fe04 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a4d4:	e7d0      	b.n	800a478 <USBD_LL_DataInStage+0x14>
 800a4d6:	2180      	movs	r1, #128	; 0x80
 800a4d8:	f000 fdb4 	bl	800b044 <USBD_LL_StallEP>
 800a4dc:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 800a4e0:	2b01      	cmp	r3, #1
 800a4e2:	d1cd      	bne.n	800a480 <USBD_LL_DataInStage+0x1c>
 800a4e4:	2300      	movs	r3, #0
 800a4e6:	f884 3278 	strb.w	r3, [r4, #632]	; 0x278
 800a4ea:	4618      	mov	r0, r3
 800a4ec:	bd70      	pop	{r4, r5, r6, pc}
 800a4ee:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a4f2:	68db      	ldr	r3, [r3, #12]
 800a4f4:	b11b      	cbz	r3, 800a4fe <USBD_LL_DataInStage+0x9a>
 800a4f6:	f894 2274 	ldrb.w	r2, [r4, #628]	; 0x274
 800a4fa:	2a03      	cmp	r2, #3
 800a4fc:	d015      	beq.n	800a52a <USBD_LL_DataInStage+0xc6>
 800a4fe:	2180      	movs	r1, #128	; 0x80
 800a500:	4620      	mov	r0, r4
 800a502:	f000 fd9f 	bl	800b044 <USBD_LL_StallEP>
 800a506:	4620      	mov	r0, r4
 800a508:	f000 fb2e 	bl	800ab68 <USBD_CtlReceiveStatus>
 800a50c:	e7b4      	b.n	800a478 <USBD_LL_DataInStage+0x14>
 800a50e:	460d      	mov	r5, r1
 800a510:	1af3      	subs	r3, r6, r3
 800a512:	4611      	mov	r1, r2
 800a514:	6203      	str	r3, [r0, #32]
 800a516:	b29a      	uxth	r2, r3
 800a518:	f000 faf8 	bl	800ab0c <USBD_CtlContinueSendData>
 800a51c:	462b      	mov	r3, r5
 800a51e:	462a      	mov	r2, r5
 800a520:	4629      	mov	r1, r5
 800a522:	4620      	mov	r0, r4
 800a524:	f000 fdda 	bl	800b0dc <USBD_LL_PrepareReceive>
 800a528:	e7a6      	b.n	800a478 <USBD_LL_DataInStage+0x14>
 800a52a:	4620      	mov	r0, r4
 800a52c:	4798      	blx	r3
 800a52e:	e7e6      	b.n	800a4fe <USBD_LL_DataInStage+0x9a>

0800a530 <USBD_LL_Reset>:
 800a530:	b570      	push	{r4, r5, r6, lr}
 800a532:	2200      	movs	r2, #0
 800a534:	2640      	movs	r6, #64	; 0x40
 800a536:	4604      	mov	r4, r0
 800a538:	2501      	movs	r5, #1
 800a53a:	4611      	mov	r1, r2
 800a53c:	4633      	mov	r3, r6
 800a53e:	f000 fd63 	bl	800b008 <USBD_LL_OpenEP>
 800a542:	4633      	mov	r3, r6
 800a544:	2180      	movs	r1, #128	; 0x80
 800a546:	2200      	movs	r2, #0
 800a548:	4620      	mov	r0, r4
 800a54a:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 800a54e:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
 800a552:	f000 fd59 	bl	800b008 <USBD_LL_OpenEP>
 800a556:	2100      	movs	r1, #0
 800a558:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a55c:	61a5      	str	r5, [r4, #24]
 800a55e:	6266      	str	r6, [r4, #36]	; 0x24
 800a560:	f884 5274 	strb.w	r5, [r4, #628]	; 0x274
 800a564:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 800a568:	6061      	str	r1, [r4, #4]
 800a56a:	f8c4 127c 	str.w	r1, [r4, #636]	; 0x27c
 800a56e:	b123      	cbz	r3, 800a57a <USBD_LL_Reset+0x4a>
 800a570:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a574:	4620      	mov	r0, r4
 800a576:	685b      	ldr	r3, [r3, #4]
 800a578:	4798      	blx	r3
 800a57a:	2000      	movs	r0, #0
 800a57c:	bd70      	pop	{r4, r5, r6, pc}
 800a57e:	bf00      	nop

0800a580 <USBD_LL_SetSpeed>:
 800a580:	4603      	mov	r3, r0
 800a582:	2000      	movs	r0, #0
 800a584:	7419      	strb	r1, [r3, #16]
 800a586:	4770      	bx	lr

0800a588 <USBD_LL_Suspend>:
 800a588:	4603      	mov	r3, r0
 800a58a:	2104      	movs	r1, #4
 800a58c:	f893 2274 	ldrb.w	r2, [r3, #628]	; 0x274
 800a590:	2000      	movs	r0, #0
 800a592:	f883 1274 	strb.w	r1, [r3, #628]	; 0x274
 800a596:	f883 2275 	strb.w	r2, [r3, #629]	; 0x275
 800a59a:	4770      	bx	lr

0800a59c <USBD_LL_Resume>:
 800a59c:	4603      	mov	r3, r0
 800a59e:	f893 2275 	ldrb.w	r2, [r3, #629]	; 0x275
 800a5a2:	2000      	movs	r0, #0
 800a5a4:	f883 2274 	strb.w	r2, [r3, #628]	; 0x274
 800a5a8:	4770      	bx	lr
 800a5aa:	bf00      	nop

0800a5ac <USBD_LL_SOF>:
 800a5ac:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 800a5b0:	2a03      	cmp	r2, #3
 800a5b2:	d001      	beq.n	800a5b8 <USBD_LL_SOF+0xc>
 800a5b4:	2000      	movs	r0, #0
 800a5b6:	4770      	bx	lr
 800a5b8:	b508      	push	{r3, lr}
 800a5ba:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a5be:	69db      	ldr	r3, [r3, #28]
 800a5c0:	b103      	cbz	r3, 800a5c4 <USBD_LL_SOF+0x18>
 800a5c2:	4798      	blx	r3
 800a5c4:	2000      	movs	r0, #0
 800a5c6:	bd08      	pop	{r3, pc}

0800a5c8 <USBD_StdDevReq>:
 800a5c8:	b530      	push	{r4, r5, lr}
 800a5ca:	780b      	ldrb	r3, [r1, #0]
 800a5cc:	460d      	mov	r5, r1
 800a5ce:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a5d2:	2b20      	cmp	r3, #32
 800a5d4:	4604      	mov	r4, r0
 800a5d6:	b083      	sub	sp, #12
 800a5d8:	d00d      	beq.n	800a5f6 <USBD_StdDevReq+0x2e>
 800a5da:	2b40      	cmp	r3, #64	; 0x40
 800a5dc:	d00b      	beq.n	800a5f6 <USBD_StdDevReq+0x2e>
 800a5de:	b19b      	cbz	r3, 800a608 <USBD_StdDevReq+0x40>
 800a5e0:	2180      	movs	r1, #128	; 0x80
 800a5e2:	4620      	mov	r0, r4
 800a5e4:	f000 fd2e 	bl	800b044 <USBD_LL_StallEP>
 800a5e8:	2100      	movs	r1, #0
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f000 fd2a 	bl	800b044 <USBD_LL_StallEP>
 800a5f0:	2000      	movs	r0, #0
 800a5f2:	b003      	add	sp, #12
 800a5f4:	bd30      	pop	{r4, r5, pc}
 800a5f6:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a5fa:	4629      	mov	r1, r5
 800a5fc:	4620      	mov	r0, r4
 800a5fe:	689b      	ldr	r3, [r3, #8]
 800a600:	4798      	blx	r3
 800a602:	2000      	movs	r0, #0
 800a604:	b003      	add	sp, #12
 800a606:	bd30      	pop	{r4, r5, pc}
 800a608:	784b      	ldrb	r3, [r1, #1]
 800a60a:	2b09      	cmp	r3, #9
 800a60c:	d8e8      	bhi.n	800a5e0 <USBD_StdDevReq+0x18>
 800a60e:	a201      	add	r2, pc, #4	; (adr r2, 800a614 <USBD_StdDevReq+0x4c>)
 800a610:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a614:	0800a66f 	.word	0x0800a66f
 800a618:	0800a69b 	.word	0x0800a69b
 800a61c:	0800a5e1 	.word	0x0800a5e1
 800a620:	0800a6b9 	.word	0x0800a6b9
 800a624:	0800a5e1 	.word	0x0800a5e1
 800a628:	0800a6c1 	.word	0x0800a6c1
 800a62c:	0800a6f9 	.word	0x0800a6f9
 800a630:	0800a5e1 	.word	0x0800a5e1
 800a634:	0800a729 	.word	0x0800a729
 800a638:	0800a63d 	.word	0x0800a63d
 800a63c:	7889      	ldrb	r1, [r1, #2]
 800a63e:	4d9e      	ldr	r5, [pc, #632]	; (800a8b8 <USBD_StdDevReq+0x2f0>)
 800a640:	2901      	cmp	r1, #1
 800a642:	7029      	strb	r1, [r5, #0]
 800a644:	d8cc      	bhi.n	800a5e0 <USBD_StdDevReq+0x18>
 800a646:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a64a:	2b02      	cmp	r3, #2
 800a64c:	f000 8111 	beq.w	800a872 <USBD_StdDevReq+0x2aa>
 800a650:	2b03      	cmp	r3, #3
 800a652:	f000 80ff 	beq.w	800a854 <USBD_StdDevReq+0x28c>
 800a656:	2180      	movs	r1, #128	; 0x80
 800a658:	f000 fcf4 	bl	800b044 <USBD_LL_StallEP>
 800a65c:	2100      	movs	r1, #0
 800a65e:	4620      	mov	r0, r4
 800a660:	f000 fcf0 	bl	800b044 <USBD_LL_StallEP>
 800a664:	4620      	mov	r0, r4
 800a666:	7829      	ldrb	r1, [r5, #0]
 800a668:	f7ff fe86 	bl	800a378 <USBD_ClrClassConfig>
 800a66c:	e7c0      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a66e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a672:	3b01      	subs	r3, #1
 800a674:	2b02      	cmp	r3, #2
 800a676:	d8b3      	bhi.n	800a5e0 <USBD_StdDevReq+0x18>
 800a678:	88cb      	ldrh	r3, [r1, #6]
 800a67a:	2b02      	cmp	r3, #2
 800a67c:	d1b0      	bne.n	800a5e0 <USBD_StdDevReq+0x18>
 800a67e:	2201      	movs	r2, #1
 800a680:	f8d0 327c 	ldr.w	r3, [r0, #636]	; 0x27c
 800a684:	60c2      	str	r2, [r0, #12]
 800a686:	b10b      	cbz	r3, 800a68c <USBD_StdDevReq+0xc4>
 800a688:	2303      	movs	r3, #3
 800a68a:	60c3      	str	r3, [r0, #12]
 800a68c:	2202      	movs	r2, #2
 800a68e:	4620      	mov	r0, r4
 800a690:	f104 010c 	add.w	r1, r4, #12
 800a694:	f000 fa2c 	bl	800aaf0 <USBD_CtlSendData>
 800a698:	e7aa      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a69a:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a69e:	3b01      	subs	r3, #1
 800a6a0:	2b02      	cmp	r3, #2
 800a6a2:	d89d      	bhi.n	800a5e0 <USBD_StdDevReq+0x18>
 800a6a4:	884b      	ldrh	r3, [r1, #2]
 800a6a6:	2b01      	cmp	r3, #1
 800a6a8:	d1a2      	bne.n	800a5f0 <USBD_StdDevReq+0x28>
 800a6aa:	2300      	movs	r3, #0
 800a6ac:	4620      	mov	r0, r4
 800a6ae:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
 800a6b2:	f000 fa4d 	bl	800ab50 <USBD_CtlSendStatus>
 800a6b6:	e79b      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a6b8:	884b      	ldrh	r3, [r1, #2]
 800a6ba:	2b01      	cmp	r3, #1
 800a6bc:	d198      	bne.n	800a5f0 <USBD_StdDevReq+0x28>
 800a6be:	e7f5      	b.n	800a6ac <USBD_StdDevReq+0xe4>
 800a6c0:	888b      	ldrh	r3, [r1, #4]
 800a6c2:	2b00      	cmp	r3, #0
 800a6c4:	d18c      	bne.n	800a5e0 <USBD_StdDevReq+0x18>
 800a6c6:	88cb      	ldrh	r3, [r1, #6]
 800a6c8:	2b00      	cmp	r3, #0
 800a6ca:	d189      	bne.n	800a5e0 <USBD_StdDevReq+0x18>
 800a6cc:	884d      	ldrh	r5, [r1, #2]
 800a6ce:	2d7f      	cmp	r5, #127	; 0x7f
 800a6d0:	d886      	bhi.n	800a5e0 <USBD_StdDevReq+0x18>
 800a6d2:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a6d6:	2b03      	cmp	r3, #3
 800a6d8:	d082      	beq.n	800a5e0 <USBD_StdDevReq+0x18>
 800a6da:	b2e9      	uxtb	r1, r5
 800a6dc:	f880 1276 	strb.w	r1, [r0, #630]	; 0x276
 800a6e0:	f000 fce0 	bl	800b0a4 <USBD_LL_SetUSBAddress>
 800a6e4:	4620      	mov	r0, r4
 800a6e6:	f000 fa33 	bl	800ab50 <USBD_CtlSendStatus>
 800a6ea:	2d00      	cmp	r5, #0
 800a6ec:	f000 80df 	beq.w	800a8ae <USBD_StdDevReq+0x2e6>
 800a6f0:	2302      	movs	r3, #2
 800a6f2:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 800a6f6:	e77b      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a6f8:	884a      	ldrh	r2, [r1, #2]
 800a6fa:	0a13      	lsrs	r3, r2, #8
 800a6fc:	3b01      	subs	r3, #1
 800a6fe:	2b06      	cmp	r3, #6
 800a700:	f63f af6e 	bhi.w	800a5e0 <USBD_StdDevReq+0x18>
 800a704:	a101      	add	r1, pc, #4	; (adr r1, 800a70c <USBD_StdDevReq+0x144>)
 800a706:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800a70a:	bf00      	nop
 800a70c:	0800a7bb 	.word	0x0800a7bb
 800a710:	0800a7a3 	.word	0x0800a7a3
 800a714:	0800a791 	.word	0x0800a791
 800a718:	0800a5e1 	.word	0x0800a5e1
 800a71c:	0800a5e1 	.word	0x0800a5e1
 800a720:	0800a77b 	.word	0x0800a77b
 800a724:	0800a74d 	.word	0x0800a74d
 800a728:	88ca      	ldrh	r2, [r1, #6]
 800a72a:	2a01      	cmp	r2, #1
 800a72c:	f47f af58 	bne.w	800a5e0 <USBD_StdDevReq+0x18>
 800a730:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a734:	2b02      	cmp	r3, #2
 800a736:	d878      	bhi.n	800a82a <USBD_StdDevReq+0x262>
 800a738:	2b00      	cmp	r3, #0
 800a73a:	f43f af51 	beq.w	800a5e0 <USBD_StdDevReq+0x18>
 800a73e:	4601      	mov	r1, r0
 800a740:	2300      	movs	r3, #0
 800a742:	f841 3f08 	str.w	r3, [r1, #8]!
 800a746:	f000 f9d3 	bl	800aaf0 <USBD_CtlSendData>
 800a74a:	e751      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a74c:	7c03      	ldrb	r3, [r0, #16]
 800a74e:	2b00      	cmp	r3, #0
 800a750:	f47f af46 	bne.w	800a5e0 <USBD_StdDevReq+0x18>
 800a754:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a758:	f10d 0006 	add.w	r0, sp, #6
 800a75c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a75e:	4798      	blx	r3
 800a760:	2307      	movs	r3, #7
 800a762:	7043      	strb	r3, [r0, #1]
 800a764:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a768:	2a00      	cmp	r2, #0
 800a76a:	d06e      	beq.n	800a84a <USBD_StdDevReq+0x282>
 800a76c:	88eb      	ldrh	r3, [r5, #6]
 800a76e:	2b00      	cmp	r3, #0
 800a770:	d162      	bne.n	800a838 <USBD_StdDevReq+0x270>
 800a772:	4620      	mov	r0, r4
 800a774:	f000 f9ec 	bl	800ab50 <USBD_CtlSendStatus>
 800a778:	e73a      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a77a:	7c03      	ldrb	r3, [r0, #16]
 800a77c:	2b00      	cmp	r3, #0
 800a77e:	f47f af2f 	bne.w	800a5e0 <USBD_StdDevReq+0x18>
 800a782:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a786:	f10d 0006 	add.w	r0, sp, #6
 800a78a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a78c:	4798      	blx	r3
 800a78e:	e7e9      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a790:	b2d2      	uxtb	r2, r2
 800a792:	2a05      	cmp	r2, #5
 800a794:	f63f af24 	bhi.w	800a5e0 <USBD_StdDevReq+0x18>
 800a798:	e8df f002 	tbb	[pc, r2]
 800a79c:	272f373f 	.word	0x272f373f
 800a7a0:	171f      	.short	0x171f
 800a7a2:	7c03      	ldrb	r3, [r0, #16]
 800a7a4:	2b00      	cmp	r3, #0
 800a7a6:	d172      	bne.n	800a88e <USBD_StdDevReq+0x2c6>
 800a7a8:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a7ac:	f10d 0006 	add.w	r0, sp, #6
 800a7b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a7b2:	4798      	blx	r3
 800a7b4:	2302      	movs	r3, #2
 800a7b6:	7043      	strb	r3, [r0, #1]
 800a7b8:	e7d4      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a7ba:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a7be:	f10d 0106 	add.w	r1, sp, #6
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	7c00      	ldrb	r0, [r0, #16]
 800a7c6:	4798      	blx	r3
 800a7c8:	e7cc      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a7ca:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a7ce:	f10d 0106 	add.w	r1, sp, #6
 800a7d2:	699b      	ldr	r3, [r3, #24]
 800a7d4:	7c00      	ldrb	r0, [r0, #16]
 800a7d6:	4798      	blx	r3
 800a7d8:	e7c4      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a7da:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a7de:	f10d 0106 	add.w	r1, sp, #6
 800a7e2:	695b      	ldr	r3, [r3, #20]
 800a7e4:	7c00      	ldrb	r0, [r0, #16]
 800a7e6:	4798      	blx	r3
 800a7e8:	e7bc      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a7ea:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a7ee:	f10d 0106 	add.w	r1, sp, #6
 800a7f2:	691b      	ldr	r3, [r3, #16]
 800a7f4:	7c00      	ldrb	r0, [r0, #16]
 800a7f6:	4798      	blx	r3
 800a7f8:	e7b4      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a7fa:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a7fe:	f10d 0106 	add.w	r1, sp, #6
 800a802:	68db      	ldr	r3, [r3, #12]
 800a804:	7c00      	ldrb	r0, [r0, #16]
 800a806:	4798      	blx	r3
 800a808:	e7ac      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a80a:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a80e:	f10d 0106 	add.w	r1, sp, #6
 800a812:	689b      	ldr	r3, [r3, #8]
 800a814:	7c00      	ldrb	r0, [r0, #16]
 800a816:	4798      	blx	r3
 800a818:	e7a4      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a81a:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a81e:	f10d 0106 	add.w	r1, sp, #6
 800a822:	685b      	ldr	r3, [r3, #4]
 800a824:	7c00      	ldrb	r0, [r0, #16]
 800a826:	4798      	blx	r3
 800a828:	e79c      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a82a:	2b03      	cmp	r3, #3
 800a82c:	f47f aed8 	bne.w	800a5e0 <USBD_StdDevReq+0x18>
 800a830:	1d01      	adds	r1, r0, #4
 800a832:	f000 f95d 	bl	800aaf0 <USBD_CtlSendData>
 800a836:	e6db      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a838:	429a      	cmp	r2, r3
 800a83a:	bf28      	it	cs
 800a83c:	461a      	movcs	r2, r3
 800a83e:	4601      	mov	r1, r0
 800a840:	4620      	mov	r0, r4
 800a842:	f8ad 2006 	strh.w	r2, [sp, #6]
 800a846:	f000 f953 	bl	800aaf0 <USBD_CtlSendData>
 800a84a:	88eb      	ldrh	r3, [r5, #6]
 800a84c:	2b00      	cmp	r3, #0
 800a84e:	f47f aecf 	bne.w	800a5f0 <USBD_StdDevReq+0x28>
 800a852:	e78e      	b.n	800a772 <USBD_StdDevReq+0x1aa>
 800a854:	b321      	cbz	r1, 800a8a0 <USBD_StdDevReq+0x2d8>
 800a856:	6841      	ldr	r1, [r0, #4]
 800a858:	2901      	cmp	r1, #1
 800a85a:	d08a      	beq.n	800a772 <USBD_StdDevReq+0x1aa>
 800a85c:	b2c9      	uxtb	r1, r1
 800a85e:	f7ff fd8b 	bl	800a378 <USBD_ClrClassConfig>
 800a862:	7829      	ldrb	r1, [r5, #0]
 800a864:	4620      	mov	r0, r4
 800a866:	6061      	str	r1, [r4, #4]
 800a868:	f7ff fd7c 	bl	800a364 <USBD_SetClassConfig>
 800a86c:	2802      	cmp	r0, #2
 800a86e:	d180      	bne.n	800a772 <USBD_StdDevReq+0x1aa>
 800a870:	e6b6      	b.n	800a5e0 <USBD_StdDevReq+0x18>
 800a872:	2900      	cmp	r1, #0
 800a874:	f43f af7d 	beq.w	800a772 <USBD_StdDevReq+0x1aa>
 800a878:	2101      	movs	r1, #1
 800a87a:	2303      	movs	r3, #3
 800a87c:	6041      	str	r1, [r0, #4]
 800a87e:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a882:	f7ff fd6f 	bl	800a364 <USBD_SetClassConfig>
 800a886:	2802      	cmp	r0, #2
 800a888:	f47f af73 	bne.w	800a772 <USBD_StdDevReq+0x1aa>
 800a88c:	e6a8      	b.n	800a5e0 <USBD_StdDevReq+0x18>
 800a88e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a892:	f10d 0006 	add.w	r0, sp, #6
 800a896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a898:	4798      	blx	r3
 800a89a:	2302      	movs	r3, #2
 800a89c:	7043      	strb	r3, [r0, #1]
 800a89e:	e761      	b.n	800a764 <USBD_StdDevReq+0x19c>
 800a8a0:	2302      	movs	r3, #2
 800a8a2:	6041      	str	r1, [r0, #4]
 800a8a4:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a8a8:	f7ff fd66 	bl	800a378 <USBD_ClrClassConfig>
 800a8ac:	e761      	b.n	800a772 <USBD_StdDevReq+0x1aa>
 800a8ae:	2301      	movs	r3, #1
 800a8b0:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 800a8b4:	e69c      	b.n	800a5f0 <USBD_StdDevReq+0x28>
 800a8b6:	bf00      	nop
 800a8b8:	20000b60 	.word	0x20000b60

0800a8bc <USBD_StdItfReq>:
 800a8bc:	b538      	push	{r3, r4, r5, lr}
 800a8be:	780b      	ldrb	r3, [r1, #0]
 800a8c0:	460d      	mov	r5, r1
 800a8c2:	f003 0260 	and.w	r2, r3, #96	; 0x60
 800a8c6:	2a40      	cmp	r2, #64	; 0x40
 800a8c8:	4604      	mov	r4, r0
 800a8ca:	d00a      	beq.n	800a8e2 <USBD_StdItfReq+0x26>
 800a8cc:	065b      	lsls	r3, r3, #25
 800a8ce:	d508      	bpl.n	800a8e2 <USBD_StdItfReq+0x26>
 800a8d0:	2180      	movs	r1, #128	; 0x80
 800a8d2:	f000 fbb7 	bl	800b044 <USBD_LL_StallEP>
 800a8d6:	2100      	movs	r1, #0
 800a8d8:	4620      	mov	r0, r4
 800a8da:	f000 fbb3 	bl	800b044 <USBD_LL_StallEP>
 800a8de:	2000      	movs	r0, #0
 800a8e0:	bd38      	pop	{r3, r4, r5, pc}
 800a8e2:	f894 3274 	ldrb.w	r3, [r4, #628]	; 0x274
 800a8e6:	3b01      	subs	r3, #1
 800a8e8:	2b02      	cmp	r3, #2
 800a8ea:	d811      	bhi.n	800a910 <USBD_StdItfReq+0x54>
 800a8ec:	792b      	ldrb	r3, [r5, #4]
 800a8ee:	2b01      	cmp	r3, #1
 800a8f0:	d80e      	bhi.n	800a910 <USBD_StdItfReq+0x54>
 800a8f2:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a8f6:	4629      	mov	r1, r5
 800a8f8:	689b      	ldr	r3, [r3, #8]
 800a8fa:	4620      	mov	r0, r4
 800a8fc:	4798      	blx	r3
 800a8fe:	88eb      	ldrh	r3, [r5, #6]
 800a900:	2b00      	cmp	r3, #0
 800a902:	d1ec      	bne.n	800a8de <USBD_StdItfReq+0x22>
 800a904:	2800      	cmp	r0, #0
 800a906:	d1ea      	bne.n	800a8de <USBD_StdItfReq+0x22>
 800a908:	4620      	mov	r0, r4
 800a90a:	f000 f921 	bl	800ab50 <USBD_CtlSendStatus>
 800a90e:	e7e6      	b.n	800a8de <USBD_StdItfReq+0x22>
 800a910:	2180      	movs	r1, #128	; 0x80
 800a912:	4620      	mov	r0, r4
 800a914:	f000 fb96 	bl	800b044 <USBD_LL_StallEP>
 800a918:	2100      	movs	r1, #0
 800a91a:	4620      	mov	r0, r4
 800a91c:	f000 fb92 	bl	800b044 <USBD_LL_StallEP>
 800a920:	2000      	movs	r0, #0
 800a922:	bd38      	pop	{r3, r4, r5, pc}

0800a924 <USBD_StdEPReq>:
 800a924:	b538      	push	{r3, r4, r5, lr}
 800a926:	780b      	ldrb	r3, [r1, #0]
 800a928:	4604      	mov	r4, r0
 800a92a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a92e:	2b20      	cmp	r3, #32
 800a930:	d00c      	beq.n	800a94c <USBD_StdEPReq+0x28>
 800a932:	2b40      	cmp	r3, #64	; 0x40
 800a934:	d00a      	beq.n	800a94c <USBD_StdEPReq+0x28>
 800a936:	b183      	cbz	r3, 800a95a <USBD_StdEPReq+0x36>
 800a938:	2180      	movs	r1, #128	; 0x80
 800a93a:	4620      	mov	r0, r4
 800a93c:	f000 fb82 	bl	800b044 <USBD_LL_StallEP>
 800a940:	2100      	movs	r1, #0
 800a942:	4620      	mov	r0, r4
 800a944:	f000 fb7e 	bl	800b044 <USBD_LL_StallEP>
 800a948:	2000      	movs	r0, #0
 800a94a:	bd38      	pop	{r3, r4, r5, pc}
 800a94c:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a950:	4620      	mov	r0, r4
 800a952:	689b      	ldr	r3, [r3, #8]
 800a954:	4798      	blx	r3
 800a956:	2000      	movs	r0, #0
 800a958:	bd38      	pop	{r3, r4, r5, pc}
 800a95a:	784b      	ldrb	r3, [r1, #1]
 800a95c:	888a      	ldrh	r2, [r1, #4]
 800a95e:	2b01      	cmp	r3, #1
 800a960:	fa5f fc82 	uxtb.w	ip, r2
 800a964:	d03e      	beq.n	800a9e4 <USBD_StdEPReq+0xc0>
 800a966:	2b03      	cmp	r3, #3
 800a968:	d02a      	beq.n	800a9c0 <USBD_StdEPReq+0x9c>
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d1e4      	bne.n	800a938 <USBD_StdEPReq+0x14>
 800a96e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a972:	2b02      	cmp	r3, #2
 800a974:	d051      	beq.n	800aa1a <USBD_StdEPReq+0xf6>
 800a976:	2b03      	cmp	r3, #3
 800a978:	d1de      	bne.n	800a938 <USBD_StdEPReq+0x14>
 800a97a:	f00c 030f 	and.w	r3, ip, #15
 800a97e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a982:	0612      	lsls	r2, r2, #24
 800a984:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800a988:	d456      	bmi.n	800aa38 <USBD_StdEPReq+0x114>
 800a98a:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 800a98e:	2b00      	cmp	r3, #0
 800a990:	d0d2      	beq.n	800a938 <USBD_StdEPReq+0x14>
 800a992:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a996:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 800a99a:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a99e:	f505 75a0 	add.w	r5, r5, #320	; 0x140
 800a9a2:	b133      	cbz	r3, 800a9b2 <USBD_StdEPReq+0x8e>
 800a9a4:	4661      	mov	r1, ip
 800a9a6:	4620      	mov	r0, r4
 800a9a8:	f000 fb68 	bl	800b07c <USBD_LL_IsStallEP>
 800a9ac:	2800      	cmp	r0, #0
 800a9ae:	d04f      	beq.n	800aa50 <USBD_StdEPReq+0x12c>
 800a9b0:	2301      	movs	r3, #1
 800a9b2:	602b      	str	r3, [r5, #0]
 800a9b4:	2202      	movs	r2, #2
 800a9b6:	4629      	mov	r1, r5
 800a9b8:	4620      	mov	r0, r4
 800a9ba:	f000 f899 	bl	800aaf0 <USBD_CtlSendData>
 800a9be:	e7c3      	b.n	800a948 <USBD_StdEPReq+0x24>
 800a9c0:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a9c4:	2b02      	cmp	r3, #2
 800a9c6:	d01d      	beq.n	800aa04 <USBD_StdEPReq+0xe0>
 800a9c8:	2b03      	cmp	r3, #3
 800a9ca:	d1b5      	bne.n	800a938 <USBD_StdEPReq+0x14>
 800a9cc:	884b      	ldrh	r3, [r1, #2]
 800a9ce:	b92b      	cbnz	r3, 800a9dc <USBD_StdEPReq+0xb8>
 800a9d0:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a9d4:	d002      	beq.n	800a9dc <USBD_StdEPReq+0xb8>
 800a9d6:	88cb      	ldrh	r3, [r1, #6]
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d03b      	beq.n	800aa54 <USBD_StdEPReq+0x130>
 800a9dc:	4620      	mov	r0, r4
 800a9de:	f000 f8b7 	bl	800ab50 <USBD_CtlSendStatus>
 800a9e2:	e7b1      	b.n	800a948 <USBD_StdEPReq+0x24>
 800a9e4:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a9e8:	2b02      	cmp	r3, #2
 800a9ea:	d00b      	beq.n	800aa04 <USBD_StdEPReq+0xe0>
 800a9ec:	2b03      	cmp	r3, #3
 800a9ee:	d1a3      	bne.n	800a938 <USBD_StdEPReq+0x14>
 800a9f0:	884b      	ldrh	r3, [r1, #2]
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	d1a8      	bne.n	800a948 <USBD_StdEPReq+0x24>
 800a9f6:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a9fa:	d0ef      	beq.n	800a9dc <USBD_StdEPReq+0xb8>
 800a9fc:	4661      	mov	r1, ip
 800a9fe:	f000 fb2f 	bl	800b060 <USBD_LL_ClearStallEP>
 800aa02:	e7eb      	b.n	800a9dc <USBD_StdEPReq+0xb8>
 800aa04:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800aa08:	d096      	beq.n	800a938 <USBD_StdEPReq+0x14>
 800aa0a:	4661      	mov	r1, ip
 800aa0c:	f000 fb1a 	bl	800b044 <USBD_LL_StallEP>
 800aa10:	2180      	movs	r1, #128	; 0x80
 800aa12:	4620      	mov	r0, r4
 800aa14:	f000 fb16 	bl	800b044 <USBD_LL_StallEP>
 800aa18:	e796      	b.n	800a948 <USBD_StdEPReq+0x24>
 800aa1a:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800aa1e:	d18b      	bne.n	800a938 <USBD_StdEPReq+0x14>
 800aa20:	2300      	movs	r3, #0
 800aa22:	0611      	lsls	r1, r2, #24
 800aa24:	bf4c      	ite	mi
 800aa26:	f100 0114 	addmi.w	r1, r0, #20
 800aa2a:	f500 71a0 	addpl.w	r1, r0, #320	; 0x140
 800aa2e:	2202      	movs	r2, #2
 800aa30:	600b      	str	r3, [r1, #0]
 800aa32:	f000 f85d 	bl	800aaf0 <USBD_CtlSendData>
 800aa36:	e787      	b.n	800a948 <USBD_StdEPReq+0x24>
 800aa38:	699b      	ldr	r3, [r3, #24]
 800aa3a:	2b00      	cmp	r3, #0
 800aa3c:	f43f af7c 	beq.w	800a938 <USBD_StdEPReq+0x14>
 800aa40:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800aa44:	1c5d      	adds	r5, r3, #1
 800aa46:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800aa4a:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800aa4e:	e7a8      	b.n	800a9a2 <USBD_StdEPReq+0x7e>
 800aa50:	6028      	str	r0, [r5, #0]
 800aa52:	e7af      	b.n	800a9b4 <USBD_StdEPReq+0x90>
 800aa54:	4661      	mov	r1, ip
 800aa56:	f000 faf5 	bl	800b044 <USBD_LL_StallEP>
 800aa5a:	e7bf      	b.n	800a9dc <USBD_StdEPReq+0xb8>

0800aa5c <USBD_ParseSetupRequest>:
 800aa5c:	780b      	ldrb	r3, [r1, #0]
 800aa5e:	7003      	strb	r3, [r0, #0]
 800aa60:	784b      	ldrb	r3, [r1, #1]
 800aa62:	7043      	strb	r3, [r0, #1]
 800aa64:	78ca      	ldrb	r2, [r1, #3]
 800aa66:	788b      	ldrb	r3, [r1, #2]
 800aa68:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800aa6c:	8043      	strh	r3, [r0, #2]
 800aa6e:	794a      	ldrb	r2, [r1, #5]
 800aa70:	790b      	ldrb	r3, [r1, #4]
 800aa72:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800aa76:	8083      	strh	r3, [r0, #4]
 800aa78:	79ca      	ldrb	r2, [r1, #7]
 800aa7a:	798b      	ldrb	r3, [r1, #6]
 800aa7c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800aa80:	80c3      	strh	r3, [r0, #6]
 800aa82:	4770      	bx	lr

0800aa84 <USBD_CtlError>:
 800aa84:	b510      	push	{r4, lr}
 800aa86:	4604      	mov	r4, r0
 800aa88:	2180      	movs	r1, #128	; 0x80
 800aa8a:	f000 fadb 	bl	800b044 <USBD_LL_StallEP>
 800aa8e:	4620      	mov	r0, r4
 800aa90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aa94:	2100      	movs	r1, #0
 800aa96:	f000 bad5 	b.w	800b044 <USBD_LL_StallEP>
 800aa9a:	bf00      	nop

0800aa9c <USBD_GetString>:
 800aa9c:	b318      	cbz	r0, 800aae6 <USBD_GetString+0x4a>
 800aa9e:	7803      	ldrb	r3, [r0, #0]
 800aaa0:	b430      	push	{r4, r5}
 800aaa2:	b30b      	cbz	r3, 800aae8 <USBD_GetString+0x4c>
 800aaa4:	4604      	mov	r4, r0
 800aaa6:	f1c0 0c01 	rsb	ip, r0, #1
 800aaaa:	eb04 030c 	add.w	r3, r4, ip
 800aaae:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800aab2:	b2db      	uxtb	r3, r3
 800aab4:	2d00      	cmp	r5, #0
 800aab6:	d1f8      	bne.n	800aaaa <USBD_GetString+0xe>
 800aab8:	3301      	adds	r3, #1
 800aaba:	005b      	lsls	r3, r3, #1
 800aabc:	b2dc      	uxtb	r4, r3
 800aabe:	8013      	strh	r3, [r2, #0]
 800aac0:	2303      	movs	r3, #3
 800aac2:	700c      	strb	r4, [r1, #0]
 800aac4:	704b      	strb	r3, [r1, #1]
 800aac6:	7804      	ldrb	r4, [r0, #0]
 800aac8:	b15c      	cbz	r4, 800aae2 <USBD_GetString+0x46>
 800aaca:	2302      	movs	r3, #2
 800aacc:	2500      	movs	r5, #0
 800aace:	1c5a      	adds	r2, r3, #1
 800aad0:	b2d2      	uxtb	r2, r2
 800aad2:	54cc      	strb	r4, [r1, r3]
 800aad4:	548d      	strb	r5, [r1, r2]
 800aad6:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800aada:	3302      	adds	r3, #2
 800aadc:	b2db      	uxtb	r3, r3
 800aade:	2c00      	cmp	r4, #0
 800aae0:	d1f5      	bne.n	800aace <USBD_GetString+0x32>
 800aae2:	bc30      	pop	{r4, r5}
 800aae4:	4770      	bx	lr
 800aae6:	4770      	bx	lr
 800aae8:	2402      	movs	r4, #2
 800aaea:	4623      	mov	r3, r4
 800aaec:	e7e7      	b.n	800aabe <USBD_GetString+0x22>
 800aaee:	bf00      	nop

0800aaf0 <USBD_CtlSendData>:
 800aaf0:	b510      	push	{r4, lr}
 800aaf2:	4613      	mov	r3, r2
 800aaf4:	2402      	movs	r4, #2
 800aaf6:	460a      	mov	r2, r1
 800aaf8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800aafc:	2100      	movs	r1, #0
 800aafe:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800ab02:	f000 fadd 	bl	800b0c0 <USBD_LL_Transmit>
 800ab06:	2000      	movs	r0, #0
 800ab08:	bd10      	pop	{r4, pc}
 800ab0a:	bf00      	nop

0800ab0c <USBD_CtlContinueSendData>:
 800ab0c:	468c      	mov	ip, r1
 800ab0e:	b508      	push	{r3, lr}
 800ab10:	2100      	movs	r1, #0
 800ab12:	4613      	mov	r3, r2
 800ab14:	4662      	mov	r2, ip
 800ab16:	f000 fad3 	bl	800b0c0 <USBD_LL_Transmit>
 800ab1a:	2000      	movs	r0, #0
 800ab1c:	bd08      	pop	{r3, pc}
 800ab1e:	bf00      	nop

0800ab20 <USBD_CtlPrepareRx>:
 800ab20:	b510      	push	{r4, lr}
 800ab22:	4613      	mov	r3, r2
 800ab24:	2403      	movs	r4, #3
 800ab26:	460a      	mov	r2, r1
 800ab28:	e9c0 3352 	strd	r3, r3, [r0, #328]	; 0x148
 800ab2c:	2100      	movs	r1, #0
 800ab2e:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800ab32:	f000 fad3 	bl	800b0dc <USBD_LL_PrepareReceive>
 800ab36:	2000      	movs	r0, #0
 800ab38:	bd10      	pop	{r4, pc}
 800ab3a:	bf00      	nop

0800ab3c <USBD_CtlContinueRx>:
 800ab3c:	468c      	mov	ip, r1
 800ab3e:	b508      	push	{r3, lr}
 800ab40:	2100      	movs	r1, #0
 800ab42:	4613      	mov	r3, r2
 800ab44:	4662      	mov	r2, ip
 800ab46:	f000 fac9 	bl	800b0dc <USBD_LL_PrepareReceive>
 800ab4a:	2000      	movs	r0, #0
 800ab4c:	bd08      	pop	{r3, pc}
 800ab4e:	bf00      	nop

0800ab50 <USBD_CtlSendStatus>:
 800ab50:	b508      	push	{r3, lr}
 800ab52:	2104      	movs	r1, #4
 800ab54:	2300      	movs	r3, #0
 800ab56:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800ab5a:	461a      	mov	r2, r3
 800ab5c:	4619      	mov	r1, r3
 800ab5e:	f000 faaf 	bl	800b0c0 <USBD_LL_Transmit>
 800ab62:	2000      	movs	r0, #0
 800ab64:	bd08      	pop	{r3, pc}
 800ab66:	bf00      	nop

0800ab68 <USBD_CtlReceiveStatus>:
 800ab68:	b508      	push	{r3, lr}
 800ab6a:	2105      	movs	r1, #5
 800ab6c:	2300      	movs	r3, #0
 800ab6e:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800ab72:	461a      	mov	r2, r3
 800ab74:	4619      	mov	r1, r3
 800ab76:	f000 fab1 	bl	800b0dc <USBD_LL_PrepareReceive>
 800ab7a:	2000      	movs	r0, #0
 800ab7c:	bd08      	pop	{r3, pc}
 800ab7e:	bf00      	nop

0800ab80 <MX_USB_DEVICE_Init>:
 800ab80:	b508      	push	{r3, lr}
 800ab82:	2200      	movs	r2, #0
 800ab84:	4917      	ldr	r1, [pc, #92]	; (800abe4 <MX_USB_DEVICE_Init+0x64>)
 800ab86:	4818      	ldr	r0, [pc, #96]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800ab88:	f7ff fbc8 	bl	800a31c <USBD_Init>
 800ab8c:	b970      	cbnz	r0, 800abac <MX_USB_DEVICE_Init+0x2c>
 800ab8e:	4917      	ldr	r1, [pc, #92]	; (800abec <MX_USB_DEVICE_Init+0x6c>)
 800ab90:	4815      	ldr	r0, [pc, #84]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800ab92:	f7ff fbd9 	bl	800a348 <USBD_RegisterClass>
 800ab96:	b988      	cbnz	r0, 800abbc <MX_USB_DEVICE_Init+0x3c>
 800ab98:	4915      	ldr	r1, [pc, #84]	; (800abf0 <MX_USB_DEVICE_Init+0x70>)
 800ab9a:	4813      	ldr	r0, [pc, #76]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800ab9c:	f7ff fb6e 	bl	800a27c <USBD_CDC_RegisterInterface>
 800aba0:	b9a0      	cbnz	r0, 800abcc <MX_USB_DEVICE_Init+0x4c>
 800aba2:	4811      	ldr	r0, [pc, #68]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800aba4:	f7ff fbd8 	bl	800a358 <USBD_Start>
 800aba8:	b9b8      	cbnz	r0, 800abda <MX_USB_DEVICE_Init+0x5a>
 800abaa:	bd08      	pop	{r3, pc}
 800abac:	f7fa fc0c 	bl	80053c8 <Error_Handler>
 800abb0:	490e      	ldr	r1, [pc, #56]	; (800abec <MX_USB_DEVICE_Init+0x6c>)
 800abb2:	480d      	ldr	r0, [pc, #52]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800abb4:	f7ff fbc8 	bl	800a348 <USBD_RegisterClass>
 800abb8:	2800      	cmp	r0, #0
 800abba:	d0ed      	beq.n	800ab98 <MX_USB_DEVICE_Init+0x18>
 800abbc:	f7fa fc04 	bl	80053c8 <Error_Handler>
 800abc0:	490b      	ldr	r1, [pc, #44]	; (800abf0 <MX_USB_DEVICE_Init+0x70>)
 800abc2:	4809      	ldr	r0, [pc, #36]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800abc4:	f7ff fb5a 	bl	800a27c <USBD_CDC_RegisterInterface>
 800abc8:	2800      	cmp	r0, #0
 800abca:	d0ea      	beq.n	800aba2 <MX_USB_DEVICE_Init+0x22>
 800abcc:	f7fa fbfc 	bl	80053c8 <Error_Handler>
 800abd0:	4805      	ldr	r0, [pc, #20]	; (800abe8 <MX_USB_DEVICE_Init+0x68>)
 800abd2:	f7ff fbc1 	bl	800a358 <USBD_Start>
 800abd6:	2800      	cmp	r0, #0
 800abd8:	d0e7      	beq.n	800abaa <MX_USB_DEVICE_Init+0x2a>
 800abda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800abde:	f7fa bbf3 	b.w	80053c8 <Error_Handler>
 800abe2:	bf00      	nop
 800abe4:	20000154 	.word	0x20000154
 800abe8:	20000b64 	.word	0x20000b64
 800abec:	20000034 	.word	0x20000034
 800abf0:	20000144 	.word	0x20000144

0800abf4 <CDC_DeInit_FS>:
 800abf4:	2000      	movs	r0, #0
 800abf6:	4770      	bx	lr

0800abf8 <CDC_Init_FS>:
 800abf8:	b510      	push	{r4, lr}
 800abfa:	4c06      	ldr	r4, [pc, #24]	; (800ac14 <CDC_Init_FS+0x1c>)
 800abfc:	2200      	movs	r2, #0
 800abfe:	4620      	mov	r0, r4
 800ac00:	4905      	ldr	r1, [pc, #20]	; (800ac18 <CDC_Init_FS+0x20>)
 800ac02:	f7ff fb43 	bl	800a28c <USBD_CDC_SetTxBuffer>
 800ac06:	4620      	mov	r0, r4
 800ac08:	4904      	ldr	r1, [pc, #16]	; (800ac1c <CDC_Init_FS+0x24>)
 800ac0a:	f7ff fb49 	bl	800a2a0 <USBD_CDC_SetRxBuffer>
 800ac0e:	2000      	movs	r0, #0
 800ac10:	bd10      	pop	{r4, pc}
 800ac12:	bf00      	nop
 800ac14:	20000b64 	.word	0x20000b64
 800ac18:	20000e80 	.word	0x20000e80
 800ac1c:	20000e00 	.word	0x20000e00

0800ac20 <CDC_Control_FS>:
 800ac20:	2821      	cmp	r0, #33	; 0x21
 800ac22:	d106      	bne.n	800ac32 <CDC_Control_FS+0x12>
 800ac24:	2300      	movs	r3, #0
 800ac26:	2208      	movs	r2, #8
 800ac28:	4803      	ldr	r0, [pc, #12]	; (800ac38 <CDC_Control_FS+0x18>)
 800ac2a:	710b      	strb	r3, [r1, #4]
 800ac2c:	6008      	str	r0, [r1, #0]
 800ac2e:	714b      	strb	r3, [r1, #5]
 800ac30:	718a      	strb	r2, [r1, #6]
 800ac32:	2000      	movs	r0, #0
 800ac34:	4770      	bx	lr
 800ac36:	bf00      	nop
 800ac38:	0001c220 	.word	0x0001c220

0800ac3c <CDC_Receive_FS>:
 800ac3c:	680a      	ldr	r2, [r1, #0]
 800ac3e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ac42:	4605      	mov	r5, r0
 800ac44:	b1d2      	cbz	r2, 800ac7c <CDC_Receive_FS+0x40>
 800ac46:	460e      	mov	r6, r1
 800ac48:	f04f 0801 	mov.w	r8, #1
 800ac4c:	4f17      	ldr	r7, [pc, #92]	; (800acac <CDC_Receive_FS+0x70>)
 800ac4e:	f100 39ff 	add.w	r9, r0, #4294967295
 800ac52:	e008      	b.n	800ac66 <CDC_Receive_FS+0x2a>
 800ac54:	280d      	cmp	r0, #13
 800ac56:	d00b      	beq.n	800ac70 <CDC_Receive_FS+0x34>
 800ac58:	f7fa fb9e 	bl	8005398 <Write_to_circ_buffer>
 800ac5c:	3402      	adds	r4, #2
 800ac5e:	6832      	ldr	r2, [r6, #0]
 800ac60:	1b64      	subs	r4, r4, r5
 800ac62:	42a2      	cmp	r2, r4
 800ac64:	d909      	bls.n	800ac7a <CDC_Receive_FS+0x3e>
 800ac66:	464c      	mov	r4, r9
 800ac68:	f819 0f01 	ldrb.w	r0, [r9, #1]!
 800ac6c:	280a      	cmp	r0, #10
 800ac6e:	d1f1      	bne.n	800ac54 <CDC_Receive_FS+0x18>
 800ac70:	f887 8000 	strb.w	r8, [r7]
 800ac74:	f899 0000 	ldrb.w	r0, [r9]
 800ac78:	e7ee      	b.n	800ac58 <CDC_Receive_FS+0x1c>
 800ac7a:	b292      	uxth	r2, r2
 800ac7c:	4c0c      	ldr	r4, [pc, #48]	; (800acb0 <CDC_Receive_FS+0x74>)
 800ac7e:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800ac82:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800ac86:	b933      	cbnz	r3, 800ac96 <CDC_Receive_FS+0x5a>
 800ac88:	4629      	mov	r1, r5
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	f7ff fafe 	bl	800a28c <USBD_CDC_SetTxBuffer>
 800ac90:	4620      	mov	r0, r4
 800ac92:	f7ff fb0d 	bl	800a2b0 <USBD_CDC_TransmitPacket>
 800ac96:	4629      	mov	r1, r5
 800ac98:	4805      	ldr	r0, [pc, #20]	; (800acb0 <CDC_Receive_FS+0x74>)
 800ac9a:	f7ff fb01 	bl	800a2a0 <USBD_CDC_SetRxBuffer>
 800ac9e:	4804      	ldr	r0, [pc, #16]	; (800acb0 <CDC_Receive_FS+0x74>)
 800aca0:	f7ff fb20 	bl	800a2e4 <USBD_CDC_ReceivePacket>
 800aca4:	2000      	movs	r0, #0
 800aca6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800acaa:	bf00      	nop
 800acac:	20000854 	.word	0x20000854
 800acb0:	20000b64 	.word	0x20000b64

0800acb4 <CDC_Transmit_FS>:
 800acb4:	b510      	push	{r4, lr}
 800acb6:	4c09      	ldr	r4, [pc, #36]	; (800acdc <CDC_Transmit_FS+0x28>)
 800acb8:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800acbc:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800acc0:	b10b      	cbz	r3, 800acc6 <CDC_Transmit_FS+0x12>
 800acc2:	2001      	movs	r0, #1
 800acc4:	bd10      	pop	{r4, pc}
 800acc6:	460a      	mov	r2, r1
 800acc8:	4601      	mov	r1, r0
 800acca:	4620      	mov	r0, r4
 800accc:	f7ff fade 	bl	800a28c <USBD_CDC_SetTxBuffer>
 800acd0:	4620      	mov	r0, r4
 800acd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800acd6:	f7ff baeb 	b.w	800a2b0 <USBD_CDC_TransmitPacket>
 800acda:	bf00      	nop
 800acdc:	20000b64 	.word	0x20000b64

0800ace0 <USBD_FS_DeviceDescriptor>:
 800ace0:	2312      	movs	r3, #18
 800ace2:	4801      	ldr	r0, [pc, #4]	; (800ace8 <USBD_FS_DeviceDescriptor+0x8>)
 800ace4:	800b      	strh	r3, [r1, #0]
 800ace6:	4770      	bx	lr
 800ace8:	20000170 	.word	0x20000170

0800acec <USBD_FS_LangIDStrDescriptor>:
 800acec:	2304      	movs	r3, #4
 800acee:	4801      	ldr	r0, [pc, #4]	; (800acf4 <USBD_FS_LangIDStrDescriptor+0x8>)
 800acf0:	800b      	strh	r3, [r1, #0]
 800acf2:	4770      	bx	lr
 800acf4:	20000184 	.word	0x20000184

0800acf8 <USBD_FS_ManufacturerStrDescriptor>:
 800acf8:	b510      	push	{r4, lr}
 800acfa:	4c04      	ldr	r4, [pc, #16]	; (800ad0c <USBD_FS_ManufacturerStrDescriptor+0x14>)
 800acfc:	460a      	mov	r2, r1
 800acfe:	4804      	ldr	r0, [pc, #16]	; (800ad10 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 800ad00:	4621      	mov	r1, r4
 800ad02:	f7ff fecb 	bl	800aa9c <USBD_GetString>
 800ad06:	4620      	mov	r0, r4
 800ad08:	bd10      	pop	{r4, pc}
 800ad0a:	bf00      	nop
 800ad0c:	20000f80 	.word	0x20000f80
 800ad10:	080111e8 	.word	0x080111e8

0800ad14 <USBD_FS_ProductStrDescriptor>:
 800ad14:	b510      	push	{r4, lr}
 800ad16:	4c04      	ldr	r4, [pc, #16]	; (800ad28 <USBD_FS_ProductStrDescriptor+0x14>)
 800ad18:	460a      	mov	r2, r1
 800ad1a:	4804      	ldr	r0, [pc, #16]	; (800ad2c <USBD_FS_ProductStrDescriptor+0x18>)
 800ad1c:	4621      	mov	r1, r4
 800ad1e:	f7ff febd 	bl	800aa9c <USBD_GetString>
 800ad22:	4620      	mov	r0, r4
 800ad24:	bd10      	pop	{r4, pc}
 800ad26:	bf00      	nop
 800ad28:	20000f80 	.word	0x20000f80
 800ad2c:	080111f8 	.word	0x080111f8

0800ad30 <USBD_FS_ConfigStrDescriptor>:
 800ad30:	b510      	push	{r4, lr}
 800ad32:	4c04      	ldr	r4, [pc, #16]	; (800ad44 <USBD_FS_ConfigStrDescriptor+0x14>)
 800ad34:	460a      	mov	r2, r1
 800ad36:	4804      	ldr	r0, [pc, #16]	; (800ad48 <USBD_FS_ConfigStrDescriptor+0x18>)
 800ad38:	4621      	mov	r1, r4
 800ad3a:	f7ff feaf 	bl	800aa9c <USBD_GetString>
 800ad3e:	4620      	mov	r0, r4
 800ad40:	bd10      	pop	{r4, pc}
 800ad42:	bf00      	nop
 800ad44:	20000f80 	.word	0x20000f80
 800ad48:	08011204 	.word	0x08011204

0800ad4c <USBD_FS_InterfaceStrDescriptor>:
 800ad4c:	b510      	push	{r4, lr}
 800ad4e:	4c04      	ldr	r4, [pc, #16]	; (800ad60 <USBD_FS_InterfaceStrDescriptor+0x14>)
 800ad50:	460a      	mov	r2, r1
 800ad52:	4804      	ldr	r0, [pc, #16]	; (800ad64 <USBD_FS_InterfaceStrDescriptor+0x18>)
 800ad54:	4621      	mov	r1, r4
 800ad56:	f7ff fea1 	bl	800aa9c <USBD_GetString>
 800ad5a:	4620      	mov	r0, r4
 800ad5c:	bd10      	pop	{r4, pc}
 800ad5e:	bf00      	nop
 800ad60:	20000f80 	.word	0x20000f80
 800ad64:	08011210 	.word	0x08011210

0800ad68 <USBD_FS_SerialStrDescriptor>:
 800ad68:	f04f 0c1a 	mov.w	ip, #26
 800ad6c:	4a42      	ldr	r2, [pc, #264]	; (800ae78 <USBD_FS_SerialStrDescriptor+0x110>)
 800ad6e:	6d10      	ldr	r0, [r2, #80]	; 0x50
 800ad70:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800ad72:	f8a1 c000 	strh.w	ip, [r1]
 800ad76:	18c3      	adds	r3, r0, r3
 800ad78:	d101      	bne.n	800ad7e <USBD_FS_SerialStrDescriptor+0x16>
 800ad7a:	4840      	ldr	r0, [pc, #256]	; (800ae7c <USBD_FS_SerialStrDescriptor+0x114>)
 800ad7c:	4770      	bx	lr
 800ad7e:	f04f 0c00 	mov.w	ip, #0
 800ad82:	6d51      	ldr	r1, [r2, #84]	; 0x54
 800ad84:	0f18      	lsrs	r0, r3, #28
 800ad86:	4a3d      	ldr	r2, [pc, #244]	; (800ae7c <USBD_FS_SerialStrDescriptor+0x114>)
 800ad88:	f1b3 4f20 	cmp.w	r3, #2684354560	; 0xa0000000
 800ad8c:	bf2c      	ite	cs
 800ad8e:	3037      	addcs	r0, #55	; 0x37
 800ad90:	3030      	addcc	r0, #48	; 0x30
 800ad92:	7090      	strb	r0, [r2, #2]
 800ad94:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800ad98:	2809      	cmp	r0, #9
 800ad9a:	bf8c      	ite	hi
 800ad9c:	3037      	addhi	r0, #55	; 0x37
 800ad9e:	3030      	addls	r0, #48	; 0x30
 800ada0:	7110      	strb	r0, [r2, #4]
 800ada2:	f3c3 5003 	ubfx	r0, r3, #20, #4
 800ada6:	2809      	cmp	r0, #9
 800ada8:	bf8c      	ite	hi
 800adaa:	3037      	addhi	r0, #55	; 0x37
 800adac:	3030      	addls	r0, #48	; 0x30
 800adae:	7190      	strb	r0, [r2, #6]
 800adb0:	f3c3 4003 	ubfx	r0, r3, #16, #4
 800adb4:	2809      	cmp	r0, #9
 800adb6:	bf8c      	ite	hi
 800adb8:	3037      	addhi	r0, #55	; 0x37
 800adba:	3030      	addls	r0, #48	; 0x30
 800adbc:	7210      	strb	r0, [r2, #8]
 800adbe:	f3c3 3003 	ubfx	r0, r3, #12, #4
 800adc2:	2809      	cmp	r0, #9
 800adc4:	bf8c      	ite	hi
 800adc6:	3037      	addhi	r0, #55	; 0x37
 800adc8:	3030      	addls	r0, #48	; 0x30
 800adca:	7290      	strb	r0, [r2, #10]
 800adcc:	f3c3 2003 	ubfx	r0, r3, #8, #4
 800add0:	2809      	cmp	r0, #9
 800add2:	bf8c      	ite	hi
 800add4:	3037      	addhi	r0, #55	; 0x37
 800add6:	3030      	addls	r0, #48	; 0x30
 800add8:	7310      	strb	r0, [r2, #12]
 800adda:	f3c3 1003 	ubfx	r0, r3, #4, #4
 800adde:	2809      	cmp	r0, #9
 800ade0:	bf8c      	ite	hi
 800ade2:	3037      	addhi	r0, #55	; 0x37
 800ade4:	3030      	addls	r0, #48	; 0x30
 800ade6:	f882 c003 	strb.w	ip, [r2, #3]
 800adea:	7390      	strb	r0, [r2, #14]
 800adec:	f04f 0c00 	mov.w	ip, #0
 800adf0:	2000      	movs	r0, #0
 800adf2:	f882 c005 	strb.w	ip, [r2, #5]
 800adf6:	73d0      	strb	r0, [r2, #15]
 800adf8:	f04f 0c00 	mov.w	ip, #0
 800adfc:	2000      	movs	r0, #0
 800adfe:	f882 c007 	strb.w	ip, [r2, #7]
 800ae02:	7450      	strb	r0, [r2, #17]
 800ae04:	f04f 0c00 	mov.w	ip, #0
 800ae08:	2000      	movs	r0, #0
 800ae0a:	f882 c009 	strb.w	ip, [r2, #9]
 800ae0e:	74d0      	strb	r0, [r2, #19]
 800ae10:	f04f 0c00 	mov.w	ip, #0
 800ae14:	2000      	movs	r0, #0
 800ae16:	f003 030f 	and.w	r3, r3, #15
 800ae1a:	2b09      	cmp	r3, #9
 800ae1c:	bf94      	ite	ls
 800ae1e:	3330      	addls	r3, #48	; 0x30
 800ae20:	3337      	addhi	r3, #55	; 0x37
 800ae22:	7413      	strb	r3, [r2, #16]
 800ae24:	f1b1 4f20 	cmp.w	r1, #2684354560	; 0xa0000000
 800ae28:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800ae2c:	bf2c      	ite	cs
 800ae2e:	3337      	addcs	r3, #55	; 0x37
 800ae30:	3330      	addcc	r3, #48	; 0x30
 800ae32:	7493      	strb	r3, [r2, #18]
 800ae34:	f3c1 6303 	ubfx	r3, r1, #24, #4
 800ae38:	2b09      	cmp	r3, #9
 800ae3a:	bf8c      	ite	hi
 800ae3c:	3337      	addhi	r3, #55	; 0x37
 800ae3e:	3330      	addls	r3, #48	; 0x30
 800ae40:	7513      	strb	r3, [r2, #20]
 800ae42:	f3c1 5303 	ubfx	r3, r1, #20, #4
 800ae46:	2b09      	cmp	r3, #9
 800ae48:	bf8c      	ite	hi
 800ae4a:	3337      	addhi	r3, #55	; 0x37
 800ae4c:	3330      	addls	r3, #48	; 0x30
 800ae4e:	7593      	strb	r3, [r2, #22]
 800ae50:	f3c1 4303 	ubfx	r3, r1, #16, #4
 800ae54:	2b09      	cmp	r3, #9
 800ae56:	bf94      	ite	ls
 800ae58:	3330      	addls	r3, #48	; 0x30
 800ae5a:	3337      	addhi	r3, #55	; 0x37
 800ae5c:	f882 c00b 	strb.w	ip, [r2, #11]
 800ae60:	7550      	strb	r0, [r2, #21]
 800ae62:	f04f 0c00 	mov.w	ip, #0
 800ae66:	2000      	movs	r0, #0
 800ae68:	7613      	strb	r3, [r2, #24]
 800ae6a:	2300      	movs	r3, #0
 800ae6c:	75d0      	strb	r0, [r2, #23]
 800ae6e:	f882 c00d 	strb.w	ip, [r2, #13]
 800ae72:	4802      	ldr	r0, [pc, #8]	; (800ae7c <USBD_FS_SerialStrDescriptor+0x114>)
 800ae74:	7653      	strb	r3, [r2, #25]
 800ae76:	4770      	bx	lr
 800ae78:	1ff80000 	.word	0x1ff80000
 800ae7c:	20000188 	.word	0x20000188

0800ae80 <HAL_PCDEx_SetConnectionState>:
 800ae80:	4a04      	ldr	r2, [pc, #16]	; (800ae94 <HAL_PCDEx_SetConnectionState+0x14>)
 800ae82:	2901      	cmp	r1, #1
 800ae84:	6853      	ldr	r3, [r2, #4]
 800ae86:	bf0c      	ite	eq
 800ae88:	f043 0301 	orreq.w	r3, r3, #1
 800ae8c:	f023 0301 	bicne.w	r3, r3, #1
 800ae90:	6053      	str	r3, [r2, #4]
 800ae92:	4770      	bx	lr
 800ae94:	40010000 	.word	0x40010000

0800ae98 <HAL_PCD_MspInit>:
 800ae98:	4b0e      	ldr	r3, [pc, #56]	; (800aed4 <HAL_PCD_MspInit+0x3c>)
 800ae9a:	6802      	ldr	r2, [r0, #0]
 800ae9c:	429a      	cmp	r2, r3
 800ae9e:	d000      	beq.n	800aea2 <HAL_PCD_MspInit+0xa>
 800aea0:	4770      	bx	lr
 800aea2:	f503 33ee 	add.w	r3, r3, #121856	; 0x1dc00
 800aea6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800aea8:	b500      	push	{lr}
 800aeaa:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800aeae:	6259      	str	r1, [r3, #36]	; 0x24
 800aeb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aeb2:	b083      	sub	sp, #12
 800aeb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800aeb8:	9301      	str	r3, [sp, #4]
 800aeba:	2014      	movs	r0, #20
 800aebc:	2200      	movs	r2, #0
 800aebe:	2101      	movs	r1, #1
 800aec0:	9b01      	ldr	r3, [sp, #4]
 800aec2:	f7fa ff8b 	bl	8005ddc <HAL_NVIC_SetPriority>
 800aec6:	2014      	movs	r0, #20
 800aec8:	b003      	add	sp, #12
 800aeca:	f85d eb04 	ldr.w	lr, [sp], #4
 800aece:	f7fa bfc3 	b.w	8005e58 <HAL_NVIC_EnableIRQ>
 800aed2:	bf00      	nop
 800aed4:	40005c00 	.word	0x40005c00

0800aed8 <HAL_PCD_SetupStageCallback>:
 800aed8:	4601      	mov	r1, r0
 800aeda:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aede:	f501 712c 	add.w	r1, r1, #688	; 0x2b0
 800aee2:	f7ff ba51 	b.w	800a388 <USBD_LL_SetupStage>
 800aee6:	bf00      	nop

0800aee8 <HAL_PCD_DataOutStageCallback>:
 800aee8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800aeec:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800aef0:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800aef4:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800aef8:	f7ff ba76 	b.w	800a3e8 <USBD_LL_DataOutStage>

0800aefc <HAL_PCD_DataInStageCallback>:
 800aefc:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800af00:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800af04:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800af06:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800af0a:	f7ff baab 	b.w	800a464 <USBD_LL_DataInStage>
 800af0e:	bf00      	nop

0800af10 <HAL_PCD_SOFCallback>:
 800af10:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800af14:	f7ff bb4a 	b.w	800a5ac <USBD_LL_SOF>

0800af18 <HAL_PCD_ResetCallback>:
 800af18:	6883      	ldr	r3, [r0, #8]
 800af1a:	b510      	push	{r4, lr}
 800af1c:	2b02      	cmp	r3, #2
 800af1e:	4604      	mov	r4, r0
 800af20:	d001      	beq.n	800af26 <HAL_PCD_ResetCallback+0xe>
 800af22:	f7fa fa51 	bl	80053c8 <Error_Handler>
 800af26:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800af2a:	2101      	movs	r1, #1
 800af2c:	f7ff fb28 	bl	800a580 <USBD_LL_SetSpeed>
 800af30:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800af34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af38:	f7ff bafa 	b.w	800a530 <USBD_LL_Reset>

0800af3c <HAL_PCD_SuspendCallback>:
 800af3c:	b510      	push	{r4, lr}
 800af3e:	4604      	mov	r4, r0
 800af40:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800af44:	f7ff fb20 	bl	800a588 <USBD_LL_Suspend>
 800af48:	69a3      	ldr	r3, [r4, #24]
 800af4a:	b123      	cbz	r3, 800af56 <HAL_PCD_SuspendCallback+0x1a>
 800af4c:	4a02      	ldr	r2, [pc, #8]	; (800af58 <HAL_PCD_SuspendCallback+0x1c>)
 800af4e:	6913      	ldr	r3, [r2, #16]
 800af50:	f043 0306 	orr.w	r3, r3, #6
 800af54:	6113      	str	r3, [r2, #16]
 800af56:	bd10      	pop	{r4, pc}
 800af58:	e000ed00 	.word	0xe000ed00

0800af5c <HAL_PCD_ResumeCallback>:
 800af5c:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800af60:	f7ff bb1c 	b.w	800a59c <USBD_LL_Resume>

0800af64 <USBD_LL_Init>:
 800af64:	b510      	push	{r4, lr}
 800af66:	2408      	movs	r4, #8
 800af68:	4b1e      	ldr	r3, [pc, #120]	; (800afe4 <USBD_LL_Init+0x80>)
 800af6a:	2200      	movs	r2, #0
 800af6c:	605c      	str	r4, [r3, #4]
 800af6e:	4604      	mov	r4, r0
 800af70:	2102      	movs	r1, #2
 800af72:	619a      	str	r2, [r3, #24]
 800af74:	621a      	str	r2, [r3, #32]
 800af76:	4a1c      	ldr	r2, [pc, #112]	; (800afe8 <USBD_LL_Init+0x84>)
 800af78:	f8c3 42e8 	str.w	r4, [r3, #744]	; 0x2e8
 800af7c:	4618      	mov	r0, r3
 800af7e:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800af82:	6099      	str	r1, [r3, #8]
 800af84:	6119      	str	r1, [r3, #16]
 800af86:	601a      	str	r2, [r3, #0]
 800af88:	f7fb ff36 	bl	8006df8 <HAL_PCD_Init>
 800af8c:	bb30      	cbnz	r0, 800afdc <USBD_LL_Init+0x78>
 800af8e:	2200      	movs	r2, #0
 800af90:	2318      	movs	r3, #24
 800af92:	4611      	mov	r1, r2
 800af94:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800af98:	f7fc fe2e 	bl	8007bf8 <HAL_PCDEx_PMAConfig>
 800af9c:	2358      	movs	r3, #88	; 0x58
 800af9e:	2200      	movs	r2, #0
 800afa0:	2180      	movs	r1, #128	; 0x80
 800afa2:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800afa6:	f7fc fe27 	bl	8007bf8 <HAL_PCDEx_PMAConfig>
 800afaa:	23c0      	movs	r3, #192	; 0xc0
 800afac:	2200      	movs	r2, #0
 800afae:	2181      	movs	r1, #129	; 0x81
 800afb0:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800afb4:	f7fc fe20 	bl	8007bf8 <HAL_PCDEx_PMAConfig>
 800afb8:	f44f 7388 	mov.w	r3, #272	; 0x110
 800afbc:	2200      	movs	r2, #0
 800afbe:	2101      	movs	r1, #1
 800afc0:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800afc4:	f7fc fe18 	bl	8007bf8 <HAL_PCDEx_PMAConfig>
 800afc8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800afcc:	2200      	movs	r2, #0
 800afce:	2182      	movs	r1, #130	; 0x82
 800afd0:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800afd4:	f7fc fe10 	bl	8007bf8 <HAL_PCDEx_PMAConfig>
 800afd8:	2000      	movs	r0, #0
 800afda:	bd10      	pop	{r4, pc}
 800afdc:	f7fa f9f4 	bl	80053c8 <Error_Handler>
 800afe0:	e7d5      	b.n	800af8e <USBD_LL_Init+0x2a>
 800afe2:	bf00      	nop
 800afe4:	20001180 	.word	0x20001180
 800afe8:	40005c00 	.word	0x40005c00

0800afec <USBD_LL_Start>:
 800afec:	b508      	push	{r3, lr}
 800afee:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800aff2:	f7fb ff63 	bl	8006ebc <HAL_PCD_Start>
 800aff6:	2803      	cmp	r0, #3
 800aff8:	bf96      	itet	ls
 800affa:	4b02      	ldrls	r3, [pc, #8]	; (800b004 <USBD_LL_Start+0x18>)
 800affc:	2002      	movhi	r0, #2
 800affe:	5c18      	ldrbls	r0, [r3, r0]
 800b000:	bd08      	pop	{r3, pc}
 800b002:	bf00      	nop
 800b004:	08011220 	.word	0x08011220

0800b008 <USBD_LL_OpenEP>:
 800b008:	4694      	mov	ip, r2
 800b00a:	b508      	push	{r3, lr}
 800b00c:	461a      	mov	r2, r3
 800b00e:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b012:	4663      	mov	r3, ip
 800b014:	f7fc fcc6 	bl	80079a4 <HAL_PCD_EP_Open>
 800b018:	2803      	cmp	r0, #3
 800b01a:	bf96      	itet	ls
 800b01c:	4b01      	ldrls	r3, [pc, #4]	; (800b024 <USBD_LL_OpenEP+0x1c>)
 800b01e:	2002      	movhi	r0, #2
 800b020:	5c18      	ldrbls	r0, [r3, r0]
 800b022:	bd08      	pop	{r3, pc}
 800b024:	08011220 	.word	0x08011220

0800b028 <USBD_LL_CloseEP>:
 800b028:	b508      	push	{r3, lr}
 800b02a:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b02e:	f7fc fcf7 	bl	8007a20 <HAL_PCD_EP_Close>
 800b032:	2803      	cmp	r0, #3
 800b034:	bf96      	itet	ls
 800b036:	4b02      	ldrls	r3, [pc, #8]	; (800b040 <USBD_LL_CloseEP+0x18>)
 800b038:	2002      	movhi	r0, #2
 800b03a:	5c18      	ldrbls	r0, [r3, r0]
 800b03c:	bd08      	pop	{r3, pc}
 800b03e:	bf00      	nop
 800b040:	08011220 	.word	0x08011220

0800b044 <USBD_LL_StallEP>:
 800b044:	b508      	push	{r3, lr}
 800b046:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b04a:	f7fc fd61 	bl	8007b10 <HAL_PCD_EP_SetStall>
 800b04e:	2803      	cmp	r0, #3
 800b050:	bf96      	itet	ls
 800b052:	4b02      	ldrls	r3, [pc, #8]	; (800b05c <USBD_LL_StallEP+0x18>)
 800b054:	2002      	movhi	r0, #2
 800b056:	5c18      	ldrbls	r0, [r3, r0]
 800b058:	bd08      	pop	{r3, pc}
 800b05a:	bf00      	nop
 800b05c:	08011220 	.word	0x08011220

0800b060 <USBD_LL_ClearStallEP>:
 800b060:	b508      	push	{r3, lr}
 800b062:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b066:	f7fc fd8b 	bl	8007b80 <HAL_PCD_EP_ClrStall>
 800b06a:	2803      	cmp	r0, #3
 800b06c:	bf96      	itet	ls
 800b06e:	4b02      	ldrls	r3, [pc, #8]	; (800b078 <USBD_LL_ClearStallEP+0x18>)
 800b070:	2002      	movhi	r0, #2
 800b072:	5c18      	ldrbls	r0, [r3, r0]
 800b074:	bd08      	pop	{r3, pc}
 800b076:	bf00      	nop
 800b078:	08011220 	.word	0x08011220

0800b07c <USBD_LL_IsStallEP>:
 800b07c:	060a      	lsls	r2, r1, #24
 800b07e:	f8d0 3298 	ldr.w	r3, [r0, #664]	; 0x298
 800b082:	d406      	bmi.n	800b092 <USBD_LL_IsStallEP+0x16>
 800b084:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800b088:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800b08c:	f891 016a 	ldrb.w	r0, [r1, #362]	; 0x16a
 800b090:	4770      	bx	lr
 800b092:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800b096:	3101      	adds	r1, #1
 800b098:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800b09c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800b0a0:	7888      	ldrb	r0, [r1, #2]
 800b0a2:	4770      	bx	lr

0800b0a4 <USBD_LL_SetUSBAddress>:
 800b0a4:	b508      	push	{r3, lr}
 800b0a6:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b0aa:	f7fc fc65 	bl	8007978 <HAL_PCD_SetAddress>
 800b0ae:	2803      	cmp	r0, #3
 800b0b0:	bf96      	itet	ls
 800b0b2:	4b02      	ldrls	r3, [pc, #8]	; (800b0bc <USBD_LL_SetUSBAddress+0x18>)
 800b0b4:	2002      	movhi	r0, #2
 800b0b6:	5c18      	ldrbls	r0, [r3, r0]
 800b0b8:	bd08      	pop	{r3, pc}
 800b0ba:	bf00      	nop
 800b0bc:	08011220 	.word	0x08011220

0800b0c0 <USBD_LL_Transmit>:
 800b0c0:	b508      	push	{r3, lr}
 800b0c2:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b0c6:	f7fc fcff 	bl	8007ac8 <HAL_PCD_EP_Transmit>
 800b0ca:	2803      	cmp	r0, #3
 800b0cc:	bf96      	itet	ls
 800b0ce:	4b02      	ldrls	r3, [pc, #8]	; (800b0d8 <USBD_LL_Transmit+0x18>)
 800b0d0:	2002      	movhi	r0, #2
 800b0d2:	5c18      	ldrbls	r0, [r3, r0]
 800b0d4:	bd08      	pop	{r3, pc}
 800b0d6:	bf00      	nop
 800b0d8:	08011220 	.word	0x08011220

0800b0dc <USBD_LL_PrepareReceive>:
 800b0dc:	b508      	push	{r3, lr}
 800b0de:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b0e2:	f7fc fccf 	bl	8007a84 <HAL_PCD_EP_Receive>
 800b0e6:	2803      	cmp	r0, #3
 800b0e8:	bf96      	itet	ls
 800b0ea:	4b02      	ldrls	r3, [pc, #8]	; (800b0f4 <USBD_LL_PrepareReceive+0x18>)
 800b0ec:	2002      	movhi	r0, #2
 800b0ee:	5c18      	ldrbls	r0, [r3, r0]
 800b0f0:	bd08      	pop	{r3, pc}
 800b0f2:	bf00      	nop
 800b0f4:	08011220 	.word	0x08011220

0800b0f8 <USBD_LL_GetRxDataSize>:
 800b0f8:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800b0fc:	f7fc bcda 	b.w	8007ab4 <HAL_PCD_EP_GetRxCount>

0800b100 <USBD_static_malloc>:
 800b100:	4800      	ldr	r0, [pc, #0]	; (800b104 <USBD_static_malloc+0x4>)
 800b102:	4770      	bx	lr
 800b104:	2000146c 	.word	0x2000146c

0800b108 <USBD_static_free>:
 800b108:	4770      	bx	lr
 800b10a:	bf00      	nop
 800b10c:	0000      	movs	r0, r0
	...

0800b110 <floor>:
 800b110:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b114:	f3c1 580a 	ubfx	r8, r1, #20, #11
 800b118:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 800b11c:	2e13      	cmp	r6, #19
 800b11e:	4602      	mov	r2, r0
 800b120:	460b      	mov	r3, r1
 800b122:	4607      	mov	r7, r0
 800b124:	460c      	mov	r4, r1
 800b126:	4605      	mov	r5, r0
 800b128:	dc33      	bgt.n	800b192 <floor+0x82>
 800b12a:	2e00      	cmp	r6, #0
 800b12c:	da14      	bge.n	800b158 <floor+0x48>
 800b12e:	a334      	add	r3, pc, #208	; (adr r3, 800b200 <floor+0xf0>)
 800b130:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b134:	f7f5 f83c 	bl	80001b0 <__adddf3>
 800b138:	2200      	movs	r2, #0
 800b13a:	2300      	movs	r3, #0
 800b13c:	f7f5 fc7e 	bl	8000a3c <__aeabi_dcmpgt>
 800b140:	b138      	cbz	r0, 800b152 <floor+0x42>
 800b142:	2c00      	cmp	r4, #0
 800b144:	da58      	bge.n	800b1f8 <floor+0xe8>
 800b146:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800b14a:	431d      	orrs	r5, r3
 800b14c:	d001      	beq.n	800b152 <floor+0x42>
 800b14e:	2500      	movs	r5, #0
 800b150:	4c2d      	ldr	r4, [pc, #180]	; (800b208 <floor+0xf8>)
 800b152:	4623      	mov	r3, r4
 800b154:	462f      	mov	r7, r5
 800b156:	e025      	b.n	800b1a4 <floor+0x94>
 800b158:	4a2c      	ldr	r2, [pc, #176]	; (800b20c <floor+0xfc>)
 800b15a:	fa42 f806 	asr.w	r8, r2, r6
 800b15e:	ea01 0208 	and.w	r2, r1, r8
 800b162:	4302      	orrs	r2, r0
 800b164:	d01e      	beq.n	800b1a4 <floor+0x94>
 800b166:	a326      	add	r3, pc, #152	; (adr r3, 800b200 <floor+0xf0>)
 800b168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b16c:	f7f5 f820 	bl	80001b0 <__adddf3>
 800b170:	2200      	movs	r2, #0
 800b172:	2300      	movs	r3, #0
 800b174:	f7f5 fc62 	bl	8000a3c <__aeabi_dcmpgt>
 800b178:	2800      	cmp	r0, #0
 800b17a:	d0ea      	beq.n	800b152 <floor+0x42>
 800b17c:	2c00      	cmp	r4, #0
 800b17e:	bfbe      	ittt	lt
 800b180:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800b184:	fa43 f606 	asrlt.w	r6, r3, r6
 800b188:	19a4      	addlt	r4, r4, r6
 800b18a:	2500      	movs	r5, #0
 800b18c:	ea24 0408 	bic.w	r4, r4, r8
 800b190:	e7df      	b.n	800b152 <floor+0x42>
 800b192:	2e33      	cmp	r6, #51	; 0x33
 800b194:	dd0a      	ble.n	800b1ac <floor+0x9c>
 800b196:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800b19a:	d103      	bne.n	800b1a4 <floor+0x94>
 800b19c:	f7f5 f808 	bl	80001b0 <__adddf3>
 800b1a0:	4607      	mov	r7, r0
 800b1a2:	460b      	mov	r3, r1
 800b1a4:	4638      	mov	r0, r7
 800b1a6:	4619      	mov	r1, r3
 800b1a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b1ac:	f04f 32ff 	mov.w	r2, #4294967295
 800b1b0:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 800b1b4:	fa22 f808 	lsr.w	r8, r2, r8
 800b1b8:	ea18 0f00 	tst.w	r8, r0
 800b1bc:	d0f2      	beq.n	800b1a4 <floor+0x94>
 800b1be:	a310      	add	r3, pc, #64	; (adr r3, 800b200 <floor+0xf0>)
 800b1c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b1c4:	f7f4 fff4 	bl	80001b0 <__adddf3>
 800b1c8:	2200      	movs	r2, #0
 800b1ca:	2300      	movs	r3, #0
 800b1cc:	f7f5 fc36 	bl	8000a3c <__aeabi_dcmpgt>
 800b1d0:	2800      	cmp	r0, #0
 800b1d2:	d0be      	beq.n	800b152 <floor+0x42>
 800b1d4:	2c00      	cmp	r4, #0
 800b1d6:	da02      	bge.n	800b1de <floor+0xce>
 800b1d8:	2e14      	cmp	r6, #20
 800b1da:	d103      	bne.n	800b1e4 <floor+0xd4>
 800b1dc:	3401      	adds	r4, #1
 800b1de:	ea25 0508 	bic.w	r5, r5, r8
 800b1e2:	e7b6      	b.n	800b152 <floor+0x42>
 800b1e4:	2301      	movs	r3, #1
 800b1e6:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800b1ea:	fa03 f606 	lsl.w	r6, r3, r6
 800b1ee:	4435      	add	r5, r6
 800b1f0:	42bd      	cmp	r5, r7
 800b1f2:	bf38      	it	cc
 800b1f4:	18e4      	addcc	r4, r4, r3
 800b1f6:	e7f2      	b.n	800b1de <floor+0xce>
 800b1f8:	2500      	movs	r5, #0
 800b1fa:	462c      	mov	r4, r5
 800b1fc:	e7a9      	b.n	800b152 <floor+0x42>
 800b1fe:	bf00      	nop
 800b200:	8800759c 	.word	0x8800759c
 800b204:	7e37e43c 	.word	0x7e37e43c
 800b208:	bff00000 	.word	0xbff00000
 800b20c:	000fffff 	.word	0x000fffff

0800b210 <round>:
 800b210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b212:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800b216:	f2a7 34ff 	subw	r4, r7, #1023	; 0x3ff
 800b21a:	2c13      	cmp	r4, #19
 800b21c:	4602      	mov	r2, r0
 800b21e:	460b      	mov	r3, r1
 800b220:	4606      	mov	r6, r0
 800b222:	460d      	mov	r5, r1
 800b224:	dc19      	bgt.n	800b25a <round+0x4a>
 800b226:	2c00      	cmp	r4, #0
 800b228:	da09      	bge.n	800b23e <round+0x2e>
 800b22a:	3401      	adds	r4, #1
 800b22c:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 800b230:	d103      	bne.n	800b23a <round+0x2a>
 800b232:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800b236:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800b23a:	2200      	movs	r2, #0
 800b23c:	e02a      	b.n	800b294 <round+0x84>
 800b23e:	4917      	ldr	r1, [pc, #92]	; (800b29c <round+0x8c>)
 800b240:	4121      	asrs	r1, r4
 800b242:	ea03 0001 	and.w	r0, r3, r1
 800b246:	4302      	orrs	r2, r0
 800b248:	d010      	beq.n	800b26c <round+0x5c>
 800b24a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800b24e:	fa42 f404 	asr.w	r4, r2, r4
 800b252:	4423      	add	r3, r4
 800b254:	ea23 0301 	bic.w	r3, r3, r1
 800b258:	e7ef      	b.n	800b23a <round+0x2a>
 800b25a:	2c33      	cmp	r4, #51	; 0x33
 800b25c:	dd09      	ble.n	800b272 <round+0x62>
 800b25e:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 800b262:	d103      	bne.n	800b26c <round+0x5c>
 800b264:	f7f4 ffa4 	bl	80001b0 <__adddf3>
 800b268:	4606      	mov	r6, r0
 800b26a:	460d      	mov	r5, r1
 800b26c:	4630      	mov	r0, r6
 800b26e:	4629      	mov	r1, r5
 800b270:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b272:	f04f 31ff 	mov.w	r1, #4294967295
 800b276:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800b27a:	40f9      	lsrs	r1, r7
 800b27c:	4208      	tst	r0, r1
 800b27e:	d0f5      	beq.n	800b26c <round+0x5c>
 800b280:	2001      	movs	r0, #1
 800b282:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 800b286:	fa00 f404 	lsl.w	r4, r0, r4
 800b28a:	1912      	adds	r2, r2, r4
 800b28c:	bf28      	it	cs
 800b28e:	181b      	addcs	r3, r3, r0
 800b290:	ea22 0201 	bic.w	r2, r2, r1
 800b294:	4619      	mov	r1, r3
 800b296:	4610      	mov	r0, r2
 800b298:	e7e6      	b.n	800b268 <round+0x58>
 800b29a:	bf00      	nop
 800b29c:	000fffff 	.word	0x000fffff

0800b2a0 <__errno>:
 800b2a0:	4b01      	ldr	r3, [pc, #4]	; (800b2a8 <__errno+0x8>)
 800b2a2:	6818      	ldr	r0, [r3, #0]
 800b2a4:	4770      	bx	lr
 800b2a6:	bf00      	nop
 800b2a8:	200001a4 	.word	0x200001a4

0800b2ac <__libc_init_array>:
 800b2ac:	b570      	push	{r4, r5, r6, lr}
 800b2ae:	2600      	movs	r6, #0
 800b2b0:	4d0c      	ldr	r5, [pc, #48]	; (800b2e4 <__libc_init_array+0x38>)
 800b2b2:	4c0d      	ldr	r4, [pc, #52]	; (800b2e8 <__libc_init_array+0x3c>)
 800b2b4:	1b64      	subs	r4, r4, r5
 800b2b6:	10a4      	asrs	r4, r4, #2
 800b2b8:	42a6      	cmp	r6, r4
 800b2ba:	d109      	bne.n	800b2d0 <__libc_init_array+0x24>
 800b2bc:	f005 f886 	bl	80103cc <_init>
 800b2c0:	2600      	movs	r6, #0
 800b2c2:	4d0a      	ldr	r5, [pc, #40]	; (800b2ec <__libc_init_array+0x40>)
 800b2c4:	4c0a      	ldr	r4, [pc, #40]	; (800b2f0 <__libc_init_array+0x44>)
 800b2c6:	1b64      	subs	r4, r4, r5
 800b2c8:	10a4      	asrs	r4, r4, #2
 800b2ca:	42a6      	cmp	r6, r4
 800b2cc:	d105      	bne.n	800b2da <__libc_init_array+0x2e>
 800b2ce:	bd70      	pop	{r4, r5, r6, pc}
 800b2d0:	f855 3b04 	ldr.w	r3, [r5], #4
 800b2d4:	4798      	blx	r3
 800b2d6:	3601      	adds	r6, #1
 800b2d8:	e7ee      	b.n	800b2b8 <__libc_init_array+0xc>
 800b2da:	f855 3b04 	ldr.w	r3, [r5], #4
 800b2de:	4798      	blx	r3
 800b2e0:	3601      	adds	r6, #1
 800b2e2:	e7f2      	b.n	800b2ca <__libc_init_array+0x1e>
 800b2e4:	080116e4 	.word	0x080116e4
 800b2e8:	080116e4 	.word	0x080116e4
 800b2ec:	080116e4 	.word	0x080116e4
 800b2f0:	080116e8 	.word	0x080116e8

0800b2f4 <memcpy>:
 800b2f4:	440a      	add	r2, r1
 800b2f6:	4291      	cmp	r1, r2
 800b2f8:	f100 33ff 	add.w	r3, r0, #4294967295
 800b2fc:	d100      	bne.n	800b300 <memcpy+0xc>
 800b2fe:	4770      	bx	lr
 800b300:	b510      	push	{r4, lr}
 800b302:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b306:	4291      	cmp	r1, r2
 800b308:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b30c:	d1f9      	bne.n	800b302 <memcpy+0xe>
 800b30e:	bd10      	pop	{r4, pc}

0800b310 <memset>:
 800b310:	4603      	mov	r3, r0
 800b312:	4402      	add	r2, r0
 800b314:	4293      	cmp	r3, r2
 800b316:	d100      	bne.n	800b31a <memset+0xa>
 800b318:	4770      	bx	lr
 800b31a:	f803 1b01 	strb.w	r1, [r3], #1
 800b31e:	e7f9      	b.n	800b314 <memset+0x4>

0800b320 <__cvt>:
 800b320:	2b00      	cmp	r3, #0
 800b322:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b326:	461f      	mov	r7, r3
 800b328:	bfbb      	ittet	lt
 800b32a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800b32e:	461f      	movlt	r7, r3
 800b330:	2300      	movge	r3, #0
 800b332:	232d      	movlt	r3, #45	; 0x2d
 800b334:	b088      	sub	sp, #32
 800b336:	4614      	mov	r4, r2
 800b338:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b33a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800b33c:	7013      	strb	r3, [r2, #0]
 800b33e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800b340:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800b344:	f023 0820 	bic.w	r8, r3, #32
 800b348:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800b34c:	d005      	beq.n	800b35a <__cvt+0x3a>
 800b34e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800b352:	d100      	bne.n	800b356 <__cvt+0x36>
 800b354:	3501      	adds	r5, #1
 800b356:	2302      	movs	r3, #2
 800b358:	e000      	b.n	800b35c <__cvt+0x3c>
 800b35a:	2303      	movs	r3, #3
 800b35c:	aa07      	add	r2, sp, #28
 800b35e:	9204      	str	r2, [sp, #16]
 800b360:	aa06      	add	r2, sp, #24
 800b362:	e9cd a202 	strd	sl, r2, [sp, #8]
 800b366:	e9cd 3500 	strd	r3, r5, [sp]
 800b36a:	4622      	mov	r2, r4
 800b36c:	463b      	mov	r3, r7
 800b36e:	f001 fe17 	bl	800cfa0 <_dtoa_r>
 800b372:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800b376:	4606      	mov	r6, r0
 800b378:	d102      	bne.n	800b380 <__cvt+0x60>
 800b37a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b37c:	07db      	lsls	r3, r3, #31
 800b37e:	d522      	bpl.n	800b3c6 <__cvt+0xa6>
 800b380:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800b384:	eb06 0905 	add.w	r9, r6, r5
 800b388:	d110      	bne.n	800b3ac <__cvt+0x8c>
 800b38a:	7833      	ldrb	r3, [r6, #0]
 800b38c:	2b30      	cmp	r3, #48	; 0x30
 800b38e:	d10a      	bne.n	800b3a6 <__cvt+0x86>
 800b390:	2200      	movs	r2, #0
 800b392:	2300      	movs	r3, #0
 800b394:	4620      	mov	r0, r4
 800b396:	4639      	mov	r1, r7
 800b398:	f7f5 fb28 	bl	80009ec <__aeabi_dcmpeq>
 800b39c:	b918      	cbnz	r0, 800b3a6 <__cvt+0x86>
 800b39e:	f1c5 0501 	rsb	r5, r5, #1
 800b3a2:	f8ca 5000 	str.w	r5, [sl]
 800b3a6:	f8da 3000 	ldr.w	r3, [sl]
 800b3aa:	4499      	add	r9, r3
 800b3ac:	2200      	movs	r2, #0
 800b3ae:	2300      	movs	r3, #0
 800b3b0:	4620      	mov	r0, r4
 800b3b2:	4639      	mov	r1, r7
 800b3b4:	f7f5 fb1a 	bl	80009ec <__aeabi_dcmpeq>
 800b3b8:	b108      	cbz	r0, 800b3be <__cvt+0x9e>
 800b3ba:	f8cd 901c 	str.w	r9, [sp, #28]
 800b3be:	2230      	movs	r2, #48	; 0x30
 800b3c0:	9b07      	ldr	r3, [sp, #28]
 800b3c2:	454b      	cmp	r3, r9
 800b3c4:	d307      	bcc.n	800b3d6 <__cvt+0xb6>
 800b3c6:	4630      	mov	r0, r6
 800b3c8:	9b07      	ldr	r3, [sp, #28]
 800b3ca:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800b3cc:	1b9b      	subs	r3, r3, r6
 800b3ce:	6013      	str	r3, [r2, #0]
 800b3d0:	b008      	add	sp, #32
 800b3d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b3d6:	1c59      	adds	r1, r3, #1
 800b3d8:	9107      	str	r1, [sp, #28]
 800b3da:	701a      	strb	r2, [r3, #0]
 800b3dc:	e7f0      	b.n	800b3c0 <__cvt+0xa0>

0800b3de <__exponent>:
 800b3de:	4603      	mov	r3, r0
 800b3e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b3e2:	2900      	cmp	r1, #0
 800b3e4:	f803 2b02 	strb.w	r2, [r3], #2
 800b3e8:	bfb6      	itet	lt
 800b3ea:	222d      	movlt	r2, #45	; 0x2d
 800b3ec:	222b      	movge	r2, #43	; 0x2b
 800b3ee:	4249      	neglt	r1, r1
 800b3f0:	2909      	cmp	r1, #9
 800b3f2:	7042      	strb	r2, [r0, #1]
 800b3f4:	dd2b      	ble.n	800b44e <__exponent+0x70>
 800b3f6:	f10d 0407 	add.w	r4, sp, #7
 800b3fa:	46a4      	mov	ip, r4
 800b3fc:	270a      	movs	r7, #10
 800b3fe:	fb91 f6f7 	sdiv	r6, r1, r7
 800b402:	460a      	mov	r2, r1
 800b404:	46a6      	mov	lr, r4
 800b406:	fb07 1516 	mls	r5, r7, r6, r1
 800b40a:	2a63      	cmp	r2, #99	; 0x63
 800b40c:	f105 0530 	add.w	r5, r5, #48	; 0x30
 800b410:	4631      	mov	r1, r6
 800b412:	f104 34ff 	add.w	r4, r4, #4294967295
 800b416:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800b41a:	dcf0      	bgt.n	800b3fe <__exponent+0x20>
 800b41c:	3130      	adds	r1, #48	; 0x30
 800b41e:	f1ae 0502 	sub.w	r5, lr, #2
 800b422:	f804 1c01 	strb.w	r1, [r4, #-1]
 800b426:	4629      	mov	r1, r5
 800b428:	1c44      	adds	r4, r0, #1
 800b42a:	4561      	cmp	r1, ip
 800b42c:	d30a      	bcc.n	800b444 <__exponent+0x66>
 800b42e:	f10d 0209 	add.w	r2, sp, #9
 800b432:	eba2 020e 	sub.w	r2, r2, lr
 800b436:	4565      	cmp	r5, ip
 800b438:	bf88      	it	hi
 800b43a:	2200      	movhi	r2, #0
 800b43c:	4413      	add	r3, r2
 800b43e:	1a18      	subs	r0, r3, r0
 800b440:	b003      	add	sp, #12
 800b442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b444:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b448:	f804 2f01 	strb.w	r2, [r4, #1]!
 800b44c:	e7ed      	b.n	800b42a <__exponent+0x4c>
 800b44e:	2330      	movs	r3, #48	; 0x30
 800b450:	3130      	adds	r1, #48	; 0x30
 800b452:	7083      	strb	r3, [r0, #2]
 800b454:	70c1      	strb	r1, [r0, #3]
 800b456:	1d03      	adds	r3, r0, #4
 800b458:	e7f1      	b.n	800b43e <__exponent+0x60>
	...

0800b45c <_printf_float>:
 800b45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b460:	b091      	sub	sp, #68	; 0x44
 800b462:	460c      	mov	r4, r1
 800b464:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b468:	4616      	mov	r6, r2
 800b46a:	461f      	mov	r7, r3
 800b46c:	4605      	mov	r5, r0
 800b46e:	f002 feeb 	bl	800e248 <_localeconv_r>
 800b472:	6803      	ldr	r3, [r0, #0]
 800b474:	4618      	mov	r0, r3
 800b476:	9309      	str	r3, [sp, #36]	; 0x24
 800b478:	f7f4 fe8c 	bl	8000194 <strlen>
 800b47c:	2300      	movs	r3, #0
 800b47e:	930e      	str	r3, [sp, #56]	; 0x38
 800b480:	f8d8 3000 	ldr.w	r3, [r8]
 800b484:	900a      	str	r0, [sp, #40]	; 0x28
 800b486:	3307      	adds	r3, #7
 800b488:	f023 0307 	bic.w	r3, r3, #7
 800b48c:	f103 0208 	add.w	r2, r3, #8
 800b490:	f894 9018 	ldrb.w	r9, [r4, #24]
 800b494:	f8d4 b000 	ldr.w	fp, [r4]
 800b498:	f8c8 2000 	str.w	r2, [r8]
 800b49c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b4a0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800b4a4:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800b4a8:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800b4ac:	930b      	str	r3, [sp, #44]	; 0x2c
 800b4ae:	f04f 32ff 	mov.w	r2, #4294967295
 800b4b2:	4640      	mov	r0, r8
 800b4b4:	4b9c      	ldr	r3, [pc, #624]	; (800b728 <_printf_float+0x2cc>)
 800b4b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b4b8:	f7f5 faca 	bl	8000a50 <__aeabi_dcmpun>
 800b4bc:	bb70      	cbnz	r0, 800b51c <_printf_float+0xc0>
 800b4be:	f04f 32ff 	mov.w	r2, #4294967295
 800b4c2:	4640      	mov	r0, r8
 800b4c4:	4b98      	ldr	r3, [pc, #608]	; (800b728 <_printf_float+0x2cc>)
 800b4c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b4c8:	f7f5 faa4 	bl	8000a14 <__aeabi_dcmple>
 800b4cc:	bb30      	cbnz	r0, 800b51c <_printf_float+0xc0>
 800b4ce:	2200      	movs	r2, #0
 800b4d0:	2300      	movs	r3, #0
 800b4d2:	4640      	mov	r0, r8
 800b4d4:	4651      	mov	r1, sl
 800b4d6:	f7f5 fa93 	bl	8000a00 <__aeabi_dcmplt>
 800b4da:	b110      	cbz	r0, 800b4e2 <_printf_float+0x86>
 800b4dc:	232d      	movs	r3, #45	; 0x2d
 800b4de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b4e2:	4b92      	ldr	r3, [pc, #584]	; (800b72c <_printf_float+0x2d0>)
 800b4e4:	4892      	ldr	r0, [pc, #584]	; (800b730 <_printf_float+0x2d4>)
 800b4e6:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800b4ea:	bf94      	ite	ls
 800b4ec:	4698      	movls	r8, r3
 800b4ee:	4680      	movhi	r8, r0
 800b4f0:	2303      	movs	r3, #3
 800b4f2:	f04f 0a00 	mov.w	sl, #0
 800b4f6:	6123      	str	r3, [r4, #16]
 800b4f8:	f02b 0304 	bic.w	r3, fp, #4
 800b4fc:	6023      	str	r3, [r4, #0]
 800b4fe:	4633      	mov	r3, r6
 800b500:	4621      	mov	r1, r4
 800b502:	4628      	mov	r0, r5
 800b504:	9700      	str	r7, [sp, #0]
 800b506:	aa0f      	add	r2, sp, #60	; 0x3c
 800b508:	f000 f9d4 	bl	800b8b4 <_printf_common>
 800b50c:	3001      	adds	r0, #1
 800b50e:	f040 8090 	bne.w	800b632 <_printf_float+0x1d6>
 800b512:	f04f 30ff 	mov.w	r0, #4294967295
 800b516:	b011      	add	sp, #68	; 0x44
 800b518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b51c:	4642      	mov	r2, r8
 800b51e:	4653      	mov	r3, sl
 800b520:	4640      	mov	r0, r8
 800b522:	4651      	mov	r1, sl
 800b524:	f7f5 fa94 	bl	8000a50 <__aeabi_dcmpun>
 800b528:	b148      	cbz	r0, 800b53e <_printf_float+0xe2>
 800b52a:	f1ba 0f00 	cmp.w	sl, #0
 800b52e:	bfb8      	it	lt
 800b530:	232d      	movlt	r3, #45	; 0x2d
 800b532:	4880      	ldr	r0, [pc, #512]	; (800b734 <_printf_float+0x2d8>)
 800b534:	bfb8      	it	lt
 800b536:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800b53a:	4b7f      	ldr	r3, [pc, #508]	; (800b738 <_printf_float+0x2dc>)
 800b53c:	e7d3      	b.n	800b4e6 <_printf_float+0x8a>
 800b53e:	6863      	ldr	r3, [r4, #4]
 800b540:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800b544:	1c5a      	adds	r2, r3, #1
 800b546:	d142      	bne.n	800b5ce <_printf_float+0x172>
 800b548:	2306      	movs	r3, #6
 800b54a:	6063      	str	r3, [r4, #4]
 800b54c:	2200      	movs	r2, #0
 800b54e:	9206      	str	r2, [sp, #24]
 800b550:	aa0e      	add	r2, sp, #56	; 0x38
 800b552:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800b556:	aa0d      	add	r2, sp, #52	; 0x34
 800b558:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800b55c:	9203      	str	r2, [sp, #12]
 800b55e:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800b562:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800b566:	6023      	str	r3, [r4, #0]
 800b568:	6863      	ldr	r3, [r4, #4]
 800b56a:	4642      	mov	r2, r8
 800b56c:	9300      	str	r3, [sp, #0]
 800b56e:	4628      	mov	r0, r5
 800b570:	4653      	mov	r3, sl
 800b572:	910b      	str	r1, [sp, #44]	; 0x2c
 800b574:	f7ff fed4 	bl	800b320 <__cvt>
 800b578:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b57a:	4680      	mov	r8, r0
 800b57c:	2947      	cmp	r1, #71	; 0x47
 800b57e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b580:	d108      	bne.n	800b594 <_printf_float+0x138>
 800b582:	1cc8      	adds	r0, r1, #3
 800b584:	db02      	blt.n	800b58c <_printf_float+0x130>
 800b586:	6863      	ldr	r3, [r4, #4]
 800b588:	4299      	cmp	r1, r3
 800b58a:	dd40      	ble.n	800b60e <_printf_float+0x1b2>
 800b58c:	f1a9 0902 	sub.w	r9, r9, #2
 800b590:	fa5f f989 	uxtb.w	r9, r9
 800b594:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800b598:	d81f      	bhi.n	800b5da <_printf_float+0x17e>
 800b59a:	464a      	mov	r2, r9
 800b59c:	3901      	subs	r1, #1
 800b59e:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800b5a2:	910d      	str	r1, [sp, #52]	; 0x34
 800b5a4:	f7ff ff1b 	bl	800b3de <__exponent>
 800b5a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b5aa:	4682      	mov	sl, r0
 800b5ac:	1813      	adds	r3, r2, r0
 800b5ae:	2a01      	cmp	r2, #1
 800b5b0:	6123      	str	r3, [r4, #16]
 800b5b2:	dc02      	bgt.n	800b5ba <_printf_float+0x15e>
 800b5b4:	6822      	ldr	r2, [r4, #0]
 800b5b6:	07d2      	lsls	r2, r2, #31
 800b5b8:	d501      	bpl.n	800b5be <_printf_float+0x162>
 800b5ba:	3301      	adds	r3, #1
 800b5bc:	6123      	str	r3, [r4, #16]
 800b5be:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800b5c2:	2b00      	cmp	r3, #0
 800b5c4:	d09b      	beq.n	800b4fe <_printf_float+0xa2>
 800b5c6:	232d      	movs	r3, #45	; 0x2d
 800b5c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b5cc:	e797      	b.n	800b4fe <_printf_float+0xa2>
 800b5ce:	2947      	cmp	r1, #71	; 0x47
 800b5d0:	d1bc      	bne.n	800b54c <_printf_float+0xf0>
 800b5d2:	2b00      	cmp	r3, #0
 800b5d4:	d1ba      	bne.n	800b54c <_printf_float+0xf0>
 800b5d6:	2301      	movs	r3, #1
 800b5d8:	e7b7      	b.n	800b54a <_printf_float+0xee>
 800b5da:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800b5de:	d118      	bne.n	800b612 <_printf_float+0x1b6>
 800b5e0:	2900      	cmp	r1, #0
 800b5e2:	6863      	ldr	r3, [r4, #4]
 800b5e4:	dd0b      	ble.n	800b5fe <_printf_float+0x1a2>
 800b5e6:	6121      	str	r1, [r4, #16]
 800b5e8:	b913      	cbnz	r3, 800b5f0 <_printf_float+0x194>
 800b5ea:	6822      	ldr	r2, [r4, #0]
 800b5ec:	07d0      	lsls	r0, r2, #31
 800b5ee:	d502      	bpl.n	800b5f6 <_printf_float+0x19a>
 800b5f0:	3301      	adds	r3, #1
 800b5f2:	440b      	add	r3, r1
 800b5f4:	6123      	str	r3, [r4, #16]
 800b5f6:	f04f 0a00 	mov.w	sl, #0
 800b5fa:	65a1      	str	r1, [r4, #88]	; 0x58
 800b5fc:	e7df      	b.n	800b5be <_printf_float+0x162>
 800b5fe:	b913      	cbnz	r3, 800b606 <_printf_float+0x1aa>
 800b600:	6822      	ldr	r2, [r4, #0]
 800b602:	07d2      	lsls	r2, r2, #31
 800b604:	d501      	bpl.n	800b60a <_printf_float+0x1ae>
 800b606:	3302      	adds	r3, #2
 800b608:	e7f4      	b.n	800b5f4 <_printf_float+0x198>
 800b60a:	2301      	movs	r3, #1
 800b60c:	e7f2      	b.n	800b5f4 <_printf_float+0x198>
 800b60e:	f04f 0967 	mov.w	r9, #103	; 0x67
 800b612:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b614:	4299      	cmp	r1, r3
 800b616:	db05      	blt.n	800b624 <_printf_float+0x1c8>
 800b618:	6823      	ldr	r3, [r4, #0]
 800b61a:	6121      	str	r1, [r4, #16]
 800b61c:	07d8      	lsls	r0, r3, #31
 800b61e:	d5ea      	bpl.n	800b5f6 <_printf_float+0x19a>
 800b620:	1c4b      	adds	r3, r1, #1
 800b622:	e7e7      	b.n	800b5f4 <_printf_float+0x198>
 800b624:	2900      	cmp	r1, #0
 800b626:	bfcc      	ite	gt
 800b628:	2201      	movgt	r2, #1
 800b62a:	f1c1 0202 	rsble	r2, r1, #2
 800b62e:	4413      	add	r3, r2
 800b630:	e7e0      	b.n	800b5f4 <_printf_float+0x198>
 800b632:	6823      	ldr	r3, [r4, #0]
 800b634:	055a      	lsls	r2, r3, #21
 800b636:	d407      	bmi.n	800b648 <_printf_float+0x1ec>
 800b638:	6923      	ldr	r3, [r4, #16]
 800b63a:	4642      	mov	r2, r8
 800b63c:	4631      	mov	r1, r6
 800b63e:	4628      	mov	r0, r5
 800b640:	47b8      	blx	r7
 800b642:	3001      	adds	r0, #1
 800b644:	d12b      	bne.n	800b69e <_printf_float+0x242>
 800b646:	e764      	b.n	800b512 <_printf_float+0xb6>
 800b648:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800b64c:	f240 80dd 	bls.w	800b80a <_printf_float+0x3ae>
 800b650:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b654:	2200      	movs	r2, #0
 800b656:	2300      	movs	r3, #0
 800b658:	f7f5 f9c8 	bl	80009ec <__aeabi_dcmpeq>
 800b65c:	2800      	cmp	r0, #0
 800b65e:	d033      	beq.n	800b6c8 <_printf_float+0x26c>
 800b660:	2301      	movs	r3, #1
 800b662:	4631      	mov	r1, r6
 800b664:	4628      	mov	r0, r5
 800b666:	4a35      	ldr	r2, [pc, #212]	; (800b73c <_printf_float+0x2e0>)
 800b668:	47b8      	blx	r7
 800b66a:	3001      	adds	r0, #1
 800b66c:	f43f af51 	beq.w	800b512 <_printf_float+0xb6>
 800b670:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b674:	429a      	cmp	r2, r3
 800b676:	db02      	blt.n	800b67e <_printf_float+0x222>
 800b678:	6823      	ldr	r3, [r4, #0]
 800b67a:	07d8      	lsls	r0, r3, #31
 800b67c:	d50f      	bpl.n	800b69e <_printf_float+0x242>
 800b67e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b682:	4631      	mov	r1, r6
 800b684:	4628      	mov	r0, r5
 800b686:	47b8      	blx	r7
 800b688:	3001      	adds	r0, #1
 800b68a:	f43f af42 	beq.w	800b512 <_printf_float+0xb6>
 800b68e:	f04f 0800 	mov.w	r8, #0
 800b692:	f104 091a 	add.w	r9, r4, #26
 800b696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b698:	3b01      	subs	r3, #1
 800b69a:	4543      	cmp	r3, r8
 800b69c:	dc09      	bgt.n	800b6b2 <_printf_float+0x256>
 800b69e:	6823      	ldr	r3, [r4, #0]
 800b6a0:	079b      	lsls	r3, r3, #30
 800b6a2:	f100 8102 	bmi.w	800b8aa <_printf_float+0x44e>
 800b6a6:	68e0      	ldr	r0, [r4, #12]
 800b6a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b6aa:	4298      	cmp	r0, r3
 800b6ac:	bfb8      	it	lt
 800b6ae:	4618      	movlt	r0, r3
 800b6b0:	e731      	b.n	800b516 <_printf_float+0xba>
 800b6b2:	2301      	movs	r3, #1
 800b6b4:	464a      	mov	r2, r9
 800b6b6:	4631      	mov	r1, r6
 800b6b8:	4628      	mov	r0, r5
 800b6ba:	47b8      	blx	r7
 800b6bc:	3001      	adds	r0, #1
 800b6be:	f43f af28 	beq.w	800b512 <_printf_float+0xb6>
 800b6c2:	f108 0801 	add.w	r8, r8, #1
 800b6c6:	e7e6      	b.n	800b696 <_printf_float+0x23a>
 800b6c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b6ca:	2b00      	cmp	r3, #0
 800b6cc:	dc38      	bgt.n	800b740 <_printf_float+0x2e4>
 800b6ce:	2301      	movs	r3, #1
 800b6d0:	4631      	mov	r1, r6
 800b6d2:	4628      	mov	r0, r5
 800b6d4:	4a19      	ldr	r2, [pc, #100]	; (800b73c <_printf_float+0x2e0>)
 800b6d6:	47b8      	blx	r7
 800b6d8:	3001      	adds	r0, #1
 800b6da:	f43f af1a 	beq.w	800b512 <_printf_float+0xb6>
 800b6de:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b6e2:	4313      	orrs	r3, r2
 800b6e4:	d102      	bne.n	800b6ec <_printf_float+0x290>
 800b6e6:	6823      	ldr	r3, [r4, #0]
 800b6e8:	07d9      	lsls	r1, r3, #31
 800b6ea:	d5d8      	bpl.n	800b69e <_printf_float+0x242>
 800b6ec:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b6f0:	4631      	mov	r1, r6
 800b6f2:	4628      	mov	r0, r5
 800b6f4:	47b8      	blx	r7
 800b6f6:	3001      	adds	r0, #1
 800b6f8:	f43f af0b 	beq.w	800b512 <_printf_float+0xb6>
 800b6fc:	f04f 0900 	mov.w	r9, #0
 800b700:	f104 0a1a 	add.w	sl, r4, #26
 800b704:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b706:	425b      	negs	r3, r3
 800b708:	454b      	cmp	r3, r9
 800b70a:	dc01      	bgt.n	800b710 <_printf_float+0x2b4>
 800b70c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b70e:	e794      	b.n	800b63a <_printf_float+0x1de>
 800b710:	2301      	movs	r3, #1
 800b712:	4652      	mov	r2, sl
 800b714:	4631      	mov	r1, r6
 800b716:	4628      	mov	r0, r5
 800b718:	47b8      	blx	r7
 800b71a:	3001      	adds	r0, #1
 800b71c:	f43f aef9 	beq.w	800b512 <_printf_float+0xb6>
 800b720:	f109 0901 	add.w	r9, r9, #1
 800b724:	e7ee      	b.n	800b704 <_printf_float+0x2a8>
 800b726:	bf00      	nop
 800b728:	7fefffff 	.word	0x7fefffff
 800b72c:	08011228 	.word	0x08011228
 800b730:	0801122c 	.word	0x0801122c
 800b734:	08011234 	.word	0x08011234
 800b738:	08011230 	.word	0x08011230
 800b73c:	08011629 	.word	0x08011629
 800b740:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b742:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b744:	429a      	cmp	r2, r3
 800b746:	bfa8      	it	ge
 800b748:	461a      	movge	r2, r3
 800b74a:	2a00      	cmp	r2, #0
 800b74c:	4691      	mov	r9, r2
 800b74e:	dc37      	bgt.n	800b7c0 <_printf_float+0x364>
 800b750:	f04f 0b00 	mov.w	fp, #0
 800b754:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b758:	f104 021a 	add.w	r2, r4, #26
 800b75c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800b760:	ebaa 0309 	sub.w	r3, sl, r9
 800b764:	455b      	cmp	r3, fp
 800b766:	dc33      	bgt.n	800b7d0 <_printf_float+0x374>
 800b768:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b76c:	429a      	cmp	r2, r3
 800b76e:	db3b      	blt.n	800b7e8 <_printf_float+0x38c>
 800b770:	6823      	ldr	r3, [r4, #0]
 800b772:	07da      	lsls	r2, r3, #31
 800b774:	d438      	bmi.n	800b7e8 <_printf_float+0x38c>
 800b776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b778:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b77a:	eba3 020a 	sub.w	r2, r3, sl
 800b77e:	eba3 0901 	sub.w	r9, r3, r1
 800b782:	4591      	cmp	r9, r2
 800b784:	bfa8      	it	ge
 800b786:	4691      	movge	r9, r2
 800b788:	f1b9 0f00 	cmp.w	r9, #0
 800b78c:	dc34      	bgt.n	800b7f8 <_printf_float+0x39c>
 800b78e:	f04f 0800 	mov.w	r8, #0
 800b792:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b796:	f104 0a1a 	add.w	sl, r4, #26
 800b79a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800b79e:	1a9b      	subs	r3, r3, r2
 800b7a0:	eba3 0309 	sub.w	r3, r3, r9
 800b7a4:	4543      	cmp	r3, r8
 800b7a6:	f77f af7a 	ble.w	800b69e <_printf_float+0x242>
 800b7aa:	2301      	movs	r3, #1
 800b7ac:	4652      	mov	r2, sl
 800b7ae:	4631      	mov	r1, r6
 800b7b0:	4628      	mov	r0, r5
 800b7b2:	47b8      	blx	r7
 800b7b4:	3001      	adds	r0, #1
 800b7b6:	f43f aeac 	beq.w	800b512 <_printf_float+0xb6>
 800b7ba:	f108 0801 	add.w	r8, r8, #1
 800b7be:	e7ec      	b.n	800b79a <_printf_float+0x33e>
 800b7c0:	4613      	mov	r3, r2
 800b7c2:	4631      	mov	r1, r6
 800b7c4:	4642      	mov	r2, r8
 800b7c6:	4628      	mov	r0, r5
 800b7c8:	47b8      	blx	r7
 800b7ca:	3001      	adds	r0, #1
 800b7cc:	d1c0      	bne.n	800b750 <_printf_float+0x2f4>
 800b7ce:	e6a0      	b.n	800b512 <_printf_float+0xb6>
 800b7d0:	2301      	movs	r3, #1
 800b7d2:	4631      	mov	r1, r6
 800b7d4:	4628      	mov	r0, r5
 800b7d6:	920b      	str	r2, [sp, #44]	; 0x2c
 800b7d8:	47b8      	blx	r7
 800b7da:	3001      	adds	r0, #1
 800b7dc:	f43f ae99 	beq.w	800b512 <_printf_float+0xb6>
 800b7e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b7e2:	f10b 0b01 	add.w	fp, fp, #1
 800b7e6:	e7b9      	b.n	800b75c <_printf_float+0x300>
 800b7e8:	4631      	mov	r1, r6
 800b7ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b7ee:	4628      	mov	r0, r5
 800b7f0:	47b8      	blx	r7
 800b7f2:	3001      	adds	r0, #1
 800b7f4:	d1bf      	bne.n	800b776 <_printf_float+0x31a>
 800b7f6:	e68c      	b.n	800b512 <_printf_float+0xb6>
 800b7f8:	464b      	mov	r3, r9
 800b7fa:	4631      	mov	r1, r6
 800b7fc:	4628      	mov	r0, r5
 800b7fe:	eb08 020a 	add.w	r2, r8, sl
 800b802:	47b8      	blx	r7
 800b804:	3001      	adds	r0, #1
 800b806:	d1c2      	bne.n	800b78e <_printf_float+0x332>
 800b808:	e683      	b.n	800b512 <_printf_float+0xb6>
 800b80a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b80c:	2a01      	cmp	r2, #1
 800b80e:	dc01      	bgt.n	800b814 <_printf_float+0x3b8>
 800b810:	07db      	lsls	r3, r3, #31
 800b812:	d537      	bpl.n	800b884 <_printf_float+0x428>
 800b814:	2301      	movs	r3, #1
 800b816:	4642      	mov	r2, r8
 800b818:	4631      	mov	r1, r6
 800b81a:	4628      	mov	r0, r5
 800b81c:	47b8      	blx	r7
 800b81e:	3001      	adds	r0, #1
 800b820:	f43f ae77 	beq.w	800b512 <_printf_float+0xb6>
 800b824:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b828:	4631      	mov	r1, r6
 800b82a:	4628      	mov	r0, r5
 800b82c:	47b8      	blx	r7
 800b82e:	3001      	adds	r0, #1
 800b830:	f43f ae6f 	beq.w	800b512 <_printf_float+0xb6>
 800b834:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b838:	2200      	movs	r2, #0
 800b83a:	2300      	movs	r3, #0
 800b83c:	f7f5 f8d6 	bl	80009ec <__aeabi_dcmpeq>
 800b840:	b9d8      	cbnz	r0, 800b87a <_printf_float+0x41e>
 800b842:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b844:	f108 0201 	add.w	r2, r8, #1
 800b848:	3b01      	subs	r3, #1
 800b84a:	4631      	mov	r1, r6
 800b84c:	4628      	mov	r0, r5
 800b84e:	47b8      	blx	r7
 800b850:	3001      	adds	r0, #1
 800b852:	d10e      	bne.n	800b872 <_printf_float+0x416>
 800b854:	e65d      	b.n	800b512 <_printf_float+0xb6>
 800b856:	2301      	movs	r3, #1
 800b858:	464a      	mov	r2, r9
 800b85a:	4631      	mov	r1, r6
 800b85c:	4628      	mov	r0, r5
 800b85e:	47b8      	blx	r7
 800b860:	3001      	adds	r0, #1
 800b862:	f43f ae56 	beq.w	800b512 <_printf_float+0xb6>
 800b866:	f108 0801 	add.w	r8, r8, #1
 800b86a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b86c:	3b01      	subs	r3, #1
 800b86e:	4543      	cmp	r3, r8
 800b870:	dcf1      	bgt.n	800b856 <_printf_float+0x3fa>
 800b872:	4653      	mov	r3, sl
 800b874:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800b878:	e6e0      	b.n	800b63c <_printf_float+0x1e0>
 800b87a:	f04f 0800 	mov.w	r8, #0
 800b87e:	f104 091a 	add.w	r9, r4, #26
 800b882:	e7f2      	b.n	800b86a <_printf_float+0x40e>
 800b884:	2301      	movs	r3, #1
 800b886:	4642      	mov	r2, r8
 800b888:	e7df      	b.n	800b84a <_printf_float+0x3ee>
 800b88a:	2301      	movs	r3, #1
 800b88c:	464a      	mov	r2, r9
 800b88e:	4631      	mov	r1, r6
 800b890:	4628      	mov	r0, r5
 800b892:	47b8      	blx	r7
 800b894:	3001      	adds	r0, #1
 800b896:	f43f ae3c 	beq.w	800b512 <_printf_float+0xb6>
 800b89a:	f108 0801 	add.w	r8, r8, #1
 800b89e:	68e3      	ldr	r3, [r4, #12]
 800b8a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b8a2:	1a5b      	subs	r3, r3, r1
 800b8a4:	4543      	cmp	r3, r8
 800b8a6:	dcf0      	bgt.n	800b88a <_printf_float+0x42e>
 800b8a8:	e6fd      	b.n	800b6a6 <_printf_float+0x24a>
 800b8aa:	f04f 0800 	mov.w	r8, #0
 800b8ae:	f104 0919 	add.w	r9, r4, #25
 800b8b2:	e7f4      	b.n	800b89e <_printf_float+0x442>

0800b8b4 <_printf_common>:
 800b8b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b8b8:	4616      	mov	r6, r2
 800b8ba:	4699      	mov	r9, r3
 800b8bc:	688a      	ldr	r2, [r1, #8]
 800b8be:	690b      	ldr	r3, [r1, #16]
 800b8c0:	4607      	mov	r7, r0
 800b8c2:	4293      	cmp	r3, r2
 800b8c4:	bfb8      	it	lt
 800b8c6:	4613      	movlt	r3, r2
 800b8c8:	6033      	str	r3, [r6, #0]
 800b8ca:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800b8ce:	460c      	mov	r4, r1
 800b8d0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800b8d4:	b10a      	cbz	r2, 800b8da <_printf_common+0x26>
 800b8d6:	3301      	adds	r3, #1
 800b8d8:	6033      	str	r3, [r6, #0]
 800b8da:	6823      	ldr	r3, [r4, #0]
 800b8dc:	0699      	lsls	r1, r3, #26
 800b8de:	bf42      	ittt	mi
 800b8e0:	6833      	ldrmi	r3, [r6, #0]
 800b8e2:	3302      	addmi	r3, #2
 800b8e4:	6033      	strmi	r3, [r6, #0]
 800b8e6:	6825      	ldr	r5, [r4, #0]
 800b8e8:	f015 0506 	ands.w	r5, r5, #6
 800b8ec:	d106      	bne.n	800b8fc <_printf_common+0x48>
 800b8ee:	f104 0a19 	add.w	sl, r4, #25
 800b8f2:	68e3      	ldr	r3, [r4, #12]
 800b8f4:	6832      	ldr	r2, [r6, #0]
 800b8f6:	1a9b      	subs	r3, r3, r2
 800b8f8:	42ab      	cmp	r3, r5
 800b8fa:	dc28      	bgt.n	800b94e <_printf_common+0x9a>
 800b8fc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800b900:	1e13      	subs	r3, r2, #0
 800b902:	6822      	ldr	r2, [r4, #0]
 800b904:	bf18      	it	ne
 800b906:	2301      	movne	r3, #1
 800b908:	0692      	lsls	r2, r2, #26
 800b90a:	d42d      	bmi.n	800b968 <_printf_common+0xb4>
 800b90c:	4649      	mov	r1, r9
 800b90e:	4638      	mov	r0, r7
 800b910:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800b914:	47c0      	blx	r8
 800b916:	3001      	adds	r0, #1
 800b918:	d020      	beq.n	800b95c <_printf_common+0xa8>
 800b91a:	6823      	ldr	r3, [r4, #0]
 800b91c:	68e5      	ldr	r5, [r4, #12]
 800b91e:	f003 0306 	and.w	r3, r3, #6
 800b922:	2b04      	cmp	r3, #4
 800b924:	bf18      	it	ne
 800b926:	2500      	movne	r5, #0
 800b928:	6832      	ldr	r2, [r6, #0]
 800b92a:	f04f 0600 	mov.w	r6, #0
 800b92e:	68a3      	ldr	r3, [r4, #8]
 800b930:	bf08      	it	eq
 800b932:	1aad      	subeq	r5, r5, r2
 800b934:	6922      	ldr	r2, [r4, #16]
 800b936:	bf08      	it	eq
 800b938:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b93c:	4293      	cmp	r3, r2
 800b93e:	bfc4      	itt	gt
 800b940:	1a9b      	subgt	r3, r3, r2
 800b942:	18ed      	addgt	r5, r5, r3
 800b944:	341a      	adds	r4, #26
 800b946:	42b5      	cmp	r5, r6
 800b948:	d11a      	bne.n	800b980 <_printf_common+0xcc>
 800b94a:	2000      	movs	r0, #0
 800b94c:	e008      	b.n	800b960 <_printf_common+0xac>
 800b94e:	2301      	movs	r3, #1
 800b950:	4652      	mov	r2, sl
 800b952:	4649      	mov	r1, r9
 800b954:	4638      	mov	r0, r7
 800b956:	47c0      	blx	r8
 800b958:	3001      	adds	r0, #1
 800b95a:	d103      	bne.n	800b964 <_printf_common+0xb0>
 800b95c:	f04f 30ff 	mov.w	r0, #4294967295
 800b960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b964:	3501      	adds	r5, #1
 800b966:	e7c4      	b.n	800b8f2 <_printf_common+0x3e>
 800b968:	2030      	movs	r0, #48	; 0x30
 800b96a:	18e1      	adds	r1, r4, r3
 800b96c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b970:	1c5a      	adds	r2, r3, #1
 800b972:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b976:	4422      	add	r2, r4
 800b978:	3302      	adds	r3, #2
 800b97a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b97e:	e7c5      	b.n	800b90c <_printf_common+0x58>
 800b980:	2301      	movs	r3, #1
 800b982:	4622      	mov	r2, r4
 800b984:	4649      	mov	r1, r9
 800b986:	4638      	mov	r0, r7
 800b988:	47c0      	blx	r8
 800b98a:	3001      	adds	r0, #1
 800b98c:	d0e6      	beq.n	800b95c <_printf_common+0xa8>
 800b98e:	3601      	adds	r6, #1
 800b990:	e7d9      	b.n	800b946 <_printf_common+0x92>
	...

0800b994 <_printf_i>:
 800b994:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b998:	7e0f      	ldrb	r7, [r1, #24]
 800b99a:	4691      	mov	r9, r2
 800b99c:	2f78      	cmp	r7, #120	; 0x78
 800b99e:	4680      	mov	r8, r0
 800b9a0:	460c      	mov	r4, r1
 800b9a2:	469a      	mov	sl, r3
 800b9a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b9a6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b9aa:	d807      	bhi.n	800b9bc <_printf_i+0x28>
 800b9ac:	2f62      	cmp	r7, #98	; 0x62
 800b9ae:	d80a      	bhi.n	800b9c6 <_printf_i+0x32>
 800b9b0:	2f00      	cmp	r7, #0
 800b9b2:	f000 80d9 	beq.w	800bb68 <_printf_i+0x1d4>
 800b9b6:	2f58      	cmp	r7, #88	; 0x58
 800b9b8:	f000 80a4 	beq.w	800bb04 <_printf_i+0x170>
 800b9bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b9c0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b9c4:	e03a      	b.n	800ba3c <_printf_i+0xa8>
 800b9c6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b9ca:	2b15      	cmp	r3, #21
 800b9cc:	d8f6      	bhi.n	800b9bc <_printf_i+0x28>
 800b9ce:	a101      	add	r1, pc, #4	; (adr r1, 800b9d4 <_printf_i+0x40>)
 800b9d0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b9d4:	0800ba2d 	.word	0x0800ba2d
 800b9d8:	0800ba41 	.word	0x0800ba41
 800b9dc:	0800b9bd 	.word	0x0800b9bd
 800b9e0:	0800b9bd 	.word	0x0800b9bd
 800b9e4:	0800b9bd 	.word	0x0800b9bd
 800b9e8:	0800b9bd 	.word	0x0800b9bd
 800b9ec:	0800ba41 	.word	0x0800ba41
 800b9f0:	0800b9bd 	.word	0x0800b9bd
 800b9f4:	0800b9bd 	.word	0x0800b9bd
 800b9f8:	0800b9bd 	.word	0x0800b9bd
 800b9fc:	0800b9bd 	.word	0x0800b9bd
 800ba00:	0800bb4f 	.word	0x0800bb4f
 800ba04:	0800ba71 	.word	0x0800ba71
 800ba08:	0800bb31 	.word	0x0800bb31
 800ba0c:	0800b9bd 	.word	0x0800b9bd
 800ba10:	0800b9bd 	.word	0x0800b9bd
 800ba14:	0800bb71 	.word	0x0800bb71
 800ba18:	0800b9bd 	.word	0x0800b9bd
 800ba1c:	0800ba71 	.word	0x0800ba71
 800ba20:	0800b9bd 	.word	0x0800b9bd
 800ba24:	0800b9bd 	.word	0x0800b9bd
 800ba28:	0800bb39 	.word	0x0800bb39
 800ba2c:	682b      	ldr	r3, [r5, #0]
 800ba2e:	1d1a      	adds	r2, r3, #4
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	602a      	str	r2, [r5, #0]
 800ba34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800ba38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ba3c:	2301      	movs	r3, #1
 800ba3e:	e0a4      	b.n	800bb8a <_printf_i+0x1f6>
 800ba40:	6820      	ldr	r0, [r4, #0]
 800ba42:	6829      	ldr	r1, [r5, #0]
 800ba44:	0606      	lsls	r6, r0, #24
 800ba46:	f101 0304 	add.w	r3, r1, #4
 800ba4a:	d50a      	bpl.n	800ba62 <_printf_i+0xce>
 800ba4c:	680e      	ldr	r6, [r1, #0]
 800ba4e:	602b      	str	r3, [r5, #0]
 800ba50:	2e00      	cmp	r6, #0
 800ba52:	da03      	bge.n	800ba5c <_printf_i+0xc8>
 800ba54:	232d      	movs	r3, #45	; 0x2d
 800ba56:	4276      	negs	r6, r6
 800ba58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ba5c:	230a      	movs	r3, #10
 800ba5e:	485e      	ldr	r0, [pc, #376]	; (800bbd8 <_printf_i+0x244>)
 800ba60:	e019      	b.n	800ba96 <_printf_i+0x102>
 800ba62:	680e      	ldr	r6, [r1, #0]
 800ba64:	f010 0f40 	tst.w	r0, #64	; 0x40
 800ba68:	602b      	str	r3, [r5, #0]
 800ba6a:	bf18      	it	ne
 800ba6c:	b236      	sxthne	r6, r6
 800ba6e:	e7ef      	b.n	800ba50 <_printf_i+0xbc>
 800ba70:	682b      	ldr	r3, [r5, #0]
 800ba72:	6820      	ldr	r0, [r4, #0]
 800ba74:	1d19      	adds	r1, r3, #4
 800ba76:	6029      	str	r1, [r5, #0]
 800ba78:	0601      	lsls	r1, r0, #24
 800ba7a:	d501      	bpl.n	800ba80 <_printf_i+0xec>
 800ba7c:	681e      	ldr	r6, [r3, #0]
 800ba7e:	e002      	b.n	800ba86 <_printf_i+0xf2>
 800ba80:	0646      	lsls	r6, r0, #25
 800ba82:	d5fb      	bpl.n	800ba7c <_printf_i+0xe8>
 800ba84:	881e      	ldrh	r6, [r3, #0]
 800ba86:	2f6f      	cmp	r7, #111	; 0x6f
 800ba88:	bf0c      	ite	eq
 800ba8a:	2308      	moveq	r3, #8
 800ba8c:	230a      	movne	r3, #10
 800ba8e:	4852      	ldr	r0, [pc, #328]	; (800bbd8 <_printf_i+0x244>)
 800ba90:	2100      	movs	r1, #0
 800ba92:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800ba96:	6865      	ldr	r5, [r4, #4]
 800ba98:	2d00      	cmp	r5, #0
 800ba9a:	bfa8      	it	ge
 800ba9c:	6821      	ldrge	r1, [r4, #0]
 800ba9e:	60a5      	str	r5, [r4, #8]
 800baa0:	bfa4      	itt	ge
 800baa2:	f021 0104 	bicge.w	r1, r1, #4
 800baa6:	6021      	strge	r1, [r4, #0]
 800baa8:	b90e      	cbnz	r6, 800baae <_printf_i+0x11a>
 800baaa:	2d00      	cmp	r5, #0
 800baac:	d04d      	beq.n	800bb4a <_printf_i+0x1b6>
 800baae:	4615      	mov	r5, r2
 800bab0:	fbb6 f1f3 	udiv	r1, r6, r3
 800bab4:	fb03 6711 	mls	r7, r3, r1, r6
 800bab8:	5dc7      	ldrb	r7, [r0, r7]
 800baba:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800babe:	4637      	mov	r7, r6
 800bac0:	42bb      	cmp	r3, r7
 800bac2:	460e      	mov	r6, r1
 800bac4:	d9f4      	bls.n	800bab0 <_printf_i+0x11c>
 800bac6:	2b08      	cmp	r3, #8
 800bac8:	d10b      	bne.n	800bae2 <_printf_i+0x14e>
 800baca:	6823      	ldr	r3, [r4, #0]
 800bacc:	07de      	lsls	r6, r3, #31
 800bace:	d508      	bpl.n	800bae2 <_printf_i+0x14e>
 800bad0:	6923      	ldr	r3, [r4, #16]
 800bad2:	6861      	ldr	r1, [r4, #4]
 800bad4:	4299      	cmp	r1, r3
 800bad6:	bfde      	ittt	le
 800bad8:	2330      	movle	r3, #48	; 0x30
 800bada:	f805 3c01 	strble.w	r3, [r5, #-1]
 800bade:	f105 35ff 	addle.w	r5, r5, #4294967295
 800bae2:	1b52      	subs	r2, r2, r5
 800bae4:	6122      	str	r2, [r4, #16]
 800bae6:	464b      	mov	r3, r9
 800bae8:	4621      	mov	r1, r4
 800baea:	4640      	mov	r0, r8
 800baec:	f8cd a000 	str.w	sl, [sp]
 800baf0:	aa03      	add	r2, sp, #12
 800baf2:	f7ff fedf 	bl	800b8b4 <_printf_common>
 800baf6:	3001      	adds	r0, #1
 800baf8:	d14c      	bne.n	800bb94 <_printf_i+0x200>
 800bafa:	f04f 30ff 	mov.w	r0, #4294967295
 800bafe:	b004      	add	sp, #16
 800bb00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bb04:	4834      	ldr	r0, [pc, #208]	; (800bbd8 <_printf_i+0x244>)
 800bb06:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800bb0a:	6829      	ldr	r1, [r5, #0]
 800bb0c:	6823      	ldr	r3, [r4, #0]
 800bb0e:	f851 6b04 	ldr.w	r6, [r1], #4
 800bb12:	6029      	str	r1, [r5, #0]
 800bb14:	061d      	lsls	r5, r3, #24
 800bb16:	d514      	bpl.n	800bb42 <_printf_i+0x1ae>
 800bb18:	07df      	lsls	r7, r3, #31
 800bb1a:	bf44      	itt	mi
 800bb1c:	f043 0320 	orrmi.w	r3, r3, #32
 800bb20:	6023      	strmi	r3, [r4, #0]
 800bb22:	b91e      	cbnz	r6, 800bb2c <_printf_i+0x198>
 800bb24:	6823      	ldr	r3, [r4, #0]
 800bb26:	f023 0320 	bic.w	r3, r3, #32
 800bb2a:	6023      	str	r3, [r4, #0]
 800bb2c:	2310      	movs	r3, #16
 800bb2e:	e7af      	b.n	800ba90 <_printf_i+0xfc>
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	f043 0320 	orr.w	r3, r3, #32
 800bb36:	6023      	str	r3, [r4, #0]
 800bb38:	2378      	movs	r3, #120	; 0x78
 800bb3a:	4828      	ldr	r0, [pc, #160]	; (800bbdc <_printf_i+0x248>)
 800bb3c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800bb40:	e7e3      	b.n	800bb0a <_printf_i+0x176>
 800bb42:	0659      	lsls	r1, r3, #25
 800bb44:	bf48      	it	mi
 800bb46:	b2b6      	uxthmi	r6, r6
 800bb48:	e7e6      	b.n	800bb18 <_printf_i+0x184>
 800bb4a:	4615      	mov	r5, r2
 800bb4c:	e7bb      	b.n	800bac6 <_printf_i+0x132>
 800bb4e:	682b      	ldr	r3, [r5, #0]
 800bb50:	6826      	ldr	r6, [r4, #0]
 800bb52:	1d18      	adds	r0, r3, #4
 800bb54:	6961      	ldr	r1, [r4, #20]
 800bb56:	6028      	str	r0, [r5, #0]
 800bb58:	0635      	lsls	r5, r6, #24
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	d501      	bpl.n	800bb62 <_printf_i+0x1ce>
 800bb5e:	6019      	str	r1, [r3, #0]
 800bb60:	e002      	b.n	800bb68 <_printf_i+0x1d4>
 800bb62:	0670      	lsls	r0, r6, #25
 800bb64:	d5fb      	bpl.n	800bb5e <_printf_i+0x1ca>
 800bb66:	8019      	strh	r1, [r3, #0]
 800bb68:	2300      	movs	r3, #0
 800bb6a:	4615      	mov	r5, r2
 800bb6c:	6123      	str	r3, [r4, #16]
 800bb6e:	e7ba      	b.n	800bae6 <_printf_i+0x152>
 800bb70:	682b      	ldr	r3, [r5, #0]
 800bb72:	2100      	movs	r1, #0
 800bb74:	1d1a      	adds	r2, r3, #4
 800bb76:	602a      	str	r2, [r5, #0]
 800bb78:	681d      	ldr	r5, [r3, #0]
 800bb7a:	6862      	ldr	r2, [r4, #4]
 800bb7c:	4628      	mov	r0, r5
 800bb7e:	f002 fb93 	bl	800e2a8 <memchr>
 800bb82:	b108      	cbz	r0, 800bb88 <_printf_i+0x1f4>
 800bb84:	1b40      	subs	r0, r0, r5
 800bb86:	6060      	str	r0, [r4, #4]
 800bb88:	6863      	ldr	r3, [r4, #4]
 800bb8a:	6123      	str	r3, [r4, #16]
 800bb8c:	2300      	movs	r3, #0
 800bb8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800bb92:	e7a8      	b.n	800bae6 <_printf_i+0x152>
 800bb94:	462a      	mov	r2, r5
 800bb96:	4649      	mov	r1, r9
 800bb98:	4640      	mov	r0, r8
 800bb9a:	6923      	ldr	r3, [r4, #16]
 800bb9c:	47d0      	blx	sl
 800bb9e:	3001      	adds	r0, #1
 800bba0:	d0ab      	beq.n	800bafa <_printf_i+0x166>
 800bba2:	6823      	ldr	r3, [r4, #0]
 800bba4:	079b      	lsls	r3, r3, #30
 800bba6:	d413      	bmi.n	800bbd0 <_printf_i+0x23c>
 800bba8:	68e0      	ldr	r0, [r4, #12]
 800bbaa:	9b03      	ldr	r3, [sp, #12]
 800bbac:	4298      	cmp	r0, r3
 800bbae:	bfb8      	it	lt
 800bbb0:	4618      	movlt	r0, r3
 800bbb2:	e7a4      	b.n	800bafe <_printf_i+0x16a>
 800bbb4:	2301      	movs	r3, #1
 800bbb6:	4632      	mov	r2, r6
 800bbb8:	4649      	mov	r1, r9
 800bbba:	4640      	mov	r0, r8
 800bbbc:	47d0      	blx	sl
 800bbbe:	3001      	adds	r0, #1
 800bbc0:	d09b      	beq.n	800bafa <_printf_i+0x166>
 800bbc2:	3501      	adds	r5, #1
 800bbc4:	68e3      	ldr	r3, [r4, #12]
 800bbc6:	9903      	ldr	r1, [sp, #12]
 800bbc8:	1a5b      	subs	r3, r3, r1
 800bbca:	42ab      	cmp	r3, r5
 800bbcc:	dcf2      	bgt.n	800bbb4 <_printf_i+0x220>
 800bbce:	e7eb      	b.n	800bba8 <_printf_i+0x214>
 800bbd0:	2500      	movs	r5, #0
 800bbd2:	f104 0619 	add.w	r6, r4, #25
 800bbd6:	e7f5      	b.n	800bbc4 <_printf_i+0x230>
 800bbd8:	08011238 	.word	0x08011238
 800bbdc:	08011249 	.word	0x08011249

0800bbe0 <_scanf_float>:
 800bbe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbe4:	b087      	sub	sp, #28
 800bbe6:	9303      	str	r3, [sp, #12]
 800bbe8:	688b      	ldr	r3, [r1, #8]
 800bbea:	4617      	mov	r7, r2
 800bbec:	1e5a      	subs	r2, r3, #1
 800bbee:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800bbf2:	bf85      	ittet	hi
 800bbf4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800bbf8:	195b      	addhi	r3, r3, r5
 800bbfa:	2300      	movls	r3, #0
 800bbfc:	9302      	strhi	r3, [sp, #8]
 800bbfe:	bf88      	it	hi
 800bc00:	f240 135d 	movwhi	r3, #349	; 0x15d
 800bc04:	468b      	mov	fp, r1
 800bc06:	f04f 0500 	mov.w	r5, #0
 800bc0a:	bf8c      	ite	hi
 800bc0c:	608b      	strhi	r3, [r1, #8]
 800bc0e:	9302      	strls	r3, [sp, #8]
 800bc10:	680b      	ldr	r3, [r1, #0]
 800bc12:	4680      	mov	r8, r0
 800bc14:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800bc18:	f84b 3b1c 	str.w	r3, [fp], #28
 800bc1c:	460c      	mov	r4, r1
 800bc1e:	465e      	mov	r6, fp
 800bc20:	46aa      	mov	sl, r5
 800bc22:	46a9      	mov	r9, r5
 800bc24:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bc28:	9501      	str	r5, [sp, #4]
 800bc2a:	68a2      	ldr	r2, [r4, #8]
 800bc2c:	b152      	cbz	r2, 800bc44 <_scanf_float+0x64>
 800bc2e:	683b      	ldr	r3, [r7, #0]
 800bc30:	781b      	ldrb	r3, [r3, #0]
 800bc32:	2b4e      	cmp	r3, #78	; 0x4e
 800bc34:	d864      	bhi.n	800bd00 <_scanf_float+0x120>
 800bc36:	2b40      	cmp	r3, #64	; 0x40
 800bc38:	d83c      	bhi.n	800bcb4 <_scanf_float+0xd4>
 800bc3a:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800bc3e:	b2c8      	uxtb	r0, r1
 800bc40:	280e      	cmp	r0, #14
 800bc42:	d93a      	bls.n	800bcba <_scanf_float+0xda>
 800bc44:	f1b9 0f00 	cmp.w	r9, #0
 800bc48:	d003      	beq.n	800bc52 <_scanf_float+0x72>
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bc50:	6023      	str	r3, [r4, #0]
 800bc52:	f10a 3aff 	add.w	sl, sl, #4294967295
 800bc56:	f1ba 0f01 	cmp.w	sl, #1
 800bc5a:	f200 8113 	bhi.w	800be84 <_scanf_float+0x2a4>
 800bc5e:	455e      	cmp	r6, fp
 800bc60:	f200 8105 	bhi.w	800be6e <_scanf_float+0x28e>
 800bc64:	2501      	movs	r5, #1
 800bc66:	4628      	mov	r0, r5
 800bc68:	b007      	add	sp, #28
 800bc6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc6e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800bc72:	2a0d      	cmp	r2, #13
 800bc74:	d8e6      	bhi.n	800bc44 <_scanf_float+0x64>
 800bc76:	a101      	add	r1, pc, #4	; (adr r1, 800bc7c <_scanf_float+0x9c>)
 800bc78:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800bc7c:	0800bdbb 	.word	0x0800bdbb
 800bc80:	0800bc45 	.word	0x0800bc45
 800bc84:	0800bc45 	.word	0x0800bc45
 800bc88:	0800bc45 	.word	0x0800bc45
 800bc8c:	0800be1b 	.word	0x0800be1b
 800bc90:	0800bdf3 	.word	0x0800bdf3
 800bc94:	0800bc45 	.word	0x0800bc45
 800bc98:	0800bc45 	.word	0x0800bc45
 800bc9c:	0800bdc9 	.word	0x0800bdc9
 800bca0:	0800bc45 	.word	0x0800bc45
 800bca4:	0800bc45 	.word	0x0800bc45
 800bca8:	0800bc45 	.word	0x0800bc45
 800bcac:	0800bc45 	.word	0x0800bc45
 800bcb0:	0800bd81 	.word	0x0800bd81
 800bcb4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800bcb8:	e7db      	b.n	800bc72 <_scanf_float+0x92>
 800bcba:	290e      	cmp	r1, #14
 800bcbc:	d8c2      	bhi.n	800bc44 <_scanf_float+0x64>
 800bcbe:	a001      	add	r0, pc, #4	; (adr r0, 800bcc4 <_scanf_float+0xe4>)
 800bcc0:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800bcc4:	0800bd73 	.word	0x0800bd73
 800bcc8:	0800bc45 	.word	0x0800bc45
 800bccc:	0800bd73 	.word	0x0800bd73
 800bcd0:	0800be07 	.word	0x0800be07
 800bcd4:	0800bc45 	.word	0x0800bc45
 800bcd8:	0800bd21 	.word	0x0800bd21
 800bcdc:	0800bd5d 	.word	0x0800bd5d
 800bce0:	0800bd5d 	.word	0x0800bd5d
 800bce4:	0800bd5d 	.word	0x0800bd5d
 800bce8:	0800bd5d 	.word	0x0800bd5d
 800bcec:	0800bd5d 	.word	0x0800bd5d
 800bcf0:	0800bd5d 	.word	0x0800bd5d
 800bcf4:	0800bd5d 	.word	0x0800bd5d
 800bcf8:	0800bd5d 	.word	0x0800bd5d
 800bcfc:	0800bd5d 	.word	0x0800bd5d
 800bd00:	2b6e      	cmp	r3, #110	; 0x6e
 800bd02:	d809      	bhi.n	800bd18 <_scanf_float+0x138>
 800bd04:	2b60      	cmp	r3, #96	; 0x60
 800bd06:	d8b2      	bhi.n	800bc6e <_scanf_float+0x8e>
 800bd08:	2b54      	cmp	r3, #84	; 0x54
 800bd0a:	d077      	beq.n	800bdfc <_scanf_float+0x21c>
 800bd0c:	2b59      	cmp	r3, #89	; 0x59
 800bd0e:	d199      	bne.n	800bc44 <_scanf_float+0x64>
 800bd10:	2d07      	cmp	r5, #7
 800bd12:	d197      	bne.n	800bc44 <_scanf_float+0x64>
 800bd14:	2508      	movs	r5, #8
 800bd16:	e029      	b.n	800bd6c <_scanf_float+0x18c>
 800bd18:	2b74      	cmp	r3, #116	; 0x74
 800bd1a:	d06f      	beq.n	800bdfc <_scanf_float+0x21c>
 800bd1c:	2b79      	cmp	r3, #121	; 0x79
 800bd1e:	e7f6      	b.n	800bd0e <_scanf_float+0x12e>
 800bd20:	6821      	ldr	r1, [r4, #0]
 800bd22:	05c8      	lsls	r0, r1, #23
 800bd24:	d51a      	bpl.n	800bd5c <_scanf_float+0x17c>
 800bd26:	9b02      	ldr	r3, [sp, #8]
 800bd28:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800bd2c:	6021      	str	r1, [r4, #0]
 800bd2e:	f109 0901 	add.w	r9, r9, #1
 800bd32:	b11b      	cbz	r3, 800bd3c <_scanf_float+0x15c>
 800bd34:	3b01      	subs	r3, #1
 800bd36:	3201      	adds	r2, #1
 800bd38:	9302      	str	r3, [sp, #8]
 800bd3a:	60a2      	str	r2, [r4, #8]
 800bd3c:	68a3      	ldr	r3, [r4, #8]
 800bd3e:	3b01      	subs	r3, #1
 800bd40:	60a3      	str	r3, [r4, #8]
 800bd42:	6923      	ldr	r3, [r4, #16]
 800bd44:	3301      	adds	r3, #1
 800bd46:	6123      	str	r3, [r4, #16]
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	3b01      	subs	r3, #1
 800bd4c:	2b00      	cmp	r3, #0
 800bd4e:	607b      	str	r3, [r7, #4]
 800bd50:	f340 8084 	ble.w	800be5c <_scanf_float+0x27c>
 800bd54:	683b      	ldr	r3, [r7, #0]
 800bd56:	3301      	adds	r3, #1
 800bd58:	603b      	str	r3, [r7, #0]
 800bd5a:	e766      	b.n	800bc2a <_scanf_float+0x4a>
 800bd5c:	eb1a 0f05 	cmn.w	sl, r5
 800bd60:	f47f af70 	bne.w	800bc44 <_scanf_float+0x64>
 800bd64:	6822      	ldr	r2, [r4, #0]
 800bd66:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800bd6a:	6022      	str	r2, [r4, #0]
 800bd6c:	f806 3b01 	strb.w	r3, [r6], #1
 800bd70:	e7e4      	b.n	800bd3c <_scanf_float+0x15c>
 800bd72:	6822      	ldr	r2, [r4, #0]
 800bd74:	0610      	lsls	r0, r2, #24
 800bd76:	f57f af65 	bpl.w	800bc44 <_scanf_float+0x64>
 800bd7a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800bd7e:	e7f4      	b.n	800bd6a <_scanf_float+0x18a>
 800bd80:	f1ba 0f00 	cmp.w	sl, #0
 800bd84:	d10e      	bne.n	800bda4 <_scanf_float+0x1c4>
 800bd86:	f1b9 0f00 	cmp.w	r9, #0
 800bd8a:	d10e      	bne.n	800bdaa <_scanf_float+0x1ca>
 800bd8c:	6822      	ldr	r2, [r4, #0]
 800bd8e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800bd92:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800bd96:	d108      	bne.n	800bdaa <_scanf_float+0x1ca>
 800bd98:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800bd9c:	f04f 0a01 	mov.w	sl, #1
 800bda0:	6022      	str	r2, [r4, #0]
 800bda2:	e7e3      	b.n	800bd6c <_scanf_float+0x18c>
 800bda4:	f1ba 0f02 	cmp.w	sl, #2
 800bda8:	d055      	beq.n	800be56 <_scanf_float+0x276>
 800bdaa:	2d01      	cmp	r5, #1
 800bdac:	d002      	beq.n	800bdb4 <_scanf_float+0x1d4>
 800bdae:	2d04      	cmp	r5, #4
 800bdb0:	f47f af48 	bne.w	800bc44 <_scanf_float+0x64>
 800bdb4:	3501      	adds	r5, #1
 800bdb6:	b2ed      	uxtb	r5, r5
 800bdb8:	e7d8      	b.n	800bd6c <_scanf_float+0x18c>
 800bdba:	f1ba 0f01 	cmp.w	sl, #1
 800bdbe:	f47f af41 	bne.w	800bc44 <_scanf_float+0x64>
 800bdc2:	f04f 0a02 	mov.w	sl, #2
 800bdc6:	e7d1      	b.n	800bd6c <_scanf_float+0x18c>
 800bdc8:	b97d      	cbnz	r5, 800bdea <_scanf_float+0x20a>
 800bdca:	f1b9 0f00 	cmp.w	r9, #0
 800bdce:	f47f af3c 	bne.w	800bc4a <_scanf_float+0x6a>
 800bdd2:	6822      	ldr	r2, [r4, #0]
 800bdd4:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800bdd8:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800bddc:	f47f af39 	bne.w	800bc52 <_scanf_float+0x72>
 800bde0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800bde4:	2501      	movs	r5, #1
 800bde6:	6022      	str	r2, [r4, #0]
 800bde8:	e7c0      	b.n	800bd6c <_scanf_float+0x18c>
 800bdea:	2d03      	cmp	r5, #3
 800bdec:	d0e2      	beq.n	800bdb4 <_scanf_float+0x1d4>
 800bdee:	2d05      	cmp	r5, #5
 800bdf0:	e7de      	b.n	800bdb0 <_scanf_float+0x1d0>
 800bdf2:	2d02      	cmp	r5, #2
 800bdf4:	f47f af26 	bne.w	800bc44 <_scanf_float+0x64>
 800bdf8:	2503      	movs	r5, #3
 800bdfa:	e7b7      	b.n	800bd6c <_scanf_float+0x18c>
 800bdfc:	2d06      	cmp	r5, #6
 800bdfe:	f47f af21 	bne.w	800bc44 <_scanf_float+0x64>
 800be02:	2507      	movs	r5, #7
 800be04:	e7b2      	b.n	800bd6c <_scanf_float+0x18c>
 800be06:	6822      	ldr	r2, [r4, #0]
 800be08:	0591      	lsls	r1, r2, #22
 800be0a:	f57f af1b 	bpl.w	800bc44 <_scanf_float+0x64>
 800be0e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800be12:	6022      	str	r2, [r4, #0]
 800be14:	f8cd 9004 	str.w	r9, [sp, #4]
 800be18:	e7a8      	b.n	800bd6c <_scanf_float+0x18c>
 800be1a:	6822      	ldr	r2, [r4, #0]
 800be1c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800be20:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800be24:	d006      	beq.n	800be34 <_scanf_float+0x254>
 800be26:	0550      	lsls	r0, r2, #21
 800be28:	f57f af0c 	bpl.w	800bc44 <_scanf_float+0x64>
 800be2c:	f1b9 0f00 	cmp.w	r9, #0
 800be30:	f43f af0f 	beq.w	800bc52 <_scanf_float+0x72>
 800be34:	0591      	lsls	r1, r2, #22
 800be36:	bf58      	it	pl
 800be38:	9901      	ldrpl	r1, [sp, #4]
 800be3a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800be3e:	bf58      	it	pl
 800be40:	eba9 0101 	subpl.w	r1, r9, r1
 800be44:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800be48:	f04f 0900 	mov.w	r9, #0
 800be4c:	bf58      	it	pl
 800be4e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800be52:	6022      	str	r2, [r4, #0]
 800be54:	e78a      	b.n	800bd6c <_scanf_float+0x18c>
 800be56:	f04f 0a03 	mov.w	sl, #3
 800be5a:	e787      	b.n	800bd6c <_scanf_float+0x18c>
 800be5c:	4639      	mov	r1, r7
 800be5e:	4640      	mov	r0, r8
 800be60:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800be64:	4798      	blx	r3
 800be66:	2800      	cmp	r0, #0
 800be68:	f43f aedf 	beq.w	800bc2a <_scanf_float+0x4a>
 800be6c:	e6ea      	b.n	800bc44 <_scanf_float+0x64>
 800be6e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800be72:	463a      	mov	r2, r7
 800be74:	4640      	mov	r0, r8
 800be76:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800be7a:	4798      	blx	r3
 800be7c:	6923      	ldr	r3, [r4, #16]
 800be7e:	3b01      	subs	r3, #1
 800be80:	6123      	str	r3, [r4, #16]
 800be82:	e6ec      	b.n	800bc5e <_scanf_float+0x7e>
 800be84:	1e6b      	subs	r3, r5, #1
 800be86:	2b06      	cmp	r3, #6
 800be88:	d825      	bhi.n	800bed6 <_scanf_float+0x2f6>
 800be8a:	2d02      	cmp	r5, #2
 800be8c:	d836      	bhi.n	800befc <_scanf_float+0x31c>
 800be8e:	455e      	cmp	r6, fp
 800be90:	f67f aee8 	bls.w	800bc64 <_scanf_float+0x84>
 800be94:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800be98:	463a      	mov	r2, r7
 800be9a:	4640      	mov	r0, r8
 800be9c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800bea0:	4798      	blx	r3
 800bea2:	6923      	ldr	r3, [r4, #16]
 800bea4:	3b01      	subs	r3, #1
 800bea6:	6123      	str	r3, [r4, #16]
 800bea8:	e7f1      	b.n	800be8e <_scanf_float+0x2ae>
 800beaa:	9802      	ldr	r0, [sp, #8]
 800beac:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800beb0:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800beb4:	463a      	mov	r2, r7
 800beb6:	9002      	str	r0, [sp, #8]
 800beb8:	4640      	mov	r0, r8
 800beba:	4798      	blx	r3
 800bebc:	6923      	ldr	r3, [r4, #16]
 800bebe:	3b01      	subs	r3, #1
 800bec0:	6123      	str	r3, [r4, #16]
 800bec2:	f10a 3aff 	add.w	sl, sl, #4294967295
 800bec6:	fa5f fa8a 	uxtb.w	sl, sl
 800beca:	f1ba 0f02 	cmp.w	sl, #2
 800bece:	d1ec      	bne.n	800beaa <_scanf_float+0x2ca>
 800bed0:	3d03      	subs	r5, #3
 800bed2:	b2ed      	uxtb	r5, r5
 800bed4:	1b76      	subs	r6, r6, r5
 800bed6:	6823      	ldr	r3, [r4, #0]
 800bed8:	05da      	lsls	r2, r3, #23
 800beda:	d52f      	bpl.n	800bf3c <_scanf_float+0x35c>
 800bedc:	055b      	lsls	r3, r3, #21
 800bede:	d510      	bpl.n	800bf02 <_scanf_float+0x322>
 800bee0:	455e      	cmp	r6, fp
 800bee2:	f67f aebf 	bls.w	800bc64 <_scanf_float+0x84>
 800bee6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800beea:	463a      	mov	r2, r7
 800beec:	4640      	mov	r0, r8
 800beee:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800bef2:	4798      	blx	r3
 800bef4:	6923      	ldr	r3, [r4, #16]
 800bef6:	3b01      	subs	r3, #1
 800bef8:	6123      	str	r3, [r4, #16]
 800befa:	e7f1      	b.n	800bee0 <_scanf_float+0x300>
 800befc:	46aa      	mov	sl, r5
 800befe:	9602      	str	r6, [sp, #8]
 800bf00:	e7df      	b.n	800bec2 <_scanf_float+0x2e2>
 800bf02:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800bf06:	6923      	ldr	r3, [r4, #16]
 800bf08:	2965      	cmp	r1, #101	; 0x65
 800bf0a:	f103 33ff 	add.w	r3, r3, #4294967295
 800bf0e:	f106 35ff 	add.w	r5, r6, #4294967295
 800bf12:	6123      	str	r3, [r4, #16]
 800bf14:	d00c      	beq.n	800bf30 <_scanf_float+0x350>
 800bf16:	2945      	cmp	r1, #69	; 0x45
 800bf18:	d00a      	beq.n	800bf30 <_scanf_float+0x350>
 800bf1a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800bf1e:	463a      	mov	r2, r7
 800bf20:	4640      	mov	r0, r8
 800bf22:	4798      	blx	r3
 800bf24:	6923      	ldr	r3, [r4, #16]
 800bf26:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800bf2a:	3b01      	subs	r3, #1
 800bf2c:	1eb5      	subs	r5, r6, #2
 800bf2e:	6123      	str	r3, [r4, #16]
 800bf30:	463a      	mov	r2, r7
 800bf32:	4640      	mov	r0, r8
 800bf34:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800bf38:	4798      	blx	r3
 800bf3a:	462e      	mov	r6, r5
 800bf3c:	6825      	ldr	r5, [r4, #0]
 800bf3e:	f015 0510 	ands.w	r5, r5, #16
 800bf42:	d155      	bne.n	800bff0 <_scanf_float+0x410>
 800bf44:	7035      	strb	r5, [r6, #0]
 800bf46:	6823      	ldr	r3, [r4, #0]
 800bf48:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800bf4c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bf50:	d11b      	bne.n	800bf8a <_scanf_float+0x3aa>
 800bf52:	9b01      	ldr	r3, [sp, #4]
 800bf54:	454b      	cmp	r3, r9
 800bf56:	eba3 0209 	sub.w	r2, r3, r9
 800bf5a:	d123      	bne.n	800bfa4 <_scanf_float+0x3c4>
 800bf5c:	2200      	movs	r2, #0
 800bf5e:	4659      	mov	r1, fp
 800bf60:	4640      	mov	r0, r8
 800bf62:	f000 fee9 	bl	800cd38 <_strtod_r>
 800bf66:	6822      	ldr	r2, [r4, #0]
 800bf68:	9b03      	ldr	r3, [sp, #12]
 800bf6a:	f012 0f02 	tst.w	r2, #2
 800bf6e:	4606      	mov	r6, r0
 800bf70:	460f      	mov	r7, r1
 800bf72:	681b      	ldr	r3, [r3, #0]
 800bf74:	d021      	beq.n	800bfba <_scanf_float+0x3da>
 800bf76:	1d1a      	adds	r2, r3, #4
 800bf78:	9903      	ldr	r1, [sp, #12]
 800bf7a:	600a      	str	r2, [r1, #0]
 800bf7c:	681b      	ldr	r3, [r3, #0]
 800bf7e:	e9c3 6700 	strd	r6, r7, [r3]
 800bf82:	68e3      	ldr	r3, [r4, #12]
 800bf84:	3301      	adds	r3, #1
 800bf86:	60e3      	str	r3, [r4, #12]
 800bf88:	e66d      	b.n	800bc66 <_scanf_float+0x86>
 800bf8a:	9b04      	ldr	r3, [sp, #16]
 800bf8c:	2b00      	cmp	r3, #0
 800bf8e:	d0e5      	beq.n	800bf5c <_scanf_float+0x37c>
 800bf90:	9905      	ldr	r1, [sp, #20]
 800bf92:	230a      	movs	r3, #10
 800bf94:	462a      	mov	r2, r5
 800bf96:	4640      	mov	r0, r8
 800bf98:	3101      	adds	r1, #1
 800bf9a:	f000 ff4f 	bl	800ce3c <_strtol_r>
 800bf9e:	9b04      	ldr	r3, [sp, #16]
 800bfa0:	9e05      	ldr	r6, [sp, #20]
 800bfa2:	1ac2      	subs	r2, r0, r3
 800bfa4:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800bfa8:	429e      	cmp	r6, r3
 800bfaa:	bf28      	it	cs
 800bfac:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800bfb0:	4630      	mov	r0, r6
 800bfb2:	4910      	ldr	r1, [pc, #64]	; (800bff4 <_scanf_float+0x414>)
 800bfb4:	f000 f826 	bl	800c004 <siprintf>
 800bfb8:	e7d0      	b.n	800bf5c <_scanf_float+0x37c>
 800bfba:	f012 0f04 	tst.w	r2, #4
 800bfbe:	f103 0204 	add.w	r2, r3, #4
 800bfc2:	d1d9      	bne.n	800bf78 <_scanf_float+0x398>
 800bfc4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bfc8:	f8cc 2000 	str.w	r2, [ip]
 800bfcc:	f8d3 8000 	ldr.w	r8, [r3]
 800bfd0:	4602      	mov	r2, r0
 800bfd2:	460b      	mov	r3, r1
 800bfd4:	f7f4 fd3c 	bl	8000a50 <__aeabi_dcmpun>
 800bfd8:	b128      	cbz	r0, 800bfe6 <_scanf_float+0x406>
 800bfda:	4807      	ldr	r0, [pc, #28]	; (800bff8 <_scanf_float+0x418>)
 800bfdc:	f000 f80e 	bl	800bffc <nanf>
 800bfe0:	f8c8 0000 	str.w	r0, [r8]
 800bfe4:	e7cd      	b.n	800bf82 <_scanf_float+0x3a2>
 800bfe6:	4630      	mov	r0, r6
 800bfe8:	4639      	mov	r1, r7
 800bfea:	f7f4 fd8f 	bl	8000b0c <__aeabi_d2f>
 800bfee:	e7f7      	b.n	800bfe0 <_scanf_float+0x400>
 800bff0:	2500      	movs	r5, #0
 800bff2:	e638      	b.n	800bc66 <_scanf_float+0x86>
 800bff4:	0801125a 	.word	0x0801125a
 800bff8:	0801167b 	.word	0x0801167b

0800bffc <nanf>:
 800bffc:	4800      	ldr	r0, [pc, #0]	; (800c000 <nanf+0x4>)
 800bffe:	4770      	bx	lr
 800c000:	7fc00000 	.word	0x7fc00000

0800c004 <siprintf>:
 800c004:	b40e      	push	{r1, r2, r3}
 800c006:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800c00a:	b500      	push	{lr}
 800c00c:	b09c      	sub	sp, #112	; 0x70
 800c00e:	ab1d      	add	r3, sp, #116	; 0x74
 800c010:	9002      	str	r0, [sp, #8]
 800c012:	9006      	str	r0, [sp, #24]
 800c014:	9107      	str	r1, [sp, #28]
 800c016:	9104      	str	r1, [sp, #16]
 800c018:	4808      	ldr	r0, [pc, #32]	; (800c03c <siprintf+0x38>)
 800c01a:	4909      	ldr	r1, [pc, #36]	; (800c040 <siprintf+0x3c>)
 800c01c:	f853 2b04 	ldr.w	r2, [r3], #4
 800c020:	9105      	str	r1, [sp, #20]
 800c022:	6800      	ldr	r0, [r0, #0]
 800c024:	a902      	add	r1, sp, #8
 800c026:	9301      	str	r3, [sp, #4]
 800c028:	f002 ff50 	bl	800eecc <_svfiprintf_r>
 800c02c:	2200      	movs	r2, #0
 800c02e:	9b02      	ldr	r3, [sp, #8]
 800c030:	701a      	strb	r2, [r3, #0]
 800c032:	b01c      	add	sp, #112	; 0x70
 800c034:	f85d eb04 	ldr.w	lr, [sp], #4
 800c038:	b003      	add	sp, #12
 800c03a:	4770      	bx	lr
 800c03c:	200001a4 	.word	0x200001a4
 800c040:	ffff0208 	.word	0xffff0208

0800c044 <siscanf>:
 800c044:	b40e      	push	{r1, r2, r3}
 800c046:	f44f 7201 	mov.w	r2, #516	; 0x204
 800c04a:	b530      	push	{r4, r5, lr}
 800c04c:	b09c      	sub	sp, #112	; 0x70
 800c04e:	ac1f      	add	r4, sp, #124	; 0x7c
 800c050:	f854 5b04 	ldr.w	r5, [r4], #4
 800c054:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c058:	9002      	str	r0, [sp, #8]
 800c05a:	9006      	str	r0, [sp, #24]
 800c05c:	f7f4 f89a 	bl	8000194 <strlen>
 800c060:	4b0b      	ldr	r3, [pc, #44]	; (800c090 <siscanf+0x4c>)
 800c062:	9003      	str	r0, [sp, #12]
 800c064:	930b      	str	r3, [sp, #44]	; 0x2c
 800c066:	2300      	movs	r3, #0
 800c068:	930f      	str	r3, [sp, #60]	; 0x3c
 800c06a:	9314      	str	r3, [sp, #80]	; 0x50
 800c06c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c070:	9007      	str	r0, [sp, #28]
 800c072:	4808      	ldr	r0, [pc, #32]	; (800c094 <siscanf+0x50>)
 800c074:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c078:	462a      	mov	r2, r5
 800c07a:	4623      	mov	r3, r4
 800c07c:	a902      	add	r1, sp, #8
 800c07e:	6800      	ldr	r0, [r0, #0]
 800c080:	9401      	str	r4, [sp, #4]
 800c082:	f003 f87d 	bl	800f180 <__ssvfiscanf_r>
 800c086:	b01c      	add	sp, #112	; 0x70
 800c088:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c08c:	b003      	add	sp, #12
 800c08e:	4770      	bx	lr
 800c090:	0800c0bb 	.word	0x0800c0bb
 800c094:	200001a4 	.word	0x200001a4

0800c098 <__sread>:
 800c098:	b510      	push	{r4, lr}
 800c09a:	460c      	mov	r4, r1
 800c09c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c0a0:	f003 fb3a 	bl	800f718 <_read_r>
 800c0a4:	2800      	cmp	r0, #0
 800c0a6:	bfab      	itete	ge
 800c0a8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800c0aa:	89a3      	ldrhlt	r3, [r4, #12]
 800c0ac:	181b      	addge	r3, r3, r0
 800c0ae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800c0b2:	bfac      	ite	ge
 800c0b4:	6563      	strge	r3, [r4, #84]	; 0x54
 800c0b6:	81a3      	strhlt	r3, [r4, #12]
 800c0b8:	bd10      	pop	{r4, pc}

0800c0ba <__seofread>:
 800c0ba:	2000      	movs	r0, #0
 800c0bc:	4770      	bx	lr

0800c0be <__swrite>:
 800c0be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0c2:	461f      	mov	r7, r3
 800c0c4:	898b      	ldrh	r3, [r1, #12]
 800c0c6:	4605      	mov	r5, r0
 800c0c8:	05db      	lsls	r3, r3, #23
 800c0ca:	460c      	mov	r4, r1
 800c0cc:	4616      	mov	r6, r2
 800c0ce:	d505      	bpl.n	800c0dc <__swrite+0x1e>
 800c0d0:	2302      	movs	r3, #2
 800c0d2:	2200      	movs	r2, #0
 800c0d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c0d8:	f002 f8ba 	bl	800e250 <_lseek_r>
 800c0dc:	89a3      	ldrh	r3, [r4, #12]
 800c0de:	4632      	mov	r2, r6
 800c0e0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c0e4:	81a3      	strh	r3, [r4, #12]
 800c0e6:	4628      	mov	r0, r5
 800c0e8:	463b      	mov	r3, r7
 800c0ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c0ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c0f2:	f000 bea5 	b.w	800ce40 <_write_r>

0800c0f6 <__sseek>:
 800c0f6:	b510      	push	{r4, lr}
 800c0f8:	460c      	mov	r4, r1
 800c0fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c0fe:	f002 f8a7 	bl	800e250 <_lseek_r>
 800c102:	1c43      	adds	r3, r0, #1
 800c104:	89a3      	ldrh	r3, [r4, #12]
 800c106:	bf15      	itete	ne
 800c108:	6560      	strne	r0, [r4, #84]	; 0x54
 800c10a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800c10e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800c112:	81a3      	strheq	r3, [r4, #12]
 800c114:	bf18      	it	ne
 800c116:	81a3      	strhne	r3, [r4, #12]
 800c118:	bd10      	pop	{r4, pc}

0800c11a <__sclose>:
 800c11a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c11e:	f000 bea1 	b.w	800ce64 <_close_r>

0800c122 <sulp>:
 800c122:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c126:	460f      	mov	r7, r1
 800c128:	4690      	mov	r8, r2
 800c12a:	f002 fc3b 	bl	800e9a4 <__ulp>
 800c12e:	4604      	mov	r4, r0
 800c130:	460d      	mov	r5, r1
 800c132:	f1b8 0f00 	cmp.w	r8, #0
 800c136:	d011      	beq.n	800c15c <sulp+0x3a>
 800c138:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800c13c:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800c140:	2b00      	cmp	r3, #0
 800c142:	dd0b      	ble.n	800c15c <sulp+0x3a>
 800c144:	2400      	movs	r4, #0
 800c146:	051b      	lsls	r3, r3, #20
 800c148:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800c14c:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800c150:	4622      	mov	r2, r4
 800c152:	462b      	mov	r3, r5
 800c154:	f7f4 f9e2 	bl	800051c <__aeabi_dmul>
 800c158:	4604      	mov	r4, r0
 800c15a:	460d      	mov	r5, r1
 800c15c:	4620      	mov	r0, r4
 800c15e:	4629      	mov	r1, r5
 800c160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c164:	0000      	movs	r0, r0
	...

0800c168 <_strtod_l>:
 800c168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c16c:	469b      	mov	fp, r3
 800c16e:	2300      	movs	r3, #0
 800c170:	b09f      	sub	sp, #124	; 0x7c
 800c172:	931a      	str	r3, [sp, #104]	; 0x68
 800c174:	4b9e      	ldr	r3, [pc, #632]	; (800c3f0 <_strtod_l+0x288>)
 800c176:	4682      	mov	sl, r0
 800c178:	681f      	ldr	r7, [r3, #0]
 800c17a:	460e      	mov	r6, r1
 800c17c:	4638      	mov	r0, r7
 800c17e:	9215      	str	r2, [sp, #84]	; 0x54
 800c180:	f7f4 f808 	bl	8000194 <strlen>
 800c184:	f04f 0800 	mov.w	r8, #0
 800c188:	4604      	mov	r4, r0
 800c18a:	f04f 0900 	mov.w	r9, #0
 800c18e:	9619      	str	r6, [sp, #100]	; 0x64
 800c190:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c192:	781a      	ldrb	r2, [r3, #0]
 800c194:	2a2b      	cmp	r2, #43	; 0x2b
 800c196:	d04c      	beq.n	800c232 <_strtod_l+0xca>
 800c198:	d83a      	bhi.n	800c210 <_strtod_l+0xa8>
 800c19a:	2a0d      	cmp	r2, #13
 800c19c:	d833      	bhi.n	800c206 <_strtod_l+0x9e>
 800c19e:	2a08      	cmp	r2, #8
 800c1a0:	d833      	bhi.n	800c20a <_strtod_l+0xa2>
 800c1a2:	2a00      	cmp	r2, #0
 800c1a4:	d03d      	beq.n	800c222 <_strtod_l+0xba>
 800c1a6:	2300      	movs	r3, #0
 800c1a8:	930a      	str	r3, [sp, #40]	; 0x28
 800c1aa:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c1ac:	782b      	ldrb	r3, [r5, #0]
 800c1ae:	2b30      	cmp	r3, #48	; 0x30
 800c1b0:	f040 80aa 	bne.w	800c308 <_strtod_l+0x1a0>
 800c1b4:	786b      	ldrb	r3, [r5, #1]
 800c1b6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800c1ba:	2b58      	cmp	r3, #88	; 0x58
 800c1bc:	d166      	bne.n	800c28c <_strtod_l+0x124>
 800c1be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c1c0:	4650      	mov	r0, sl
 800c1c2:	9301      	str	r3, [sp, #4]
 800c1c4:	ab1a      	add	r3, sp, #104	; 0x68
 800c1c6:	9300      	str	r3, [sp, #0]
 800c1c8:	4a8a      	ldr	r2, [pc, #552]	; (800c3f4 <_strtod_l+0x28c>)
 800c1ca:	f8cd b008 	str.w	fp, [sp, #8]
 800c1ce:	ab1b      	add	r3, sp, #108	; 0x6c
 800c1d0:	a919      	add	r1, sp, #100	; 0x64
 800c1d2:	f001 fd3b 	bl	800dc4c <__gethex>
 800c1d6:	f010 0607 	ands.w	r6, r0, #7
 800c1da:	4604      	mov	r4, r0
 800c1dc:	d005      	beq.n	800c1ea <_strtod_l+0x82>
 800c1de:	2e06      	cmp	r6, #6
 800c1e0:	d129      	bne.n	800c236 <_strtod_l+0xce>
 800c1e2:	2300      	movs	r3, #0
 800c1e4:	3501      	adds	r5, #1
 800c1e6:	9519      	str	r5, [sp, #100]	; 0x64
 800c1e8:	930a      	str	r3, [sp, #40]	; 0x28
 800c1ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c1ec:	2b00      	cmp	r3, #0
 800c1ee:	f040 858a 	bne.w	800cd06 <_strtod_l+0xb9e>
 800c1f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c1f4:	b1d3      	cbz	r3, 800c22c <_strtod_l+0xc4>
 800c1f6:	4642      	mov	r2, r8
 800c1f8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800c1fc:	4610      	mov	r0, r2
 800c1fe:	4619      	mov	r1, r3
 800c200:	b01f      	add	sp, #124	; 0x7c
 800c202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c206:	2a20      	cmp	r2, #32
 800c208:	d1cd      	bne.n	800c1a6 <_strtod_l+0x3e>
 800c20a:	3301      	adds	r3, #1
 800c20c:	9319      	str	r3, [sp, #100]	; 0x64
 800c20e:	e7bf      	b.n	800c190 <_strtod_l+0x28>
 800c210:	2a2d      	cmp	r2, #45	; 0x2d
 800c212:	d1c8      	bne.n	800c1a6 <_strtod_l+0x3e>
 800c214:	2201      	movs	r2, #1
 800c216:	920a      	str	r2, [sp, #40]	; 0x28
 800c218:	1c5a      	adds	r2, r3, #1
 800c21a:	9219      	str	r2, [sp, #100]	; 0x64
 800c21c:	785b      	ldrb	r3, [r3, #1]
 800c21e:	2b00      	cmp	r3, #0
 800c220:	d1c3      	bne.n	800c1aa <_strtod_l+0x42>
 800c222:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c224:	9619      	str	r6, [sp, #100]	; 0x64
 800c226:	2b00      	cmp	r3, #0
 800c228:	f040 856b 	bne.w	800cd02 <_strtod_l+0xb9a>
 800c22c:	4642      	mov	r2, r8
 800c22e:	464b      	mov	r3, r9
 800c230:	e7e4      	b.n	800c1fc <_strtod_l+0x94>
 800c232:	2200      	movs	r2, #0
 800c234:	e7ef      	b.n	800c216 <_strtod_l+0xae>
 800c236:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c238:	b13a      	cbz	r2, 800c24a <_strtod_l+0xe2>
 800c23a:	2135      	movs	r1, #53	; 0x35
 800c23c:	a81c      	add	r0, sp, #112	; 0x70
 800c23e:	f002 fcb5 	bl	800ebac <__copybits>
 800c242:	4650      	mov	r0, sl
 800c244:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c246:	f002 f87d 	bl	800e344 <_Bfree>
 800c24a:	3e01      	subs	r6, #1
 800c24c:	2e04      	cmp	r6, #4
 800c24e:	d806      	bhi.n	800c25e <_strtod_l+0xf6>
 800c250:	e8df f006 	tbb	[pc, r6]
 800c254:	1714030a 	.word	0x1714030a
 800c258:	0a          	.byte	0x0a
 800c259:	00          	.byte	0x00
 800c25a:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 800c25e:	0721      	lsls	r1, r4, #28
 800c260:	d5c3      	bpl.n	800c1ea <_strtod_l+0x82>
 800c262:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800c266:	e7c0      	b.n	800c1ea <_strtod_l+0x82>
 800c268:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800c26a:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 800c26e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800c272:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800c276:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800c27a:	e7f0      	b.n	800c25e <_strtod_l+0xf6>
 800c27c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800c3f8 <_strtod_l+0x290>
 800c280:	e7ed      	b.n	800c25e <_strtod_l+0xf6>
 800c282:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800c286:	f04f 38ff 	mov.w	r8, #4294967295
 800c28a:	e7e8      	b.n	800c25e <_strtod_l+0xf6>
 800c28c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c28e:	1c5a      	adds	r2, r3, #1
 800c290:	9219      	str	r2, [sp, #100]	; 0x64
 800c292:	785b      	ldrb	r3, [r3, #1]
 800c294:	2b30      	cmp	r3, #48	; 0x30
 800c296:	d0f9      	beq.n	800c28c <_strtod_l+0x124>
 800c298:	2b00      	cmp	r3, #0
 800c29a:	d0a6      	beq.n	800c1ea <_strtod_l+0x82>
 800c29c:	2301      	movs	r3, #1
 800c29e:	9307      	str	r3, [sp, #28]
 800c2a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c2a2:	220a      	movs	r2, #10
 800c2a4:	9308      	str	r3, [sp, #32]
 800c2a6:	2300      	movs	r3, #0
 800c2a8:	469b      	mov	fp, r3
 800c2aa:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c2ae:	9819      	ldr	r0, [sp, #100]	; 0x64
 800c2b0:	7805      	ldrb	r5, [r0, #0]
 800c2b2:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800c2b6:	b2d9      	uxtb	r1, r3
 800c2b8:	2909      	cmp	r1, #9
 800c2ba:	d927      	bls.n	800c30c <_strtod_l+0x1a4>
 800c2bc:	4622      	mov	r2, r4
 800c2be:	4639      	mov	r1, r7
 800c2c0:	f003 fa8a 	bl	800f7d8 <strncmp>
 800c2c4:	2800      	cmp	r0, #0
 800c2c6:	d033      	beq.n	800c330 <_strtod_l+0x1c8>
 800c2c8:	2000      	movs	r0, #0
 800c2ca:	462a      	mov	r2, r5
 800c2cc:	465c      	mov	r4, fp
 800c2ce:	4603      	mov	r3, r0
 800c2d0:	9004      	str	r0, [sp, #16]
 800c2d2:	2a65      	cmp	r2, #101	; 0x65
 800c2d4:	d001      	beq.n	800c2da <_strtod_l+0x172>
 800c2d6:	2a45      	cmp	r2, #69	; 0x45
 800c2d8:	d114      	bne.n	800c304 <_strtod_l+0x19c>
 800c2da:	b91c      	cbnz	r4, 800c2e4 <_strtod_l+0x17c>
 800c2dc:	9a07      	ldr	r2, [sp, #28]
 800c2de:	4302      	orrs	r2, r0
 800c2e0:	d09f      	beq.n	800c222 <_strtod_l+0xba>
 800c2e2:	2400      	movs	r4, #0
 800c2e4:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800c2e6:	1c72      	adds	r2, r6, #1
 800c2e8:	9219      	str	r2, [sp, #100]	; 0x64
 800c2ea:	7872      	ldrb	r2, [r6, #1]
 800c2ec:	2a2b      	cmp	r2, #43	; 0x2b
 800c2ee:	d079      	beq.n	800c3e4 <_strtod_l+0x27c>
 800c2f0:	2a2d      	cmp	r2, #45	; 0x2d
 800c2f2:	f000 8083 	beq.w	800c3fc <_strtod_l+0x294>
 800c2f6:	2700      	movs	r7, #0
 800c2f8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800c2fc:	2909      	cmp	r1, #9
 800c2fe:	f240 8083 	bls.w	800c408 <_strtod_l+0x2a0>
 800c302:	9619      	str	r6, [sp, #100]	; 0x64
 800c304:	2500      	movs	r5, #0
 800c306:	e09f      	b.n	800c448 <_strtod_l+0x2e0>
 800c308:	2300      	movs	r3, #0
 800c30a:	e7c8      	b.n	800c29e <_strtod_l+0x136>
 800c30c:	f1bb 0f08 	cmp.w	fp, #8
 800c310:	bfd5      	itete	le
 800c312:	9906      	ldrle	r1, [sp, #24]
 800c314:	9905      	ldrgt	r1, [sp, #20]
 800c316:	fb02 3301 	mlale	r3, r2, r1, r3
 800c31a:	fb02 3301 	mlagt	r3, r2, r1, r3
 800c31e:	f100 0001 	add.w	r0, r0, #1
 800c322:	bfd4      	ite	le
 800c324:	9306      	strle	r3, [sp, #24]
 800c326:	9305      	strgt	r3, [sp, #20]
 800c328:	f10b 0b01 	add.w	fp, fp, #1
 800c32c:	9019      	str	r0, [sp, #100]	; 0x64
 800c32e:	e7be      	b.n	800c2ae <_strtod_l+0x146>
 800c330:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c332:	191a      	adds	r2, r3, r4
 800c334:	9219      	str	r2, [sp, #100]	; 0x64
 800c336:	5d1a      	ldrb	r2, [r3, r4]
 800c338:	f1bb 0f00 	cmp.w	fp, #0
 800c33c:	d036      	beq.n	800c3ac <_strtod_l+0x244>
 800c33e:	465c      	mov	r4, fp
 800c340:	9004      	str	r0, [sp, #16]
 800c342:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800c346:	2b09      	cmp	r3, #9
 800c348:	d912      	bls.n	800c370 <_strtod_l+0x208>
 800c34a:	2301      	movs	r3, #1
 800c34c:	e7c1      	b.n	800c2d2 <_strtod_l+0x16a>
 800c34e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c350:	3001      	adds	r0, #1
 800c352:	1c5a      	adds	r2, r3, #1
 800c354:	9219      	str	r2, [sp, #100]	; 0x64
 800c356:	785a      	ldrb	r2, [r3, #1]
 800c358:	2a30      	cmp	r2, #48	; 0x30
 800c35a:	d0f8      	beq.n	800c34e <_strtod_l+0x1e6>
 800c35c:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800c360:	2b08      	cmp	r3, #8
 800c362:	f200 84d5 	bhi.w	800cd10 <_strtod_l+0xba8>
 800c366:	9004      	str	r0, [sp, #16]
 800c368:	2000      	movs	r0, #0
 800c36a:	4604      	mov	r4, r0
 800c36c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c36e:	9308      	str	r3, [sp, #32]
 800c370:	3a30      	subs	r2, #48	; 0x30
 800c372:	f100 0301 	add.w	r3, r0, #1
 800c376:	d013      	beq.n	800c3a0 <_strtod_l+0x238>
 800c378:	9904      	ldr	r1, [sp, #16]
 800c37a:	1905      	adds	r5, r0, r4
 800c37c:	4419      	add	r1, r3
 800c37e:	9104      	str	r1, [sp, #16]
 800c380:	4623      	mov	r3, r4
 800c382:	210a      	movs	r1, #10
 800c384:	42ab      	cmp	r3, r5
 800c386:	d113      	bne.n	800c3b0 <_strtod_l+0x248>
 800c388:	1823      	adds	r3, r4, r0
 800c38a:	2b08      	cmp	r3, #8
 800c38c:	f104 0401 	add.w	r4, r4, #1
 800c390:	4404      	add	r4, r0
 800c392:	dc1b      	bgt.n	800c3cc <_strtod_l+0x264>
 800c394:	230a      	movs	r3, #10
 800c396:	9906      	ldr	r1, [sp, #24]
 800c398:	fb03 2301 	mla	r3, r3, r1, r2
 800c39c:	9306      	str	r3, [sp, #24]
 800c39e:	2300      	movs	r3, #0
 800c3a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c3a2:	4618      	mov	r0, r3
 800c3a4:	1c51      	adds	r1, r2, #1
 800c3a6:	9119      	str	r1, [sp, #100]	; 0x64
 800c3a8:	7852      	ldrb	r2, [r2, #1]
 800c3aa:	e7ca      	b.n	800c342 <_strtod_l+0x1da>
 800c3ac:	4658      	mov	r0, fp
 800c3ae:	e7d3      	b.n	800c358 <_strtod_l+0x1f0>
 800c3b0:	2b08      	cmp	r3, #8
 800c3b2:	dc04      	bgt.n	800c3be <_strtod_l+0x256>
 800c3b4:	9f06      	ldr	r7, [sp, #24]
 800c3b6:	434f      	muls	r7, r1
 800c3b8:	9706      	str	r7, [sp, #24]
 800c3ba:	3301      	adds	r3, #1
 800c3bc:	e7e2      	b.n	800c384 <_strtod_l+0x21c>
 800c3be:	1c5f      	adds	r7, r3, #1
 800c3c0:	2f10      	cmp	r7, #16
 800c3c2:	bfde      	ittt	le
 800c3c4:	9f05      	ldrle	r7, [sp, #20]
 800c3c6:	434f      	mulle	r7, r1
 800c3c8:	9705      	strle	r7, [sp, #20]
 800c3ca:	e7f6      	b.n	800c3ba <_strtod_l+0x252>
 800c3cc:	2c10      	cmp	r4, #16
 800c3ce:	bfdf      	itttt	le
 800c3d0:	230a      	movle	r3, #10
 800c3d2:	9905      	ldrle	r1, [sp, #20]
 800c3d4:	fb03 2301 	mlale	r3, r3, r1, r2
 800c3d8:	9305      	strle	r3, [sp, #20]
 800c3da:	e7e0      	b.n	800c39e <_strtod_l+0x236>
 800c3dc:	2300      	movs	r3, #0
 800c3de:	9304      	str	r3, [sp, #16]
 800c3e0:	2301      	movs	r3, #1
 800c3e2:	e77b      	b.n	800c2dc <_strtod_l+0x174>
 800c3e4:	2700      	movs	r7, #0
 800c3e6:	1cb2      	adds	r2, r6, #2
 800c3e8:	9219      	str	r2, [sp, #100]	; 0x64
 800c3ea:	78b2      	ldrb	r2, [r6, #2]
 800c3ec:	e784      	b.n	800c2f8 <_strtod_l+0x190>
 800c3ee:	bf00      	nop
 800c3f0:	080114a8 	.word	0x080114a8
 800c3f4:	08011260 	.word	0x08011260
 800c3f8:	7ff00000 	.word	0x7ff00000
 800c3fc:	2701      	movs	r7, #1
 800c3fe:	e7f2      	b.n	800c3e6 <_strtod_l+0x27e>
 800c400:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c402:	1c51      	adds	r1, r2, #1
 800c404:	9119      	str	r1, [sp, #100]	; 0x64
 800c406:	7852      	ldrb	r2, [r2, #1]
 800c408:	2a30      	cmp	r2, #48	; 0x30
 800c40a:	d0f9      	beq.n	800c400 <_strtod_l+0x298>
 800c40c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800c410:	2908      	cmp	r1, #8
 800c412:	f63f af77 	bhi.w	800c304 <_strtod_l+0x19c>
 800c416:	f04f 0e0a 	mov.w	lr, #10
 800c41a:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800c41e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c420:	9209      	str	r2, [sp, #36]	; 0x24
 800c422:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c424:	1c51      	adds	r1, r2, #1
 800c426:	9119      	str	r1, [sp, #100]	; 0x64
 800c428:	7852      	ldrb	r2, [r2, #1]
 800c42a:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800c42e:	2d09      	cmp	r5, #9
 800c430:	d935      	bls.n	800c49e <_strtod_l+0x336>
 800c432:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800c434:	1b49      	subs	r1, r1, r5
 800c436:	2908      	cmp	r1, #8
 800c438:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800c43c:	dc02      	bgt.n	800c444 <_strtod_l+0x2dc>
 800c43e:	4565      	cmp	r5, ip
 800c440:	bfa8      	it	ge
 800c442:	4665      	movge	r5, ip
 800c444:	b107      	cbz	r7, 800c448 <_strtod_l+0x2e0>
 800c446:	426d      	negs	r5, r5
 800c448:	2c00      	cmp	r4, #0
 800c44a:	d14c      	bne.n	800c4e6 <_strtod_l+0x37e>
 800c44c:	9907      	ldr	r1, [sp, #28]
 800c44e:	4301      	orrs	r1, r0
 800c450:	f47f aecb 	bne.w	800c1ea <_strtod_l+0x82>
 800c454:	2b00      	cmp	r3, #0
 800c456:	f47f aee4 	bne.w	800c222 <_strtod_l+0xba>
 800c45a:	2a69      	cmp	r2, #105	; 0x69
 800c45c:	d026      	beq.n	800c4ac <_strtod_l+0x344>
 800c45e:	dc23      	bgt.n	800c4a8 <_strtod_l+0x340>
 800c460:	2a49      	cmp	r2, #73	; 0x49
 800c462:	d023      	beq.n	800c4ac <_strtod_l+0x344>
 800c464:	2a4e      	cmp	r2, #78	; 0x4e
 800c466:	f47f aedc 	bne.w	800c222 <_strtod_l+0xba>
 800c46a:	499d      	ldr	r1, [pc, #628]	; (800c6e0 <_strtod_l+0x578>)
 800c46c:	a819      	add	r0, sp, #100	; 0x64
 800c46e:	f001 fe3b 	bl	800e0e8 <__match>
 800c472:	2800      	cmp	r0, #0
 800c474:	f43f aed5 	beq.w	800c222 <_strtod_l+0xba>
 800c478:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c47a:	781b      	ldrb	r3, [r3, #0]
 800c47c:	2b28      	cmp	r3, #40	; 0x28
 800c47e:	d12c      	bne.n	800c4da <_strtod_l+0x372>
 800c480:	4998      	ldr	r1, [pc, #608]	; (800c6e4 <_strtod_l+0x57c>)
 800c482:	aa1c      	add	r2, sp, #112	; 0x70
 800c484:	a819      	add	r0, sp, #100	; 0x64
 800c486:	f001 fe43 	bl	800e110 <__hexnan>
 800c48a:	2805      	cmp	r0, #5
 800c48c:	d125      	bne.n	800c4da <_strtod_l+0x372>
 800c48e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800c490:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800c494:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800c498:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800c49c:	e6a5      	b.n	800c1ea <_strtod_l+0x82>
 800c49e:	fb0e 2c0c 	mla	ip, lr, ip, r2
 800c4a2:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800c4a6:	e7bc      	b.n	800c422 <_strtod_l+0x2ba>
 800c4a8:	2a6e      	cmp	r2, #110	; 0x6e
 800c4aa:	e7dc      	b.n	800c466 <_strtod_l+0x2fe>
 800c4ac:	498e      	ldr	r1, [pc, #568]	; (800c6e8 <_strtod_l+0x580>)
 800c4ae:	a819      	add	r0, sp, #100	; 0x64
 800c4b0:	f001 fe1a 	bl	800e0e8 <__match>
 800c4b4:	2800      	cmp	r0, #0
 800c4b6:	f43f aeb4 	beq.w	800c222 <_strtod_l+0xba>
 800c4ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c4bc:	498b      	ldr	r1, [pc, #556]	; (800c6ec <_strtod_l+0x584>)
 800c4be:	3b01      	subs	r3, #1
 800c4c0:	a819      	add	r0, sp, #100	; 0x64
 800c4c2:	9319      	str	r3, [sp, #100]	; 0x64
 800c4c4:	f001 fe10 	bl	800e0e8 <__match>
 800c4c8:	b910      	cbnz	r0, 800c4d0 <_strtod_l+0x368>
 800c4ca:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c4cc:	3301      	adds	r3, #1
 800c4ce:	9319      	str	r3, [sp, #100]	; 0x64
 800c4d0:	f04f 0800 	mov.w	r8, #0
 800c4d4:	f8df 9218 	ldr.w	r9, [pc, #536]	; 800c6f0 <_strtod_l+0x588>
 800c4d8:	e687      	b.n	800c1ea <_strtod_l+0x82>
 800c4da:	4886      	ldr	r0, [pc, #536]	; (800c6f4 <_strtod_l+0x58c>)
 800c4dc:	f003 f92e 	bl	800f73c <nan>
 800c4e0:	4680      	mov	r8, r0
 800c4e2:	4689      	mov	r9, r1
 800c4e4:	e681      	b.n	800c1ea <_strtod_l+0x82>
 800c4e6:	9b04      	ldr	r3, [sp, #16]
 800c4e8:	f1bb 0f00 	cmp.w	fp, #0
 800c4ec:	bf08      	it	eq
 800c4ee:	46a3      	moveq	fp, r4
 800c4f0:	1aeb      	subs	r3, r5, r3
 800c4f2:	2c10      	cmp	r4, #16
 800c4f4:	9806      	ldr	r0, [sp, #24]
 800c4f6:	4626      	mov	r6, r4
 800c4f8:	9307      	str	r3, [sp, #28]
 800c4fa:	bfa8      	it	ge
 800c4fc:	2610      	movge	r6, #16
 800c4fe:	f7f3 ff93 	bl	8000428 <__aeabi_ui2d>
 800c502:	2c09      	cmp	r4, #9
 800c504:	4680      	mov	r8, r0
 800c506:	4689      	mov	r9, r1
 800c508:	dd13      	ble.n	800c532 <_strtod_l+0x3ca>
 800c50a:	4b7b      	ldr	r3, [pc, #492]	; (800c6f8 <_strtod_l+0x590>)
 800c50c:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800c510:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800c514:	f7f4 f802 	bl	800051c <__aeabi_dmul>
 800c518:	4680      	mov	r8, r0
 800c51a:	9805      	ldr	r0, [sp, #20]
 800c51c:	4689      	mov	r9, r1
 800c51e:	f7f3 ff83 	bl	8000428 <__aeabi_ui2d>
 800c522:	4602      	mov	r2, r0
 800c524:	460b      	mov	r3, r1
 800c526:	4640      	mov	r0, r8
 800c528:	4649      	mov	r1, r9
 800c52a:	f7f3 fe41 	bl	80001b0 <__adddf3>
 800c52e:	4680      	mov	r8, r0
 800c530:	4689      	mov	r9, r1
 800c532:	2c0f      	cmp	r4, #15
 800c534:	dc36      	bgt.n	800c5a4 <_strtod_l+0x43c>
 800c536:	9b07      	ldr	r3, [sp, #28]
 800c538:	2b00      	cmp	r3, #0
 800c53a:	f43f ae56 	beq.w	800c1ea <_strtod_l+0x82>
 800c53e:	dd22      	ble.n	800c586 <_strtod_l+0x41e>
 800c540:	2b16      	cmp	r3, #22
 800c542:	dc09      	bgt.n	800c558 <_strtod_l+0x3f0>
 800c544:	496c      	ldr	r1, [pc, #432]	; (800c6f8 <_strtod_l+0x590>)
 800c546:	4642      	mov	r2, r8
 800c548:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c54c:	464b      	mov	r3, r9
 800c54e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c552:	f7f3 ffe3 	bl	800051c <__aeabi_dmul>
 800c556:	e7c3      	b.n	800c4e0 <_strtod_l+0x378>
 800c558:	9a07      	ldr	r2, [sp, #28]
 800c55a:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800c55e:	4293      	cmp	r3, r2
 800c560:	db20      	blt.n	800c5a4 <_strtod_l+0x43c>
 800c562:	4d65      	ldr	r5, [pc, #404]	; (800c6f8 <_strtod_l+0x590>)
 800c564:	f1c4 040f 	rsb	r4, r4, #15
 800c568:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 800c56c:	4642      	mov	r2, r8
 800c56e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c572:	464b      	mov	r3, r9
 800c574:	f7f3 ffd2 	bl	800051c <__aeabi_dmul>
 800c578:	9b07      	ldr	r3, [sp, #28]
 800c57a:	1b1c      	subs	r4, r3, r4
 800c57c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800c580:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c584:	e7e5      	b.n	800c552 <_strtod_l+0x3ea>
 800c586:	9b07      	ldr	r3, [sp, #28]
 800c588:	3316      	adds	r3, #22
 800c58a:	db0b      	blt.n	800c5a4 <_strtod_l+0x43c>
 800c58c:	9b04      	ldr	r3, [sp, #16]
 800c58e:	4640      	mov	r0, r8
 800c590:	1b5d      	subs	r5, r3, r5
 800c592:	4b59      	ldr	r3, [pc, #356]	; (800c6f8 <_strtod_l+0x590>)
 800c594:	4649      	mov	r1, r9
 800c596:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800c59a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c59e:	f7f4 f8e7 	bl	8000770 <__aeabi_ddiv>
 800c5a2:	e79d      	b.n	800c4e0 <_strtod_l+0x378>
 800c5a4:	9b07      	ldr	r3, [sp, #28]
 800c5a6:	1ba6      	subs	r6, r4, r6
 800c5a8:	441e      	add	r6, r3
 800c5aa:	2e00      	cmp	r6, #0
 800c5ac:	dd74      	ble.n	800c698 <_strtod_l+0x530>
 800c5ae:	f016 030f 	ands.w	r3, r6, #15
 800c5b2:	d00a      	beq.n	800c5ca <_strtod_l+0x462>
 800c5b4:	4950      	ldr	r1, [pc, #320]	; (800c6f8 <_strtod_l+0x590>)
 800c5b6:	4642      	mov	r2, r8
 800c5b8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c5bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c5c0:	464b      	mov	r3, r9
 800c5c2:	f7f3 ffab 	bl	800051c <__aeabi_dmul>
 800c5c6:	4680      	mov	r8, r0
 800c5c8:	4689      	mov	r9, r1
 800c5ca:	f036 060f 	bics.w	r6, r6, #15
 800c5ce:	d052      	beq.n	800c676 <_strtod_l+0x50e>
 800c5d0:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800c5d4:	dd27      	ble.n	800c626 <_strtod_l+0x4be>
 800c5d6:	f04f 0b00 	mov.w	fp, #0
 800c5da:	f8cd b010 	str.w	fp, [sp, #16]
 800c5de:	f8cd b020 	str.w	fp, [sp, #32]
 800c5e2:	f8cd b018 	str.w	fp, [sp, #24]
 800c5e6:	2322      	movs	r3, #34	; 0x22
 800c5e8:	f04f 0800 	mov.w	r8, #0
 800c5ec:	f8df 9100 	ldr.w	r9, [pc, #256]	; 800c6f0 <_strtod_l+0x588>
 800c5f0:	f8ca 3000 	str.w	r3, [sl]
 800c5f4:	9b08      	ldr	r3, [sp, #32]
 800c5f6:	2b00      	cmp	r3, #0
 800c5f8:	f43f adf7 	beq.w	800c1ea <_strtod_l+0x82>
 800c5fc:	4650      	mov	r0, sl
 800c5fe:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c600:	f001 fea0 	bl	800e344 <_Bfree>
 800c604:	4650      	mov	r0, sl
 800c606:	9906      	ldr	r1, [sp, #24]
 800c608:	f001 fe9c 	bl	800e344 <_Bfree>
 800c60c:	4650      	mov	r0, sl
 800c60e:	9904      	ldr	r1, [sp, #16]
 800c610:	f001 fe98 	bl	800e344 <_Bfree>
 800c614:	4650      	mov	r0, sl
 800c616:	9908      	ldr	r1, [sp, #32]
 800c618:	f001 fe94 	bl	800e344 <_Bfree>
 800c61c:	4659      	mov	r1, fp
 800c61e:	4650      	mov	r0, sl
 800c620:	f001 fe90 	bl	800e344 <_Bfree>
 800c624:	e5e1      	b.n	800c1ea <_strtod_l+0x82>
 800c626:	4b35      	ldr	r3, [pc, #212]	; (800c6fc <_strtod_l+0x594>)
 800c628:	4640      	mov	r0, r8
 800c62a:	9305      	str	r3, [sp, #20]
 800c62c:	2300      	movs	r3, #0
 800c62e:	4649      	mov	r1, r9
 800c630:	461f      	mov	r7, r3
 800c632:	1136      	asrs	r6, r6, #4
 800c634:	2e01      	cmp	r6, #1
 800c636:	dc21      	bgt.n	800c67c <_strtod_l+0x514>
 800c638:	b10b      	cbz	r3, 800c63e <_strtod_l+0x4d6>
 800c63a:	4680      	mov	r8, r0
 800c63c:	4689      	mov	r9, r1
 800c63e:	4b2f      	ldr	r3, [pc, #188]	; (800c6fc <_strtod_l+0x594>)
 800c640:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800c644:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800c648:	4642      	mov	r2, r8
 800c64a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800c64e:	464b      	mov	r3, r9
 800c650:	f7f3 ff64 	bl	800051c <__aeabi_dmul>
 800c654:	4b26      	ldr	r3, [pc, #152]	; (800c6f0 <_strtod_l+0x588>)
 800c656:	460a      	mov	r2, r1
 800c658:	400b      	ands	r3, r1
 800c65a:	4929      	ldr	r1, [pc, #164]	; (800c700 <_strtod_l+0x598>)
 800c65c:	4680      	mov	r8, r0
 800c65e:	428b      	cmp	r3, r1
 800c660:	d8b9      	bhi.n	800c5d6 <_strtod_l+0x46e>
 800c662:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800c666:	428b      	cmp	r3, r1
 800c668:	bf86      	itte	hi
 800c66a:	f04f 38ff 	movhi.w	r8, #4294967295
 800c66e:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 800c704 <_strtod_l+0x59c>
 800c672:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800c676:	2300      	movs	r3, #0
 800c678:	9305      	str	r3, [sp, #20]
 800c67a:	e07f      	b.n	800c77c <_strtod_l+0x614>
 800c67c:	07f2      	lsls	r2, r6, #31
 800c67e:	d505      	bpl.n	800c68c <_strtod_l+0x524>
 800c680:	9b05      	ldr	r3, [sp, #20]
 800c682:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c686:	f7f3 ff49 	bl	800051c <__aeabi_dmul>
 800c68a:	2301      	movs	r3, #1
 800c68c:	9a05      	ldr	r2, [sp, #20]
 800c68e:	3701      	adds	r7, #1
 800c690:	3208      	adds	r2, #8
 800c692:	1076      	asrs	r6, r6, #1
 800c694:	9205      	str	r2, [sp, #20]
 800c696:	e7cd      	b.n	800c634 <_strtod_l+0x4cc>
 800c698:	d0ed      	beq.n	800c676 <_strtod_l+0x50e>
 800c69a:	4276      	negs	r6, r6
 800c69c:	f016 020f 	ands.w	r2, r6, #15
 800c6a0:	d00a      	beq.n	800c6b8 <_strtod_l+0x550>
 800c6a2:	4b15      	ldr	r3, [pc, #84]	; (800c6f8 <_strtod_l+0x590>)
 800c6a4:	4640      	mov	r0, r8
 800c6a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c6aa:	4649      	mov	r1, r9
 800c6ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c6b0:	f7f4 f85e 	bl	8000770 <__aeabi_ddiv>
 800c6b4:	4680      	mov	r8, r0
 800c6b6:	4689      	mov	r9, r1
 800c6b8:	1136      	asrs	r6, r6, #4
 800c6ba:	d0dc      	beq.n	800c676 <_strtod_l+0x50e>
 800c6bc:	2e1f      	cmp	r6, #31
 800c6be:	dd23      	ble.n	800c708 <_strtod_l+0x5a0>
 800c6c0:	f04f 0b00 	mov.w	fp, #0
 800c6c4:	f8cd b010 	str.w	fp, [sp, #16]
 800c6c8:	f8cd b020 	str.w	fp, [sp, #32]
 800c6cc:	f8cd b018 	str.w	fp, [sp, #24]
 800c6d0:	2322      	movs	r3, #34	; 0x22
 800c6d2:	f04f 0800 	mov.w	r8, #0
 800c6d6:	f04f 0900 	mov.w	r9, #0
 800c6da:	f8ca 3000 	str.w	r3, [sl]
 800c6de:	e789      	b.n	800c5f4 <_strtod_l+0x48c>
 800c6e0:	08011235 	.word	0x08011235
 800c6e4:	08011274 	.word	0x08011274
 800c6e8:	0801122d 	.word	0x0801122d
 800c6ec:	080113b4 	.word	0x080113b4
 800c6f0:	7ff00000 	.word	0x7ff00000
 800c6f4:	0801167b 	.word	0x0801167b
 800c6f8:	08011540 	.word	0x08011540
 800c6fc:	08011518 	.word	0x08011518
 800c700:	7ca00000 	.word	0x7ca00000
 800c704:	7fefffff 	.word	0x7fefffff
 800c708:	f016 0310 	ands.w	r3, r6, #16
 800c70c:	bf18      	it	ne
 800c70e:	236a      	movne	r3, #106	; 0x6a
 800c710:	4640      	mov	r0, r8
 800c712:	9305      	str	r3, [sp, #20]
 800c714:	4649      	mov	r1, r9
 800c716:	2300      	movs	r3, #0
 800c718:	4fb0      	ldr	r7, [pc, #704]	; (800c9dc <_strtod_l+0x874>)
 800c71a:	07f2      	lsls	r2, r6, #31
 800c71c:	d504      	bpl.n	800c728 <_strtod_l+0x5c0>
 800c71e:	e9d7 2300 	ldrd	r2, r3, [r7]
 800c722:	f7f3 fefb 	bl	800051c <__aeabi_dmul>
 800c726:	2301      	movs	r3, #1
 800c728:	1076      	asrs	r6, r6, #1
 800c72a:	f107 0708 	add.w	r7, r7, #8
 800c72e:	d1f4      	bne.n	800c71a <_strtod_l+0x5b2>
 800c730:	b10b      	cbz	r3, 800c736 <_strtod_l+0x5ce>
 800c732:	4680      	mov	r8, r0
 800c734:	4689      	mov	r9, r1
 800c736:	9b05      	ldr	r3, [sp, #20]
 800c738:	b1c3      	cbz	r3, 800c76c <_strtod_l+0x604>
 800c73a:	f3c9 520a 	ubfx	r2, r9, #20, #11
 800c73e:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800c742:	2b00      	cmp	r3, #0
 800c744:	4649      	mov	r1, r9
 800c746:	dd11      	ble.n	800c76c <_strtod_l+0x604>
 800c748:	2b1f      	cmp	r3, #31
 800c74a:	f340 8127 	ble.w	800c99c <_strtod_l+0x834>
 800c74e:	2b34      	cmp	r3, #52	; 0x34
 800c750:	bfd8      	it	le
 800c752:	f04f 33ff 	movle.w	r3, #4294967295
 800c756:	f04f 0800 	mov.w	r8, #0
 800c75a:	bfcf      	iteee	gt
 800c75c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800c760:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800c764:	fa03 f202 	lslle.w	r2, r3, r2
 800c768:	ea02 0901 	andle.w	r9, r2, r1
 800c76c:	2200      	movs	r2, #0
 800c76e:	2300      	movs	r3, #0
 800c770:	4640      	mov	r0, r8
 800c772:	4649      	mov	r1, r9
 800c774:	f7f4 f93a 	bl	80009ec <__aeabi_dcmpeq>
 800c778:	2800      	cmp	r0, #0
 800c77a:	d1a1      	bne.n	800c6c0 <_strtod_l+0x558>
 800c77c:	9b06      	ldr	r3, [sp, #24]
 800c77e:	465a      	mov	r2, fp
 800c780:	9300      	str	r3, [sp, #0]
 800c782:	4650      	mov	r0, sl
 800c784:	4623      	mov	r3, r4
 800c786:	9908      	ldr	r1, [sp, #32]
 800c788:	f001 fe44 	bl	800e414 <__s2b>
 800c78c:	9008      	str	r0, [sp, #32]
 800c78e:	2800      	cmp	r0, #0
 800c790:	f43f af21 	beq.w	800c5d6 <_strtod_l+0x46e>
 800c794:	9b04      	ldr	r3, [sp, #16]
 800c796:	f04f 0b00 	mov.w	fp, #0
 800c79a:	1b5d      	subs	r5, r3, r5
 800c79c:	9b07      	ldr	r3, [sp, #28]
 800c79e:	f8cd b010 	str.w	fp, [sp, #16]
 800c7a2:	2b00      	cmp	r3, #0
 800c7a4:	bfb4      	ite	lt
 800c7a6:	462b      	movlt	r3, r5
 800c7a8:	2300      	movge	r3, #0
 800c7aa:	930e      	str	r3, [sp, #56]	; 0x38
 800c7ac:	9b07      	ldr	r3, [sp, #28]
 800c7ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c7b2:	9314      	str	r3, [sp, #80]	; 0x50
 800c7b4:	9b08      	ldr	r3, [sp, #32]
 800c7b6:	4650      	mov	r0, sl
 800c7b8:	6859      	ldr	r1, [r3, #4]
 800c7ba:	f001 fd83 	bl	800e2c4 <_Balloc>
 800c7be:	9006      	str	r0, [sp, #24]
 800c7c0:	2800      	cmp	r0, #0
 800c7c2:	f43f af10 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c7c6:	9b08      	ldr	r3, [sp, #32]
 800c7c8:	300c      	adds	r0, #12
 800c7ca:	691a      	ldr	r2, [r3, #16]
 800c7cc:	f103 010c 	add.w	r1, r3, #12
 800c7d0:	3202      	adds	r2, #2
 800c7d2:	0092      	lsls	r2, r2, #2
 800c7d4:	f7fe fd8e 	bl	800b2f4 <memcpy>
 800c7d8:	ab1c      	add	r3, sp, #112	; 0x70
 800c7da:	9301      	str	r3, [sp, #4]
 800c7dc:	ab1b      	add	r3, sp, #108	; 0x6c
 800c7de:	9300      	str	r3, [sp, #0]
 800c7e0:	4642      	mov	r2, r8
 800c7e2:	464b      	mov	r3, r9
 800c7e4:	4650      	mov	r0, sl
 800c7e6:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 800c7ea:	f002 f955 	bl	800ea98 <__d2b>
 800c7ee:	901a      	str	r0, [sp, #104]	; 0x68
 800c7f0:	2800      	cmp	r0, #0
 800c7f2:	f43f aef8 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c7f6:	2101      	movs	r1, #1
 800c7f8:	4650      	mov	r0, sl
 800c7fa:	f001 fea3 	bl	800e544 <__i2b>
 800c7fe:	4603      	mov	r3, r0
 800c800:	9004      	str	r0, [sp, #16]
 800c802:	2800      	cmp	r0, #0
 800c804:	f43f aeef 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c808:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c80a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c80c:	2d00      	cmp	r5, #0
 800c80e:	bfab      	itete	ge
 800c810:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 800c812:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 800c814:	18ee      	addge	r6, r5, r3
 800c816:	1b5c      	sublt	r4, r3, r5
 800c818:	9b05      	ldr	r3, [sp, #20]
 800c81a:	bfa8      	it	ge
 800c81c:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 800c81e:	eba5 0503 	sub.w	r5, r5, r3
 800c822:	4415      	add	r5, r2
 800c824:	4b6e      	ldr	r3, [pc, #440]	; (800c9e0 <_strtod_l+0x878>)
 800c826:	f105 35ff 	add.w	r5, r5, #4294967295
 800c82a:	bfb8      	it	lt
 800c82c:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800c82e:	429d      	cmp	r5, r3
 800c830:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800c834:	f280 80c4 	bge.w	800c9c0 <_strtod_l+0x858>
 800c838:	1b5b      	subs	r3, r3, r5
 800c83a:	2b1f      	cmp	r3, #31
 800c83c:	f04f 0701 	mov.w	r7, #1
 800c840:	eba2 0203 	sub.w	r2, r2, r3
 800c844:	f300 80b1 	bgt.w	800c9aa <_strtod_l+0x842>
 800c848:	2500      	movs	r5, #0
 800c84a:	fa07 f303 	lsl.w	r3, r7, r3
 800c84e:	930f      	str	r3, [sp, #60]	; 0x3c
 800c850:	18b7      	adds	r7, r6, r2
 800c852:	9b05      	ldr	r3, [sp, #20]
 800c854:	42be      	cmp	r6, r7
 800c856:	4414      	add	r4, r2
 800c858:	441c      	add	r4, r3
 800c85a:	4633      	mov	r3, r6
 800c85c:	bfa8      	it	ge
 800c85e:	463b      	movge	r3, r7
 800c860:	42a3      	cmp	r3, r4
 800c862:	bfa8      	it	ge
 800c864:	4623      	movge	r3, r4
 800c866:	2b00      	cmp	r3, #0
 800c868:	bfc2      	ittt	gt
 800c86a:	1aff      	subgt	r7, r7, r3
 800c86c:	1ae4      	subgt	r4, r4, r3
 800c86e:	1af6      	subgt	r6, r6, r3
 800c870:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c872:	2b00      	cmp	r3, #0
 800c874:	dd17      	ble.n	800c8a6 <_strtod_l+0x73e>
 800c876:	461a      	mov	r2, r3
 800c878:	4650      	mov	r0, sl
 800c87a:	9904      	ldr	r1, [sp, #16]
 800c87c:	f001 ff20 	bl	800e6c0 <__pow5mult>
 800c880:	9004      	str	r0, [sp, #16]
 800c882:	2800      	cmp	r0, #0
 800c884:	f43f aeaf 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c888:	4601      	mov	r1, r0
 800c88a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c88c:	4650      	mov	r0, sl
 800c88e:	f001 fe6f 	bl	800e570 <__multiply>
 800c892:	9009      	str	r0, [sp, #36]	; 0x24
 800c894:	2800      	cmp	r0, #0
 800c896:	f43f aea6 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c89a:	4650      	mov	r0, sl
 800c89c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c89e:	f001 fd51 	bl	800e344 <_Bfree>
 800c8a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c8a4:	931a      	str	r3, [sp, #104]	; 0x68
 800c8a6:	2f00      	cmp	r7, #0
 800c8a8:	f300 808e 	bgt.w	800c9c8 <_strtod_l+0x860>
 800c8ac:	9b07      	ldr	r3, [sp, #28]
 800c8ae:	2b00      	cmp	r3, #0
 800c8b0:	dd08      	ble.n	800c8c4 <_strtod_l+0x75c>
 800c8b2:	4650      	mov	r0, sl
 800c8b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c8b6:	9906      	ldr	r1, [sp, #24]
 800c8b8:	f001 ff02 	bl	800e6c0 <__pow5mult>
 800c8bc:	9006      	str	r0, [sp, #24]
 800c8be:	2800      	cmp	r0, #0
 800c8c0:	f43f ae91 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c8c4:	2c00      	cmp	r4, #0
 800c8c6:	dd08      	ble.n	800c8da <_strtod_l+0x772>
 800c8c8:	4622      	mov	r2, r4
 800c8ca:	4650      	mov	r0, sl
 800c8cc:	9906      	ldr	r1, [sp, #24]
 800c8ce:	f001 ff51 	bl	800e774 <__lshift>
 800c8d2:	9006      	str	r0, [sp, #24]
 800c8d4:	2800      	cmp	r0, #0
 800c8d6:	f43f ae86 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c8da:	2e00      	cmp	r6, #0
 800c8dc:	dd08      	ble.n	800c8f0 <_strtod_l+0x788>
 800c8de:	4632      	mov	r2, r6
 800c8e0:	4650      	mov	r0, sl
 800c8e2:	9904      	ldr	r1, [sp, #16]
 800c8e4:	f001 ff46 	bl	800e774 <__lshift>
 800c8e8:	9004      	str	r0, [sp, #16]
 800c8ea:	2800      	cmp	r0, #0
 800c8ec:	f43f ae7b 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c8f0:	4650      	mov	r0, sl
 800c8f2:	9a06      	ldr	r2, [sp, #24]
 800c8f4:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c8f6:	f001 ffc9 	bl	800e88c <__mdiff>
 800c8fa:	4683      	mov	fp, r0
 800c8fc:	2800      	cmp	r0, #0
 800c8fe:	f43f ae72 	beq.w	800c5e6 <_strtod_l+0x47e>
 800c902:	2400      	movs	r4, #0
 800c904:	68c3      	ldr	r3, [r0, #12]
 800c906:	9904      	ldr	r1, [sp, #16]
 800c908:	60c4      	str	r4, [r0, #12]
 800c90a:	930b      	str	r3, [sp, #44]	; 0x2c
 800c90c:	f001 ffa2 	bl	800e854 <__mcmp>
 800c910:	42a0      	cmp	r0, r4
 800c912:	da6b      	bge.n	800c9ec <_strtod_l+0x884>
 800c914:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c916:	ea53 0308 	orrs.w	r3, r3, r8
 800c91a:	f040 8091 	bne.w	800ca40 <_strtod_l+0x8d8>
 800c91e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c922:	2b00      	cmp	r3, #0
 800c924:	f040 808c 	bne.w	800ca40 <_strtod_l+0x8d8>
 800c928:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c92c:	0d1b      	lsrs	r3, r3, #20
 800c92e:	051b      	lsls	r3, r3, #20
 800c930:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800c934:	f240 8084 	bls.w	800ca40 <_strtod_l+0x8d8>
 800c938:	f8db 3014 	ldr.w	r3, [fp, #20]
 800c93c:	b91b      	cbnz	r3, 800c946 <_strtod_l+0x7de>
 800c93e:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c942:	2b01      	cmp	r3, #1
 800c944:	dd7c      	ble.n	800ca40 <_strtod_l+0x8d8>
 800c946:	4659      	mov	r1, fp
 800c948:	2201      	movs	r2, #1
 800c94a:	4650      	mov	r0, sl
 800c94c:	f001 ff12 	bl	800e774 <__lshift>
 800c950:	9904      	ldr	r1, [sp, #16]
 800c952:	4683      	mov	fp, r0
 800c954:	f001 ff7e 	bl	800e854 <__mcmp>
 800c958:	2800      	cmp	r0, #0
 800c95a:	dd71      	ble.n	800ca40 <_strtod_l+0x8d8>
 800c95c:	9905      	ldr	r1, [sp, #20]
 800c95e:	464b      	mov	r3, r9
 800c960:	4a20      	ldr	r2, [pc, #128]	; (800c9e4 <_strtod_l+0x87c>)
 800c962:	2900      	cmp	r1, #0
 800c964:	f000 808c 	beq.w	800ca80 <_strtod_l+0x918>
 800c968:	ea02 0109 	and.w	r1, r2, r9
 800c96c:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800c970:	f300 8086 	bgt.w	800ca80 <_strtod_l+0x918>
 800c974:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800c978:	f77f aeaa 	ble.w	800c6d0 <_strtod_l+0x568>
 800c97c:	4640      	mov	r0, r8
 800c97e:	4649      	mov	r1, r9
 800c980:	4b19      	ldr	r3, [pc, #100]	; (800c9e8 <_strtod_l+0x880>)
 800c982:	2200      	movs	r2, #0
 800c984:	f7f3 fdca 	bl	800051c <__aeabi_dmul>
 800c988:	460b      	mov	r3, r1
 800c98a:	4303      	orrs	r3, r0
 800c98c:	bf08      	it	eq
 800c98e:	2322      	moveq	r3, #34	; 0x22
 800c990:	4680      	mov	r8, r0
 800c992:	4689      	mov	r9, r1
 800c994:	bf08      	it	eq
 800c996:	f8ca 3000 	streq.w	r3, [sl]
 800c99a:	e62f      	b.n	800c5fc <_strtod_l+0x494>
 800c99c:	f04f 32ff 	mov.w	r2, #4294967295
 800c9a0:	fa02 f303 	lsl.w	r3, r2, r3
 800c9a4:	ea03 0808 	and.w	r8, r3, r8
 800c9a8:	e6e0      	b.n	800c76c <_strtod_l+0x604>
 800c9aa:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800c9ae:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800c9b2:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800c9b6:	35e2      	adds	r5, #226	; 0xe2
 800c9b8:	fa07 f505 	lsl.w	r5, r7, r5
 800c9bc:	970f      	str	r7, [sp, #60]	; 0x3c
 800c9be:	e747      	b.n	800c850 <_strtod_l+0x6e8>
 800c9c0:	2301      	movs	r3, #1
 800c9c2:	2500      	movs	r5, #0
 800c9c4:	930f      	str	r3, [sp, #60]	; 0x3c
 800c9c6:	e743      	b.n	800c850 <_strtod_l+0x6e8>
 800c9c8:	463a      	mov	r2, r7
 800c9ca:	4650      	mov	r0, sl
 800c9cc:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c9ce:	f001 fed1 	bl	800e774 <__lshift>
 800c9d2:	901a      	str	r0, [sp, #104]	; 0x68
 800c9d4:	2800      	cmp	r0, #0
 800c9d6:	f47f af69 	bne.w	800c8ac <_strtod_l+0x744>
 800c9da:	e604      	b.n	800c5e6 <_strtod_l+0x47e>
 800c9dc:	08011288 	.word	0x08011288
 800c9e0:	fffffc02 	.word	0xfffffc02
 800c9e4:	7ff00000 	.word	0x7ff00000
 800c9e8:	39500000 	.word	0x39500000
 800c9ec:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800c9f0:	d165      	bne.n	800cabe <_strtod_l+0x956>
 800c9f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c9f4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c9f8:	b35a      	cbz	r2, 800ca52 <_strtod_l+0x8ea>
 800c9fa:	4a99      	ldr	r2, [pc, #612]	; (800cc60 <_strtod_l+0xaf8>)
 800c9fc:	4293      	cmp	r3, r2
 800c9fe:	d12b      	bne.n	800ca58 <_strtod_l+0x8f0>
 800ca00:	9b05      	ldr	r3, [sp, #20]
 800ca02:	4641      	mov	r1, r8
 800ca04:	b303      	cbz	r3, 800ca48 <_strtod_l+0x8e0>
 800ca06:	464a      	mov	r2, r9
 800ca08:	4b96      	ldr	r3, [pc, #600]	; (800cc64 <_strtod_l+0xafc>)
 800ca0a:	4013      	ands	r3, r2
 800ca0c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800ca10:	f04f 32ff 	mov.w	r2, #4294967295
 800ca14:	d81b      	bhi.n	800ca4e <_strtod_l+0x8e6>
 800ca16:	0d1b      	lsrs	r3, r3, #20
 800ca18:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800ca1c:	fa02 f303 	lsl.w	r3, r2, r3
 800ca20:	4299      	cmp	r1, r3
 800ca22:	d119      	bne.n	800ca58 <_strtod_l+0x8f0>
 800ca24:	4b90      	ldr	r3, [pc, #576]	; (800cc68 <_strtod_l+0xb00>)
 800ca26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ca28:	429a      	cmp	r2, r3
 800ca2a:	d102      	bne.n	800ca32 <_strtod_l+0x8ca>
 800ca2c:	3101      	adds	r1, #1
 800ca2e:	f43f adda 	beq.w	800c5e6 <_strtod_l+0x47e>
 800ca32:	f04f 0800 	mov.w	r8, #0
 800ca36:	4b8b      	ldr	r3, [pc, #556]	; (800cc64 <_strtod_l+0xafc>)
 800ca38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ca3a:	401a      	ands	r2, r3
 800ca3c:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 800ca40:	9b05      	ldr	r3, [sp, #20]
 800ca42:	2b00      	cmp	r3, #0
 800ca44:	d19a      	bne.n	800c97c <_strtod_l+0x814>
 800ca46:	e5d9      	b.n	800c5fc <_strtod_l+0x494>
 800ca48:	f04f 33ff 	mov.w	r3, #4294967295
 800ca4c:	e7e8      	b.n	800ca20 <_strtod_l+0x8b8>
 800ca4e:	4613      	mov	r3, r2
 800ca50:	e7e6      	b.n	800ca20 <_strtod_l+0x8b8>
 800ca52:	ea53 0308 	orrs.w	r3, r3, r8
 800ca56:	d081      	beq.n	800c95c <_strtod_l+0x7f4>
 800ca58:	b1e5      	cbz	r5, 800ca94 <_strtod_l+0x92c>
 800ca5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca5c:	421d      	tst	r5, r3
 800ca5e:	d0ef      	beq.n	800ca40 <_strtod_l+0x8d8>
 800ca60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca62:	4640      	mov	r0, r8
 800ca64:	4649      	mov	r1, r9
 800ca66:	9a05      	ldr	r2, [sp, #20]
 800ca68:	b1c3      	cbz	r3, 800ca9c <_strtod_l+0x934>
 800ca6a:	f7ff fb5a 	bl	800c122 <sulp>
 800ca6e:	4602      	mov	r2, r0
 800ca70:	460b      	mov	r3, r1
 800ca72:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800ca76:	f7f3 fb9b 	bl	80001b0 <__adddf3>
 800ca7a:	4680      	mov	r8, r0
 800ca7c:	4689      	mov	r9, r1
 800ca7e:	e7df      	b.n	800ca40 <_strtod_l+0x8d8>
 800ca80:	4013      	ands	r3, r2
 800ca82:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800ca86:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800ca8a:	f04f 38ff 	mov.w	r8, #4294967295
 800ca8e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800ca92:	e7d5      	b.n	800ca40 <_strtod_l+0x8d8>
 800ca94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ca96:	ea13 0f08 	tst.w	r3, r8
 800ca9a:	e7e0      	b.n	800ca5e <_strtod_l+0x8f6>
 800ca9c:	f7ff fb41 	bl	800c122 <sulp>
 800caa0:	4602      	mov	r2, r0
 800caa2:	460b      	mov	r3, r1
 800caa4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800caa8:	f7f3 fb80 	bl	80001ac <__aeabi_dsub>
 800caac:	2200      	movs	r2, #0
 800caae:	2300      	movs	r3, #0
 800cab0:	4680      	mov	r8, r0
 800cab2:	4689      	mov	r9, r1
 800cab4:	f7f3 ff9a 	bl	80009ec <__aeabi_dcmpeq>
 800cab8:	2800      	cmp	r0, #0
 800caba:	d0c1      	beq.n	800ca40 <_strtod_l+0x8d8>
 800cabc:	e608      	b.n	800c6d0 <_strtod_l+0x568>
 800cabe:	4658      	mov	r0, fp
 800cac0:	9904      	ldr	r1, [sp, #16]
 800cac2:	f002 f845 	bl	800eb50 <__ratio>
 800cac6:	2200      	movs	r2, #0
 800cac8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800cacc:	4606      	mov	r6, r0
 800cace:	460f      	mov	r7, r1
 800cad0:	f7f3 ffa0 	bl	8000a14 <__aeabi_dcmple>
 800cad4:	2800      	cmp	r0, #0
 800cad6:	d070      	beq.n	800cbba <_strtod_l+0xa52>
 800cad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cada:	2b00      	cmp	r3, #0
 800cadc:	d042      	beq.n	800cb64 <_strtod_l+0x9fc>
 800cade:	2600      	movs	r6, #0
 800cae0:	4f62      	ldr	r7, [pc, #392]	; (800cc6c <_strtod_l+0xb04>)
 800cae2:	4d62      	ldr	r5, [pc, #392]	; (800cc6c <_strtod_l+0xb04>)
 800cae4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cae6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800caea:	0d1b      	lsrs	r3, r3, #20
 800caec:	051b      	lsls	r3, r3, #20
 800caee:	930f      	str	r3, [sp, #60]	; 0x3c
 800caf0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800caf2:	4b5f      	ldr	r3, [pc, #380]	; (800cc70 <_strtod_l+0xb08>)
 800caf4:	429a      	cmp	r2, r3
 800caf6:	f040 80c3 	bne.w	800cc80 <_strtod_l+0xb18>
 800cafa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cafc:	4640      	mov	r0, r8
 800cafe:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800cb02:	4649      	mov	r1, r9
 800cb04:	f001 ff4e 	bl	800e9a4 <__ulp>
 800cb08:	4602      	mov	r2, r0
 800cb0a:	460b      	mov	r3, r1
 800cb0c:	4630      	mov	r0, r6
 800cb0e:	4639      	mov	r1, r7
 800cb10:	f7f3 fd04 	bl	800051c <__aeabi_dmul>
 800cb14:	4642      	mov	r2, r8
 800cb16:	464b      	mov	r3, r9
 800cb18:	f7f3 fb4a 	bl	80001b0 <__adddf3>
 800cb1c:	460b      	mov	r3, r1
 800cb1e:	4951      	ldr	r1, [pc, #324]	; (800cc64 <_strtod_l+0xafc>)
 800cb20:	4a54      	ldr	r2, [pc, #336]	; (800cc74 <_strtod_l+0xb0c>)
 800cb22:	4019      	ands	r1, r3
 800cb24:	4291      	cmp	r1, r2
 800cb26:	4680      	mov	r8, r0
 800cb28:	d95d      	bls.n	800cbe6 <_strtod_l+0xa7e>
 800cb2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800cb2c:	4b4e      	ldr	r3, [pc, #312]	; (800cc68 <_strtod_l+0xb00>)
 800cb2e:	429a      	cmp	r2, r3
 800cb30:	d103      	bne.n	800cb3a <_strtod_l+0x9d2>
 800cb32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cb34:	3301      	adds	r3, #1
 800cb36:	f43f ad56 	beq.w	800c5e6 <_strtod_l+0x47e>
 800cb3a:	f04f 38ff 	mov.w	r8, #4294967295
 800cb3e:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800cc68 <_strtod_l+0xb00>
 800cb42:	4650      	mov	r0, sl
 800cb44:	991a      	ldr	r1, [sp, #104]	; 0x68
 800cb46:	f001 fbfd 	bl	800e344 <_Bfree>
 800cb4a:	4650      	mov	r0, sl
 800cb4c:	9906      	ldr	r1, [sp, #24]
 800cb4e:	f001 fbf9 	bl	800e344 <_Bfree>
 800cb52:	4650      	mov	r0, sl
 800cb54:	9904      	ldr	r1, [sp, #16]
 800cb56:	f001 fbf5 	bl	800e344 <_Bfree>
 800cb5a:	4659      	mov	r1, fp
 800cb5c:	4650      	mov	r0, sl
 800cb5e:	f001 fbf1 	bl	800e344 <_Bfree>
 800cb62:	e627      	b.n	800c7b4 <_strtod_l+0x64c>
 800cb64:	f1b8 0f00 	cmp.w	r8, #0
 800cb68:	d119      	bne.n	800cb9e <_strtod_l+0xa36>
 800cb6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb6c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cb70:	b9e3      	cbnz	r3, 800cbac <_strtod_l+0xa44>
 800cb72:	2200      	movs	r2, #0
 800cb74:	4630      	mov	r0, r6
 800cb76:	4639      	mov	r1, r7
 800cb78:	4b3c      	ldr	r3, [pc, #240]	; (800cc6c <_strtod_l+0xb04>)
 800cb7a:	f7f3 ff41 	bl	8000a00 <__aeabi_dcmplt>
 800cb7e:	b9c8      	cbnz	r0, 800cbb4 <_strtod_l+0xa4c>
 800cb80:	2200      	movs	r2, #0
 800cb82:	4630      	mov	r0, r6
 800cb84:	4639      	mov	r1, r7
 800cb86:	4b3c      	ldr	r3, [pc, #240]	; (800cc78 <_strtod_l+0xb10>)
 800cb88:	f7f3 fcc8 	bl	800051c <__aeabi_dmul>
 800cb8c:	4604      	mov	r4, r0
 800cb8e:	460d      	mov	r5, r1
 800cb90:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800cb94:	9416      	str	r4, [sp, #88]	; 0x58
 800cb96:	9317      	str	r3, [sp, #92]	; 0x5c
 800cb98:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800cb9c:	e7a2      	b.n	800cae4 <_strtod_l+0x97c>
 800cb9e:	f1b8 0f01 	cmp.w	r8, #1
 800cba2:	d103      	bne.n	800cbac <_strtod_l+0xa44>
 800cba4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cba6:	2b00      	cmp	r3, #0
 800cba8:	f43f ad92 	beq.w	800c6d0 <_strtod_l+0x568>
 800cbac:	2600      	movs	r6, #0
 800cbae:	2400      	movs	r4, #0
 800cbb0:	4f32      	ldr	r7, [pc, #200]	; (800cc7c <_strtod_l+0xb14>)
 800cbb2:	e796      	b.n	800cae2 <_strtod_l+0x97a>
 800cbb4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800cbb6:	4d30      	ldr	r5, [pc, #192]	; (800cc78 <_strtod_l+0xb10>)
 800cbb8:	e7ea      	b.n	800cb90 <_strtod_l+0xa28>
 800cbba:	4b2f      	ldr	r3, [pc, #188]	; (800cc78 <_strtod_l+0xb10>)
 800cbbc:	2200      	movs	r2, #0
 800cbbe:	4630      	mov	r0, r6
 800cbc0:	4639      	mov	r1, r7
 800cbc2:	f7f3 fcab 	bl	800051c <__aeabi_dmul>
 800cbc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cbc8:	4604      	mov	r4, r0
 800cbca:	460d      	mov	r5, r1
 800cbcc:	b933      	cbnz	r3, 800cbdc <_strtod_l+0xa74>
 800cbce:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800cbd2:	9010      	str	r0, [sp, #64]	; 0x40
 800cbd4:	9311      	str	r3, [sp, #68]	; 0x44
 800cbd6:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800cbda:	e783      	b.n	800cae4 <_strtod_l+0x97c>
 800cbdc:	4602      	mov	r2, r0
 800cbde:	460b      	mov	r3, r1
 800cbe0:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800cbe4:	e7f7      	b.n	800cbd6 <_strtod_l+0xa6e>
 800cbe6:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800cbea:	9b05      	ldr	r3, [sp, #20]
 800cbec:	2b00      	cmp	r3, #0
 800cbee:	d1a8      	bne.n	800cb42 <_strtod_l+0x9da>
 800cbf0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800cbf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cbf6:	0d1b      	lsrs	r3, r3, #20
 800cbf8:	051b      	lsls	r3, r3, #20
 800cbfa:	429a      	cmp	r2, r3
 800cbfc:	d1a1      	bne.n	800cb42 <_strtod_l+0x9da>
 800cbfe:	4620      	mov	r0, r4
 800cc00:	4629      	mov	r1, r5
 800cc02:	f7f4 fadf 	bl	80011c4 <__aeabi_d2lz>
 800cc06:	f7f3 fc5b 	bl	80004c0 <__aeabi_l2d>
 800cc0a:	4602      	mov	r2, r0
 800cc0c:	460b      	mov	r3, r1
 800cc0e:	4620      	mov	r0, r4
 800cc10:	4629      	mov	r1, r5
 800cc12:	f7f3 facb 	bl	80001ac <__aeabi_dsub>
 800cc16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cc18:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800cc1c:	ea43 0308 	orr.w	r3, r3, r8
 800cc20:	4313      	orrs	r3, r2
 800cc22:	4604      	mov	r4, r0
 800cc24:	460d      	mov	r5, r1
 800cc26:	d066      	beq.n	800ccf6 <_strtod_l+0xb8e>
 800cc28:	a309      	add	r3, pc, #36	; (adr r3, 800cc50 <_strtod_l+0xae8>)
 800cc2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc2e:	f7f3 fee7 	bl	8000a00 <__aeabi_dcmplt>
 800cc32:	2800      	cmp	r0, #0
 800cc34:	f47f ace2 	bne.w	800c5fc <_strtod_l+0x494>
 800cc38:	a307      	add	r3, pc, #28	; (adr r3, 800cc58 <_strtod_l+0xaf0>)
 800cc3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc3e:	4620      	mov	r0, r4
 800cc40:	4629      	mov	r1, r5
 800cc42:	f7f3 fefb 	bl	8000a3c <__aeabi_dcmpgt>
 800cc46:	2800      	cmp	r0, #0
 800cc48:	f43f af7b 	beq.w	800cb42 <_strtod_l+0x9da>
 800cc4c:	e4d6      	b.n	800c5fc <_strtod_l+0x494>
 800cc4e:	bf00      	nop
 800cc50:	94a03595 	.word	0x94a03595
 800cc54:	3fdfffff 	.word	0x3fdfffff
 800cc58:	35afe535 	.word	0x35afe535
 800cc5c:	3fe00000 	.word	0x3fe00000
 800cc60:	000fffff 	.word	0x000fffff
 800cc64:	7ff00000 	.word	0x7ff00000
 800cc68:	7fefffff 	.word	0x7fefffff
 800cc6c:	3ff00000 	.word	0x3ff00000
 800cc70:	7fe00000 	.word	0x7fe00000
 800cc74:	7c9fffff 	.word	0x7c9fffff
 800cc78:	3fe00000 	.word	0x3fe00000
 800cc7c:	bff00000 	.word	0xbff00000
 800cc80:	9b05      	ldr	r3, [sp, #20]
 800cc82:	b313      	cbz	r3, 800ccca <_strtod_l+0xb62>
 800cc84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cc86:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800cc8a:	d81e      	bhi.n	800ccca <_strtod_l+0xb62>
 800cc8c:	a326      	add	r3, pc, #152	; (adr r3, 800cd28 <_strtod_l+0xbc0>)
 800cc8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc92:	4620      	mov	r0, r4
 800cc94:	4629      	mov	r1, r5
 800cc96:	f7f3 febd 	bl	8000a14 <__aeabi_dcmple>
 800cc9a:	b190      	cbz	r0, 800ccc2 <_strtod_l+0xb5a>
 800cc9c:	4629      	mov	r1, r5
 800cc9e:	4620      	mov	r0, r4
 800cca0:	f7f3 ff14 	bl	8000acc <__aeabi_d2uiz>
 800cca4:	2801      	cmp	r0, #1
 800cca6:	bf38      	it	cc
 800cca8:	2001      	movcc	r0, #1
 800ccaa:	f7f3 fbbd 	bl	8000428 <__aeabi_ui2d>
 800ccae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ccb0:	4604      	mov	r4, r0
 800ccb2:	460d      	mov	r5, r1
 800ccb4:	b9d3      	cbnz	r3, 800ccec <_strtod_l+0xb84>
 800ccb6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ccba:	9012      	str	r0, [sp, #72]	; 0x48
 800ccbc:	9313      	str	r3, [sp, #76]	; 0x4c
 800ccbe:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800ccc2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ccc4:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 800ccc8:	1a9f      	subs	r7, r3, r2
 800ccca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800ccce:	f001 fe69 	bl	800e9a4 <__ulp>
 800ccd2:	4602      	mov	r2, r0
 800ccd4:	460b      	mov	r3, r1
 800ccd6:	4630      	mov	r0, r6
 800ccd8:	4639      	mov	r1, r7
 800ccda:	f7f3 fc1f 	bl	800051c <__aeabi_dmul>
 800ccde:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800cce2:	f7f3 fa65 	bl	80001b0 <__adddf3>
 800cce6:	4680      	mov	r8, r0
 800cce8:	4689      	mov	r9, r1
 800ccea:	e77e      	b.n	800cbea <_strtod_l+0xa82>
 800ccec:	4602      	mov	r2, r0
 800ccee:	460b      	mov	r3, r1
 800ccf0:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800ccf4:	e7e3      	b.n	800ccbe <_strtod_l+0xb56>
 800ccf6:	a30e      	add	r3, pc, #56	; (adr r3, 800cd30 <_strtod_l+0xbc8>)
 800ccf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ccfc:	f7f3 fe80 	bl	8000a00 <__aeabi_dcmplt>
 800cd00:	e7a1      	b.n	800cc46 <_strtod_l+0xade>
 800cd02:	2300      	movs	r3, #0
 800cd04:	930a      	str	r3, [sp, #40]	; 0x28
 800cd06:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800cd08:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cd0a:	6013      	str	r3, [r2, #0]
 800cd0c:	f7ff ba71 	b.w	800c1f2 <_strtod_l+0x8a>
 800cd10:	2a65      	cmp	r2, #101	; 0x65
 800cd12:	f43f ab63 	beq.w	800c3dc <_strtod_l+0x274>
 800cd16:	2a45      	cmp	r2, #69	; 0x45
 800cd18:	f43f ab60 	beq.w	800c3dc <_strtod_l+0x274>
 800cd1c:	2301      	movs	r3, #1
 800cd1e:	f7ff bb95 	b.w	800c44c <_strtod_l+0x2e4>
 800cd22:	bf00      	nop
 800cd24:	f3af 8000 	nop.w
 800cd28:	ffc00000 	.word	0xffc00000
 800cd2c:	41dfffff 	.word	0x41dfffff
 800cd30:	94a03595 	.word	0x94a03595
 800cd34:	3fcfffff 	.word	0x3fcfffff

0800cd38 <_strtod_r>:
 800cd38:	4b01      	ldr	r3, [pc, #4]	; (800cd40 <_strtod_r+0x8>)
 800cd3a:	f7ff ba15 	b.w	800c168 <_strtod_l>
 800cd3e:	bf00      	nop
 800cd40:	2000020c 	.word	0x2000020c

0800cd44 <_strtol_l.constprop.0>:
 800cd44:	2b01      	cmp	r3, #1
 800cd46:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cd4a:	4680      	mov	r8, r0
 800cd4c:	d001      	beq.n	800cd52 <_strtol_l.constprop.0+0xe>
 800cd4e:	2b24      	cmp	r3, #36	; 0x24
 800cd50:	d906      	bls.n	800cd60 <_strtol_l.constprop.0+0x1c>
 800cd52:	f7fe faa5 	bl	800b2a0 <__errno>
 800cd56:	2316      	movs	r3, #22
 800cd58:	6003      	str	r3, [r0, #0]
 800cd5a:	2000      	movs	r0, #0
 800cd5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cd60:	460d      	mov	r5, r1
 800cd62:	4f35      	ldr	r7, [pc, #212]	; (800ce38 <_strtol_l.constprop.0+0xf4>)
 800cd64:	4628      	mov	r0, r5
 800cd66:	f815 4b01 	ldrb.w	r4, [r5], #1
 800cd6a:	5de6      	ldrb	r6, [r4, r7]
 800cd6c:	f016 0608 	ands.w	r6, r6, #8
 800cd70:	d1f8      	bne.n	800cd64 <_strtol_l.constprop.0+0x20>
 800cd72:	2c2d      	cmp	r4, #45	; 0x2d
 800cd74:	d12f      	bne.n	800cdd6 <_strtol_l.constprop.0+0x92>
 800cd76:	2601      	movs	r6, #1
 800cd78:	782c      	ldrb	r4, [r5, #0]
 800cd7a:	1c85      	adds	r5, r0, #2
 800cd7c:	2b00      	cmp	r3, #0
 800cd7e:	d057      	beq.n	800ce30 <_strtol_l.constprop.0+0xec>
 800cd80:	2b10      	cmp	r3, #16
 800cd82:	d109      	bne.n	800cd98 <_strtol_l.constprop.0+0x54>
 800cd84:	2c30      	cmp	r4, #48	; 0x30
 800cd86:	d107      	bne.n	800cd98 <_strtol_l.constprop.0+0x54>
 800cd88:	7828      	ldrb	r0, [r5, #0]
 800cd8a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800cd8e:	2858      	cmp	r0, #88	; 0x58
 800cd90:	d149      	bne.n	800ce26 <_strtol_l.constprop.0+0xe2>
 800cd92:	2310      	movs	r3, #16
 800cd94:	786c      	ldrb	r4, [r5, #1]
 800cd96:	3502      	adds	r5, #2
 800cd98:	2700      	movs	r7, #0
 800cd9a:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800cd9e:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cda2:	fbbe f9f3 	udiv	r9, lr, r3
 800cda6:	4638      	mov	r0, r7
 800cda8:	fb03 ea19 	mls	sl, r3, r9, lr
 800cdac:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800cdb0:	f1bc 0f09 	cmp.w	ip, #9
 800cdb4:	d814      	bhi.n	800cde0 <_strtol_l.constprop.0+0x9c>
 800cdb6:	4664      	mov	r4, ip
 800cdb8:	42a3      	cmp	r3, r4
 800cdba:	dd22      	ble.n	800ce02 <_strtol_l.constprop.0+0xbe>
 800cdbc:	2f00      	cmp	r7, #0
 800cdbe:	db1d      	blt.n	800cdfc <_strtol_l.constprop.0+0xb8>
 800cdc0:	4581      	cmp	r9, r0
 800cdc2:	d31b      	bcc.n	800cdfc <_strtol_l.constprop.0+0xb8>
 800cdc4:	d101      	bne.n	800cdca <_strtol_l.constprop.0+0x86>
 800cdc6:	45a2      	cmp	sl, r4
 800cdc8:	db18      	blt.n	800cdfc <_strtol_l.constprop.0+0xb8>
 800cdca:	2701      	movs	r7, #1
 800cdcc:	fb00 4003 	mla	r0, r0, r3, r4
 800cdd0:	f815 4b01 	ldrb.w	r4, [r5], #1
 800cdd4:	e7ea      	b.n	800cdac <_strtol_l.constprop.0+0x68>
 800cdd6:	2c2b      	cmp	r4, #43	; 0x2b
 800cdd8:	bf04      	itt	eq
 800cdda:	782c      	ldrbeq	r4, [r5, #0]
 800cddc:	1c85      	addeq	r5, r0, #2
 800cdde:	e7cd      	b.n	800cd7c <_strtol_l.constprop.0+0x38>
 800cde0:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800cde4:	f1bc 0f19 	cmp.w	ip, #25
 800cde8:	d801      	bhi.n	800cdee <_strtol_l.constprop.0+0xaa>
 800cdea:	3c37      	subs	r4, #55	; 0x37
 800cdec:	e7e4      	b.n	800cdb8 <_strtol_l.constprop.0+0x74>
 800cdee:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800cdf2:	f1bc 0f19 	cmp.w	ip, #25
 800cdf6:	d804      	bhi.n	800ce02 <_strtol_l.constprop.0+0xbe>
 800cdf8:	3c57      	subs	r4, #87	; 0x57
 800cdfa:	e7dd      	b.n	800cdb8 <_strtol_l.constprop.0+0x74>
 800cdfc:	f04f 37ff 	mov.w	r7, #4294967295
 800ce00:	e7e6      	b.n	800cdd0 <_strtol_l.constprop.0+0x8c>
 800ce02:	2f00      	cmp	r7, #0
 800ce04:	da07      	bge.n	800ce16 <_strtol_l.constprop.0+0xd2>
 800ce06:	2322      	movs	r3, #34	; 0x22
 800ce08:	4670      	mov	r0, lr
 800ce0a:	f8c8 3000 	str.w	r3, [r8]
 800ce0e:	2a00      	cmp	r2, #0
 800ce10:	d0a4      	beq.n	800cd5c <_strtol_l.constprop.0+0x18>
 800ce12:	1e69      	subs	r1, r5, #1
 800ce14:	e005      	b.n	800ce22 <_strtol_l.constprop.0+0xde>
 800ce16:	b106      	cbz	r6, 800ce1a <_strtol_l.constprop.0+0xd6>
 800ce18:	4240      	negs	r0, r0
 800ce1a:	2a00      	cmp	r2, #0
 800ce1c:	d09e      	beq.n	800cd5c <_strtol_l.constprop.0+0x18>
 800ce1e:	2f00      	cmp	r7, #0
 800ce20:	d1f7      	bne.n	800ce12 <_strtol_l.constprop.0+0xce>
 800ce22:	6011      	str	r1, [r2, #0]
 800ce24:	e79a      	b.n	800cd5c <_strtol_l.constprop.0+0x18>
 800ce26:	2430      	movs	r4, #48	; 0x30
 800ce28:	2b00      	cmp	r3, #0
 800ce2a:	d1b5      	bne.n	800cd98 <_strtol_l.constprop.0+0x54>
 800ce2c:	2308      	movs	r3, #8
 800ce2e:	e7b3      	b.n	800cd98 <_strtol_l.constprop.0+0x54>
 800ce30:	2c30      	cmp	r4, #48	; 0x30
 800ce32:	d0a9      	beq.n	800cd88 <_strtol_l.constprop.0+0x44>
 800ce34:	230a      	movs	r3, #10
 800ce36:	e7af      	b.n	800cd98 <_strtol_l.constprop.0+0x54>
 800ce38:	080112b1 	.word	0x080112b1

0800ce3c <_strtol_r>:
 800ce3c:	f7ff bf82 	b.w	800cd44 <_strtol_l.constprop.0>

0800ce40 <_write_r>:
 800ce40:	b538      	push	{r3, r4, r5, lr}
 800ce42:	4604      	mov	r4, r0
 800ce44:	4608      	mov	r0, r1
 800ce46:	4611      	mov	r1, r2
 800ce48:	2200      	movs	r2, #0
 800ce4a:	4d05      	ldr	r5, [pc, #20]	; (800ce60 <_write_r+0x20>)
 800ce4c:	602a      	str	r2, [r5, #0]
 800ce4e:	461a      	mov	r2, r3
 800ce50:	f7f8 fc9a 	bl	8005788 <_write>
 800ce54:	1c43      	adds	r3, r0, #1
 800ce56:	d102      	bne.n	800ce5e <_write_r+0x1e>
 800ce58:	682b      	ldr	r3, [r5, #0]
 800ce5a:	b103      	cbz	r3, 800ce5e <_write_r+0x1e>
 800ce5c:	6023      	str	r3, [r4, #0]
 800ce5e:	bd38      	pop	{r3, r4, r5, pc}
 800ce60:	20001694 	.word	0x20001694

0800ce64 <_close_r>:
 800ce64:	b538      	push	{r3, r4, r5, lr}
 800ce66:	2300      	movs	r3, #0
 800ce68:	4d05      	ldr	r5, [pc, #20]	; (800ce80 <_close_r+0x1c>)
 800ce6a:	4604      	mov	r4, r0
 800ce6c:	4608      	mov	r0, r1
 800ce6e:	602b      	str	r3, [r5, #0]
 800ce70:	f7f8 fca6 	bl	80057c0 <_close>
 800ce74:	1c43      	adds	r3, r0, #1
 800ce76:	d102      	bne.n	800ce7e <_close_r+0x1a>
 800ce78:	682b      	ldr	r3, [r5, #0]
 800ce7a:	b103      	cbz	r3, 800ce7e <_close_r+0x1a>
 800ce7c:	6023      	str	r3, [r4, #0]
 800ce7e:	bd38      	pop	{r3, r4, r5, pc}
 800ce80:	20001694 	.word	0x20001694

0800ce84 <quorem>:
 800ce84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce88:	6903      	ldr	r3, [r0, #16]
 800ce8a:	690c      	ldr	r4, [r1, #16]
 800ce8c:	4607      	mov	r7, r0
 800ce8e:	42a3      	cmp	r3, r4
 800ce90:	f2c0 8082 	blt.w	800cf98 <quorem+0x114>
 800ce94:	3c01      	subs	r4, #1
 800ce96:	f100 0514 	add.w	r5, r0, #20
 800ce9a:	f101 0814 	add.w	r8, r1, #20
 800ce9e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cea2:	9301      	str	r3, [sp, #4]
 800cea4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800cea8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ceac:	3301      	adds	r3, #1
 800ceae:	429a      	cmp	r2, r3
 800ceb0:	fbb2 f6f3 	udiv	r6, r2, r3
 800ceb4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800ceb8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800cebc:	d331      	bcc.n	800cf22 <quorem+0x9e>
 800cebe:	f04f 0e00 	mov.w	lr, #0
 800cec2:	4640      	mov	r0, r8
 800cec4:	46ac      	mov	ip, r5
 800cec6:	46f2      	mov	sl, lr
 800cec8:	f850 2b04 	ldr.w	r2, [r0], #4
 800cecc:	b293      	uxth	r3, r2
 800cece:	fb06 e303 	mla	r3, r6, r3, lr
 800ced2:	0c12      	lsrs	r2, r2, #16
 800ced4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800ced8:	b29b      	uxth	r3, r3
 800ceda:	fb06 e202 	mla	r2, r6, r2, lr
 800cede:	ebaa 0303 	sub.w	r3, sl, r3
 800cee2:	f8dc a000 	ldr.w	sl, [ip]
 800cee6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800ceea:	fa1f fa8a 	uxth.w	sl, sl
 800ceee:	4453      	add	r3, sl
 800cef0:	f8dc a000 	ldr.w	sl, [ip]
 800cef4:	b292      	uxth	r2, r2
 800cef6:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800cefa:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cefe:	b29b      	uxth	r3, r3
 800cf00:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cf04:	4581      	cmp	r9, r0
 800cf06:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800cf0a:	f84c 3b04 	str.w	r3, [ip], #4
 800cf0e:	d2db      	bcs.n	800cec8 <quorem+0x44>
 800cf10:	f855 300b 	ldr.w	r3, [r5, fp]
 800cf14:	b92b      	cbnz	r3, 800cf22 <quorem+0x9e>
 800cf16:	9b01      	ldr	r3, [sp, #4]
 800cf18:	3b04      	subs	r3, #4
 800cf1a:	429d      	cmp	r5, r3
 800cf1c:	461a      	mov	r2, r3
 800cf1e:	d32f      	bcc.n	800cf80 <quorem+0xfc>
 800cf20:	613c      	str	r4, [r7, #16]
 800cf22:	4638      	mov	r0, r7
 800cf24:	f001 fc96 	bl	800e854 <__mcmp>
 800cf28:	2800      	cmp	r0, #0
 800cf2a:	db25      	blt.n	800cf78 <quorem+0xf4>
 800cf2c:	4628      	mov	r0, r5
 800cf2e:	f04f 0c00 	mov.w	ip, #0
 800cf32:	3601      	adds	r6, #1
 800cf34:	f858 1b04 	ldr.w	r1, [r8], #4
 800cf38:	f8d0 e000 	ldr.w	lr, [r0]
 800cf3c:	b28b      	uxth	r3, r1
 800cf3e:	ebac 0303 	sub.w	r3, ip, r3
 800cf42:	fa1f f28e 	uxth.w	r2, lr
 800cf46:	4413      	add	r3, r2
 800cf48:	0c0a      	lsrs	r2, r1, #16
 800cf4a:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800cf4e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cf52:	b29b      	uxth	r3, r3
 800cf54:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cf58:	45c1      	cmp	r9, r8
 800cf5a:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800cf5e:	f840 3b04 	str.w	r3, [r0], #4
 800cf62:	d2e7      	bcs.n	800cf34 <quorem+0xb0>
 800cf64:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cf68:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cf6c:	b922      	cbnz	r2, 800cf78 <quorem+0xf4>
 800cf6e:	3b04      	subs	r3, #4
 800cf70:	429d      	cmp	r5, r3
 800cf72:	461a      	mov	r2, r3
 800cf74:	d30a      	bcc.n	800cf8c <quorem+0x108>
 800cf76:	613c      	str	r4, [r7, #16]
 800cf78:	4630      	mov	r0, r6
 800cf7a:	b003      	add	sp, #12
 800cf7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf80:	6812      	ldr	r2, [r2, #0]
 800cf82:	3b04      	subs	r3, #4
 800cf84:	2a00      	cmp	r2, #0
 800cf86:	d1cb      	bne.n	800cf20 <quorem+0x9c>
 800cf88:	3c01      	subs	r4, #1
 800cf8a:	e7c6      	b.n	800cf1a <quorem+0x96>
 800cf8c:	6812      	ldr	r2, [r2, #0]
 800cf8e:	3b04      	subs	r3, #4
 800cf90:	2a00      	cmp	r2, #0
 800cf92:	d1f0      	bne.n	800cf76 <quorem+0xf2>
 800cf94:	3c01      	subs	r4, #1
 800cf96:	e7eb      	b.n	800cf70 <quorem+0xec>
 800cf98:	2000      	movs	r0, #0
 800cf9a:	e7ee      	b.n	800cf7a <quorem+0xf6>
 800cf9c:	0000      	movs	r0, r0
	...

0800cfa0 <_dtoa_r>:
 800cfa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfa4:	4616      	mov	r6, r2
 800cfa6:	461f      	mov	r7, r3
 800cfa8:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800cfaa:	b099      	sub	sp, #100	; 0x64
 800cfac:	4605      	mov	r5, r0
 800cfae:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800cfb2:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800cfb6:	b974      	cbnz	r4, 800cfd6 <_dtoa_r+0x36>
 800cfb8:	2010      	movs	r0, #16
 800cfba:	f001 f95b 	bl	800e274 <malloc>
 800cfbe:	4602      	mov	r2, r0
 800cfc0:	6268      	str	r0, [r5, #36]	; 0x24
 800cfc2:	b920      	cbnz	r0, 800cfce <_dtoa_r+0x2e>
 800cfc4:	21ea      	movs	r1, #234	; 0xea
 800cfc6:	4ba8      	ldr	r3, [pc, #672]	; (800d268 <_dtoa_r+0x2c8>)
 800cfc8:	48a8      	ldr	r0, [pc, #672]	; (800d26c <_dtoa_r+0x2cc>)
 800cfca:	f002 fcd3 	bl	800f974 <__assert_func>
 800cfce:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800cfd2:	6004      	str	r4, [r0, #0]
 800cfd4:	60c4      	str	r4, [r0, #12]
 800cfd6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cfd8:	6819      	ldr	r1, [r3, #0]
 800cfda:	b151      	cbz	r1, 800cff2 <_dtoa_r+0x52>
 800cfdc:	685a      	ldr	r2, [r3, #4]
 800cfde:	2301      	movs	r3, #1
 800cfe0:	4093      	lsls	r3, r2
 800cfe2:	604a      	str	r2, [r1, #4]
 800cfe4:	608b      	str	r3, [r1, #8]
 800cfe6:	4628      	mov	r0, r5
 800cfe8:	f001 f9ac 	bl	800e344 <_Bfree>
 800cfec:	2200      	movs	r2, #0
 800cfee:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cff0:	601a      	str	r2, [r3, #0]
 800cff2:	1e3b      	subs	r3, r7, #0
 800cff4:	bfaf      	iteee	ge
 800cff6:	2300      	movge	r3, #0
 800cff8:	2201      	movlt	r2, #1
 800cffa:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800cffe:	9305      	strlt	r3, [sp, #20]
 800d000:	bfa8      	it	ge
 800d002:	f8c8 3000 	strge.w	r3, [r8]
 800d006:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d00a:	4b99      	ldr	r3, [pc, #612]	; (800d270 <_dtoa_r+0x2d0>)
 800d00c:	bfb8      	it	lt
 800d00e:	f8c8 2000 	strlt.w	r2, [r8]
 800d012:	ea33 0309 	bics.w	r3, r3, r9
 800d016:	d119      	bne.n	800d04c <_dtoa_r+0xac>
 800d018:	f242 730f 	movw	r3, #9999	; 0x270f
 800d01c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800d01e:	6013      	str	r3, [r2, #0]
 800d020:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d024:	4333      	orrs	r3, r6
 800d026:	f000 857f 	beq.w	800db28 <_dtoa_r+0xb88>
 800d02a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d02c:	b953      	cbnz	r3, 800d044 <_dtoa_r+0xa4>
 800d02e:	4b91      	ldr	r3, [pc, #580]	; (800d274 <_dtoa_r+0x2d4>)
 800d030:	e022      	b.n	800d078 <_dtoa_r+0xd8>
 800d032:	4b91      	ldr	r3, [pc, #580]	; (800d278 <_dtoa_r+0x2d8>)
 800d034:	9303      	str	r3, [sp, #12]
 800d036:	3308      	adds	r3, #8
 800d038:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800d03a:	6013      	str	r3, [r2, #0]
 800d03c:	9803      	ldr	r0, [sp, #12]
 800d03e:	b019      	add	sp, #100	; 0x64
 800d040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d044:	4b8b      	ldr	r3, [pc, #556]	; (800d274 <_dtoa_r+0x2d4>)
 800d046:	9303      	str	r3, [sp, #12]
 800d048:	3303      	adds	r3, #3
 800d04a:	e7f5      	b.n	800d038 <_dtoa_r+0x98>
 800d04c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800d050:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800d054:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800d058:	2200      	movs	r2, #0
 800d05a:	2300      	movs	r3, #0
 800d05c:	f7f3 fcc6 	bl	80009ec <__aeabi_dcmpeq>
 800d060:	4680      	mov	r8, r0
 800d062:	b158      	cbz	r0, 800d07c <_dtoa_r+0xdc>
 800d064:	2301      	movs	r3, #1
 800d066:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800d068:	6013      	str	r3, [r2, #0]
 800d06a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d06c:	2b00      	cmp	r3, #0
 800d06e:	f000 8558 	beq.w	800db22 <_dtoa_r+0xb82>
 800d072:	4882      	ldr	r0, [pc, #520]	; (800d27c <_dtoa_r+0x2dc>)
 800d074:	6018      	str	r0, [r3, #0]
 800d076:	1e43      	subs	r3, r0, #1
 800d078:	9303      	str	r3, [sp, #12]
 800d07a:	e7df      	b.n	800d03c <_dtoa_r+0x9c>
 800d07c:	ab16      	add	r3, sp, #88	; 0x58
 800d07e:	9301      	str	r3, [sp, #4]
 800d080:	ab17      	add	r3, sp, #92	; 0x5c
 800d082:	9300      	str	r3, [sp, #0]
 800d084:	4628      	mov	r0, r5
 800d086:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800d08a:	f001 fd05 	bl	800ea98 <__d2b>
 800d08e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800d092:	4683      	mov	fp, r0
 800d094:	2c00      	cmp	r4, #0
 800d096:	d07f      	beq.n	800d198 <_dtoa_r+0x1f8>
 800d098:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800d09c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d09e:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800d0a2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800d0a6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800d0aa:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800d0ae:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800d0b2:	2200      	movs	r2, #0
 800d0b4:	4b72      	ldr	r3, [pc, #456]	; (800d280 <_dtoa_r+0x2e0>)
 800d0b6:	f7f3 f879 	bl	80001ac <__aeabi_dsub>
 800d0ba:	a365      	add	r3, pc, #404	; (adr r3, 800d250 <_dtoa_r+0x2b0>)
 800d0bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0c0:	f7f3 fa2c 	bl	800051c <__aeabi_dmul>
 800d0c4:	a364      	add	r3, pc, #400	; (adr r3, 800d258 <_dtoa_r+0x2b8>)
 800d0c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0ca:	f7f3 f871 	bl	80001b0 <__adddf3>
 800d0ce:	4606      	mov	r6, r0
 800d0d0:	4620      	mov	r0, r4
 800d0d2:	460f      	mov	r7, r1
 800d0d4:	f7f3 f9b8 	bl	8000448 <__aeabi_i2d>
 800d0d8:	a361      	add	r3, pc, #388	; (adr r3, 800d260 <_dtoa_r+0x2c0>)
 800d0da:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0de:	f7f3 fa1d 	bl	800051c <__aeabi_dmul>
 800d0e2:	4602      	mov	r2, r0
 800d0e4:	460b      	mov	r3, r1
 800d0e6:	4630      	mov	r0, r6
 800d0e8:	4639      	mov	r1, r7
 800d0ea:	f7f3 f861 	bl	80001b0 <__adddf3>
 800d0ee:	4606      	mov	r6, r0
 800d0f0:	460f      	mov	r7, r1
 800d0f2:	f7f3 fcc3 	bl	8000a7c <__aeabi_d2iz>
 800d0f6:	2200      	movs	r2, #0
 800d0f8:	4682      	mov	sl, r0
 800d0fa:	2300      	movs	r3, #0
 800d0fc:	4630      	mov	r0, r6
 800d0fe:	4639      	mov	r1, r7
 800d100:	f7f3 fc7e 	bl	8000a00 <__aeabi_dcmplt>
 800d104:	b148      	cbz	r0, 800d11a <_dtoa_r+0x17a>
 800d106:	4650      	mov	r0, sl
 800d108:	f7f3 f99e 	bl	8000448 <__aeabi_i2d>
 800d10c:	4632      	mov	r2, r6
 800d10e:	463b      	mov	r3, r7
 800d110:	f7f3 fc6c 	bl	80009ec <__aeabi_dcmpeq>
 800d114:	b908      	cbnz	r0, 800d11a <_dtoa_r+0x17a>
 800d116:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d11a:	f1ba 0f16 	cmp.w	sl, #22
 800d11e:	d858      	bhi.n	800d1d2 <_dtoa_r+0x232>
 800d120:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800d124:	4b57      	ldr	r3, [pc, #348]	; (800d284 <_dtoa_r+0x2e4>)
 800d126:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800d12a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d12e:	f7f3 fc67 	bl	8000a00 <__aeabi_dcmplt>
 800d132:	2800      	cmp	r0, #0
 800d134:	d04f      	beq.n	800d1d6 <_dtoa_r+0x236>
 800d136:	2300      	movs	r3, #0
 800d138:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d13c:	930f      	str	r3, [sp, #60]	; 0x3c
 800d13e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800d140:	1b1c      	subs	r4, r3, r4
 800d142:	1e63      	subs	r3, r4, #1
 800d144:	9309      	str	r3, [sp, #36]	; 0x24
 800d146:	bf49      	itett	mi
 800d148:	f1c4 0301 	rsbmi	r3, r4, #1
 800d14c:	2300      	movpl	r3, #0
 800d14e:	9306      	strmi	r3, [sp, #24]
 800d150:	2300      	movmi	r3, #0
 800d152:	bf54      	ite	pl
 800d154:	9306      	strpl	r3, [sp, #24]
 800d156:	9309      	strmi	r3, [sp, #36]	; 0x24
 800d158:	f1ba 0f00 	cmp.w	sl, #0
 800d15c:	db3d      	blt.n	800d1da <_dtoa_r+0x23a>
 800d15e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d160:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800d164:	4453      	add	r3, sl
 800d166:	9309      	str	r3, [sp, #36]	; 0x24
 800d168:	2300      	movs	r3, #0
 800d16a:	930a      	str	r3, [sp, #40]	; 0x28
 800d16c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d16e:	2b09      	cmp	r3, #9
 800d170:	f200 808c 	bhi.w	800d28c <_dtoa_r+0x2ec>
 800d174:	2b05      	cmp	r3, #5
 800d176:	bfc4      	itt	gt
 800d178:	3b04      	subgt	r3, #4
 800d17a:	9322      	strgt	r3, [sp, #136]	; 0x88
 800d17c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d17e:	bfc8      	it	gt
 800d180:	2400      	movgt	r4, #0
 800d182:	f1a3 0302 	sub.w	r3, r3, #2
 800d186:	bfd8      	it	le
 800d188:	2401      	movle	r4, #1
 800d18a:	2b03      	cmp	r3, #3
 800d18c:	f200 808a 	bhi.w	800d2a4 <_dtoa_r+0x304>
 800d190:	e8df f003 	tbb	[pc, r3]
 800d194:	5b4d4f2d 	.word	0x5b4d4f2d
 800d198:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800d19c:	441c      	add	r4, r3
 800d19e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800d1a2:	2b20      	cmp	r3, #32
 800d1a4:	bfc3      	ittte	gt
 800d1a6:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800d1aa:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800d1ae:	fa09 f303 	lslgt.w	r3, r9, r3
 800d1b2:	f1c3 0320 	rsble	r3, r3, #32
 800d1b6:	bfc6      	itte	gt
 800d1b8:	fa26 f000 	lsrgt.w	r0, r6, r0
 800d1bc:	4318      	orrgt	r0, r3
 800d1be:	fa06 f003 	lslle.w	r0, r6, r3
 800d1c2:	f7f3 f931 	bl	8000428 <__aeabi_ui2d>
 800d1c6:	2301      	movs	r3, #1
 800d1c8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800d1cc:	3c01      	subs	r4, #1
 800d1ce:	9313      	str	r3, [sp, #76]	; 0x4c
 800d1d0:	e76f      	b.n	800d0b2 <_dtoa_r+0x112>
 800d1d2:	2301      	movs	r3, #1
 800d1d4:	e7b2      	b.n	800d13c <_dtoa_r+0x19c>
 800d1d6:	900f      	str	r0, [sp, #60]	; 0x3c
 800d1d8:	e7b1      	b.n	800d13e <_dtoa_r+0x19e>
 800d1da:	9b06      	ldr	r3, [sp, #24]
 800d1dc:	eba3 030a 	sub.w	r3, r3, sl
 800d1e0:	9306      	str	r3, [sp, #24]
 800d1e2:	f1ca 0300 	rsb	r3, sl, #0
 800d1e6:	930a      	str	r3, [sp, #40]	; 0x28
 800d1e8:	2300      	movs	r3, #0
 800d1ea:	930e      	str	r3, [sp, #56]	; 0x38
 800d1ec:	e7be      	b.n	800d16c <_dtoa_r+0x1cc>
 800d1ee:	2300      	movs	r3, #0
 800d1f0:	930b      	str	r3, [sp, #44]	; 0x2c
 800d1f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d1f4:	2b00      	cmp	r3, #0
 800d1f6:	dc58      	bgt.n	800d2aa <_dtoa_r+0x30a>
 800d1f8:	f04f 0901 	mov.w	r9, #1
 800d1fc:	464b      	mov	r3, r9
 800d1fe:	f8cd 9020 	str.w	r9, [sp, #32]
 800d202:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800d206:	2200      	movs	r2, #0
 800d208:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800d20a:	6042      	str	r2, [r0, #4]
 800d20c:	2204      	movs	r2, #4
 800d20e:	f102 0614 	add.w	r6, r2, #20
 800d212:	429e      	cmp	r6, r3
 800d214:	6841      	ldr	r1, [r0, #4]
 800d216:	d94e      	bls.n	800d2b6 <_dtoa_r+0x316>
 800d218:	4628      	mov	r0, r5
 800d21a:	f001 f853 	bl	800e2c4 <_Balloc>
 800d21e:	9003      	str	r0, [sp, #12]
 800d220:	2800      	cmp	r0, #0
 800d222:	d14c      	bne.n	800d2be <_dtoa_r+0x31e>
 800d224:	4602      	mov	r2, r0
 800d226:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800d22a:	4b17      	ldr	r3, [pc, #92]	; (800d288 <_dtoa_r+0x2e8>)
 800d22c:	e6cc      	b.n	800cfc8 <_dtoa_r+0x28>
 800d22e:	2301      	movs	r3, #1
 800d230:	e7de      	b.n	800d1f0 <_dtoa_r+0x250>
 800d232:	2300      	movs	r3, #0
 800d234:	930b      	str	r3, [sp, #44]	; 0x2c
 800d236:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d238:	eb0a 0903 	add.w	r9, sl, r3
 800d23c:	f109 0301 	add.w	r3, r9, #1
 800d240:	2b01      	cmp	r3, #1
 800d242:	9308      	str	r3, [sp, #32]
 800d244:	bfb8      	it	lt
 800d246:	2301      	movlt	r3, #1
 800d248:	e7dd      	b.n	800d206 <_dtoa_r+0x266>
 800d24a:	2301      	movs	r3, #1
 800d24c:	e7f2      	b.n	800d234 <_dtoa_r+0x294>
 800d24e:	bf00      	nop
 800d250:	636f4361 	.word	0x636f4361
 800d254:	3fd287a7 	.word	0x3fd287a7
 800d258:	8b60c8b3 	.word	0x8b60c8b3
 800d25c:	3fc68a28 	.word	0x3fc68a28
 800d260:	509f79fb 	.word	0x509f79fb
 800d264:	3fd34413 	.word	0x3fd34413
 800d268:	080113be 	.word	0x080113be
 800d26c:	080113d5 	.word	0x080113d5
 800d270:	7ff00000 	.word	0x7ff00000
 800d274:	080113ba 	.word	0x080113ba
 800d278:	080113b1 	.word	0x080113b1
 800d27c:	0801162a 	.word	0x0801162a
 800d280:	3ff80000 	.word	0x3ff80000
 800d284:	08011540 	.word	0x08011540
 800d288:	08011430 	.word	0x08011430
 800d28c:	2401      	movs	r4, #1
 800d28e:	2300      	movs	r3, #0
 800d290:	940b      	str	r4, [sp, #44]	; 0x2c
 800d292:	9322      	str	r3, [sp, #136]	; 0x88
 800d294:	f04f 39ff 	mov.w	r9, #4294967295
 800d298:	2200      	movs	r2, #0
 800d29a:	2312      	movs	r3, #18
 800d29c:	f8cd 9020 	str.w	r9, [sp, #32]
 800d2a0:	9223      	str	r2, [sp, #140]	; 0x8c
 800d2a2:	e7b0      	b.n	800d206 <_dtoa_r+0x266>
 800d2a4:	2301      	movs	r3, #1
 800d2a6:	930b      	str	r3, [sp, #44]	; 0x2c
 800d2a8:	e7f4      	b.n	800d294 <_dtoa_r+0x2f4>
 800d2aa:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 800d2ae:	464b      	mov	r3, r9
 800d2b0:	f8cd 9020 	str.w	r9, [sp, #32]
 800d2b4:	e7a7      	b.n	800d206 <_dtoa_r+0x266>
 800d2b6:	3101      	adds	r1, #1
 800d2b8:	6041      	str	r1, [r0, #4]
 800d2ba:	0052      	lsls	r2, r2, #1
 800d2bc:	e7a7      	b.n	800d20e <_dtoa_r+0x26e>
 800d2be:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d2c0:	9a03      	ldr	r2, [sp, #12]
 800d2c2:	601a      	str	r2, [r3, #0]
 800d2c4:	9b08      	ldr	r3, [sp, #32]
 800d2c6:	2b0e      	cmp	r3, #14
 800d2c8:	f200 80a8 	bhi.w	800d41c <_dtoa_r+0x47c>
 800d2cc:	2c00      	cmp	r4, #0
 800d2ce:	f000 80a5 	beq.w	800d41c <_dtoa_r+0x47c>
 800d2d2:	f1ba 0f00 	cmp.w	sl, #0
 800d2d6:	dd34      	ble.n	800d342 <_dtoa_r+0x3a2>
 800d2d8:	4a9a      	ldr	r2, [pc, #616]	; (800d544 <_dtoa_r+0x5a4>)
 800d2da:	f00a 030f 	and.w	r3, sl, #15
 800d2de:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800d2e2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800d2e6:	e9d3 3400 	ldrd	r3, r4, [r3]
 800d2ea:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800d2ee:	ea4f 142a 	mov.w	r4, sl, asr #4
 800d2f2:	d016      	beq.n	800d322 <_dtoa_r+0x382>
 800d2f4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800d2f8:	4b93      	ldr	r3, [pc, #588]	; (800d548 <_dtoa_r+0x5a8>)
 800d2fa:	2703      	movs	r7, #3
 800d2fc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800d300:	f7f3 fa36 	bl	8000770 <__aeabi_ddiv>
 800d304:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d308:	f004 040f 	and.w	r4, r4, #15
 800d30c:	4e8e      	ldr	r6, [pc, #568]	; (800d548 <_dtoa_r+0x5a8>)
 800d30e:	b954      	cbnz	r4, 800d326 <_dtoa_r+0x386>
 800d310:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d314:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d318:	f7f3 fa2a 	bl	8000770 <__aeabi_ddiv>
 800d31c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d320:	e029      	b.n	800d376 <_dtoa_r+0x3d6>
 800d322:	2702      	movs	r7, #2
 800d324:	e7f2      	b.n	800d30c <_dtoa_r+0x36c>
 800d326:	07e1      	lsls	r1, r4, #31
 800d328:	d508      	bpl.n	800d33c <_dtoa_r+0x39c>
 800d32a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d32e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d332:	f7f3 f8f3 	bl	800051c <__aeabi_dmul>
 800d336:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d33a:	3701      	adds	r7, #1
 800d33c:	1064      	asrs	r4, r4, #1
 800d33e:	3608      	adds	r6, #8
 800d340:	e7e5      	b.n	800d30e <_dtoa_r+0x36e>
 800d342:	f000 80a5 	beq.w	800d490 <_dtoa_r+0x4f0>
 800d346:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800d34a:	f1ca 0400 	rsb	r4, sl, #0
 800d34e:	4b7d      	ldr	r3, [pc, #500]	; (800d544 <_dtoa_r+0x5a4>)
 800d350:	f004 020f 	and.w	r2, r4, #15
 800d354:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d35c:	f7f3 f8de 	bl	800051c <__aeabi_dmul>
 800d360:	2702      	movs	r7, #2
 800d362:	2300      	movs	r3, #0
 800d364:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d368:	4e77      	ldr	r6, [pc, #476]	; (800d548 <_dtoa_r+0x5a8>)
 800d36a:	1124      	asrs	r4, r4, #4
 800d36c:	2c00      	cmp	r4, #0
 800d36e:	f040 8084 	bne.w	800d47a <_dtoa_r+0x4da>
 800d372:	2b00      	cmp	r3, #0
 800d374:	d1d2      	bne.n	800d31c <_dtoa_r+0x37c>
 800d376:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d378:	2b00      	cmp	r3, #0
 800d37a:	f000 808b 	beq.w	800d494 <_dtoa_r+0x4f4>
 800d37e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800d382:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800d386:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d38a:	2200      	movs	r2, #0
 800d38c:	4b6f      	ldr	r3, [pc, #444]	; (800d54c <_dtoa_r+0x5ac>)
 800d38e:	f7f3 fb37 	bl	8000a00 <__aeabi_dcmplt>
 800d392:	2800      	cmp	r0, #0
 800d394:	d07e      	beq.n	800d494 <_dtoa_r+0x4f4>
 800d396:	9b08      	ldr	r3, [sp, #32]
 800d398:	2b00      	cmp	r3, #0
 800d39a:	d07b      	beq.n	800d494 <_dtoa_r+0x4f4>
 800d39c:	f1b9 0f00 	cmp.w	r9, #0
 800d3a0:	dd38      	ble.n	800d414 <_dtoa_r+0x474>
 800d3a2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d3a6:	2200      	movs	r2, #0
 800d3a8:	4b69      	ldr	r3, [pc, #420]	; (800d550 <_dtoa_r+0x5b0>)
 800d3aa:	f7f3 f8b7 	bl	800051c <__aeabi_dmul>
 800d3ae:	464c      	mov	r4, r9
 800d3b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d3b4:	f10a 38ff 	add.w	r8, sl, #4294967295
 800d3b8:	3701      	adds	r7, #1
 800d3ba:	4638      	mov	r0, r7
 800d3bc:	f7f3 f844 	bl	8000448 <__aeabi_i2d>
 800d3c0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d3c4:	f7f3 f8aa 	bl	800051c <__aeabi_dmul>
 800d3c8:	2200      	movs	r2, #0
 800d3ca:	4b62      	ldr	r3, [pc, #392]	; (800d554 <_dtoa_r+0x5b4>)
 800d3cc:	f7f2 fef0 	bl	80001b0 <__adddf3>
 800d3d0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800d3d4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d3d8:	9611      	str	r6, [sp, #68]	; 0x44
 800d3da:	2c00      	cmp	r4, #0
 800d3dc:	d15d      	bne.n	800d49a <_dtoa_r+0x4fa>
 800d3de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d3e2:	2200      	movs	r2, #0
 800d3e4:	4b5c      	ldr	r3, [pc, #368]	; (800d558 <_dtoa_r+0x5b8>)
 800d3e6:	f7f2 fee1 	bl	80001ac <__aeabi_dsub>
 800d3ea:	4602      	mov	r2, r0
 800d3ec:	460b      	mov	r3, r1
 800d3ee:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800d3f2:	4633      	mov	r3, r6
 800d3f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d3f6:	f7f3 fb21 	bl	8000a3c <__aeabi_dcmpgt>
 800d3fa:	2800      	cmp	r0, #0
 800d3fc:	f040 829c 	bne.w	800d938 <_dtoa_r+0x998>
 800d400:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d404:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d406:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800d40a:	f7f3 faf9 	bl	8000a00 <__aeabi_dcmplt>
 800d40e:	2800      	cmp	r0, #0
 800d410:	f040 8290 	bne.w	800d934 <_dtoa_r+0x994>
 800d414:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800d418:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800d41c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800d41e:	2b00      	cmp	r3, #0
 800d420:	f2c0 8152 	blt.w	800d6c8 <_dtoa_r+0x728>
 800d424:	f1ba 0f0e 	cmp.w	sl, #14
 800d428:	f300 814e 	bgt.w	800d6c8 <_dtoa_r+0x728>
 800d42c:	4b45      	ldr	r3, [pc, #276]	; (800d544 <_dtoa_r+0x5a4>)
 800d42e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800d432:	e9d3 3400 	ldrd	r3, r4, [r3]
 800d436:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800d43a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d43c:	2b00      	cmp	r3, #0
 800d43e:	f280 80db 	bge.w	800d5f8 <_dtoa_r+0x658>
 800d442:	9b08      	ldr	r3, [sp, #32]
 800d444:	2b00      	cmp	r3, #0
 800d446:	f300 80d7 	bgt.w	800d5f8 <_dtoa_r+0x658>
 800d44a:	f040 8272 	bne.w	800d932 <_dtoa_r+0x992>
 800d44e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d452:	2200      	movs	r2, #0
 800d454:	4b40      	ldr	r3, [pc, #256]	; (800d558 <_dtoa_r+0x5b8>)
 800d456:	f7f3 f861 	bl	800051c <__aeabi_dmul>
 800d45a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d45e:	f7f3 fae3 	bl	8000a28 <__aeabi_dcmpge>
 800d462:	9c08      	ldr	r4, [sp, #32]
 800d464:	4626      	mov	r6, r4
 800d466:	2800      	cmp	r0, #0
 800d468:	f040 8248 	bne.w	800d8fc <_dtoa_r+0x95c>
 800d46c:	2331      	movs	r3, #49	; 0x31
 800d46e:	9f03      	ldr	r7, [sp, #12]
 800d470:	f10a 0a01 	add.w	sl, sl, #1
 800d474:	f807 3b01 	strb.w	r3, [r7], #1
 800d478:	e244      	b.n	800d904 <_dtoa_r+0x964>
 800d47a:	07e2      	lsls	r2, r4, #31
 800d47c:	d505      	bpl.n	800d48a <_dtoa_r+0x4ea>
 800d47e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d482:	f7f3 f84b 	bl	800051c <__aeabi_dmul>
 800d486:	2301      	movs	r3, #1
 800d488:	3701      	adds	r7, #1
 800d48a:	1064      	asrs	r4, r4, #1
 800d48c:	3608      	adds	r6, #8
 800d48e:	e76d      	b.n	800d36c <_dtoa_r+0x3cc>
 800d490:	2702      	movs	r7, #2
 800d492:	e770      	b.n	800d376 <_dtoa_r+0x3d6>
 800d494:	46d0      	mov	r8, sl
 800d496:	9c08      	ldr	r4, [sp, #32]
 800d498:	e78f      	b.n	800d3ba <_dtoa_r+0x41a>
 800d49a:	9903      	ldr	r1, [sp, #12]
 800d49c:	4b29      	ldr	r3, [pc, #164]	; (800d544 <_dtoa_r+0x5a4>)
 800d49e:	4421      	add	r1, r4
 800d4a0:	9112      	str	r1, [sp, #72]	; 0x48
 800d4a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d4a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800d4a8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800d4ac:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d4b0:	2900      	cmp	r1, #0
 800d4b2:	d055      	beq.n	800d560 <_dtoa_r+0x5c0>
 800d4b4:	2000      	movs	r0, #0
 800d4b6:	4929      	ldr	r1, [pc, #164]	; (800d55c <_dtoa_r+0x5bc>)
 800d4b8:	f7f3 f95a 	bl	8000770 <__aeabi_ddiv>
 800d4bc:	463b      	mov	r3, r7
 800d4be:	4632      	mov	r2, r6
 800d4c0:	f7f2 fe74 	bl	80001ac <__aeabi_dsub>
 800d4c4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d4c8:	9f03      	ldr	r7, [sp, #12]
 800d4ca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d4ce:	f7f3 fad5 	bl	8000a7c <__aeabi_d2iz>
 800d4d2:	4604      	mov	r4, r0
 800d4d4:	f7f2 ffb8 	bl	8000448 <__aeabi_i2d>
 800d4d8:	4602      	mov	r2, r0
 800d4da:	460b      	mov	r3, r1
 800d4dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d4e0:	f7f2 fe64 	bl	80001ac <__aeabi_dsub>
 800d4e4:	4602      	mov	r2, r0
 800d4e6:	460b      	mov	r3, r1
 800d4e8:	3430      	adds	r4, #48	; 0x30
 800d4ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800d4ee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d4f2:	f807 4b01 	strb.w	r4, [r7], #1
 800d4f6:	f7f3 fa83 	bl	8000a00 <__aeabi_dcmplt>
 800d4fa:	2800      	cmp	r0, #0
 800d4fc:	d174      	bne.n	800d5e8 <_dtoa_r+0x648>
 800d4fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800d502:	2000      	movs	r0, #0
 800d504:	4911      	ldr	r1, [pc, #68]	; (800d54c <_dtoa_r+0x5ac>)
 800d506:	f7f2 fe51 	bl	80001ac <__aeabi_dsub>
 800d50a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d50e:	f7f3 fa77 	bl	8000a00 <__aeabi_dcmplt>
 800d512:	2800      	cmp	r0, #0
 800d514:	f040 80b7 	bne.w	800d686 <_dtoa_r+0x6e6>
 800d518:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d51a:	429f      	cmp	r7, r3
 800d51c:	f43f af7a 	beq.w	800d414 <_dtoa_r+0x474>
 800d520:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d524:	2200      	movs	r2, #0
 800d526:	4b0a      	ldr	r3, [pc, #40]	; (800d550 <_dtoa_r+0x5b0>)
 800d528:	f7f2 fff8 	bl	800051c <__aeabi_dmul>
 800d52c:	2200      	movs	r2, #0
 800d52e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d532:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d536:	4b06      	ldr	r3, [pc, #24]	; (800d550 <_dtoa_r+0x5b0>)
 800d538:	f7f2 fff0 	bl	800051c <__aeabi_dmul>
 800d53c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d540:	e7c3      	b.n	800d4ca <_dtoa_r+0x52a>
 800d542:	bf00      	nop
 800d544:	08011540 	.word	0x08011540
 800d548:	08011518 	.word	0x08011518
 800d54c:	3ff00000 	.word	0x3ff00000
 800d550:	40240000 	.word	0x40240000
 800d554:	401c0000 	.word	0x401c0000
 800d558:	40140000 	.word	0x40140000
 800d55c:	3fe00000 	.word	0x3fe00000
 800d560:	4630      	mov	r0, r6
 800d562:	4639      	mov	r1, r7
 800d564:	f7f2 ffda 	bl	800051c <__aeabi_dmul>
 800d568:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d56a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800d56e:	9c03      	ldr	r4, [sp, #12]
 800d570:	9314      	str	r3, [sp, #80]	; 0x50
 800d572:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d576:	f7f3 fa81 	bl	8000a7c <__aeabi_d2iz>
 800d57a:	9015      	str	r0, [sp, #84]	; 0x54
 800d57c:	f7f2 ff64 	bl	8000448 <__aeabi_i2d>
 800d580:	4602      	mov	r2, r0
 800d582:	460b      	mov	r3, r1
 800d584:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800d588:	f7f2 fe10 	bl	80001ac <__aeabi_dsub>
 800d58c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d58e:	4606      	mov	r6, r0
 800d590:	3330      	adds	r3, #48	; 0x30
 800d592:	f804 3b01 	strb.w	r3, [r4], #1
 800d596:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d598:	460f      	mov	r7, r1
 800d59a:	429c      	cmp	r4, r3
 800d59c:	f04f 0200 	mov.w	r2, #0
 800d5a0:	d124      	bne.n	800d5ec <_dtoa_r+0x64c>
 800d5a2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800d5a6:	4bb0      	ldr	r3, [pc, #704]	; (800d868 <_dtoa_r+0x8c8>)
 800d5a8:	f7f2 fe02 	bl	80001b0 <__adddf3>
 800d5ac:	4602      	mov	r2, r0
 800d5ae:	460b      	mov	r3, r1
 800d5b0:	4630      	mov	r0, r6
 800d5b2:	4639      	mov	r1, r7
 800d5b4:	f7f3 fa42 	bl	8000a3c <__aeabi_dcmpgt>
 800d5b8:	2800      	cmp	r0, #0
 800d5ba:	d163      	bne.n	800d684 <_dtoa_r+0x6e4>
 800d5bc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d5c0:	2000      	movs	r0, #0
 800d5c2:	49a9      	ldr	r1, [pc, #676]	; (800d868 <_dtoa_r+0x8c8>)
 800d5c4:	f7f2 fdf2 	bl	80001ac <__aeabi_dsub>
 800d5c8:	4602      	mov	r2, r0
 800d5ca:	460b      	mov	r3, r1
 800d5cc:	4630      	mov	r0, r6
 800d5ce:	4639      	mov	r1, r7
 800d5d0:	f7f3 fa16 	bl	8000a00 <__aeabi_dcmplt>
 800d5d4:	2800      	cmp	r0, #0
 800d5d6:	f43f af1d 	beq.w	800d414 <_dtoa_r+0x474>
 800d5da:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800d5dc:	1e7b      	subs	r3, r7, #1
 800d5de:	9314      	str	r3, [sp, #80]	; 0x50
 800d5e0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800d5e4:	2b30      	cmp	r3, #48	; 0x30
 800d5e6:	d0f8      	beq.n	800d5da <_dtoa_r+0x63a>
 800d5e8:	46c2      	mov	sl, r8
 800d5ea:	e03b      	b.n	800d664 <_dtoa_r+0x6c4>
 800d5ec:	4b9f      	ldr	r3, [pc, #636]	; (800d86c <_dtoa_r+0x8cc>)
 800d5ee:	f7f2 ff95 	bl	800051c <__aeabi_dmul>
 800d5f2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800d5f6:	e7bc      	b.n	800d572 <_dtoa_r+0x5d2>
 800d5f8:	9f03      	ldr	r7, [sp, #12]
 800d5fa:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800d5fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d602:	4640      	mov	r0, r8
 800d604:	4649      	mov	r1, r9
 800d606:	f7f3 f8b3 	bl	8000770 <__aeabi_ddiv>
 800d60a:	f7f3 fa37 	bl	8000a7c <__aeabi_d2iz>
 800d60e:	4604      	mov	r4, r0
 800d610:	f7f2 ff1a 	bl	8000448 <__aeabi_i2d>
 800d614:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d618:	f7f2 ff80 	bl	800051c <__aeabi_dmul>
 800d61c:	4602      	mov	r2, r0
 800d61e:	460b      	mov	r3, r1
 800d620:	4640      	mov	r0, r8
 800d622:	4649      	mov	r1, r9
 800d624:	f7f2 fdc2 	bl	80001ac <__aeabi_dsub>
 800d628:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800d62c:	f807 6b01 	strb.w	r6, [r7], #1
 800d630:	9e03      	ldr	r6, [sp, #12]
 800d632:	f8dd c020 	ldr.w	ip, [sp, #32]
 800d636:	1bbe      	subs	r6, r7, r6
 800d638:	45b4      	cmp	ip, r6
 800d63a:	4602      	mov	r2, r0
 800d63c:	460b      	mov	r3, r1
 800d63e:	d136      	bne.n	800d6ae <_dtoa_r+0x70e>
 800d640:	f7f2 fdb6 	bl	80001b0 <__adddf3>
 800d644:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d648:	4680      	mov	r8, r0
 800d64a:	4689      	mov	r9, r1
 800d64c:	f7f3 f9f6 	bl	8000a3c <__aeabi_dcmpgt>
 800d650:	bb58      	cbnz	r0, 800d6aa <_dtoa_r+0x70a>
 800d652:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d656:	4640      	mov	r0, r8
 800d658:	4649      	mov	r1, r9
 800d65a:	f7f3 f9c7 	bl	80009ec <__aeabi_dcmpeq>
 800d65e:	b108      	cbz	r0, 800d664 <_dtoa_r+0x6c4>
 800d660:	07e1      	lsls	r1, r4, #31
 800d662:	d422      	bmi.n	800d6aa <_dtoa_r+0x70a>
 800d664:	4628      	mov	r0, r5
 800d666:	4659      	mov	r1, fp
 800d668:	f000 fe6c 	bl	800e344 <_Bfree>
 800d66c:	2300      	movs	r3, #0
 800d66e:	703b      	strb	r3, [r7, #0]
 800d670:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800d672:	f10a 0001 	add.w	r0, sl, #1
 800d676:	6018      	str	r0, [r3, #0]
 800d678:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d67a:	2b00      	cmp	r3, #0
 800d67c:	f43f acde 	beq.w	800d03c <_dtoa_r+0x9c>
 800d680:	601f      	str	r7, [r3, #0]
 800d682:	e4db      	b.n	800d03c <_dtoa_r+0x9c>
 800d684:	4627      	mov	r7, r4
 800d686:	463b      	mov	r3, r7
 800d688:	461f      	mov	r7, r3
 800d68a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d68e:	2a39      	cmp	r2, #57	; 0x39
 800d690:	d107      	bne.n	800d6a2 <_dtoa_r+0x702>
 800d692:	9a03      	ldr	r2, [sp, #12]
 800d694:	429a      	cmp	r2, r3
 800d696:	d1f7      	bne.n	800d688 <_dtoa_r+0x6e8>
 800d698:	2230      	movs	r2, #48	; 0x30
 800d69a:	9903      	ldr	r1, [sp, #12]
 800d69c:	f108 0801 	add.w	r8, r8, #1
 800d6a0:	700a      	strb	r2, [r1, #0]
 800d6a2:	781a      	ldrb	r2, [r3, #0]
 800d6a4:	3201      	adds	r2, #1
 800d6a6:	701a      	strb	r2, [r3, #0]
 800d6a8:	e79e      	b.n	800d5e8 <_dtoa_r+0x648>
 800d6aa:	46d0      	mov	r8, sl
 800d6ac:	e7eb      	b.n	800d686 <_dtoa_r+0x6e6>
 800d6ae:	2200      	movs	r2, #0
 800d6b0:	4b6e      	ldr	r3, [pc, #440]	; (800d86c <_dtoa_r+0x8cc>)
 800d6b2:	f7f2 ff33 	bl	800051c <__aeabi_dmul>
 800d6b6:	2200      	movs	r2, #0
 800d6b8:	2300      	movs	r3, #0
 800d6ba:	4680      	mov	r8, r0
 800d6bc:	4689      	mov	r9, r1
 800d6be:	f7f3 f995 	bl	80009ec <__aeabi_dcmpeq>
 800d6c2:	2800      	cmp	r0, #0
 800d6c4:	d09b      	beq.n	800d5fe <_dtoa_r+0x65e>
 800d6c6:	e7cd      	b.n	800d664 <_dtoa_r+0x6c4>
 800d6c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d6ca:	2a00      	cmp	r2, #0
 800d6cc:	f000 80d0 	beq.w	800d870 <_dtoa_r+0x8d0>
 800d6d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800d6d2:	2a01      	cmp	r2, #1
 800d6d4:	f300 80ae 	bgt.w	800d834 <_dtoa_r+0x894>
 800d6d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d6da:	2a00      	cmp	r2, #0
 800d6dc:	f000 80a6 	beq.w	800d82c <_dtoa_r+0x88c>
 800d6e0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d6e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d6e6:	9f06      	ldr	r7, [sp, #24]
 800d6e8:	9a06      	ldr	r2, [sp, #24]
 800d6ea:	2101      	movs	r1, #1
 800d6ec:	441a      	add	r2, r3
 800d6ee:	9206      	str	r2, [sp, #24]
 800d6f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d6f2:	4628      	mov	r0, r5
 800d6f4:	441a      	add	r2, r3
 800d6f6:	9209      	str	r2, [sp, #36]	; 0x24
 800d6f8:	f000 ff24 	bl	800e544 <__i2b>
 800d6fc:	4606      	mov	r6, r0
 800d6fe:	2f00      	cmp	r7, #0
 800d700:	dd0c      	ble.n	800d71c <_dtoa_r+0x77c>
 800d702:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d704:	2b00      	cmp	r3, #0
 800d706:	dd09      	ble.n	800d71c <_dtoa_r+0x77c>
 800d708:	42bb      	cmp	r3, r7
 800d70a:	bfa8      	it	ge
 800d70c:	463b      	movge	r3, r7
 800d70e:	9a06      	ldr	r2, [sp, #24]
 800d710:	1aff      	subs	r7, r7, r3
 800d712:	1ad2      	subs	r2, r2, r3
 800d714:	9206      	str	r2, [sp, #24]
 800d716:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d718:	1ad3      	subs	r3, r2, r3
 800d71a:	9309      	str	r3, [sp, #36]	; 0x24
 800d71c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d71e:	b1f3      	cbz	r3, 800d75e <_dtoa_r+0x7be>
 800d720:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d722:	2b00      	cmp	r3, #0
 800d724:	f000 80a8 	beq.w	800d878 <_dtoa_r+0x8d8>
 800d728:	2c00      	cmp	r4, #0
 800d72a:	dd10      	ble.n	800d74e <_dtoa_r+0x7ae>
 800d72c:	4631      	mov	r1, r6
 800d72e:	4622      	mov	r2, r4
 800d730:	4628      	mov	r0, r5
 800d732:	f000 ffc5 	bl	800e6c0 <__pow5mult>
 800d736:	465a      	mov	r2, fp
 800d738:	4601      	mov	r1, r0
 800d73a:	4606      	mov	r6, r0
 800d73c:	4628      	mov	r0, r5
 800d73e:	f000 ff17 	bl	800e570 <__multiply>
 800d742:	4680      	mov	r8, r0
 800d744:	4659      	mov	r1, fp
 800d746:	4628      	mov	r0, r5
 800d748:	f000 fdfc 	bl	800e344 <_Bfree>
 800d74c:	46c3      	mov	fp, r8
 800d74e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d750:	1b1a      	subs	r2, r3, r4
 800d752:	d004      	beq.n	800d75e <_dtoa_r+0x7be>
 800d754:	4659      	mov	r1, fp
 800d756:	4628      	mov	r0, r5
 800d758:	f000 ffb2 	bl	800e6c0 <__pow5mult>
 800d75c:	4683      	mov	fp, r0
 800d75e:	2101      	movs	r1, #1
 800d760:	4628      	mov	r0, r5
 800d762:	f000 feef 	bl	800e544 <__i2b>
 800d766:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d768:	4604      	mov	r4, r0
 800d76a:	2b00      	cmp	r3, #0
 800d76c:	f340 8086 	ble.w	800d87c <_dtoa_r+0x8dc>
 800d770:	461a      	mov	r2, r3
 800d772:	4601      	mov	r1, r0
 800d774:	4628      	mov	r0, r5
 800d776:	f000 ffa3 	bl	800e6c0 <__pow5mult>
 800d77a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d77c:	4604      	mov	r4, r0
 800d77e:	2b01      	cmp	r3, #1
 800d780:	dd7f      	ble.n	800d882 <_dtoa_r+0x8e2>
 800d782:	f04f 0800 	mov.w	r8, #0
 800d786:	6923      	ldr	r3, [r4, #16]
 800d788:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d78c:	6918      	ldr	r0, [r3, #16]
 800d78e:	f000 fe8b 	bl	800e4a8 <__hi0bits>
 800d792:	f1c0 0020 	rsb	r0, r0, #32
 800d796:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d798:	4418      	add	r0, r3
 800d79a:	f010 001f 	ands.w	r0, r0, #31
 800d79e:	f000 8092 	beq.w	800d8c6 <_dtoa_r+0x926>
 800d7a2:	f1c0 0320 	rsb	r3, r0, #32
 800d7a6:	2b04      	cmp	r3, #4
 800d7a8:	f340 808a 	ble.w	800d8c0 <_dtoa_r+0x920>
 800d7ac:	f1c0 001c 	rsb	r0, r0, #28
 800d7b0:	9b06      	ldr	r3, [sp, #24]
 800d7b2:	4407      	add	r7, r0
 800d7b4:	4403      	add	r3, r0
 800d7b6:	9306      	str	r3, [sp, #24]
 800d7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7ba:	4403      	add	r3, r0
 800d7bc:	9309      	str	r3, [sp, #36]	; 0x24
 800d7be:	9b06      	ldr	r3, [sp, #24]
 800d7c0:	2b00      	cmp	r3, #0
 800d7c2:	dd05      	ble.n	800d7d0 <_dtoa_r+0x830>
 800d7c4:	4659      	mov	r1, fp
 800d7c6:	461a      	mov	r2, r3
 800d7c8:	4628      	mov	r0, r5
 800d7ca:	f000 ffd3 	bl	800e774 <__lshift>
 800d7ce:	4683      	mov	fp, r0
 800d7d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7d2:	2b00      	cmp	r3, #0
 800d7d4:	dd05      	ble.n	800d7e2 <_dtoa_r+0x842>
 800d7d6:	4621      	mov	r1, r4
 800d7d8:	461a      	mov	r2, r3
 800d7da:	4628      	mov	r0, r5
 800d7dc:	f000 ffca 	bl	800e774 <__lshift>
 800d7e0:	4604      	mov	r4, r0
 800d7e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d7e4:	2b00      	cmp	r3, #0
 800d7e6:	d070      	beq.n	800d8ca <_dtoa_r+0x92a>
 800d7e8:	4621      	mov	r1, r4
 800d7ea:	4658      	mov	r0, fp
 800d7ec:	f001 f832 	bl	800e854 <__mcmp>
 800d7f0:	2800      	cmp	r0, #0
 800d7f2:	da6a      	bge.n	800d8ca <_dtoa_r+0x92a>
 800d7f4:	2300      	movs	r3, #0
 800d7f6:	4659      	mov	r1, fp
 800d7f8:	220a      	movs	r2, #10
 800d7fa:	4628      	mov	r0, r5
 800d7fc:	f000 fdc4 	bl	800e388 <__multadd>
 800d800:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d802:	4683      	mov	fp, r0
 800d804:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d808:	2b00      	cmp	r3, #0
 800d80a:	f000 8194 	beq.w	800db36 <_dtoa_r+0xb96>
 800d80e:	4631      	mov	r1, r6
 800d810:	2300      	movs	r3, #0
 800d812:	220a      	movs	r2, #10
 800d814:	4628      	mov	r0, r5
 800d816:	f000 fdb7 	bl	800e388 <__multadd>
 800d81a:	f1b9 0f00 	cmp.w	r9, #0
 800d81e:	4606      	mov	r6, r0
 800d820:	f300 8093 	bgt.w	800d94a <_dtoa_r+0x9aa>
 800d824:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d826:	2b02      	cmp	r3, #2
 800d828:	dc57      	bgt.n	800d8da <_dtoa_r+0x93a>
 800d82a:	e08e      	b.n	800d94a <_dtoa_r+0x9aa>
 800d82c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800d82e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d832:	e757      	b.n	800d6e4 <_dtoa_r+0x744>
 800d834:	9b08      	ldr	r3, [sp, #32]
 800d836:	1e5c      	subs	r4, r3, #1
 800d838:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d83a:	42a3      	cmp	r3, r4
 800d83c:	bfb7      	itett	lt
 800d83e:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d840:	1b1c      	subge	r4, r3, r4
 800d842:	1ae2      	sublt	r2, r4, r3
 800d844:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800d846:	bfbe      	ittt	lt
 800d848:	940a      	strlt	r4, [sp, #40]	; 0x28
 800d84a:	189b      	addlt	r3, r3, r2
 800d84c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800d84e:	9b08      	ldr	r3, [sp, #32]
 800d850:	bfb8      	it	lt
 800d852:	2400      	movlt	r4, #0
 800d854:	2b00      	cmp	r3, #0
 800d856:	bfbb      	ittet	lt
 800d858:	9b06      	ldrlt	r3, [sp, #24]
 800d85a:	9a08      	ldrlt	r2, [sp, #32]
 800d85c:	9f06      	ldrge	r7, [sp, #24]
 800d85e:	1a9f      	sublt	r7, r3, r2
 800d860:	bfac      	ite	ge
 800d862:	9b08      	ldrge	r3, [sp, #32]
 800d864:	2300      	movlt	r3, #0
 800d866:	e73f      	b.n	800d6e8 <_dtoa_r+0x748>
 800d868:	3fe00000 	.word	0x3fe00000
 800d86c:	40240000 	.word	0x40240000
 800d870:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d872:	9f06      	ldr	r7, [sp, #24]
 800d874:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800d876:	e742      	b.n	800d6fe <_dtoa_r+0x75e>
 800d878:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d87a:	e76b      	b.n	800d754 <_dtoa_r+0x7b4>
 800d87c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d87e:	2b01      	cmp	r3, #1
 800d880:	dc19      	bgt.n	800d8b6 <_dtoa_r+0x916>
 800d882:	9b04      	ldr	r3, [sp, #16]
 800d884:	b9bb      	cbnz	r3, 800d8b6 <_dtoa_r+0x916>
 800d886:	9b05      	ldr	r3, [sp, #20]
 800d888:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800d88c:	b99b      	cbnz	r3, 800d8b6 <_dtoa_r+0x916>
 800d88e:	9b05      	ldr	r3, [sp, #20]
 800d890:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800d894:	0d1b      	lsrs	r3, r3, #20
 800d896:	051b      	lsls	r3, r3, #20
 800d898:	b183      	cbz	r3, 800d8bc <_dtoa_r+0x91c>
 800d89a:	f04f 0801 	mov.w	r8, #1
 800d89e:	9b06      	ldr	r3, [sp, #24]
 800d8a0:	3301      	adds	r3, #1
 800d8a2:	9306      	str	r3, [sp, #24]
 800d8a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d8a6:	3301      	adds	r3, #1
 800d8a8:	9309      	str	r3, [sp, #36]	; 0x24
 800d8aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d8ac:	2b00      	cmp	r3, #0
 800d8ae:	f47f af6a 	bne.w	800d786 <_dtoa_r+0x7e6>
 800d8b2:	2001      	movs	r0, #1
 800d8b4:	e76f      	b.n	800d796 <_dtoa_r+0x7f6>
 800d8b6:	f04f 0800 	mov.w	r8, #0
 800d8ba:	e7f6      	b.n	800d8aa <_dtoa_r+0x90a>
 800d8bc:	4698      	mov	r8, r3
 800d8be:	e7f4      	b.n	800d8aa <_dtoa_r+0x90a>
 800d8c0:	f43f af7d 	beq.w	800d7be <_dtoa_r+0x81e>
 800d8c4:	4618      	mov	r0, r3
 800d8c6:	301c      	adds	r0, #28
 800d8c8:	e772      	b.n	800d7b0 <_dtoa_r+0x810>
 800d8ca:	9b08      	ldr	r3, [sp, #32]
 800d8cc:	2b00      	cmp	r3, #0
 800d8ce:	dc36      	bgt.n	800d93e <_dtoa_r+0x99e>
 800d8d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d8d2:	2b02      	cmp	r3, #2
 800d8d4:	dd33      	ble.n	800d93e <_dtoa_r+0x99e>
 800d8d6:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d8da:	f1b9 0f00 	cmp.w	r9, #0
 800d8de:	d10d      	bne.n	800d8fc <_dtoa_r+0x95c>
 800d8e0:	4621      	mov	r1, r4
 800d8e2:	464b      	mov	r3, r9
 800d8e4:	2205      	movs	r2, #5
 800d8e6:	4628      	mov	r0, r5
 800d8e8:	f000 fd4e 	bl	800e388 <__multadd>
 800d8ec:	4601      	mov	r1, r0
 800d8ee:	4604      	mov	r4, r0
 800d8f0:	4658      	mov	r0, fp
 800d8f2:	f000 ffaf 	bl	800e854 <__mcmp>
 800d8f6:	2800      	cmp	r0, #0
 800d8f8:	f73f adb8 	bgt.w	800d46c <_dtoa_r+0x4cc>
 800d8fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d8fe:	9f03      	ldr	r7, [sp, #12]
 800d900:	ea6f 0a03 	mvn.w	sl, r3
 800d904:	f04f 0800 	mov.w	r8, #0
 800d908:	4621      	mov	r1, r4
 800d90a:	4628      	mov	r0, r5
 800d90c:	f000 fd1a 	bl	800e344 <_Bfree>
 800d910:	2e00      	cmp	r6, #0
 800d912:	f43f aea7 	beq.w	800d664 <_dtoa_r+0x6c4>
 800d916:	f1b8 0f00 	cmp.w	r8, #0
 800d91a:	d005      	beq.n	800d928 <_dtoa_r+0x988>
 800d91c:	45b0      	cmp	r8, r6
 800d91e:	d003      	beq.n	800d928 <_dtoa_r+0x988>
 800d920:	4641      	mov	r1, r8
 800d922:	4628      	mov	r0, r5
 800d924:	f000 fd0e 	bl	800e344 <_Bfree>
 800d928:	4631      	mov	r1, r6
 800d92a:	4628      	mov	r0, r5
 800d92c:	f000 fd0a 	bl	800e344 <_Bfree>
 800d930:	e698      	b.n	800d664 <_dtoa_r+0x6c4>
 800d932:	2400      	movs	r4, #0
 800d934:	4626      	mov	r6, r4
 800d936:	e7e1      	b.n	800d8fc <_dtoa_r+0x95c>
 800d938:	46c2      	mov	sl, r8
 800d93a:	4626      	mov	r6, r4
 800d93c:	e596      	b.n	800d46c <_dtoa_r+0x4cc>
 800d93e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d940:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d944:	2b00      	cmp	r3, #0
 800d946:	f000 80fd 	beq.w	800db44 <_dtoa_r+0xba4>
 800d94a:	2f00      	cmp	r7, #0
 800d94c:	dd05      	ble.n	800d95a <_dtoa_r+0x9ba>
 800d94e:	4631      	mov	r1, r6
 800d950:	463a      	mov	r2, r7
 800d952:	4628      	mov	r0, r5
 800d954:	f000 ff0e 	bl	800e774 <__lshift>
 800d958:	4606      	mov	r6, r0
 800d95a:	f1b8 0f00 	cmp.w	r8, #0
 800d95e:	d05c      	beq.n	800da1a <_dtoa_r+0xa7a>
 800d960:	4628      	mov	r0, r5
 800d962:	6871      	ldr	r1, [r6, #4]
 800d964:	f000 fcae 	bl	800e2c4 <_Balloc>
 800d968:	4607      	mov	r7, r0
 800d96a:	b928      	cbnz	r0, 800d978 <_dtoa_r+0x9d8>
 800d96c:	4602      	mov	r2, r0
 800d96e:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d972:	4b7f      	ldr	r3, [pc, #508]	; (800db70 <_dtoa_r+0xbd0>)
 800d974:	f7ff bb28 	b.w	800cfc8 <_dtoa_r+0x28>
 800d978:	6932      	ldr	r2, [r6, #16]
 800d97a:	f106 010c 	add.w	r1, r6, #12
 800d97e:	3202      	adds	r2, #2
 800d980:	0092      	lsls	r2, r2, #2
 800d982:	300c      	adds	r0, #12
 800d984:	f7fd fcb6 	bl	800b2f4 <memcpy>
 800d988:	2201      	movs	r2, #1
 800d98a:	4639      	mov	r1, r7
 800d98c:	4628      	mov	r0, r5
 800d98e:	f000 fef1 	bl	800e774 <__lshift>
 800d992:	46b0      	mov	r8, r6
 800d994:	4606      	mov	r6, r0
 800d996:	9b03      	ldr	r3, [sp, #12]
 800d998:	3301      	adds	r3, #1
 800d99a:	9308      	str	r3, [sp, #32]
 800d99c:	9b03      	ldr	r3, [sp, #12]
 800d99e:	444b      	add	r3, r9
 800d9a0:	930a      	str	r3, [sp, #40]	; 0x28
 800d9a2:	9b04      	ldr	r3, [sp, #16]
 800d9a4:	f003 0301 	and.w	r3, r3, #1
 800d9a8:	9309      	str	r3, [sp, #36]	; 0x24
 800d9aa:	9b08      	ldr	r3, [sp, #32]
 800d9ac:	4621      	mov	r1, r4
 800d9ae:	3b01      	subs	r3, #1
 800d9b0:	4658      	mov	r0, fp
 800d9b2:	9304      	str	r3, [sp, #16]
 800d9b4:	f7ff fa66 	bl	800ce84 <quorem>
 800d9b8:	4603      	mov	r3, r0
 800d9ba:	4641      	mov	r1, r8
 800d9bc:	3330      	adds	r3, #48	; 0x30
 800d9be:	9006      	str	r0, [sp, #24]
 800d9c0:	4658      	mov	r0, fp
 800d9c2:	930b      	str	r3, [sp, #44]	; 0x2c
 800d9c4:	f000 ff46 	bl	800e854 <__mcmp>
 800d9c8:	4632      	mov	r2, r6
 800d9ca:	4681      	mov	r9, r0
 800d9cc:	4621      	mov	r1, r4
 800d9ce:	4628      	mov	r0, r5
 800d9d0:	f000 ff5c 	bl	800e88c <__mdiff>
 800d9d4:	68c2      	ldr	r2, [r0, #12]
 800d9d6:	4607      	mov	r7, r0
 800d9d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d9da:	bb02      	cbnz	r2, 800da1e <_dtoa_r+0xa7e>
 800d9dc:	4601      	mov	r1, r0
 800d9de:	4658      	mov	r0, fp
 800d9e0:	f000 ff38 	bl	800e854 <__mcmp>
 800d9e4:	4602      	mov	r2, r0
 800d9e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d9e8:	4639      	mov	r1, r7
 800d9ea:	4628      	mov	r0, r5
 800d9ec:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800d9f0:	f000 fca8 	bl	800e344 <_Bfree>
 800d9f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d9f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d9f8:	9f08      	ldr	r7, [sp, #32]
 800d9fa:	ea43 0102 	orr.w	r1, r3, r2
 800d9fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800da00:	430b      	orrs	r3, r1
 800da02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800da04:	d10d      	bne.n	800da22 <_dtoa_r+0xa82>
 800da06:	2b39      	cmp	r3, #57	; 0x39
 800da08:	d029      	beq.n	800da5e <_dtoa_r+0xabe>
 800da0a:	f1b9 0f00 	cmp.w	r9, #0
 800da0e:	dd01      	ble.n	800da14 <_dtoa_r+0xa74>
 800da10:	9b06      	ldr	r3, [sp, #24]
 800da12:	3331      	adds	r3, #49	; 0x31
 800da14:	9a04      	ldr	r2, [sp, #16]
 800da16:	7013      	strb	r3, [r2, #0]
 800da18:	e776      	b.n	800d908 <_dtoa_r+0x968>
 800da1a:	4630      	mov	r0, r6
 800da1c:	e7b9      	b.n	800d992 <_dtoa_r+0x9f2>
 800da1e:	2201      	movs	r2, #1
 800da20:	e7e2      	b.n	800d9e8 <_dtoa_r+0xa48>
 800da22:	f1b9 0f00 	cmp.w	r9, #0
 800da26:	db06      	blt.n	800da36 <_dtoa_r+0xa96>
 800da28:	9922      	ldr	r1, [sp, #136]	; 0x88
 800da2a:	ea41 0909 	orr.w	r9, r1, r9
 800da2e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800da30:	ea59 0101 	orrs.w	r1, r9, r1
 800da34:	d120      	bne.n	800da78 <_dtoa_r+0xad8>
 800da36:	2a00      	cmp	r2, #0
 800da38:	ddec      	ble.n	800da14 <_dtoa_r+0xa74>
 800da3a:	4659      	mov	r1, fp
 800da3c:	2201      	movs	r2, #1
 800da3e:	4628      	mov	r0, r5
 800da40:	9308      	str	r3, [sp, #32]
 800da42:	f000 fe97 	bl	800e774 <__lshift>
 800da46:	4621      	mov	r1, r4
 800da48:	4683      	mov	fp, r0
 800da4a:	f000 ff03 	bl	800e854 <__mcmp>
 800da4e:	2800      	cmp	r0, #0
 800da50:	9b08      	ldr	r3, [sp, #32]
 800da52:	dc02      	bgt.n	800da5a <_dtoa_r+0xaba>
 800da54:	d1de      	bne.n	800da14 <_dtoa_r+0xa74>
 800da56:	07da      	lsls	r2, r3, #31
 800da58:	d5dc      	bpl.n	800da14 <_dtoa_r+0xa74>
 800da5a:	2b39      	cmp	r3, #57	; 0x39
 800da5c:	d1d8      	bne.n	800da10 <_dtoa_r+0xa70>
 800da5e:	2339      	movs	r3, #57	; 0x39
 800da60:	9a04      	ldr	r2, [sp, #16]
 800da62:	7013      	strb	r3, [r2, #0]
 800da64:	463b      	mov	r3, r7
 800da66:	461f      	mov	r7, r3
 800da68:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800da6c:	3b01      	subs	r3, #1
 800da6e:	2a39      	cmp	r2, #57	; 0x39
 800da70:	d050      	beq.n	800db14 <_dtoa_r+0xb74>
 800da72:	3201      	adds	r2, #1
 800da74:	701a      	strb	r2, [r3, #0]
 800da76:	e747      	b.n	800d908 <_dtoa_r+0x968>
 800da78:	2a00      	cmp	r2, #0
 800da7a:	dd03      	ble.n	800da84 <_dtoa_r+0xae4>
 800da7c:	2b39      	cmp	r3, #57	; 0x39
 800da7e:	d0ee      	beq.n	800da5e <_dtoa_r+0xabe>
 800da80:	3301      	adds	r3, #1
 800da82:	e7c7      	b.n	800da14 <_dtoa_r+0xa74>
 800da84:	9a08      	ldr	r2, [sp, #32]
 800da86:	990a      	ldr	r1, [sp, #40]	; 0x28
 800da88:	f802 3c01 	strb.w	r3, [r2, #-1]
 800da8c:	428a      	cmp	r2, r1
 800da8e:	d02a      	beq.n	800dae6 <_dtoa_r+0xb46>
 800da90:	4659      	mov	r1, fp
 800da92:	2300      	movs	r3, #0
 800da94:	220a      	movs	r2, #10
 800da96:	4628      	mov	r0, r5
 800da98:	f000 fc76 	bl	800e388 <__multadd>
 800da9c:	45b0      	cmp	r8, r6
 800da9e:	4683      	mov	fp, r0
 800daa0:	f04f 0300 	mov.w	r3, #0
 800daa4:	f04f 020a 	mov.w	r2, #10
 800daa8:	4641      	mov	r1, r8
 800daaa:	4628      	mov	r0, r5
 800daac:	d107      	bne.n	800dabe <_dtoa_r+0xb1e>
 800daae:	f000 fc6b 	bl	800e388 <__multadd>
 800dab2:	4680      	mov	r8, r0
 800dab4:	4606      	mov	r6, r0
 800dab6:	9b08      	ldr	r3, [sp, #32]
 800dab8:	3301      	adds	r3, #1
 800daba:	9308      	str	r3, [sp, #32]
 800dabc:	e775      	b.n	800d9aa <_dtoa_r+0xa0a>
 800dabe:	f000 fc63 	bl	800e388 <__multadd>
 800dac2:	4631      	mov	r1, r6
 800dac4:	4680      	mov	r8, r0
 800dac6:	2300      	movs	r3, #0
 800dac8:	220a      	movs	r2, #10
 800daca:	4628      	mov	r0, r5
 800dacc:	f000 fc5c 	bl	800e388 <__multadd>
 800dad0:	4606      	mov	r6, r0
 800dad2:	e7f0      	b.n	800dab6 <_dtoa_r+0xb16>
 800dad4:	f1b9 0f00 	cmp.w	r9, #0
 800dad8:	bfcc      	ite	gt
 800dada:	464f      	movgt	r7, r9
 800dadc:	2701      	movle	r7, #1
 800dade:	f04f 0800 	mov.w	r8, #0
 800dae2:	9a03      	ldr	r2, [sp, #12]
 800dae4:	4417      	add	r7, r2
 800dae6:	4659      	mov	r1, fp
 800dae8:	2201      	movs	r2, #1
 800daea:	4628      	mov	r0, r5
 800daec:	9308      	str	r3, [sp, #32]
 800daee:	f000 fe41 	bl	800e774 <__lshift>
 800daf2:	4621      	mov	r1, r4
 800daf4:	4683      	mov	fp, r0
 800daf6:	f000 fead 	bl	800e854 <__mcmp>
 800dafa:	2800      	cmp	r0, #0
 800dafc:	dcb2      	bgt.n	800da64 <_dtoa_r+0xac4>
 800dafe:	d102      	bne.n	800db06 <_dtoa_r+0xb66>
 800db00:	9b08      	ldr	r3, [sp, #32]
 800db02:	07db      	lsls	r3, r3, #31
 800db04:	d4ae      	bmi.n	800da64 <_dtoa_r+0xac4>
 800db06:	463b      	mov	r3, r7
 800db08:	461f      	mov	r7, r3
 800db0a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800db0e:	2a30      	cmp	r2, #48	; 0x30
 800db10:	d0fa      	beq.n	800db08 <_dtoa_r+0xb68>
 800db12:	e6f9      	b.n	800d908 <_dtoa_r+0x968>
 800db14:	9a03      	ldr	r2, [sp, #12]
 800db16:	429a      	cmp	r2, r3
 800db18:	d1a5      	bne.n	800da66 <_dtoa_r+0xac6>
 800db1a:	2331      	movs	r3, #49	; 0x31
 800db1c:	f10a 0a01 	add.w	sl, sl, #1
 800db20:	e779      	b.n	800da16 <_dtoa_r+0xa76>
 800db22:	4b14      	ldr	r3, [pc, #80]	; (800db74 <_dtoa_r+0xbd4>)
 800db24:	f7ff baa8 	b.w	800d078 <_dtoa_r+0xd8>
 800db28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800db2a:	2b00      	cmp	r3, #0
 800db2c:	f47f aa81 	bne.w	800d032 <_dtoa_r+0x92>
 800db30:	4b11      	ldr	r3, [pc, #68]	; (800db78 <_dtoa_r+0xbd8>)
 800db32:	f7ff baa1 	b.w	800d078 <_dtoa_r+0xd8>
 800db36:	f1b9 0f00 	cmp.w	r9, #0
 800db3a:	dc03      	bgt.n	800db44 <_dtoa_r+0xba4>
 800db3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800db3e:	2b02      	cmp	r3, #2
 800db40:	f73f aecb 	bgt.w	800d8da <_dtoa_r+0x93a>
 800db44:	9f03      	ldr	r7, [sp, #12]
 800db46:	4621      	mov	r1, r4
 800db48:	4658      	mov	r0, fp
 800db4a:	f7ff f99b 	bl	800ce84 <quorem>
 800db4e:	9a03      	ldr	r2, [sp, #12]
 800db50:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800db54:	f807 3b01 	strb.w	r3, [r7], #1
 800db58:	1aba      	subs	r2, r7, r2
 800db5a:	4591      	cmp	r9, r2
 800db5c:	ddba      	ble.n	800dad4 <_dtoa_r+0xb34>
 800db5e:	4659      	mov	r1, fp
 800db60:	2300      	movs	r3, #0
 800db62:	220a      	movs	r2, #10
 800db64:	4628      	mov	r0, r5
 800db66:	f000 fc0f 	bl	800e388 <__multadd>
 800db6a:	4683      	mov	fp, r0
 800db6c:	e7eb      	b.n	800db46 <_dtoa_r+0xba6>
 800db6e:	bf00      	nop
 800db70:	08011430 	.word	0x08011430
 800db74:	08011629 	.word	0x08011629
 800db78:	080113b1 	.word	0x080113b1

0800db7c <rshift>:
 800db7c:	6903      	ldr	r3, [r0, #16]
 800db7e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db82:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800db86:	f100 0414 	add.w	r4, r0, #20
 800db8a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800db8e:	dd46      	ble.n	800dc1e <rshift+0xa2>
 800db90:	f011 011f 	ands.w	r1, r1, #31
 800db94:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800db98:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800db9c:	d10c      	bne.n	800dbb8 <rshift+0x3c>
 800db9e:	4629      	mov	r1, r5
 800dba0:	f100 0710 	add.w	r7, r0, #16
 800dba4:	42b1      	cmp	r1, r6
 800dba6:	d335      	bcc.n	800dc14 <rshift+0x98>
 800dba8:	1a9b      	subs	r3, r3, r2
 800dbaa:	009b      	lsls	r3, r3, #2
 800dbac:	1eea      	subs	r2, r5, #3
 800dbae:	4296      	cmp	r6, r2
 800dbb0:	bf38      	it	cc
 800dbb2:	2300      	movcc	r3, #0
 800dbb4:	4423      	add	r3, r4
 800dbb6:	e015      	b.n	800dbe4 <rshift+0x68>
 800dbb8:	46a1      	mov	r9, r4
 800dbba:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800dbbe:	f1c1 0820 	rsb	r8, r1, #32
 800dbc2:	40cf      	lsrs	r7, r1
 800dbc4:	f105 0e04 	add.w	lr, r5, #4
 800dbc8:	4576      	cmp	r6, lr
 800dbca:	46f4      	mov	ip, lr
 800dbcc:	d816      	bhi.n	800dbfc <rshift+0x80>
 800dbce:	1a9a      	subs	r2, r3, r2
 800dbd0:	0092      	lsls	r2, r2, #2
 800dbd2:	3a04      	subs	r2, #4
 800dbd4:	3501      	adds	r5, #1
 800dbd6:	42ae      	cmp	r6, r5
 800dbd8:	bf38      	it	cc
 800dbda:	2200      	movcc	r2, #0
 800dbdc:	18a3      	adds	r3, r4, r2
 800dbde:	50a7      	str	r7, [r4, r2]
 800dbe0:	b107      	cbz	r7, 800dbe4 <rshift+0x68>
 800dbe2:	3304      	adds	r3, #4
 800dbe4:	42a3      	cmp	r3, r4
 800dbe6:	eba3 0204 	sub.w	r2, r3, r4
 800dbea:	bf08      	it	eq
 800dbec:	2300      	moveq	r3, #0
 800dbee:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800dbf2:	6102      	str	r2, [r0, #16]
 800dbf4:	bf08      	it	eq
 800dbf6:	6143      	streq	r3, [r0, #20]
 800dbf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dbfc:	f8dc c000 	ldr.w	ip, [ip]
 800dc00:	fa0c fc08 	lsl.w	ip, ip, r8
 800dc04:	ea4c 0707 	orr.w	r7, ip, r7
 800dc08:	f849 7b04 	str.w	r7, [r9], #4
 800dc0c:	f85e 7b04 	ldr.w	r7, [lr], #4
 800dc10:	40cf      	lsrs	r7, r1
 800dc12:	e7d9      	b.n	800dbc8 <rshift+0x4c>
 800dc14:	f851 cb04 	ldr.w	ip, [r1], #4
 800dc18:	f847 cf04 	str.w	ip, [r7, #4]!
 800dc1c:	e7c2      	b.n	800dba4 <rshift+0x28>
 800dc1e:	4623      	mov	r3, r4
 800dc20:	e7e0      	b.n	800dbe4 <rshift+0x68>

0800dc22 <__hexdig_fun>:
 800dc22:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800dc26:	2b09      	cmp	r3, #9
 800dc28:	d802      	bhi.n	800dc30 <__hexdig_fun+0xe>
 800dc2a:	3820      	subs	r0, #32
 800dc2c:	b2c0      	uxtb	r0, r0
 800dc2e:	4770      	bx	lr
 800dc30:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800dc34:	2b05      	cmp	r3, #5
 800dc36:	d801      	bhi.n	800dc3c <__hexdig_fun+0x1a>
 800dc38:	3847      	subs	r0, #71	; 0x47
 800dc3a:	e7f7      	b.n	800dc2c <__hexdig_fun+0xa>
 800dc3c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800dc40:	2b05      	cmp	r3, #5
 800dc42:	d801      	bhi.n	800dc48 <__hexdig_fun+0x26>
 800dc44:	3827      	subs	r0, #39	; 0x27
 800dc46:	e7f1      	b.n	800dc2c <__hexdig_fun+0xa>
 800dc48:	2000      	movs	r0, #0
 800dc4a:	4770      	bx	lr

0800dc4c <__gethex>:
 800dc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc50:	b08b      	sub	sp, #44	; 0x2c
 800dc52:	9305      	str	r3, [sp, #20]
 800dc54:	4bb2      	ldr	r3, [pc, #712]	; (800df20 <__gethex+0x2d4>)
 800dc56:	9002      	str	r0, [sp, #8]
 800dc58:	681b      	ldr	r3, [r3, #0]
 800dc5a:	468b      	mov	fp, r1
 800dc5c:	4618      	mov	r0, r3
 800dc5e:	4690      	mov	r8, r2
 800dc60:	9303      	str	r3, [sp, #12]
 800dc62:	f7f2 fa97 	bl	8000194 <strlen>
 800dc66:	4682      	mov	sl, r0
 800dc68:	9b03      	ldr	r3, [sp, #12]
 800dc6a:	f8db 2000 	ldr.w	r2, [fp]
 800dc6e:	4403      	add	r3, r0
 800dc70:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800dc74:	9306      	str	r3, [sp, #24]
 800dc76:	1c93      	adds	r3, r2, #2
 800dc78:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800dc7c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800dc80:	32fe      	adds	r2, #254	; 0xfe
 800dc82:	18d1      	adds	r1, r2, r3
 800dc84:	461f      	mov	r7, r3
 800dc86:	f813 0b01 	ldrb.w	r0, [r3], #1
 800dc8a:	9101      	str	r1, [sp, #4]
 800dc8c:	2830      	cmp	r0, #48	; 0x30
 800dc8e:	d0f8      	beq.n	800dc82 <__gethex+0x36>
 800dc90:	f7ff ffc7 	bl	800dc22 <__hexdig_fun>
 800dc94:	4604      	mov	r4, r0
 800dc96:	2800      	cmp	r0, #0
 800dc98:	d13a      	bne.n	800dd10 <__gethex+0xc4>
 800dc9a:	4652      	mov	r2, sl
 800dc9c:	4638      	mov	r0, r7
 800dc9e:	9903      	ldr	r1, [sp, #12]
 800dca0:	f001 fd9a 	bl	800f7d8 <strncmp>
 800dca4:	4605      	mov	r5, r0
 800dca6:	2800      	cmp	r0, #0
 800dca8:	d166      	bne.n	800dd78 <__gethex+0x12c>
 800dcaa:	f817 000a 	ldrb.w	r0, [r7, sl]
 800dcae:	eb07 060a 	add.w	r6, r7, sl
 800dcb2:	f7ff ffb6 	bl	800dc22 <__hexdig_fun>
 800dcb6:	2800      	cmp	r0, #0
 800dcb8:	d060      	beq.n	800dd7c <__gethex+0x130>
 800dcba:	4633      	mov	r3, r6
 800dcbc:	7818      	ldrb	r0, [r3, #0]
 800dcbe:	461f      	mov	r7, r3
 800dcc0:	2830      	cmp	r0, #48	; 0x30
 800dcc2:	f103 0301 	add.w	r3, r3, #1
 800dcc6:	d0f9      	beq.n	800dcbc <__gethex+0x70>
 800dcc8:	f7ff ffab 	bl	800dc22 <__hexdig_fun>
 800dccc:	2301      	movs	r3, #1
 800dcce:	fab0 f480 	clz	r4, r0
 800dcd2:	4635      	mov	r5, r6
 800dcd4:	0964      	lsrs	r4, r4, #5
 800dcd6:	9301      	str	r3, [sp, #4]
 800dcd8:	463a      	mov	r2, r7
 800dcda:	4616      	mov	r6, r2
 800dcdc:	7830      	ldrb	r0, [r6, #0]
 800dcde:	3201      	adds	r2, #1
 800dce0:	f7ff ff9f 	bl	800dc22 <__hexdig_fun>
 800dce4:	2800      	cmp	r0, #0
 800dce6:	d1f8      	bne.n	800dcda <__gethex+0x8e>
 800dce8:	4652      	mov	r2, sl
 800dcea:	4630      	mov	r0, r6
 800dcec:	9903      	ldr	r1, [sp, #12]
 800dcee:	f001 fd73 	bl	800f7d8 <strncmp>
 800dcf2:	b980      	cbnz	r0, 800dd16 <__gethex+0xca>
 800dcf4:	b94d      	cbnz	r5, 800dd0a <__gethex+0xbe>
 800dcf6:	eb06 050a 	add.w	r5, r6, sl
 800dcfa:	462a      	mov	r2, r5
 800dcfc:	4616      	mov	r6, r2
 800dcfe:	7830      	ldrb	r0, [r6, #0]
 800dd00:	3201      	adds	r2, #1
 800dd02:	f7ff ff8e 	bl	800dc22 <__hexdig_fun>
 800dd06:	2800      	cmp	r0, #0
 800dd08:	d1f8      	bne.n	800dcfc <__gethex+0xb0>
 800dd0a:	1bad      	subs	r5, r5, r6
 800dd0c:	00ad      	lsls	r5, r5, #2
 800dd0e:	e004      	b.n	800dd1a <__gethex+0xce>
 800dd10:	2400      	movs	r4, #0
 800dd12:	4625      	mov	r5, r4
 800dd14:	e7e0      	b.n	800dcd8 <__gethex+0x8c>
 800dd16:	2d00      	cmp	r5, #0
 800dd18:	d1f7      	bne.n	800dd0a <__gethex+0xbe>
 800dd1a:	7833      	ldrb	r3, [r6, #0]
 800dd1c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800dd20:	2b50      	cmp	r3, #80	; 0x50
 800dd22:	d139      	bne.n	800dd98 <__gethex+0x14c>
 800dd24:	7873      	ldrb	r3, [r6, #1]
 800dd26:	2b2b      	cmp	r3, #43	; 0x2b
 800dd28:	d02a      	beq.n	800dd80 <__gethex+0x134>
 800dd2a:	2b2d      	cmp	r3, #45	; 0x2d
 800dd2c:	d02c      	beq.n	800dd88 <__gethex+0x13c>
 800dd2e:	f04f 0900 	mov.w	r9, #0
 800dd32:	1c71      	adds	r1, r6, #1
 800dd34:	7808      	ldrb	r0, [r1, #0]
 800dd36:	f7ff ff74 	bl	800dc22 <__hexdig_fun>
 800dd3a:	1e43      	subs	r3, r0, #1
 800dd3c:	b2db      	uxtb	r3, r3
 800dd3e:	2b18      	cmp	r3, #24
 800dd40:	d82a      	bhi.n	800dd98 <__gethex+0x14c>
 800dd42:	f1a0 0210 	sub.w	r2, r0, #16
 800dd46:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800dd4a:	f7ff ff6a 	bl	800dc22 <__hexdig_fun>
 800dd4e:	1e43      	subs	r3, r0, #1
 800dd50:	b2db      	uxtb	r3, r3
 800dd52:	2b18      	cmp	r3, #24
 800dd54:	d91b      	bls.n	800dd8e <__gethex+0x142>
 800dd56:	f1b9 0f00 	cmp.w	r9, #0
 800dd5a:	d000      	beq.n	800dd5e <__gethex+0x112>
 800dd5c:	4252      	negs	r2, r2
 800dd5e:	4415      	add	r5, r2
 800dd60:	f8cb 1000 	str.w	r1, [fp]
 800dd64:	b1d4      	cbz	r4, 800dd9c <__gethex+0x150>
 800dd66:	9b01      	ldr	r3, [sp, #4]
 800dd68:	2b00      	cmp	r3, #0
 800dd6a:	bf14      	ite	ne
 800dd6c:	2700      	movne	r7, #0
 800dd6e:	2706      	moveq	r7, #6
 800dd70:	4638      	mov	r0, r7
 800dd72:	b00b      	add	sp, #44	; 0x2c
 800dd74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd78:	463e      	mov	r6, r7
 800dd7a:	4625      	mov	r5, r4
 800dd7c:	2401      	movs	r4, #1
 800dd7e:	e7cc      	b.n	800dd1a <__gethex+0xce>
 800dd80:	f04f 0900 	mov.w	r9, #0
 800dd84:	1cb1      	adds	r1, r6, #2
 800dd86:	e7d5      	b.n	800dd34 <__gethex+0xe8>
 800dd88:	f04f 0901 	mov.w	r9, #1
 800dd8c:	e7fa      	b.n	800dd84 <__gethex+0x138>
 800dd8e:	230a      	movs	r3, #10
 800dd90:	fb03 0202 	mla	r2, r3, r2, r0
 800dd94:	3a10      	subs	r2, #16
 800dd96:	e7d6      	b.n	800dd46 <__gethex+0xfa>
 800dd98:	4631      	mov	r1, r6
 800dd9a:	e7e1      	b.n	800dd60 <__gethex+0x114>
 800dd9c:	4621      	mov	r1, r4
 800dd9e:	1bf3      	subs	r3, r6, r7
 800dda0:	3b01      	subs	r3, #1
 800dda2:	2b07      	cmp	r3, #7
 800dda4:	dc0a      	bgt.n	800ddbc <__gethex+0x170>
 800dda6:	9802      	ldr	r0, [sp, #8]
 800dda8:	f000 fa8c 	bl	800e2c4 <_Balloc>
 800ddac:	4604      	mov	r4, r0
 800ddae:	b940      	cbnz	r0, 800ddc2 <__gethex+0x176>
 800ddb0:	4602      	mov	r2, r0
 800ddb2:	21de      	movs	r1, #222	; 0xde
 800ddb4:	4b5b      	ldr	r3, [pc, #364]	; (800df24 <__gethex+0x2d8>)
 800ddb6:	485c      	ldr	r0, [pc, #368]	; (800df28 <__gethex+0x2dc>)
 800ddb8:	f001 fddc 	bl	800f974 <__assert_func>
 800ddbc:	3101      	adds	r1, #1
 800ddbe:	105b      	asrs	r3, r3, #1
 800ddc0:	e7ef      	b.n	800dda2 <__gethex+0x156>
 800ddc2:	f04f 0b00 	mov.w	fp, #0
 800ddc6:	f100 0914 	add.w	r9, r0, #20
 800ddca:	f1ca 0301 	rsb	r3, sl, #1
 800ddce:	f8cd 9010 	str.w	r9, [sp, #16]
 800ddd2:	f8cd b004 	str.w	fp, [sp, #4]
 800ddd6:	9308      	str	r3, [sp, #32]
 800ddd8:	42b7      	cmp	r7, r6
 800ddda:	d33f      	bcc.n	800de5c <__gethex+0x210>
 800dddc:	9f04      	ldr	r7, [sp, #16]
 800ddde:	9b01      	ldr	r3, [sp, #4]
 800dde0:	f847 3b04 	str.w	r3, [r7], #4
 800dde4:	eba7 0709 	sub.w	r7, r7, r9
 800dde8:	10bf      	asrs	r7, r7, #2
 800ddea:	6127      	str	r7, [r4, #16]
 800ddec:	4618      	mov	r0, r3
 800ddee:	f000 fb5b 	bl	800e4a8 <__hi0bits>
 800ddf2:	017f      	lsls	r7, r7, #5
 800ddf4:	f8d8 6000 	ldr.w	r6, [r8]
 800ddf8:	1a3f      	subs	r7, r7, r0
 800ddfa:	42b7      	cmp	r7, r6
 800ddfc:	dd62      	ble.n	800dec4 <__gethex+0x278>
 800ddfe:	1bbf      	subs	r7, r7, r6
 800de00:	4639      	mov	r1, r7
 800de02:	4620      	mov	r0, r4
 800de04:	f000 fef5 	bl	800ebf2 <__any_on>
 800de08:	4682      	mov	sl, r0
 800de0a:	b1a8      	cbz	r0, 800de38 <__gethex+0x1ec>
 800de0c:	f04f 0a01 	mov.w	sl, #1
 800de10:	1e7b      	subs	r3, r7, #1
 800de12:	1159      	asrs	r1, r3, #5
 800de14:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800de18:	f003 021f 	and.w	r2, r3, #31
 800de1c:	fa0a f202 	lsl.w	r2, sl, r2
 800de20:	420a      	tst	r2, r1
 800de22:	d009      	beq.n	800de38 <__gethex+0x1ec>
 800de24:	4553      	cmp	r3, sl
 800de26:	dd05      	ble.n	800de34 <__gethex+0x1e8>
 800de28:	4620      	mov	r0, r4
 800de2a:	1eb9      	subs	r1, r7, #2
 800de2c:	f000 fee1 	bl	800ebf2 <__any_on>
 800de30:	2800      	cmp	r0, #0
 800de32:	d144      	bne.n	800debe <__gethex+0x272>
 800de34:	f04f 0a02 	mov.w	sl, #2
 800de38:	4639      	mov	r1, r7
 800de3a:	4620      	mov	r0, r4
 800de3c:	f7ff fe9e 	bl	800db7c <rshift>
 800de40:	443d      	add	r5, r7
 800de42:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800de46:	42ab      	cmp	r3, r5
 800de48:	da4a      	bge.n	800dee0 <__gethex+0x294>
 800de4a:	4621      	mov	r1, r4
 800de4c:	9802      	ldr	r0, [sp, #8]
 800de4e:	f000 fa79 	bl	800e344 <_Bfree>
 800de52:	2300      	movs	r3, #0
 800de54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800de56:	27a3      	movs	r7, #163	; 0xa3
 800de58:	6013      	str	r3, [r2, #0]
 800de5a:	e789      	b.n	800dd70 <__gethex+0x124>
 800de5c:	1e73      	subs	r3, r6, #1
 800de5e:	9a06      	ldr	r2, [sp, #24]
 800de60:	9307      	str	r3, [sp, #28]
 800de62:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800de66:	4293      	cmp	r3, r2
 800de68:	d019      	beq.n	800de9e <__gethex+0x252>
 800de6a:	f1bb 0f20 	cmp.w	fp, #32
 800de6e:	d107      	bne.n	800de80 <__gethex+0x234>
 800de70:	9b04      	ldr	r3, [sp, #16]
 800de72:	9a01      	ldr	r2, [sp, #4]
 800de74:	f843 2b04 	str.w	r2, [r3], #4
 800de78:	9304      	str	r3, [sp, #16]
 800de7a:	2300      	movs	r3, #0
 800de7c:	469b      	mov	fp, r3
 800de7e:	9301      	str	r3, [sp, #4]
 800de80:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800de84:	f7ff fecd 	bl	800dc22 <__hexdig_fun>
 800de88:	9b01      	ldr	r3, [sp, #4]
 800de8a:	f000 000f 	and.w	r0, r0, #15
 800de8e:	fa00 f00b 	lsl.w	r0, r0, fp
 800de92:	4303      	orrs	r3, r0
 800de94:	9301      	str	r3, [sp, #4]
 800de96:	f10b 0b04 	add.w	fp, fp, #4
 800de9a:	9b07      	ldr	r3, [sp, #28]
 800de9c:	e00d      	b.n	800deba <__gethex+0x26e>
 800de9e:	9a08      	ldr	r2, [sp, #32]
 800dea0:	1e73      	subs	r3, r6, #1
 800dea2:	4413      	add	r3, r2
 800dea4:	42bb      	cmp	r3, r7
 800dea6:	d3e0      	bcc.n	800de6a <__gethex+0x21e>
 800dea8:	4618      	mov	r0, r3
 800deaa:	4652      	mov	r2, sl
 800deac:	9903      	ldr	r1, [sp, #12]
 800deae:	9309      	str	r3, [sp, #36]	; 0x24
 800deb0:	f001 fc92 	bl	800f7d8 <strncmp>
 800deb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800deb6:	2800      	cmp	r0, #0
 800deb8:	d1d7      	bne.n	800de6a <__gethex+0x21e>
 800deba:	461e      	mov	r6, r3
 800debc:	e78c      	b.n	800ddd8 <__gethex+0x18c>
 800debe:	f04f 0a03 	mov.w	sl, #3
 800dec2:	e7b9      	b.n	800de38 <__gethex+0x1ec>
 800dec4:	da09      	bge.n	800deda <__gethex+0x28e>
 800dec6:	1bf7      	subs	r7, r6, r7
 800dec8:	4621      	mov	r1, r4
 800deca:	463a      	mov	r2, r7
 800decc:	9802      	ldr	r0, [sp, #8]
 800dece:	f000 fc51 	bl	800e774 <__lshift>
 800ded2:	4604      	mov	r4, r0
 800ded4:	1bed      	subs	r5, r5, r7
 800ded6:	f100 0914 	add.w	r9, r0, #20
 800deda:	f04f 0a00 	mov.w	sl, #0
 800dede:	e7b0      	b.n	800de42 <__gethex+0x1f6>
 800dee0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800dee4:	42a8      	cmp	r0, r5
 800dee6:	dd72      	ble.n	800dfce <__gethex+0x382>
 800dee8:	1b45      	subs	r5, r0, r5
 800deea:	42ae      	cmp	r6, r5
 800deec:	dc35      	bgt.n	800df5a <__gethex+0x30e>
 800deee:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800def2:	2b02      	cmp	r3, #2
 800def4:	d029      	beq.n	800df4a <__gethex+0x2fe>
 800def6:	2b03      	cmp	r3, #3
 800def8:	d02b      	beq.n	800df52 <__gethex+0x306>
 800defa:	2b01      	cmp	r3, #1
 800defc:	d11c      	bne.n	800df38 <__gethex+0x2ec>
 800defe:	42ae      	cmp	r6, r5
 800df00:	d11a      	bne.n	800df38 <__gethex+0x2ec>
 800df02:	2e01      	cmp	r6, #1
 800df04:	d112      	bne.n	800df2c <__gethex+0x2e0>
 800df06:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800df0a:	9a05      	ldr	r2, [sp, #20]
 800df0c:	2762      	movs	r7, #98	; 0x62
 800df0e:	6013      	str	r3, [r2, #0]
 800df10:	2301      	movs	r3, #1
 800df12:	6123      	str	r3, [r4, #16]
 800df14:	f8c9 3000 	str.w	r3, [r9]
 800df18:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800df1a:	601c      	str	r4, [r3, #0]
 800df1c:	e728      	b.n	800dd70 <__gethex+0x124>
 800df1e:	bf00      	nop
 800df20:	080114a8 	.word	0x080114a8
 800df24:	08011430 	.word	0x08011430
 800df28:	08011441 	.word	0x08011441
 800df2c:	4620      	mov	r0, r4
 800df2e:	1e71      	subs	r1, r6, #1
 800df30:	f000 fe5f 	bl	800ebf2 <__any_on>
 800df34:	2800      	cmp	r0, #0
 800df36:	d1e6      	bne.n	800df06 <__gethex+0x2ba>
 800df38:	4621      	mov	r1, r4
 800df3a:	9802      	ldr	r0, [sp, #8]
 800df3c:	f000 fa02 	bl	800e344 <_Bfree>
 800df40:	2300      	movs	r3, #0
 800df42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800df44:	2750      	movs	r7, #80	; 0x50
 800df46:	6013      	str	r3, [r2, #0]
 800df48:	e712      	b.n	800dd70 <__gethex+0x124>
 800df4a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800df4c:	2b00      	cmp	r3, #0
 800df4e:	d1f3      	bne.n	800df38 <__gethex+0x2ec>
 800df50:	e7d9      	b.n	800df06 <__gethex+0x2ba>
 800df52:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800df54:	2b00      	cmp	r3, #0
 800df56:	d1d6      	bne.n	800df06 <__gethex+0x2ba>
 800df58:	e7ee      	b.n	800df38 <__gethex+0x2ec>
 800df5a:	1e6f      	subs	r7, r5, #1
 800df5c:	f1ba 0f00 	cmp.w	sl, #0
 800df60:	d132      	bne.n	800dfc8 <__gethex+0x37c>
 800df62:	b127      	cbz	r7, 800df6e <__gethex+0x322>
 800df64:	4639      	mov	r1, r7
 800df66:	4620      	mov	r0, r4
 800df68:	f000 fe43 	bl	800ebf2 <__any_on>
 800df6c:	4682      	mov	sl, r0
 800df6e:	2101      	movs	r1, #1
 800df70:	117b      	asrs	r3, r7, #5
 800df72:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800df76:	f007 071f 	and.w	r7, r7, #31
 800df7a:	fa01 f707 	lsl.w	r7, r1, r7
 800df7e:	421f      	tst	r7, r3
 800df80:	f04f 0702 	mov.w	r7, #2
 800df84:	4629      	mov	r1, r5
 800df86:	4620      	mov	r0, r4
 800df88:	bf18      	it	ne
 800df8a:	f04a 0a02 	orrne.w	sl, sl, #2
 800df8e:	1b76      	subs	r6, r6, r5
 800df90:	f7ff fdf4 	bl	800db7c <rshift>
 800df94:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800df98:	f1ba 0f00 	cmp.w	sl, #0
 800df9c:	d048      	beq.n	800e030 <__gethex+0x3e4>
 800df9e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800dfa2:	2b02      	cmp	r3, #2
 800dfa4:	d015      	beq.n	800dfd2 <__gethex+0x386>
 800dfa6:	2b03      	cmp	r3, #3
 800dfa8:	d017      	beq.n	800dfda <__gethex+0x38e>
 800dfaa:	2b01      	cmp	r3, #1
 800dfac:	d109      	bne.n	800dfc2 <__gethex+0x376>
 800dfae:	f01a 0f02 	tst.w	sl, #2
 800dfb2:	d006      	beq.n	800dfc2 <__gethex+0x376>
 800dfb4:	f8d9 0000 	ldr.w	r0, [r9]
 800dfb8:	ea4a 0a00 	orr.w	sl, sl, r0
 800dfbc:	f01a 0f01 	tst.w	sl, #1
 800dfc0:	d10e      	bne.n	800dfe0 <__gethex+0x394>
 800dfc2:	f047 0710 	orr.w	r7, r7, #16
 800dfc6:	e033      	b.n	800e030 <__gethex+0x3e4>
 800dfc8:	f04f 0a01 	mov.w	sl, #1
 800dfcc:	e7cf      	b.n	800df6e <__gethex+0x322>
 800dfce:	2701      	movs	r7, #1
 800dfd0:	e7e2      	b.n	800df98 <__gethex+0x34c>
 800dfd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800dfd4:	f1c3 0301 	rsb	r3, r3, #1
 800dfd8:	9315      	str	r3, [sp, #84]	; 0x54
 800dfda:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800dfdc:	2b00      	cmp	r3, #0
 800dfde:	d0f0      	beq.n	800dfc2 <__gethex+0x376>
 800dfe0:	f04f 0c00 	mov.w	ip, #0
 800dfe4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800dfe8:	f104 0314 	add.w	r3, r4, #20
 800dfec:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800dff0:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800dff4:	4618      	mov	r0, r3
 800dff6:	f853 2b04 	ldr.w	r2, [r3], #4
 800dffa:	f1b2 3fff 	cmp.w	r2, #4294967295
 800dffe:	d01c      	beq.n	800e03a <__gethex+0x3ee>
 800e000:	3201      	adds	r2, #1
 800e002:	6002      	str	r2, [r0, #0]
 800e004:	2f02      	cmp	r7, #2
 800e006:	f104 0314 	add.w	r3, r4, #20
 800e00a:	d13d      	bne.n	800e088 <__gethex+0x43c>
 800e00c:	f8d8 2000 	ldr.w	r2, [r8]
 800e010:	3a01      	subs	r2, #1
 800e012:	42b2      	cmp	r2, r6
 800e014:	d10a      	bne.n	800e02c <__gethex+0x3e0>
 800e016:	2201      	movs	r2, #1
 800e018:	1171      	asrs	r1, r6, #5
 800e01a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800e01e:	f006 061f 	and.w	r6, r6, #31
 800e022:	fa02 f606 	lsl.w	r6, r2, r6
 800e026:	421e      	tst	r6, r3
 800e028:	bf18      	it	ne
 800e02a:	4617      	movne	r7, r2
 800e02c:	f047 0720 	orr.w	r7, r7, #32
 800e030:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800e032:	601c      	str	r4, [r3, #0]
 800e034:	9b05      	ldr	r3, [sp, #20]
 800e036:	601d      	str	r5, [r3, #0]
 800e038:	e69a      	b.n	800dd70 <__gethex+0x124>
 800e03a:	4299      	cmp	r1, r3
 800e03c:	f843 cc04 	str.w	ip, [r3, #-4]
 800e040:	d8d8      	bhi.n	800dff4 <__gethex+0x3a8>
 800e042:	68a3      	ldr	r3, [r4, #8]
 800e044:	459b      	cmp	fp, r3
 800e046:	db17      	blt.n	800e078 <__gethex+0x42c>
 800e048:	6861      	ldr	r1, [r4, #4]
 800e04a:	9802      	ldr	r0, [sp, #8]
 800e04c:	3101      	adds	r1, #1
 800e04e:	f000 f939 	bl	800e2c4 <_Balloc>
 800e052:	4681      	mov	r9, r0
 800e054:	b918      	cbnz	r0, 800e05e <__gethex+0x412>
 800e056:	4602      	mov	r2, r0
 800e058:	2184      	movs	r1, #132	; 0x84
 800e05a:	4b19      	ldr	r3, [pc, #100]	; (800e0c0 <__gethex+0x474>)
 800e05c:	e6ab      	b.n	800ddb6 <__gethex+0x16a>
 800e05e:	6922      	ldr	r2, [r4, #16]
 800e060:	f104 010c 	add.w	r1, r4, #12
 800e064:	3202      	adds	r2, #2
 800e066:	0092      	lsls	r2, r2, #2
 800e068:	300c      	adds	r0, #12
 800e06a:	f7fd f943 	bl	800b2f4 <memcpy>
 800e06e:	4621      	mov	r1, r4
 800e070:	9802      	ldr	r0, [sp, #8]
 800e072:	f000 f967 	bl	800e344 <_Bfree>
 800e076:	464c      	mov	r4, r9
 800e078:	6923      	ldr	r3, [r4, #16]
 800e07a:	1c5a      	adds	r2, r3, #1
 800e07c:	6122      	str	r2, [r4, #16]
 800e07e:	2201      	movs	r2, #1
 800e080:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e084:	615a      	str	r2, [r3, #20]
 800e086:	e7bd      	b.n	800e004 <__gethex+0x3b8>
 800e088:	6922      	ldr	r2, [r4, #16]
 800e08a:	455a      	cmp	r2, fp
 800e08c:	dd0b      	ble.n	800e0a6 <__gethex+0x45a>
 800e08e:	2101      	movs	r1, #1
 800e090:	4620      	mov	r0, r4
 800e092:	f7ff fd73 	bl	800db7c <rshift>
 800e096:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e09a:	3501      	adds	r5, #1
 800e09c:	42ab      	cmp	r3, r5
 800e09e:	f6ff aed4 	blt.w	800de4a <__gethex+0x1fe>
 800e0a2:	2701      	movs	r7, #1
 800e0a4:	e7c2      	b.n	800e02c <__gethex+0x3e0>
 800e0a6:	f016 061f 	ands.w	r6, r6, #31
 800e0aa:	d0fa      	beq.n	800e0a2 <__gethex+0x456>
 800e0ac:	4453      	add	r3, sl
 800e0ae:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800e0b2:	f000 f9f9 	bl	800e4a8 <__hi0bits>
 800e0b6:	f1c6 0620 	rsb	r6, r6, #32
 800e0ba:	42b0      	cmp	r0, r6
 800e0bc:	dbe7      	blt.n	800e08e <__gethex+0x442>
 800e0be:	e7f0      	b.n	800e0a2 <__gethex+0x456>
 800e0c0:	08011430 	.word	0x08011430

0800e0c4 <L_shift>:
 800e0c4:	f1c2 0208 	rsb	r2, r2, #8
 800e0c8:	0092      	lsls	r2, r2, #2
 800e0ca:	b570      	push	{r4, r5, r6, lr}
 800e0cc:	f1c2 0620 	rsb	r6, r2, #32
 800e0d0:	6843      	ldr	r3, [r0, #4]
 800e0d2:	6804      	ldr	r4, [r0, #0]
 800e0d4:	fa03 f506 	lsl.w	r5, r3, r6
 800e0d8:	432c      	orrs	r4, r5
 800e0da:	40d3      	lsrs	r3, r2
 800e0dc:	6004      	str	r4, [r0, #0]
 800e0de:	f840 3f04 	str.w	r3, [r0, #4]!
 800e0e2:	4288      	cmp	r0, r1
 800e0e4:	d3f4      	bcc.n	800e0d0 <L_shift+0xc>
 800e0e6:	bd70      	pop	{r4, r5, r6, pc}

0800e0e8 <__match>:
 800e0e8:	b530      	push	{r4, r5, lr}
 800e0ea:	6803      	ldr	r3, [r0, #0]
 800e0ec:	3301      	adds	r3, #1
 800e0ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e0f2:	b914      	cbnz	r4, 800e0fa <__match+0x12>
 800e0f4:	6003      	str	r3, [r0, #0]
 800e0f6:	2001      	movs	r0, #1
 800e0f8:	bd30      	pop	{r4, r5, pc}
 800e0fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e0fe:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800e102:	2d19      	cmp	r5, #25
 800e104:	bf98      	it	ls
 800e106:	3220      	addls	r2, #32
 800e108:	42a2      	cmp	r2, r4
 800e10a:	d0f0      	beq.n	800e0ee <__match+0x6>
 800e10c:	2000      	movs	r0, #0
 800e10e:	e7f3      	b.n	800e0f8 <__match+0x10>

0800e110 <__hexnan>:
 800e110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e114:	2500      	movs	r5, #0
 800e116:	680b      	ldr	r3, [r1, #0]
 800e118:	4682      	mov	sl, r0
 800e11a:	115e      	asrs	r6, r3, #5
 800e11c:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800e120:	f013 031f 	ands.w	r3, r3, #31
 800e124:	bf18      	it	ne
 800e126:	3604      	addne	r6, #4
 800e128:	1f37      	subs	r7, r6, #4
 800e12a:	46b9      	mov	r9, r7
 800e12c:	463c      	mov	r4, r7
 800e12e:	46ab      	mov	fp, r5
 800e130:	b087      	sub	sp, #28
 800e132:	4690      	mov	r8, r2
 800e134:	6802      	ldr	r2, [r0, #0]
 800e136:	9301      	str	r3, [sp, #4]
 800e138:	f846 5c04 	str.w	r5, [r6, #-4]
 800e13c:	9502      	str	r5, [sp, #8]
 800e13e:	7851      	ldrb	r1, [r2, #1]
 800e140:	1c53      	adds	r3, r2, #1
 800e142:	9303      	str	r3, [sp, #12]
 800e144:	b341      	cbz	r1, 800e198 <__hexnan+0x88>
 800e146:	4608      	mov	r0, r1
 800e148:	9205      	str	r2, [sp, #20]
 800e14a:	9104      	str	r1, [sp, #16]
 800e14c:	f7ff fd69 	bl	800dc22 <__hexdig_fun>
 800e150:	2800      	cmp	r0, #0
 800e152:	d14f      	bne.n	800e1f4 <__hexnan+0xe4>
 800e154:	9904      	ldr	r1, [sp, #16]
 800e156:	9a05      	ldr	r2, [sp, #20]
 800e158:	2920      	cmp	r1, #32
 800e15a:	d818      	bhi.n	800e18e <__hexnan+0x7e>
 800e15c:	9b02      	ldr	r3, [sp, #8]
 800e15e:	459b      	cmp	fp, r3
 800e160:	dd13      	ble.n	800e18a <__hexnan+0x7a>
 800e162:	454c      	cmp	r4, r9
 800e164:	d206      	bcs.n	800e174 <__hexnan+0x64>
 800e166:	2d07      	cmp	r5, #7
 800e168:	dc04      	bgt.n	800e174 <__hexnan+0x64>
 800e16a:	462a      	mov	r2, r5
 800e16c:	4649      	mov	r1, r9
 800e16e:	4620      	mov	r0, r4
 800e170:	f7ff ffa8 	bl	800e0c4 <L_shift>
 800e174:	4544      	cmp	r4, r8
 800e176:	d950      	bls.n	800e21a <__hexnan+0x10a>
 800e178:	2300      	movs	r3, #0
 800e17a:	f1a4 0904 	sub.w	r9, r4, #4
 800e17e:	f844 3c04 	str.w	r3, [r4, #-4]
 800e182:	461d      	mov	r5, r3
 800e184:	464c      	mov	r4, r9
 800e186:	f8cd b008 	str.w	fp, [sp, #8]
 800e18a:	9a03      	ldr	r2, [sp, #12]
 800e18c:	e7d7      	b.n	800e13e <__hexnan+0x2e>
 800e18e:	2929      	cmp	r1, #41	; 0x29
 800e190:	d156      	bne.n	800e240 <__hexnan+0x130>
 800e192:	3202      	adds	r2, #2
 800e194:	f8ca 2000 	str.w	r2, [sl]
 800e198:	f1bb 0f00 	cmp.w	fp, #0
 800e19c:	d050      	beq.n	800e240 <__hexnan+0x130>
 800e19e:	454c      	cmp	r4, r9
 800e1a0:	d206      	bcs.n	800e1b0 <__hexnan+0xa0>
 800e1a2:	2d07      	cmp	r5, #7
 800e1a4:	dc04      	bgt.n	800e1b0 <__hexnan+0xa0>
 800e1a6:	462a      	mov	r2, r5
 800e1a8:	4649      	mov	r1, r9
 800e1aa:	4620      	mov	r0, r4
 800e1ac:	f7ff ff8a 	bl	800e0c4 <L_shift>
 800e1b0:	4544      	cmp	r4, r8
 800e1b2:	d934      	bls.n	800e21e <__hexnan+0x10e>
 800e1b4:	4623      	mov	r3, r4
 800e1b6:	f1a8 0204 	sub.w	r2, r8, #4
 800e1ba:	f853 1b04 	ldr.w	r1, [r3], #4
 800e1be:	429f      	cmp	r7, r3
 800e1c0:	f842 1f04 	str.w	r1, [r2, #4]!
 800e1c4:	d2f9      	bcs.n	800e1ba <__hexnan+0xaa>
 800e1c6:	1b3b      	subs	r3, r7, r4
 800e1c8:	f023 0303 	bic.w	r3, r3, #3
 800e1cc:	3304      	adds	r3, #4
 800e1ce:	3401      	adds	r4, #1
 800e1d0:	3e03      	subs	r6, #3
 800e1d2:	42b4      	cmp	r4, r6
 800e1d4:	bf88      	it	hi
 800e1d6:	2304      	movhi	r3, #4
 800e1d8:	2200      	movs	r2, #0
 800e1da:	4443      	add	r3, r8
 800e1dc:	f843 2b04 	str.w	r2, [r3], #4
 800e1e0:	429f      	cmp	r7, r3
 800e1e2:	d2fb      	bcs.n	800e1dc <__hexnan+0xcc>
 800e1e4:	683b      	ldr	r3, [r7, #0]
 800e1e6:	b91b      	cbnz	r3, 800e1f0 <__hexnan+0xe0>
 800e1e8:	4547      	cmp	r7, r8
 800e1ea:	d127      	bne.n	800e23c <__hexnan+0x12c>
 800e1ec:	2301      	movs	r3, #1
 800e1ee:	603b      	str	r3, [r7, #0]
 800e1f0:	2005      	movs	r0, #5
 800e1f2:	e026      	b.n	800e242 <__hexnan+0x132>
 800e1f4:	3501      	adds	r5, #1
 800e1f6:	2d08      	cmp	r5, #8
 800e1f8:	f10b 0b01 	add.w	fp, fp, #1
 800e1fc:	dd06      	ble.n	800e20c <__hexnan+0xfc>
 800e1fe:	4544      	cmp	r4, r8
 800e200:	d9c3      	bls.n	800e18a <__hexnan+0x7a>
 800e202:	2300      	movs	r3, #0
 800e204:	2501      	movs	r5, #1
 800e206:	f844 3c04 	str.w	r3, [r4, #-4]
 800e20a:	3c04      	subs	r4, #4
 800e20c:	6822      	ldr	r2, [r4, #0]
 800e20e:	f000 000f 	and.w	r0, r0, #15
 800e212:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800e216:	6022      	str	r2, [r4, #0]
 800e218:	e7b7      	b.n	800e18a <__hexnan+0x7a>
 800e21a:	2508      	movs	r5, #8
 800e21c:	e7b5      	b.n	800e18a <__hexnan+0x7a>
 800e21e:	9b01      	ldr	r3, [sp, #4]
 800e220:	2b00      	cmp	r3, #0
 800e222:	d0df      	beq.n	800e1e4 <__hexnan+0xd4>
 800e224:	f04f 32ff 	mov.w	r2, #4294967295
 800e228:	f1c3 0320 	rsb	r3, r3, #32
 800e22c:	fa22 f303 	lsr.w	r3, r2, r3
 800e230:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800e234:	401a      	ands	r2, r3
 800e236:	f846 2c04 	str.w	r2, [r6, #-4]
 800e23a:	e7d3      	b.n	800e1e4 <__hexnan+0xd4>
 800e23c:	3f04      	subs	r7, #4
 800e23e:	e7d1      	b.n	800e1e4 <__hexnan+0xd4>
 800e240:	2004      	movs	r0, #4
 800e242:	b007      	add	sp, #28
 800e244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e248 <_localeconv_r>:
 800e248:	4800      	ldr	r0, [pc, #0]	; (800e24c <_localeconv_r+0x4>)
 800e24a:	4770      	bx	lr
 800e24c:	200002fc 	.word	0x200002fc

0800e250 <_lseek_r>:
 800e250:	b538      	push	{r3, r4, r5, lr}
 800e252:	4604      	mov	r4, r0
 800e254:	4608      	mov	r0, r1
 800e256:	4611      	mov	r1, r2
 800e258:	2200      	movs	r2, #0
 800e25a:	4d05      	ldr	r5, [pc, #20]	; (800e270 <_lseek_r+0x20>)
 800e25c:	602a      	str	r2, [r5, #0]
 800e25e:	461a      	mov	r2, r3
 800e260:	f7f7 fad2 	bl	8005808 <_lseek>
 800e264:	1c43      	adds	r3, r0, #1
 800e266:	d102      	bne.n	800e26e <_lseek_r+0x1e>
 800e268:	682b      	ldr	r3, [r5, #0]
 800e26a:	b103      	cbz	r3, 800e26e <_lseek_r+0x1e>
 800e26c:	6023      	str	r3, [r4, #0]
 800e26e:	bd38      	pop	{r3, r4, r5, pc}
 800e270:	20001694 	.word	0x20001694

0800e274 <malloc>:
 800e274:	4b02      	ldr	r3, [pc, #8]	; (800e280 <malloc+0xc>)
 800e276:	4601      	mov	r1, r0
 800e278:	6818      	ldr	r0, [r3, #0]
 800e27a:	f000 bd57 	b.w	800ed2c <_malloc_r>
 800e27e:	bf00      	nop
 800e280:	200001a4 	.word	0x200001a4

0800e284 <__ascii_mbtowc>:
 800e284:	b082      	sub	sp, #8
 800e286:	b901      	cbnz	r1, 800e28a <__ascii_mbtowc+0x6>
 800e288:	a901      	add	r1, sp, #4
 800e28a:	b142      	cbz	r2, 800e29e <__ascii_mbtowc+0x1a>
 800e28c:	b14b      	cbz	r3, 800e2a2 <__ascii_mbtowc+0x1e>
 800e28e:	7813      	ldrb	r3, [r2, #0]
 800e290:	600b      	str	r3, [r1, #0]
 800e292:	7812      	ldrb	r2, [r2, #0]
 800e294:	1e10      	subs	r0, r2, #0
 800e296:	bf18      	it	ne
 800e298:	2001      	movne	r0, #1
 800e29a:	b002      	add	sp, #8
 800e29c:	4770      	bx	lr
 800e29e:	4610      	mov	r0, r2
 800e2a0:	e7fb      	b.n	800e29a <__ascii_mbtowc+0x16>
 800e2a2:	f06f 0001 	mvn.w	r0, #1
 800e2a6:	e7f8      	b.n	800e29a <__ascii_mbtowc+0x16>

0800e2a8 <memchr>:
 800e2a8:	4603      	mov	r3, r0
 800e2aa:	b510      	push	{r4, lr}
 800e2ac:	b2c9      	uxtb	r1, r1
 800e2ae:	4402      	add	r2, r0
 800e2b0:	4293      	cmp	r3, r2
 800e2b2:	4618      	mov	r0, r3
 800e2b4:	d101      	bne.n	800e2ba <memchr+0x12>
 800e2b6:	2000      	movs	r0, #0
 800e2b8:	e003      	b.n	800e2c2 <memchr+0x1a>
 800e2ba:	7804      	ldrb	r4, [r0, #0]
 800e2bc:	3301      	adds	r3, #1
 800e2be:	428c      	cmp	r4, r1
 800e2c0:	d1f6      	bne.n	800e2b0 <memchr+0x8>
 800e2c2:	bd10      	pop	{r4, pc}

0800e2c4 <_Balloc>:
 800e2c4:	b570      	push	{r4, r5, r6, lr}
 800e2c6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e2c8:	4604      	mov	r4, r0
 800e2ca:	460d      	mov	r5, r1
 800e2cc:	b976      	cbnz	r6, 800e2ec <_Balloc+0x28>
 800e2ce:	2010      	movs	r0, #16
 800e2d0:	f7ff ffd0 	bl	800e274 <malloc>
 800e2d4:	4602      	mov	r2, r0
 800e2d6:	6260      	str	r0, [r4, #36]	; 0x24
 800e2d8:	b920      	cbnz	r0, 800e2e4 <_Balloc+0x20>
 800e2da:	2166      	movs	r1, #102	; 0x66
 800e2dc:	4b17      	ldr	r3, [pc, #92]	; (800e33c <_Balloc+0x78>)
 800e2de:	4818      	ldr	r0, [pc, #96]	; (800e340 <_Balloc+0x7c>)
 800e2e0:	f001 fb48 	bl	800f974 <__assert_func>
 800e2e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e2e8:	6006      	str	r6, [r0, #0]
 800e2ea:	60c6      	str	r6, [r0, #12]
 800e2ec:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800e2ee:	68f3      	ldr	r3, [r6, #12]
 800e2f0:	b183      	cbz	r3, 800e314 <_Balloc+0x50>
 800e2f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e2f4:	68db      	ldr	r3, [r3, #12]
 800e2f6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e2fa:	b9b8      	cbnz	r0, 800e32c <_Balloc+0x68>
 800e2fc:	2101      	movs	r1, #1
 800e2fe:	fa01 f605 	lsl.w	r6, r1, r5
 800e302:	1d72      	adds	r2, r6, #5
 800e304:	4620      	mov	r0, r4
 800e306:	0092      	lsls	r2, r2, #2
 800e308:	f000 fc94 	bl	800ec34 <_calloc_r>
 800e30c:	b160      	cbz	r0, 800e328 <_Balloc+0x64>
 800e30e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e312:	e00e      	b.n	800e332 <_Balloc+0x6e>
 800e314:	2221      	movs	r2, #33	; 0x21
 800e316:	2104      	movs	r1, #4
 800e318:	4620      	mov	r0, r4
 800e31a:	f000 fc8b 	bl	800ec34 <_calloc_r>
 800e31e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e320:	60f0      	str	r0, [r6, #12]
 800e322:	68db      	ldr	r3, [r3, #12]
 800e324:	2b00      	cmp	r3, #0
 800e326:	d1e4      	bne.n	800e2f2 <_Balloc+0x2e>
 800e328:	2000      	movs	r0, #0
 800e32a:	bd70      	pop	{r4, r5, r6, pc}
 800e32c:	6802      	ldr	r2, [r0, #0]
 800e32e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e332:	2300      	movs	r3, #0
 800e334:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e338:	e7f7      	b.n	800e32a <_Balloc+0x66>
 800e33a:	bf00      	nop
 800e33c:	080113be 	.word	0x080113be
 800e340:	080114bc 	.word	0x080114bc

0800e344 <_Bfree>:
 800e344:	b570      	push	{r4, r5, r6, lr}
 800e346:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e348:	4605      	mov	r5, r0
 800e34a:	460c      	mov	r4, r1
 800e34c:	b976      	cbnz	r6, 800e36c <_Bfree+0x28>
 800e34e:	2010      	movs	r0, #16
 800e350:	f7ff ff90 	bl	800e274 <malloc>
 800e354:	4602      	mov	r2, r0
 800e356:	6268      	str	r0, [r5, #36]	; 0x24
 800e358:	b920      	cbnz	r0, 800e364 <_Bfree+0x20>
 800e35a:	218a      	movs	r1, #138	; 0x8a
 800e35c:	4b08      	ldr	r3, [pc, #32]	; (800e380 <_Bfree+0x3c>)
 800e35e:	4809      	ldr	r0, [pc, #36]	; (800e384 <_Bfree+0x40>)
 800e360:	f001 fb08 	bl	800f974 <__assert_func>
 800e364:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e368:	6006      	str	r6, [r0, #0]
 800e36a:	60c6      	str	r6, [r0, #12]
 800e36c:	b13c      	cbz	r4, 800e37e <_Bfree+0x3a>
 800e36e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800e370:	6862      	ldr	r2, [r4, #4]
 800e372:	68db      	ldr	r3, [r3, #12]
 800e374:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800e378:	6021      	str	r1, [r4, #0]
 800e37a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800e37e:	bd70      	pop	{r4, r5, r6, pc}
 800e380:	080113be 	.word	0x080113be
 800e384:	080114bc 	.word	0x080114bc

0800e388 <__multadd>:
 800e388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e38c:	4607      	mov	r7, r0
 800e38e:	460c      	mov	r4, r1
 800e390:	461e      	mov	r6, r3
 800e392:	2000      	movs	r0, #0
 800e394:	690d      	ldr	r5, [r1, #16]
 800e396:	f101 0c14 	add.w	ip, r1, #20
 800e39a:	f8dc 3000 	ldr.w	r3, [ip]
 800e39e:	3001      	adds	r0, #1
 800e3a0:	b299      	uxth	r1, r3
 800e3a2:	fb02 6101 	mla	r1, r2, r1, r6
 800e3a6:	0c1e      	lsrs	r6, r3, #16
 800e3a8:	0c0b      	lsrs	r3, r1, #16
 800e3aa:	fb02 3306 	mla	r3, r2, r6, r3
 800e3ae:	b289      	uxth	r1, r1
 800e3b0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e3b4:	4285      	cmp	r5, r0
 800e3b6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e3ba:	f84c 1b04 	str.w	r1, [ip], #4
 800e3be:	dcec      	bgt.n	800e39a <__multadd+0x12>
 800e3c0:	b30e      	cbz	r6, 800e406 <__multadd+0x7e>
 800e3c2:	68a3      	ldr	r3, [r4, #8]
 800e3c4:	42ab      	cmp	r3, r5
 800e3c6:	dc19      	bgt.n	800e3fc <__multadd+0x74>
 800e3c8:	6861      	ldr	r1, [r4, #4]
 800e3ca:	4638      	mov	r0, r7
 800e3cc:	3101      	adds	r1, #1
 800e3ce:	f7ff ff79 	bl	800e2c4 <_Balloc>
 800e3d2:	4680      	mov	r8, r0
 800e3d4:	b928      	cbnz	r0, 800e3e2 <__multadd+0x5a>
 800e3d6:	4602      	mov	r2, r0
 800e3d8:	21b5      	movs	r1, #181	; 0xb5
 800e3da:	4b0c      	ldr	r3, [pc, #48]	; (800e40c <__multadd+0x84>)
 800e3dc:	480c      	ldr	r0, [pc, #48]	; (800e410 <__multadd+0x88>)
 800e3de:	f001 fac9 	bl	800f974 <__assert_func>
 800e3e2:	6922      	ldr	r2, [r4, #16]
 800e3e4:	f104 010c 	add.w	r1, r4, #12
 800e3e8:	3202      	adds	r2, #2
 800e3ea:	0092      	lsls	r2, r2, #2
 800e3ec:	300c      	adds	r0, #12
 800e3ee:	f7fc ff81 	bl	800b2f4 <memcpy>
 800e3f2:	4621      	mov	r1, r4
 800e3f4:	4638      	mov	r0, r7
 800e3f6:	f7ff ffa5 	bl	800e344 <_Bfree>
 800e3fa:	4644      	mov	r4, r8
 800e3fc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e400:	3501      	adds	r5, #1
 800e402:	615e      	str	r6, [r3, #20]
 800e404:	6125      	str	r5, [r4, #16]
 800e406:	4620      	mov	r0, r4
 800e408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e40c:	08011430 	.word	0x08011430
 800e410:	080114bc 	.word	0x080114bc

0800e414 <__s2b>:
 800e414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e418:	4615      	mov	r5, r2
 800e41a:	2209      	movs	r2, #9
 800e41c:	461f      	mov	r7, r3
 800e41e:	3308      	adds	r3, #8
 800e420:	460c      	mov	r4, r1
 800e422:	fb93 f3f2 	sdiv	r3, r3, r2
 800e426:	4606      	mov	r6, r0
 800e428:	2201      	movs	r2, #1
 800e42a:	2100      	movs	r1, #0
 800e42c:	429a      	cmp	r2, r3
 800e42e:	db09      	blt.n	800e444 <__s2b+0x30>
 800e430:	4630      	mov	r0, r6
 800e432:	f7ff ff47 	bl	800e2c4 <_Balloc>
 800e436:	b940      	cbnz	r0, 800e44a <__s2b+0x36>
 800e438:	4602      	mov	r2, r0
 800e43a:	21ce      	movs	r1, #206	; 0xce
 800e43c:	4b18      	ldr	r3, [pc, #96]	; (800e4a0 <__s2b+0x8c>)
 800e43e:	4819      	ldr	r0, [pc, #100]	; (800e4a4 <__s2b+0x90>)
 800e440:	f001 fa98 	bl	800f974 <__assert_func>
 800e444:	0052      	lsls	r2, r2, #1
 800e446:	3101      	adds	r1, #1
 800e448:	e7f0      	b.n	800e42c <__s2b+0x18>
 800e44a:	9b08      	ldr	r3, [sp, #32]
 800e44c:	2d09      	cmp	r5, #9
 800e44e:	6143      	str	r3, [r0, #20]
 800e450:	f04f 0301 	mov.w	r3, #1
 800e454:	6103      	str	r3, [r0, #16]
 800e456:	dd16      	ble.n	800e486 <__s2b+0x72>
 800e458:	f104 0909 	add.w	r9, r4, #9
 800e45c:	46c8      	mov	r8, r9
 800e45e:	442c      	add	r4, r5
 800e460:	f818 3b01 	ldrb.w	r3, [r8], #1
 800e464:	4601      	mov	r1, r0
 800e466:	220a      	movs	r2, #10
 800e468:	4630      	mov	r0, r6
 800e46a:	3b30      	subs	r3, #48	; 0x30
 800e46c:	f7ff ff8c 	bl	800e388 <__multadd>
 800e470:	45a0      	cmp	r8, r4
 800e472:	d1f5      	bne.n	800e460 <__s2b+0x4c>
 800e474:	f1a5 0408 	sub.w	r4, r5, #8
 800e478:	444c      	add	r4, r9
 800e47a:	1b2d      	subs	r5, r5, r4
 800e47c:	1963      	adds	r3, r4, r5
 800e47e:	42bb      	cmp	r3, r7
 800e480:	db04      	blt.n	800e48c <__s2b+0x78>
 800e482:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e486:	2509      	movs	r5, #9
 800e488:	340a      	adds	r4, #10
 800e48a:	e7f6      	b.n	800e47a <__s2b+0x66>
 800e48c:	f814 3b01 	ldrb.w	r3, [r4], #1
 800e490:	4601      	mov	r1, r0
 800e492:	220a      	movs	r2, #10
 800e494:	4630      	mov	r0, r6
 800e496:	3b30      	subs	r3, #48	; 0x30
 800e498:	f7ff ff76 	bl	800e388 <__multadd>
 800e49c:	e7ee      	b.n	800e47c <__s2b+0x68>
 800e49e:	bf00      	nop
 800e4a0:	08011430 	.word	0x08011430
 800e4a4:	080114bc 	.word	0x080114bc

0800e4a8 <__hi0bits>:
 800e4a8:	0c02      	lsrs	r2, r0, #16
 800e4aa:	0412      	lsls	r2, r2, #16
 800e4ac:	4603      	mov	r3, r0
 800e4ae:	b9ca      	cbnz	r2, 800e4e4 <__hi0bits+0x3c>
 800e4b0:	0403      	lsls	r3, r0, #16
 800e4b2:	2010      	movs	r0, #16
 800e4b4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800e4b8:	bf04      	itt	eq
 800e4ba:	021b      	lsleq	r3, r3, #8
 800e4bc:	3008      	addeq	r0, #8
 800e4be:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800e4c2:	bf04      	itt	eq
 800e4c4:	011b      	lsleq	r3, r3, #4
 800e4c6:	3004      	addeq	r0, #4
 800e4c8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800e4cc:	bf04      	itt	eq
 800e4ce:	009b      	lsleq	r3, r3, #2
 800e4d0:	3002      	addeq	r0, #2
 800e4d2:	2b00      	cmp	r3, #0
 800e4d4:	db05      	blt.n	800e4e2 <__hi0bits+0x3a>
 800e4d6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800e4da:	f100 0001 	add.w	r0, r0, #1
 800e4de:	bf08      	it	eq
 800e4e0:	2020      	moveq	r0, #32
 800e4e2:	4770      	bx	lr
 800e4e4:	2000      	movs	r0, #0
 800e4e6:	e7e5      	b.n	800e4b4 <__hi0bits+0xc>

0800e4e8 <__lo0bits>:
 800e4e8:	6803      	ldr	r3, [r0, #0]
 800e4ea:	4602      	mov	r2, r0
 800e4ec:	f013 0007 	ands.w	r0, r3, #7
 800e4f0:	d00b      	beq.n	800e50a <__lo0bits+0x22>
 800e4f2:	07d9      	lsls	r1, r3, #31
 800e4f4:	d421      	bmi.n	800e53a <__lo0bits+0x52>
 800e4f6:	0798      	lsls	r0, r3, #30
 800e4f8:	bf49      	itett	mi
 800e4fa:	085b      	lsrmi	r3, r3, #1
 800e4fc:	089b      	lsrpl	r3, r3, #2
 800e4fe:	2001      	movmi	r0, #1
 800e500:	6013      	strmi	r3, [r2, #0]
 800e502:	bf5c      	itt	pl
 800e504:	2002      	movpl	r0, #2
 800e506:	6013      	strpl	r3, [r2, #0]
 800e508:	4770      	bx	lr
 800e50a:	b299      	uxth	r1, r3
 800e50c:	b909      	cbnz	r1, 800e512 <__lo0bits+0x2a>
 800e50e:	2010      	movs	r0, #16
 800e510:	0c1b      	lsrs	r3, r3, #16
 800e512:	b2d9      	uxtb	r1, r3
 800e514:	b909      	cbnz	r1, 800e51a <__lo0bits+0x32>
 800e516:	3008      	adds	r0, #8
 800e518:	0a1b      	lsrs	r3, r3, #8
 800e51a:	0719      	lsls	r1, r3, #28
 800e51c:	bf04      	itt	eq
 800e51e:	091b      	lsreq	r3, r3, #4
 800e520:	3004      	addeq	r0, #4
 800e522:	0799      	lsls	r1, r3, #30
 800e524:	bf04      	itt	eq
 800e526:	089b      	lsreq	r3, r3, #2
 800e528:	3002      	addeq	r0, #2
 800e52a:	07d9      	lsls	r1, r3, #31
 800e52c:	d403      	bmi.n	800e536 <__lo0bits+0x4e>
 800e52e:	085b      	lsrs	r3, r3, #1
 800e530:	f100 0001 	add.w	r0, r0, #1
 800e534:	d003      	beq.n	800e53e <__lo0bits+0x56>
 800e536:	6013      	str	r3, [r2, #0]
 800e538:	4770      	bx	lr
 800e53a:	2000      	movs	r0, #0
 800e53c:	4770      	bx	lr
 800e53e:	2020      	movs	r0, #32
 800e540:	4770      	bx	lr
	...

0800e544 <__i2b>:
 800e544:	b510      	push	{r4, lr}
 800e546:	460c      	mov	r4, r1
 800e548:	2101      	movs	r1, #1
 800e54a:	f7ff febb 	bl	800e2c4 <_Balloc>
 800e54e:	4602      	mov	r2, r0
 800e550:	b928      	cbnz	r0, 800e55e <__i2b+0x1a>
 800e552:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e556:	4b04      	ldr	r3, [pc, #16]	; (800e568 <__i2b+0x24>)
 800e558:	4804      	ldr	r0, [pc, #16]	; (800e56c <__i2b+0x28>)
 800e55a:	f001 fa0b 	bl	800f974 <__assert_func>
 800e55e:	2301      	movs	r3, #1
 800e560:	6144      	str	r4, [r0, #20]
 800e562:	6103      	str	r3, [r0, #16]
 800e564:	bd10      	pop	{r4, pc}
 800e566:	bf00      	nop
 800e568:	08011430 	.word	0x08011430
 800e56c:	080114bc 	.word	0x080114bc

0800e570 <__multiply>:
 800e570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e574:	4691      	mov	r9, r2
 800e576:	690a      	ldr	r2, [r1, #16]
 800e578:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e57c:	460c      	mov	r4, r1
 800e57e:	429a      	cmp	r2, r3
 800e580:	bfbe      	ittt	lt
 800e582:	460b      	movlt	r3, r1
 800e584:	464c      	movlt	r4, r9
 800e586:	4699      	movlt	r9, r3
 800e588:	6927      	ldr	r7, [r4, #16]
 800e58a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800e58e:	68a3      	ldr	r3, [r4, #8]
 800e590:	6861      	ldr	r1, [r4, #4]
 800e592:	eb07 060a 	add.w	r6, r7, sl
 800e596:	42b3      	cmp	r3, r6
 800e598:	b085      	sub	sp, #20
 800e59a:	bfb8      	it	lt
 800e59c:	3101      	addlt	r1, #1
 800e59e:	f7ff fe91 	bl	800e2c4 <_Balloc>
 800e5a2:	b930      	cbnz	r0, 800e5b2 <__multiply+0x42>
 800e5a4:	4602      	mov	r2, r0
 800e5a6:	f240 115d 	movw	r1, #349	; 0x15d
 800e5aa:	4b43      	ldr	r3, [pc, #268]	; (800e6b8 <__multiply+0x148>)
 800e5ac:	4843      	ldr	r0, [pc, #268]	; (800e6bc <__multiply+0x14c>)
 800e5ae:	f001 f9e1 	bl	800f974 <__assert_func>
 800e5b2:	f100 0514 	add.w	r5, r0, #20
 800e5b6:	462b      	mov	r3, r5
 800e5b8:	2200      	movs	r2, #0
 800e5ba:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800e5be:	4543      	cmp	r3, r8
 800e5c0:	d321      	bcc.n	800e606 <__multiply+0x96>
 800e5c2:	f104 0314 	add.w	r3, r4, #20
 800e5c6:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800e5ca:	f109 0314 	add.w	r3, r9, #20
 800e5ce:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800e5d2:	9202      	str	r2, [sp, #8]
 800e5d4:	1b3a      	subs	r2, r7, r4
 800e5d6:	3a15      	subs	r2, #21
 800e5d8:	f022 0203 	bic.w	r2, r2, #3
 800e5dc:	3204      	adds	r2, #4
 800e5de:	f104 0115 	add.w	r1, r4, #21
 800e5e2:	428f      	cmp	r7, r1
 800e5e4:	bf38      	it	cc
 800e5e6:	2204      	movcc	r2, #4
 800e5e8:	9201      	str	r2, [sp, #4]
 800e5ea:	9a02      	ldr	r2, [sp, #8]
 800e5ec:	9303      	str	r3, [sp, #12]
 800e5ee:	429a      	cmp	r2, r3
 800e5f0:	d80c      	bhi.n	800e60c <__multiply+0x9c>
 800e5f2:	2e00      	cmp	r6, #0
 800e5f4:	dd03      	ble.n	800e5fe <__multiply+0x8e>
 800e5f6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800e5fa:	2b00      	cmp	r3, #0
 800e5fc:	d059      	beq.n	800e6b2 <__multiply+0x142>
 800e5fe:	6106      	str	r6, [r0, #16]
 800e600:	b005      	add	sp, #20
 800e602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e606:	f843 2b04 	str.w	r2, [r3], #4
 800e60a:	e7d8      	b.n	800e5be <__multiply+0x4e>
 800e60c:	f8b3 a000 	ldrh.w	sl, [r3]
 800e610:	f1ba 0f00 	cmp.w	sl, #0
 800e614:	d023      	beq.n	800e65e <__multiply+0xee>
 800e616:	46a9      	mov	r9, r5
 800e618:	f04f 0c00 	mov.w	ip, #0
 800e61c:	f104 0e14 	add.w	lr, r4, #20
 800e620:	f85e 2b04 	ldr.w	r2, [lr], #4
 800e624:	f8d9 1000 	ldr.w	r1, [r9]
 800e628:	fa1f fb82 	uxth.w	fp, r2
 800e62c:	b289      	uxth	r1, r1
 800e62e:	fb0a 110b 	mla	r1, sl, fp, r1
 800e632:	4461      	add	r1, ip
 800e634:	f8d9 c000 	ldr.w	ip, [r9]
 800e638:	0c12      	lsrs	r2, r2, #16
 800e63a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800e63e:	fb0a c202 	mla	r2, sl, r2, ip
 800e642:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800e646:	b289      	uxth	r1, r1
 800e648:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800e64c:	4577      	cmp	r7, lr
 800e64e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e652:	f849 1b04 	str.w	r1, [r9], #4
 800e656:	d8e3      	bhi.n	800e620 <__multiply+0xb0>
 800e658:	9a01      	ldr	r2, [sp, #4]
 800e65a:	f845 c002 	str.w	ip, [r5, r2]
 800e65e:	9a03      	ldr	r2, [sp, #12]
 800e660:	3304      	adds	r3, #4
 800e662:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800e666:	f1b9 0f00 	cmp.w	r9, #0
 800e66a:	d020      	beq.n	800e6ae <__multiply+0x13e>
 800e66c:	46ae      	mov	lr, r5
 800e66e:	f04f 0a00 	mov.w	sl, #0
 800e672:	6829      	ldr	r1, [r5, #0]
 800e674:	f104 0c14 	add.w	ip, r4, #20
 800e678:	f8bc b000 	ldrh.w	fp, [ip]
 800e67c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800e680:	b289      	uxth	r1, r1
 800e682:	fb09 220b 	mla	r2, r9, fp, r2
 800e686:	4492      	add	sl, r2
 800e688:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800e68c:	f84e 1b04 	str.w	r1, [lr], #4
 800e690:	f85c 2b04 	ldr.w	r2, [ip], #4
 800e694:	f8be 1000 	ldrh.w	r1, [lr]
 800e698:	0c12      	lsrs	r2, r2, #16
 800e69a:	fb09 1102 	mla	r1, r9, r2, r1
 800e69e:	4567      	cmp	r7, ip
 800e6a0:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800e6a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800e6a8:	d8e6      	bhi.n	800e678 <__multiply+0x108>
 800e6aa:	9a01      	ldr	r2, [sp, #4]
 800e6ac:	50a9      	str	r1, [r5, r2]
 800e6ae:	3504      	adds	r5, #4
 800e6b0:	e79b      	b.n	800e5ea <__multiply+0x7a>
 800e6b2:	3e01      	subs	r6, #1
 800e6b4:	e79d      	b.n	800e5f2 <__multiply+0x82>
 800e6b6:	bf00      	nop
 800e6b8:	08011430 	.word	0x08011430
 800e6bc:	080114bc 	.word	0x080114bc

0800e6c0 <__pow5mult>:
 800e6c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e6c4:	4615      	mov	r5, r2
 800e6c6:	f012 0203 	ands.w	r2, r2, #3
 800e6ca:	4606      	mov	r6, r0
 800e6cc:	460f      	mov	r7, r1
 800e6ce:	d007      	beq.n	800e6e0 <__pow5mult+0x20>
 800e6d0:	4c25      	ldr	r4, [pc, #148]	; (800e768 <__pow5mult+0xa8>)
 800e6d2:	3a01      	subs	r2, #1
 800e6d4:	2300      	movs	r3, #0
 800e6d6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800e6da:	f7ff fe55 	bl	800e388 <__multadd>
 800e6de:	4607      	mov	r7, r0
 800e6e0:	10ad      	asrs	r5, r5, #2
 800e6e2:	d03d      	beq.n	800e760 <__pow5mult+0xa0>
 800e6e4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800e6e6:	b97c      	cbnz	r4, 800e708 <__pow5mult+0x48>
 800e6e8:	2010      	movs	r0, #16
 800e6ea:	f7ff fdc3 	bl	800e274 <malloc>
 800e6ee:	4602      	mov	r2, r0
 800e6f0:	6270      	str	r0, [r6, #36]	; 0x24
 800e6f2:	b928      	cbnz	r0, 800e700 <__pow5mult+0x40>
 800e6f4:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800e6f8:	4b1c      	ldr	r3, [pc, #112]	; (800e76c <__pow5mult+0xac>)
 800e6fa:	481d      	ldr	r0, [pc, #116]	; (800e770 <__pow5mult+0xb0>)
 800e6fc:	f001 f93a 	bl	800f974 <__assert_func>
 800e700:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800e704:	6004      	str	r4, [r0, #0]
 800e706:	60c4      	str	r4, [r0, #12]
 800e708:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800e70c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800e710:	b94c      	cbnz	r4, 800e726 <__pow5mult+0x66>
 800e712:	f240 2171 	movw	r1, #625	; 0x271
 800e716:	4630      	mov	r0, r6
 800e718:	f7ff ff14 	bl	800e544 <__i2b>
 800e71c:	2300      	movs	r3, #0
 800e71e:	4604      	mov	r4, r0
 800e720:	f8c8 0008 	str.w	r0, [r8, #8]
 800e724:	6003      	str	r3, [r0, #0]
 800e726:	f04f 0900 	mov.w	r9, #0
 800e72a:	07eb      	lsls	r3, r5, #31
 800e72c:	d50a      	bpl.n	800e744 <__pow5mult+0x84>
 800e72e:	4639      	mov	r1, r7
 800e730:	4622      	mov	r2, r4
 800e732:	4630      	mov	r0, r6
 800e734:	f7ff ff1c 	bl	800e570 <__multiply>
 800e738:	4680      	mov	r8, r0
 800e73a:	4639      	mov	r1, r7
 800e73c:	4630      	mov	r0, r6
 800e73e:	f7ff fe01 	bl	800e344 <_Bfree>
 800e742:	4647      	mov	r7, r8
 800e744:	106d      	asrs	r5, r5, #1
 800e746:	d00b      	beq.n	800e760 <__pow5mult+0xa0>
 800e748:	6820      	ldr	r0, [r4, #0]
 800e74a:	b938      	cbnz	r0, 800e75c <__pow5mult+0x9c>
 800e74c:	4622      	mov	r2, r4
 800e74e:	4621      	mov	r1, r4
 800e750:	4630      	mov	r0, r6
 800e752:	f7ff ff0d 	bl	800e570 <__multiply>
 800e756:	6020      	str	r0, [r4, #0]
 800e758:	f8c0 9000 	str.w	r9, [r0]
 800e75c:	4604      	mov	r4, r0
 800e75e:	e7e4      	b.n	800e72a <__pow5mult+0x6a>
 800e760:	4638      	mov	r0, r7
 800e762:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e766:	bf00      	nop
 800e768:	08011608 	.word	0x08011608
 800e76c:	080113be 	.word	0x080113be
 800e770:	080114bc 	.word	0x080114bc

0800e774 <__lshift>:
 800e774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e778:	460c      	mov	r4, r1
 800e77a:	4607      	mov	r7, r0
 800e77c:	4691      	mov	r9, r2
 800e77e:	6923      	ldr	r3, [r4, #16]
 800e780:	6849      	ldr	r1, [r1, #4]
 800e782:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800e786:	68a3      	ldr	r3, [r4, #8]
 800e788:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800e78c:	f108 0601 	add.w	r6, r8, #1
 800e790:	42b3      	cmp	r3, r6
 800e792:	db0b      	blt.n	800e7ac <__lshift+0x38>
 800e794:	4638      	mov	r0, r7
 800e796:	f7ff fd95 	bl	800e2c4 <_Balloc>
 800e79a:	4605      	mov	r5, r0
 800e79c:	b948      	cbnz	r0, 800e7b2 <__lshift+0x3e>
 800e79e:	4602      	mov	r2, r0
 800e7a0:	f240 11d9 	movw	r1, #473	; 0x1d9
 800e7a4:	4b29      	ldr	r3, [pc, #164]	; (800e84c <__lshift+0xd8>)
 800e7a6:	482a      	ldr	r0, [pc, #168]	; (800e850 <__lshift+0xdc>)
 800e7a8:	f001 f8e4 	bl	800f974 <__assert_func>
 800e7ac:	3101      	adds	r1, #1
 800e7ae:	005b      	lsls	r3, r3, #1
 800e7b0:	e7ee      	b.n	800e790 <__lshift+0x1c>
 800e7b2:	2300      	movs	r3, #0
 800e7b4:	f100 0114 	add.w	r1, r0, #20
 800e7b8:	f100 0210 	add.w	r2, r0, #16
 800e7bc:	4618      	mov	r0, r3
 800e7be:	4553      	cmp	r3, sl
 800e7c0:	db37      	blt.n	800e832 <__lshift+0xbe>
 800e7c2:	6920      	ldr	r0, [r4, #16]
 800e7c4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800e7c8:	f104 0314 	add.w	r3, r4, #20
 800e7cc:	f019 091f 	ands.w	r9, r9, #31
 800e7d0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800e7d4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800e7d8:	d02f      	beq.n	800e83a <__lshift+0xc6>
 800e7da:	468a      	mov	sl, r1
 800e7dc:	f04f 0c00 	mov.w	ip, #0
 800e7e0:	f1c9 0e20 	rsb	lr, r9, #32
 800e7e4:	681a      	ldr	r2, [r3, #0]
 800e7e6:	fa02 f209 	lsl.w	r2, r2, r9
 800e7ea:	ea42 020c 	orr.w	r2, r2, ip
 800e7ee:	f84a 2b04 	str.w	r2, [sl], #4
 800e7f2:	f853 2b04 	ldr.w	r2, [r3], #4
 800e7f6:	4298      	cmp	r0, r3
 800e7f8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800e7fc:	d8f2      	bhi.n	800e7e4 <__lshift+0x70>
 800e7fe:	1b03      	subs	r3, r0, r4
 800e800:	3b15      	subs	r3, #21
 800e802:	f023 0303 	bic.w	r3, r3, #3
 800e806:	3304      	adds	r3, #4
 800e808:	f104 0215 	add.w	r2, r4, #21
 800e80c:	4290      	cmp	r0, r2
 800e80e:	bf38      	it	cc
 800e810:	2304      	movcc	r3, #4
 800e812:	f841 c003 	str.w	ip, [r1, r3]
 800e816:	f1bc 0f00 	cmp.w	ip, #0
 800e81a:	d001      	beq.n	800e820 <__lshift+0xac>
 800e81c:	f108 0602 	add.w	r6, r8, #2
 800e820:	3e01      	subs	r6, #1
 800e822:	4638      	mov	r0, r7
 800e824:	4621      	mov	r1, r4
 800e826:	612e      	str	r6, [r5, #16]
 800e828:	f7ff fd8c 	bl	800e344 <_Bfree>
 800e82c:	4628      	mov	r0, r5
 800e82e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e832:	f842 0f04 	str.w	r0, [r2, #4]!
 800e836:	3301      	adds	r3, #1
 800e838:	e7c1      	b.n	800e7be <__lshift+0x4a>
 800e83a:	3904      	subs	r1, #4
 800e83c:	f853 2b04 	ldr.w	r2, [r3], #4
 800e840:	4298      	cmp	r0, r3
 800e842:	f841 2f04 	str.w	r2, [r1, #4]!
 800e846:	d8f9      	bhi.n	800e83c <__lshift+0xc8>
 800e848:	e7ea      	b.n	800e820 <__lshift+0xac>
 800e84a:	bf00      	nop
 800e84c:	08011430 	.word	0x08011430
 800e850:	080114bc 	.word	0x080114bc

0800e854 <__mcmp>:
 800e854:	4603      	mov	r3, r0
 800e856:	690a      	ldr	r2, [r1, #16]
 800e858:	6900      	ldr	r0, [r0, #16]
 800e85a:	b530      	push	{r4, r5, lr}
 800e85c:	1a80      	subs	r0, r0, r2
 800e85e:	d10d      	bne.n	800e87c <__mcmp+0x28>
 800e860:	3314      	adds	r3, #20
 800e862:	3114      	adds	r1, #20
 800e864:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800e868:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800e86c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800e870:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800e874:	4295      	cmp	r5, r2
 800e876:	d002      	beq.n	800e87e <__mcmp+0x2a>
 800e878:	d304      	bcc.n	800e884 <__mcmp+0x30>
 800e87a:	2001      	movs	r0, #1
 800e87c:	bd30      	pop	{r4, r5, pc}
 800e87e:	42a3      	cmp	r3, r4
 800e880:	d3f4      	bcc.n	800e86c <__mcmp+0x18>
 800e882:	e7fb      	b.n	800e87c <__mcmp+0x28>
 800e884:	f04f 30ff 	mov.w	r0, #4294967295
 800e888:	e7f8      	b.n	800e87c <__mcmp+0x28>
	...

0800e88c <__mdiff>:
 800e88c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e890:	460d      	mov	r5, r1
 800e892:	4607      	mov	r7, r0
 800e894:	4611      	mov	r1, r2
 800e896:	4628      	mov	r0, r5
 800e898:	4614      	mov	r4, r2
 800e89a:	f7ff ffdb 	bl	800e854 <__mcmp>
 800e89e:	1e06      	subs	r6, r0, #0
 800e8a0:	d111      	bne.n	800e8c6 <__mdiff+0x3a>
 800e8a2:	4631      	mov	r1, r6
 800e8a4:	4638      	mov	r0, r7
 800e8a6:	f7ff fd0d 	bl	800e2c4 <_Balloc>
 800e8aa:	4602      	mov	r2, r0
 800e8ac:	b928      	cbnz	r0, 800e8ba <__mdiff+0x2e>
 800e8ae:	f240 2132 	movw	r1, #562	; 0x232
 800e8b2:	4b3a      	ldr	r3, [pc, #232]	; (800e99c <__mdiff+0x110>)
 800e8b4:	483a      	ldr	r0, [pc, #232]	; (800e9a0 <__mdiff+0x114>)
 800e8b6:	f001 f85d 	bl	800f974 <__assert_func>
 800e8ba:	2301      	movs	r3, #1
 800e8bc:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800e8c0:	4610      	mov	r0, r2
 800e8c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8c6:	bfa4      	itt	ge
 800e8c8:	4623      	movge	r3, r4
 800e8ca:	462c      	movge	r4, r5
 800e8cc:	4638      	mov	r0, r7
 800e8ce:	6861      	ldr	r1, [r4, #4]
 800e8d0:	bfa6      	itte	ge
 800e8d2:	461d      	movge	r5, r3
 800e8d4:	2600      	movge	r6, #0
 800e8d6:	2601      	movlt	r6, #1
 800e8d8:	f7ff fcf4 	bl	800e2c4 <_Balloc>
 800e8dc:	4602      	mov	r2, r0
 800e8de:	b918      	cbnz	r0, 800e8e8 <__mdiff+0x5c>
 800e8e0:	f44f 7110 	mov.w	r1, #576	; 0x240
 800e8e4:	4b2d      	ldr	r3, [pc, #180]	; (800e99c <__mdiff+0x110>)
 800e8e6:	e7e5      	b.n	800e8b4 <__mdiff+0x28>
 800e8e8:	f102 0814 	add.w	r8, r2, #20
 800e8ec:	46c2      	mov	sl, r8
 800e8ee:	f04f 0c00 	mov.w	ip, #0
 800e8f2:	6927      	ldr	r7, [r4, #16]
 800e8f4:	60c6      	str	r6, [r0, #12]
 800e8f6:	692e      	ldr	r6, [r5, #16]
 800e8f8:	f104 0014 	add.w	r0, r4, #20
 800e8fc:	f105 0914 	add.w	r9, r5, #20
 800e900:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 800e904:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800e908:	3410      	adds	r4, #16
 800e90a:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800e90e:	f859 3b04 	ldr.w	r3, [r9], #4
 800e912:	fa1f f18b 	uxth.w	r1, fp
 800e916:	448c      	add	ip, r1
 800e918:	b299      	uxth	r1, r3
 800e91a:	0c1b      	lsrs	r3, r3, #16
 800e91c:	ebac 0101 	sub.w	r1, ip, r1
 800e920:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800e924:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800e928:	b289      	uxth	r1, r1
 800e92a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800e92e:	454e      	cmp	r6, r9
 800e930:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800e934:	f84a 3b04 	str.w	r3, [sl], #4
 800e938:	d8e7      	bhi.n	800e90a <__mdiff+0x7e>
 800e93a:	1b73      	subs	r3, r6, r5
 800e93c:	3b15      	subs	r3, #21
 800e93e:	f023 0303 	bic.w	r3, r3, #3
 800e942:	3515      	adds	r5, #21
 800e944:	3304      	adds	r3, #4
 800e946:	42ae      	cmp	r6, r5
 800e948:	bf38      	it	cc
 800e94a:	2304      	movcc	r3, #4
 800e94c:	4418      	add	r0, r3
 800e94e:	4443      	add	r3, r8
 800e950:	461e      	mov	r6, r3
 800e952:	4605      	mov	r5, r0
 800e954:	4575      	cmp	r5, lr
 800e956:	d30e      	bcc.n	800e976 <__mdiff+0xea>
 800e958:	f10e 0103 	add.w	r1, lr, #3
 800e95c:	1a09      	subs	r1, r1, r0
 800e95e:	f021 0103 	bic.w	r1, r1, #3
 800e962:	3803      	subs	r0, #3
 800e964:	4586      	cmp	lr, r0
 800e966:	bf38      	it	cc
 800e968:	2100      	movcc	r1, #0
 800e96a:	4419      	add	r1, r3
 800e96c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800e970:	b18b      	cbz	r3, 800e996 <__mdiff+0x10a>
 800e972:	6117      	str	r7, [r2, #16]
 800e974:	e7a4      	b.n	800e8c0 <__mdiff+0x34>
 800e976:	f855 8b04 	ldr.w	r8, [r5], #4
 800e97a:	fa1f f188 	uxth.w	r1, r8
 800e97e:	4461      	add	r1, ip
 800e980:	140c      	asrs	r4, r1, #16
 800e982:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800e986:	b289      	uxth	r1, r1
 800e988:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800e98c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800e990:	f846 1b04 	str.w	r1, [r6], #4
 800e994:	e7de      	b.n	800e954 <__mdiff+0xc8>
 800e996:	3f01      	subs	r7, #1
 800e998:	e7e8      	b.n	800e96c <__mdiff+0xe0>
 800e99a:	bf00      	nop
 800e99c:	08011430 	.word	0x08011430
 800e9a0:	080114bc 	.word	0x080114bc

0800e9a4 <__ulp>:
 800e9a4:	4b11      	ldr	r3, [pc, #68]	; (800e9ec <__ulp+0x48>)
 800e9a6:	400b      	ands	r3, r1
 800e9a8:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800e9ac:	2b00      	cmp	r3, #0
 800e9ae:	dd02      	ble.n	800e9b6 <__ulp+0x12>
 800e9b0:	2000      	movs	r0, #0
 800e9b2:	4619      	mov	r1, r3
 800e9b4:	4770      	bx	lr
 800e9b6:	425b      	negs	r3, r3
 800e9b8:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800e9bc:	f04f 0000 	mov.w	r0, #0
 800e9c0:	f04f 0100 	mov.w	r1, #0
 800e9c4:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e9c8:	da04      	bge.n	800e9d4 <__ulp+0x30>
 800e9ca:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800e9ce:	fa43 f102 	asr.w	r1, r3, r2
 800e9d2:	4770      	bx	lr
 800e9d4:	f1a2 0314 	sub.w	r3, r2, #20
 800e9d8:	2b1e      	cmp	r3, #30
 800e9da:	bfd6      	itet	le
 800e9dc:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800e9e0:	2301      	movgt	r3, #1
 800e9e2:	fa22 f303 	lsrle.w	r3, r2, r3
 800e9e6:	4618      	mov	r0, r3
 800e9e8:	4770      	bx	lr
 800e9ea:	bf00      	nop
 800e9ec:	7ff00000 	.word	0x7ff00000

0800e9f0 <__b2d>:
 800e9f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e9f4:	6907      	ldr	r7, [r0, #16]
 800e9f6:	f100 0914 	add.w	r9, r0, #20
 800e9fa:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 800e9fe:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800ea02:	f1a7 0804 	sub.w	r8, r7, #4
 800ea06:	4630      	mov	r0, r6
 800ea08:	f7ff fd4e 	bl	800e4a8 <__hi0bits>
 800ea0c:	f1c0 0320 	rsb	r3, r0, #32
 800ea10:	280a      	cmp	r0, #10
 800ea12:	600b      	str	r3, [r1, #0]
 800ea14:	491f      	ldr	r1, [pc, #124]	; (800ea94 <__b2d+0xa4>)
 800ea16:	dc17      	bgt.n	800ea48 <__b2d+0x58>
 800ea18:	45c1      	cmp	r9, r8
 800ea1a:	bf28      	it	cs
 800ea1c:	2200      	movcs	r2, #0
 800ea1e:	f1c0 0c0b 	rsb	ip, r0, #11
 800ea22:	fa26 f30c 	lsr.w	r3, r6, ip
 800ea26:	bf38      	it	cc
 800ea28:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800ea2c:	ea43 0501 	orr.w	r5, r3, r1
 800ea30:	f100 0315 	add.w	r3, r0, #21
 800ea34:	fa06 f303 	lsl.w	r3, r6, r3
 800ea38:	fa22 f20c 	lsr.w	r2, r2, ip
 800ea3c:	ea43 0402 	orr.w	r4, r3, r2
 800ea40:	4620      	mov	r0, r4
 800ea42:	4629      	mov	r1, r5
 800ea44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ea48:	45c1      	cmp	r9, r8
 800ea4a:	bf2e      	itee	cs
 800ea4c:	2200      	movcs	r2, #0
 800ea4e:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800ea52:	f1a7 0808 	subcc.w	r8, r7, #8
 800ea56:	f1b0 030b 	subs.w	r3, r0, #11
 800ea5a:	d016      	beq.n	800ea8a <__b2d+0x9a>
 800ea5c:	f1c3 0720 	rsb	r7, r3, #32
 800ea60:	fa22 f107 	lsr.w	r1, r2, r7
 800ea64:	45c8      	cmp	r8, r9
 800ea66:	fa06 f603 	lsl.w	r6, r6, r3
 800ea6a:	ea46 0601 	orr.w	r6, r6, r1
 800ea6e:	bf94      	ite	ls
 800ea70:	2100      	movls	r1, #0
 800ea72:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800ea76:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 800ea7a:	fa02 f003 	lsl.w	r0, r2, r3
 800ea7e:	40f9      	lsrs	r1, r7
 800ea80:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800ea84:	ea40 0401 	orr.w	r4, r0, r1
 800ea88:	e7da      	b.n	800ea40 <__b2d+0x50>
 800ea8a:	4614      	mov	r4, r2
 800ea8c:	ea46 0501 	orr.w	r5, r6, r1
 800ea90:	e7d6      	b.n	800ea40 <__b2d+0x50>
 800ea92:	bf00      	nop
 800ea94:	3ff00000 	.word	0x3ff00000

0800ea98 <__d2b>:
 800ea98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ea9c:	2101      	movs	r1, #1
 800ea9e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800eaa2:	4690      	mov	r8, r2
 800eaa4:	461d      	mov	r5, r3
 800eaa6:	f7ff fc0d 	bl	800e2c4 <_Balloc>
 800eaaa:	4604      	mov	r4, r0
 800eaac:	b930      	cbnz	r0, 800eabc <__d2b+0x24>
 800eaae:	4602      	mov	r2, r0
 800eab0:	f240 310a 	movw	r1, #778	; 0x30a
 800eab4:	4b24      	ldr	r3, [pc, #144]	; (800eb48 <__d2b+0xb0>)
 800eab6:	4825      	ldr	r0, [pc, #148]	; (800eb4c <__d2b+0xb4>)
 800eab8:	f000 ff5c 	bl	800f974 <__assert_func>
 800eabc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800eac0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800eac4:	bb2d      	cbnz	r5, 800eb12 <__d2b+0x7a>
 800eac6:	9301      	str	r3, [sp, #4]
 800eac8:	f1b8 0300 	subs.w	r3, r8, #0
 800eacc:	d026      	beq.n	800eb1c <__d2b+0x84>
 800eace:	4668      	mov	r0, sp
 800ead0:	9300      	str	r3, [sp, #0]
 800ead2:	f7ff fd09 	bl	800e4e8 <__lo0bits>
 800ead6:	9900      	ldr	r1, [sp, #0]
 800ead8:	b1f0      	cbz	r0, 800eb18 <__d2b+0x80>
 800eada:	9a01      	ldr	r2, [sp, #4]
 800eadc:	f1c0 0320 	rsb	r3, r0, #32
 800eae0:	fa02 f303 	lsl.w	r3, r2, r3
 800eae4:	430b      	orrs	r3, r1
 800eae6:	40c2      	lsrs	r2, r0
 800eae8:	6163      	str	r3, [r4, #20]
 800eaea:	9201      	str	r2, [sp, #4]
 800eaec:	9b01      	ldr	r3, [sp, #4]
 800eaee:	2b00      	cmp	r3, #0
 800eaf0:	bf14      	ite	ne
 800eaf2:	2102      	movne	r1, #2
 800eaf4:	2101      	moveq	r1, #1
 800eaf6:	61a3      	str	r3, [r4, #24]
 800eaf8:	6121      	str	r1, [r4, #16]
 800eafa:	b1c5      	cbz	r5, 800eb2e <__d2b+0x96>
 800eafc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800eb00:	4405      	add	r5, r0
 800eb02:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800eb06:	603d      	str	r5, [r7, #0]
 800eb08:	6030      	str	r0, [r6, #0]
 800eb0a:	4620      	mov	r0, r4
 800eb0c:	b002      	add	sp, #8
 800eb0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb12:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800eb16:	e7d6      	b.n	800eac6 <__d2b+0x2e>
 800eb18:	6161      	str	r1, [r4, #20]
 800eb1a:	e7e7      	b.n	800eaec <__d2b+0x54>
 800eb1c:	a801      	add	r0, sp, #4
 800eb1e:	f7ff fce3 	bl	800e4e8 <__lo0bits>
 800eb22:	2101      	movs	r1, #1
 800eb24:	9b01      	ldr	r3, [sp, #4]
 800eb26:	6121      	str	r1, [r4, #16]
 800eb28:	6163      	str	r3, [r4, #20]
 800eb2a:	3020      	adds	r0, #32
 800eb2c:	e7e5      	b.n	800eafa <__d2b+0x62>
 800eb2e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800eb32:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800eb36:	6038      	str	r0, [r7, #0]
 800eb38:	6918      	ldr	r0, [r3, #16]
 800eb3a:	f7ff fcb5 	bl	800e4a8 <__hi0bits>
 800eb3e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800eb42:	6031      	str	r1, [r6, #0]
 800eb44:	e7e1      	b.n	800eb0a <__d2b+0x72>
 800eb46:	bf00      	nop
 800eb48:	08011430 	.word	0x08011430
 800eb4c:	080114bc 	.word	0x080114bc

0800eb50 <__ratio>:
 800eb50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb54:	4688      	mov	r8, r1
 800eb56:	4669      	mov	r1, sp
 800eb58:	4681      	mov	r9, r0
 800eb5a:	f7ff ff49 	bl	800e9f0 <__b2d>
 800eb5e:	460f      	mov	r7, r1
 800eb60:	4604      	mov	r4, r0
 800eb62:	460d      	mov	r5, r1
 800eb64:	4640      	mov	r0, r8
 800eb66:	a901      	add	r1, sp, #4
 800eb68:	f7ff ff42 	bl	800e9f0 <__b2d>
 800eb6c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800eb70:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800eb74:	468b      	mov	fp, r1
 800eb76:	eba3 0c02 	sub.w	ip, r3, r2
 800eb7a:	e9dd 3200 	ldrd	r3, r2, [sp]
 800eb7e:	1a9b      	subs	r3, r3, r2
 800eb80:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800eb84:	2b00      	cmp	r3, #0
 800eb86:	bfd5      	itete	le
 800eb88:	460a      	movle	r2, r1
 800eb8a:	462a      	movgt	r2, r5
 800eb8c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800eb90:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800eb94:	bfd8      	it	le
 800eb96:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800eb9a:	465b      	mov	r3, fp
 800eb9c:	4602      	mov	r2, r0
 800eb9e:	4639      	mov	r1, r7
 800eba0:	4620      	mov	r0, r4
 800eba2:	f7f1 fde5 	bl	8000770 <__aeabi_ddiv>
 800eba6:	b003      	add	sp, #12
 800eba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ebac <__copybits>:
 800ebac:	3901      	subs	r1, #1
 800ebae:	b570      	push	{r4, r5, r6, lr}
 800ebb0:	1149      	asrs	r1, r1, #5
 800ebb2:	6914      	ldr	r4, [r2, #16]
 800ebb4:	3101      	adds	r1, #1
 800ebb6:	f102 0314 	add.w	r3, r2, #20
 800ebba:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800ebbe:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800ebc2:	1f05      	subs	r5, r0, #4
 800ebc4:	42a3      	cmp	r3, r4
 800ebc6:	d30c      	bcc.n	800ebe2 <__copybits+0x36>
 800ebc8:	1aa3      	subs	r3, r4, r2
 800ebca:	3b11      	subs	r3, #17
 800ebcc:	f023 0303 	bic.w	r3, r3, #3
 800ebd0:	3211      	adds	r2, #17
 800ebd2:	42a2      	cmp	r2, r4
 800ebd4:	bf88      	it	hi
 800ebd6:	2300      	movhi	r3, #0
 800ebd8:	4418      	add	r0, r3
 800ebda:	2300      	movs	r3, #0
 800ebdc:	4288      	cmp	r0, r1
 800ebde:	d305      	bcc.n	800ebec <__copybits+0x40>
 800ebe0:	bd70      	pop	{r4, r5, r6, pc}
 800ebe2:	f853 6b04 	ldr.w	r6, [r3], #4
 800ebe6:	f845 6f04 	str.w	r6, [r5, #4]!
 800ebea:	e7eb      	b.n	800ebc4 <__copybits+0x18>
 800ebec:	f840 3b04 	str.w	r3, [r0], #4
 800ebf0:	e7f4      	b.n	800ebdc <__copybits+0x30>

0800ebf2 <__any_on>:
 800ebf2:	f100 0214 	add.w	r2, r0, #20
 800ebf6:	6900      	ldr	r0, [r0, #16]
 800ebf8:	114b      	asrs	r3, r1, #5
 800ebfa:	4298      	cmp	r0, r3
 800ebfc:	b510      	push	{r4, lr}
 800ebfe:	db11      	blt.n	800ec24 <__any_on+0x32>
 800ec00:	dd0a      	ble.n	800ec18 <__any_on+0x26>
 800ec02:	f011 011f 	ands.w	r1, r1, #31
 800ec06:	d007      	beq.n	800ec18 <__any_on+0x26>
 800ec08:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800ec0c:	fa24 f001 	lsr.w	r0, r4, r1
 800ec10:	fa00 f101 	lsl.w	r1, r0, r1
 800ec14:	428c      	cmp	r4, r1
 800ec16:	d10b      	bne.n	800ec30 <__any_on+0x3e>
 800ec18:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800ec1c:	4293      	cmp	r3, r2
 800ec1e:	d803      	bhi.n	800ec28 <__any_on+0x36>
 800ec20:	2000      	movs	r0, #0
 800ec22:	bd10      	pop	{r4, pc}
 800ec24:	4603      	mov	r3, r0
 800ec26:	e7f7      	b.n	800ec18 <__any_on+0x26>
 800ec28:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800ec2c:	2900      	cmp	r1, #0
 800ec2e:	d0f5      	beq.n	800ec1c <__any_on+0x2a>
 800ec30:	2001      	movs	r0, #1
 800ec32:	e7f6      	b.n	800ec22 <__any_on+0x30>

0800ec34 <_calloc_r>:
 800ec34:	b570      	push	{r4, r5, r6, lr}
 800ec36:	fba1 5402 	umull	r5, r4, r1, r2
 800ec3a:	b934      	cbnz	r4, 800ec4a <_calloc_r+0x16>
 800ec3c:	4629      	mov	r1, r5
 800ec3e:	f000 f875 	bl	800ed2c <_malloc_r>
 800ec42:	4606      	mov	r6, r0
 800ec44:	b928      	cbnz	r0, 800ec52 <_calloc_r+0x1e>
 800ec46:	4630      	mov	r0, r6
 800ec48:	bd70      	pop	{r4, r5, r6, pc}
 800ec4a:	220c      	movs	r2, #12
 800ec4c:	2600      	movs	r6, #0
 800ec4e:	6002      	str	r2, [r0, #0]
 800ec50:	e7f9      	b.n	800ec46 <_calloc_r+0x12>
 800ec52:	462a      	mov	r2, r5
 800ec54:	4621      	mov	r1, r4
 800ec56:	f7fc fb5b 	bl	800b310 <memset>
 800ec5a:	e7f4      	b.n	800ec46 <_calloc_r+0x12>

0800ec5c <_free_r>:
 800ec5c:	b538      	push	{r3, r4, r5, lr}
 800ec5e:	4605      	mov	r5, r0
 800ec60:	2900      	cmp	r1, #0
 800ec62:	d040      	beq.n	800ece6 <_free_r+0x8a>
 800ec64:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ec68:	1f0c      	subs	r4, r1, #4
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	bfb8      	it	lt
 800ec6e:	18e4      	addlt	r4, r4, r3
 800ec70:	f001 f880 	bl	800fd74 <__malloc_lock>
 800ec74:	4a1c      	ldr	r2, [pc, #112]	; (800ece8 <_free_r+0x8c>)
 800ec76:	6813      	ldr	r3, [r2, #0]
 800ec78:	b933      	cbnz	r3, 800ec88 <_free_r+0x2c>
 800ec7a:	6063      	str	r3, [r4, #4]
 800ec7c:	6014      	str	r4, [r2, #0]
 800ec7e:	4628      	mov	r0, r5
 800ec80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ec84:	f001 b87c 	b.w	800fd80 <__malloc_unlock>
 800ec88:	42a3      	cmp	r3, r4
 800ec8a:	d908      	bls.n	800ec9e <_free_r+0x42>
 800ec8c:	6820      	ldr	r0, [r4, #0]
 800ec8e:	1821      	adds	r1, r4, r0
 800ec90:	428b      	cmp	r3, r1
 800ec92:	bf01      	itttt	eq
 800ec94:	6819      	ldreq	r1, [r3, #0]
 800ec96:	685b      	ldreq	r3, [r3, #4]
 800ec98:	1809      	addeq	r1, r1, r0
 800ec9a:	6021      	streq	r1, [r4, #0]
 800ec9c:	e7ed      	b.n	800ec7a <_free_r+0x1e>
 800ec9e:	461a      	mov	r2, r3
 800eca0:	685b      	ldr	r3, [r3, #4]
 800eca2:	b10b      	cbz	r3, 800eca8 <_free_r+0x4c>
 800eca4:	42a3      	cmp	r3, r4
 800eca6:	d9fa      	bls.n	800ec9e <_free_r+0x42>
 800eca8:	6811      	ldr	r1, [r2, #0]
 800ecaa:	1850      	adds	r0, r2, r1
 800ecac:	42a0      	cmp	r0, r4
 800ecae:	d10b      	bne.n	800ecc8 <_free_r+0x6c>
 800ecb0:	6820      	ldr	r0, [r4, #0]
 800ecb2:	4401      	add	r1, r0
 800ecb4:	1850      	adds	r0, r2, r1
 800ecb6:	4283      	cmp	r3, r0
 800ecb8:	6011      	str	r1, [r2, #0]
 800ecba:	d1e0      	bne.n	800ec7e <_free_r+0x22>
 800ecbc:	6818      	ldr	r0, [r3, #0]
 800ecbe:	685b      	ldr	r3, [r3, #4]
 800ecc0:	4401      	add	r1, r0
 800ecc2:	6011      	str	r1, [r2, #0]
 800ecc4:	6053      	str	r3, [r2, #4]
 800ecc6:	e7da      	b.n	800ec7e <_free_r+0x22>
 800ecc8:	d902      	bls.n	800ecd0 <_free_r+0x74>
 800ecca:	230c      	movs	r3, #12
 800eccc:	602b      	str	r3, [r5, #0]
 800ecce:	e7d6      	b.n	800ec7e <_free_r+0x22>
 800ecd0:	6820      	ldr	r0, [r4, #0]
 800ecd2:	1821      	adds	r1, r4, r0
 800ecd4:	428b      	cmp	r3, r1
 800ecd6:	bf01      	itttt	eq
 800ecd8:	6819      	ldreq	r1, [r3, #0]
 800ecda:	685b      	ldreq	r3, [r3, #4]
 800ecdc:	1809      	addeq	r1, r1, r0
 800ecde:	6021      	streq	r1, [r4, #0]
 800ece0:	6063      	str	r3, [r4, #4]
 800ece2:	6054      	str	r4, [r2, #4]
 800ece4:	e7cb      	b.n	800ec7e <_free_r+0x22>
 800ece6:	bd38      	pop	{r3, r4, r5, pc}
 800ece8:	2000168c 	.word	0x2000168c

0800ecec <sbrk_aligned>:
 800ecec:	b570      	push	{r4, r5, r6, lr}
 800ecee:	4e0e      	ldr	r6, [pc, #56]	; (800ed28 <sbrk_aligned+0x3c>)
 800ecf0:	460c      	mov	r4, r1
 800ecf2:	6831      	ldr	r1, [r6, #0]
 800ecf4:	4605      	mov	r5, r0
 800ecf6:	b911      	cbnz	r1, 800ecfe <sbrk_aligned+0x12>
 800ecf8:	f000 fd26 	bl	800f748 <_sbrk_r>
 800ecfc:	6030      	str	r0, [r6, #0]
 800ecfe:	4621      	mov	r1, r4
 800ed00:	4628      	mov	r0, r5
 800ed02:	f000 fd21 	bl	800f748 <_sbrk_r>
 800ed06:	1c43      	adds	r3, r0, #1
 800ed08:	d00a      	beq.n	800ed20 <sbrk_aligned+0x34>
 800ed0a:	1cc4      	adds	r4, r0, #3
 800ed0c:	f024 0403 	bic.w	r4, r4, #3
 800ed10:	42a0      	cmp	r0, r4
 800ed12:	d007      	beq.n	800ed24 <sbrk_aligned+0x38>
 800ed14:	1a21      	subs	r1, r4, r0
 800ed16:	4628      	mov	r0, r5
 800ed18:	f000 fd16 	bl	800f748 <_sbrk_r>
 800ed1c:	3001      	adds	r0, #1
 800ed1e:	d101      	bne.n	800ed24 <sbrk_aligned+0x38>
 800ed20:	f04f 34ff 	mov.w	r4, #4294967295
 800ed24:	4620      	mov	r0, r4
 800ed26:	bd70      	pop	{r4, r5, r6, pc}
 800ed28:	20001690 	.word	0x20001690

0800ed2c <_malloc_r>:
 800ed2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed30:	1ccd      	adds	r5, r1, #3
 800ed32:	f025 0503 	bic.w	r5, r5, #3
 800ed36:	3508      	adds	r5, #8
 800ed38:	2d0c      	cmp	r5, #12
 800ed3a:	bf38      	it	cc
 800ed3c:	250c      	movcc	r5, #12
 800ed3e:	2d00      	cmp	r5, #0
 800ed40:	4607      	mov	r7, r0
 800ed42:	db01      	blt.n	800ed48 <_malloc_r+0x1c>
 800ed44:	42a9      	cmp	r1, r5
 800ed46:	d905      	bls.n	800ed54 <_malloc_r+0x28>
 800ed48:	230c      	movs	r3, #12
 800ed4a:	2600      	movs	r6, #0
 800ed4c:	603b      	str	r3, [r7, #0]
 800ed4e:	4630      	mov	r0, r6
 800ed50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed54:	4e2e      	ldr	r6, [pc, #184]	; (800ee10 <_malloc_r+0xe4>)
 800ed56:	f001 f80d 	bl	800fd74 <__malloc_lock>
 800ed5a:	6833      	ldr	r3, [r6, #0]
 800ed5c:	461c      	mov	r4, r3
 800ed5e:	bb34      	cbnz	r4, 800edae <_malloc_r+0x82>
 800ed60:	4629      	mov	r1, r5
 800ed62:	4638      	mov	r0, r7
 800ed64:	f7ff ffc2 	bl	800ecec <sbrk_aligned>
 800ed68:	1c43      	adds	r3, r0, #1
 800ed6a:	4604      	mov	r4, r0
 800ed6c:	d14d      	bne.n	800ee0a <_malloc_r+0xde>
 800ed6e:	6834      	ldr	r4, [r6, #0]
 800ed70:	4626      	mov	r6, r4
 800ed72:	2e00      	cmp	r6, #0
 800ed74:	d140      	bne.n	800edf8 <_malloc_r+0xcc>
 800ed76:	6823      	ldr	r3, [r4, #0]
 800ed78:	4631      	mov	r1, r6
 800ed7a:	4638      	mov	r0, r7
 800ed7c:	eb04 0803 	add.w	r8, r4, r3
 800ed80:	f000 fce2 	bl	800f748 <_sbrk_r>
 800ed84:	4580      	cmp	r8, r0
 800ed86:	d13a      	bne.n	800edfe <_malloc_r+0xd2>
 800ed88:	6821      	ldr	r1, [r4, #0]
 800ed8a:	3503      	adds	r5, #3
 800ed8c:	1a6d      	subs	r5, r5, r1
 800ed8e:	f025 0503 	bic.w	r5, r5, #3
 800ed92:	3508      	adds	r5, #8
 800ed94:	2d0c      	cmp	r5, #12
 800ed96:	bf38      	it	cc
 800ed98:	250c      	movcc	r5, #12
 800ed9a:	4638      	mov	r0, r7
 800ed9c:	4629      	mov	r1, r5
 800ed9e:	f7ff ffa5 	bl	800ecec <sbrk_aligned>
 800eda2:	3001      	adds	r0, #1
 800eda4:	d02b      	beq.n	800edfe <_malloc_r+0xd2>
 800eda6:	6823      	ldr	r3, [r4, #0]
 800eda8:	442b      	add	r3, r5
 800edaa:	6023      	str	r3, [r4, #0]
 800edac:	e00e      	b.n	800edcc <_malloc_r+0xa0>
 800edae:	6822      	ldr	r2, [r4, #0]
 800edb0:	1b52      	subs	r2, r2, r5
 800edb2:	d41e      	bmi.n	800edf2 <_malloc_r+0xc6>
 800edb4:	2a0b      	cmp	r2, #11
 800edb6:	d916      	bls.n	800ede6 <_malloc_r+0xba>
 800edb8:	1961      	adds	r1, r4, r5
 800edba:	42a3      	cmp	r3, r4
 800edbc:	6025      	str	r5, [r4, #0]
 800edbe:	bf18      	it	ne
 800edc0:	6059      	strne	r1, [r3, #4]
 800edc2:	6863      	ldr	r3, [r4, #4]
 800edc4:	bf08      	it	eq
 800edc6:	6031      	streq	r1, [r6, #0]
 800edc8:	5162      	str	r2, [r4, r5]
 800edca:	604b      	str	r3, [r1, #4]
 800edcc:	4638      	mov	r0, r7
 800edce:	f104 060b 	add.w	r6, r4, #11
 800edd2:	f000 ffd5 	bl	800fd80 <__malloc_unlock>
 800edd6:	f026 0607 	bic.w	r6, r6, #7
 800edda:	1d23      	adds	r3, r4, #4
 800eddc:	1af2      	subs	r2, r6, r3
 800edde:	d0b6      	beq.n	800ed4e <_malloc_r+0x22>
 800ede0:	1b9b      	subs	r3, r3, r6
 800ede2:	50a3      	str	r3, [r4, r2]
 800ede4:	e7b3      	b.n	800ed4e <_malloc_r+0x22>
 800ede6:	6862      	ldr	r2, [r4, #4]
 800ede8:	42a3      	cmp	r3, r4
 800edea:	bf0c      	ite	eq
 800edec:	6032      	streq	r2, [r6, #0]
 800edee:	605a      	strne	r2, [r3, #4]
 800edf0:	e7ec      	b.n	800edcc <_malloc_r+0xa0>
 800edf2:	4623      	mov	r3, r4
 800edf4:	6864      	ldr	r4, [r4, #4]
 800edf6:	e7b2      	b.n	800ed5e <_malloc_r+0x32>
 800edf8:	4634      	mov	r4, r6
 800edfa:	6876      	ldr	r6, [r6, #4]
 800edfc:	e7b9      	b.n	800ed72 <_malloc_r+0x46>
 800edfe:	230c      	movs	r3, #12
 800ee00:	4638      	mov	r0, r7
 800ee02:	603b      	str	r3, [r7, #0]
 800ee04:	f000 ffbc 	bl	800fd80 <__malloc_unlock>
 800ee08:	e7a1      	b.n	800ed4e <_malloc_r+0x22>
 800ee0a:	6025      	str	r5, [r4, #0]
 800ee0c:	e7de      	b.n	800edcc <_malloc_r+0xa0>
 800ee0e:	bf00      	nop
 800ee10:	2000168c 	.word	0x2000168c

0800ee14 <__ssputs_r>:
 800ee14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee18:	688e      	ldr	r6, [r1, #8]
 800ee1a:	4682      	mov	sl, r0
 800ee1c:	429e      	cmp	r6, r3
 800ee1e:	460c      	mov	r4, r1
 800ee20:	4690      	mov	r8, r2
 800ee22:	461f      	mov	r7, r3
 800ee24:	d838      	bhi.n	800ee98 <__ssputs_r+0x84>
 800ee26:	898a      	ldrh	r2, [r1, #12]
 800ee28:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800ee2c:	d032      	beq.n	800ee94 <__ssputs_r+0x80>
 800ee2e:	6825      	ldr	r5, [r4, #0]
 800ee30:	6909      	ldr	r1, [r1, #16]
 800ee32:	3301      	adds	r3, #1
 800ee34:	eba5 0901 	sub.w	r9, r5, r1
 800ee38:	6965      	ldr	r5, [r4, #20]
 800ee3a:	444b      	add	r3, r9
 800ee3c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ee40:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800ee44:	106d      	asrs	r5, r5, #1
 800ee46:	429d      	cmp	r5, r3
 800ee48:	bf38      	it	cc
 800ee4a:	461d      	movcc	r5, r3
 800ee4c:	0553      	lsls	r3, r2, #21
 800ee4e:	d531      	bpl.n	800eeb4 <__ssputs_r+0xa0>
 800ee50:	4629      	mov	r1, r5
 800ee52:	f7ff ff6b 	bl	800ed2c <_malloc_r>
 800ee56:	4606      	mov	r6, r0
 800ee58:	b950      	cbnz	r0, 800ee70 <__ssputs_r+0x5c>
 800ee5a:	230c      	movs	r3, #12
 800ee5c:	f04f 30ff 	mov.w	r0, #4294967295
 800ee60:	f8ca 3000 	str.w	r3, [sl]
 800ee64:	89a3      	ldrh	r3, [r4, #12]
 800ee66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ee6a:	81a3      	strh	r3, [r4, #12]
 800ee6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee70:	464a      	mov	r2, r9
 800ee72:	6921      	ldr	r1, [r4, #16]
 800ee74:	f7fc fa3e 	bl	800b2f4 <memcpy>
 800ee78:	89a3      	ldrh	r3, [r4, #12]
 800ee7a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800ee7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ee82:	81a3      	strh	r3, [r4, #12]
 800ee84:	6126      	str	r6, [r4, #16]
 800ee86:	444e      	add	r6, r9
 800ee88:	6026      	str	r6, [r4, #0]
 800ee8a:	463e      	mov	r6, r7
 800ee8c:	6165      	str	r5, [r4, #20]
 800ee8e:	eba5 0509 	sub.w	r5, r5, r9
 800ee92:	60a5      	str	r5, [r4, #8]
 800ee94:	42be      	cmp	r6, r7
 800ee96:	d900      	bls.n	800ee9a <__ssputs_r+0x86>
 800ee98:	463e      	mov	r6, r7
 800ee9a:	4632      	mov	r2, r6
 800ee9c:	4641      	mov	r1, r8
 800ee9e:	6820      	ldr	r0, [r4, #0]
 800eea0:	f000 ff4e 	bl	800fd40 <memmove>
 800eea4:	68a3      	ldr	r3, [r4, #8]
 800eea6:	2000      	movs	r0, #0
 800eea8:	1b9b      	subs	r3, r3, r6
 800eeaa:	60a3      	str	r3, [r4, #8]
 800eeac:	6823      	ldr	r3, [r4, #0]
 800eeae:	4433      	add	r3, r6
 800eeb0:	6023      	str	r3, [r4, #0]
 800eeb2:	e7db      	b.n	800ee6c <__ssputs_r+0x58>
 800eeb4:	462a      	mov	r2, r5
 800eeb6:	f000 ff69 	bl	800fd8c <_realloc_r>
 800eeba:	4606      	mov	r6, r0
 800eebc:	2800      	cmp	r0, #0
 800eebe:	d1e1      	bne.n	800ee84 <__ssputs_r+0x70>
 800eec0:	4650      	mov	r0, sl
 800eec2:	6921      	ldr	r1, [r4, #16]
 800eec4:	f7ff feca 	bl	800ec5c <_free_r>
 800eec8:	e7c7      	b.n	800ee5a <__ssputs_r+0x46>
	...

0800eecc <_svfiprintf_r>:
 800eecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eed0:	4698      	mov	r8, r3
 800eed2:	898b      	ldrh	r3, [r1, #12]
 800eed4:	4607      	mov	r7, r0
 800eed6:	061b      	lsls	r3, r3, #24
 800eed8:	460d      	mov	r5, r1
 800eeda:	4614      	mov	r4, r2
 800eedc:	b09d      	sub	sp, #116	; 0x74
 800eede:	d50e      	bpl.n	800eefe <_svfiprintf_r+0x32>
 800eee0:	690b      	ldr	r3, [r1, #16]
 800eee2:	b963      	cbnz	r3, 800eefe <_svfiprintf_r+0x32>
 800eee4:	2140      	movs	r1, #64	; 0x40
 800eee6:	f7ff ff21 	bl	800ed2c <_malloc_r>
 800eeea:	6028      	str	r0, [r5, #0]
 800eeec:	6128      	str	r0, [r5, #16]
 800eeee:	b920      	cbnz	r0, 800eefa <_svfiprintf_r+0x2e>
 800eef0:	230c      	movs	r3, #12
 800eef2:	603b      	str	r3, [r7, #0]
 800eef4:	f04f 30ff 	mov.w	r0, #4294967295
 800eef8:	e0d1      	b.n	800f09e <_svfiprintf_r+0x1d2>
 800eefa:	2340      	movs	r3, #64	; 0x40
 800eefc:	616b      	str	r3, [r5, #20]
 800eefe:	2300      	movs	r3, #0
 800ef00:	9309      	str	r3, [sp, #36]	; 0x24
 800ef02:	2320      	movs	r3, #32
 800ef04:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ef08:	2330      	movs	r3, #48	; 0x30
 800ef0a:	f04f 0901 	mov.w	r9, #1
 800ef0e:	f8cd 800c 	str.w	r8, [sp, #12]
 800ef12:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800f0b8 <_svfiprintf_r+0x1ec>
 800ef16:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800ef1a:	4623      	mov	r3, r4
 800ef1c:	469a      	mov	sl, r3
 800ef1e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ef22:	b10a      	cbz	r2, 800ef28 <_svfiprintf_r+0x5c>
 800ef24:	2a25      	cmp	r2, #37	; 0x25
 800ef26:	d1f9      	bne.n	800ef1c <_svfiprintf_r+0x50>
 800ef28:	ebba 0b04 	subs.w	fp, sl, r4
 800ef2c:	d00b      	beq.n	800ef46 <_svfiprintf_r+0x7a>
 800ef2e:	465b      	mov	r3, fp
 800ef30:	4622      	mov	r2, r4
 800ef32:	4629      	mov	r1, r5
 800ef34:	4638      	mov	r0, r7
 800ef36:	f7ff ff6d 	bl	800ee14 <__ssputs_r>
 800ef3a:	3001      	adds	r0, #1
 800ef3c:	f000 80aa 	beq.w	800f094 <_svfiprintf_r+0x1c8>
 800ef40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ef42:	445a      	add	r2, fp
 800ef44:	9209      	str	r2, [sp, #36]	; 0x24
 800ef46:	f89a 3000 	ldrb.w	r3, [sl]
 800ef4a:	2b00      	cmp	r3, #0
 800ef4c:	f000 80a2 	beq.w	800f094 <_svfiprintf_r+0x1c8>
 800ef50:	2300      	movs	r3, #0
 800ef52:	f04f 32ff 	mov.w	r2, #4294967295
 800ef56:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ef5a:	f10a 0a01 	add.w	sl, sl, #1
 800ef5e:	9304      	str	r3, [sp, #16]
 800ef60:	9307      	str	r3, [sp, #28]
 800ef62:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800ef66:	931a      	str	r3, [sp, #104]	; 0x68
 800ef68:	4654      	mov	r4, sl
 800ef6a:	2205      	movs	r2, #5
 800ef6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ef70:	4851      	ldr	r0, [pc, #324]	; (800f0b8 <_svfiprintf_r+0x1ec>)
 800ef72:	f7ff f999 	bl	800e2a8 <memchr>
 800ef76:	9a04      	ldr	r2, [sp, #16]
 800ef78:	b9d8      	cbnz	r0, 800efb2 <_svfiprintf_r+0xe6>
 800ef7a:	06d0      	lsls	r0, r2, #27
 800ef7c:	bf44      	itt	mi
 800ef7e:	2320      	movmi	r3, #32
 800ef80:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ef84:	0711      	lsls	r1, r2, #28
 800ef86:	bf44      	itt	mi
 800ef88:	232b      	movmi	r3, #43	; 0x2b
 800ef8a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ef8e:	f89a 3000 	ldrb.w	r3, [sl]
 800ef92:	2b2a      	cmp	r3, #42	; 0x2a
 800ef94:	d015      	beq.n	800efc2 <_svfiprintf_r+0xf6>
 800ef96:	4654      	mov	r4, sl
 800ef98:	2000      	movs	r0, #0
 800ef9a:	f04f 0c0a 	mov.w	ip, #10
 800ef9e:	9a07      	ldr	r2, [sp, #28]
 800efa0:	4621      	mov	r1, r4
 800efa2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800efa6:	3b30      	subs	r3, #48	; 0x30
 800efa8:	2b09      	cmp	r3, #9
 800efaa:	d94e      	bls.n	800f04a <_svfiprintf_r+0x17e>
 800efac:	b1b0      	cbz	r0, 800efdc <_svfiprintf_r+0x110>
 800efae:	9207      	str	r2, [sp, #28]
 800efb0:	e014      	b.n	800efdc <_svfiprintf_r+0x110>
 800efb2:	eba0 0308 	sub.w	r3, r0, r8
 800efb6:	fa09 f303 	lsl.w	r3, r9, r3
 800efba:	4313      	orrs	r3, r2
 800efbc:	46a2      	mov	sl, r4
 800efbe:	9304      	str	r3, [sp, #16]
 800efc0:	e7d2      	b.n	800ef68 <_svfiprintf_r+0x9c>
 800efc2:	9b03      	ldr	r3, [sp, #12]
 800efc4:	1d19      	adds	r1, r3, #4
 800efc6:	681b      	ldr	r3, [r3, #0]
 800efc8:	9103      	str	r1, [sp, #12]
 800efca:	2b00      	cmp	r3, #0
 800efcc:	bfbb      	ittet	lt
 800efce:	425b      	neglt	r3, r3
 800efd0:	f042 0202 	orrlt.w	r2, r2, #2
 800efd4:	9307      	strge	r3, [sp, #28]
 800efd6:	9307      	strlt	r3, [sp, #28]
 800efd8:	bfb8      	it	lt
 800efda:	9204      	strlt	r2, [sp, #16]
 800efdc:	7823      	ldrb	r3, [r4, #0]
 800efde:	2b2e      	cmp	r3, #46	; 0x2e
 800efe0:	d10c      	bne.n	800effc <_svfiprintf_r+0x130>
 800efe2:	7863      	ldrb	r3, [r4, #1]
 800efe4:	2b2a      	cmp	r3, #42	; 0x2a
 800efe6:	d135      	bne.n	800f054 <_svfiprintf_r+0x188>
 800efe8:	9b03      	ldr	r3, [sp, #12]
 800efea:	3402      	adds	r4, #2
 800efec:	1d1a      	adds	r2, r3, #4
 800efee:	681b      	ldr	r3, [r3, #0]
 800eff0:	9203      	str	r2, [sp, #12]
 800eff2:	2b00      	cmp	r3, #0
 800eff4:	bfb8      	it	lt
 800eff6:	f04f 33ff 	movlt.w	r3, #4294967295
 800effa:	9305      	str	r3, [sp, #20]
 800effc:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800f0bc <_svfiprintf_r+0x1f0>
 800f000:	2203      	movs	r2, #3
 800f002:	4650      	mov	r0, sl
 800f004:	7821      	ldrb	r1, [r4, #0]
 800f006:	f7ff f94f 	bl	800e2a8 <memchr>
 800f00a:	b140      	cbz	r0, 800f01e <_svfiprintf_r+0x152>
 800f00c:	2340      	movs	r3, #64	; 0x40
 800f00e:	eba0 000a 	sub.w	r0, r0, sl
 800f012:	fa03 f000 	lsl.w	r0, r3, r0
 800f016:	9b04      	ldr	r3, [sp, #16]
 800f018:	3401      	adds	r4, #1
 800f01a:	4303      	orrs	r3, r0
 800f01c:	9304      	str	r3, [sp, #16]
 800f01e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f022:	2206      	movs	r2, #6
 800f024:	4826      	ldr	r0, [pc, #152]	; (800f0c0 <_svfiprintf_r+0x1f4>)
 800f026:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f02a:	f7ff f93d 	bl	800e2a8 <memchr>
 800f02e:	2800      	cmp	r0, #0
 800f030:	d038      	beq.n	800f0a4 <_svfiprintf_r+0x1d8>
 800f032:	4b24      	ldr	r3, [pc, #144]	; (800f0c4 <_svfiprintf_r+0x1f8>)
 800f034:	bb1b      	cbnz	r3, 800f07e <_svfiprintf_r+0x1b2>
 800f036:	9b03      	ldr	r3, [sp, #12]
 800f038:	3307      	adds	r3, #7
 800f03a:	f023 0307 	bic.w	r3, r3, #7
 800f03e:	3308      	adds	r3, #8
 800f040:	9303      	str	r3, [sp, #12]
 800f042:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f044:	4433      	add	r3, r6
 800f046:	9309      	str	r3, [sp, #36]	; 0x24
 800f048:	e767      	b.n	800ef1a <_svfiprintf_r+0x4e>
 800f04a:	460c      	mov	r4, r1
 800f04c:	2001      	movs	r0, #1
 800f04e:	fb0c 3202 	mla	r2, ip, r2, r3
 800f052:	e7a5      	b.n	800efa0 <_svfiprintf_r+0xd4>
 800f054:	2300      	movs	r3, #0
 800f056:	f04f 0c0a 	mov.w	ip, #10
 800f05a:	4619      	mov	r1, r3
 800f05c:	3401      	adds	r4, #1
 800f05e:	9305      	str	r3, [sp, #20]
 800f060:	4620      	mov	r0, r4
 800f062:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f066:	3a30      	subs	r2, #48	; 0x30
 800f068:	2a09      	cmp	r2, #9
 800f06a:	d903      	bls.n	800f074 <_svfiprintf_r+0x1a8>
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	d0c5      	beq.n	800effc <_svfiprintf_r+0x130>
 800f070:	9105      	str	r1, [sp, #20]
 800f072:	e7c3      	b.n	800effc <_svfiprintf_r+0x130>
 800f074:	4604      	mov	r4, r0
 800f076:	2301      	movs	r3, #1
 800f078:	fb0c 2101 	mla	r1, ip, r1, r2
 800f07c:	e7f0      	b.n	800f060 <_svfiprintf_r+0x194>
 800f07e:	ab03      	add	r3, sp, #12
 800f080:	9300      	str	r3, [sp, #0]
 800f082:	462a      	mov	r2, r5
 800f084:	4638      	mov	r0, r7
 800f086:	4b10      	ldr	r3, [pc, #64]	; (800f0c8 <_svfiprintf_r+0x1fc>)
 800f088:	a904      	add	r1, sp, #16
 800f08a:	f7fc f9e7 	bl	800b45c <_printf_float>
 800f08e:	1c42      	adds	r2, r0, #1
 800f090:	4606      	mov	r6, r0
 800f092:	d1d6      	bne.n	800f042 <_svfiprintf_r+0x176>
 800f094:	89ab      	ldrh	r3, [r5, #12]
 800f096:	065b      	lsls	r3, r3, #25
 800f098:	f53f af2c 	bmi.w	800eef4 <_svfiprintf_r+0x28>
 800f09c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f09e:	b01d      	add	sp, #116	; 0x74
 800f0a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0a4:	ab03      	add	r3, sp, #12
 800f0a6:	9300      	str	r3, [sp, #0]
 800f0a8:	462a      	mov	r2, r5
 800f0aa:	4638      	mov	r0, r7
 800f0ac:	4b06      	ldr	r3, [pc, #24]	; (800f0c8 <_svfiprintf_r+0x1fc>)
 800f0ae:	a904      	add	r1, sp, #16
 800f0b0:	f7fc fc70 	bl	800b994 <_printf_i>
 800f0b4:	e7eb      	b.n	800f08e <_svfiprintf_r+0x1c2>
 800f0b6:	bf00      	nop
 800f0b8:	08011614 	.word	0x08011614
 800f0bc:	0801161a 	.word	0x0801161a
 800f0c0:	0801161e 	.word	0x0801161e
 800f0c4:	0800b45d 	.word	0x0800b45d
 800f0c8:	0800ee15 	.word	0x0800ee15

0800f0cc <_sungetc_r>:
 800f0cc:	b538      	push	{r3, r4, r5, lr}
 800f0ce:	1c4b      	adds	r3, r1, #1
 800f0d0:	4614      	mov	r4, r2
 800f0d2:	d103      	bne.n	800f0dc <_sungetc_r+0x10>
 800f0d4:	f04f 35ff 	mov.w	r5, #4294967295
 800f0d8:	4628      	mov	r0, r5
 800f0da:	bd38      	pop	{r3, r4, r5, pc}
 800f0dc:	8993      	ldrh	r3, [r2, #12]
 800f0de:	b2cd      	uxtb	r5, r1
 800f0e0:	f023 0320 	bic.w	r3, r3, #32
 800f0e4:	8193      	strh	r3, [r2, #12]
 800f0e6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f0e8:	6852      	ldr	r2, [r2, #4]
 800f0ea:	b18b      	cbz	r3, 800f110 <_sungetc_r+0x44>
 800f0ec:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f0ee:	4293      	cmp	r3, r2
 800f0f0:	dd08      	ble.n	800f104 <_sungetc_r+0x38>
 800f0f2:	6823      	ldr	r3, [r4, #0]
 800f0f4:	1e5a      	subs	r2, r3, #1
 800f0f6:	6022      	str	r2, [r4, #0]
 800f0f8:	f803 5c01 	strb.w	r5, [r3, #-1]
 800f0fc:	6863      	ldr	r3, [r4, #4]
 800f0fe:	3301      	adds	r3, #1
 800f100:	6063      	str	r3, [r4, #4]
 800f102:	e7e9      	b.n	800f0d8 <_sungetc_r+0xc>
 800f104:	4621      	mov	r1, r4
 800f106:	f000 fbef 	bl	800f8e8 <__submore>
 800f10a:	2800      	cmp	r0, #0
 800f10c:	d0f1      	beq.n	800f0f2 <_sungetc_r+0x26>
 800f10e:	e7e1      	b.n	800f0d4 <_sungetc_r+0x8>
 800f110:	6921      	ldr	r1, [r4, #16]
 800f112:	6823      	ldr	r3, [r4, #0]
 800f114:	b151      	cbz	r1, 800f12c <_sungetc_r+0x60>
 800f116:	4299      	cmp	r1, r3
 800f118:	d208      	bcs.n	800f12c <_sungetc_r+0x60>
 800f11a:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800f11e:	42a9      	cmp	r1, r5
 800f120:	d104      	bne.n	800f12c <_sungetc_r+0x60>
 800f122:	3b01      	subs	r3, #1
 800f124:	3201      	adds	r2, #1
 800f126:	6023      	str	r3, [r4, #0]
 800f128:	6062      	str	r2, [r4, #4]
 800f12a:	e7d5      	b.n	800f0d8 <_sungetc_r+0xc>
 800f12c:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800f130:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f134:	6363      	str	r3, [r4, #52]	; 0x34
 800f136:	2303      	movs	r3, #3
 800f138:	63a3      	str	r3, [r4, #56]	; 0x38
 800f13a:	4623      	mov	r3, r4
 800f13c:	f803 5f46 	strb.w	r5, [r3, #70]!
 800f140:	6023      	str	r3, [r4, #0]
 800f142:	2301      	movs	r3, #1
 800f144:	e7dc      	b.n	800f100 <_sungetc_r+0x34>

0800f146 <__ssrefill_r>:
 800f146:	b510      	push	{r4, lr}
 800f148:	460c      	mov	r4, r1
 800f14a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800f14c:	b169      	cbz	r1, 800f16a <__ssrefill_r+0x24>
 800f14e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f152:	4299      	cmp	r1, r3
 800f154:	d001      	beq.n	800f15a <__ssrefill_r+0x14>
 800f156:	f7ff fd81 	bl	800ec5c <_free_r>
 800f15a:	2000      	movs	r0, #0
 800f15c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f15e:	6360      	str	r0, [r4, #52]	; 0x34
 800f160:	6063      	str	r3, [r4, #4]
 800f162:	b113      	cbz	r3, 800f16a <__ssrefill_r+0x24>
 800f164:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f166:	6023      	str	r3, [r4, #0]
 800f168:	bd10      	pop	{r4, pc}
 800f16a:	6923      	ldr	r3, [r4, #16]
 800f16c:	f04f 30ff 	mov.w	r0, #4294967295
 800f170:	6023      	str	r3, [r4, #0]
 800f172:	2300      	movs	r3, #0
 800f174:	6063      	str	r3, [r4, #4]
 800f176:	89a3      	ldrh	r3, [r4, #12]
 800f178:	f043 0320 	orr.w	r3, r3, #32
 800f17c:	81a3      	strh	r3, [r4, #12]
 800f17e:	e7f3      	b.n	800f168 <__ssrefill_r+0x22>

0800f180 <__ssvfiscanf_r>:
 800f180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f184:	460c      	mov	r4, r1
 800f186:	2100      	movs	r1, #0
 800f188:	4606      	mov	r6, r0
 800f18a:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800f18e:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800f192:	49a7      	ldr	r1, [pc, #668]	; (800f430 <__ssvfiscanf_r+0x2b0>)
 800f194:	f10d 0804 	add.w	r8, sp, #4
 800f198:	91a0      	str	r1, [sp, #640]	; 0x280
 800f19a:	49a6      	ldr	r1, [pc, #664]	; (800f434 <__ssvfiscanf_r+0x2b4>)
 800f19c:	4fa6      	ldr	r7, [pc, #664]	; (800f438 <__ssvfiscanf_r+0x2b8>)
 800f19e:	f8df 929c 	ldr.w	r9, [pc, #668]	; 800f43c <__ssvfiscanf_r+0x2bc>
 800f1a2:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800f1a6:	91a1      	str	r1, [sp, #644]	; 0x284
 800f1a8:	9300      	str	r3, [sp, #0]
 800f1aa:	7813      	ldrb	r3, [r2, #0]
 800f1ac:	2b00      	cmp	r3, #0
 800f1ae:	f000 815c 	beq.w	800f46a <__ssvfiscanf_r+0x2ea>
 800f1b2:	5dd9      	ldrb	r1, [r3, r7]
 800f1b4:	1c55      	adds	r5, r2, #1
 800f1b6:	f011 0108 	ands.w	r1, r1, #8
 800f1ba:	d019      	beq.n	800f1f0 <__ssvfiscanf_r+0x70>
 800f1bc:	6863      	ldr	r3, [r4, #4]
 800f1be:	2b00      	cmp	r3, #0
 800f1c0:	dd0f      	ble.n	800f1e2 <__ssvfiscanf_r+0x62>
 800f1c2:	6823      	ldr	r3, [r4, #0]
 800f1c4:	781a      	ldrb	r2, [r3, #0]
 800f1c6:	5cba      	ldrb	r2, [r7, r2]
 800f1c8:	0712      	lsls	r2, r2, #28
 800f1ca:	d401      	bmi.n	800f1d0 <__ssvfiscanf_r+0x50>
 800f1cc:	462a      	mov	r2, r5
 800f1ce:	e7ec      	b.n	800f1aa <__ssvfiscanf_r+0x2a>
 800f1d0:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800f1d2:	3301      	adds	r3, #1
 800f1d4:	3201      	adds	r2, #1
 800f1d6:	9245      	str	r2, [sp, #276]	; 0x114
 800f1d8:	6862      	ldr	r2, [r4, #4]
 800f1da:	6023      	str	r3, [r4, #0]
 800f1dc:	3a01      	subs	r2, #1
 800f1de:	6062      	str	r2, [r4, #4]
 800f1e0:	e7ec      	b.n	800f1bc <__ssvfiscanf_r+0x3c>
 800f1e2:	4621      	mov	r1, r4
 800f1e4:	4630      	mov	r0, r6
 800f1e6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800f1e8:	4798      	blx	r3
 800f1ea:	2800      	cmp	r0, #0
 800f1ec:	d0e9      	beq.n	800f1c2 <__ssvfiscanf_r+0x42>
 800f1ee:	e7ed      	b.n	800f1cc <__ssvfiscanf_r+0x4c>
 800f1f0:	2b25      	cmp	r3, #37	; 0x25
 800f1f2:	d012      	beq.n	800f21a <__ssvfiscanf_r+0x9a>
 800f1f4:	469a      	mov	sl, r3
 800f1f6:	6863      	ldr	r3, [r4, #4]
 800f1f8:	2b00      	cmp	r3, #0
 800f1fa:	f340 8094 	ble.w	800f326 <__ssvfiscanf_r+0x1a6>
 800f1fe:	6822      	ldr	r2, [r4, #0]
 800f200:	7813      	ldrb	r3, [r2, #0]
 800f202:	4553      	cmp	r3, sl
 800f204:	f040 8131 	bne.w	800f46a <__ssvfiscanf_r+0x2ea>
 800f208:	6863      	ldr	r3, [r4, #4]
 800f20a:	3201      	adds	r2, #1
 800f20c:	3b01      	subs	r3, #1
 800f20e:	6063      	str	r3, [r4, #4]
 800f210:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800f212:	6022      	str	r2, [r4, #0]
 800f214:	3301      	adds	r3, #1
 800f216:	9345      	str	r3, [sp, #276]	; 0x114
 800f218:	e7d8      	b.n	800f1cc <__ssvfiscanf_r+0x4c>
 800f21a:	9141      	str	r1, [sp, #260]	; 0x104
 800f21c:	9143      	str	r1, [sp, #268]	; 0x10c
 800f21e:	7853      	ldrb	r3, [r2, #1]
 800f220:	2b2a      	cmp	r3, #42	; 0x2a
 800f222:	bf04      	itt	eq
 800f224:	2310      	moveq	r3, #16
 800f226:	1c95      	addeq	r5, r2, #2
 800f228:	f04f 020a 	mov.w	r2, #10
 800f22c:	bf08      	it	eq
 800f22e:	9341      	streq	r3, [sp, #260]	; 0x104
 800f230:	46aa      	mov	sl, r5
 800f232:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800f236:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800f23a:	2b09      	cmp	r3, #9
 800f23c:	d91d      	bls.n	800f27a <__ssvfiscanf_r+0xfa>
 800f23e:	2203      	movs	r2, #3
 800f240:	487e      	ldr	r0, [pc, #504]	; (800f43c <__ssvfiscanf_r+0x2bc>)
 800f242:	f7ff f831 	bl	800e2a8 <memchr>
 800f246:	b140      	cbz	r0, 800f25a <__ssvfiscanf_r+0xda>
 800f248:	2301      	movs	r3, #1
 800f24a:	4655      	mov	r5, sl
 800f24c:	eba0 0009 	sub.w	r0, r0, r9
 800f250:	fa03 f000 	lsl.w	r0, r3, r0
 800f254:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800f256:	4318      	orrs	r0, r3
 800f258:	9041      	str	r0, [sp, #260]	; 0x104
 800f25a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800f25e:	2b78      	cmp	r3, #120	; 0x78
 800f260:	d806      	bhi.n	800f270 <__ssvfiscanf_r+0xf0>
 800f262:	2b57      	cmp	r3, #87	; 0x57
 800f264:	d810      	bhi.n	800f288 <__ssvfiscanf_r+0x108>
 800f266:	2b25      	cmp	r3, #37	; 0x25
 800f268:	d0c4      	beq.n	800f1f4 <__ssvfiscanf_r+0x74>
 800f26a:	d857      	bhi.n	800f31c <__ssvfiscanf_r+0x19c>
 800f26c:	2b00      	cmp	r3, #0
 800f26e:	d065      	beq.n	800f33c <__ssvfiscanf_r+0x1bc>
 800f270:	2303      	movs	r3, #3
 800f272:	9347      	str	r3, [sp, #284]	; 0x11c
 800f274:	230a      	movs	r3, #10
 800f276:	9342      	str	r3, [sp, #264]	; 0x108
 800f278:	e072      	b.n	800f360 <__ssvfiscanf_r+0x1e0>
 800f27a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800f27c:	4655      	mov	r5, sl
 800f27e:	fb02 1103 	mla	r1, r2, r3, r1
 800f282:	3930      	subs	r1, #48	; 0x30
 800f284:	9143      	str	r1, [sp, #268]	; 0x10c
 800f286:	e7d3      	b.n	800f230 <__ssvfiscanf_r+0xb0>
 800f288:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800f28c:	2a20      	cmp	r2, #32
 800f28e:	d8ef      	bhi.n	800f270 <__ssvfiscanf_r+0xf0>
 800f290:	a101      	add	r1, pc, #4	; (adr r1, 800f298 <__ssvfiscanf_r+0x118>)
 800f292:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800f296:	bf00      	nop
 800f298:	0800f34b 	.word	0x0800f34b
 800f29c:	0800f271 	.word	0x0800f271
 800f2a0:	0800f271 	.word	0x0800f271
 800f2a4:	0800f3a9 	.word	0x0800f3a9
 800f2a8:	0800f271 	.word	0x0800f271
 800f2ac:	0800f271 	.word	0x0800f271
 800f2b0:	0800f271 	.word	0x0800f271
 800f2b4:	0800f271 	.word	0x0800f271
 800f2b8:	0800f271 	.word	0x0800f271
 800f2bc:	0800f271 	.word	0x0800f271
 800f2c0:	0800f271 	.word	0x0800f271
 800f2c4:	0800f3bf 	.word	0x0800f3bf
 800f2c8:	0800f395 	.word	0x0800f395
 800f2cc:	0800f323 	.word	0x0800f323
 800f2d0:	0800f323 	.word	0x0800f323
 800f2d4:	0800f323 	.word	0x0800f323
 800f2d8:	0800f271 	.word	0x0800f271
 800f2dc:	0800f399 	.word	0x0800f399
 800f2e0:	0800f271 	.word	0x0800f271
 800f2e4:	0800f271 	.word	0x0800f271
 800f2e8:	0800f271 	.word	0x0800f271
 800f2ec:	0800f271 	.word	0x0800f271
 800f2f0:	0800f3cf 	.word	0x0800f3cf
 800f2f4:	0800f3a1 	.word	0x0800f3a1
 800f2f8:	0800f343 	.word	0x0800f343
 800f2fc:	0800f271 	.word	0x0800f271
 800f300:	0800f271 	.word	0x0800f271
 800f304:	0800f3cb 	.word	0x0800f3cb
 800f308:	0800f271 	.word	0x0800f271
 800f30c:	0800f395 	.word	0x0800f395
 800f310:	0800f271 	.word	0x0800f271
 800f314:	0800f271 	.word	0x0800f271
 800f318:	0800f34b 	.word	0x0800f34b
 800f31c:	3b45      	subs	r3, #69	; 0x45
 800f31e:	2b02      	cmp	r3, #2
 800f320:	d8a6      	bhi.n	800f270 <__ssvfiscanf_r+0xf0>
 800f322:	2305      	movs	r3, #5
 800f324:	e01b      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f326:	4621      	mov	r1, r4
 800f328:	4630      	mov	r0, r6
 800f32a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800f32c:	4798      	blx	r3
 800f32e:	2800      	cmp	r0, #0
 800f330:	f43f af65 	beq.w	800f1fe <__ssvfiscanf_r+0x7e>
 800f334:	9844      	ldr	r0, [sp, #272]	; 0x110
 800f336:	2800      	cmp	r0, #0
 800f338:	f040 808d 	bne.w	800f456 <__ssvfiscanf_r+0x2d6>
 800f33c:	f04f 30ff 	mov.w	r0, #4294967295
 800f340:	e08f      	b.n	800f462 <__ssvfiscanf_r+0x2e2>
 800f342:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800f344:	f042 0220 	orr.w	r2, r2, #32
 800f348:	9241      	str	r2, [sp, #260]	; 0x104
 800f34a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800f34c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800f350:	9241      	str	r2, [sp, #260]	; 0x104
 800f352:	2210      	movs	r2, #16
 800f354:	2b6f      	cmp	r3, #111	; 0x6f
 800f356:	bf34      	ite	cc
 800f358:	2303      	movcc	r3, #3
 800f35a:	2304      	movcs	r3, #4
 800f35c:	9242      	str	r2, [sp, #264]	; 0x108
 800f35e:	9347      	str	r3, [sp, #284]	; 0x11c
 800f360:	6863      	ldr	r3, [r4, #4]
 800f362:	2b00      	cmp	r3, #0
 800f364:	dd42      	ble.n	800f3ec <__ssvfiscanf_r+0x26c>
 800f366:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800f368:	0659      	lsls	r1, r3, #25
 800f36a:	d404      	bmi.n	800f376 <__ssvfiscanf_r+0x1f6>
 800f36c:	6823      	ldr	r3, [r4, #0]
 800f36e:	781a      	ldrb	r2, [r3, #0]
 800f370:	5cba      	ldrb	r2, [r7, r2]
 800f372:	0712      	lsls	r2, r2, #28
 800f374:	d441      	bmi.n	800f3fa <__ssvfiscanf_r+0x27a>
 800f376:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800f378:	2b02      	cmp	r3, #2
 800f37a:	dc50      	bgt.n	800f41e <__ssvfiscanf_r+0x29e>
 800f37c:	466b      	mov	r3, sp
 800f37e:	4622      	mov	r2, r4
 800f380:	4630      	mov	r0, r6
 800f382:	a941      	add	r1, sp, #260	; 0x104
 800f384:	f000 f876 	bl	800f474 <_scanf_chars>
 800f388:	2801      	cmp	r0, #1
 800f38a:	d06e      	beq.n	800f46a <__ssvfiscanf_r+0x2ea>
 800f38c:	2802      	cmp	r0, #2
 800f38e:	f47f af1d 	bne.w	800f1cc <__ssvfiscanf_r+0x4c>
 800f392:	e7cf      	b.n	800f334 <__ssvfiscanf_r+0x1b4>
 800f394:	220a      	movs	r2, #10
 800f396:	e7dd      	b.n	800f354 <__ssvfiscanf_r+0x1d4>
 800f398:	2300      	movs	r3, #0
 800f39a:	9342      	str	r3, [sp, #264]	; 0x108
 800f39c:	2303      	movs	r3, #3
 800f39e:	e7de      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f3a0:	2308      	movs	r3, #8
 800f3a2:	9342      	str	r3, [sp, #264]	; 0x108
 800f3a4:	2304      	movs	r3, #4
 800f3a6:	e7da      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f3a8:	4629      	mov	r1, r5
 800f3aa:	4640      	mov	r0, r8
 800f3ac:	f000 f9dc 	bl	800f768 <__sccl>
 800f3b0:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800f3b2:	4605      	mov	r5, r0
 800f3b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f3b8:	9341      	str	r3, [sp, #260]	; 0x104
 800f3ba:	2301      	movs	r3, #1
 800f3bc:	e7cf      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f3be:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800f3c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f3c4:	9341      	str	r3, [sp, #260]	; 0x104
 800f3c6:	2300      	movs	r3, #0
 800f3c8:	e7c9      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f3ca:	2302      	movs	r3, #2
 800f3cc:	e7c7      	b.n	800f35e <__ssvfiscanf_r+0x1de>
 800f3ce:	9841      	ldr	r0, [sp, #260]	; 0x104
 800f3d0:	06c3      	lsls	r3, r0, #27
 800f3d2:	f53f aefb 	bmi.w	800f1cc <__ssvfiscanf_r+0x4c>
 800f3d6:	9b00      	ldr	r3, [sp, #0]
 800f3d8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800f3da:	1d19      	adds	r1, r3, #4
 800f3dc:	9100      	str	r1, [sp, #0]
 800f3de:	681b      	ldr	r3, [r3, #0]
 800f3e0:	f010 0f01 	tst.w	r0, #1
 800f3e4:	bf14      	ite	ne
 800f3e6:	801a      	strhne	r2, [r3, #0]
 800f3e8:	601a      	streq	r2, [r3, #0]
 800f3ea:	e6ef      	b.n	800f1cc <__ssvfiscanf_r+0x4c>
 800f3ec:	4621      	mov	r1, r4
 800f3ee:	4630      	mov	r0, r6
 800f3f0:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800f3f2:	4798      	blx	r3
 800f3f4:	2800      	cmp	r0, #0
 800f3f6:	d0b6      	beq.n	800f366 <__ssvfiscanf_r+0x1e6>
 800f3f8:	e79c      	b.n	800f334 <__ssvfiscanf_r+0x1b4>
 800f3fa:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800f3fc:	3201      	adds	r2, #1
 800f3fe:	9245      	str	r2, [sp, #276]	; 0x114
 800f400:	6862      	ldr	r2, [r4, #4]
 800f402:	3a01      	subs	r2, #1
 800f404:	2a00      	cmp	r2, #0
 800f406:	6062      	str	r2, [r4, #4]
 800f408:	dd02      	ble.n	800f410 <__ssvfiscanf_r+0x290>
 800f40a:	3301      	adds	r3, #1
 800f40c:	6023      	str	r3, [r4, #0]
 800f40e:	e7ad      	b.n	800f36c <__ssvfiscanf_r+0x1ec>
 800f410:	4621      	mov	r1, r4
 800f412:	4630      	mov	r0, r6
 800f414:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800f416:	4798      	blx	r3
 800f418:	2800      	cmp	r0, #0
 800f41a:	d0a7      	beq.n	800f36c <__ssvfiscanf_r+0x1ec>
 800f41c:	e78a      	b.n	800f334 <__ssvfiscanf_r+0x1b4>
 800f41e:	2b04      	cmp	r3, #4
 800f420:	dc0e      	bgt.n	800f440 <__ssvfiscanf_r+0x2c0>
 800f422:	466b      	mov	r3, sp
 800f424:	4622      	mov	r2, r4
 800f426:	4630      	mov	r0, r6
 800f428:	a941      	add	r1, sp, #260	; 0x104
 800f42a:	f000 f87d 	bl	800f528 <_scanf_i>
 800f42e:	e7ab      	b.n	800f388 <__ssvfiscanf_r+0x208>
 800f430:	0800f0cd 	.word	0x0800f0cd
 800f434:	0800f147 	.word	0x0800f147
 800f438:	080112b1 	.word	0x080112b1
 800f43c:	0801161a 	.word	0x0801161a
 800f440:	4b0b      	ldr	r3, [pc, #44]	; (800f470 <__ssvfiscanf_r+0x2f0>)
 800f442:	2b00      	cmp	r3, #0
 800f444:	f43f aec2 	beq.w	800f1cc <__ssvfiscanf_r+0x4c>
 800f448:	466b      	mov	r3, sp
 800f44a:	4622      	mov	r2, r4
 800f44c:	4630      	mov	r0, r6
 800f44e:	a941      	add	r1, sp, #260	; 0x104
 800f450:	f7fc fbc6 	bl	800bbe0 <_scanf_float>
 800f454:	e798      	b.n	800f388 <__ssvfiscanf_r+0x208>
 800f456:	89a3      	ldrh	r3, [r4, #12]
 800f458:	f013 0f40 	tst.w	r3, #64	; 0x40
 800f45c:	bf18      	it	ne
 800f45e:	f04f 30ff 	movne.w	r0, #4294967295
 800f462:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800f466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f46a:	9844      	ldr	r0, [sp, #272]	; 0x110
 800f46c:	e7f9      	b.n	800f462 <__ssvfiscanf_r+0x2e2>
 800f46e:	bf00      	nop
 800f470:	0800bbe1 	.word	0x0800bbe1

0800f474 <_scanf_chars>:
 800f474:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f478:	4615      	mov	r5, r2
 800f47a:	688a      	ldr	r2, [r1, #8]
 800f47c:	4680      	mov	r8, r0
 800f47e:	460c      	mov	r4, r1
 800f480:	b932      	cbnz	r2, 800f490 <_scanf_chars+0x1c>
 800f482:	698a      	ldr	r2, [r1, #24]
 800f484:	2a00      	cmp	r2, #0
 800f486:	bf0c      	ite	eq
 800f488:	2201      	moveq	r2, #1
 800f48a:	f04f 32ff 	movne.w	r2, #4294967295
 800f48e:	608a      	str	r2, [r1, #8]
 800f490:	2700      	movs	r7, #0
 800f492:	6822      	ldr	r2, [r4, #0]
 800f494:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f524 <_scanf_chars+0xb0>
 800f498:	06d1      	lsls	r1, r2, #27
 800f49a:	bf5f      	itttt	pl
 800f49c:	681a      	ldrpl	r2, [r3, #0]
 800f49e:	1d11      	addpl	r1, r2, #4
 800f4a0:	6019      	strpl	r1, [r3, #0]
 800f4a2:	6816      	ldrpl	r6, [r2, #0]
 800f4a4:	69a0      	ldr	r0, [r4, #24]
 800f4a6:	b188      	cbz	r0, 800f4cc <_scanf_chars+0x58>
 800f4a8:	2801      	cmp	r0, #1
 800f4aa:	d107      	bne.n	800f4bc <_scanf_chars+0x48>
 800f4ac:	682b      	ldr	r3, [r5, #0]
 800f4ae:	781a      	ldrb	r2, [r3, #0]
 800f4b0:	6963      	ldr	r3, [r4, #20]
 800f4b2:	5c9b      	ldrb	r3, [r3, r2]
 800f4b4:	b953      	cbnz	r3, 800f4cc <_scanf_chars+0x58>
 800f4b6:	2f00      	cmp	r7, #0
 800f4b8:	d031      	beq.n	800f51e <_scanf_chars+0xaa>
 800f4ba:	e022      	b.n	800f502 <_scanf_chars+0x8e>
 800f4bc:	2802      	cmp	r0, #2
 800f4be:	d120      	bne.n	800f502 <_scanf_chars+0x8e>
 800f4c0:	682b      	ldr	r3, [r5, #0]
 800f4c2:	781b      	ldrb	r3, [r3, #0]
 800f4c4:	f813 3009 	ldrb.w	r3, [r3, r9]
 800f4c8:	071b      	lsls	r3, r3, #28
 800f4ca:	d41a      	bmi.n	800f502 <_scanf_chars+0x8e>
 800f4cc:	6823      	ldr	r3, [r4, #0]
 800f4ce:	3701      	adds	r7, #1
 800f4d0:	06da      	lsls	r2, r3, #27
 800f4d2:	bf5e      	ittt	pl
 800f4d4:	682b      	ldrpl	r3, [r5, #0]
 800f4d6:	781b      	ldrbpl	r3, [r3, #0]
 800f4d8:	f806 3b01 	strbpl.w	r3, [r6], #1
 800f4dc:	682a      	ldr	r2, [r5, #0]
 800f4de:	686b      	ldr	r3, [r5, #4]
 800f4e0:	3201      	adds	r2, #1
 800f4e2:	602a      	str	r2, [r5, #0]
 800f4e4:	68a2      	ldr	r2, [r4, #8]
 800f4e6:	3b01      	subs	r3, #1
 800f4e8:	3a01      	subs	r2, #1
 800f4ea:	606b      	str	r3, [r5, #4]
 800f4ec:	60a2      	str	r2, [r4, #8]
 800f4ee:	b142      	cbz	r2, 800f502 <_scanf_chars+0x8e>
 800f4f0:	2b00      	cmp	r3, #0
 800f4f2:	dcd7      	bgt.n	800f4a4 <_scanf_chars+0x30>
 800f4f4:	4629      	mov	r1, r5
 800f4f6:	4640      	mov	r0, r8
 800f4f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800f4fc:	4798      	blx	r3
 800f4fe:	2800      	cmp	r0, #0
 800f500:	d0d0      	beq.n	800f4a4 <_scanf_chars+0x30>
 800f502:	6823      	ldr	r3, [r4, #0]
 800f504:	f013 0310 	ands.w	r3, r3, #16
 800f508:	d105      	bne.n	800f516 <_scanf_chars+0xa2>
 800f50a:	68e2      	ldr	r2, [r4, #12]
 800f50c:	3201      	adds	r2, #1
 800f50e:	60e2      	str	r2, [r4, #12]
 800f510:	69a2      	ldr	r2, [r4, #24]
 800f512:	b102      	cbz	r2, 800f516 <_scanf_chars+0xa2>
 800f514:	7033      	strb	r3, [r6, #0]
 800f516:	2000      	movs	r0, #0
 800f518:	6923      	ldr	r3, [r4, #16]
 800f51a:	443b      	add	r3, r7
 800f51c:	6123      	str	r3, [r4, #16]
 800f51e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f522:	bf00      	nop
 800f524:	080112b1 	.word	0x080112b1

0800f528 <_scanf_i>:
 800f528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f52c:	460c      	mov	r4, r1
 800f52e:	4698      	mov	r8, r3
 800f530:	4b75      	ldr	r3, [pc, #468]	; (800f708 <_scanf_i+0x1e0>)
 800f532:	b087      	sub	sp, #28
 800f534:	4682      	mov	sl, r0
 800f536:	4616      	mov	r6, r2
 800f538:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800f53c:	ab03      	add	r3, sp, #12
 800f53e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f542:	4b72      	ldr	r3, [pc, #456]	; (800f70c <_scanf_i+0x1e4>)
 800f544:	69a1      	ldr	r1, [r4, #24]
 800f546:	4a72      	ldr	r2, [pc, #456]	; (800f710 <_scanf_i+0x1e8>)
 800f548:	4627      	mov	r7, r4
 800f54a:	2903      	cmp	r1, #3
 800f54c:	bf18      	it	ne
 800f54e:	461a      	movne	r2, r3
 800f550:	68a3      	ldr	r3, [r4, #8]
 800f552:	9201      	str	r2, [sp, #4]
 800f554:	1e5a      	subs	r2, r3, #1
 800f556:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800f55a:	bf81      	itttt	hi
 800f55c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800f560:	eb03 0905 	addhi.w	r9, r3, r5
 800f564:	f240 135d 	movwhi	r3, #349	; 0x15d
 800f568:	60a3      	strhi	r3, [r4, #8]
 800f56a:	f857 3b1c 	ldr.w	r3, [r7], #28
 800f56e:	bf98      	it	ls
 800f570:	f04f 0900 	movls.w	r9, #0
 800f574:	463d      	mov	r5, r7
 800f576:	f04f 0b00 	mov.w	fp, #0
 800f57a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800f57e:	6023      	str	r3, [r4, #0]
 800f580:	6831      	ldr	r1, [r6, #0]
 800f582:	ab03      	add	r3, sp, #12
 800f584:	2202      	movs	r2, #2
 800f586:	7809      	ldrb	r1, [r1, #0]
 800f588:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800f58c:	f7fe fe8c 	bl	800e2a8 <memchr>
 800f590:	b328      	cbz	r0, 800f5de <_scanf_i+0xb6>
 800f592:	f1bb 0f01 	cmp.w	fp, #1
 800f596:	d159      	bne.n	800f64c <_scanf_i+0x124>
 800f598:	6862      	ldr	r2, [r4, #4]
 800f59a:	b92a      	cbnz	r2, 800f5a8 <_scanf_i+0x80>
 800f59c:	2308      	movs	r3, #8
 800f59e:	6822      	ldr	r2, [r4, #0]
 800f5a0:	6063      	str	r3, [r4, #4]
 800f5a2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800f5a6:	6022      	str	r2, [r4, #0]
 800f5a8:	6822      	ldr	r2, [r4, #0]
 800f5aa:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800f5ae:	6022      	str	r2, [r4, #0]
 800f5b0:	68a2      	ldr	r2, [r4, #8]
 800f5b2:	1e51      	subs	r1, r2, #1
 800f5b4:	60a1      	str	r1, [r4, #8]
 800f5b6:	b192      	cbz	r2, 800f5de <_scanf_i+0xb6>
 800f5b8:	6832      	ldr	r2, [r6, #0]
 800f5ba:	1c51      	adds	r1, r2, #1
 800f5bc:	6031      	str	r1, [r6, #0]
 800f5be:	7812      	ldrb	r2, [r2, #0]
 800f5c0:	f805 2b01 	strb.w	r2, [r5], #1
 800f5c4:	6872      	ldr	r2, [r6, #4]
 800f5c6:	3a01      	subs	r2, #1
 800f5c8:	2a00      	cmp	r2, #0
 800f5ca:	6072      	str	r2, [r6, #4]
 800f5cc:	dc07      	bgt.n	800f5de <_scanf_i+0xb6>
 800f5ce:	4631      	mov	r1, r6
 800f5d0:	4650      	mov	r0, sl
 800f5d2:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800f5d6:	4790      	blx	r2
 800f5d8:	2800      	cmp	r0, #0
 800f5da:	f040 8085 	bne.w	800f6e8 <_scanf_i+0x1c0>
 800f5de:	f10b 0b01 	add.w	fp, fp, #1
 800f5e2:	f1bb 0f03 	cmp.w	fp, #3
 800f5e6:	d1cb      	bne.n	800f580 <_scanf_i+0x58>
 800f5e8:	6863      	ldr	r3, [r4, #4]
 800f5ea:	b90b      	cbnz	r3, 800f5f0 <_scanf_i+0xc8>
 800f5ec:	230a      	movs	r3, #10
 800f5ee:	6063      	str	r3, [r4, #4]
 800f5f0:	6863      	ldr	r3, [r4, #4]
 800f5f2:	4948      	ldr	r1, [pc, #288]	; (800f714 <_scanf_i+0x1ec>)
 800f5f4:	6960      	ldr	r0, [r4, #20]
 800f5f6:	1ac9      	subs	r1, r1, r3
 800f5f8:	f000 f8b6 	bl	800f768 <__sccl>
 800f5fc:	f04f 0b00 	mov.w	fp, #0
 800f600:	68a3      	ldr	r3, [r4, #8]
 800f602:	6822      	ldr	r2, [r4, #0]
 800f604:	2b00      	cmp	r3, #0
 800f606:	d03d      	beq.n	800f684 <_scanf_i+0x15c>
 800f608:	6831      	ldr	r1, [r6, #0]
 800f60a:	6960      	ldr	r0, [r4, #20]
 800f60c:	f891 c000 	ldrb.w	ip, [r1]
 800f610:	f810 000c 	ldrb.w	r0, [r0, ip]
 800f614:	2800      	cmp	r0, #0
 800f616:	d035      	beq.n	800f684 <_scanf_i+0x15c>
 800f618:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800f61c:	d124      	bne.n	800f668 <_scanf_i+0x140>
 800f61e:	0510      	lsls	r0, r2, #20
 800f620:	d522      	bpl.n	800f668 <_scanf_i+0x140>
 800f622:	f10b 0b01 	add.w	fp, fp, #1
 800f626:	f1b9 0f00 	cmp.w	r9, #0
 800f62a:	d003      	beq.n	800f634 <_scanf_i+0x10c>
 800f62c:	3301      	adds	r3, #1
 800f62e:	f109 39ff 	add.w	r9, r9, #4294967295
 800f632:	60a3      	str	r3, [r4, #8]
 800f634:	6873      	ldr	r3, [r6, #4]
 800f636:	3b01      	subs	r3, #1
 800f638:	2b00      	cmp	r3, #0
 800f63a:	6073      	str	r3, [r6, #4]
 800f63c:	dd1b      	ble.n	800f676 <_scanf_i+0x14e>
 800f63e:	6833      	ldr	r3, [r6, #0]
 800f640:	3301      	adds	r3, #1
 800f642:	6033      	str	r3, [r6, #0]
 800f644:	68a3      	ldr	r3, [r4, #8]
 800f646:	3b01      	subs	r3, #1
 800f648:	60a3      	str	r3, [r4, #8]
 800f64a:	e7d9      	b.n	800f600 <_scanf_i+0xd8>
 800f64c:	f1bb 0f02 	cmp.w	fp, #2
 800f650:	d1ae      	bne.n	800f5b0 <_scanf_i+0x88>
 800f652:	6822      	ldr	r2, [r4, #0]
 800f654:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800f658:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800f65c:	d1bf      	bne.n	800f5de <_scanf_i+0xb6>
 800f65e:	2310      	movs	r3, #16
 800f660:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800f664:	6063      	str	r3, [r4, #4]
 800f666:	e7a2      	b.n	800f5ae <_scanf_i+0x86>
 800f668:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800f66c:	6022      	str	r2, [r4, #0]
 800f66e:	780b      	ldrb	r3, [r1, #0]
 800f670:	f805 3b01 	strb.w	r3, [r5], #1
 800f674:	e7de      	b.n	800f634 <_scanf_i+0x10c>
 800f676:	4631      	mov	r1, r6
 800f678:	4650      	mov	r0, sl
 800f67a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800f67e:	4798      	blx	r3
 800f680:	2800      	cmp	r0, #0
 800f682:	d0df      	beq.n	800f644 <_scanf_i+0x11c>
 800f684:	6823      	ldr	r3, [r4, #0]
 800f686:	05db      	lsls	r3, r3, #23
 800f688:	d50d      	bpl.n	800f6a6 <_scanf_i+0x17e>
 800f68a:	42bd      	cmp	r5, r7
 800f68c:	d909      	bls.n	800f6a2 <_scanf_i+0x17a>
 800f68e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800f692:	4632      	mov	r2, r6
 800f694:	4650      	mov	r0, sl
 800f696:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800f69a:	f105 39ff 	add.w	r9, r5, #4294967295
 800f69e:	4798      	blx	r3
 800f6a0:	464d      	mov	r5, r9
 800f6a2:	42bd      	cmp	r5, r7
 800f6a4:	d02d      	beq.n	800f702 <_scanf_i+0x1da>
 800f6a6:	6822      	ldr	r2, [r4, #0]
 800f6a8:	f012 0210 	ands.w	r2, r2, #16
 800f6ac:	d113      	bne.n	800f6d6 <_scanf_i+0x1ae>
 800f6ae:	702a      	strb	r2, [r5, #0]
 800f6b0:	4639      	mov	r1, r7
 800f6b2:	6863      	ldr	r3, [r4, #4]
 800f6b4:	4650      	mov	r0, sl
 800f6b6:	9e01      	ldr	r6, [sp, #4]
 800f6b8:	47b0      	blx	r6
 800f6ba:	6821      	ldr	r1, [r4, #0]
 800f6bc:	f8d8 3000 	ldr.w	r3, [r8]
 800f6c0:	f011 0f20 	tst.w	r1, #32
 800f6c4:	d013      	beq.n	800f6ee <_scanf_i+0x1c6>
 800f6c6:	1d1a      	adds	r2, r3, #4
 800f6c8:	f8c8 2000 	str.w	r2, [r8]
 800f6cc:	681b      	ldr	r3, [r3, #0]
 800f6ce:	6018      	str	r0, [r3, #0]
 800f6d0:	68e3      	ldr	r3, [r4, #12]
 800f6d2:	3301      	adds	r3, #1
 800f6d4:	60e3      	str	r3, [r4, #12]
 800f6d6:	2000      	movs	r0, #0
 800f6d8:	1bed      	subs	r5, r5, r7
 800f6da:	44ab      	add	fp, r5
 800f6dc:	6925      	ldr	r5, [r4, #16]
 800f6de:	445d      	add	r5, fp
 800f6e0:	6125      	str	r5, [r4, #16]
 800f6e2:	b007      	add	sp, #28
 800f6e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6e8:	f04f 0b00 	mov.w	fp, #0
 800f6ec:	e7ca      	b.n	800f684 <_scanf_i+0x15c>
 800f6ee:	1d1a      	adds	r2, r3, #4
 800f6f0:	f8c8 2000 	str.w	r2, [r8]
 800f6f4:	681b      	ldr	r3, [r3, #0]
 800f6f6:	f011 0f01 	tst.w	r1, #1
 800f6fa:	bf14      	ite	ne
 800f6fc:	8018      	strhne	r0, [r3, #0]
 800f6fe:	6018      	streq	r0, [r3, #0]
 800f700:	e7e6      	b.n	800f6d0 <_scanf_i+0x1a8>
 800f702:	2001      	movs	r0, #1
 800f704:	e7ed      	b.n	800f6e2 <_scanf_i+0x1ba>
 800f706:	bf00      	nop
 800f708:	08010884 	.word	0x08010884
 800f70c:	0800f8e5 	.word	0x0800f8e5
 800f710:	0800ce3d 	.word	0x0800ce3d
 800f714:	0801163e 	.word	0x0801163e

0800f718 <_read_r>:
 800f718:	b538      	push	{r3, r4, r5, lr}
 800f71a:	4604      	mov	r4, r0
 800f71c:	4608      	mov	r0, r1
 800f71e:	4611      	mov	r1, r2
 800f720:	2200      	movs	r2, #0
 800f722:	4d05      	ldr	r5, [pc, #20]	; (800f738 <_read_r+0x20>)
 800f724:	602a      	str	r2, [r5, #0]
 800f726:	461a      	mov	r2, r3
 800f728:	f7f6 f811 	bl	800574e <_read>
 800f72c:	1c43      	adds	r3, r0, #1
 800f72e:	d102      	bne.n	800f736 <_read_r+0x1e>
 800f730:	682b      	ldr	r3, [r5, #0]
 800f732:	b103      	cbz	r3, 800f736 <_read_r+0x1e>
 800f734:	6023      	str	r3, [r4, #0]
 800f736:	bd38      	pop	{r3, r4, r5, pc}
 800f738:	20001694 	.word	0x20001694

0800f73c <nan>:
 800f73c:	2000      	movs	r0, #0
 800f73e:	4901      	ldr	r1, [pc, #4]	; (800f744 <nan+0x8>)
 800f740:	4770      	bx	lr
 800f742:	bf00      	nop
 800f744:	7ff80000 	.word	0x7ff80000

0800f748 <_sbrk_r>:
 800f748:	b538      	push	{r3, r4, r5, lr}
 800f74a:	2300      	movs	r3, #0
 800f74c:	4d05      	ldr	r5, [pc, #20]	; (800f764 <_sbrk_r+0x1c>)
 800f74e:	4604      	mov	r4, r0
 800f750:	4608      	mov	r0, r1
 800f752:	602b      	str	r3, [r5, #0]
 800f754:	f7f6 f864 	bl	8005820 <_sbrk>
 800f758:	1c43      	adds	r3, r0, #1
 800f75a:	d102      	bne.n	800f762 <_sbrk_r+0x1a>
 800f75c:	682b      	ldr	r3, [r5, #0]
 800f75e:	b103      	cbz	r3, 800f762 <_sbrk_r+0x1a>
 800f760:	6023      	str	r3, [r4, #0]
 800f762:	bd38      	pop	{r3, r4, r5, pc}
 800f764:	20001694 	.word	0x20001694

0800f768 <__sccl>:
 800f768:	b570      	push	{r4, r5, r6, lr}
 800f76a:	780b      	ldrb	r3, [r1, #0]
 800f76c:	4604      	mov	r4, r0
 800f76e:	2b5e      	cmp	r3, #94	; 0x5e
 800f770:	bf13      	iteet	ne
 800f772:	2200      	movne	r2, #0
 800f774:	2201      	moveq	r2, #1
 800f776:	784b      	ldrbeq	r3, [r1, #1]
 800f778:	1c48      	addne	r0, r1, #1
 800f77a:	bf08      	it	eq
 800f77c:	1c88      	addeq	r0, r1, #2
 800f77e:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800f782:	1e61      	subs	r1, r4, #1
 800f784:	f801 2f01 	strb.w	r2, [r1, #1]!
 800f788:	42a9      	cmp	r1, r5
 800f78a:	d1fb      	bne.n	800f784 <__sccl+0x1c>
 800f78c:	b90b      	cbnz	r3, 800f792 <__sccl+0x2a>
 800f78e:	3801      	subs	r0, #1
 800f790:	bd70      	pop	{r4, r5, r6, pc}
 800f792:	f082 0201 	eor.w	r2, r2, #1
 800f796:	4605      	mov	r5, r0
 800f798:	54e2      	strb	r2, [r4, r3]
 800f79a:	4628      	mov	r0, r5
 800f79c:	f810 1b01 	ldrb.w	r1, [r0], #1
 800f7a0:	292d      	cmp	r1, #45	; 0x2d
 800f7a2:	d006      	beq.n	800f7b2 <__sccl+0x4a>
 800f7a4:	295d      	cmp	r1, #93	; 0x5d
 800f7a6:	d0f3      	beq.n	800f790 <__sccl+0x28>
 800f7a8:	b909      	cbnz	r1, 800f7ae <__sccl+0x46>
 800f7aa:	4628      	mov	r0, r5
 800f7ac:	e7f0      	b.n	800f790 <__sccl+0x28>
 800f7ae:	460b      	mov	r3, r1
 800f7b0:	e7f1      	b.n	800f796 <__sccl+0x2e>
 800f7b2:	786e      	ldrb	r6, [r5, #1]
 800f7b4:	2e5d      	cmp	r6, #93	; 0x5d
 800f7b6:	d0fa      	beq.n	800f7ae <__sccl+0x46>
 800f7b8:	42b3      	cmp	r3, r6
 800f7ba:	dcf8      	bgt.n	800f7ae <__sccl+0x46>
 800f7bc:	4619      	mov	r1, r3
 800f7be:	3502      	adds	r5, #2
 800f7c0:	3101      	adds	r1, #1
 800f7c2:	428e      	cmp	r6, r1
 800f7c4:	5462      	strb	r2, [r4, r1]
 800f7c6:	dcfb      	bgt.n	800f7c0 <__sccl+0x58>
 800f7c8:	1af1      	subs	r1, r6, r3
 800f7ca:	3901      	subs	r1, #1
 800f7cc:	42b3      	cmp	r3, r6
 800f7ce:	bfa8      	it	ge
 800f7d0:	2100      	movge	r1, #0
 800f7d2:	1c58      	adds	r0, r3, #1
 800f7d4:	1843      	adds	r3, r0, r1
 800f7d6:	e7e0      	b.n	800f79a <__sccl+0x32>

0800f7d8 <strncmp>:
 800f7d8:	4603      	mov	r3, r0
 800f7da:	b510      	push	{r4, lr}
 800f7dc:	b172      	cbz	r2, 800f7fc <strncmp+0x24>
 800f7de:	3901      	subs	r1, #1
 800f7e0:	1884      	adds	r4, r0, r2
 800f7e2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800f7e6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f7ea:	4290      	cmp	r0, r2
 800f7ec:	d101      	bne.n	800f7f2 <strncmp+0x1a>
 800f7ee:	42a3      	cmp	r3, r4
 800f7f0:	d101      	bne.n	800f7f6 <strncmp+0x1e>
 800f7f2:	1a80      	subs	r0, r0, r2
 800f7f4:	bd10      	pop	{r4, pc}
 800f7f6:	2800      	cmp	r0, #0
 800f7f8:	d1f3      	bne.n	800f7e2 <strncmp+0xa>
 800f7fa:	e7fa      	b.n	800f7f2 <strncmp+0x1a>
 800f7fc:	4610      	mov	r0, r2
 800f7fe:	e7f9      	b.n	800f7f4 <strncmp+0x1c>

0800f800 <_strtoul_l.constprop.0>:
 800f800:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f804:	4686      	mov	lr, r0
 800f806:	460d      	mov	r5, r1
 800f808:	4f35      	ldr	r7, [pc, #212]	; (800f8e0 <_strtoul_l.constprop.0+0xe0>)
 800f80a:	4628      	mov	r0, r5
 800f80c:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f810:	5de6      	ldrb	r6, [r4, r7]
 800f812:	f016 0608 	ands.w	r6, r6, #8
 800f816:	d1f8      	bne.n	800f80a <_strtoul_l.constprop.0+0xa>
 800f818:	2c2d      	cmp	r4, #45	; 0x2d
 800f81a:	d12f      	bne.n	800f87c <_strtoul_l.constprop.0+0x7c>
 800f81c:	2601      	movs	r6, #1
 800f81e:	782c      	ldrb	r4, [r5, #0]
 800f820:	1c85      	adds	r5, r0, #2
 800f822:	2b00      	cmp	r3, #0
 800f824:	d057      	beq.n	800f8d6 <_strtoul_l.constprop.0+0xd6>
 800f826:	2b10      	cmp	r3, #16
 800f828:	d109      	bne.n	800f83e <_strtoul_l.constprop.0+0x3e>
 800f82a:	2c30      	cmp	r4, #48	; 0x30
 800f82c:	d107      	bne.n	800f83e <_strtoul_l.constprop.0+0x3e>
 800f82e:	7828      	ldrb	r0, [r5, #0]
 800f830:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800f834:	2858      	cmp	r0, #88	; 0x58
 800f836:	d149      	bne.n	800f8cc <_strtoul_l.constprop.0+0xcc>
 800f838:	2310      	movs	r3, #16
 800f83a:	786c      	ldrb	r4, [r5, #1]
 800f83c:	3502      	adds	r5, #2
 800f83e:	f04f 38ff 	mov.w	r8, #4294967295
 800f842:	fbb8 f8f3 	udiv	r8, r8, r3
 800f846:	2700      	movs	r7, #0
 800f848:	fb03 f908 	mul.w	r9, r3, r8
 800f84c:	4638      	mov	r0, r7
 800f84e:	ea6f 0909 	mvn.w	r9, r9
 800f852:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f856:	f1bc 0f09 	cmp.w	ip, #9
 800f85a:	d814      	bhi.n	800f886 <_strtoul_l.constprop.0+0x86>
 800f85c:	4664      	mov	r4, ip
 800f85e:	42a3      	cmp	r3, r4
 800f860:	dd22      	ble.n	800f8a8 <_strtoul_l.constprop.0+0xa8>
 800f862:	2f00      	cmp	r7, #0
 800f864:	db1d      	blt.n	800f8a2 <_strtoul_l.constprop.0+0xa2>
 800f866:	4580      	cmp	r8, r0
 800f868:	d31b      	bcc.n	800f8a2 <_strtoul_l.constprop.0+0xa2>
 800f86a:	d101      	bne.n	800f870 <_strtoul_l.constprop.0+0x70>
 800f86c:	45a1      	cmp	r9, r4
 800f86e:	db18      	blt.n	800f8a2 <_strtoul_l.constprop.0+0xa2>
 800f870:	2701      	movs	r7, #1
 800f872:	fb00 4003 	mla	r0, r0, r3, r4
 800f876:	f815 4b01 	ldrb.w	r4, [r5], #1
 800f87a:	e7ea      	b.n	800f852 <_strtoul_l.constprop.0+0x52>
 800f87c:	2c2b      	cmp	r4, #43	; 0x2b
 800f87e:	bf04      	itt	eq
 800f880:	782c      	ldrbeq	r4, [r5, #0]
 800f882:	1c85      	addeq	r5, r0, #2
 800f884:	e7cd      	b.n	800f822 <_strtoul_l.constprop.0+0x22>
 800f886:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800f88a:	f1bc 0f19 	cmp.w	ip, #25
 800f88e:	d801      	bhi.n	800f894 <_strtoul_l.constprop.0+0x94>
 800f890:	3c37      	subs	r4, #55	; 0x37
 800f892:	e7e4      	b.n	800f85e <_strtoul_l.constprop.0+0x5e>
 800f894:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800f898:	f1bc 0f19 	cmp.w	ip, #25
 800f89c:	d804      	bhi.n	800f8a8 <_strtoul_l.constprop.0+0xa8>
 800f89e:	3c57      	subs	r4, #87	; 0x57
 800f8a0:	e7dd      	b.n	800f85e <_strtoul_l.constprop.0+0x5e>
 800f8a2:	f04f 37ff 	mov.w	r7, #4294967295
 800f8a6:	e7e6      	b.n	800f876 <_strtoul_l.constprop.0+0x76>
 800f8a8:	2f00      	cmp	r7, #0
 800f8aa:	da07      	bge.n	800f8bc <_strtoul_l.constprop.0+0xbc>
 800f8ac:	2322      	movs	r3, #34	; 0x22
 800f8ae:	f04f 30ff 	mov.w	r0, #4294967295
 800f8b2:	f8ce 3000 	str.w	r3, [lr]
 800f8b6:	b932      	cbnz	r2, 800f8c6 <_strtoul_l.constprop.0+0xc6>
 800f8b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8bc:	b106      	cbz	r6, 800f8c0 <_strtoul_l.constprop.0+0xc0>
 800f8be:	4240      	negs	r0, r0
 800f8c0:	2a00      	cmp	r2, #0
 800f8c2:	d0f9      	beq.n	800f8b8 <_strtoul_l.constprop.0+0xb8>
 800f8c4:	b107      	cbz	r7, 800f8c8 <_strtoul_l.constprop.0+0xc8>
 800f8c6:	1e69      	subs	r1, r5, #1
 800f8c8:	6011      	str	r1, [r2, #0]
 800f8ca:	e7f5      	b.n	800f8b8 <_strtoul_l.constprop.0+0xb8>
 800f8cc:	2430      	movs	r4, #48	; 0x30
 800f8ce:	2b00      	cmp	r3, #0
 800f8d0:	d1b5      	bne.n	800f83e <_strtoul_l.constprop.0+0x3e>
 800f8d2:	2308      	movs	r3, #8
 800f8d4:	e7b3      	b.n	800f83e <_strtoul_l.constprop.0+0x3e>
 800f8d6:	2c30      	cmp	r4, #48	; 0x30
 800f8d8:	d0a9      	beq.n	800f82e <_strtoul_l.constprop.0+0x2e>
 800f8da:	230a      	movs	r3, #10
 800f8dc:	e7af      	b.n	800f83e <_strtoul_l.constprop.0+0x3e>
 800f8de:	bf00      	nop
 800f8e0:	080112b1 	.word	0x080112b1

0800f8e4 <_strtoul_r>:
 800f8e4:	f7ff bf8c 	b.w	800f800 <_strtoul_l.constprop.0>

0800f8e8 <__submore>:
 800f8e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8ec:	460c      	mov	r4, r1
 800f8ee:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800f8f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f8f4:	4299      	cmp	r1, r3
 800f8f6:	d11b      	bne.n	800f930 <__submore+0x48>
 800f8f8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800f8fc:	f7ff fa16 	bl	800ed2c <_malloc_r>
 800f900:	b918      	cbnz	r0, 800f90a <__submore+0x22>
 800f902:	f04f 30ff 	mov.w	r0, #4294967295
 800f906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f90a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f90e:	63a3      	str	r3, [r4, #56]	; 0x38
 800f910:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800f914:	6360      	str	r0, [r4, #52]	; 0x34
 800f916:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800f91a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f91e:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800f922:	7043      	strb	r3, [r0, #1]
 800f924:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f928:	7003      	strb	r3, [r0, #0]
 800f92a:	6020      	str	r0, [r4, #0]
 800f92c:	2000      	movs	r0, #0
 800f92e:	e7ea      	b.n	800f906 <__submore+0x1e>
 800f930:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800f932:	0077      	lsls	r7, r6, #1
 800f934:	463a      	mov	r2, r7
 800f936:	f000 fa29 	bl	800fd8c <_realloc_r>
 800f93a:	4605      	mov	r5, r0
 800f93c:	2800      	cmp	r0, #0
 800f93e:	d0e0      	beq.n	800f902 <__submore+0x1a>
 800f940:	eb00 0806 	add.w	r8, r0, r6
 800f944:	4601      	mov	r1, r0
 800f946:	4632      	mov	r2, r6
 800f948:	4640      	mov	r0, r8
 800f94a:	f7fb fcd3 	bl	800b2f4 <memcpy>
 800f94e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800f952:	f8c4 8000 	str.w	r8, [r4]
 800f956:	e7e9      	b.n	800f92c <__submore+0x44>

0800f958 <__ascii_wctomb>:
 800f958:	4603      	mov	r3, r0
 800f95a:	4608      	mov	r0, r1
 800f95c:	b141      	cbz	r1, 800f970 <__ascii_wctomb+0x18>
 800f95e:	2aff      	cmp	r2, #255	; 0xff
 800f960:	d904      	bls.n	800f96c <__ascii_wctomb+0x14>
 800f962:	228a      	movs	r2, #138	; 0x8a
 800f964:	f04f 30ff 	mov.w	r0, #4294967295
 800f968:	601a      	str	r2, [r3, #0]
 800f96a:	4770      	bx	lr
 800f96c:	2001      	movs	r0, #1
 800f96e:	700a      	strb	r2, [r1, #0]
 800f970:	4770      	bx	lr
	...

0800f974 <__assert_func>:
 800f974:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f976:	4614      	mov	r4, r2
 800f978:	461a      	mov	r2, r3
 800f97a:	4b09      	ldr	r3, [pc, #36]	; (800f9a0 <__assert_func+0x2c>)
 800f97c:	4605      	mov	r5, r0
 800f97e:	681b      	ldr	r3, [r3, #0]
 800f980:	68d8      	ldr	r0, [r3, #12]
 800f982:	b14c      	cbz	r4, 800f998 <__assert_func+0x24>
 800f984:	4b07      	ldr	r3, [pc, #28]	; (800f9a4 <__assert_func+0x30>)
 800f986:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f98a:	9100      	str	r1, [sp, #0]
 800f98c:	462b      	mov	r3, r5
 800f98e:	4906      	ldr	r1, [pc, #24]	; (800f9a8 <__assert_func+0x34>)
 800f990:	f000 f9a2 	bl	800fcd8 <fiprintf>
 800f994:	f000 fc40 	bl	8010218 <abort>
 800f998:	4b04      	ldr	r3, [pc, #16]	; (800f9ac <__assert_func+0x38>)
 800f99a:	461c      	mov	r4, r3
 800f99c:	e7f3      	b.n	800f986 <__assert_func+0x12>
 800f99e:	bf00      	nop
 800f9a0:	200001a4 	.word	0x200001a4
 800f9a4:	08011640 	.word	0x08011640
 800f9a8:	0801164d 	.word	0x0801164d
 800f9ac:	0801167b 	.word	0x0801167b

0800f9b0 <__sflush_r>:
 800f9b0:	898a      	ldrh	r2, [r1, #12]
 800f9b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9b4:	4605      	mov	r5, r0
 800f9b6:	0710      	lsls	r0, r2, #28
 800f9b8:	460c      	mov	r4, r1
 800f9ba:	d457      	bmi.n	800fa6c <__sflush_r+0xbc>
 800f9bc:	684b      	ldr	r3, [r1, #4]
 800f9be:	2b00      	cmp	r3, #0
 800f9c0:	dc04      	bgt.n	800f9cc <__sflush_r+0x1c>
 800f9c2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f9c4:	2b00      	cmp	r3, #0
 800f9c6:	dc01      	bgt.n	800f9cc <__sflush_r+0x1c>
 800f9c8:	2000      	movs	r0, #0
 800f9ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f9ce:	2e00      	cmp	r6, #0
 800f9d0:	d0fa      	beq.n	800f9c8 <__sflush_r+0x18>
 800f9d2:	2300      	movs	r3, #0
 800f9d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f9d8:	682f      	ldr	r7, [r5, #0]
 800f9da:	602b      	str	r3, [r5, #0]
 800f9dc:	d032      	beq.n	800fa44 <__sflush_r+0x94>
 800f9de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f9e0:	89a3      	ldrh	r3, [r4, #12]
 800f9e2:	075a      	lsls	r2, r3, #29
 800f9e4:	d505      	bpl.n	800f9f2 <__sflush_r+0x42>
 800f9e6:	6863      	ldr	r3, [r4, #4]
 800f9e8:	1ac0      	subs	r0, r0, r3
 800f9ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f9ec:	b10b      	cbz	r3, 800f9f2 <__sflush_r+0x42>
 800f9ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f9f0:	1ac0      	subs	r0, r0, r3
 800f9f2:	2300      	movs	r3, #0
 800f9f4:	4602      	mov	r2, r0
 800f9f6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f9f8:	4628      	mov	r0, r5
 800f9fa:	6a21      	ldr	r1, [r4, #32]
 800f9fc:	47b0      	blx	r6
 800f9fe:	1c43      	adds	r3, r0, #1
 800fa00:	89a3      	ldrh	r3, [r4, #12]
 800fa02:	d106      	bne.n	800fa12 <__sflush_r+0x62>
 800fa04:	6829      	ldr	r1, [r5, #0]
 800fa06:	291d      	cmp	r1, #29
 800fa08:	d82c      	bhi.n	800fa64 <__sflush_r+0xb4>
 800fa0a:	4a29      	ldr	r2, [pc, #164]	; (800fab0 <__sflush_r+0x100>)
 800fa0c:	40ca      	lsrs	r2, r1
 800fa0e:	07d6      	lsls	r6, r2, #31
 800fa10:	d528      	bpl.n	800fa64 <__sflush_r+0xb4>
 800fa12:	2200      	movs	r2, #0
 800fa14:	6062      	str	r2, [r4, #4]
 800fa16:	6922      	ldr	r2, [r4, #16]
 800fa18:	04d9      	lsls	r1, r3, #19
 800fa1a:	6022      	str	r2, [r4, #0]
 800fa1c:	d504      	bpl.n	800fa28 <__sflush_r+0x78>
 800fa1e:	1c42      	adds	r2, r0, #1
 800fa20:	d101      	bne.n	800fa26 <__sflush_r+0x76>
 800fa22:	682b      	ldr	r3, [r5, #0]
 800fa24:	b903      	cbnz	r3, 800fa28 <__sflush_r+0x78>
 800fa26:	6560      	str	r0, [r4, #84]	; 0x54
 800fa28:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fa2a:	602f      	str	r7, [r5, #0]
 800fa2c:	2900      	cmp	r1, #0
 800fa2e:	d0cb      	beq.n	800f9c8 <__sflush_r+0x18>
 800fa30:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800fa34:	4299      	cmp	r1, r3
 800fa36:	d002      	beq.n	800fa3e <__sflush_r+0x8e>
 800fa38:	4628      	mov	r0, r5
 800fa3a:	f7ff f90f 	bl	800ec5c <_free_r>
 800fa3e:	2000      	movs	r0, #0
 800fa40:	6360      	str	r0, [r4, #52]	; 0x34
 800fa42:	e7c2      	b.n	800f9ca <__sflush_r+0x1a>
 800fa44:	6a21      	ldr	r1, [r4, #32]
 800fa46:	2301      	movs	r3, #1
 800fa48:	4628      	mov	r0, r5
 800fa4a:	47b0      	blx	r6
 800fa4c:	1c41      	adds	r1, r0, #1
 800fa4e:	d1c7      	bne.n	800f9e0 <__sflush_r+0x30>
 800fa50:	682b      	ldr	r3, [r5, #0]
 800fa52:	2b00      	cmp	r3, #0
 800fa54:	d0c4      	beq.n	800f9e0 <__sflush_r+0x30>
 800fa56:	2b1d      	cmp	r3, #29
 800fa58:	d001      	beq.n	800fa5e <__sflush_r+0xae>
 800fa5a:	2b16      	cmp	r3, #22
 800fa5c:	d101      	bne.n	800fa62 <__sflush_r+0xb2>
 800fa5e:	602f      	str	r7, [r5, #0]
 800fa60:	e7b2      	b.n	800f9c8 <__sflush_r+0x18>
 800fa62:	89a3      	ldrh	r3, [r4, #12]
 800fa64:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fa68:	81a3      	strh	r3, [r4, #12]
 800fa6a:	e7ae      	b.n	800f9ca <__sflush_r+0x1a>
 800fa6c:	690f      	ldr	r7, [r1, #16]
 800fa6e:	2f00      	cmp	r7, #0
 800fa70:	d0aa      	beq.n	800f9c8 <__sflush_r+0x18>
 800fa72:	0793      	lsls	r3, r2, #30
 800fa74:	bf18      	it	ne
 800fa76:	2300      	movne	r3, #0
 800fa78:	680e      	ldr	r6, [r1, #0]
 800fa7a:	bf08      	it	eq
 800fa7c:	694b      	ldreq	r3, [r1, #20]
 800fa7e:	1bf6      	subs	r6, r6, r7
 800fa80:	600f      	str	r7, [r1, #0]
 800fa82:	608b      	str	r3, [r1, #8]
 800fa84:	2e00      	cmp	r6, #0
 800fa86:	dd9f      	ble.n	800f9c8 <__sflush_r+0x18>
 800fa88:	4633      	mov	r3, r6
 800fa8a:	463a      	mov	r2, r7
 800fa8c:	4628      	mov	r0, r5
 800fa8e:	6a21      	ldr	r1, [r4, #32]
 800fa90:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800fa94:	47e0      	blx	ip
 800fa96:	2800      	cmp	r0, #0
 800fa98:	dc06      	bgt.n	800faa8 <__sflush_r+0xf8>
 800fa9a:	89a3      	ldrh	r3, [r4, #12]
 800fa9c:	f04f 30ff 	mov.w	r0, #4294967295
 800faa0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800faa4:	81a3      	strh	r3, [r4, #12]
 800faa6:	e790      	b.n	800f9ca <__sflush_r+0x1a>
 800faa8:	4407      	add	r7, r0
 800faaa:	1a36      	subs	r6, r6, r0
 800faac:	e7ea      	b.n	800fa84 <__sflush_r+0xd4>
 800faae:	bf00      	nop
 800fab0:	20400001 	.word	0x20400001

0800fab4 <_fflush_r>:
 800fab4:	b538      	push	{r3, r4, r5, lr}
 800fab6:	690b      	ldr	r3, [r1, #16]
 800fab8:	4605      	mov	r5, r0
 800faba:	460c      	mov	r4, r1
 800fabc:	b913      	cbnz	r3, 800fac4 <_fflush_r+0x10>
 800fabe:	2500      	movs	r5, #0
 800fac0:	4628      	mov	r0, r5
 800fac2:	bd38      	pop	{r3, r4, r5, pc}
 800fac4:	b118      	cbz	r0, 800face <_fflush_r+0x1a>
 800fac6:	6983      	ldr	r3, [r0, #24]
 800fac8:	b90b      	cbnz	r3, 800face <_fflush_r+0x1a>
 800faca:	f000 f887 	bl	800fbdc <__sinit>
 800face:	4b14      	ldr	r3, [pc, #80]	; (800fb20 <_fflush_r+0x6c>)
 800fad0:	429c      	cmp	r4, r3
 800fad2:	d11b      	bne.n	800fb0c <_fflush_r+0x58>
 800fad4:	686c      	ldr	r4, [r5, #4]
 800fad6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fada:	2b00      	cmp	r3, #0
 800fadc:	d0ef      	beq.n	800fabe <_fflush_r+0xa>
 800fade:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800fae0:	07d0      	lsls	r0, r2, #31
 800fae2:	d404      	bmi.n	800faee <_fflush_r+0x3a>
 800fae4:	0599      	lsls	r1, r3, #22
 800fae6:	d402      	bmi.n	800faee <_fflush_r+0x3a>
 800fae8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800faea:	f000 f927 	bl	800fd3c <__retarget_lock_acquire_recursive>
 800faee:	4628      	mov	r0, r5
 800faf0:	4621      	mov	r1, r4
 800faf2:	f7ff ff5d 	bl	800f9b0 <__sflush_r>
 800faf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800faf8:	4605      	mov	r5, r0
 800fafa:	07da      	lsls	r2, r3, #31
 800fafc:	d4e0      	bmi.n	800fac0 <_fflush_r+0xc>
 800fafe:	89a3      	ldrh	r3, [r4, #12]
 800fb00:	059b      	lsls	r3, r3, #22
 800fb02:	d4dd      	bmi.n	800fac0 <_fflush_r+0xc>
 800fb04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fb06:	f000 f91a 	bl	800fd3e <__retarget_lock_release_recursive>
 800fb0a:	e7d9      	b.n	800fac0 <_fflush_r+0xc>
 800fb0c:	4b05      	ldr	r3, [pc, #20]	; (800fb24 <_fflush_r+0x70>)
 800fb0e:	429c      	cmp	r4, r3
 800fb10:	d101      	bne.n	800fb16 <_fflush_r+0x62>
 800fb12:	68ac      	ldr	r4, [r5, #8]
 800fb14:	e7df      	b.n	800fad6 <_fflush_r+0x22>
 800fb16:	4b04      	ldr	r3, [pc, #16]	; (800fb28 <_fflush_r+0x74>)
 800fb18:	429c      	cmp	r4, r3
 800fb1a:	bf08      	it	eq
 800fb1c:	68ec      	ldreq	r4, [r5, #12]
 800fb1e:	e7da      	b.n	800fad6 <_fflush_r+0x22>
 800fb20:	0801169c 	.word	0x0801169c
 800fb24:	080116bc 	.word	0x080116bc
 800fb28:	0801167c 	.word	0x0801167c

0800fb2c <std>:
 800fb2c:	2300      	movs	r3, #0
 800fb2e:	b510      	push	{r4, lr}
 800fb30:	4604      	mov	r4, r0
 800fb32:	e9c0 3300 	strd	r3, r3, [r0]
 800fb36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800fb3a:	6083      	str	r3, [r0, #8]
 800fb3c:	8181      	strh	r1, [r0, #12]
 800fb3e:	6643      	str	r3, [r0, #100]	; 0x64
 800fb40:	81c2      	strh	r2, [r0, #14]
 800fb42:	6183      	str	r3, [r0, #24]
 800fb44:	4619      	mov	r1, r3
 800fb46:	2208      	movs	r2, #8
 800fb48:	305c      	adds	r0, #92	; 0x5c
 800fb4a:	f7fb fbe1 	bl	800b310 <memset>
 800fb4e:	4b05      	ldr	r3, [pc, #20]	; (800fb64 <std+0x38>)
 800fb50:	6224      	str	r4, [r4, #32]
 800fb52:	6263      	str	r3, [r4, #36]	; 0x24
 800fb54:	4b04      	ldr	r3, [pc, #16]	; (800fb68 <std+0x3c>)
 800fb56:	62a3      	str	r3, [r4, #40]	; 0x28
 800fb58:	4b04      	ldr	r3, [pc, #16]	; (800fb6c <std+0x40>)
 800fb5a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fb5c:	4b04      	ldr	r3, [pc, #16]	; (800fb70 <std+0x44>)
 800fb5e:	6323      	str	r3, [r4, #48]	; 0x30
 800fb60:	bd10      	pop	{r4, pc}
 800fb62:	bf00      	nop
 800fb64:	0800c099 	.word	0x0800c099
 800fb68:	0800c0bf 	.word	0x0800c0bf
 800fb6c:	0800c0f7 	.word	0x0800c0f7
 800fb70:	0800c11b 	.word	0x0800c11b

0800fb74 <_cleanup_r>:
 800fb74:	4901      	ldr	r1, [pc, #4]	; (800fb7c <_cleanup_r+0x8>)
 800fb76:	f000 b8c1 	b.w	800fcfc <_fwalk_reent>
 800fb7a:	bf00      	nop
 800fb7c:	0800fab5 	.word	0x0800fab5

0800fb80 <__sfmoreglue>:
 800fb80:	2268      	movs	r2, #104	; 0x68
 800fb82:	b570      	push	{r4, r5, r6, lr}
 800fb84:	1e4d      	subs	r5, r1, #1
 800fb86:	4355      	muls	r5, r2
 800fb88:	460e      	mov	r6, r1
 800fb8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800fb8e:	f7ff f8cd 	bl	800ed2c <_malloc_r>
 800fb92:	4604      	mov	r4, r0
 800fb94:	b140      	cbz	r0, 800fba8 <__sfmoreglue+0x28>
 800fb96:	2100      	movs	r1, #0
 800fb98:	e9c0 1600 	strd	r1, r6, [r0]
 800fb9c:	300c      	adds	r0, #12
 800fb9e:	60a0      	str	r0, [r4, #8]
 800fba0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800fba4:	f7fb fbb4 	bl	800b310 <memset>
 800fba8:	4620      	mov	r0, r4
 800fbaa:	bd70      	pop	{r4, r5, r6, pc}

0800fbac <__sfp_lock_acquire>:
 800fbac:	4801      	ldr	r0, [pc, #4]	; (800fbb4 <__sfp_lock_acquire+0x8>)
 800fbae:	f000 b8c5 	b.w	800fd3c <__retarget_lock_acquire_recursive>
 800fbb2:	bf00      	nop
 800fbb4:	20001699 	.word	0x20001699

0800fbb8 <__sfp_lock_release>:
 800fbb8:	4801      	ldr	r0, [pc, #4]	; (800fbc0 <__sfp_lock_release+0x8>)
 800fbba:	f000 b8c0 	b.w	800fd3e <__retarget_lock_release_recursive>
 800fbbe:	bf00      	nop
 800fbc0:	20001699 	.word	0x20001699

0800fbc4 <__sinit_lock_acquire>:
 800fbc4:	4801      	ldr	r0, [pc, #4]	; (800fbcc <__sinit_lock_acquire+0x8>)
 800fbc6:	f000 b8b9 	b.w	800fd3c <__retarget_lock_acquire_recursive>
 800fbca:	bf00      	nop
 800fbcc:	2000169a 	.word	0x2000169a

0800fbd0 <__sinit_lock_release>:
 800fbd0:	4801      	ldr	r0, [pc, #4]	; (800fbd8 <__sinit_lock_release+0x8>)
 800fbd2:	f000 b8b4 	b.w	800fd3e <__retarget_lock_release_recursive>
 800fbd6:	bf00      	nop
 800fbd8:	2000169a 	.word	0x2000169a

0800fbdc <__sinit>:
 800fbdc:	b510      	push	{r4, lr}
 800fbde:	4604      	mov	r4, r0
 800fbe0:	f7ff fff0 	bl	800fbc4 <__sinit_lock_acquire>
 800fbe4:	69a3      	ldr	r3, [r4, #24]
 800fbe6:	b11b      	cbz	r3, 800fbf0 <__sinit+0x14>
 800fbe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fbec:	f7ff bff0 	b.w	800fbd0 <__sinit_lock_release>
 800fbf0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800fbf4:	6523      	str	r3, [r4, #80]	; 0x50
 800fbf6:	4b13      	ldr	r3, [pc, #76]	; (800fc44 <__sinit+0x68>)
 800fbf8:	4a13      	ldr	r2, [pc, #76]	; (800fc48 <__sinit+0x6c>)
 800fbfa:	681b      	ldr	r3, [r3, #0]
 800fbfc:	62a2      	str	r2, [r4, #40]	; 0x28
 800fbfe:	42a3      	cmp	r3, r4
 800fc00:	bf08      	it	eq
 800fc02:	2301      	moveq	r3, #1
 800fc04:	4620      	mov	r0, r4
 800fc06:	bf08      	it	eq
 800fc08:	61a3      	streq	r3, [r4, #24]
 800fc0a:	f000 f81f 	bl	800fc4c <__sfp>
 800fc0e:	6060      	str	r0, [r4, #4]
 800fc10:	4620      	mov	r0, r4
 800fc12:	f000 f81b 	bl	800fc4c <__sfp>
 800fc16:	60a0      	str	r0, [r4, #8]
 800fc18:	4620      	mov	r0, r4
 800fc1a:	f000 f817 	bl	800fc4c <__sfp>
 800fc1e:	2200      	movs	r2, #0
 800fc20:	2104      	movs	r1, #4
 800fc22:	60e0      	str	r0, [r4, #12]
 800fc24:	6860      	ldr	r0, [r4, #4]
 800fc26:	f7ff ff81 	bl	800fb2c <std>
 800fc2a:	2201      	movs	r2, #1
 800fc2c:	2109      	movs	r1, #9
 800fc2e:	68a0      	ldr	r0, [r4, #8]
 800fc30:	f7ff ff7c 	bl	800fb2c <std>
 800fc34:	2202      	movs	r2, #2
 800fc36:	2112      	movs	r1, #18
 800fc38:	68e0      	ldr	r0, [r4, #12]
 800fc3a:	f7ff ff77 	bl	800fb2c <std>
 800fc3e:	2301      	movs	r3, #1
 800fc40:	61a3      	str	r3, [r4, #24]
 800fc42:	e7d1      	b.n	800fbe8 <__sinit+0xc>
 800fc44:	08011224 	.word	0x08011224
 800fc48:	0800fb75 	.word	0x0800fb75

0800fc4c <__sfp>:
 800fc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc4e:	4607      	mov	r7, r0
 800fc50:	f7ff ffac 	bl	800fbac <__sfp_lock_acquire>
 800fc54:	4b1e      	ldr	r3, [pc, #120]	; (800fcd0 <__sfp+0x84>)
 800fc56:	681e      	ldr	r6, [r3, #0]
 800fc58:	69b3      	ldr	r3, [r6, #24]
 800fc5a:	b913      	cbnz	r3, 800fc62 <__sfp+0x16>
 800fc5c:	4630      	mov	r0, r6
 800fc5e:	f7ff ffbd 	bl	800fbdc <__sinit>
 800fc62:	3648      	adds	r6, #72	; 0x48
 800fc64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800fc68:	3b01      	subs	r3, #1
 800fc6a:	d503      	bpl.n	800fc74 <__sfp+0x28>
 800fc6c:	6833      	ldr	r3, [r6, #0]
 800fc6e:	b30b      	cbz	r3, 800fcb4 <__sfp+0x68>
 800fc70:	6836      	ldr	r6, [r6, #0]
 800fc72:	e7f7      	b.n	800fc64 <__sfp+0x18>
 800fc74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800fc78:	b9d5      	cbnz	r5, 800fcb0 <__sfp+0x64>
 800fc7a:	4b16      	ldr	r3, [pc, #88]	; (800fcd4 <__sfp+0x88>)
 800fc7c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fc80:	60e3      	str	r3, [r4, #12]
 800fc82:	6665      	str	r5, [r4, #100]	; 0x64
 800fc84:	f000 f859 	bl	800fd3a <__retarget_lock_init_recursive>
 800fc88:	f7ff ff96 	bl	800fbb8 <__sfp_lock_release>
 800fc8c:	2208      	movs	r2, #8
 800fc8e:	4629      	mov	r1, r5
 800fc90:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800fc94:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800fc98:	6025      	str	r5, [r4, #0]
 800fc9a:	61a5      	str	r5, [r4, #24]
 800fc9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800fca0:	f7fb fb36 	bl	800b310 <memset>
 800fca4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800fca8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800fcac:	4620      	mov	r0, r4
 800fcae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcb0:	3468      	adds	r4, #104	; 0x68
 800fcb2:	e7d9      	b.n	800fc68 <__sfp+0x1c>
 800fcb4:	2104      	movs	r1, #4
 800fcb6:	4638      	mov	r0, r7
 800fcb8:	f7ff ff62 	bl	800fb80 <__sfmoreglue>
 800fcbc:	4604      	mov	r4, r0
 800fcbe:	6030      	str	r0, [r6, #0]
 800fcc0:	2800      	cmp	r0, #0
 800fcc2:	d1d5      	bne.n	800fc70 <__sfp+0x24>
 800fcc4:	f7ff ff78 	bl	800fbb8 <__sfp_lock_release>
 800fcc8:	230c      	movs	r3, #12
 800fcca:	603b      	str	r3, [r7, #0]
 800fccc:	e7ee      	b.n	800fcac <__sfp+0x60>
 800fcce:	bf00      	nop
 800fcd0:	08011224 	.word	0x08011224
 800fcd4:	ffff0001 	.word	0xffff0001

0800fcd8 <fiprintf>:
 800fcd8:	b40e      	push	{r1, r2, r3}
 800fcda:	b503      	push	{r0, r1, lr}
 800fcdc:	4601      	mov	r1, r0
 800fcde:	ab03      	add	r3, sp, #12
 800fce0:	4805      	ldr	r0, [pc, #20]	; (800fcf8 <fiprintf+0x20>)
 800fce2:	f853 2b04 	ldr.w	r2, [r3], #4
 800fce6:	6800      	ldr	r0, [r0, #0]
 800fce8:	9301      	str	r3, [sp, #4]
 800fcea:	f000 f8a5 	bl	800fe38 <_vfiprintf_r>
 800fcee:	b002      	add	sp, #8
 800fcf0:	f85d eb04 	ldr.w	lr, [sp], #4
 800fcf4:	b003      	add	sp, #12
 800fcf6:	4770      	bx	lr
 800fcf8:	200001a4 	.word	0x200001a4

0800fcfc <_fwalk_reent>:
 800fcfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fd00:	4606      	mov	r6, r0
 800fd02:	4688      	mov	r8, r1
 800fd04:	2700      	movs	r7, #0
 800fd06:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800fd0a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800fd0e:	f1b9 0901 	subs.w	r9, r9, #1
 800fd12:	d505      	bpl.n	800fd20 <_fwalk_reent+0x24>
 800fd14:	6824      	ldr	r4, [r4, #0]
 800fd16:	2c00      	cmp	r4, #0
 800fd18:	d1f7      	bne.n	800fd0a <_fwalk_reent+0xe>
 800fd1a:	4638      	mov	r0, r7
 800fd1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fd20:	89ab      	ldrh	r3, [r5, #12]
 800fd22:	2b01      	cmp	r3, #1
 800fd24:	d907      	bls.n	800fd36 <_fwalk_reent+0x3a>
 800fd26:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800fd2a:	3301      	adds	r3, #1
 800fd2c:	d003      	beq.n	800fd36 <_fwalk_reent+0x3a>
 800fd2e:	4629      	mov	r1, r5
 800fd30:	4630      	mov	r0, r6
 800fd32:	47c0      	blx	r8
 800fd34:	4307      	orrs	r7, r0
 800fd36:	3568      	adds	r5, #104	; 0x68
 800fd38:	e7e9      	b.n	800fd0e <_fwalk_reent+0x12>

0800fd3a <__retarget_lock_init_recursive>:
 800fd3a:	4770      	bx	lr

0800fd3c <__retarget_lock_acquire_recursive>:
 800fd3c:	4770      	bx	lr

0800fd3e <__retarget_lock_release_recursive>:
 800fd3e:	4770      	bx	lr

0800fd40 <memmove>:
 800fd40:	4288      	cmp	r0, r1
 800fd42:	b510      	push	{r4, lr}
 800fd44:	eb01 0402 	add.w	r4, r1, r2
 800fd48:	d902      	bls.n	800fd50 <memmove+0x10>
 800fd4a:	4284      	cmp	r4, r0
 800fd4c:	4623      	mov	r3, r4
 800fd4e:	d807      	bhi.n	800fd60 <memmove+0x20>
 800fd50:	1e43      	subs	r3, r0, #1
 800fd52:	42a1      	cmp	r1, r4
 800fd54:	d008      	beq.n	800fd68 <memmove+0x28>
 800fd56:	f811 2b01 	ldrb.w	r2, [r1], #1
 800fd5a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800fd5e:	e7f8      	b.n	800fd52 <memmove+0x12>
 800fd60:	4601      	mov	r1, r0
 800fd62:	4402      	add	r2, r0
 800fd64:	428a      	cmp	r2, r1
 800fd66:	d100      	bne.n	800fd6a <memmove+0x2a>
 800fd68:	bd10      	pop	{r4, pc}
 800fd6a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800fd6e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800fd72:	e7f7      	b.n	800fd64 <memmove+0x24>

0800fd74 <__malloc_lock>:
 800fd74:	4801      	ldr	r0, [pc, #4]	; (800fd7c <__malloc_lock+0x8>)
 800fd76:	f7ff bfe1 	b.w	800fd3c <__retarget_lock_acquire_recursive>
 800fd7a:	bf00      	nop
 800fd7c:	20001698 	.word	0x20001698

0800fd80 <__malloc_unlock>:
 800fd80:	4801      	ldr	r0, [pc, #4]	; (800fd88 <__malloc_unlock+0x8>)
 800fd82:	f7ff bfdc 	b.w	800fd3e <__retarget_lock_release_recursive>
 800fd86:	bf00      	nop
 800fd88:	20001698 	.word	0x20001698

0800fd8c <_realloc_r>:
 800fd8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd90:	4680      	mov	r8, r0
 800fd92:	4614      	mov	r4, r2
 800fd94:	460e      	mov	r6, r1
 800fd96:	b921      	cbnz	r1, 800fda2 <_realloc_r+0x16>
 800fd98:	4611      	mov	r1, r2
 800fd9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fd9e:	f7fe bfc5 	b.w	800ed2c <_malloc_r>
 800fda2:	b92a      	cbnz	r2, 800fdb0 <_realloc_r+0x24>
 800fda4:	f7fe ff5a 	bl	800ec5c <_free_r>
 800fda8:	4625      	mov	r5, r4
 800fdaa:	4628      	mov	r0, r5
 800fdac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fdb0:	f000 fa9e 	bl	80102f0 <_malloc_usable_size_r>
 800fdb4:	4284      	cmp	r4, r0
 800fdb6:	4607      	mov	r7, r0
 800fdb8:	d802      	bhi.n	800fdc0 <_realloc_r+0x34>
 800fdba:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800fdbe:	d812      	bhi.n	800fde6 <_realloc_r+0x5a>
 800fdc0:	4621      	mov	r1, r4
 800fdc2:	4640      	mov	r0, r8
 800fdc4:	f7fe ffb2 	bl	800ed2c <_malloc_r>
 800fdc8:	4605      	mov	r5, r0
 800fdca:	2800      	cmp	r0, #0
 800fdcc:	d0ed      	beq.n	800fdaa <_realloc_r+0x1e>
 800fdce:	42bc      	cmp	r4, r7
 800fdd0:	4622      	mov	r2, r4
 800fdd2:	4631      	mov	r1, r6
 800fdd4:	bf28      	it	cs
 800fdd6:	463a      	movcs	r2, r7
 800fdd8:	f7fb fa8c 	bl	800b2f4 <memcpy>
 800fddc:	4631      	mov	r1, r6
 800fdde:	4640      	mov	r0, r8
 800fde0:	f7fe ff3c 	bl	800ec5c <_free_r>
 800fde4:	e7e1      	b.n	800fdaa <_realloc_r+0x1e>
 800fde6:	4635      	mov	r5, r6
 800fde8:	e7df      	b.n	800fdaa <_realloc_r+0x1e>

0800fdea <__sfputc_r>:
 800fdea:	6893      	ldr	r3, [r2, #8]
 800fdec:	b410      	push	{r4}
 800fdee:	3b01      	subs	r3, #1
 800fdf0:	2b00      	cmp	r3, #0
 800fdf2:	6093      	str	r3, [r2, #8]
 800fdf4:	da07      	bge.n	800fe06 <__sfputc_r+0x1c>
 800fdf6:	6994      	ldr	r4, [r2, #24]
 800fdf8:	42a3      	cmp	r3, r4
 800fdfa:	db01      	blt.n	800fe00 <__sfputc_r+0x16>
 800fdfc:	290a      	cmp	r1, #10
 800fdfe:	d102      	bne.n	800fe06 <__sfputc_r+0x1c>
 800fe00:	bc10      	pop	{r4}
 800fe02:	f000 b949 	b.w	8010098 <__swbuf_r>
 800fe06:	6813      	ldr	r3, [r2, #0]
 800fe08:	1c58      	adds	r0, r3, #1
 800fe0a:	6010      	str	r0, [r2, #0]
 800fe0c:	7019      	strb	r1, [r3, #0]
 800fe0e:	4608      	mov	r0, r1
 800fe10:	bc10      	pop	{r4}
 800fe12:	4770      	bx	lr

0800fe14 <__sfputs_r>:
 800fe14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe16:	4606      	mov	r6, r0
 800fe18:	460f      	mov	r7, r1
 800fe1a:	4614      	mov	r4, r2
 800fe1c:	18d5      	adds	r5, r2, r3
 800fe1e:	42ac      	cmp	r4, r5
 800fe20:	d101      	bne.n	800fe26 <__sfputs_r+0x12>
 800fe22:	2000      	movs	r0, #0
 800fe24:	e007      	b.n	800fe36 <__sfputs_r+0x22>
 800fe26:	463a      	mov	r2, r7
 800fe28:	4630      	mov	r0, r6
 800fe2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fe2e:	f7ff ffdc 	bl	800fdea <__sfputc_r>
 800fe32:	1c43      	adds	r3, r0, #1
 800fe34:	d1f3      	bne.n	800fe1e <__sfputs_r+0xa>
 800fe36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fe38 <_vfiprintf_r>:
 800fe38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe3c:	460d      	mov	r5, r1
 800fe3e:	4614      	mov	r4, r2
 800fe40:	4698      	mov	r8, r3
 800fe42:	4606      	mov	r6, r0
 800fe44:	b09d      	sub	sp, #116	; 0x74
 800fe46:	b118      	cbz	r0, 800fe50 <_vfiprintf_r+0x18>
 800fe48:	6983      	ldr	r3, [r0, #24]
 800fe4a:	b90b      	cbnz	r3, 800fe50 <_vfiprintf_r+0x18>
 800fe4c:	f7ff fec6 	bl	800fbdc <__sinit>
 800fe50:	4b89      	ldr	r3, [pc, #548]	; (8010078 <_vfiprintf_r+0x240>)
 800fe52:	429d      	cmp	r5, r3
 800fe54:	d11b      	bne.n	800fe8e <_vfiprintf_r+0x56>
 800fe56:	6875      	ldr	r5, [r6, #4]
 800fe58:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fe5a:	07d9      	lsls	r1, r3, #31
 800fe5c:	d405      	bmi.n	800fe6a <_vfiprintf_r+0x32>
 800fe5e:	89ab      	ldrh	r3, [r5, #12]
 800fe60:	059a      	lsls	r2, r3, #22
 800fe62:	d402      	bmi.n	800fe6a <_vfiprintf_r+0x32>
 800fe64:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fe66:	f7ff ff69 	bl	800fd3c <__retarget_lock_acquire_recursive>
 800fe6a:	89ab      	ldrh	r3, [r5, #12]
 800fe6c:	071b      	lsls	r3, r3, #28
 800fe6e:	d501      	bpl.n	800fe74 <_vfiprintf_r+0x3c>
 800fe70:	692b      	ldr	r3, [r5, #16]
 800fe72:	b9eb      	cbnz	r3, 800feb0 <_vfiprintf_r+0x78>
 800fe74:	4629      	mov	r1, r5
 800fe76:	4630      	mov	r0, r6
 800fe78:	f000 f960 	bl	801013c <__swsetup_r>
 800fe7c:	b1c0      	cbz	r0, 800feb0 <_vfiprintf_r+0x78>
 800fe7e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fe80:	07dc      	lsls	r4, r3, #31
 800fe82:	d50e      	bpl.n	800fea2 <_vfiprintf_r+0x6a>
 800fe84:	f04f 30ff 	mov.w	r0, #4294967295
 800fe88:	b01d      	add	sp, #116	; 0x74
 800fe8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe8e:	4b7b      	ldr	r3, [pc, #492]	; (801007c <_vfiprintf_r+0x244>)
 800fe90:	429d      	cmp	r5, r3
 800fe92:	d101      	bne.n	800fe98 <_vfiprintf_r+0x60>
 800fe94:	68b5      	ldr	r5, [r6, #8]
 800fe96:	e7df      	b.n	800fe58 <_vfiprintf_r+0x20>
 800fe98:	4b79      	ldr	r3, [pc, #484]	; (8010080 <_vfiprintf_r+0x248>)
 800fe9a:	429d      	cmp	r5, r3
 800fe9c:	bf08      	it	eq
 800fe9e:	68f5      	ldreq	r5, [r6, #12]
 800fea0:	e7da      	b.n	800fe58 <_vfiprintf_r+0x20>
 800fea2:	89ab      	ldrh	r3, [r5, #12]
 800fea4:	0598      	lsls	r0, r3, #22
 800fea6:	d4ed      	bmi.n	800fe84 <_vfiprintf_r+0x4c>
 800fea8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800feaa:	f7ff ff48 	bl	800fd3e <__retarget_lock_release_recursive>
 800feae:	e7e9      	b.n	800fe84 <_vfiprintf_r+0x4c>
 800feb0:	2300      	movs	r3, #0
 800feb2:	9309      	str	r3, [sp, #36]	; 0x24
 800feb4:	2320      	movs	r3, #32
 800feb6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800feba:	2330      	movs	r3, #48	; 0x30
 800febc:	f04f 0901 	mov.w	r9, #1
 800fec0:	f8cd 800c 	str.w	r8, [sp, #12]
 800fec4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8010084 <_vfiprintf_r+0x24c>
 800fec8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800fecc:	4623      	mov	r3, r4
 800fece:	469a      	mov	sl, r3
 800fed0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fed4:	b10a      	cbz	r2, 800feda <_vfiprintf_r+0xa2>
 800fed6:	2a25      	cmp	r2, #37	; 0x25
 800fed8:	d1f9      	bne.n	800fece <_vfiprintf_r+0x96>
 800feda:	ebba 0b04 	subs.w	fp, sl, r4
 800fede:	d00b      	beq.n	800fef8 <_vfiprintf_r+0xc0>
 800fee0:	465b      	mov	r3, fp
 800fee2:	4622      	mov	r2, r4
 800fee4:	4629      	mov	r1, r5
 800fee6:	4630      	mov	r0, r6
 800fee8:	f7ff ff94 	bl	800fe14 <__sfputs_r>
 800feec:	3001      	adds	r0, #1
 800feee:	f000 80aa 	beq.w	8010046 <_vfiprintf_r+0x20e>
 800fef2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fef4:	445a      	add	r2, fp
 800fef6:	9209      	str	r2, [sp, #36]	; 0x24
 800fef8:	f89a 3000 	ldrb.w	r3, [sl]
 800fefc:	2b00      	cmp	r3, #0
 800fefe:	f000 80a2 	beq.w	8010046 <_vfiprintf_r+0x20e>
 800ff02:	2300      	movs	r3, #0
 800ff04:	f04f 32ff 	mov.w	r2, #4294967295
 800ff08:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ff0c:	f10a 0a01 	add.w	sl, sl, #1
 800ff10:	9304      	str	r3, [sp, #16]
 800ff12:	9307      	str	r3, [sp, #28]
 800ff14:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800ff18:	931a      	str	r3, [sp, #104]	; 0x68
 800ff1a:	4654      	mov	r4, sl
 800ff1c:	2205      	movs	r2, #5
 800ff1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ff22:	4858      	ldr	r0, [pc, #352]	; (8010084 <_vfiprintf_r+0x24c>)
 800ff24:	f7fe f9c0 	bl	800e2a8 <memchr>
 800ff28:	9a04      	ldr	r2, [sp, #16]
 800ff2a:	b9d8      	cbnz	r0, 800ff64 <_vfiprintf_r+0x12c>
 800ff2c:	06d1      	lsls	r1, r2, #27
 800ff2e:	bf44      	itt	mi
 800ff30:	2320      	movmi	r3, #32
 800ff32:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ff36:	0713      	lsls	r3, r2, #28
 800ff38:	bf44      	itt	mi
 800ff3a:	232b      	movmi	r3, #43	; 0x2b
 800ff3c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ff40:	f89a 3000 	ldrb.w	r3, [sl]
 800ff44:	2b2a      	cmp	r3, #42	; 0x2a
 800ff46:	d015      	beq.n	800ff74 <_vfiprintf_r+0x13c>
 800ff48:	4654      	mov	r4, sl
 800ff4a:	2000      	movs	r0, #0
 800ff4c:	f04f 0c0a 	mov.w	ip, #10
 800ff50:	9a07      	ldr	r2, [sp, #28]
 800ff52:	4621      	mov	r1, r4
 800ff54:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ff58:	3b30      	subs	r3, #48	; 0x30
 800ff5a:	2b09      	cmp	r3, #9
 800ff5c:	d94e      	bls.n	800fffc <_vfiprintf_r+0x1c4>
 800ff5e:	b1b0      	cbz	r0, 800ff8e <_vfiprintf_r+0x156>
 800ff60:	9207      	str	r2, [sp, #28]
 800ff62:	e014      	b.n	800ff8e <_vfiprintf_r+0x156>
 800ff64:	eba0 0308 	sub.w	r3, r0, r8
 800ff68:	fa09 f303 	lsl.w	r3, r9, r3
 800ff6c:	4313      	orrs	r3, r2
 800ff6e:	46a2      	mov	sl, r4
 800ff70:	9304      	str	r3, [sp, #16]
 800ff72:	e7d2      	b.n	800ff1a <_vfiprintf_r+0xe2>
 800ff74:	9b03      	ldr	r3, [sp, #12]
 800ff76:	1d19      	adds	r1, r3, #4
 800ff78:	681b      	ldr	r3, [r3, #0]
 800ff7a:	9103      	str	r1, [sp, #12]
 800ff7c:	2b00      	cmp	r3, #0
 800ff7e:	bfbb      	ittet	lt
 800ff80:	425b      	neglt	r3, r3
 800ff82:	f042 0202 	orrlt.w	r2, r2, #2
 800ff86:	9307      	strge	r3, [sp, #28]
 800ff88:	9307      	strlt	r3, [sp, #28]
 800ff8a:	bfb8      	it	lt
 800ff8c:	9204      	strlt	r2, [sp, #16]
 800ff8e:	7823      	ldrb	r3, [r4, #0]
 800ff90:	2b2e      	cmp	r3, #46	; 0x2e
 800ff92:	d10c      	bne.n	800ffae <_vfiprintf_r+0x176>
 800ff94:	7863      	ldrb	r3, [r4, #1]
 800ff96:	2b2a      	cmp	r3, #42	; 0x2a
 800ff98:	d135      	bne.n	8010006 <_vfiprintf_r+0x1ce>
 800ff9a:	9b03      	ldr	r3, [sp, #12]
 800ff9c:	3402      	adds	r4, #2
 800ff9e:	1d1a      	adds	r2, r3, #4
 800ffa0:	681b      	ldr	r3, [r3, #0]
 800ffa2:	9203      	str	r2, [sp, #12]
 800ffa4:	2b00      	cmp	r3, #0
 800ffa6:	bfb8      	it	lt
 800ffa8:	f04f 33ff 	movlt.w	r3, #4294967295
 800ffac:	9305      	str	r3, [sp, #20]
 800ffae:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8010088 <_vfiprintf_r+0x250>
 800ffb2:	2203      	movs	r2, #3
 800ffb4:	4650      	mov	r0, sl
 800ffb6:	7821      	ldrb	r1, [r4, #0]
 800ffb8:	f7fe f976 	bl	800e2a8 <memchr>
 800ffbc:	b140      	cbz	r0, 800ffd0 <_vfiprintf_r+0x198>
 800ffbe:	2340      	movs	r3, #64	; 0x40
 800ffc0:	eba0 000a 	sub.w	r0, r0, sl
 800ffc4:	fa03 f000 	lsl.w	r0, r3, r0
 800ffc8:	9b04      	ldr	r3, [sp, #16]
 800ffca:	3401      	adds	r4, #1
 800ffcc:	4303      	orrs	r3, r0
 800ffce:	9304      	str	r3, [sp, #16]
 800ffd0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ffd4:	2206      	movs	r2, #6
 800ffd6:	482d      	ldr	r0, [pc, #180]	; (801008c <_vfiprintf_r+0x254>)
 800ffd8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800ffdc:	f7fe f964 	bl	800e2a8 <memchr>
 800ffe0:	2800      	cmp	r0, #0
 800ffe2:	d03f      	beq.n	8010064 <_vfiprintf_r+0x22c>
 800ffe4:	4b2a      	ldr	r3, [pc, #168]	; (8010090 <_vfiprintf_r+0x258>)
 800ffe6:	bb1b      	cbnz	r3, 8010030 <_vfiprintf_r+0x1f8>
 800ffe8:	9b03      	ldr	r3, [sp, #12]
 800ffea:	3307      	adds	r3, #7
 800ffec:	f023 0307 	bic.w	r3, r3, #7
 800fff0:	3308      	adds	r3, #8
 800fff2:	9303      	str	r3, [sp, #12]
 800fff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fff6:	443b      	add	r3, r7
 800fff8:	9309      	str	r3, [sp, #36]	; 0x24
 800fffa:	e767      	b.n	800fecc <_vfiprintf_r+0x94>
 800fffc:	460c      	mov	r4, r1
 800fffe:	2001      	movs	r0, #1
 8010000:	fb0c 3202 	mla	r2, ip, r2, r3
 8010004:	e7a5      	b.n	800ff52 <_vfiprintf_r+0x11a>
 8010006:	2300      	movs	r3, #0
 8010008:	f04f 0c0a 	mov.w	ip, #10
 801000c:	4619      	mov	r1, r3
 801000e:	3401      	adds	r4, #1
 8010010:	9305      	str	r3, [sp, #20]
 8010012:	4620      	mov	r0, r4
 8010014:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010018:	3a30      	subs	r2, #48	; 0x30
 801001a:	2a09      	cmp	r2, #9
 801001c:	d903      	bls.n	8010026 <_vfiprintf_r+0x1ee>
 801001e:	2b00      	cmp	r3, #0
 8010020:	d0c5      	beq.n	800ffae <_vfiprintf_r+0x176>
 8010022:	9105      	str	r1, [sp, #20]
 8010024:	e7c3      	b.n	800ffae <_vfiprintf_r+0x176>
 8010026:	4604      	mov	r4, r0
 8010028:	2301      	movs	r3, #1
 801002a:	fb0c 2101 	mla	r1, ip, r1, r2
 801002e:	e7f0      	b.n	8010012 <_vfiprintf_r+0x1da>
 8010030:	ab03      	add	r3, sp, #12
 8010032:	9300      	str	r3, [sp, #0]
 8010034:	462a      	mov	r2, r5
 8010036:	4630      	mov	r0, r6
 8010038:	4b16      	ldr	r3, [pc, #88]	; (8010094 <_vfiprintf_r+0x25c>)
 801003a:	a904      	add	r1, sp, #16
 801003c:	f7fb fa0e 	bl	800b45c <_printf_float>
 8010040:	4607      	mov	r7, r0
 8010042:	1c78      	adds	r0, r7, #1
 8010044:	d1d6      	bne.n	800fff4 <_vfiprintf_r+0x1bc>
 8010046:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010048:	07d9      	lsls	r1, r3, #31
 801004a:	d405      	bmi.n	8010058 <_vfiprintf_r+0x220>
 801004c:	89ab      	ldrh	r3, [r5, #12]
 801004e:	059a      	lsls	r2, r3, #22
 8010050:	d402      	bmi.n	8010058 <_vfiprintf_r+0x220>
 8010052:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010054:	f7ff fe73 	bl	800fd3e <__retarget_lock_release_recursive>
 8010058:	89ab      	ldrh	r3, [r5, #12]
 801005a:	065b      	lsls	r3, r3, #25
 801005c:	f53f af12 	bmi.w	800fe84 <_vfiprintf_r+0x4c>
 8010060:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010062:	e711      	b.n	800fe88 <_vfiprintf_r+0x50>
 8010064:	ab03      	add	r3, sp, #12
 8010066:	9300      	str	r3, [sp, #0]
 8010068:	462a      	mov	r2, r5
 801006a:	4630      	mov	r0, r6
 801006c:	4b09      	ldr	r3, [pc, #36]	; (8010094 <_vfiprintf_r+0x25c>)
 801006e:	a904      	add	r1, sp, #16
 8010070:	f7fb fc90 	bl	800b994 <_printf_i>
 8010074:	e7e4      	b.n	8010040 <_vfiprintf_r+0x208>
 8010076:	bf00      	nop
 8010078:	0801169c 	.word	0x0801169c
 801007c:	080116bc 	.word	0x080116bc
 8010080:	0801167c 	.word	0x0801167c
 8010084:	08011614 	.word	0x08011614
 8010088:	0801161a 	.word	0x0801161a
 801008c:	0801161e 	.word	0x0801161e
 8010090:	0800b45d 	.word	0x0800b45d
 8010094:	0800fe15 	.word	0x0800fe15

08010098 <__swbuf_r>:
 8010098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801009a:	460e      	mov	r6, r1
 801009c:	4614      	mov	r4, r2
 801009e:	4605      	mov	r5, r0
 80100a0:	b118      	cbz	r0, 80100aa <__swbuf_r+0x12>
 80100a2:	6983      	ldr	r3, [r0, #24]
 80100a4:	b90b      	cbnz	r3, 80100aa <__swbuf_r+0x12>
 80100a6:	f7ff fd99 	bl	800fbdc <__sinit>
 80100aa:	4b21      	ldr	r3, [pc, #132]	; (8010130 <__swbuf_r+0x98>)
 80100ac:	429c      	cmp	r4, r3
 80100ae:	d12b      	bne.n	8010108 <__swbuf_r+0x70>
 80100b0:	686c      	ldr	r4, [r5, #4]
 80100b2:	69a3      	ldr	r3, [r4, #24]
 80100b4:	60a3      	str	r3, [r4, #8]
 80100b6:	89a3      	ldrh	r3, [r4, #12]
 80100b8:	071a      	lsls	r2, r3, #28
 80100ba:	d52f      	bpl.n	801011c <__swbuf_r+0x84>
 80100bc:	6923      	ldr	r3, [r4, #16]
 80100be:	b36b      	cbz	r3, 801011c <__swbuf_r+0x84>
 80100c0:	6923      	ldr	r3, [r4, #16]
 80100c2:	6820      	ldr	r0, [r4, #0]
 80100c4:	b2f6      	uxtb	r6, r6
 80100c6:	1ac0      	subs	r0, r0, r3
 80100c8:	6963      	ldr	r3, [r4, #20]
 80100ca:	4637      	mov	r7, r6
 80100cc:	4283      	cmp	r3, r0
 80100ce:	dc04      	bgt.n	80100da <__swbuf_r+0x42>
 80100d0:	4621      	mov	r1, r4
 80100d2:	4628      	mov	r0, r5
 80100d4:	f7ff fcee 	bl	800fab4 <_fflush_r>
 80100d8:	bb30      	cbnz	r0, 8010128 <__swbuf_r+0x90>
 80100da:	68a3      	ldr	r3, [r4, #8]
 80100dc:	3001      	adds	r0, #1
 80100de:	3b01      	subs	r3, #1
 80100e0:	60a3      	str	r3, [r4, #8]
 80100e2:	6823      	ldr	r3, [r4, #0]
 80100e4:	1c5a      	adds	r2, r3, #1
 80100e6:	6022      	str	r2, [r4, #0]
 80100e8:	701e      	strb	r6, [r3, #0]
 80100ea:	6963      	ldr	r3, [r4, #20]
 80100ec:	4283      	cmp	r3, r0
 80100ee:	d004      	beq.n	80100fa <__swbuf_r+0x62>
 80100f0:	89a3      	ldrh	r3, [r4, #12]
 80100f2:	07db      	lsls	r3, r3, #31
 80100f4:	d506      	bpl.n	8010104 <__swbuf_r+0x6c>
 80100f6:	2e0a      	cmp	r6, #10
 80100f8:	d104      	bne.n	8010104 <__swbuf_r+0x6c>
 80100fa:	4621      	mov	r1, r4
 80100fc:	4628      	mov	r0, r5
 80100fe:	f7ff fcd9 	bl	800fab4 <_fflush_r>
 8010102:	b988      	cbnz	r0, 8010128 <__swbuf_r+0x90>
 8010104:	4638      	mov	r0, r7
 8010106:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010108:	4b0a      	ldr	r3, [pc, #40]	; (8010134 <__swbuf_r+0x9c>)
 801010a:	429c      	cmp	r4, r3
 801010c:	d101      	bne.n	8010112 <__swbuf_r+0x7a>
 801010e:	68ac      	ldr	r4, [r5, #8]
 8010110:	e7cf      	b.n	80100b2 <__swbuf_r+0x1a>
 8010112:	4b09      	ldr	r3, [pc, #36]	; (8010138 <__swbuf_r+0xa0>)
 8010114:	429c      	cmp	r4, r3
 8010116:	bf08      	it	eq
 8010118:	68ec      	ldreq	r4, [r5, #12]
 801011a:	e7ca      	b.n	80100b2 <__swbuf_r+0x1a>
 801011c:	4621      	mov	r1, r4
 801011e:	4628      	mov	r0, r5
 8010120:	f000 f80c 	bl	801013c <__swsetup_r>
 8010124:	2800      	cmp	r0, #0
 8010126:	d0cb      	beq.n	80100c0 <__swbuf_r+0x28>
 8010128:	f04f 37ff 	mov.w	r7, #4294967295
 801012c:	e7ea      	b.n	8010104 <__swbuf_r+0x6c>
 801012e:	bf00      	nop
 8010130:	0801169c 	.word	0x0801169c
 8010134:	080116bc 	.word	0x080116bc
 8010138:	0801167c 	.word	0x0801167c

0801013c <__swsetup_r>:
 801013c:	4b32      	ldr	r3, [pc, #200]	; (8010208 <__swsetup_r+0xcc>)
 801013e:	b570      	push	{r4, r5, r6, lr}
 8010140:	681d      	ldr	r5, [r3, #0]
 8010142:	4606      	mov	r6, r0
 8010144:	460c      	mov	r4, r1
 8010146:	b125      	cbz	r5, 8010152 <__swsetup_r+0x16>
 8010148:	69ab      	ldr	r3, [r5, #24]
 801014a:	b913      	cbnz	r3, 8010152 <__swsetup_r+0x16>
 801014c:	4628      	mov	r0, r5
 801014e:	f7ff fd45 	bl	800fbdc <__sinit>
 8010152:	4b2e      	ldr	r3, [pc, #184]	; (801020c <__swsetup_r+0xd0>)
 8010154:	429c      	cmp	r4, r3
 8010156:	d10f      	bne.n	8010178 <__swsetup_r+0x3c>
 8010158:	686c      	ldr	r4, [r5, #4]
 801015a:	89a3      	ldrh	r3, [r4, #12]
 801015c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8010160:	0719      	lsls	r1, r3, #28
 8010162:	d42c      	bmi.n	80101be <__swsetup_r+0x82>
 8010164:	06dd      	lsls	r5, r3, #27
 8010166:	d411      	bmi.n	801018c <__swsetup_r+0x50>
 8010168:	2309      	movs	r3, #9
 801016a:	6033      	str	r3, [r6, #0]
 801016c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8010170:	f04f 30ff 	mov.w	r0, #4294967295
 8010174:	81a3      	strh	r3, [r4, #12]
 8010176:	e03e      	b.n	80101f6 <__swsetup_r+0xba>
 8010178:	4b25      	ldr	r3, [pc, #148]	; (8010210 <__swsetup_r+0xd4>)
 801017a:	429c      	cmp	r4, r3
 801017c:	d101      	bne.n	8010182 <__swsetup_r+0x46>
 801017e:	68ac      	ldr	r4, [r5, #8]
 8010180:	e7eb      	b.n	801015a <__swsetup_r+0x1e>
 8010182:	4b24      	ldr	r3, [pc, #144]	; (8010214 <__swsetup_r+0xd8>)
 8010184:	429c      	cmp	r4, r3
 8010186:	bf08      	it	eq
 8010188:	68ec      	ldreq	r4, [r5, #12]
 801018a:	e7e6      	b.n	801015a <__swsetup_r+0x1e>
 801018c:	0758      	lsls	r0, r3, #29
 801018e:	d512      	bpl.n	80101b6 <__swsetup_r+0x7a>
 8010190:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010192:	b141      	cbz	r1, 80101a6 <__swsetup_r+0x6a>
 8010194:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8010198:	4299      	cmp	r1, r3
 801019a:	d002      	beq.n	80101a2 <__swsetup_r+0x66>
 801019c:	4630      	mov	r0, r6
 801019e:	f7fe fd5d 	bl	800ec5c <_free_r>
 80101a2:	2300      	movs	r3, #0
 80101a4:	6363      	str	r3, [r4, #52]	; 0x34
 80101a6:	89a3      	ldrh	r3, [r4, #12]
 80101a8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80101ac:	81a3      	strh	r3, [r4, #12]
 80101ae:	2300      	movs	r3, #0
 80101b0:	6063      	str	r3, [r4, #4]
 80101b2:	6923      	ldr	r3, [r4, #16]
 80101b4:	6023      	str	r3, [r4, #0]
 80101b6:	89a3      	ldrh	r3, [r4, #12]
 80101b8:	f043 0308 	orr.w	r3, r3, #8
 80101bc:	81a3      	strh	r3, [r4, #12]
 80101be:	6923      	ldr	r3, [r4, #16]
 80101c0:	b94b      	cbnz	r3, 80101d6 <__swsetup_r+0x9a>
 80101c2:	89a3      	ldrh	r3, [r4, #12]
 80101c4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80101c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80101cc:	d003      	beq.n	80101d6 <__swsetup_r+0x9a>
 80101ce:	4621      	mov	r1, r4
 80101d0:	4630      	mov	r0, r6
 80101d2:	f000 f84d 	bl	8010270 <__smakebuf_r>
 80101d6:	89a0      	ldrh	r0, [r4, #12]
 80101d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80101dc:	f010 0301 	ands.w	r3, r0, #1
 80101e0:	d00a      	beq.n	80101f8 <__swsetup_r+0xbc>
 80101e2:	2300      	movs	r3, #0
 80101e4:	60a3      	str	r3, [r4, #8]
 80101e6:	6963      	ldr	r3, [r4, #20]
 80101e8:	425b      	negs	r3, r3
 80101ea:	61a3      	str	r3, [r4, #24]
 80101ec:	6923      	ldr	r3, [r4, #16]
 80101ee:	b943      	cbnz	r3, 8010202 <__swsetup_r+0xc6>
 80101f0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80101f4:	d1ba      	bne.n	801016c <__swsetup_r+0x30>
 80101f6:	bd70      	pop	{r4, r5, r6, pc}
 80101f8:	0781      	lsls	r1, r0, #30
 80101fa:	bf58      	it	pl
 80101fc:	6963      	ldrpl	r3, [r4, #20]
 80101fe:	60a3      	str	r3, [r4, #8]
 8010200:	e7f4      	b.n	80101ec <__swsetup_r+0xb0>
 8010202:	2000      	movs	r0, #0
 8010204:	e7f7      	b.n	80101f6 <__swsetup_r+0xba>
 8010206:	bf00      	nop
 8010208:	200001a4 	.word	0x200001a4
 801020c:	0801169c 	.word	0x0801169c
 8010210:	080116bc 	.word	0x080116bc
 8010214:	0801167c 	.word	0x0801167c

08010218 <abort>:
 8010218:	2006      	movs	r0, #6
 801021a:	b508      	push	{r3, lr}
 801021c:	f000 f898 	bl	8010350 <raise>
 8010220:	2001      	movs	r0, #1
 8010222:	f7f5 fa8a 	bl	800573a <_exit>

08010226 <__swhatbuf_r>:
 8010226:	b570      	push	{r4, r5, r6, lr}
 8010228:	460e      	mov	r6, r1
 801022a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801022e:	4614      	mov	r4, r2
 8010230:	2900      	cmp	r1, #0
 8010232:	461d      	mov	r5, r3
 8010234:	b096      	sub	sp, #88	; 0x58
 8010236:	da08      	bge.n	801024a <__swhatbuf_r+0x24>
 8010238:	2200      	movs	r2, #0
 801023a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801023e:	602a      	str	r2, [r5, #0]
 8010240:	061a      	lsls	r2, r3, #24
 8010242:	d410      	bmi.n	8010266 <__swhatbuf_r+0x40>
 8010244:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010248:	e00e      	b.n	8010268 <__swhatbuf_r+0x42>
 801024a:	466a      	mov	r2, sp
 801024c:	f000 f89c 	bl	8010388 <_fstat_r>
 8010250:	2800      	cmp	r0, #0
 8010252:	dbf1      	blt.n	8010238 <__swhatbuf_r+0x12>
 8010254:	9a01      	ldr	r2, [sp, #4]
 8010256:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801025a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801025e:	425a      	negs	r2, r3
 8010260:	415a      	adcs	r2, r3
 8010262:	602a      	str	r2, [r5, #0]
 8010264:	e7ee      	b.n	8010244 <__swhatbuf_r+0x1e>
 8010266:	2340      	movs	r3, #64	; 0x40
 8010268:	2000      	movs	r0, #0
 801026a:	6023      	str	r3, [r4, #0]
 801026c:	b016      	add	sp, #88	; 0x58
 801026e:	bd70      	pop	{r4, r5, r6, pc}

08010270 <__smakebuf_r>:
 8010270:	898b      	ldrh	r3, [r1, #12]
 8010272:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010274:	079d      	lsls	r5, r3, #30
 8010276:	4606      	mov	r6, r0
 8010278:	460c      	mov	r4, r1
 801027a:	d507      	bpl.n	801028c <__smakebuf_r+0x1c>
 801027c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8010280:	6023      	str	r3, [r4, #0]
 8010282:	6123      	str	r3, [r4, #16]
 8010284:	2301      	movs	r3, #1
 8010286:	6163      	str	r3, [r4, #20]
 8010288:	b002      	add	sp, #8
 801028a:	bd70      	pop	{r4, r5, r6, pc}
 801028c:	466a      	mov	r2, sp
 801028e:	ab01      	add	r3, sp, #4
 8010290:	f7ff ffc9 	bl	8010226 <__swhatbuf_r>
 8010294:	9900      	ldr	r1, [sp, #0]
 8010296:	4605      	mov	r5, r0
 8010298:	4630      	mov	r0, r6
 801029a:	f7fe fd47 	bl	800ed2c <_malloc_r>
 801029e:	b948      	cbnz	r0, 80102b4 <__smakebuf_r+0x44>
 80102a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80102a4:	059a      	lsls	r2, r3, #22
 80102a6:	d4ef      	bmi.n	8010288 <__smakebuf_r+0x18>
 80102a8:	f023 0303 	bic.w	r3, r3, #3
 80102ac:	f043 0302 	orr.w	r3, r3, #2
 80102b0:	81a3      	strh	r3, [r4, #12]
 80102b2:	e7e3      	b.n	801027c <__smakebuf_r+0xc>
 80102b4:	4b0d      	ldr	r3, [pc, #52]	; (80102ec <__smakebuf_r+0x7c>)
 80102b6:	62b3      	str	r3, [r6, #40]	; 0x28
 80102b8:	89a3      	ldrh	r3, [r4, #12]
 80102ba:	6020      	str	r0, [r4, #0]
 80102bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80102c0:	81a3      	strh	r3, [r4, #12]
 80102c2:	9b00      	ldr	r3, [sp, #0]
 80102c4:	6120      	str	r0, [r4, #16]
 80102c6:	6163      	str	r3, [r4, #20]
 80102c8:	9b01      	ldr	r3, [sp, #4]
 80102ca:	b15b      	cbz	r3, 80102e4 <__smakebuf_r+0x74>
 80102cc:	4630      	mov	r0, r6
 80102ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80102d2:	f000 f86b 	bl	80103ac <_isatty_r>
 80102d6:	b128      	cbz	r0, 80102e4 <__smakebuf_r+0x74>
 80102d8:	89a3      	ldrh	r3, [r4, #12]
 80102da:	f023 0303 	bic.w	r3, r3, #3
 80102de:	f043 0301 	orr.w	r3, r3, #1
 80102e2:	81a3      	strh	r3, [r4, #12]
 80102e4:	89a0      	ldrh	r0, [r4, #12]
 80102e6:	4305      	orrs	r5, r0
 80102e8:	81a5      	strh	r5, [r4, #12]
 80102ea:	e7cd      	b.n	8010288 <__smakebuf_r+0x18>
 80102ec:	0800fb75 	.word	0x0800fb75

080102f0 <_malloc_usable_size_r>:
 80102f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80102f4:	1f18      	subs	r0, r3, #4
 80102f6:	2b00      	cmp	r3, #0
 80102f8:	bfbc      	itt	lt
 80102fa:	580b      	ldrlt	r3, [r1, r0]
 80102fc:	18c0      	addlt	r0, r0, r3
 80102fe:	4770      	bx	lr

08010300 <_raise_r>:
 8010300:	291f      	cmp	r1, #31
 8010302:	b538      	push	{r3, r4, r5, lr}
 8010304:	4604      	mov	r4, r0
 8010306:	460d      	mov	r5, r1
 8010308:	d904      	bls.n	8010314 <_raise_r+0x14>
 801030a:	2316      	movs	r3, #22
 801030c:	6003      	str	r3, [r0, #0]
 801030e:	f04f 30ff 	mov.w	r0, #4294967295
 8010312:	bd38      	pop	{r3, r4, r5, pc}
 8010314:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8010316:	b112      	cbz	r2, 801031e <_raise_r+0x1e>
 8010318:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801031c:	b94b      	cbnz	r3, 8010332 <_raise_r+0x32>
 801031e:	4620      	mov	r0, r4
 8010320:	f000 f830 	bl	8010384 <_getpid_r>
 8010324:	462a      	mov	r2, r5
 8010326:	4601      	mov	r1, r0
 8010328:	4620      	mov	r0, r4
 801032a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801032e:	f000 b817 	b.w	8010360 <_kill_r>
 8010332:	2b01      	cmp	r3, #1
 8010334:	d00a      	beq.n	801034c <_raise_r+0x4c>
 8010336:	1c59      	adds	r1, r3, #1
 8010338:	d103      	bne.n	8010342 <_raise_r+0x42>
 801033a:	2316      	movs	r3, #22
 801033c:	6003      	str	r3, [r0, #0]
 801033e:	2001      	movs	r0, #1
 8010340:	e7e7      	b.n	8010312 <_raise_r+0x12>
 8010342:	2400      	movs	r4, #0
 8010344:	4628      	mov	r0, r5
 8010346:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801034a:	4798      	blx	r3
 801034c:	2000      	movs	r0, #0
 801034e:	e7e0      	b.n	8010312 <_raise_r+0x12>

08010350 <raise>:
 8010350:	4b02      	ldr	r3, [pc, #8]	; (801035c <raise+0xc>)
 8010352:	4601      	mov	r1, r0
 8010354:	6818      	ldr	r0, [r3, #0]
 8010356:	f7ff bfd3 	b.w	8010300 <_raise_r>
 801035a:	bf00      	nop
 801035c:	200001a4 	.word	0x200001a4

08010360 <_kill_r>:
 8010360:	b538      	push	{r3, r4, r5, lr}
 8010362:	2300      	movs	r3, #0
 8010364:	4d06      	ldr	r5, [pc, #24]	; (8010380 <_kill_r+0x20>)
 8010366:	4604      	mov	r4, r0
 8010368:	4608      	mov	r0, r1
 801036a:	4611      	mov	r1, r2
 801036c:	602b      	str	r3, [r5, #0]
 801036e:	f7f5 f9d4 	bl	800571a <_kill>
 8010372:	1c43      	adds	r3, r0, #1
 8010374:	d102      	bne.n	801037c <_kill_r+0x1c>
 8010376:	682b      	ldr	r3, [r5, #0]
 8010378:	b103      	cbz	r3, 801037c <_kill_r+0x1c>
 801037a:	6023      	str	r3, [r4, #0]
 801037c:	bd38      	pop	{r3, r4, r5, pc}
 801037e:	bf00      	nop
 8010380:	20001694 	.word	0x20001694

08010384 <_getpid_r>:
 8010384:	f7f5 b9c2 	b.w	800570c <_getpid>

08010388 <_fstat_r>:
 8010388:	b538      	push	{r3, r4, r5, lr}
 801038a:	2300      	movs	r3, #0
 801038c:	4d06      	ldr	r5, [pc, #24]	; (80103a8 <_fstat_r+0x20>)
 801038e:	4604      	mov	r4, r0
 8010390:	4608      	mov	r0, r1
 8010392:	4611      	mov	r1, r2
 8010394:	602b      	str	r3, [r5, #0]
 8010396:	f7f5 fa1e 	bl	80057d6 <_fstat>
 801039a:	1c43      	adds	r3, r0, #1
 801039c:	d102      	bne.n	80103a4 <_fstat_r+0x1c>
 801039e:	682b      	ldr	r3, [r5, #0]
 80103a0:	b103      	cbz	r3, 80103a4 <_fstat_r+0x1c>
 80103a2:	6023      	str	r3, [r4, #0]
 80103a4:	bd38      	pop	{r3, r4, r5, pc}
 80103a6:	bf00      	nop
 80103a8:	20001694 	.word	0x20001694

080103ac <_isatty_r>:
 80103ac:	b538      	push	{r3, r4, r5, lr}
 80103ae:	2300      	movs	r3, #0
 80103b0:	4d05      	ldr	r5, [pc, #20]	; (80103c8 <_isatty_r+0x1c>)
 80103b2:	4604      	mov	r4, r0
 80103b4:	4608      	mov	r0, r1
 80103b6:	602b      	str	r3, [r5, #0]
 80103b8:	f7f5 fa1c 	bl	80057f4 <_isatty>
 80103bc:	1c43      	adds	r3, r0, #1
 80103be:	d102      	bne.n	80103c6 <_isatty_r+0x1a>
 80103c0:	682b      	ldr	r3, [r5, #0]
 80103c2:	b103      	cbz	r3, 80103c6 <_isatty_r+0x1a>
 80103c4:	6023      	str	r3, [r4, #0]
 80103c6:	bd38      	pop	{r3, r4, r5, pc}
 80103c8:	20001694 	.word	0x20001694

080103cc <_init>:
 80103cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103ce:	bf00      	nop
 80103d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80103d2:	bc08      	pop	{r3}
 80103d4:	469e      	mov	lr, r3
 80103d6:	4770      	bx	lr

080103d8 <_fini>:
 80103d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103da:	bf00      	nop
 80103dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80103de:	bc08      	pop	{r3}
 80103e0:	469e      	mov	lr, r3
 80103e2:	4770      	bx	lr
 80103e4:	0000      	movs	r0, r0
	...

080103e8 <__HAL_GPIO_EXTI_Callback_veneer>:
 80103e8:	f85f f000 	ldr.w	pc, [pc]	; 80103ec <__HAL_GPIO_EXTI_Callback_veneer+0x4>
 80103ec:	2000053d 	.word	0x2000053d

080103f0 <__DAC_SendInit_veneer>:
 80103f0:	f85f f000 	ldr.w	pc, [pc]	; 80103f4 <__DAC_SendInit_veneer+0x4>
 80103f4:	20000379 	.word	0x20000379

080103f8 <__DAC_Write_veneer>:
 80103f8:	f85f f000 	ldr.w	pc, [pc]	; 80103fc <__DAC_Write_veneer+0x4>
 80103fc:	20000489 	.word	0x20000489

Disassembly of section .data:

20000000 <USB_rx_command_buffer>:
20000000:	2000093c 00000000 00010040              <.. ....@...

2000000c <amp_target_speed>:
2000000c:	2b8cbccc                                ...+

20000010 <ramp_target_speed>:
20000010:	3dcccccd                                ...=

20000014 <DDS_target_multipiller>:
20000014:	00000001                                ....

20000018 <mode>:
20000018:	00000003                                ....

2000001c <DDS_clock_frequecny>:
2000001c:	4b189680                                ...K

20000020 <Display_need_wakeup>:
20000020:	                                         .

20000021 <CAL_STATE>:
20000021:	                                         ...

20000024 <SystemCoreClock>:
20000024:	001fff68                                h...

20000028 <TMP117_DeviceID>:
20000028:	00000092                                ....

2000002c <uwTickFreq>:
2000002c:	00000001                                ....

20000030 <uwTickPrio>:
20000030:	00000010                                ....

20000034 <USBD_CDC>:
20000034:	0800a1d5 0800a191 0800a0cd 00000000     ................
20000044:	08009fe9 0800a085 0800a055 00000000     ........U.......
	...
2000005c:	0800a025 0800a015 0800a035 0800a045     %.......5...E...

2000006c <USBD_CDC_CfgFSDesc>:
2000006c:	00430209 c0000102 00040932 02020100     ..C.....2.......
2000007c:	24050001 05011000 01000124 02022404     ...$....$....$..
2000008c:	00062405 82050701 10000803 00010409     .$..............
2000009c:	00000a02 01050700 00004002 02810507     .........@......
200000ac:	00000040                                @...

200000b0 <USBD_CDC_CfgHSDesc>:
200000b0:	00430209 c0000102 00040932 02020100     ..C.....2.......
200000c0:	24050001 05011000 01000124 02022404     ...$....$....$..
200000d0:	00062405 82050701 10000803 00010409     .$..............
200000e0:	00000a02 01050700 00020002 02810507     ................
200000f0:	00000200                                ....

200000f4 <USBD_CDC_DeviceQualifierDesc>:
200000f4:	0200060a 40000000 00000001              .......@....

20000100 <USBD_CDC_OtherSpeedCfgDesc>:
20000100:	00430709 c0040102 00040932 02020100     ..C.....2.......
20000110:	24050001 05011000 01000124 02022404     ...$....$....$..
20000120:	00062405 82050701 10000803 00010409     .$..............
20000130:	00000a02 01050700 00004002 02810507     .........@......
20000140:	00000040                                @...

20000144 <USBD_Interface_fops_FS>:
20000144:	0800abf9 0800abf5 0800ac21 0800ac3d     ........!...=...

20000154 <FS_Desc>:
20000154:	0800ace1 0800aced 0800acf9 0800ad15     ................
20000164:	0800ad69 0800ad31 0800ad4d              i...1...M...

20000170 <USBD_FS_DeviceDesc>:
20000170:	02000112 40000202 57400483 02010200     .......@..@W....
20000180:	00000103                                ....

20000184 <USBD_LangIDDesc>:
20000184:	04090304                                ....

20000188 <USBD_StringSerial>:
20000188:	0000031a 00000000 00000000 00000000     ................
	...

200001a4 <_impure_ptr>:
200001a4:	200001a8                                ... 

200001a8 <impure_data>:
200001a8:	00000000 0801169c 080116bc 0801167c     ............|...
	...

20000208 <numempty>:
20000208:	000000ff                                ....

2000020c <__global_locale>:
2000020c:	00000043 00000000 00000000 00000000     C...............
	...
2000022c:	00000043 00000000 00000000 00000000     C...............
	...
2000024c:	00000043 00000000 00000000 00000000     C...............
	...
2000026c:	00000043 00000000 00000000 00000000     C...............
	...
2000028c:	00000043 00000000 00000000 00000000     C...............
	...
200002ac:	00000043 00000000 00000000 00000000     C...............
	...
200002cc:	00000043 00000000 00000000 00000000     C...............
	...
200002ec:	0800f959 0800e285 00000000 080112b0     Y...............
200002fc:	080114a4 0801167b 0801167b 0801167b     ....{...{...{...
2000030c:	0801167b 0801167b 0801167b 0801167b     {...{...{...{...
2000031c:	0801167b 0801167b ffffffff ffffffff     {...{...........
2000032c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000354:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000378 <DAC_SendInit>:
{
20000378:	b580      	push	{r7, lr}
2000037a:	af00      	add	r7, sp, #0
	DAC_tx_buffer=0x02000000; // Write CONFIG1
2000037c:	4b3d      	ldr	r3, [pc, #244]	; (20000474 <DAC_SendInit+0xfc>)
2000037e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
20000382:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(cfg.PDN & 0x01)<<4;
20000384:	4b3c      	ldr	r3, [pc, #240]	; (20000478 <DAC_SendInit+0x100>)
20000386:	7a1b      	ldrb	r3, [r3, #8]
20000388:	011b      	lsls	r3, r3, #4
2000038a:	f003 0210 	and.w	r2, r3, #16
2000038e:	4b39      	ldr	r3, [pc, #228]	; (20000474 <DAC_SendInit+0xfc>)
20000390:	681b      	ldr	r3, [r3, #0]
20000392:	4413      	add	r3, r2
20000394:	4a37      	ldr	r2, [pc, #220]	; (20000474 <DAC_SendInit+0xfc>)
20000396:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.VREFVAL & 0x06)<<6;
20000398:	4b37      	ldr	r3, [pc, #220]	; (20000478 <DAC_SendInit+0x100>)
2000039a:	79db      	ldrb	r3, [r3, #7]
2000039c:	019b      	lsls	r3, r3, #6
2000039e:	f403 72c0 	and.w	r2, r3, #384	; 0x180
200003a2:	4b34      	ldr	r3, [pc, #208]	; (20000474 <DAC_SendInit+0xfc>)
200003a4:	681b      	ldr	r3, [r3, #0]
200003a6:	4413      	add	r3, r2
200003a8:	4a32      	ldr	r2, [pc, #200]	; (20000474 <DAC_SendInit+0xfc>)
200003aa:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSET & 0x01)<<10;
200003ac:	4b32      	ldr	r3, [pc, #200]	; (20000478 <DAC_SendInit+0x100>)
200003ae:	799b      	ldrb	r3, [r3, #6]
200003b0:	029b      	lsls	r3, r3, #10
200003b2:	f403 6280 	and.w	r2, r3, #1024	; 0x400
200003b6:	4b2f      	ldr	r3, [pc, #188]	; (20000474 <DAC_SendInit+0xfc>)
200003b8:	681b      	ldr	r3, [r3, #0]
200003ba:	4413      	add	r3, r2
200003bc:	4a2d      	ldr	r2, [pc, #180]	; (20000474 <DAC_SendInit+0xfc>)
200003be:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.DSDO & 0x01)<<11;
200003c0:	4b2d      	ldr	r3, [pc, #180]	; (20000478 <DAC_SendInit+0x100>)
200003c2:	795b      	ldrb	r3, [r3, #5]
200003c4:	02db      	lsls	r3, r3, #11
200003c6:	f403 6200 	and.w	r2, r3, #2048	; 0x800
200003ca:	4b2a      	ldr	r3, [pc, #168]	; (20000474 <DAC_SendInit+0xfc>)
200003cc:	681b      	ldr	r3, [r3, #0]
200003ce:	4413      	add	r3, r2
200003d0:	4a28      	ldr	r2, [pc, #160]	; (20000474 <DAC_SendInit+0xfc>)
200003d2:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.ENALMP & 0x01)<<12;
200003d4:	4b28      	ldr	r3, [pc, #160]	; (20000478 <DAC_SendInit+0x100>)
200003d6:	791b      	ldrb	r3, [r3, #4]
200003d8:	031b      	lsls	r3, r3, #12
200003da:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
200003de:	4b25      	ldr	r3, [pc, #148]	; (20000474 <DAC_SendInit+0xfc>)
200003e0:	681b      	ldr	r3, [r3, #0]
200003e2:	4413      	add	r3, r2
200003e4:	4a23      	ldr	r2, [pc, #140]	; (20000474 <DAC_SendInit+0xfc>)
200003e6:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSDO & 0x01)<<13;
200003e8:	4b23      	ldr	r3, [pc, #140]	; (20000478 <DAC_SendInit+0x100>)
200003ea:	78db      	ldrb	r3, [r3, #3]
200003ec:	035b      	lsls	r3, r3, #13
200003ee:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
200003f2:	4b20      	ldr	r3, [pc, #128]	; (20000474 <DAC_SendInit+0xfc>)
200003f4:	681b      	ldr	r3, [r3, #0]
200003f6:	4413      	add	r3, r2
200003f8:	4a1e      	ldr	r2, [pc, #120]	; (20000474 <DAC_SendInit+0xfc>)
200003fa:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.LDACMODE & 0x01)<<14;
200003fc:	4b1e      	ldr	r3, [pc, #120]	; (20000478 <DAC_SendInit+0x100>)
200003fe:	789b      	ldrb	r3, [r3, #2]
20000400:	039b      	lsls	r3, r3, #14
20000402:	f403 4280 	and.w	r2, r3, #16384	; 0x4000
20000406:	4b1b      	ldr	r3, [pc, #108]	; (20000474 <DAC_SendInit+0xfc>)
20000408:	681b      	ldr	r3, [r3, #0]
2000040a:	4413      	add	r3, r2
2000040c:	4a19      	ldr	r2, [pc, #100]	; (20000474 <DAC_SendInit+0xfc>)
2000040e:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.TNH_MASK & 0x03)<<18;
20000410:	4b19      	ldr	r3, [pc, #100]	; (20000478 <DAC_SendInit+0x100>)
20000412:	785b      	ldrb	r3, [r3, #1]
20000414:	049b      	lsls	r3, r3, #18
20000416:	f403 2240 	and.w	r2, r3, #786432	; 0xc0000
2000041a:	4b16      	ldr	r3, [pc, #88]	; (20000474 <DAC_SendInit+0xfc>)
2000041c:	681b      	ldr	r3, [r3, #0]
2000041e:	4413      	add	r3, r2
20000420:	4a14      	ldr	r2, [pc, #80]	; (20000474 <DAC_SendInit+0xfc>)
20000422:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.EN_TMP_CAL & 0x01)<<23;
20000424:	4b14      	ldr	r3, [pc, #80]	; (20000478 <DAC_SendInit+0x100>)
20000426:	781b      	ldrb	r3, [r3, #0]
20000428:	05db      	lsls	r3, r3, #23
2000042a:	f403 0200 	and.w	r2, r3, #8388608	; 0x800000
2000042e:	4b11      	ldr	r3, [pc, #68]	; (20000474 <DAC_SendInit+0xfc>)
20000430:	681b      	ldr	r3, [r3, #0]
20000432:	4413      	add	r3, r2
20000434:	4a0f      	ldr	r2, [pc, #60]	; (20000474 <DAC_SendInit+0xfc>)
20000436:	6013      	str	r3, [r2, #0]
	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
20000438:	4b0e      	ldr	r3, [pc, #56]	; (20000474 <DAC_SendInit+0xfc>)
2000043a:	681b      	ldr	r3, [r3, #0]
2000043c:	0c1b      	lsrs	r3, r3, #16
2000043e:	b29a      	uxth	r2, r3
20000440:	4b0e      	ldr	r3, [pc, #56]	; (2000047c <DAC_SendInit+0x104>)
20000442:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
20000444:	4b0b      	ldr	r3, [pc, #44]	; (20000474 <DAC_SendInit+0xfc>)
20000446:	681b      	ldr	r3, [r3, #0]
20000448:	b29a      	uxth	r2, r3
2000044a:	4b0c      	ldr	r3, [pc, #48]	; (2000047c <DAC_SendInit+0x104>)
2000044c:	805a      	strh	r2, [r3, #2]
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
2000044e:	2200      	movs	r2, #0
20000450:	2110      	movs	r1, #16
20000452:	480b      	ldr	r0, [pc, #44]	; (20000480 <DAC_SendInit+0x108>)
20000454:	f000 f948 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,5);
20000458:	2305      	movs	r3, #5
2000045a:	2202      	movs	r2, #2
2000045c:	4907      	ldr	r1, [pc, #28]	; (2000047c <DAC_SendInit+0x104>)
2000045e:	4809      	ldr	r0, [pc, #36]	; (20000484 <DAC_SendInit+0x10c>)
20000460:	f000 f93e 	bl	200006e0 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
20000464:	2201      	movs	r2, #1
20000466:	2110      	movs	r1, #16
20000468:	4805      	ldr	r0, [pc, #20]	; (20000480 <DAC_SendInit+0x108>)
2000046a:	f000 f93d 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
}
2000046e:	bf00      	nop
20000470:	bd80      	pop	{r7, pc}
20000472:	bf00      	nop
20000474:	2000097c 	.word	0x2000097c
20000478:	20000984 	.word	0x20000984
2000047c:	20000980 	.word	0x20000980
20000480:	40020000 	.word	0x40020000
20000484:	200009c8 	.word	0x200009c8

20000488 <DAC_Write>:
{
20000488:	b580      	push	{r7, lr}
2000048a:	b082      	sub	sp, #8
2000048c:	af00      	add	r7, sp, #0
2000048e:	6078      	str	r0, [r7, #4]
	DAC_tx_buffer=0x01000000; // Write DAC-DATA
20000490:	4b18      	ldr	r3, [pc, #96]	; (200004f4 <DAC_Write+0x6c>)
20000492:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
20000496:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(value & 0xFFFFF)<<4;
20000498:	687b      	ldr	r3, [r7, #4]
2000049a:	011b      	lsls	r3, r3, #4
2000049c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
200004a0:	f023 030f 	bic.w	r3, r3, #15
200004a4:	4a13      	ldr	r2, [pc, #76]	; (200004f4 <DAC_Write+0x6c>)
200004a6:	6812      	ldr	r2, [r2, #0]
200004a8:	4413      	add	r3, r2
200004aa:	4a12      	ldr	r2, [pc, #72]	; (200004f4 <DAC_Write+0x6c>)
200004ac:	6013      	str	r3, [r2, #0]
	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
200004ae:	4b11      	ldr	r3, [pc, #68]	; (200004f4 <DAC_Write+0x6c>)
200004b0:	681b      	ldr	r3, [r3, #0]
200004b2:	0c1b      	lsrs	r3, r3, #16
200004b4:	b29a      	uxth	r2, r3
200004b6:	4b10      	ldr	r3, [pc, #64]	; (200004f8 <DAC_Write+0x70>)
200004b8:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
200004ba:	4b0e      	ldr	r3, [pc, #56]	; (200004f4 <DAC_Write+0x6c>)
200004bc:	681b      	ldr	r3, [r3, #0]
200004be:	b29a      	uxth	r2, r3
200004c0:	4b0d      	ldr	r3, [pc, #52]	; (200004f8 <DAC_Write+0x70>)
200004c2:	805a      	strh	r2, [r3, #2]
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
200004c4:	2200      	movs	r2, #0
200004c6:	2110      	movs	r1, #16
200004c8:	480c      	ldr	r0, [pc, #48]	; (200004fc <DAC_Write+0x74>)
200004ca:	f000 f90d 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
200004ce:	2302      	movs	r3, #2
200004d0:	2202      	movs	r2, #2
200004d2:	4909      	ldr	r1, [pc, #36]	; (200004f8 <DAC_Write+0x70>)
200004d4:	480a      	ldr	r0, [pc, #40]	; (20000500 <DAC_Write+0x78>)
200004d6:	f000 f903 	bl	200006e0 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
200004da:	2201      	movs	r2, #1
200004dc:	2110      	movs	r1, #16
200004de:	4807      	ldr	r0, [pc, #28]	; (200004fc <DAC_Write+0x74>)
200004e0:	f000 f902 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
	DAC_code=value;
200004e4:	4a07      	ldr	r2, [pc, #28]	; (20000504 <DAC_Write+0x7c>)
200004e6:	687b      	ldr	r3, [r7, #4]
200004e8:	6013      	str	r3, [r2, #0]
}
200004ea:	bf00      	nop
200004ec:	3708      	adds	r7, #8
200004ee:	46bd      	mov	sp, r7
200004f0:	bd80      	pop	{r7, pc}
200004f2:	bf00      	nop
200004f4:	2000097c 	.word	0x2000097c
200004f8:	20000980 	.word	0x20000980
200004fc:	40020000 	.word	0x40020000
20000500:	200009c8 	.word	0x200009c8
20000504:	200009b8 	.word	0x200009b8

20000508 <DAC_Write_FAST>:
{
20000508:	b580      	push	{r7, lr}
2000050a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
2000050c:	2200      	movs	r2, #0
2000050e:	2110      	movs	r1, #16
20000510:	4807      	ldr	r0, [pc, #28]	; (20000530 <DAC_Write_FAST+0x28>)
20000512:	f000 f8e9 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
20000516:	2302      	movs	r3, #2
20000518:	2202      	movs	r2, #2
2000051a:	4906      	ldr	r1, [pc, #24]	; (20000534 <DAC_Write_FAST+0x2c>)
2000051c:	4806      	ldr	r0, [pc, #24]	; (20000538 <DAC_Write_FAST+0x30>)
2000051e:	f000 f8df 	bl	200006e0 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
20000522:	2201      	movs	r2, #1
20000524:	2110      	movs	r1, #16
20000526:	4802      	ldr	r0, [pc, #8]	; (20000530 <DAC_Write_FAST+0x28>)
20000528:	f000 f8de 	bl	200006e8 <__HAL_GPIO_WritePin_veneer>
}
2000052c:	bf00      	nop
2000052e:	bd80      	pop	{r7, pc}
20000530:	40020000 	.word	0x40020000
20000534:	20000980 	.word	0x20000980
20000538:	200009c8 	.word	0x200009c8

2000053c <HAL_GPIO_EXTI_Callback>:
{
2000053c:	b580      	push	{r7, lr}
2000053e:	b082      	sub	sp, #8
20000540:	af00      	add	r7, sp, #0
20000542:	4603      	mov	r3, r0
20000544:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == CPU_IRQ_Pin) // CPU_IRQ signal from Timebase CPLD
20000546:	88fb      	ldrh	r3, [r7, #6]
20000548:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
2000054c:	f040 8088 	bne.w	20000660 <HAL_GPIO_EXTI_Callback+0x124>
		DAC_Write_FAST(); // Сначала стреляем, а потом уже разговариваем
20000550:	f7ff ffda 	bl	20000508 <DAC_Write_FAST>
		Ramp_dac_step_complete=1;
20000554:	4b54      	ldr	r3, [pc, #336]	; (200006a8 <HAL_GPIO_EXTI_Callback+0x16c>)
20000556:	2201      	movs	r2, #1
20000558:	701a      	strb	r2, [r3, #0]
		switch(DAC_code_direction)
2000055a:	4b54      	ldr	r3, [pc, #336]	; (200006ac <HAL_GPIO_EXTI_Callback+0x170>)
2000055c:	781b      	ldrb	r3, [r3, #0]
2000055e:	2b02      	cmp	r3, #2
20000560:	d037      	beq.n	200005d2 <HAL_GPIO_EXTI_Callback+0x96>
20000562:	2b02      	cmp	r3, #2
20000564:	dc61      	bgt.n	2000062a <HAL_GPIO_EXTI_Callback+0xee>
20000566:	2b00      	cmp	r3, #0
20000568:	d01c      	beq.n	200005a4 <HAL_GPIO_EXTI_Callback+0x68>
2000056a:	2b01      	cmp	r3, #1
2000056c:	d15d      	bne.n	2000062a <HAL_GPIO_EXTI_Callback+0xee>
			if(DAC_code<=(DAC_CODE_TOP-DDS_target_multipiller))
2000056e:	4b50      	ldr	r3, [pc, #320]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
20000570:	681b      	ldr	r3, [r3, #0]
20000572:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
20000576:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
2000057a:	4a4e      	ldr	r2, [pc, #312]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
2000057c:	6812      	ldr	r2, [r2, #0]
2000057e:	4293      	cmp	r3, r2
20000580:	d307      	bcc.n	20000592 <HAL_GPIO_EXTI_Callback+0x56>
				DAC_code+=DDS_target_multipiller;
20000582:	4b4c      	ldr	r3, [pc, #304]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
20000584:	681a      	ldr	r2, [r3, #0]
20000586:	4b4a      	ldr	r3, [pc, #296]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
20000588:	681b      	ldr	r3, [r3, #0]
2000058a:	4413      	add	r3, r2
2000058c:	4a49      	ldr	r2, [pc, #292]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
2000058e:	6013      	str	r3, [r2, #0]
			break;
20000590:	e04b      	b.n	2000062a <HAL_GPIO_EXTI_Callback+0xee>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
20000592:	2000      	movs	r0, #0
20000594:	f000 f8a0 	bl	200006d8 <__CPLD_control_veneer>
				DAC_SendInit();
20000598:	f7ff feee 	bl	20000378 <DAC_SendInit>
				DAC_Write(DAC_CODE_DOWN);
2000059c:	2000      	movs	r0, #0
2000059e:	f7ff ff73 	bl	20000488 <DAC_Write>
				return;
200005a2:	e07e      	b.n	200006a2 <HAL_GPIO_EXTI_Callback+0x166>
			if(DAC_code>=DDS_target_multipiller)
200005a4:	4b43      	ldr	r3, [pc, #268]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005a6:	681a      	ldr	r2, [r3, #0]
200005a8:	4b41      	ldr	r3, [pc, #260]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
200005aa:	681b      	ldr	r3, [r3, #0]
200005ac:	429a      	cmp	r2, r3
200005ae:	d307      	bcc.n	200005c0 <HAL_GPIO_EXTI_Callback+0x84>
				DAC_code-=DDS_target_multipiller;
200005b0:	4b40      	ldr	r3, [pc, #256]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005b2:	681a      	ldr	r2, [r3, #0]
200005b4:	4b3e      	ldr	r3, [pc, #248]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
200005b6:	681b      	ldr	r3, [r3, #0]
200005b8:	1ad3      	subs	r3, r2, r3
200005ba:	4a3e      	ldr	r2, [pc, #248]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005bc:	6013      	str	r3, [r2, #0]
			break;
200005be:	e034      	b.n	2000062a <HAL_GPIO_EXTI_Callback+0xee>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
200005c0:	2000      	movs	r0, #0
200005c2:	f000 f889 	bl	200006d8 <__CPLD_control_veneer>
				DAC_SendInit();
200005c6:	f7ff fed7 	bl	20000378 <DAC_SendInit>
				DAC_Write(DAC_CODE_TOP);
200005ca:	483b      	ldr	r0, [pc, #236]	; (200006b8 <HAL_GPIO_EXTI_Callback+0x17c>)
200005cc:	f7ff ff5c 	bl	20000488 <DAC_Write>
				return;
200005d0:	e067      	b.n	200006a2 <HAL_GPIO_EXTI_Callback+0x166>
			if(DAC_code_direction_for_cycle_mode == 1)
200005d2:	4b3a      	ldr	r3, [pc, #232]	; (200006bc <HAL_GPIO_EXTI_Callback+0x180>)
200005d4:	781b      	ldrb	r3, [r3, #0]
200005d6:	2b01      	cmp	r3, #1
200005d8:	d115      	bne.n	20000606 <HAL_GPIO_EXTI_Callback+0xca>
				if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
200005da:	4b35      	ldr	r3, [pc, #212]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
200005dc:	681b      	ldr	r3, [r3, #0]
200005de:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
200005e2:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
200005e6:	4a33      	ldr	r2, [pc, #204]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005e8:	6812      	ldr	r2, [r2, #0]
200005ea:	4293      	cmp	r3, r2
200005ec:	d307      	bcc.n	200005fe <HAL_GPIO_EXTI_Callback+0xc2>
					DAC_code+=DDS_target_multipiller;
200005ee:	4b31      	ldr	r3, [pc, #196]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005f0:	681a      	ldr	r2, [r3, #0]
200005f2:	4b2f      	ldr	r3, [pc, #188]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
200005f4:	681b      	ldr	r3, [r3, #0]
200005f6:	4413      	add	r3, r2
200005f8:	4a2e      	ldr	r2, [pc, #184]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
200005fa:	6013      	str	r3, [r2, #0]
			break;
200005fc:	e014      	b.n	20000628 <HAL_GPIO_EXTI_Callback+0xec>
				} else  DAC_code_direction_for_cycle_mode=0;
200005fe:	4b2f      	ldr	r3, [pc, #188]	; (200006bc <HAL_GPIO_EXTI_Callback+0x180>)
20000600:	2200      	movs	r2, #0
20000602:	701a      	strb	r2, [r3, #0]
			break;
20000604:	e010      	b.n	20000628 <HAL_GPIO_EXTI_Callback+0xec>
				if(DAC_code>=DDS_target_multipiller)
20000606:	4b2b      	ldr	r3, [pc, #172]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
20000608:	681a      	ldr	r2, [r3, #0]
2000060a:	4b29      	ldr	r3, [pc, #164]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
2000060c:	681b      	ldr	r3, [r3, #0]
2000060e:	429a      	cmp	r2, r3
20000610:	d307      	bcc.n	20000622 <HAL_GPIO_EXTI_Callback+0xe6>
					DAC_code-=DDS_target_multipiller;
20000612:	4b28      	ldr	r3, [pc, #160]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
20000614:	681a      	ldr	r2, [r3, #0]
20000616:	4b26      	ldr	r3, [pc, #152]	; (200006b0 <HAL_GPIO_EXTI_Callback+0x174>)
20000618:	681b      	ldr	r3, [r3, #0]
2000061a:	1ad3      	subs	r3, r2, r3
2000061c:	4a25      	ldr	r2, [pc, #148]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
2000061e:	6013      	str	r3, [r2, #0]
			break;
20000620:	e002      	b.n	20000628 <HAL_GPIO_EXTI_Callback+0xec>
				} else DAC_code_direction_for_cycle_mode=1;
20000622:	4b26      	ldr	r3, [pc, #152]	; (200006bc <HAL_GPIO_EXTI_Callback+0x180>)
20000624:	2201      	movs	r2, #1
20000626:	701a      	strb	r2, [r3, #0]
			break;
20000628:	bf00      	nop
		DAC_tx_buffer=0x01000000; // Write DAC-DATA
2000062a:	4b25      	ldr	r3, [pc, #148]	; (200006c0 <HAL_GPIO_EXTI_Callback+0x184>)
2000062c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
20000630:	601a      	str	r2, [r3, #0]
		DAC_tx_buffer+=(DAC_code & 0xFFFFF)<<4;
20000632:	4b20      	ldr	r3, [pc, #128]	; (200006b4 <HAL_GPIO_EXTI_Callback+0x178>)
20000634:	681b      	ldr	r3, [r3, #0]
20000636:	011b      	lsls	r3, r3, #4
20000638:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2000063c:	f023 030f 	bic.w	r3, r3, #15
20000640:	4a1f      	ldr	r2, [pc, #124]	; (200006c0 <HAL_GPIO_EXTI_Callback+0x184>)
20000642:	6812      	ldr	r2, [r2, #0]
20000644:	4413      	add	r3, r2
20000646:	4a1e      	ldr	r2, [pc, #120]	; (200006c0 <HAL_GPIO_EXTI_Callback+0x184>)
20000648:	6013      	str	r3, [r2, #0]
		DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
2000064a:	4b1d      	ldr	r3, [pc, #116]	; (200006c0 <HAL_GPIO_EXTI_Callback+0x184>)
2000064c:	681b      	ldr	r3, [r3, #0]
2000064e:	0c1b      	lsrs	r3, r3, #16
20000650:	b29a      	uxth	r2, r3
20000652:	4b1c      	ldr	r3, [pc, #112]	; (200006c4 <HAL_GPIO_EXTI_Callback+0x188>)
20000654:	801a      	strh	r2, [r3, #0]
		DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
20000656:	4b1a      	ldr	r3, [pc, #104]	; (200006c0 <HAL_GPIO_EXTI_Callback+0x184>)
20000658:	681b      	ldr	r3, [r3, #0]
2000065a:	b29a      	uxth	r2, r3
2000065c:	4b19      	ldr	r3, [pc, #100]	; (200006c4 <HAL_GPIO_EXTI_Callback+0x188>)
2000065e:	805a      	strh	r2, [r3, #2]
	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
20000660:	88fb      	ldrh	r3, [r7, #6]
20000662:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
20000666:	d003      	beq.n	20000670 <HAL_GPIO_EXTI_Callback+0x134>
20000668:	88fb      	ldrh	r3, [r7, #6]
2000066a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2000066e:	d102      	bne.n	20000676 <HAL_GPIO_EXTI_Callback+0x13a>
20000670:	4b15      	ldr	r3, [pc, #84]	; (200006c8 <HAL_GPIO_EXTI_Callback+0x18c>)
20000672:	2201      	movs	r2, #1
20000674:	701a      	strb	r2, [r3, #0]
	if(GPIO_Pin == Encode_Push_Pin)
20000676:	88fb      	ldrh	r3, [r7, #6]
20000678:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2000067c:	d106      	bne.n	2000068c <HAL_GPIO_EXTI_Callback+0x150>
		if(Push_Encode_button==0)Push_Encode_button=1;
2000067e:	4b13      	ldr	r3, [pc, #76]	; (200006cc <HAL_GPIO_EXTI_Callback+0x190>)
20000680:	781b      	ldrb	r3, [r3, #0]
20000682:	2b00      	cmp	r3, #0
20000684:	d102      	bne.n	2000068c <HAL_GPIO_EXTI_Callback+0x150>
20000686:	4b11      	ldr	r3, [pc, #68]	; (200006cc <HAL_GPIO_EXTI_Callback+0x190>)
20000688:	2201      	movs	r2, #1
2000068a:	701a      	strb	r2, [r3, #0]
	if(GPIO_Pin == Start_button_Pin)
2000068c:	88fb      	ldrh	r3, [r7, #6]
2000068e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
20000692:	d106      	bne.n	200006a2 <HAL_GPIO_EXTI_Callback+0x166>
		if(Push_start_button==0)Push_start_button=1;
20000694:	4b0e      	ldr	r3, [pc, #56]	; (200006d0 <HAL_GPIO_EXTI_Callback+0x194>)
20000696:	781b      	ldrb	r3, [r3, #0]
20000698:	2b00      	cmp	r3, #0
2000069a:	d102      	bne.n	200006a2 <HAL_GPIO_EXTI_Callback+0x166>
2000069c:	4b0c      	ldr	r3, [pc, #48]	; (200006d0 <HAL_GPIO_EXTI_Callback+0x194>)
2000069e:	2201      	movs	r2, #1
200006a0:	701a      	strb	r2, [r3, #0]
}
200006a2:	3708      	adds	r7, #8
200006a4:	46bd      	mov	sp, r7
200006a6:	bd80      	pop	{r7, pc}
200006a8:	200009c1 	.word	0x200009c1
200006ac:	200009bc 	.word	0x200009bc
200006b0:	20000014 	.word	0x20000014
200006b4:	200009b8 	.word	0x200009b8
200006b8:	000fffff 	.word	0x000fffff
200006bc:	200009bd 	.word	0x200009bd
200006c0:	2000097c 	.word	0x2000097c
200006c4:	20000980 	.word	0x20000980
200006c8:	20000020 	.word	0x20000020
200006cc:	200009c4 	.word	0x200009c4
200006d0:	200009c3 	.word	0x200009c3
200006d4:	00000000 	.word	0x00000000

200006d8 <__CPLD_control_veneer>:
200006d8:	f85f f000 	ldr.w	pc, [pc]	; 200006dc <__CPLD_control_veneer+0x4>
200006dc:	080017c1 	.word	0x080017c1

200006e0 <__HAL_SPI_Transmit_veneer>:
200006e0:	f85f f000 	ldr.w	pc, [pc]	; 200006e4 <__HAL_SPI_Transmit_veneer+0x4>
200006e4:	0800853d 	.word	0x0800853d

200006e8 <__HAL_GPIO_WritePin_veneer>:
200006e8:	f85f f000 	ldr.w	pc, [pc]	; 200006ec <__HAL_GPIO_WritePin_veneer+0x4>
200006ec:	08006435 	.word	0x08006435
