
Micron-GLIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fa08  08000140  08000140  00010140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000011ec  0800fb48  0800fb48  0001fb48  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010d34  08010d34  00030510  2**0
                  CONTENTS
  4 .ARM          00000008  08010d34  08010d34  00020d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010d3c  08010d3c  00030510  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010d3c  08010d3c  00020d3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010d40  08010d40  00020d40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000510  20000000  08010d44  00030000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .bss          00000f50  20000510  08011254  00030510  2**2
                  ALLOC
 10 ._user_heap_stack 00001c00  20001460  08011254  00031460  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00030510  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008617  00000000  00000000  00030539  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001ba4  00000000  00000000  00038b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005e0  00000000  00000000  0003a6f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004e8  00000000  00000000  0003acd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016859  00000000  00000000  0003b1c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00009737  00000000  00000000  00051a19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083dd6  00000000  00000000  0005b150  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000def26  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002e9c  00000000  00000000  000def78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000510 	.word	0x20000510
 800015c:	00000000 	.word	0x00000000
 8000160:	0800fb24 	.word	0x0800fb24

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000514 	.word	0x20000514
 800017c:	0800fb24 	.word	0x0800fb24

08000180 <strcmp>:
 8000180:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000184:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000188:	2a01      	cmp	r2, #1
 800018a:	bf28      	it	cs
 800018c:	429a      	cmpcs	r2, r3
 800018e:	d0f7      	beq.n	8000180 <strcmp>
 8000190:	1ad0      	subs	r0, r2, r3
 8000192:	4770      	bx	lr

08000194 <strlen>:
 8000194:	4603      	mov	r3, r0
 8000196:	f813 2b01 	ldrb.w	r2, [r3], #1
 800019a:	2a00      	cmp	r2, #0
 800019c:	d1fb      	bne.n	8000196 <strlen+0x2>
 800019e:	1a18      	subs	r0, r3, r0
 80001a0:	3801      	subs	r0, #1
 80001a2:	4770      	bx	lr

080001a4 <__aeabi_drsub>:
 80001a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001a8:	e002      	b.n	80001b0 <__adddf3>
 80001aa:	bf00      	nop

080001ac <__aeabi_dsub>:
 80001ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001b0 <__adddf3>:
 80001b0:	b530      	push	{r4, r5, lr}
 80001b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ba:	ea94 0f05 	teq	r4, r5
 80001be:	bf08      	it	eq
 80001c0:	ea90 0f02 	teqeq	r0, r2
 80001c4:	bf1f      	itttt	ne
 80001c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001d6:	f000 80e2 	beq.w	800039e <__adddf3+0x1ee>
 80001da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001e2:	bfb8      	it	lt
 80001e4:	426d      	neglt	r5, r5
 80001e6:	dd0c      	ble.n	8000202 <__adddf3+0x52>
 80001e8:	442c      	add	r4, r5
 80001ea:	ea80 0202 	eor.w	r2, r0, r2
 80001ee:	ea81 0303 	eor.w	r3, r1, r3
 80001f2:	ea82 0000 	eor.w	r0, r2, r0
 80001f6:	ea83 0101 	eor.w	r1, r3, r1
 80001fa:	ea80 0202 	eor.w	r2, r0, r2
 80001fe:	ea81 0303 	eor.w	r3, r1, r3
 8000202:	2d36      	cmp	r5, #54	; 0x36
 8000204:	bf88      	it	hi
 8000206:	bd30      	pophi	{r4, r5, pc}
 8000208:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800020c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000210:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000214:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x70>
 800021a:	4240      	negs	r0, r0
 800021c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000220:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000224:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000228:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800022c:	d002      	beq.n	8000234 <__adddf3+0x84>
 800022e:	4252      	negs	r2, r2
 8000230:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000234:	ea94 0f05 	teq	r4, r5
 8000238:	f000 80a7 	beq.w	800038a <__adddf3+0x1da>
 800023c:	f1a4 0401 	sub.w	r4, r4, #1
 8000240:	f1d5 0e20 	rsbs	lr, r5, #32
 8000244:	db0d      	blt.n	8000262 <__adddf3+0xb2>
 8000246:	fa02 fc0e 	lsl.w	ip, r2, lr
 800024a:	fa22 f205 	lsr.w	r2, r2, r5
 800024e:	1880      	adds	r0, r0, r2
 8000250:	f141 0100 	adc.w	r1, r1, #0
 8000254:	fa03 f20e 	lsl.w	r2, r3, lr
 8000258:	1880      	adds	r0, r0, r2
 800025a:	fa43 f305 	asr.w	r3, r3, r5
 800025e:	4159      	adcs	r1, r3
 8000260:	e00e      	b.n	8000280 <__adddf3+0xd0>
 8000262:	f1a5 0520 	sub.w	r5, r5, #32
 8000266:	f10e 0e20 	add.w	lr, lr, #32
 800026a:	2a01      	cmp	r2, #1
 800026c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000270:	bf28      	it	cs
 8000272:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000276:	fa43 f305 	asr.w	r3, r3, r5
 800027a:	18c0      	adds	r0, r0, r3
 800027c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000280:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000284:	d507      	bpl.n	8000296 <__adddf3+0xe6>
 8000286:	f04f 0e00 	mov.w	lr, #0
 800028a:	f1dc 0c00 	rsbs	ip, ip, #0
 800028e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000292:	eb6e 0101 	sbc.w	r1, lr, r1
 8000296:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800029a:	d31b      	bcc.n	80002d4 <__adddf3+0x124>
 800029c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002a0:	d30c      	bcc.n	80002bc <__adddf3+0x10c>
 80002a2:	0849      	lsrs	r1, r1, #1
 80002a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80002a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002ac:	f104 0401 	add.w	r4, r4, #1
 80002b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002b8:	f080 809a 	bcs.w	80003f0 <__adddf3+0x240>
 80002bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002c0:	bf08      	it	eq
 80002c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002c6:	f150 0000 	adcs.w	r0, r0, #0
 80002ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ce:	ea41 0105 	orr.w	r1, r1, r5
 80002d2:	bd30      	pop	{r4, r5, pc}
 80002d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002d8:	4140      	adcs	r0, r0
 80002da:	eb41 0101 	adc.w	r1, r1, r1
 80002de:	3c01      	subs	r4, #1
 80002e0:	bf28      	it	cs
 80002e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002e6:	d2e9      	bcs.n	80002bc <__adddf3+0x10c>
 80002e8:	f091 0f00 	teq	r1, #0
 80002ec:	bf04      	itt	eq
 80002ee:	4601      	moveq	r1, r0
 80002f0:	2000      	moveq	r0, #0
 80002f2:	fab1 f381 	clz	r3, r1
 80002f6:	bf08      	it	eq
 80002f8:	3320      	addeq	r3, #32
 80002fa:	f1a3 030b 	sub.w	r3, r3, #11
 80002fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000302:	da0c      	bge.n	800031e <__adddf3+0x16e>
 8000304:	320c      	adds	r2, #12
 8000306:	dd08      	ble.n	800031a <__adddf3+0x16a>
 8000308:	f102 0c14 	add.w	ip, r2, #20
 800030c:	f1c2 020c 	rsb	r2, r2, #12
 8000310:	fa01 f00c 	lsl.w	r0, r1, ip
 8000314:	fa21 f102 	lsr.w	r1, r1, r2
 8000318:	e00c      	b.n	8000334 <__adddf3+0x184>
 800031a:	f102 0214 	add.w	r2, r2, #20
 800031e:	bfd8      	it	le
 8000320:	f1c2 0c20 	rsble	ip, r2, #32
 8000324:	fa01 f102 	lsl.w	r1, r1, r2
 8000328:	fa20 fc0c 	lsr.w	ip, r0, ip
 800032c:	bfdc      	itt	le
 800032e:	ea41 010c 	orrle.w	r1, r1, ip
 8000332:	4090      	lslle	r0, r2
 8000334:	1ae4      	subs	r4, r4, r3
 8000336:	bfa2      	ittt	ge
 8000338:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800033c:	4329      	orrge	r1, r5
 800033e:	bd30      	popge	{r4, r5, pc}
 8000340:	ea6f 0404 	mvn.w	r4, r4
 8000344:	3c1f      	subs	r4, #31
 8000346:	da1c      	bge.n	8000382 <__adddf3+0x1d2>
 8000348:	340c      	adds	r4, #12
 800034a:	dc0e      	bgt.n	800036a <__adddf3+0x1ba>
 800034c:	f104 0414 	add.w	r4, r4, #20
 8000350:	f1c4 0220 	rsb	r2, r4, #32
 8000354:	fa20 f004 	lsr.w	r0, r0, r4
 8000358:	fa01 f302 	lsl.w	r3, r1, r2
 800035c:	ea40 0003 	orr.w	r0, r0, r3
 8000360:	fa21 f304 	lsr.w	r3, r1, r4
 8000364:	ea45 0103 	orr.w	r1, r5, r3
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	f1c4 040c 	rsb	r4, r4, #12
 800036e:	f1c4 0220 	rsb	r2, r4, #32
 8000372:	fa20 f002 	lsr.w	r0, r0, r2
 8000376:	fa01 f304 	lsl.w	r3, r1, r4
 800037a:	ea40 0003 	orr.w	r0, r0, r3
 800037e:	4629      	mov	r1, r5
 8000380:	bd30      	pop	{r4, r5, pc}
 8000382:	fa21 f004 	lsr.w	r0, r1, r4
 8000386:	4629      	mov	r1, r5
 8000388:	bd30      	pop	{r4, r5, pc}
 800038a:	f094 0f00 	teq	r4, #0
 800038e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000392:	bf06      	itte	eq
 8000394:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000398:	3401      	addeq	r4, #1
 800039a:	3d01      	subne	r5, #1
 800039c:	e74e      	b.n	800023c <__adddf3+0x8c>
 800039e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003a2:	bf18      	it	ne
 80003a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003a8:	d029      	beq.n	80003fe <__adddf3+0x24e>
 80003aa:	ea94 0f05 	teq	r4, r5
 80003ae:	bf08      	it	eq
 80003b0:	ea90 0f02 	teqeq	r0, r2
 80003b4:	d005      	beq.n	80003c2 <__adddf3+0x212>
 80003b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ba:	bf04      	itt	eq
 80003bc:	4619      	moveq	r1, r3
 80003be:	4610      	moveq	r0, r2
 80003c0:	bd30      	pop	{r4, r5, pc}
 80003c2:	ea91 0f03 	teq	r1, r3
 80003c6:	bf1e      	ittt	ne
 80003c8:	2100      	movne	r1, #0
 80003ca:	2000      	movne	r0, #0
 80003cc:	bd30      	popne	{r4, r5, pc}
 80003ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003d2:	d105      	bne.n	80003e0 <__adddf3+0x230>
 80003d4:	0040      	lsls	r0, r0, #1
 80003d6:	4149      	adcs	r1, r1
 80003d8:	bf28      	it	cs
 80003da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003e4:	bf3c      	itt	cc
 80003e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003ea:	bd30      	popcc	{r4, r5, pc}
 80003ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003f8:	f04f 0000 	mov.w	r0, #0
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000402:	bf1a      	itte	ne
 8000404:	4619      	movne	r1, r3
 8000406:	4610      	movne	r0, r2
 8000408:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800040c:	bf1c      	itt	ne
 800040e:	460b      	movne	r3, r1
 8000410:	4602      	movne	r2, r0
 8000412:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000416:	bf06      	itte	eq
 8000418:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800041c:	ea91 0f03 	teqeq	r1, r3
 8000420:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	bf00      	nop

08000428 <__aeabi_ui2d>:
 8000428:	f090 0f00 	teq	r0, #0
 800042c:	bf04      	itt	eq
 800042e:	2100      	moveq	r1, #0
 8000430:	4770      	bxeq	lr
 8000432:	b530      	push	{r4, r5, lr}
 8000434:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000438:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800043c:	f04f 0500 	mov.w	r5, #0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e750      	b.n	80002e8 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_i2d>:
 8000448:	f090 0f00 	teq	r0, #0
 800044c:	bf04      	itt	eq
 800044e:	2100      	moveq	r1, #0
 8000450:	4770      	bxeq	lr
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000458:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800045c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000460:	bf48      	it	mi
 8000462:	4240      	negmi	r0, r0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e73e      	b.n	80002e8 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_f2d>:
 800046c:	0042      	lsls	r2, r0, #1
 800046e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000472:	ea4f 0131 	mov.w	r1, r1, rrx
 8000476:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800047a:	bf1f      	itttt	ne
 800047c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000480:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000484:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000488:	4770      	bxne	lr
 800048a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800048e:	bf08      	it	eq
 8000490:	4770      	bxeq	lr
 8000492:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000496:	bf04      	itt	eq
 8000498:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800049c:	4770      	bxeq	lr
 800049e:	b530      	push	{r4, r5, lr}
 80004a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004ac:	e71c      	b.n	80002e8 <__adddf3+0x138>
 80004ae:	bf00      	nop

080004b0 <__aeabi_ul2d>:
 80004b0:	ea50 0201 	orrs.w	r2, r0, r1
 80004b4:	bf08      	it	eq
 80004b6:	4770      	bxeq	lr
 80004b8:	b530      	push	{r4, r5, lr}
 80004ba:	f04f 0500 	mov.w	r5, #0
 80004be:	e00a      	b.n	80004d6 <__aeabi_l2d+0x16>

080004c0 <__aeabi_l2d>:
 80004c0:	ea50 0201 	orrs.w	r2, r0, r1
 80004c4:	bf08      	it	eq
 80004c6:	4770      	bxeq	lr
 80004c8:	b530      	push	{r4, r5, lr}
 80004ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004ce:	d502      	bpl.n	80004d6 <__aeabi_l2d+0x16>
 80004d0:	4240      	negs	r0, r0
 80004d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004e2:	f43f aed8 	beq.w	8000296 <__adddf3+0xe6>
 80004e6:	f04f 0203 	mov.w	r2, #3
 80004ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ee:	bf18      	it	ne
 80004f0:	3203      	addne	r2, #3
 80004f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004f6:	bf18      	it	ne
 80004f8:	3203      	addne	r2, #3
 80004fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004fe:	f1c2 0320 	rsb	r3, r2, #32
 8000502:	fa00 fc03 	lsl.w	ip, r0, r3
 8000506:	fa20 f002 	lsr.w	r0, r0, r2
 800050a:	fa01 fe03 	lsl.w	lr, r1, r3
 800050e:	ea40 000e 	orr.w	r0, r0, lr
 8000512:	fa21 f102 	lsr.w	r1, r1, r2
 8000516:	4414      	add	r4, r2
 8000518:	e6bd      	b.n	8000296 <__adddf3+0xe6>
 800051a:	bf00      	nop

0800051c <__aeabi_dmul>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000522:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000526:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800052a:	bf1d      	ittte	ne
 800052c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000530:	ea94 0f0c 	teqne	r4, ip
 8000534:	ea95 0f0c 	teqne	r5, ip
 8000538:	f000 f8de 	bleq	80006f8 <__aeabi_dmul+0x1dc>
 800053c:	442c      	add	r4, r5
 800053e:	ea81 0603 	eor.w	r6, r1, r3
 8000542:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000546:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800054a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800054e:	bf18      	it	ne
 8000550:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000554:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000558:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800055c:	d038      	beq.n	80005d0 <__aeabi_dmul+0xb4>
 800055e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000562:	f04f 0500 	mov.w	r5, #0
 8000566:	fbe1 e502 	umlal	lr, r5, r1, r2
 800056a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800056e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000572:	f04f 0600 	mov.w	r6, #0
 8000576:	fbe1 5603 	umlal	r5, r6, r1, r3
 800057a:	f09c 0f00 	teq	ip, #0
 800057e:	bf18      	it	ne
 8000580:	f04e 0e01 	orrne.w	lr, lr, #1
 8000584:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000588:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800058c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000590:	d204      	bcs.n	800059c <__aeabi_dmul+0x80>
 8000592:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000596:	416d      	adcs	r5, r5
 8000598:	eb46 0606 	adc.w	r6, r6, r6
 800059c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005b0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005b4:	bf88      	it	hi
 80005b6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ba:	d81e      	bhi.n	80005fa <__aeabi_dmul+0xde>
 80005bc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005c0:	bf08      	it	eq
 80005c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005c6:	f150 0000 	adcs.w	r0, r0, #0
 80005ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ce:	bd70      	pop	{r4, r5, r6, pc}
 80005d0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005d4:	ea46 0101 	orr.w	r1, r6, r1
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	ea81 0103 	eor.w	r1, r1, r3
 80005e0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005e4:	bfc2      	ittt	gt
 80005e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ee:	bd70      	popgt	{r4, r5, r6, pc}
 80005f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005f4:	f04f 0e00 	mov.w	lr, #0
 80005f8:	3c01      	subs	r4, #1
 80005fa:	f300 80ab 	bgt.w	8000754 <__aeabi_dmul+0x238>
 80005fe:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000602:	bfde      	ittt	le
 8000604:	2000      	movle	r0, #0
 8000606:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800060a:	bd70      	pople	{r4, r5, r6, pc}
 800060c:	f1c4 0400 	rsb	r4, r4, #0
 8000610:	3c20      	subs	r4, #32
 8000612:	da35      	bge.n	8000680 <__aeabi_dmul+0x164>
 8000614:	340c      	adds	r4, #12
 8000616:	dc1b      	bgt.n	8000650 <__aeabi_dmul+0x134>
 8000618:	f104 0414 	add.w	r4, r4, #20
 800061c:	f1c4 0520 	rsb	r5, r4, #32
 8000620:	fa00 f305 	lsl.w	r3, r0, r5
 8000624:	fa20 f004 	lsr.w	r0, r0, r4
 8000628:	fa01 f205 	lsl.w	r2, r1, r5
 800062c:	ea40 0002 	orr.w	r0, r0, r2
 8000630:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000634:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	fa21 f604 	lsr.w	r6, r1, r4
 8000640:	eb42 0106 	adc.w	r1, r2, r6
 8000644:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000648:	bf08      	it	eq
 800064a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f1c4 040c 	rsb	r4, r4, #12
 8000654:	f1c4 0520 	rsb	r5, r4, #32
 8000658:	fa00 f304 	lsl.w	r3, r0, r4
 800065c:	fa20 f005 	lsr.w	r0, r0, r5
 8000660:	fa01 f204 	lsl.w	r2, r1, r4
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	f141 0100 	adc.w	r1, r1, #0
 8000674:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000678:	bf08      	it	eq
 800067a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067e:	bd70      	pop	{r4, r5, r6, pc}
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f205 	lsl.w	r2, r0, r5
 8000688:	ea4e 0e02 	orr.w	lr, lr, r2
 800068c:	fa20 f304 	lsr.w	r3, r0, r4
 8000690:	fa01 f205 	lsl.w	r2, r1, r5
 8000694:	ea43 0302 	orr.w	r3, r3, r2
 8000698:	fa21 f004 	lsr.w	r0, r1, r4
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	fa21 f204 	lsr.w	r2, r1, r4
 80006a4:	ea20 0002 	bic.w	r0, r0, r2
 80006a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006b0:	bf08      	it	eq
 80006b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b6:	bd70      	pop	{r4, r5, r6, pc}
 80006b8:	f094 0f00 	teq	r4, #0
 80006bc:	d10f      	bne.n	80006de <__aeabi_dmul+0x1c2>
 80006be:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006c2:	0040      	lsls	r0, r0, #1
 80006c4:	eb41 0101 	adc.w	r1, r1, r1
 80006c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006cc:	bf08      	it	eq
 80006ce:	3c01      	subeq	r4, #1
 80006d0:	d0f7      	beq.n	80006c2 <__aeabi_dmul+0x1a6>
 80006d2:	ea41 0106 	orr.w	r1, r1, r6
 80006d6:	f095 0f00 	teq	r5, #0
 80006da:	bf18      	it	ne
 80006dc:	4770      	bxne	lr
 80006de:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006e2:	0052      	lsls	r2, r2, #1
 80006e4:	eb43 0303 	adc.w	r3, r3, r3
 80006e8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006ec:	bf08      	it	eq
 80006ee:	3d01      	subeq	r5, #1
 80006f0:	d0f7      	beq.n	80006e2 <__aeabi_dmul+0x1c6>
 80006f2:	ea43 0306 	orr.w	r3, r3, r6
 80006f6:	4770      	bx	lr
 80006f8:	ea94 0f0c 	teq	r4, ip
 80006fc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000700:	bf18      	it	ne
 8000702:	ea95 0f0c 	teqne	r5, ip
 8000706:	d00c      	beq.n	8000722 <__aeabi_dmul+0x206>
 8000708:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800070c:	bf18      	it	ne
 800070e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000712:	d1d1      	bne.n	80006b8 <__aeabi_dmul+0x19c>
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000726:	bf06      	itte	eq
 8000728:	4610      	moveq	r0, r2
 800072a:	4619      	moveq	r1, r3
 800072c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000730:	d019      	beq.n	8000766 <__aeabi_dmul+0x24a>
 8000732:	ea94 0f0c 	teq	r4, ip
 8000736:	d102      	bne.n	800073e <__aeabi_dmul+0x222>
 8000738:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800073c:	d113      	bne.n	8000766 <__aeabi_dmul+0x24a>
 800073e:	ea95 0f0c 	teq	r5, ip
 8000742:	d105      	bne.n	8000750 <__aeabi_dmul+0x234>
 8000744:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000748:	bf1c      	itt	ne
 800074a:	4610      	movne	r0, r2
 800074c:	4619      	movne	r1, r3
 800074e:	d10a      	bne.n	8000766 <__aeabi_dmul+0x24a>
 8000750:	ea81 0103 	eor.w	r1, r1, r3
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800075c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000760:	f04f 0000 	mov.w	r0, #0
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800076a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800076e:	bd70      	pop	{r4, r5, r6, pc}

08000770 <__aeabi_ddiv>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000776:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800077a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800077e:	bf1d      	ittte	ne
 8000780:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000784:	ea94 0f0c 	teqne	r4, ip
 8000788:	ea95 0f0c 	teqne	r5, ip
 800078c:	f000 f8a7 	bleq	80008de <__aeabi_ddiv+0x16e>
 8000790:	eba4 0405 	sub.w	r4, r4, r5
 8000794:	ea81 0e03 	eor.w	lr, r1, r3
 8000798:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800079c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007a0:	f000 8088 	beq.w	80008b4 <__aeabi_ddiv+0x144>
 80007a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007a8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007c4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007c8:	429d      	cmp	r5, r3
 80007ca:	bf08      	it	eq
 80007cc:	4296      	cmpeq	r6, r2
 80007ce:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007d2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007d6:	d202      	bcs.n	80007de <__aeabi_ddiv+0x6e>
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	1ab6      	subs	r6, r6, r2
 80007e0:	eb65 0503 	sbc.w	r5, r5, r3
 80007e4:	085b      	lsrs	r3, r3, #1
 80007e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ee:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007f2:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fa:	bf22      	ittt	cs
 80007fc:	1ab6      	subcs	r6, r6, r2
 80007fe:	4675      	movcs	r5, lr
 8000800:	ea40 000c 	orrcs.w	r0, r0, ip
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	ebb6 0e02 	subs.w	lr, r6, r2
 800080e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000812:	bf22      	ittt	cs
 8000814:	1ab6      	subcs	r6, r6, r2
 8000816:	4675      	movcs	r5, lr
 8000818:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800081c:	085b      	lsrs	r3, r3, #1
 800081e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000822:	ebb6 0e02 	subs.w	lr, r6, r2
 8000826:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082a:	bf22      	ittt	cs
 800082c:	1ab6      	subcs	r6, r6, r2
 800082e:	4675      	movcs	r5, lr
 8000830:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000834:	085b      	lsrs	r3, r3, #1
 8000836:	ea4f 0232 	mov.w	r2, r2, rrx
 800083a:	ebb6 0e02 	subs.w	lr, r6, r2
 800083e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000842:	bf22      	ittt	cs
 8000844:	1ab6      	subcs	r6, r6, r2
 8000846:	4675      	movcs	r5, lr
 8000848:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800084c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000850:	d018      	beq.n	8000884 <__aeabi_ddiv+0x114>
 8000852:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000856:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800085a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800085e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000862:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000866:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800086a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800086e:	d1c0      	bne.n	80007f2 <__aeabi_ddiv+0x82>
 8000870:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000874:	d10b      	bne.n	800088e <__aeabi_ddiv+0x11e>
 8000876:	ea41 0100 	orr.w	r1, r1, r0
 800087a:	f04f 0000 	mov.w	r0, #0
 800087e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000882:	e7b6      	b.n	80007f2 <__aeabi_ddiv+0x82>
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf04      	itt	eq
 800088a:	4301      	orreq	r1, r0
 800088c:	2000      	moveq	r0, #0
 800088e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000892:	bf88      	it	hi
 8000894:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000898:	f63f aeaf 	bhi.w	80005fa <__aeabi_dmul+0xde>
 800089c:	ebb5 0c03 	subs.w	ip, r5, r3
 80008a0:	bf04      	itt	eq
 80008a2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008aa:	f150 0000 	adcs.w	r0, r0, #0
 80008ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008c0:	bfc2      	ittt	gt
 80008c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ca:	bd70      	popgt	{r4, r5, r6, pc}
 80008cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008d0:	f04f 0e00 	mov.w	lr, #0
 80008d4:	3c01      	subs	r4, #1
 80008d6:	e690      	b.n	80005fa <__aeabi_dmul+0xde>
 80008d8:	ea45 0e06 	orr.w	lr, r5, r6
 80008dc:	e68d      	b.n	80005fa <__aeabi_dmul+0xde>
 80008de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008e2:	ea94 0f0c 	teq	r4, ip
 80008e6:	bf08      	it	eq
 80008e8:	ea95 0f0c 	teqeq	r5, ip
 80008ec:	f43f af3b 	beq.w	8000766 <__aeabi_dmul+0x24a>
 80008f0:	ea94 0f0c 	teq	r4, ip
 80008f4:	d10a      	bne.n	800090c <__aeabi_ddiv+0x19c>
 80008f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008fa:	f47f af34 	bne.w	8000766 <__aeabi_dmul+0x24a>
 80008fe:	ea95 0f0c 	teq	r5, ip
 8000902:	f47f af25 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000906:	4610      	mov	r0, r2
 8000908:	4619      	mov	r1, r3
 800090a:	e72c      	b.n	8000766 <__aeabi_dmul+0x24a>
 800090c:	ea95 0f0c 	teq	r5, ip
 8000910:	d106      	bne.n	8000920 <__aeabi_ddiv+0x1b0>
 8000912:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000916:	f43f aefd 	beq.w	8000714 <__aeabi_dmul+0x1f8>
 800091a:	4610      	mov	r0, r2
 800091c:	4619      	mov	r1, r3
 800091e:	e722      	b.n	8000766 <__aeabi_dmul+0x24a>
 8000920:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000924:	bf18      	it	ne
 8000926:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800092a:	f47f aec5 	bne.w	80006b8 <__aeabi_dmul+0x19c>
 800092e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000932:	f47f af0d 	bne.w	8000750 <__aeabi_dmul+0x234>
 8000936:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800093a:	f47f aeeb 	bne.w	8000714 <__aeabi_dmul+0x1f8>
 800093e:	e712      	b.n	8000766 <__aeabi_dmul+0x24a>

08000940 <__gedf2>:
 8000940:	f04f 3cff 	mov.w	ip, #4294967295
 8000944:	e006      	b.n	8000954 <__cmpdf2+0x4>
 8000946:	bf00      	nop

08000948 <__ledf2>:
 8000948:	f04f 0c01 	mov.w	ip, #1
 800094c:	e002      	b.n	8000954 <__cmpdf2+0x4>
 800094e:	bf00      	nop

08000950 <__cmpdf2>:
 8000950:	f04f 0c01 	mov.w	ip, #1
 8000954:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000958:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800095c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	bf18      	it	ne
 8000966:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800096a:	d01b      	beq.n	80009a4 <__cmpdf2+0x54>
 800096c:	b001      	add	sp, #4
 800096e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000972:	bf0c      	ite	eq
 8000974:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000978:	ea91 0f03 	teqne	r1, r3
 800097c:	bf02      	ittt	eq
 800097e:	ea90 0f02 	teqeq	r0, r2
 8000982:	2000      	moveq	r0, #0
 8000984:	4770      	bxeq	lr
 8000986:	f110 0f00 	cmn.w	r0, #0
 800098a:	ea91 0f03 	teq	r1, r3
 800098e:	bf58      	it	pl
 8000990:	4299      	cmppl	r1, r3
 8000992:	bf08      	it	eq
 8000994:	4290      	cmpeq	r0, r2
 8000996:	bf2c      	ite	cs
 8000998:	17d8      	asrcs	r0, r3, #31
 800099a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800099e:	f040 0001 	orr.w	r0, r0, #1
 80009a2:	4770      	bx	lr
 80009a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ac:	d102      	bne.n	80009b4 <__cmpdf2+0x64>
 80009ae:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009b2:	d107      	bne.n	80009c4 <__cmpdf2+0x74>
 80009b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009bc:	d1d6      	bne.n	800096c <__cmpdf2+0x1c>
 80009be:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009c2:	d0d3      	beq.n	800096c <__cmpdf2+0x1c>
 80009c4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_cdrcmple>:
 80009cc:	4684      	mov	ip, r0
 80009ce:	4610      	mov	r0, r2
 80009d0:	4662      	mov	r2, ip
 80009d2:	468c      	mov	ip, r1
 80009d4:	4619      	mov	r1, r3
 80009d6:	4663      	mov	r3, ip
 80009d8:	e000      	b.n	80009dc <__aeabi_cdcmpeq>
 80009da:	bf00      	nop

080009dc <__aeabi_cdcmpeq>:
 80009dc:	b501      	push	{r0, lr}
 80009de:	f7ff ffb7 	bl	8000950 <__cmpdf2>
 80009e2:	2800      	cmp	r0, #0
 80009e4:	bf48      	it	mi
 80009e6:	f110 0f00 	cmnmi.w	r0, #0
 80009ea:	bd01      	pop	{r0, pc}

080009ec <__aeabi_dcmpeq>:
 80009ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f0:	f7ff fff4 	bl	80009dc <__aeabi_cdcmpeq>
 80009f4:	bf0c      	ite	eq
 80009f6:	2001      	moveq	r0, #1
 80009f8:	2000      	movne	r0, #0
 80009fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fe:	bf00      	nop

08000a00 <__aeabi_dcmplt>:
 8000a00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a04:	f7ff ffea 	bl	80009dc <__aeabi_cdcmpeq>
 8000a08:	bf34      	ite	cc
 8000a0a:	2001      	movcc	r0, #1
 8000a0c:	2000      	movcs	r0, #0
 8000a0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a12:	bf00      	nop

08000a14 <__aeabi_dcmple>:
 8000a14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a18:	f7ff ffe0 	bl	80009dc <__aeabi_cdcmpeq>
 8000a1c:	bf94      	ite	ls
 8000a1e:	2001      	movls	r0, #1
 8000a20:	2000      	movhi	r0, #0
 8000a22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a26:	bf00      	nop

08000a28 <__aeabi_dcmpge>:
 8000a28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a2c:	f7ff ffce 	bl	80009cc <__aeabi_cdrcmple>
 8000a30:	bf94      	ite	ls
 8000a32:	2001      	movls	r0, #1
 8000a34:	2000      	movhi	r0, #0
 8000a36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dcmpgt>:
 8000a3c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a40:	f7ff ffc4 	bl	80009cc <__aeabi_cdrcmple>
 8000a44:	bf34      	ite	cc
 8000a46:	2001      	movcc	r0, #1
 8000a48:	2000      	movcs	r0, #0
 8000a4a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4e:	bf00      	nop

08000a50 <__aeabi_dcmpun>:
 8000a50:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d102      	bne.n	8000a60 <__aeabi_dcmpun+0x10>
 8000a5a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a5e:	d10a      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a60:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d102      	bne.n	8000a70 <__aeabi_dcmpun+0x20>
 8000a6a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a6e:	d102      	bne.n	8000a76 <__aeabi_dcmpun+0x26>
 8000a70:	f04f 0000 	mov.w	r0, #0
 8000a74:	4770      	bx	lr
 8000a76:	f04f 0001 	mov.w	r0, #1
 8000a7a:	4770      	bx	lr

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2uiz>:
 8000acc:	004a      	lsls	r2, r1, #1
 8000ace:	d211      	bcs.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ad4:	d211      	bcs.n	8000afa <__aeabi_d2uiz+0x2e>
 8000ad6:	d50d      	bpl.n	8000af4 <__aeabi_d2uiz+0x28>
 8000ad8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000adc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ae0:	d40e      	bmi.n	8000b00 <__aeabi_d2uiz+0x34>
 8000ae2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aee:	fa23 f002 	lsr.w	r0, r3, r2
 8000af2:	4770      	bx	lr
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000afe:	d102      	bne.n	8000b06 <__aeabi_d2uiz+0x3a>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	4770      	bx	lr
 8000b06:	f04f 0000 	mov.w	r0, #0
 8000b0a:	4770      	bx	lr

08000b0c <__aeabi_d2f>:
 8000b0c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b10:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b14:	bf24      	itt	cs
 8000b16:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b1a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b1e:	d90d      	bls.n	8000b3c <__aeabi_d2f+0x30>
 8000b20:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b24:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b28:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b2c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b30:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b34:	bf08      	it	eq
 8000b36:	f020 0001 	biceq.w	r0, r0, #1
 8000b3a:	4770      	bx	lr
 8000b3c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b40:	d121      	bne.n	8000b86 <__aeabi_d2f+0x7a>
 8000b42:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b46:	bfbc      	itt	lt
 8000b48:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b4c:	4770      	bxlt	lr
 8000b4e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b52:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b56:	f1c2 0218 	rsb	r2, r2, #24
 8000b5a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b5e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b62:	fa20 f002 	lsr.w	r0, r0, r2
 8000b66:	bf18      	it	ne
 8000b68:	f040 0001 	orrne.w	r0, r0, #1
 8000b6c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b70:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b74:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b78:	ea40 000c 	orr.w	r0, r0, ip
 8000b7c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b84:	e7cc      	b.n	8000b20 <__aeabi_d2f+0x14>
 8000b86:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b8a:	d107      	bne.n	8000b9c <__aeabi_d2f+0x90>
 8000b8c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b90:	bf1e      	ittt	ne
 8000b92:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b96:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b9a:	4770      	bxne	lr
 8000b9c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ba4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <__aeabi_frsub>:
 8000bac:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000bb0:	e002      	b.n	8000bb8 <__addsf3>
 8000bb2:	bf00      	nop

08000bb4 <__aeabi_fsub>:
 8000bb4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000bb8 <__addsf3>:
 8000bb8:	0042      	lsls	r2, r0, #1
 8000bba:	bf1f      	itttt	ne
 8000bbc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bc0:	ea92 0f03 	teqne	r2, r3
 8000bc4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bc8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bcc:	d06a      	beq.n	8000ca4 <__addsf3+0xec>
 8000bce:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bd2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bd6:	bfc1      	itttt	gt
 8000bd8:	18d2      	addgt	r2, r2, r3
 8000bda:	4041      	eorgt	r1, r0
 8000bdc:	4048      	eorgt	r0, r1
 8000bde:	4041      	eorgt	r1, r0
 8000be0:	bfb8      	it	lt
 8000be2:	425b      	neglt	r3, r3
 8000be4:	2b19      	cmp	r3, #25
 8000be6:	bf88      	it	hi
 8000be8:	4770      	bxhi	lr
 8000bea:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bf6:	bf18      	it	ne
 8000bf8:	4240      	negne	r0, r0
 8000bfa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bfe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c02:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000c06:	bf18      	it	ne
 8000c08:	4249      	negne	r1, r1
 8000c0a:	ea92 0f03 	teq	r2, r3
 8000c0e:	d03f      	beq.n	8000c90 <__addsf3+0xd8>
 8000c10:	f1a2 0201 	sub.w	r2, r2, #1
 8000c14:	fa41 fc03 	asr.w	ip, r1, r3
 8000c18:	eb10 000c 	adds.w	r0, r0, ip
 8000c1c:	f1c3 0320 	rsb	r3, r3, #32
 8000c20:	fa01 f103 	lsl.w	r1, r1, r3
 8000c24:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c28:	d502      	bpl.n	8000c30 <__addsf3+0x78>
 8000c2a:	4249      	negs	r1, r1
 8000c2c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c30:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c34:	d313      	bcc.n	8000c5e <__addsf3+0xa6>
 8000c36:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c3a:	d306      	bcc.n	8000c4a <__addsf3+0x92>
 8000c3c:	0840      	lsrs	r0, r0, #1
 8000c3e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c42:	f102 0201 	add.w	r2, r2, #1
 8000c46:	2afe      	cmp	r2, #254	; 0xfe
 8000c48:	d251      	bcs.n	8000cee <__addsf3+0x136>
 8000c4a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c4e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c52:	bf08      	it	eq
 8000c54:	f020 0001 	biceq.w	r0, r0, #1
 8000c58:	ea40 0003 	orr.w	r0, r0, r3
 8000c5c:	4770      	bx	lr
 8000c5e:	0049      	lsls	r1, r1, #1
 8000c60:	eb40 0000 	adc.w	r0, r0, r0
 8000c64:	3a01      	subs	r2, #1
 8000c66:	bf28      	it	cs
 8000c68:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c6c:	d2ed      	bcs.n	8000c4a <__addsf3+0x92>
 8000c6e:	fab0 fc80 	clz	ip, r0
 8000c72:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c76:	ebb2 020c 	subs.w	r2, r2, ip
 8000c7a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c7e:	bfaa      	itet	ge
 8000c80:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c84:	4252      	neglt	r2, r2
 8000c86:	4318      	orrge	r0, r3
 8000c88:	bfbc      	itt	lt
 8000c8a:	40d0      	lsrlt	r0, r2
 8000c8c:	4318      	orrlt	r0, r3
 8000c8e:	4770      	bx	lr
 8000c90:	f092 0f00 	teq	r2, #0
 8000c94:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c98:	bf06      	itte	eq
 8000c9a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c9e:	3201      	addeq	r2, #1
 8000ca0:	3b01      	subne	r3, #1
 8000ca2:	e7b5      	b.n	8000c10 <__addsf3+0x58>
 8000ca4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ca8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cac:	bf18      	it	ne
 8000cae:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb2:	d021      	beq.n	8000cf8 <__addsf3+0x140>
 8000cb4:	ea92 0f03 	teq	r2, r3
 8000cb8:	d004      	beq.n	8000cc4 <__addsf3+0x10c>
 8000cba:	f092 0f00 	teq	r2, #0
 8000cbe:	bf08      	it	eq
 8000cc0:	4608      	moveq	r0, r1
 8000cc2:	4770      	bx	lr
 8000cc4:	ea90 0f01 	teq	r0, r1
 8000cc8:	bf1c      	itt	ne
 8000cca:	2000      	movne	r0, #0
 8000ccc:	4770      	bxne	lr
 8000cce:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cd2:	d104      	bne.n	8000cde <__addsf3+0x126>
 8000cd4:	0040      	lsls	r0, r0, #1
 8000cd6:	bf28      	it	cs
 8000cd8:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cdc:	4770      	bx	lr
 8000cde:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ce2:	bf3c      	itt	cc
 8000ce4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ce8:	4770      	bxcc	lr
 8000cea:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cee:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cf2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cf6:	4770      	bx	lr
 8000cf8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cfc:	bf16      	itet	ne
 8000cfe:	4608      	movne	r0, r1
 8000d00:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d04:	4601      	movne	r1, r0
 8000d06:	0242      	lsls	r2, r0, #9
 8000d08:	bf06      	itte	eq
 8000d0a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d0e:	ea90 0f01 	teqeq	r0, r1
 8000d12:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000d16:	4770      	bx	lr

08000d18 <__aeabi_ui2f>:
 8000d18:	f04f 0300 	mov.w	r3, #0
 8000d1c:	e004      	b.n	8000d28 <__aeabi_i2f+0x8>
 8000d1e:	bf00      	nop

08000d20 <__aeabi_i2f>:
 8000d20:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d24:	bf48      	it	mi
 8000d26:	4240      	negmi	r0, r0
 8000d28:	ea5f 0c00 	movs.w	ip, r0
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d34:	4601      	mov	r1, r0
 8000d36:	f04f 0000 	mov.w	r0, #0
 8000d3a:	e01c      	b.n	8000d76 <__aeabi_l2f+0x2a>

08000d3c <__aeabi_ul2f>:
 8000d3c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d40:	bf08      	it	eq
 8000d42:	4770      	bxeq	lr
 8000d44:	f04f 0300 	mov.w	r3, #0
 8000d48:	e00a      	b.n	8000d60 <__aeabi_l2f+0x14>
 8000d4a:	bf00      	nop

08000d4c <__aeabi_l2f>:
 8000d4c:	ea50 0201 	orrs.w	r2, r0, r1
 8000d50:	bf08      	it	eq
 8000d52:	4770      	bxeq	lr
 8000d54:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__aeabi_l2f+0x14>
 8000d5a:	4240      	negs	r0, r0
 8000d5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d60:	ea5f 0c01 	movs.w	ip, r1
 8000d64:	bf02      	ittt	eq
 8000d66:	4684      	moveq	ip, r0
 8000d68:	4601      	moveq	r1, r0
 8000d6a:	2000      	moveq	r0, #0
 8000d6c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d70:	bf08      	it	eq
 8000d72:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d76:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d7a:	fabc f28c 	clz	r2, ip
 8000d7e:	3a08      	subs	r2, #8
 8000d80:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d84:	db10      	blt.n	8000da8 <__aeabi_l2f+0x5c>
 8000d86:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8a:	4463      	add	r3, ip
 8000d8c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d90:	f1c2 0220 	rsb	r2, r2, #32
 8000d94:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d98:	fa20 f202 	lsr.w	r2, r0, r2
 8000d9c:	eb43 0002 	adc.w	r0, r3, r2
 8000da0:	bf08      	it	eq
 8000da2:	f020 0001 	biceq.w	r0, r0, #1
 8000da6:	4770      	bx	lr
 8000da8:	f102 0220 	add.w	r2, r2, #32
 8000dac:	fa01 fc02 	lsl.w	ip, r1, r2
 8000db0:	f1c2 0220 	rsb	r2, r2, #32
 8000db4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000db8:	fa21 f202 	lsr.w	r2, r1, r2
 8000dbc:	eb43 0002 	adc.w	r0, r3, r2
 8000dc0:	bf08      	it	eq
 8000dc2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dc6:	4770      	bx	lr

08000dc8 <__aeabi_fmul>:
 8000dc8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000dcc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dd0:	bf1e      	ittt	ne
 8000dd2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dd6:	ea92 0f0c 	teqne	r2, ip
 8000dda:	ea93 0f0c 	teqne	r3, ip
 8000dde:	d06f      	beq.n	8000ec0 <__aeabi_fmul+0xf8>
 8000de0:	441a      	add	r2, r3
 8000de2:	ea80 0c01 	eor.w	ip, r0, r1
 8000de6:	0240      	lsls	r0, r0, #9
 8000de8:	bf18      	it	ne
 8000dea:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dee:	d01e      	beq.n	8000e2e <__aeabi_fmul+0x66>
 8000df0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000df4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000df8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dfc:	fba0 3101 	umull	r3, r1, r0, r1
 8000e00:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e04:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000e08:	bf3e      	ittt	cc
 8000e0a:	0049      	lslcc	r1, r1, #1
 8000e0c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e10:	005b      	lslcc	r3, r3, #1
 8000e12:	ea40 0001 	orr.w	r0, r0, r1
 8000e16:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000e1a:	2afd      	cmp	r2, #253	; 0xfd
 8000e1c:	d81d      	bhi.n	8000e5a <__aeabi_fmul+0x92>
 8000e1e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000e22:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e26:	bf08      	it	eq
 8000e28:	f020 0001 	biceq.w	r0, r0, #1
 8000e2c:	4770      	bx	lr
 8000e2e:	f090 0f00 	teq	r0, #0
 8000e32:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e36:	bf08      	it	eq
 8000e38:	0249      	lsleq	r1, r1, #9
 8000e3a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e3e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e42:	3a7f      	subs	r2, #127	; 0x7f
 8000e44:	bfc2      	ittt	gt
 8000e46:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e4a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e4e:	4770      	bxgt	lr
 8000e50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e54:	f04f 0300 	mov.w	r3, #0
 8000e58:	3a01      	subs	r2, #1
 8000e5a:	dc5d      	bgt.n	8000f18 <__aeabi_fmul+0x150>
 8000e5c:	f112 0f19 	cmn.w	r2, #25
 8000e60:	bfdc      	itt	le
 8000e62:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e66:	4770      	bxle	lr
 8000e68:	f1c2 0200 	rsb	r2, r2, #0
 8000e6c:	0041      	lsls	r1, r0, #1
 8000e6e:	fa21 f102 	lsr.w	r1, r1, r2
 8000e72:	f1c2 0220 	rsb	r2, r2, #32
 8000e76:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e7a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e7e:	f140 0000 	adc.w	r0, r0, #0
 8000e82:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e86:	bf08      	it	eq
 8000e88:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e8c:	4770      	bx	lr
 8000e8e:	f092 0f00 	teq	r2, #0
 8000e92:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e96:	bf02      	ittt	eq
 8000e98:	0040      	lsleq	r0, r0, #1
 8000e9a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e9e:	3a01      	subeq	r2, #1
 8000ea0:	d0f9      	beq.n	8000e96 <__aeabi_fmul+0xce>
 8000ea2:	ea40 000c 	orr.w	r0, r0, ip
 8000ea6:	f093 0f00 	teq	r3, #0
 8000eaa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eae:	bf02      	ittt	eq
 8000eb0:	0049      	lsleq	r1, r1, #1
 8000eb2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000eb6:	3b01      	subeq	r3, #1
 8000eb8:	d0f9      	beq.n	8000eae <__aeabi_fmul+0xe6>
 8000eba:	ea41 010c 	orr.w	r1, r1, ip
 8000ebe:	e78f      	b.n	8000de0 <__aeabi_fmul+0x18>
 8000ec0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ec4:	ea92 0f0c 	teq	r2, ip
 8000ec8:	bf18      	it	ne
 8000eca:	ea93 0f0c 	teqne	r3, ip
 8000ece:	d00a      	beq.n	8000ee6 <__aeabi_fmul+0x11e>
 8000ed0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000ed4:	bf18      	it	ne
 8000ed6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eda:	d1d8      	bne.n	8000e8e <__aeabi_fmul+0xc6>
 8000edc:	ea80 0001 	eor.w	r0, r0, r1
 8000ee0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ee4:	4770      	bx	lr
 8000ee6:	f090 0f00 	teq	r0, #0
 8000eea:	bf17      	itett	ne
 8000eec:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ef0:	4608      	moveq	r0, r1
 8000ef2:	f091 0f00 	teqne	r1, #0
 8000ef6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000efa:	d014      	beq.n	8000f26 <__aeabi_fmul+0x15e>
 8000efc:	ea92 0f0c 	teq	r2, ip
 8000f00:	d101      	bne.n	8000f06 <__aeabi_fmul+0x13e>
 8000f02:	0242      	lsls	r2, r0, #9
 8000f04:	d10f      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f06:	ea93 0f0c 	teq	r3, ip
 8000f0a:	d103      	bne.n	8000f14 <__aeabi_fmul+0x14c>
 8000f0c:	024b      	lsls	r3, r1, #9
 8000f0e:	bf18      	it	ne
 8000f10:	4608      	movne	r0, r1
 8000f12:	d108      	bne.n	8000f26 <__aeabi_fmul+0x15e>
 8000f14:	ea80 0001 	eor.w	r0, r0, r1
 8000f18:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000f1c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f20:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f24:	4770      	bx	lr
 8000f26:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f2a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f2e:	4770      	bx	lr

08000f30 <__aeabi_fdiv>:
 8000f30:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f34:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f38:	bf1e      	ittt	ne
 8000f3a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f3e:	ea92 0f0c 	teqne	r2, ip
 8000f42:	ea93 0f0c 	teqne	r3, ip
 8000f46:	d069      	beq.n	800101c <__aeabi_fdiv+0xec>
 8000f48:	eba2 0203 	sub.w	r2, r2, r3
 8000f4c:	ea80 0c01 	eor.w	ip, r0, r1
 8000f50:	0249      	lsls	r1, r1, #9
 8000f52:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f56:	d037      	beq.n	8000fc8 <__aeabi_fdiv+0x98>
 8000f58:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f5c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f60:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f64:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f68:	428b      	cmp	r3, r1
 8000f6a:	bf38      	it	cc
 8000f6c:	005b      	lslcc	r3, r3, #1
 8000f6e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f72:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f76:	428b      	cmp	r3, r1
 8000f78:	bf24      	itt	cs
 8000f7a:	1a5b      	subcs	r3, r3, r1
 8000f7c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f80:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f84:	bf24      	itt	cs
 8000f86:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f8a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f8e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f92:	bf24      	itt	cs
 8000f94:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f98:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f9c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000fa0:	bf24      	itt	cs
 8000fa2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fa6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000faa:	011b      	lsls	r3, r3, #4
 8000fac:	bf18      	it	ne
 8000fae:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fb2:	d1e0      	bne.n	8000f76 <__aeabi_fdiv+0x46>
 8000fb4:	2afd      	cmp	r2, #253	; 0xfd
 8000fb6:	f63f af50 	bhi.w	8000e5a <__aeabi_fmul+0x92>
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fc0:	bf08      	it	eq
 8000fc2:	f020 0001 	biceq.w	r0, r0, #1
 8000fc6:	4770      	bx	lr
 8000fc8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fcc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fd0:	327f      	adds	r2, #127	; 0x7f
 8000fd2:	bfc2      	ittt	gt
 8000fd4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fd8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fdc:	4770      	bxgt	lr
 8000fde:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fe2:	f04f 0300 	mov.w	r3, #0
 8000fe6:	3a01      	subs	r2, #1
 8000fe8:	e737      	b.n	8000e5a <__aeabi_fmul+0x92>
 8000fea:	f092 0f00 	teq	r2, #0
 8000fee:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000ff2:	bf02      	ittt	eq
 8000ff4:	0040      	lsleq	r0, r0, #1
 8000ff6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000ffa:	3a01      	subeq	r2, #1
 8000ffc:	d0f9      	beq.n	8000ff2 <__aeabi_fdiv+0xc2>
 8000ffe:	ea40 000c 	orr.w	r0, r0, ip
 8001002:	f093 0f00 	teq	r3, #0
 8001006:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800100a:	bf02      	ittt	eq
 800100c:	0049      	lsleq	r1, r1, #1
 800100e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001012:	3b01      	subeq	r3, #1
 8001014:	d0f9      	beq.n	800100a <__aeabi_fdiv+0xda>
 8001016:	ea41 010c 	orr.w	r1, r1, ip
 800101a:	e795      	b.n	8000f48 <__aeabi_fdiv+0x18>
 800101c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001020:	ea92 0f0c 	teq	r2, ip
 8001024:	d108      	bne.n	8001038 <__aeabi_fdiv+0x108>
 8001026:	0242      	lsls	r2, r0, #9
 8001028:	f47f af7d 	bne.w	8000f26 <__aeabi_fmul+0x15e>
 800102c:	ea93 0f0c 	teq	r3, ip
 8001030:	f47f af70 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 8001034:	4608      	mov	r0, r1
 8001036:	e776      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001038:	ea93 0f0c 	teq	r3, ip
 800103c:	d104      	bne.n	8001048 <__aeabi_fdiv+0x118>
 800103e:	024b      	lsls	r3, r1, #9
 8001040:	f43f af4c 	beq.w	8000edc <__aeabi_fmul+0x114>
 8001044:	4608      	mov	r0, r1
 8001046:	e76e      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001048:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800104c:	bf18      	it	ne
 800104e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001052:	d1ca      	bne.n	8000fea <__aeabi_fdiv+0xba>
 8001054:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001058:	f47f af5c 	bne.w	8000f14 <__aeabi_fmul+0x14c>
 800105c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001060:	f47f af3c 	bne.w	8000edc <__aeabi_fmul+0x114>
 8001064:	e75f      	b.n	8000f26 <__aeabi_fmul+0x15e>
 8001066:	bf00      	nop

08001068 <__gesf2>:
 8001068:	f04f 3cff 	mov.w	ip, #4294967295
 800106c:	e006      	b.n	800107c <__cmpsf2+0x4>
 800106e:	bf00      	nop

08001070 <__lesf2>:
 8001070:	f04f 0c01 	mov.w	ip, #1
 8001074:	e002      	b.n	800107c <__cmpsf2+0x4>
 8001076:	bf00      	nop

08001078 <__cmpsf2>:
 8001078:	f04f 0c01 	mov.w	ip, #1
 800107c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8001080:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001084:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001088:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800108c:	bf18      	it	ne
 800108e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8001092:	d011      	beq.n	80010b8 <__cmpsf2+0x40>
 8001094:	b001      	add	sp, #4
 8001096:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800109a:	bf18      	it	ne
 800109c:	ea90 0f01 	teqne	r0, r1
 80010a0:	bf58      	it	pl
 80010a2:	ebb2 0003 	subspl.w	r0, r2, r3
 80010a6:	bf88      	it	hi
 80010a8:	17c8      	asrhi	r0, r1, #31
 80010aa:	bf38      	it	cc
 80010ac:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010b0:	bf18      	it	ne
 80010b2:	f040 0001 	orrne.w	r0, r0, #1
 80010b6:	4770      	bx	lr
 80010b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010bc:	d102      	bne.n	80010c4 <__cmpsf2+0x4c>
 80010be:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010c2:	d105      	bne.n	80010d0 <__cmpsf2+0x58>
 80010c4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010c8:	d1e4      	bne.n	8001094 <__cmpsf2+0x1c>
 80010ca:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ce:	d0e1      	beq.n	8001094 <__cmpsf2+0x1c>
 80010d0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop

080010d8 <__aeabi_cfrcmple>:
 80010d8:	4684      	mov	ip, r0
 80010da:	4608      	mov	r0, r1
 80010dc:	4661      	mov	r1, ip
 80010de:	e7ff      	b.n	80010e0 <__aeabi_cfcmpeq>

080010e0 <__aeabi_cfcmpeq>:
 80010e0:	b50f      	push	{r0, r1, r2, r3, lr}
 80010e2:	f7ff ffc9 	bl	8001078 <__cmpsf2>
 80010e6:	2800      	cmp	r0, #0
 80010e8:	bf48      	it	mi
 80010ea:	f110 0f00 	cmnmi.w	r0, #0
 80010ee:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010f0 <__aeabi_fcmpeq>:
 80010f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f4:	f7ff fff4 	bl	80010e0 <__aeabi_cfcmpeq>
 80010f8:	bf0c      	ite	eq
 80010fa:	2001      	moveq	r0, #1
 80010fc:	2000      	movne	r0, #0
 80010fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8001102:	bf00      	nop

08001104 <__aeabi_fcmplt>:
 8001104:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001108:	f7ff ffea 	bl	80010e0 <__aeabi_cfcmpeq>
 800110c:	bf34      	ite	cc
 800110e:	2001      	movcc	r0, #1
 8001110:	2000      	movcs	r0, #0
 8001112:	f85d fb08 	ldr.w	pc, [sp], #8
 8001116:	bf00      	nop

08001118 <__aeabi_fcmple>:
 8001118:	f84d ed08 	str.w	lr, [sp, #-8]!
 800111c:	f7ff ffe0 	bl	80010e0 <__aeabi_cfcmpeq>
 8001120:	bf94      	ite	ls
 8001122:	2001      	movls	r0, #1
 8001124:	2000      	movhi	r0, #0
 8001126:	f85d fb08 	ldr.w	pc, [sp], #8
 800112a:	bf00      	nop

0800112c <__aeabi_fcmpge>:
 800112c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001130:	f7ff ffd2 	bl	80010d8 <__aeabi_cfrcmple>
 8001134:	bf94      	ite	ls
 8001136:	2001      	movls	r0, #1
 8001138:	2000      	movhi	r0, #0
 800113a:	f85d fb08 	ldr.w	pc, [sp], #8
 800113e:	bf00      	nop

08001140 <__aeabi_fcmpgt>:
 8001140:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001144:	f7ff ffc8 	bl	80010d8 <__aeabi_cfrcmple>
 8001148:	bf34      	ite	cc
 800114a:	2001      	movcc	r0, #1
 800114c:	2000      	movcs	r0, #0
 800114e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001152:	bf00      	nop

08001154 <__aeabi_f2uiz>:
 8001154:	0042      	lsls	r2, r0, #1
 8001156:	d20e      	bcs.n	8001176 <__aeabi_f2uiz+0x22>
 8001158:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800115c:	d30b      	bcc.n	8001176 <__aeabi_f2uiz+0x22>
 800115e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001162:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001166:	d409      	bmi.n	800117c <__aeabi_f2uiz+0x28>
 8001168:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800116c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001170:	fa23 f002 	lsr.w	r0, r3, r2
 8001174:	4770      	bx	lr
 8001176:	f04f 0000 	mov.w	r0, #0
 800117a:	4770      	bx	lr
 800117c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001180:	d101      	bne.n	8001186 <__aeabi_f2uiz+0x32>
 8001182:	0242      	lsls	r2, r0, #9
 8001184:	d102      	bne.n	800118c <__aeabi_f2uiz+0x38>
 8001186:	f04f 30ff 	mov.w	r0, #4294967295
 800118a:	4770      	bx	lr
 800118c:	f04f 0000 	mov.w	r0, #0
 8001190:	4770      	bx	lr
 8001192:	bf00      	nop

08001194 <__aeabi_uldivmod>:
 8001194:	b953      	cbnz	r3, 80011ac <__aeabi_uldivmod+0x18>
 8001196:	b94a      	cbnz	r2, 80011ac <__aeabi_uldivmod+0x18>
 8001198:	2900      	cmp	r1, #0
 800119a:	bf08      	it	eq
 800119c:	2800      	cmpeq	r0, #0
 800119e:	bf1c      	itt	ne
 80011a0:	f04f 31ff 	movne.w	r1, #4294967295
 80011a4:	f04f 30ff 	movne.w	r0, #4294967295
 80011a8:	f000 b9ae 	b.w	8001508 <__aeabi_idiv0>
 80011ac:	f1ad 0c08 	sub.w	ip, sp, #8
 80011b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80011b4:	f000 f83e 	bl	8001234 <__udivmoddi4>
 80011b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80011bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80011c0:	b004      	add	sp, #16
 80011c2:	4770      	bx	lr

080011c4 <__aeabi_d2lz>:
 80011c4:	b538      	push	{r3, r4, r5, lr}
 80011c6:	4605      	mov	r5, r0
 80011c8:	460c      	mov	r4, r1
 80011ca:	2200      	movs	r2, #0
 80011cc:	2300      	movs	r3, #0
 80011ce:	4628      	mov	r0, r5
 80011d0:	4621      	mov	r1, r4
 80011d2:	f7ff fc15 	bl	8000a00 <__aeabi_dcmplt>
 80011d6:	b928      	cbnz	r0, 80011e4 <__aeabi_d2lz+0x20>
 80011d8:	4628      	mov	r0, r5
 80011da:	4621      	mov	r1, r4
 80011dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011e0:	f000 b80a 	b.w	80011f8 <__aeabi_d2ulz>
 80011e4:	4628      	mov	r0, r5
 80011e6:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 80011ea:	f000 f805 	bl	80011f8 <__aeabi_d2ulz>
 80011ee:	4240      	negs	r0, r0
 80011f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80011f4:	bd38      	pop	{r3, r4, r5, pc}
 80011f6:	bf00      	nop

080011f8 <__aeabi_d2ulz>:
 80011f8:	b5d0      	push	{r4, r6, r7, lr}
 80011fa:	2200      	movs	r2, #0
 80011fc:	4b0b      	ldr	r3, [pc, #44]	; (800122c <__aeabi_d2ulz+0x34>)
 80011fe:	4606      	mov	r6, r0
 8001200:	460f      	mov	r7, r1
 8001202:	f7ff f98b 	bl	800051c <__aeabi_dmul>
 8001206:	f7ff fc61 	bl	8000acc <__aeabi_d2uiz>
 800120a:	4604      	mov	r4, r0
 800120c:	f7ff f90c 	bl	8000428 <__aeabi_ui2d>
 8001210:	2200      	movs	r2, #0
 8001212:	4b07      	ldr	r3, [pc, #28]	; (8001230 <__aeabi_d2ulz+0x38>)
 8001214:	f7ff f982 	bl	800051c <__aeabi_dmul>
 8001218:	4602      	mov	r2, r0
 800121a:	460b      	mov	r3, r1
 800121c:	4630      	mov	r0, r6
 800121e:	4639      	mov	r1, r7
 8001220:	f7fe ffc4 	bl	80001ac <__aeabi_dsub>
 8001224:	f7ff fc52 	bl	8000acc <__aeabi_d2uiz>
 8001228:	4621      	mov	r1, r4
 800122a:	bdd0      	pop	{r4, r6, r7, pc}
 800122c:	3df00000 	.word	0x3df00000
 8001230:	41f00000 	.word	0x41f00000

08001234 <__udivmoddi4>:
 8001234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001238:	9e08      	ldr	r6, [sp, #32]
 800123a:	460d      	mov	r5, r1
 800123c:	4604      	mov	r4, r0
 800123e:	4688      	mov	r8, r1
 8001240:	2b00      	cmp	r3, #0
 8001242:	d14d      	bne.n	80012e0 <__udivmoddi4+0xac>
 8001244:	428a      	cmp	r2, r1
 8001246:	4694      	mov	ip, r2
 8001248:	d968      	bls.n	800131c <__udivmoddi4+0xe8>
 800124a:	fab2 f282 	clz	r2, r2
 800124e:	b152      	cbz	r2, 8001266 <__udivmoddi4+0x32>
 8001250:	fa01 f302 	lsl.w	r3, r1, r2
 8001254:	f1c2 0120 	rsb	r1, r2, #32
 8001258:	fa20 f101 	lsr.w	r1, r0, r1
 800125c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001260:	ea41 0803 	orr.w	r8, r1, r3
 8001264:	4094      	lsls	r4, r2
 8001266:	ea4f 411c 	mov.w	r1, ip, lsr #16
 800126a:	fbb8 f7f1 	udiv	r7, r8, r1
 800126e:	fa1f fe8c 	uxth.w	lr, ip
 8001272:	fb01 8817 	mls	r8, r1, r7, r8
 8001276:	fb07 f00e 	mul.w	r0, r7, lr
 800127a:	0c23      	lsrs	r3, r4, #16
 800127c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8001280:	4298      	cmp	r0, r3
 8001282:	d90a      	bls.n	800129a <__udivmoddi4+0x66>
 8001284:	eb1c 0303 	adds.w	r3, ip, r3
 8001288:	f107 35ff 	add.w	r5, r7, #4294967295
 800128c:	f080 811e 	bcs.w	80014cc <__udivmoddi4+0x298>
 8001290:	4298      	cmp	r0, r3
 8001292:	f240 811b 	bls.w	80014cc <__udivmoddi4+0x298>
 8001296:	3f02      	subs	r7, #2
 8001298:	4463      	add	r3, ip
 800129a:	1a1b      	subs	r3, r3, r0
 800129c:	fbb3 f0f1 	udiv	r0, r3, r1
 80012a0:	fb01 3310 	mls	r3, r1, r0, r3
 80012a4:	fb00 fe0e 	mul.w	lr, r0, lr
 80012a8:	b2a4      	uxth	r4, r4
 80012aa:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80012ae:	45a6      	cmp	lr, r4
 80012b0:	d90a      	bls.n	80012c8 <__udivmoddi4+0x94>
 80012b2:	eb1c 0404 	adds.w	r4, ip, r4
 80012b6:	f100 33ff 	add.w	r3, r0, #4294967295
 80012ba:	f080 8109 	bcs.w	80014d0 <__udivmoddi4+0x29c>
 80012be:	45a6      	cmp	lr, r4
 80012c0:	f240 8106 	bls.w	80014d0 <__udivmoddi4+0x29c>
 80012c4:	4464      	add	r4, ip
 80012c6:	3802      	subs	r0, #2
 80012c8:	2100      	movs	r1, #0
 80012ca:	eba4 040e 	sub.w	r4, r4, lr
 80012ce:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80012d2:	b11e      	cbz	r6, 80012dc <__udivmoddi4+0xa8>
 80012d4:	2300      	movs	r3, #0
 80012d6:	40d4      	lsrs	r4, r2
 80012d8:	e9c6 4300 	strd	r4, r3, [r6]
 80012dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012e0:	428b      	cmp	r3, r1
 80012e2:	d908      	bls.n	80012f6 <__udivmoddi4+0xc2>
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	f000 80ee 	beq.w	80014c6 <__udivmoddi4+0x292>
 80012ea:	2100      	movs	r1, #0
 80012ec:	e9c6 0500 	strd	r0, r5, [r6]
 80012f0:	4608      	mov	r0, r1
 80012f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012f6:	fab3 f183 	clz	r1, r3
 80012fa:	2900      	cmp	r1, #0
 80012fc:	d14a      	bne.n	8001394 <__udivmoddi4+0x160>
 80012fe:	42ab      	cmp	r3, r5
 8001300:	d302      	bcc.n	8001308 <__udivmoddi4+0xd4>
 8001302:	4282      	cmp	r2, r0
 8001304:	f200 80fc 	bhi.w	8001500 <__udivmoddi4+0x2cc>
 8001308:	1a84      	subs	r4, r0, r2
 800130a:	eb65 0303 	sbc.w	r3, r5, r3
 800130e:	2001      	movs	r0, #1
 8001310:	4698      	mov	r8, r3
 8001312:	2e00      	cmp	r6, #0
 8001314:	d0e2      	beq.n	80012dc <__udivmoddi4+0xa8>
 8001316:	e9c6 4800 	strd	r4, r8, [r6]
 800131a:	e7df      	b.n	80012dc <__udivmoddi4+0xa8>
 800131c:	b902      	cbnz	r2, 8001320 <__udivmoddi4+0xec>
 800131e:	deff      	udf	#255	; 0xff
 8001320:	fab2 f282 	clz	r2, r2
 8001324:	2a00      	cmp	r2, #0
 8001326:	f040 8091 	bne.w	800144c <__udivmoddi4+0x218>
 800132a:	eba1 000c 	sub.w	r0, r1, ip
 800132e:	2101      	movs	r1, #1
 8001330:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8001334:	fa1f fe8c 	uxth.w	lr, ip
 8001338:	fbb0 f3f7 	udiv	r3, r0, r7
 800133c:	fb07 0013 	mls	r0, r7, r3, r0
 8001340:	0c25      	lsrs	r5, r4, #16
 8001342:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8001346:	fb0e f003 	mul.w	r0, lr, r3
 800134a:	42a8      	cmp	r0, r5
 800134c:	d908      	bls.n	8001360 <__udivmoddi4+0x12c>
 800134e:	eb1c 0505 	adds.w	r5, ip, r5
 8001352:	f103 38ff 	add.w	r8, r3, #4294967295
 8001356:	d202      	bcs.n	800135e <__udivmoddi4+0x12a>
 8001358:	42a8      	cmp	r0, r5
 800135a:	f200 80ce 	bhi.w	80014fa <__udivmoddi4+0x2c6>
 800135e:	4643      	mov	r3, r8
 8001360:	1a2d      	subs	r5, r5, r0
 8001362:	fbb5 f0f7 	udiv	r0, r5, r7
 8001366:	fb07 5510 	mls	r5, r7, r0, r5
 800136a:	fb0e fe00 	mul.w	lr, lr, r0
 800136e:	b2a4      	uxth	r4, r4
 8001370:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8001374:	45a6      	cmp	lr, r4
 8001376:	d908      	bls.n	800138a <__udivmoddi4+0x156>
 8001378:	eb1c 0404 	adds.w	r4, ip, r4
 800137c:	f100 35ff 	add.w	r5, r0, #4294967295
 8001380:	d202      	bcs.n	8001388 <__udivmoddi4+0x154>
 8001382:	45a6      	cmp	lr, r4
 8001384:	f200 80b6 	bhi.w	80014f4 <__udivmoddi4+0x2c0>
 8001388:	4628      	mov	r0, r5
 800138a:	eba4 040e 	sub.w	r4, r4, lr
 800138e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001392:	e79e      	b.n	80012d2 <__udivmoddi4+0x9e>
 8001394:	f1c1 0720 	rsb	r7, r1, #32
 8001398:	408b      	lsls	r3, r1
 800139a:	fa22 fc07 	lsr.w	ip, r2, r7
 800139e:	ea4c 0c03 	orr.w	ip, ip, r3
 80013a2:	fa25 fa07 	lsr.w	sl, r5, r7
 80013a6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80013aa:	fbba f8f9 	udiv	r8, sl, r9
 80013ae:	fa20 f307 	lsr.w	r3, r0, r7
 80013b2:	fb09 aa18 	mls	sl, r9, r8, sl
 80013b6:	408d      	lsls	r5, r1
 80013b8:	fa1f fe8c 	uxth.w	lr, ip
 80013bc:	431d      	orrs	r5, r3
 80013be:	fa00 f301 	lsl.w	r3, r0, r1
 80013c2:	fb08 f00e 	mul.w	r0, r8, lr
 80013c6:	0c2c      	lsrs	r4, r5, #16
 80013c8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80013cc:	42a0      	cmp	r0, r4
 80013ce:	fa02 f201 	lsl.w	r2, r2, r1
 80013d2:	d90b      	bls.n	80013ec <__udivmoddi4+0x1b8>
 80013d4:	eb1c 0404 	adds.w	r4, ip, r4
 80013d8:	f108 3aff 	add.w	sl, r8, #4294967295
 80013dc:	f080 8088 	bcs.w	80014f0 <__udivmoddi4+0x2bc>
 80013e0:	42a0      	cmp	r0, r4
 80013e2:	f240 8085 	bls.w	80014f0 <__udivmoddi4+0x2bc>
 80013e6:	f1a8 0802 	sub.w	r8, r8, #2
 80013ea:	4464      	add	r4, ip
 80013ec:	1a24      	subs	r4, r4, r0
 80013ee:	fbb4 f0f9 	udiv	r0, r4, r9
 80013f2:	fb09 4410 	mls	r4, r9, r0, r4
 80013f6:	fb00 fe0e 	mul.w	lr, r0, lr
 80013fa:	b2ad      	uxth	r5, r5
 80013fc:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8001400:	45a6      	cmp	lr, r4
 8001402:	d908      	bls.n	8001416 <__udivmoddi4+0x1e2>
 8001404:	eb1c 0404 	adds.w	r4, ip, r4
 8001408:	f100 35ff 	add.w	r5, r0, #4294967295
 800140c:	d26c      	bcs.n	80014e8 <__udivmoddi4+0x2b4>
 800140e:	45a6      	cmp	lr, r4
 8001410:	d96a      	bls.n	80014e8 <__udivmoddi4+0x2b4>
 8001412:	3802      	subs	r0, #2
 8001414:	4464      	add	r4, ip
 8001416:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800141a:	fba0 9502 	umull	r9, r5, r0, r2
 800141e:	eba4 040e 	sub.w	r4, r4, lr
 8001422:	42ac      	cmp	r4, r5
 8001424:	46c8      	mov	r8, r9
 8001426:	46ae      	mov	lr, r5
 8001428:	d356      	bcc.n	80014d8 <__udivmoddi4+0x2a4>
 800142a:	d053      	beq.n	80014d4 <__udivmoddi4+0x2a0>
 800142c:	2e00      	cmp	r6, #0
 800142e:	d069      	beq.n	8001504 <__udivmoddi4+0x2d0>
 8001430:	ebb3 0208 	subs.w	r2, r3, r8
 8001434:	eb64 040e 	sbc.w	r4, r4, lr
 8001438:	fa22 f301 	lsr.w	r3, r2, r1
 800143c:	fa04 f707 	lsl.w	r7, r4, r7
 8001440:	431f      	orrs	r7, r3
 8001442:	40cc      	lsrs	r4, r1
 8001444:	e9c6 7400 	strd	r7, r4, [r6]
 8001448:	2100      	movs	r1, #0
 800144a:	e747      	b.n	80012dc <__udivmoddi4+0xa8>
 800144c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001450:	f1c2 0120 	rsb	r1, r2, #32
 8001454:	fa25 f301 	lsr.w	r3, r5, r1
 8001458:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800145c:	fa20 f101 	lsr.w	r1, r0, r1
 8001460:	4095      	lsls	r5, r2
 8001462:	430d      	orrs	r5, r1
 8001464:	fbb3 f1f7 	udiv	r1, r3, r7
 8001468:	fb07 3311 	mls	r3, r7, r1, r3
 800146c:	fa1f fe8c 	uxth.w	lr, ip
 8001470:	0c28      	lsrs	r0, r5, #16
 8001472:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8001476:	fb01 f30e 	mul.w	r3, r1, lr
 800147a:	4283      	cmp	r3, r0
 800147c:	fa04 f402 	lsl.w	r4, r4, r2
 8001480:	d908      	bls.n	8001494 <__udivmoddi4+0x260>
 8001482:	eb1c 0000 	adds.w	r0, ip, r0
 8001486:	f101 38ff 	add.w	r8, r1, #4294967295
 800148a:	d22f      	bcs.n	80014ec <__udivmoddi4+0x2b8>
 800148c:	4283      	cmp	r3, r0
 800148e:	d92d      	bls.n	80014ec <__udivmoddi4+0x2b8>
 8001490:	3902      	subs	r1, #2
 8001492:	4460      	add	r0, ip
 8001494:	1ac0      	subs	r0, r0, r3
 8001496:	fbb0 f3f7 	udiv	r3, r0, r7
 800149a:	fb07 0013 	mls	r0, r7, r3, r0
 800149e:	b2ad      	uxth	r5, r5
 80014a0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80014a4:	fb03 f00e 	mul.w	r0, r3, lr
 80014a8:	42a8      	cmp	r0, r5
 80014aa:	d908      	bls.n	80014be <__udivmoddi4+0x28a>
 80014ac:	eb1c 0505 	adds.w	r5, ip, r5
 80014b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80014b4:	d216      	bcs.n	80014e4 <__udivmoddi4+0x2b0>
 80014b6:	42a8      	cmp	r0, r5
 80014b8:	d914      	bls.n	80014e4 <__udivmoddi4+0x2b0>
 80014ba:	3b02      	subs	r3, #2
 80014bc:	4465      	add	r5, ip
 80014be:	1a28      	subs	r0, r5, r0
 80014c0:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80014c4:	e738      	b.n	8001338 <__udivmoddi4+0x104>
 80014c6:	4631      	mov	r1, r6
 80014c8:	4630      	mov	r0, r6
 80014ca:	e707      	b.n	80012dc <__udivmoddi4+0xa8>
 80014cc:	462f      	mov	r7, r5
 80014ce:	e6e4      	b.n	800129a <__udivmoddi4+0x66>
 80014d0:	4618      	mov	r0, r3
 80014d2:	e6f9      	b.n	80012c8 <__udivmoddi4+0x94>
 80014d4:	454b      	cmp	r3, r9
 80014d6:	d2a9      	bcs.n	800142c <__udivmoddi4+0x1f8>
 80014d8:	ebb9 0802 	subs.w	r8, r9, r2
 80014dc:	eb65 0e0c 	sbc.w	lr, r5, ip
 80014e0:	3801      	subs	r0, #1
 80014e2:	e7a3      	b.n	800142c <__udivmoddi4+0x1f8>
 80014e4:	4643      	mov	r3, r8
 80014e6:	e7ea      	b.n	80014be <__udivmoddi4+0x28a>
 80014e8:	4628      	mov	r0, r5
 80014ea:	e794      	b.n	8001416 <__udivmoddi4+0x1e2>
 80014ec:	4641      	mov	r1, r8
 80014ee:	e7d1      	b.n	8001494 <__udivmoddi4+0x260>
 80014f0:	46d0      	mov	r8, sl
 80014f2:	e77b      	b.n	80013ec <__udivmoddi4+0x1b8>
 80014f4:	4464      	add	r4, ip
 80014f6:	3802      	subs	r0, #2
 80014f8:	e747      	b.n	800138a <__udivmoddi4+0x156>
 80014fa:	3b02      	subs	r3, #2
 80014fc:	4465      	add	r5, ip
 80014fe:	e72f      	b.n	8001360 <__udivmoddi4+0x12c>
 8001500:	4608      	mov	r0, r1
 8001502:	e706      	b.n	8001312 <__udivmoddi4+0xde>
 8001504:	4631      	mov	r1, r6
 8001506:	e6e9      	b.n	80012dc <__udivmoddi4+0xa8>

08001508 <__aeabi_idiv0>:
 8001508:	4770      	bx	lr
 800150a:	bf00      	nop

0800150c <__circ_gbuf_pop>:
#include <string.h>

#include <circular_buffer.h>

int __circ_gbuf_pop(circ_gbuf_t *circ_buf, void *elem, int read_only)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b086      	sub	sp, #24
 8001510:	af00      	add	r7, sp, #0
 8001512:	60f8      	str	r0, [r7, #12]
 8001514:	60b9      	str	r1, [r7, #8]
 8001516:	607a      	str	r2, [r7, #4]
	int total;
	char *tail;

	total = circ_buf->push_count - circ_buf->pop_count;
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	889b      	ldrh	r3, [r3, #4]
 800151c:	461a      	mov	r2, r3
 800151e:	68fb      	ldr	r3, [r7, #12]
 8001520:	88db      	ldrh	r3, [r3, #6]
 8001522:	1ad3      	subs	r3, r2, r3
 8001524:	617b      	str	r3, [r7, #20]
	if (total < 0)
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	2b00      	cmp	r3, #0
 800152a:	da05      	bge.n	8001538 <__circ_gbuf_pop+0x2c>
		total += (2 * circ_buf->size);
 800152c:	68fb      	ldr	r3, [r7, #12]
 800152e:	891b      	ldrh	r3, [r3, #8]
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	697a      	ldr	r2, [r7, #20]
 8001534:	4413      	add	r3, r2
 8001536:	617b      	str	r3, [r7, #20]

	if (total == 0)
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	2b00      	cmp	r3, #0
 800153c:	d102      	bne.n	8001544 <__circ_gbuf_pop+0x38>
		return -1; // Empty
 800153e:	f04f 33ff 	mov.w	r3, #4294967295
 8001542:	e031      	b.n	80015a8 <__circ_gbuf_pop+0x9c>

	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	6819      	ldr	r1, [r3, #0]
 8001548:	68fb      	ldr	r3, [r7, #12]
 800154a:	88db      	ldrh	r3, [r3, #6]
 800154c:	68fa      	ldr	r2, [r7, #12]
 800154e:	8912      	ldrh	r2, [r2, #8]
 8001550:	fbb3 f0f2 	udiv	r0, r3, r2
 8001554:	fb00 f202 	mul.w	r2, r0, r2
 8001558:	1a9b      	subs	r3, r3, r2
 800155a:	b29b      	uxth	r3, r3
 800155c:	461a      	mov	r2, r3
			* circ_buf->element_size);
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	895b      	ldrh	r3, [r3, #10]
 8001562:	fb02 f303 	mul.w	r3, r2, r3
	tail = (char *)circ_buf->buffer + ((circ_buf->pop_count % circ_buf->size)
 8001566:	440b      	add	r3, r1
 8001568:	613b      	str	r3, [r7, #16]

	if (elem)
 800156a:	68bb      	ldr	r3, [r7, #8]
 800156c:	2b00      	cmp	r3, #0
 800156e:	d006      	beq.n	800157e <__circ_gbuf_pop+0x72>
		memcpy(elem, tail, circ_buf->element_size);
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	895b      	ldrh	r3, [r3, #10]
 8001574:	461a      	mov	r2, r3
 8001576:	6939      	ldr	r1, [r7, #16]
 8001578:	68b8      	ldr	r0, [r7, #8]
 800157a:	f009 fa67 	bl	800aa4c <memcpy>

	if (!read_only) {
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	2b00      	cmp	r3, #0
 8001582:	d110      	bne.n	80015a6 <__circ_gbuf_pop+0x9a>
#ifdef CRICBUF_CLEAN_ON_POP
		memset(tail, 0, circ_buf->element_size);
#endif
		circ_buf->pop_count++;
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	88db      	ldrh	r3, [r3, #6]
 8001588:	3301      	adds	r3, #1
 800158a:	b29a      	uxth	r2, r3
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	80da      	strh	r2, [r3, #6]
		if (circ_buf->pop_count >= (2*circ_buf->size))
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	88db      	ldrh	r3, [r3, #6]
 8001594:	461a      	mov	r2, r3
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	891b      	ldrh	r3, [r3, #8]
 800159a:	005b      	lsls	r3, r3, #1
 800159c:	429a      	cmp	r2, r3
 800159e:	db02      	blt.n	80015a6 <__circ_gbuf_pop+0x9a>
			circ_buf->pop_count = 0;
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	2200      	movs	r2, #0
 80015a4:	80da      	strh	r2, [r3, #6]
	}
	return 0;
 80015a6:	2300      	movs	r3, #0
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3718      	adds	r7, #24
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <__circ_gbuf_push>:

int __circ_gbuf_push(circ_gbuf_t *circ_buf, void *elem)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b084      	sub	sp, #16
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	6039      	str	r1, [r7, #0]
	int total;
	char *head;

	total = circ_buf->push_count - circ_buf->pop_count;
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	889b      	ldrh	r3, [r3, #4]
 80015be:	461a      	mov	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	88db      	ldrh	r3, [r3, #6]
 80015c4:	1ad3      	subs	r3, r2, r3
 80015c6:	60fb      	str	r3, [r7, #12]
	if (total < 0)
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	da05      	bge.n	80015da <__circ_gbuf_push+0x2a>
		total += (2 * circ_buf->size);
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	891b      	ldrh	r3, [r3, #8]
 80015d2:	005b      	lsls	r3, r3, #1
 80015d4:	68fa      	ldr	r2, [r7, #12]
 80015d6:	4413      	add	r3, r2
 80015d8:	60fb      	str	r3, [r7, #12]

	if (total >=  circ_buf->size)
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	891b      	ldrh	r3, [r3, #8]
 80015de:	461a      	mov	r2, r3
 80015e0:	68fb      	ldr	r3, [r7, #12]
 80015e2:	4293      	cmp	r3, r2
 80015e4:	db02      	blt.n	80015ec <__circ_gbuf_push+0x3c>
		return -1; // Full
 80015e6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ea:	e02b      	b.n	8001644 <__circ_gbuf_push+0x94>

	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	6819      	ldr	r1, [r3, #0]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	889b      	ldrh	r3, [r3, #4]
 80015f4:	687a      	ldr	r2, [r7, #4]
 80015f6:	8912      	ldrh	r2, [r2, #8]
 80015f8:	fbb3 f0f2 	udiv	r0, r3, r2
 80015fc:	fb00 f202 	mul.w	r2, r0, r2
 8001600:	1a9b      	subs	r3, r3, r2
 8001602:	b29b      	uxth	r3, r3
 8001604:	461a      	mov	r2, r3
			* circ_buf->element_size );
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	895b      	ldrh	r3, [r3, #10]
 800160a:	fb02 f303 	mul.w	r3, r2, r3
	head = (char *)circ_buf->buffer + ( (circ_buf->push_count % circ_buf->size)
 800160e:	440b      	add	r3, r1
 8001610:	60bb      	str	r3, [r7, #8]
	memcpy(head, elem, circ_buf->element_size);
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	895b      	ldrh	r3, [r3, #10]
 8001616:	461a      	mov	r2, r3
 8001618:	6839      	ldr	r1, [r7, #0]
 800161a:	68b8      	ldr	r0, [r7, #8]
 800161c:	f009 fa16 	bl	800aa4c <memcpy>
	circ_buf->push_count++;
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	889b      	ldrh	r3, [r3, #4]
 8001624:	3301      	adds	r3, #1
 8001626:	b29a      	uxth	r2, r3
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	809a      	strh	r2, [r3, #4]
	if (circ_buf->push_count >= (2*circ_buf->size))
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	889b      	ldrh	r3, [r3, #4]
 8001630:	461a      	mov	r2, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	891b      	ldrh	r3, [r3, #8]
 8001636:	005b      	lsls	r3, r3, #1
 8001638:	429a      	cmp	r2, r3
 800163a:	db02      	blt.n	8001642 <__circ_gbuf_push+0x92>
		circ_buf->push_count = 0;
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	2200      	movs	r2, #0
 8001640:	809a      	strh	r2, [r3, #4]
	return 0;
 8001642:	2300      	movs	r3, #0
}
 8001644:	4618      	mov	r0, r3
 8001646:	3710      	adds	r7, #16
 8001648:	46bd      	mov	sp, r7
 800164a:	bd80      	pop	{r7, pc}

0800164c <Relay_control>:
extern uint16_t DAC_tx_tmp_buffer[2];
extern float DDS_FTW;


//==============================================================================================
void Relay_control(uint8_t relay,uint8_t state){
 800164c:	b580      	push	{r7, lr}
 800164e:	b084      	sub	sp, #16
 8001650:	af00      	add	r7, sp, #0
 8001652:	4603      	mov	r3, r0
 8001654:	460a      	mov	r2, r1
 8001656:	71fb      	strb	r3, [r7, #7]
 8001658:	4613      	mov	r3, r2
 800165a:	71bb      	strb	r3, [r7, #6]
	int Relay_address=0;
 800165c:	2300      	movs	r3, #0
 800165e:	60fb      	str	r3, [r7, #12]
	if(relay>3 || state>1) return;
 8001660:	79fb      	ldrb	r3, [r7, #7]
 8001662:	2b03      	cmp	r3, #3
 8001664:	f200 80a3 	bhi.w	80017ae <Relay_control+0x162>
 8001668:	79bb      	ldrb	r3, [r7, #6]
 800166a:	2b01      	cmp	r3, #1
 800166c:	f200 809f 	bhi.w	80017ae <Relay_control+0x162>

	if(relay==0x00 && state==0x00)
 8001670:	79fb      	ldrb	r3, [r7, #7]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d141      	bne.n	80016fa <Relay_control+0xae>
 8001676:	79bb      	ldrb	r3, [r7, #6]
 8001678:	2b00      	cmp	r3, #0
 800167a:	d13e      	bne.n	80016fa <Relay_control+0xae>
	{
		while(Relay_address<=0x5) // Set all OUTx to zero
 800167c:	e039      	b.n	80016f2 <Relay_control+0xa6>
		{
			HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 800167e:	68fb      	ldr	r3, [r7, #12]
 8001680:	b2db      	uxtb	r3, r3
 8001682:	f003 0301 	and.w	r3, r3, #1
 8001686:	b2db      	uxtb	r3, r3
 8001688:	461a      	mov	r2, r3
 800168a:	2102      	movs	r1, #2
 800168c:	484a      	ldr	r0, [pc, #296]	; (80017b8 <Relay_control+0x16c>)
 800168e:	f004 fac5 	bl	8005c1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001692:	68fb      	ldr	r3, [r7, #12]
 8001694:	105b      	asrs	r3, r3, #1
 8001696:	b2db      	uxtb	r3, r3
 8001698:	f003 0301 	and.w	r3, r3, #1
 800169c:	b2db      	uxtb	r3, r3
 800169e:	461a      	mov	r2, r3
 80016a0:	2104      	movs	r1, #4
 80016a2:	4845      	ldr	r0, [pc, #276]	; (80017b8 <Relay_control+0x16c>)
 80016a4:	f004 faba 	bl	8005c1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	109b      	asrs	r3, r3, #2
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	f003 0301 	and.w	r3, r3, #1
 80016b2:	b2db      	uxtb	r3, r3
 80016b4:	461a      	mov	r2, r3
 80016b6:	2108      	movs	r1, #8
 80016b8:	483f      	ldr	r0, [pc, #252]	; (80017b8 <Relay_control+0x16c>)
 80016ba:	f004 faaf 	bl	8005c1c <HAL_GPIO_WritePin>

			HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 0); // LVL 0
 80016be:	2200      	movs	r2, #0
 80016c0:	2101      	movs	r1, #1
 80016c2:	483d      	ldr	r0, [pc, #244]	; (80017b8 <Relay_control+0x16c>)
 80016c4:	f004 faaa 	bl	8005c1c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 80016c8:	2200      	movs	r2, #0
 80016ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016ce:	483b      	ldr	r0, [pc, #236]	; (80017bc <Relay_control+0x170>)
 80016d0:	f004 faa4 	bl	8005c1c <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016d4:	2001      	movs	r0, #1
 80016d6:	f003 ff51 	bl	800557c <HAL_Delay>
			HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1);
 80016da:	2201      	movs	r2, #1
 80016dc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80016e0:	4836      	ldr	r0, [pc, #216]	; (80017bc <Relay_control+0x170>)
 80016e2:	f004 fa9b 	bl	8005c1c <HAL_GPIO_WritePin>
			HAL_Delay(1); // wait 1ms
 80016e6:	2001      	movs	r0, #1
 80016e8:	f003 ff48 	bl	800557c <HAL_Delay>
			Relay_address++;
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	3301      	adds	r3, #1
 80016f0:	60fb      	str	r3, [r7, #12]
		while(Relay_address<=0x5) // Set all OUTx to zero
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	2b05      	cmp	r3, #5
 80016f6:	ddc2      	ble.n	800167e <Relay_control+0x32>
		}
		return;
 80016f8:	e05a      	b.n	80017b0 <Relay_control+0x164>
	}


	switch (relay)
 80016fa:	79fb      	ldrb	r3, [r7, #7]
 80016fc:	2b03      	cmp	r3, #3
 80016fe:	d006      	beq.n	800170e <Relay_control+0xc2>
 8001700:	2b03      	cmp	r3, #3
 8001702:	dc1f      	bgt.n	8001744 <Relay_control+0xf8>
 8001704:	2b01      	cmp	r3, #1
 8001706:	d014      	beq.n	8001732 <Relay_control+0xe6>
 8001708:	2b02      	cmp	r3, #2
 800170a:	d009      	beq.n	8001720 <Relay_control+0xd4>
 800170c:	e01a      	b.n	8001744 <Relay_control+0xf8>
	{
	case 3:
		if (state==1){
 800170e:	79bb      	ldrb	r3, [r7, #6]
 8001710:	2b01      	cmp	r3, #1
 8001712:	d102      	bne.n	800171a <Relay_control+0xce>
			Relay_address=0x5; //OUT6
 8001714:	2305      	movs	r3, #5
 8001716:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x4; //OUT5
		} break;
 8001718:	e014      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x4; //OUT5
 800171a:	2304      	movs	r3, #4
 800171c:	60fb      	str	r3, [r7, #12]
		} break;
 800171e:	e011      	b.n	8001744 <Relay_control+0xf8>
	case 2:
		if (state==1){
 8001720:	79bb      	ldrb	r3, [r7, #6]
 8001722:	2b01      	cmp	r3, #1
 8001724:	d102      	bne.n	800172c <Relay_control+0xe0>
			Relay_address=0x3; //OUT4
 8001726:	2303      	movs	r3, #3
 8001728:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x2; //OUT3
		} break;
 800172a:	e00b      	b.n	8001744 <Relay_control+0xf8>
			Relay_address=0x2; //OUT3
 800172c:	2302      	movs	r3, #2
 800172e:	60fb      	str	r3, [r7, #12]
		} break;
 8001730:	e008      	b.n	8001744 <Relay_control+0xf8>
	case 1:
		if (state==1){
 8001732:	79bb      	ldrb	r3, [r7, #6]
 8001734:	2b01      	cmp	r3, #1
 8001736:	d102      	bne.n	800173e <Relay_control+0xf2>
			Relay_address=0x1; //OUT2
 8001738:	2301      	movs	r3, #1
 800173a:	60fb      	str	r3, [r7, #12]
		}else{
			Relay_address=0x0; //OUT1
		} break;
 800173c:	e001      	b.n	8001742 <Relay_control+0xf6>
			Relay_address=0x0; //OUT1
 800173e:	2300      	movs	r3, #0
 8001740:	60fb      	str	r3, [r7, #12]
		} break;
 8001742:	bf00      	nop
	}

	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin,  Relay_address & 0x1     );
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	b2db      	uxtb	r3, r3
 8001748:	f003 0301 	and.w	r3, r3, #1
 800174c:	b2db      	uxtb	r3, r3
 800174e:	461a      	mov	r2, r3
 8001750:	2102      	movs	r1, #2
 8001752:	4819      	ldr	r0, [pc, #100]	; (80017b8 <Relay_control+0x16c>)
 8001754:	f004 fa62 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (Relay_address & 0x2) >>1);
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	105b      	asrs	r3, r3, #1
 800175c:	b2db      	uxtb	r3, r3
 800175e:	f003 0301 	and.w	r3, r3, #1
 8001762:	b2db      	uxtb	r3, r3
 8001764:	461a      	mov	r2, r3
 8001766:	2104      	movs	r1, #4
 8001768:	4813      	ldr	r0, [pc, #76]	; (80017b8 <Relay_control+0x16c>)
 800176a:	f004 fa57 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (Relay_address & 0x4) >>2);
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	109b      	asrs	r3, r3, #2
 8001772:	b2db      	uxtb	r3, r3
 8001774:	f003 0301 	and.w	r3, r3, #1
 8001778:	b2db      	uxtb	r3, r3
 800177a:	461a      	mov	r2, r3
 800177c:	2108      	movs	r1, #8
 800177e:	480e      	ldr	r0, [pc, #56]	; (80017b8 <Relay_control+0x16c>)
 8001780:	f004 fa4c 	bl	8005c1c <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin, 1); // LVL 1
 8001784:	2201      	movs	r2, #1
 8001786:	2101      	movs	r1, #1
 8001788:	480b      	ldr	r0, [pc, #44]	; (80017b8 <Relay_control+0x16c>)
 800178a:	f004 fa47 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 0); // Send strobe
 800178e:	2200      	movs	r2, #0
 8001790:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001794:	4809      	ldr	r0, [pc, #36]	; (80017bc <Relay_control+0x170>)
 8001796:	f004 fa41 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_Delay(1); // wait 1ms
 800179a:	2001      	movs	r0, #1
 800179c:	f003 feee 	bl	800557c <HAL_Delay>
	HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, 1); // End strobe
 80017a0:	2201      	movs	r2, #1
 80017a2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80017a6:	4805      	ldr	r0, [pc, #20]	; (80017bc <Relay_control+0x170>)
 80017a8:	f004 fa38 	bl	8005c1c <HAL_GPIO_WritePin>
 80017ac:	e000      	b.n	80017b0 <Relay_control+0x164>
	if(relay>3 || state>1) return;
 80017ae:	bf00      	nop
}
 80017b0:	3710      	adds	r7, #16
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020800 	.word	0x40020800

080017c0 <CPLD_control>:
//==============================================================================================



//==============================================================================================
void CPLD_control(FunctionalState state){
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	4603      	mov	r3, r0
 80017c8:	71fb      	strb	r3, [r7, #7]
	uint8_t send_word=0x00;
 80017ca:	2300      	movs	r3, #0
 80017cc:	75fb      	strb	r3, [r7, #23]

	// Calculate CPLD divider to expand DDS FTW to 0.1 ppm
	float dds_tmp_calc=DDS_clock_frequecny;
 80017ce:	4b3f      	ldr	r3, [pc, #252]	; (80018cc <CPLD_control+0x10c>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc/=(float)0xFFFFFFFF; // 10MHz / 2^32 = 0.0023283 Hz DDS FTW resolution
 80017d4:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 80017d8:	68f8      	ldr	r0, [r7, #12]
 80017da:	f7ff fba9 	bl	8000f30 <__aeabi_fdiv>
 80017de:	4603      	mov	r3, r0
 80017e0:	60fb      	str	r3, [r7, #12]
	dds_tmp_calc=dds_tmp_calc/(DDS_target_frequecny/(float)1E7); // 0.0023283 Hz / (74.898214 Hz / 1E7) = 310.86 minimum CPLD divider
 80017e2:	4b3b      	ldr	r3, [pc, #236]	; (80018d0 <CPLD_control+0x110>)
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	493b      	ldr	r1, [pc, #236]	; (80018d4 <CPLD_control+0x114>)
 80017e8:	4618      	mov	r0, r3
 80017ea:	f7ff fba1 	bl	8000f30 <__aeabi_fdiv>
 80017ee:	4603      	mov	r3, r0
 80017f0:	4619      	mov	r1, r3
 80017f2:	68f8      	ldr	r0, [r7, #12]
 80017f4:	f7ff fb9c 	bl	8000f30 <__aeabi_fdiv>
 80017f8:	4603      	mov	r3, r0
 80017fa:	60fb      	str	r3, [r7, #12]

	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 80017fc:	2301      	movs	r3, #1
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	e017      	b.n	8001832 <CPLD_control+0x72>
	{
		if(((1<<i)+1) > dds_tmp_calc)
 8001802:	2201      	movs	r2, #1
 8001804:	693b      	ldr	r3, [r7, #16]
 8001806:	fa02 f303 	lsl.w	r3, r2, r3
 800180a:	3301      	adds	r3, #1
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fa87 	bl	8000d20 <__aeabi_i2f>
 8001812:	4603      	mov	r3, r0
 8001814:	4619      	mov	r1, r3
 8001816:	68f8      	ldr	r0, [r7, #12]
 8001818:	f7ff fc74 	bl	8001104 <__aeabi_fcmplt>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d004      	beq.n	800182c <CPLD_control+0x6c>
		{
			CPLD_WORD=i;
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	b2da      	uxtb	r2, r3
 8001826:	4b2c      	ldr	r3, [pc, #176]	; (80018d8 <CPLD_control+0x118>)
 8001828:	701a      	strb	r2, [r3, #0]
			break;
 800182a:	e005      	b.n	8001838 <CPLD_control+0x78>
	for(int i=1; i<0x0F; i++) // find CPLD tuning word
 800182c:	693b      	ldr	r3, [r7, #16]
 800182e:	3301      	adds	r3, #1
 8001830:	613b      	str	r3, [r7, #16]
 8001832:	693b      	ldr	r3, [r7, #16]
 8001834:	2b0e      	cmp	r3, #14
 8001836:	dde4      	ble.n	8001802 <CPLD_control+0x42>
		}
	}

	if(state==CPLD_ON_STATE)send_word=CPLD_WORD;
 8001838:	79fb      	ldrb	r3, [r7, #7]
 800183a:	2b01      	cmp	r3, #1
 800183c:	d102      	bne.n	8001844 <CPLD_control+0x84>
 800183e:	4b26      	ldr	r3, [pc, #152]	; (80018d8 <CPLD_control+0x118>)
 8001840:	781b      	ldrb	r3, [r3, #0]
 8001842:	75fb      	strb	r3, [r7, #23]
	HAL_GPIO_WritePin(Control_bus_0_GPIO_Port, Control_bus_0_Pin,  send_word & 0x1     );
 8001844:	7dfb      	ldrb	r3, [r7, #23]
 8001846:	f003 0301 	and.w	r3, r3, #1
 800184a:	b2db      	uxtb	r3, r3
 800184c:	461a      	mov	r2, r3
 800184e:	2101      	movs	r1, #1
 8001850:	4822      	ldr	r0, [pc, #136]	; (80018dc <CPLD_control+0x11c>)
 8001852:	f004 f9e3 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_1_GPIO_Port, Control_bus_1_Pin, (send_word & 0x2) >>1);
 8001856:	7dfb      	ldrb	r3, [r7, #23]
 8001858:	105b      	asrs	r3, r3, #1
 800185a:	b2db      	uxtb	r3, r3
 800185c:	f003 0301 	and.w	r3, r3, #1
 8001860:	b2db      	uxtb	r3, r3
 8001862:	461a      	mov	r2, r3
 8001864:	2102      	movs	r1, #2
 8001866:	481d      	ldr	r0, [pc, #116]	; (80018dc <CPLD_control+0x11c>)
 8001868:	f004 f9d8 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_2_GPIO_Port, Control_bus_2_Pin, (send_word & 0x4) >>2);
 800186c:	7dfb      	ldrb	r3, [r7, #23]
 800186e:	109b      	asrs	r3, r3, #2
 8001870:	b2db      	uxtb	r3, r3
 8001872:	f003 0301 	and.w	r3, r3, #1
 8001876:	b2db      	uxtb	r3, r3
 8001878:	461a      	mov	r2, r3
 800187a:	2104      	movs	r1, #4
 800187c:	4817      	ldr	r0, [pc, #92]	; (80018dc <CPLD_control+0x11c>)
 800187e:	f004 f9cd 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Control_bus_3_GPIO_Port, Control_bus_3_Pin, (send_word & 0x8) >>3);
 8001882:	7dfb      	ldrb	r3, [r7, #23]
 8001884:	10db      	asrs	r3, r3, #3
 8001886:	b2db      	uxtb	r3, r3
 8001888:	f003 0301 	and.w	r3, r3, #1
 800188c:	b2db      	uxtb	r3, r3
 800188e:	461a      	mov	r2, r3
 8001890:	2108      	movs	r1, #8
 8001892:	4812      	ldr	r0, [pc, #72]	; (80018dc <CPLD_control+0x11c>)
 8001894:	f004 f9c2 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_SET); // Send strobe
 8001898:	2201      	movs	r2, #1
 800189a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800189e:	4810      	ldr	r0, [pc, #64]	; (80018e0 <CPLD_control+0x120>)
 80018a0:	f004 f9bc 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80018a4:	2200      	movs	r2, #0
 80018a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80018aa:	480d      	ldr	r0, [pc, #52]	; (80018e0 <CPLD_control+0x120>)
 80018ac:	f004 f9b6 	bl	8005c1c <HAL_GPIO_WritePin>

	if(state==CPLD_OFF_STATE)
 80018b0:	79fb      	ldrb	r3, [r7, #7]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d103      	bne.n	80018be <CPLD_control+0xfe>
	{
		cfg.LDACMODE=0;
 80018b6:	4b0b      	ldr	r3, [pc, #44]	; (80018e4 <CPLD_control+0x124>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	709a      	strb	r2, [r3, #2]
	}
	else
	{
		cfg.LDACMODE=1;
	}
}
 80018bc:	e002      	b.n	80018c4 <CPLD_control+0x104>
		cfg.LDACMODE=1;
 80018be:	4b09      	ldr	r3, [pc, #36]	; (80018e4 <CPLD_control+0x124>)
 80018c0:	2201      	movs	r2, #1
 80018c2:	709a      	strb	r2, [r3, #2]
}
 80018c4:	bf00      	nop
 80018c6:	3718      	adds	r7, #24
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}
 80018cc:	20000018 	.word	0x20000018
 80018d0:	20000760 	.word	0x20000760
 80018d4:	4b189680 	.word	0x4b189680
 80018d8:	2000075a 	.word	0x2000075a
 80018dc:	40020000 	.word	0x40020000
 80018e0:	40020800 	.word	0x40020800
 80018e4:	20000750 	.word	0x20000750

080018e8 <DAC_Write>:



//==============================================================================================
void DAC_Write(uint32_t value)
{
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b082      	sub	sp, #8
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	6078      	str	r0, [r7, #4]
	DAC_tx_buffer=0x01000000; // Write DAC-DATA
 80018f0:	4b18      	ldr	r3, [pc, #96]	; (8001954 <DAC_Write+0x6c>)
 80018f2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80018f6:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(value & 0xFFFFF)<<4;
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	011b      	lsls	r3, r3, #4
 80018fc:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001900:	f023 030f 	bic.w	r3, r3, #15
 8001904:	4a13      	ldr	r2, [pc, #76]	; (8001954 <DAC_Write+0x6c>)
 8001906:	6812      	ldr	r2, [r2, #0]
 8001908:	4413      	add	r3, r2
 800190a:	4a12      	ldr	r2, [pc, #72]	; (8001954 <DAC_Write+0x6c>)
 800190c:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 800190e:	4b11      	ldr	r3, [pc, #68]	; (8001954 <DAC_Write+0x6c>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	0c1b      	lsrs	r3, r3, #16
 8001914:	b29a      	uxth	r2, r3
 8001916:	4b10      	ldr	r3, [pc, #64]	; (8001958 <DAC_Write+0x70>)
 8001918:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 800191a:	4b0e      	ldr	r3, [pc, #56]	; (8001954 <DAC_Write+0x6c>)
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	b29a      	uxth	r2, r3
 8001920:	4b0d      	ldr	r3, [pc, #52]	; (8001958 <DAC_Write+0x70>)
 8001922:	805a      	strh	r2, [r3, #2]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001924:	2200      	movs	r2, #0
 8001926:	2110      	movs	r1, #16
 8001928:	480c      	ldr	r0, [pc, #48]	; (800195c <DAC_Write+0x74>)
 800192a:	f004 f977 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 800192e:	2302      	movs	r3, #2
 8001930:	2202      	movs	r2, #2
 8001932:	4909      	ldr	r1, [pc, #36]	; (8001958 <DAC_Write+0x70>)
 8001934:	480a      	ldr	r0, [pc, #40]	; (8001960 <DAC_Write+0x78>)
 8001936:	f006 f9f5 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 800193a:	2201      	movs	r2, #1
 800193c:	2110      	movs	r1, #16
 800193e:	4807      	ldr	r0, [pc, #28]	; (800195c <DAC_Write+0x74>)
 8001940:	f004 f96c 	bl	8005c1c <HAL_GPIO_WritePin>
	DAC_code=value;
 8001944:	4a07      	ldr	r2, [pc, #28]	; (8001964 <DAC_Write+0x7c>)
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	6013      	str	r3, [r2, #0]
}
 800194a:	bf00      	nop
 800194c:	3708      	adds	r7, #8
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	20000748 	.word	0x20000748
 8001958:	2000074c 	.word	0x2000074c
 800195c:	40020000 	.word	0x40020000
 8001960:	2000078c 	.word	0x2000078c
 8001964:	20000780 	.word	0x20000780

08001968 <DAC_SendInit>:
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
}

//==============================================================================================
void DAC_SendInit(void)
{
 8001968:	b580      	push	{r7, lr}
 800196a:	af00      	add	r7, sp, #0

	DAC_tx_buffer=0x02000000; // Write CONFIG1
 800196c:	4b3d      	ldr	r3, [pc, #244]	; (8001a64 <DAC_SendInit+0xfc>)
 800196e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001972:	601a      	str	r2, [r3, #0]
	DAC_tx_buffer+=(cfg.PDN & 0x01)<<4;
 8001974:	4b3c      	ldr	r3, [pc, #240]	; (8001a68 <DAC_SendInit+0x100>)
 8001976:	7a1b      	ldrb	r3, [r3, #8]
 8001978:	011b      	lsls	r3, r3, #4
 800197a:	f003 0210 	and.w	r2, r3, #16
 800197e:	4b39      	ldr	r3, [pc, #228]	; (8001a64 <DAC_SendInit+0xfc>)
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	4413      	add	r3, r2
 8001984:	4a37      	ldr	r2, [pc, #220]	; (8001a64 <DAC_SendInit+0xfc>)
 8001986:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.VREFVAL & 0x06)<<6;
 8001988:	4b37      	ldr	r3, [pc, #220]	; (8001a68 <DAC_SendInit+0x100>)
 800198a:	79db      	ldrb	r3, [r3, #7]
 800198c:	019b      	lsls	r3, r3, #6
 800198e:	f403 72c0 	and.w	r2, r3, #384	; 0x180
 8001992:	4b34      	ldr	r3, [pc, #208]	; (8001a64 <DAC_SendInit+0xfc>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	4413      	add	r3, r2
 8001998:	4a32      	ldr	r2, [pc, #200]	; (8001a64 <DAC_SendInit+0xfc>)
 800199a:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSET & 0x01)<<10;
 800199c:	4b32      	ldr	r3, [pc, #200]	; (8001a68 <DAC_SendInit+0x100>)
 800199e:	799b      	ldrb	r3, [r3, #6]
 80019a0:	029b      	lsls	r3, r3, #10
 80019a2:	f403 6280 	and.w	r2, r3, #1024	; 0x400
 80019a6:	4b2f      	ldr	r3, [pc, #188]	; (8001a64 <DAC_SendInit+0xfc>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	4413      	add	r3, r2
 80019ac:	4a2d      	ldr	r2, [pc, #180]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ae:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.DSDO & 0x01)<<11;
 80019b0:	4b2d      	ldr	r3, [pc, #180]	; (8001a68 <DAC_SendInit+0x100>)
 80019b2:	795b      	ldrb	r3, [r3, #5]
 80019b4:	02db      	lsls	r3, r3, #11
 80019b6:	f403 6200 	and.w	r2, r3, #2048	; 0x800
 80019ba:	4b2a      	ldr	r3, [pc, #168]	; (8001a64 <DAC_SendInit+0xfc>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	4413      	add	r3, r2
 80019c0:	4a28      	ldr	r2, [pc, #160]	; (8001a64 <DAC_SendInit+0xfc>)
 80019c2:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.ENALMP & 0x01)<<12;
 80019c4:	4b28      	ldr	r3, [pc, #160]	; (8001a68 <DAC_SendInit+0x100>)
 80019c6:	791b      	ldrb	r3, [r3, #4]
 80019c8:	031b      	lsls	r3, r3, #12
 80019ca:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 80019ce:	4b25      	ldr	r3, [pc, #148]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	4413      	add	r3, r2
 80019d4:	4a23      	ldr	r2, [pc, #140]	; (8001a64 <DAC_SendInit+0xfc>)
 80019d6:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.FSDO & 0x01)<<13;
 80019d8:	4b23      	ldr	r3, [pc, #140]	; (8001a68 <DAC_SendInit+0x100>)
 80019da:	78db      	ldrb	r3, [r3, #3]
 80019dc:	035b      	lsls	r3, r3, #13
 80019de:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80019e2:	4b20      	ldr	r3, [pc, #128]	; (8001a64 <DAC_SendInit+0xfc>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	4413      	add	r3, r2
 80019e8:	4a1e      	ldr	r2, [pc, #120]	; (8001a64 <DAC_SendInit+0xfc>)
 80019ea:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.LDACMODE & 0x01)<<14;
 80019ec:	4b1e      	ldr	r3, [pc, #120]	; (8001a68 <DAC_SendInit+0x100>)
 80019ee:	789b      	ldrb	r3, [r3, #2]
 80019f0:	039b      	lsls	r3, r3, #14
 80019f2:	f403 4280 	and.w	r2, r3, #16384	; 0x4000
 80019f6:	4b1b      	ldr	r3, [pc, #108]	; (8001a64 <DAC_SendInit+0xfc>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	4413      	add	r3, r2
 80019fc:	4a19      	ldr	r2, [pc, #100]	; (8001a64 <DAC_SendInit+0xfc>)
 80019fe:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.TNH_MASK & 0x03)<<18;
 8001a00:	4b19      	ldr	r3, [pc, #100]	; (8001a68 <DAC_SendInit+0x100>)
 8001a02:	785b      	ldrb	r3, [r3, #1]
 8001a04:	049b      	lsls	r3, r3, #18
 8001a06:	f403 2240 	and.w	r2, r3, #786432	; 0xc0000
 8001a0a:	4b16      	ldr	r3, [pc, #88]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	4413      	add	r3, r2
 8001a10:	4a14      	ldr	r2, [pc, #80]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a12:	6013      	str	r3, [r2, #0]
	DAC_tx_buffer+=(cfg.EN_TMP_CAL & 0x01)<<23;
 8001a14:	4b14      	ldr	r3, [pc, #80]	; (8001a68 <DAC_SendInit+0x100>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	05db      	lsls	r3, r3, #23
 8001a1a:	f403 0200 	and.w	r2, r3, #8388608	; 0x800000
 8001a1e:	4b11      	ldr	r3, [pc, #68]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	4413      	add	r3, r2
 8001a24:	4a0f      	ldr	r2, [pc, #60]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a26:	6013      	str	r3, [r2, #0]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a28:	4b0e      	ldr	r3, [pc, #56]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	0c1b      	lsrs	r3, r3, #16
 8001a2e:	b29a      	uxth	r2, r3
 8001a30:	4b0e      	ldr	r3, [pc, #56]	; (8001a6c <DAC_SendInit+0x104>)
 8001a32:	801a      	strh	r2, [r3, #0]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001a34:	4b0b      	ldr	r3, [pc, #44]	; (8001a64 <DAC_SendInit+0xfc>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	b29a      	uxth	r2, r3
 8001a3a:	4b0c      	ldr	r3, [pc, #48]	; (8001a6c <DAC_SendInit+0x104>)
 8001a3c:	805a      	strh	r2, [r3, #2]


	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001a3e:	2200      	movs	r2, #0
 8001a40:	2110      	movs	r1, #16
 8001a42:	480b      	ldr	r0, [pc, #44]	; (8001a70 <DAC_SendInit+0x108>)
 8001a44:	f004 f8ea 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,5);
 8001a48:	2305      	movs	r3, #5
 8001a4a:	2202      	movs	r2, #2
 8001a4c:	4907      	ldr	r1, [pc, #28]	; (8001a6c <DAC_SendInit+0x104>)
 8001a4e:	4809      	ldr	r0, [pc, #36]	; (8001a74 <DAC_SendInit+0x10c>)
 8001a50:	f006 f968 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001a54:	2201      	movs	r2, #1
 8001a56:	2110      	movs	r1, #16
 8001a58:	4805      	ldr	r0, [pc, #20]	; (8001a70 <DAC_SendInit+0x108>)
 8001a5a:	f004 f8df 	bl	8005c1c <HAL_GPIO_WritePin>

}
 8001a5e:	bf00      	nop
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	bf00      	nop
 8001a64:	20000748 	.word	0x20000748
 8001a68:	20000750 	.word	0x20000750
 8001a6c:	2000074c 	.word	0x2000074c
 8001a70:	40020000 	.word	0x40020000
 8001a74:	2000078c 	.word	0x2000078c

08001a78 <DAC_TEMP_CAL>:

//==============================================================================================
void DAC_TEMP_CAL(void)
{
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b086      	sub	sp, #24
 8001a7c:	af00      	add	r7, sp, #0
	uint32_t DAC_tx_buffer;
	uint16_t DAC_tx_tmp_buffer[2];

	uint16_t spi_receive[2]={0x0,0x0},DAC_tx_tmp_buffer2[2],ALM=0;
 8001a7e:	2300      	movs	r3, #0
 8001a80:	813b      	strh	r3, [r7, #8]
 8001a82:	2300      	movs	r3, #0
 8001a84:	817b      	strh	r3, [r7, #10]
 8001a86:	2300      	movs	r3, #0
 8001a88:	82fb      	strh	r3, [r7, #22]

	//CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal

	cfg.EN_TMP_CAL=1;
 8001a8a:	4b2f      	ldr	r3, [pc, #188]	; (8001b48 <DAC_TEMP_CAL+0xd0>)
 8001a8c:	2201      	movs	r2, #1
 8001a8e:	701a      	strb	r2, [r3, #0]
	DAC_SendInit();
 8001a90:	f7ff ff6a 	bl	8001968 <DAC_SendInit>

	DAC_tx_buffer=0x04000100; // Write TRIGGER RCLTMP
 8001a94:	4b2d      	ldr	r3, [pc, #180]	; (8001b4c <DAC_TEMP_CAL+0xd4>)
 8001a96:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	0c1b      	lsrs	r3, r3, #16
 8001a9c:	b29b      	uxth	r3, r3
 8001a9e:	81bb      	strh	r3, [r7, #12]
	DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001aa0:	693b      	ldr	r3, [r7, #16]
 8001aa2:	b29b      	uxth	r3, r3
 8001aa4:	81fb      	strh	r3, [r7, #14]

	DAC_tx_buffer=0x85000000; // read status register
 8001aa6:	f04f 4305 	mov.w	r3, #2231369728	; 0x85000000
 8001aaa:	613b      	str	r3, [r7, #16]

	DAC_tx_tmp_buffer2[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
 8001aac:	693b      	ldr	r3, [r7, #16]
 8001aae:	0c1b      	lsrs	r3, r3, #16
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	80bb      	strh	r3, [r7, #4]
	DAC_tx_tmp_buffer2[1]=(DAC_tx_buffer & 0x0000FFFF);
 8001ab4:	693b      	ldr	r3, [r7, #16]
 8001ab6:	b29b      	uxth	r3, r3
 8001ab8:	80fb      	strh	r3, [r7, #6]

	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001aba:	2200      	movs	r2, #0
 8001abc:	2110      	movs	r1, #16
 8001abe:	4824      	ldr	r0, [pc, #144]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ac0:	f004 f8ac 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
 8001ac4:	f107 010c 	add.w	r1, r7, #12
 8001ac8:	2302      	movs	r3, #2
 8001aca:	2202      	movs	r2, #2
 8001acc:	4821      	ldr	r0, [pc, #132]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001ace:	f006 f929 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	2110      	movs	r1, #16
 8001ad6:	481e      	ldr	r0, [pc, #120]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ad8:	f004 f8a0 	bl	8005c1c <HAL_GPIO_WritePin>

	do{ // Check complete flag
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001adc:	2200      	movs	r2, #0
 8001ade:	2110      	movs	r1, #16
 8001ae0:	481b      	ldr	r0, [pc, #108]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001ae2:	f004 f89b 	bl	8005c1c <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer2,2,2);
 8001ae6:	1d39      	adds	r1, r7, #4
 8001ae8:	2302      	movs	r3, #2
 8001aea:	2202      	movs	r2, #2
 8001aec:	4819      	ldr	r0, [pc, #100]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001aee:	f006 f919 	bl	8007d24 <HAL_SPI_Transmit>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001af2:	2201      	movs	r2, #1
 8001af4:	2110      	movs	r1, #16
 8001af6:	4816      	ldr	r0, [pc, #88]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001af8:	f004 f890 	bl	8005c1c <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
 8001afc:	2200      	movs	r2, #0
 8001afe:	2110      	movs	r1, #16
 8001b00:	4813      	ldr	r0, [pc, #76]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b02:	f004 f88b 	bl	8005c1c <HAL_GPIO_WritePin>
		HAL_SPI_Receive(&hspi1,(uint8_t *)spi_receive, 2, 2);
 8001b06:	f107 0108 	add.w	r1, r7, #8
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	2202      	movs	r2, #2
 8001b0e:	4811      	ldr	r0, [pc, #68]	; (8001b54 <DAC_TEMP_CAL+0xdc>)
 8001b10:	f006 fbac 	bl	800826c <HAL_SPI_Receive>
		HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
 8001b14:	2201      	movs	r2, #1
 8001b16:	2110      	movs	r1, #16
 8001b18:	480d      	ldr	r0, [pc, #52]	; (8001b50 <DAC_TEMP_CAL+0xd8>)
 8001b1a:	f004 f87f 	bl	8005c1c <HAL_GPIO_WritePin>
		ALM=(spi_receive[1] & 0x1000) >> 12;
 8001b1e:	897b      	ldrh	r3, [r7, #10]
 8001b20:	131b      	asrs	r3, r3, #12
 8001b22:	b29b      	uxth	r3, r3
 8001b24:	f003 0301 	and.w	r3, r3, #1
 8001b28:	82fb      	strh	r3, [r7, #22]
		if(ALM!=1)HAL_Delay(10);
 8001b2a:	8afb      	ldrh	r3, [r7, #22]
 8001b2c:	2b01      	cmp	r3, #1
 8001b2e:	d002      	beq.n	8001b36 <DAC_TEMP_CAL+0xbe>
 8001b30:	200a      	movs	r0, #10
 8001b32:	f003 fd23 	bl	800557c <HAL_Delay>
	}while(ALM!=1);
 8001b36:	8afb      	ldrh	r3, [r7, #22]
 8001b38:	2b01      	cmp	r3, #1
 8001b3a:	d1cf      	bne.n	8001adc <DAC_TEMP_CAL+0x64>
}
 8001b3c:	bf00      	nop
 8001b3e:	bf00      	nop
 8001b40:	3718      	adds	r7, #24
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20000750 	.word	0x20000750
 8001b4c:	04000100 	.word	0x04000100
 8001b50:	40020000 	.word	0x40020000
 8001b54:	2000078c 	.word	0x2000078c

08001b58 <DDS_Calculation>:

void DDS_Calculation(void)
{
 8001b58:	b590      	push	{r4, r7, lr}
 8001b5a:	b087      	sub	sp, #28
 8001b5c:	af00      	add	r7, sp, #0
	float hw_limit=1000; // 1kHz hardware optimized limit
 8001b5e:	4b87      	ldr	r3, [pc, #540]	; (8001d7c <DDS_Calculation+0x224>)
 8001b60:	613b      	str	r3, [r7, #16]
	float dac_counts=DAC_CODE_TOP-1;
 8001b62:	4b87      	ldr	r3, [pc, #540]	; (8001d80 <DDS_Calculation+0x228>)
 8001b64:	60fb      	str	r3, [r7, #12]
	float corr_coeff;
	float dac_tmp=DAC_code;
 8001b66:	4b87      	ldr	r3, [pc, #540]	; (8001d84 <DDS_Calculation+0x22c>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f7ff f8d4 	bl	8000d18 <__aeabi_ui2f>
 8001b70:	4603      	mov	r3, r0
 8001b72:	60bb      	str	r3, [r7, #8]
	float second_left;
	uint32_t codes_left=0;
 8001b74:	2300      	movs	r3, #0
 8001b76:	617b      	str	r3, [r7, #20]

	// Linearity correction
	corr_coeff=corr_coeff_1*dac_tmp*dac_tmp;
 8001b78:	4b83      	ldr	r3, [pc, #524]	; (8001d88 <DDS_Calculation+0x230>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	68b9      	ldr	r1, [r7, #8]
 8001b7e:	4618      	mov	r0, r3
 8001b80:	f7ff f922 	bl	8000dc8 <__aeabi_fmul>
 8001b84:	4603      	mov	r3, r0
 8001b86:	4619      	mov	r1, r3
 8001b88:	68b8      	ldr	r0, [r7, #8]
 8001b8a:	f7ff f91d 	bl	8000dc8 <__aeabi_fmul>
 8001b8e:	4603      	mov	r3, r0
 8001b90:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_2*dac_tmp;
 8001b92:	4b7e      	ldr	r3, [pc, #504]	; (8001d8c <DDS_Calculation+0x234>)
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	68b9      	ldr	r1, [r7, #8]
 8001b98:	4618      	mov	r0, r3
 8001b9a:	f7ff f915 	bl	8000dc8 <__aeabi_fmul>
 8001b9e:	4603      	mov	r3, r0
 8001ba0:	4619      	mov	r1, r3
 8001ba2:	6878      	ldr	r0, [r7, #4]
 8001ba4:	f7ff f808 	bl	8000bb8 <__addsf3>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	607b      	str	r3, [r7, #4]
	corr_coeff+=corr_coeff_3;
 8001bac:	4b78      	ldr	r3, [pc, #480]	; (8001d90 <DDS_Calculation+0x238>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	4619      	mov	r1, r3
 8001bb2:	6878      	ldr	r0, [r7, #4]
 8001bb4:	f7ff f800 	bl	8000bb8 <__addsf3>
 8001bb8:	4603      	mov	r3, r0
 8001bba:	607b      	str	r3, [r7, #4]

	DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed); // 1048575 / (14V / 0.01V/s) = 74.898214 Hz
 8001bbc:	4b75      	ldr	r3, [pc, #468]	; (8001d94 <DDS_Calculation+0x23c>)
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a75      	ldr	r2, [pc, #468]	; (8001d98 <DDS_Calculation+0x240>)
 8001bc2:	6812      	ldr	r2, [r2, #0]
 8001bc4:	4611      	mov	r1, r2
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	f7ff f9b2 	bl	8000f30 <__aeabi_fdiv>
 8001bcc:	4603      	mov	r3, r0
 8001bce:	4619      	mov	r1, r3
 8001bd0:	68f8      	ldr	r0, [r7, #12]
 8001bd2:	f7ff f9ad 	bl	8000f30 <__aeabi_fdiv>
 8001bd6:	4603      	mov	r3, r0
 8001bd8:	461a      	mov	r2, r3
 8001bda:	4b70      	ldr	r3, [pc, #448]	; (8001d9c <DDS_Calculation+0x244>)
 8001bdc:	601a      	str	r2, [r3, #0]

	if(DDS_target_frequecny>hw_limit)
 8001bde:	4b6f      	ldr	r3, [pc, #444]	; (8001d9c <DDS_Calculation+0x244>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	4619      	mov	r1, r3
 8001be4:	6938      	ldr	r0, [r7, #16]
 8001be6:	f7ff fa8d 	bl	8001104 <__aeabi_fcmplt>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d02e      	beq.n	8001c4e <DDS_Calculation+0xf6>
	{
		DDS_target_multipiller=DDS_target_frequecny/hw_limit;
 8001bf0:	4b6a      	ldr	r3, [pc, #424]	; (8001d9c <DDS_Calculation+0x244>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	6939      	ldr	r1, [r7, #16]
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	f7ff f99a 	bl	8000f30 <__aeabi_fdiv>
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	4618      	mov	r0, r3
 8001c00:	f7ff faa8 	bl	8001154 <__aeabi_f2uiz>
 8001c04:	4603      	mov	r3, r0
 8001c06:	4a66      	ldr	r2, [pc, #408]	; (8001da0 <DDS_Calculation+0x248>)
 8001c08:	6013      	str	r3, [r2, #0]
		DDS_target_frequecny=dac_counts/(DAC_fullrange_voltage/DAC_target_speed);
 8001c0a:	4b62      	ldr	r3, [pc, #392]	; (8001d94 <DDS_Calculation+0x23c>)
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	4a62      	ldr	r2, [pc, #392]	; (8001d98 <DDS_Calculation+0x240>)
 8001c10:	6812      	ldr	r2, [r2, #0]
 8001c12:	4611      	mov	r1, r2
 8001c14:	4618      	mov	r0, r3
 8001c16:	f7ff f98b 	bl	8000f30 <__aeabi_fdiv>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	4619      	mov	r1, r3
 8001c1e:	68f8      	ldr	r0, [r7, #12]
 8001c20:	f7ff f986 	bl	8000f30 <__aeabi_fdiv>
 8001c24:	4603      	mov	r3, r0
 8001c26:	461a      	mov	r2, r3
 8001c28:	4b5c      	ldr	r3, [pc, #368]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2a:	601a      	str	r2, [r3, #0]
		DDS_target_frequecny/=(float)DDS_target_multipiller;
 8001c2c:	4b5b      	ldr	r3, [pc, #364]	; (8001d9c <DDS_Calculation+0x244>)
 8001c2e:	681c      	ldr	r4, [r3, #0]
 8001c30:	4b5b      	ldr	r3, [pc, #364]	; (8001da0 <DDS_Calculation+0x248>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff f86f 	bl	8000d18 <__aeabi_ui2f>
 8001c3a:	4603      	mov	r3, r0
 8001c3c:	4619      	mov	r1, r3
 8001c3e:	4620      	mov	r0, r4
 8001c40:	f7ff f976 	bl	8000f30 <__aeabi_fdiv>
 8001c44:	4603      	mov	r3, r0
 8001c46:	461a      	mov	r2, r3
 8001c48:	4b54      	ldr	r3, [pc, #336]	; (8001d9c <DDS_Calculation+0x244>)
 8001c4a:	601a      	str	r2, [r3, #0]
 8001c4c:	e002      	b.n	8001c54 <DDS_Calculation+0xfc>
	} else DDS_target_multipiller = 1;
 8001c4e:	4b54      	ldr	r3, [pc, #336]	; (8001da0 <DDS_Calculation+0x248>)
 8001c50:	2201      	movs	r2, #1
 8001c52:	601a      	str	r2, [r3, #0]

	DDS_FTW=(((DDS_target_frequecny/corr_coeff)*((1<<CPLD_WORD)+1))/DDS_clock_frequecny)*(float)0xFFFFFFFF;
 8001c54:	4b51      	ldr	r3, [pc, #324]	; (8001d9c <DDS_Calculation+0x244>)
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	6879      	ldr	r1, [r7, #4]
 8001c5a:	4618      	mov	r0, r3
 8001c5c:	f7ff f968 	bl	8000f30 <__aeabi_fdiv>
 8001c60:	4603      	mov	r3, r0
 8001c62:	461c      	mov	r4, r3
 8001c64:	4b4f      	ldr	r3, [pc, #316]	; (8001da4 <DDS_Calculation+0x24c>)
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	461a      	mov	r2, r3
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	4093      	lsls	r3, r2
 8001c6e:	3301      	adds	r3, #1
 8001c70:	4618      	mov	r0, r3
 8001c72:	f7ff f855 	bl	8000d20 <__aeabi_i2f>
 8001c76:	4603      	mov	r3, r0
 8001c78:	4619      	mov	r1, r3
 8001c7a:	4620      	mov	r0, r4
 8001c7c:	f7ff f8a4 	bl	8000dc8 <__aeabi_fmul>
 8001c80:	4603      	mov	r3, r0
 8001c82:	461a      	mov	r2, r3
 8001c84:	4b48      	ldr	r3, [pc, #288]	; (8001da8 <DDS_Calculation+0x250>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	4619      	mov	r1, r3
 8001c8a:	4610      	mov	r0, r2
 8001c8c:	f7ff f950 	bl	8000f30 <__aeabi_fdiv>
 8001c90:	4603      	mov	r3, r0
 8001c92:	f04f 419f 	mov.w	r1, #1333788672	; 0x4f800000
 8001c96:	4618      	mov	r0, r3
 8001c98:	f7ff f896 	bl	8000dc8 <__aeabi_fmul>
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	461a      	mov	r2, r3
 8001ca0:	4b42      	ldr	r3, [pc, #264]	; (8001dac <DDS_Calculation+0x254>)
 8001ca2:	601a      	str	r2, [r3, #0]

	switch(DAC_code_direction)
 8001ca4:	4b42      	ldr	r3, [pc, #264]	; (8001db0 <DDS_Calculation+0x258>)
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	2b02      	cmp	r3, #2
 8001caa:	d011      	beq.n	8001cd0 <DDS_Calculation+0x178>
 8001cac:	2b02      	cmp	r3, #2
 8001cae:	dc1f      	bgt.n	8001cf0 <DDS_Calculation+0x198>
 8001cb0:	2b00      	cmp	r3, #0
 8001cb2:	d009      	beq.n	8001cc8 <DDS_Calculation+0x170>
 8001cb4:	2b01      	cmp	r3, #1
 8001cb6:	d11b      	bne.n	8001cf0 <DDS_Calculation+0x198>
	{
	//----------------------------------------------------------//
	case DIRECTION_UP_STATE:
		codes_left=0xFFFFF-DAC_code;
 8001cb8:	4b32      	ldr	r3, [pc, #200]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001cc0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001cc4:	617b      	str	r3, [r7, #20]
		break;
 8001cc6:	e013      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_DOWN_STATE:
		codes_left=DAC_code;
 8001cc8:	4b2e      	ldr	r3, [pc, #184]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	617b      	str	r3, [r7, #20]
		break;
 8001cce:	e00f      	b.n	8001cf0 <DDS_Calculation+0x198>
	case DIRECTION_CYCLE_STATE:
		if(DAC_code_direction_for_cycle_mode == 1)
 8001cd0:	4b38      	ldr	r3, [pc, #224]	; (8001db4 <DDS_Calculation+0x25c>)
 8001cd2:	781b      	ldrb	r3, [r3, #0]
 8001cd4:	2b01      	cmp	r3, #1
 8001cd6:	d107      	bne.n	8001ce8 <DDS_Calculation+0x190>
		{
			codes_left=0xFFFFF-DAC_code;
 8001cd8:	4b2a      	ldr	r3, [pc, #168]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
 8001ce0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
 8001ce4:	617b      	str	r3, [r7, #20]
		}
		else
		{
			codes_left=DAC_code;
		}
		break;
 8001ce6:	e002      	b.n	8001cee <DDS_Calculation+0x196>
			codes_left=DAC_code;
 8001ce8:	4b26      	ldr	r3, [pc, #152]	; (8001d84 <DDS_Calculation+0x22c>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	617b      	str	r3, [r7, #20]
		break;
 8001cee:	bf00      	nop
	}

	second_left=codes_left/DDS_target_multipiller/DDS_target_frequecny;
 8001cf0:	4b2b      	ldr	r3, [pc, #172]	; (8001da0 <DDS_Calculation+0x248>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	697a      	ldr	r2, [r7, #20]
 8001cf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	f7ff f80c 	bl	8000d18 <__aeabi_ui2f>
 8001d00:	4602      	mov	r2, r0
 8001d02:	4b26      	ldr	r3, [pc, #152]	; (8001d9c <DDS_Calculation+0x244>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	4619      	mov	r1, r3
 8001d08:	4610      	mov	r0, r2
 8001d0a:	f7ff f911 	bl	8000f30 <__aeabi_fdiv>
 8001d0e:	4603      	mov	r3, r0
 8001d10:	603b      	str	r3, [r7, #0]
	eta_second=(uint32_t)second_left % 60;
 8001d12:	6838      	ldr	r0, [r7, #0]
 8001d14:	f7ff fa1e 	bl	8001154 <__aeabi_f2uiz>
 8001d18:	4601      	mov	r1, r0
 8001d1a:	4b27      	ldr	r3, [pc, #156]	; (8001db8 <DDS_Calculation+0x260>)
 8001d1c:	fba3 2301 	umull	r2, r3, r3, r1
 8001d20:	095a      	lsrs	r2, r3, #5
 8001d22:	4613      	mov	r3, r2
 8001d24:	011b      	lsls	r3, r3, #4
 8001d26:	1a9b      	subs	r3, r3, r2
 8001d28:	009b      	lsls	r3, r3, #2
 8001d2a:	1aca      	subs	r2, r1, r3
 8001d2c:	b2d2      	uxtb	r2, r2
 8001d2e:	4b23      	ldr	r3, [pc, #140]	; (8001dbc <DDS_Calculation+0x264>)
 8001d30:	701a      	strb	r2, [r3, #0]
	eta_minute=(uint32_t)(second_left / 60) % 60;
 8001d32:	4923      	ldr	r1, [pc, #140]	; (8001dc0 <DDS_Calculation+0x268>)
 8001d34:	6838      	ldr	r0, [r7, #0]
 8001d36:	f7ff f8fb 	bl	8000f30 <__aeabi_fdiv>
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	4618      	mov	r0, r3
 8001d3e:	f7ff fa09 	bl	8001154 <__aeabi_f2uiz>
 8001d42:	4601      	mov	r1, r0
 8001d44:	4b1c      	ldr	r3, [pc, #112]	; (8001db8 <DDS_Calculation+0x260>)
 8001d46:	fba3 2301 	umull	r2, r3, r3, r1
 8001d4a:	095a      	lsrs	r2, r3, #5
 8001d4c:	4613      	mov	r3, r2
 8001d4e:	011b      	lsls	r3, r3, #4
 8001d50:	1a9b      	subs	r3, r3, r2
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	1aca      	subs	r2, r1, r3
 8001d56:	b2d2      	uxtb	r2, r2
 8001d58:	4b1a      	ldr	r3, [pc, #104]	; (8001dc4 <DDS_Calculation+0x26c>)
 8001d5a:	701a      	strb	r2, [r3, #0]
	eta_hours=(uint32_t) second_left / 3600;
 8001d5c:	6838      	ldr	r0, [r7, #0]
 8001d5e:	f7ff f9f9 	bl	8001154 <__aeabi_f2uiz>
 8001d62:	4603      	mov	r3, r0
 8001d64:	4a18      	ldr	r2, [pc, #96]	; (8001dc8 <DDS_Calculation+0x270>)
 8001d66:	fba2 2303 	umull	r2, r3, r2, r3
 8001d6a:	0adb      	lsrs	r3, r3, #11
 8001d6c:	b2da      	uxtb	r2, r3
 8001d6e:	4b17      	ldr	r3, [pc, #92]	; (8001dcc <DDS_Calculation+0x274>)
 8001d70:	701a      	strb	r2, [r3, #0]
}
 8001d72:	bf00      	nop
 8001d74:	371c      	adds	r7, #28
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd90      	pop	{r4, r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	447a0000 	.word	0x447a0000
 8001d80:	497fffe0 	.word	0x497fffe0
 8001d84:	20000780 	.word	0x20000780
 8001d88:	2000052c 	.word	0x2000052c
 8001d8c:	20000530 	.word	0x20000530
 8001d90:	20000534 	.word	0x20000534
 8001d94:	20000770 	.word	0x20000770
 8001d98:	20000764 	.word	0x20000764
 8001d9c:	20000760 	.word	0x20000760
 8001da0:	20000014 	.word	0x20000014
 8001da4:	2000075a 	.word	0x2000075a
 8001da8:	20000018 	.word	0x20000018
 8001dac:	2000075c 	.word	0x2000075c
 8001db0:	20000784 	.word	0x20000784
 8001db4:	20000785 	.word	0x20000785
 8001db8:	88888889 	.word	0x88888889
 8001dbc:	20000722 	.word	0x20000722
 8001dc0:	42700000 	.word	0x42700000
 8001dc4:	20000721 	.word	0x20000721
 8001dc8:	91a2b3c5 	.word	0x91a2b3c5
 8001dcc:	20000720 	.word	0x20000720

08001dd0 <DDS_Init>:

//==============================================================================================
void DDS_Init(void)
{
 8001dd0:	b590      	push	{r4, r7, lr}
 8001dd2:	b083      	sub	sp, #12
 8001dd4:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];
	DDS_Calculation();
 8001dd6:	f7ff febf 	bl	8001b58 <DDS_Calculation>

	HAL_Delay(100);
 8001dda:	2064      	movs	r0, #100	; 0x64
 8001ddc:	f003 fbce 	bl	800557c <HAL_Delay>

	//CONTROL REGISTER WRITE SLEEP =1 ,	RESET = 1,	CLR = 1
	DDS_tx_buffer[0]=0xC000; // Control DDS (D15=1, D14=1)
 8001de0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001de4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=0x7 << 11; //  SLEEP = 1 , RESET = 1,	CLR = 1
 8001de6:	88bb      	ldrh	r3, [r7, #4]
 8001de8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8001dec:	b29b      	uxth	r3, r3
 8001dee:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001df0:	2200      	movs	r2, #0
 8001df2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001df6:	4861      	ldr	r0, [pc, #388]	; (8001f7c <DDS_Init+0x1ac>)
 8001df8:	f003 ff10 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001dfc:	1d39      	adds	r1, r7, #4
 8001dfe:	2305      	movs	r3, #5
 8001e00:	2201      	movs	r2, #1
 8001e02:	485f      	ldr	r0, [pc, #380]	; (8001f80 <DDS_Init+0x1b0>)
 8001e04:	f005 ff8e 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e08:	2201      	movs	r2, #1
 8001e0a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e0e:	485b      	ldr	r0, [pc, #364]	; (8001f7c <DDS_Init+0x1ac>)
 8001e10:	f003 ff04 	bl	8005c1c <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001e14:	2064      	movs	r0, #100	; 0x64
 8001e16:	f003 fbb1 	bl	800557c <HAL_Delay>
	//DO NOT !!! SET SYNC AND/OR SELSRC TO 1

	//WRITE INITIAL DATA

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001e1a:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001e1e:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001e20:	88bc      	ldrh	r4, [r7, #4]
 8001e22:	4b58      	ldr	r3, [pc, #352]	; (8001f84 <DDS_Init+0x1b4>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	4618      	mov	r0, r3
 8001e28:	f7ff f994 	bl	8001154 <__aeabi_f2uiz>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	0e1b      	lsrs	r3, r3, #24
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	4423      	add	r3, r4
 8001e34:	b29b      	uxth	r3, r3
 8001e36:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e38:	2200      	movs	r2, #0
 8001e3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e3e:	484f      	ldr	r0, [pc, #316]	; (8001f7c <DDS_Init+0x1ac>)
 8001e40:	f003 feec 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e44:	1d39      	adds	r1, r7, #4
 8001e46:	2305      	movs	r3, #5
 8001e48:	2201      	movs	r2, #1
 8001e4a:	484d      	ldr	r0, [pc, #308]	; (8001f80 <DDS_Init+0x1b0>)
 8001e4c:	f005 ff6a 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e50:	2201      	movs	r2, #1
 8001e52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e56:	4849      	ldr	r0, [pc, #292]	; (8001f7c <DDS_Init+0x1ac>)
 8001e58:	f003 fee0 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001e5c:	2032      	movs	r0, #50	; 0x32
 8001e5e:	f003 fb8d 	bl	800557c <HAL_Delay>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001e62:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001e66:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001e68:	88bc      	ldrh	r4, [r7, #4]
 8001e6a:	4b46      	ldr	r3, [pc, #280]	; (8001f84 <DDS_Init+0x1b4>)
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f7ff f970 	bl	8001154 <__aeabi_f2uiz>
 8001e74:	4603      	mov	r3, r0
 8001e76:	0c1b      	lsrs	r3, r3, #16
 8001e78:	b29b      	uxth	r3, r3
 8001e7a:	b2db      	uxtb	r3, r3
 8001e7c:	b29b      	uxth	r3, r3
 8001e7e:	4423      	add	r3, r4
 8001e80:	b29b      	uxth	r3, r3
 8001e82:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001e84:	2200      	movs	r2, #0
 8001e86:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e8a:	483c      	ldr	r0, [pc, #240]	; (8001f7c <DDS_Init+0x1ac>)
 8001e8c:	f003 fec6 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001e90:	1d39      	adds	r1, r7, #4
 8001e92:	2305      	movs	r3, #5
 8001e94:	2201      	movs	r2, #1
 8001e96:	483a      	ldr	r0, [pc, #232]	; (8001f80 <DDS_Init+0x1b0>)
 8001e98:	f005 ff44 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001e9c:	2201      	movs	r2, #1
 8001e9e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ea2:	4836      	ldr	r0, [pc, #216]	; (8001f7c <DDS_Init+0x1ac>)
 8001ea4:	f003 feba 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ea8:	2032      	movs	r0, #50	; 0x32
 8001eaa:	f003 fb67 	bl	800557c <HAL_Delay>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8001eae:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 8001eb2:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 8001eb4:	88bc      	ldrh	r4, [r7, #4]
 8001eb6:	4b33      	ldr	r3, [pc, #204]	; (8001f84 <DDS_Init+0x1b4>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f7ff f94a 	bl	8001154 <__aeabi_f2uiz>
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	0a1b      	lsrs	r3, r3, #8
 8001ec4:	b29b      	uxth	r3, r3
 8001ec6:	b2db      	uxtb	r3, r3
 8001ec8:	b29b      	uxth	r3, r3
 8001eca:	4423      	add	r3, r4
 8001ecc:	b29b      	uxth	r3, r3
 8001ece:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ed6:	4829      	ldr	r0, [pc, #164]	; (8001f7c <DDS_Init+0x1ac>)
 8001ed8:	f003 fea0 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001edc:	1d39      	adds	r1, r7, #4
 8001ede:	2305      	movs	r3, #5
 8001ee0:	2201      	movs	r2, #1
 8001ee2:	4827      	ldr	r0, [pc, #156]	; (8001f80 <DDS_Init+0x1b0>)
 8001ee4:	f005 ff1e 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001ee8:	2201      	movs	r2, #1
 8001eea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001eee:	4823      	ldr	r0, [pc, #140]	; (8001f7c <DDS_Init+0x1ac>)
 8001ef0:	f003 fe94 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_Delay(50);
 8001ef4:	2032      	movs	r0, #50	; 0x32
 8001ef6:	f003 fb41 	bl	800557c <HAL_Delay>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 8001efa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001efe:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8001f00:	88bc      	ldrh	r4, [r7, #4]
 8001f02:	4b20      	ldr	r3, [pc, #128]	; (8001f84 <DDS_Init+0x1b4>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4618      	mov	r0, r3
 8001f08:	f7ff f924 	bl	8001154 <__aeabi_f2uiz>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	b29b      	uxth	r3, r3
 8001f10:	b2db      	uxtb	r3, r3
 8001f12:	b29b      	uxth	r3, r3
 8001f14:	4423      	add	r3, r4
 8001f16:	b29b      	uxth	r3, r3
 8001f18:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f20:	4816      	ldr	r0, [pc, #88]	; (8001f7c <DDS_Init+0x1ac>)
 8001f22:	f003 fe7b 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f26:	1d39      	adds	r1, r7, #4
 8001f28:	2305      	movs	r3, #5
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	4814      	ldr	r0, [pc, #80]	; (8001f80 <DDS_Init+0x1b0>)
 8001f2e:	f005 fef9 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f32:	2201      	movs	r2, #1
 8001f34:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f38:	4810      	ldr	r0, [pc, #64]	; (8001f7c <DDS_Init+0x1ac>)
 8001f3a:	f003 fe6f 	bl	8005c1c <HAL_GPIO_WritePin>


	HAL_Delay(100);
 8001f3e:	2064      	movs	r0, #100	; 0x64
 8001f40:	f003 fb1c 	bl	800557c <HAL_Delay>

	// CONTROL REGISTER WRITE, 	SLEEP = 0,	RESET = 0, CLR = 0

	// Control DDS (D15=1, D14=1)
	DDS_tx_buffer[0]=0xC000; // Exit DAC from Sleep+Reset mode
 8001f44:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001f48:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f50:	480a      	ldr	r0, [pc, #40]	; (8001f7c <DDS_Init+0x1ac>)
 8001f52:	f003 fe63 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001f56:	1d39      	adds	r1, r7, #4
 8001f58:	2305      	movs	r3, #5
 8001f5a:	2201      	movs	r2, #1
 8001f5c:	4808      	ldr	r0, [pc, #32]	; (8001f80 <DDS_Init+0x1b0>)
 8001f5e:	f005 fee1 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001f62:	2201      	movs	r2, #1
 8001f64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001f68:	4804      	ldr	r0, [pc, #16]	; (8001f7c <DDS_Init+0x1ac>)
 8001f6a:	f003 fe57 	bl	8005c1c <HAL_GPIO_WritePin>

	HAL_Delay(100);
 8001f6e:	2064      	movs	r0, #100	; 0x64
 8001f70:	f003 fb04 	bl	800557c <HAL_Delay>

}
 8001f74:	bf00      	nop
 8001f76:	370c      	adds	r7, #12
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bd90      	pop	{r4, r7, pc}
 8001f7c:	40020400 	.word	0x40020400
 8001f80:	200007e4 	.word	0x200007e4
 8001f84:	2000075c 	.word	0x2000075c

08001f88 <DDS_Update>:

//==============================================================================================
void DDS_Update(void)
{
 8001f88:	b590      	push	{r4, r7, lr}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
	uint16_t DDS_tx_buffer[1];

	// Write to Frequency 0 Reg, H MSB
	DDS_tx_buffer[0]=0x3300;
 8001f8e:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 8001f92:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 24) & 0xFF;
 8001f94:	88bc      	ldrh	r4, [r7, #4]
 8001f96:	4b44      	ldr	r3, [pc, #272]	; (80020a8 <DDS_Update+0x120>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f7ff f8da 	bl	8001154 <__aeabi_f2uiz>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	0e1b      	lsrs	r3, r3, #24
 8001fa4:	b29b      	uxth	r3, r3
 8001fa6:	4423      	add	r3, r4
 8001fa8:	b29b      	uxth	r3, r3
 8001faa:	80bb      	strh	r3, [r7, #4]
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001fac:	2200      	movs	r2, #0
 8001fae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fb2:	483e      	ldr	r0, [pc, #248]	; (80020ac <DDS_Update+0x124>)
 8001fb4:	f003 fe32 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001fb8:	1d39      	adds	r1, r7, #4
 8001fba:	2305      	movs	r3, #5
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	483c      	ldr	r0, [pc, #240]	; (80020b0 <DDS_Update+0x128>)
 8001fc0:	f005 feb0 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8001fc4:	2201      	movs	r2, #1
 8001fc6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001fca:	4838      	ldr	r0, [pc, #224]	; (80020ac <DDS_Update+0x124>)
 8001fcc:	f003 fe26 	bl	8005c1c <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L MSBs
	DDS_tx_buffer[0]=0x2200;
 8001fd0:	f44f 5308 	mov.w	r3, #8704	; 0x2200
 8001fd4:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 16) & 0xFF;
 8001fd6:	88bc      	ldrh	r4, [r7, #4]
 8001fd8:	4b33      	ldr	r3, [pc, #204]	; (80020a8 <DDS_Update+0x120>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4618      	mov	r0, r3
 8001fde:	f7ff f8b9 	bl	8001154 <__aeabi_f2uiz>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	0c1b      	lsrs	r3, r3, #16
 8001fe6:	b29b      	uxth	r3, r3
 8001fe8:	b2db      	uxtb	r3, r3
 8001fea:	b29b      	uxth	r3, r3
 8001fec:	4423      	add	r3, r4
 8001fee:	b29b      	uxth	r3, r3
 8001ff0:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ff8:	482c      	ldr	r0, [pc, #176]	; (80020ac <DDS_Update+0x124>)
 8001ffa:	f003 fe0f 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8001ffe:	1d39      	adds	r1, r7, #4
 8002000:	2305      	movs	r3, #5
 8002002:	2201      	movs	r2, #1
 8002004:	482a      	ldr	r0, [pc, #168]	; (80020b0 <DDS_Update+0x128>)
 8002006:	f005 fe8d 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 800200a:	2201      	movs	r2, #1
 800200c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002010:	4826      	ldr	r0, [pc, #152]	; (80020ac <DDS_Update+0x124>)
 8002012:	f003 fe03 	bl	8005c1c <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, H LSBs
	DDS_tx_buffer[0]=0x3100;
 8002016:	f44f 5344 	mov.w	r3, #12544	; 0x3100
 800201a:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW >> 8) & 0xFF;
 800201c:	88bc      	ldrh	r4, [r7, #4]
 800201e:	4b22      	ldr	r3, [pc, #136]	; (80020a8 <DDS_Update+0x120>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	4618      	mov	r0, r3
 8002024:	f7ff f896 	bl	8001154 <__aeabi_f2uiz>
 8002028:	4603      	mov	r3, r0
 800202a:	0a1b      	lsrs	r3, r3, #8
 800202c:	b29b      	uxth	r3, r3
 800202e:	b2db      	uxtb	r3, r3
 8002030:	b29b      	uxth	r3, r3
 8002032:	4423      	add	r3, r4
 8002034:	b29b      	uxth	r3, r3
 8002036:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 8002038:	2200      	movs	r2, #0
 800203a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800203e:	481b      	ldr	r0, [pc, #108]	; (80020ac <DDS_Update+0x124>)
 8002040:	f003 fdec 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002044:	1d39      	adds	r1, r7, #4
 8002046:	2305      	movs	r3, #5
 8002048:	2201      	movs	r2, #1
 800204a:	4819      	ldr	r0, [pc, #100]	; (80020b0 <DDS_Update+0x128>)
 800204c:	f005 fe6a 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002050:	2201      	movs	r2, #1
 8002052:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002056:	4815      	ldr	r0, [pc, #84]	; (80020ac <DDS_Update+0x124>)
 8002058:	f003 fde0 	bl	8005c1c <HAL_GPIO_WritePin>

	// Write to Frequency 0 Reg, L LSBs
	DDS_tx_buffer[0]=0x2000;
 800205c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002060:	80bb      	strh	r3, [r7, #4]
	DDS_tx_buffer[0]+=((uint32_t)DDS_FTW & 0xFF);
 8002062:	88bc      	ldrh	r4, [r7, #4]
 8002064:	4b10      	ldr	r3, [pc, #64]	; (80020a8 <DDS_Update+0x120>)
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	4618      	mov	r0, r3
 800206a:	f7ff f873 	bl	8001154 <__aeabi_f2uiz>
 800206e:	4603      	mov	r3, r0
 8002070:	b29b      	uxth	r3, r3
 8002072:	b2db      	uxtb	r3, r3
 8002074:	b29b      	uxth	r3, r3
 8002076:	4423      	add	r3, r4
 8002078:	b29b      	uxth	r3, r3
 800207a:	80bb      	strh	r3, [r7, #4]

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
 800207c:	2200      	movs	r2, #0
 800207e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002082:	480a      	ldr	r0, [pc, #40]	; (80020ac <DDS_Update+0x124>)
 8002084:	f003 fdca 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
 8002088:	1d39      	adds	r1, r7, #4
 800208a:	2305      	movs	r3, #5
 800208c:	2201      	movs	r2, #1
 800208e:	4808      	ldr	r0, [pc, #32]	; (80020b0 <DDS_Update+0x128>)
 8002090:	f005 fe48 	bl	8007d24 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 8002094:	2201      	movs	r2, #1
 8002096:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800209a:	4804      	ldr	r0, [pc, #16]	; (80020ac <DDS_Update+0x124>)
 800209c:	f003 fdbe 	bl	8005c1c <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);
	HAL_SPI_Transmit(&hspi2,(uint8_t *)DDS_tx_buffer,1,5);
	HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
	 */
}
 80020a0:	bf00      	nop
 80020a2:	370c      	adds	r7, #12
 80020a4:	46bd      	mov	sp, r7
 80020a6:	bd90      	pop	{r4, r7, pc}
 80020a8:	2000075c 	.word	0x2000075c
 80020ac:	40020400 	.word	0x40020400
 80020b0:	200007e4 	.word	0x200007e4

080020b4 <LcdSend>:
extern FunctionalState Display_need_wakeup;
extern FunctionalState Display_status;
extern FunctionalState Need_update_Display;

void LcdSend(uint8_t data, uint8_t cmd) //Sends data to display controller
{
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b084      	sub	sp, #16
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	460a      	mov	r2, r1
 80020be:	71fb      	strb	r3, [r7, #7]
 80020c0:	4613      	mov	r3, r2
 80020c2:	71bb      	strb	r3, [r7, #6]
	uint8_t sdata = 0;
 80020c4:	2300      	movs	r3, #0
 80020c6:	73fb      	strb	r3, [r7, #15]

	lcd44780_RW_0;
 80020c8:	2200      	movs	r2, #0
 80020ca:	2102      	movs	r1, #2
 80020cc:	4811      	ldr	r0, [pc, #68]	; (8002114 <LcdSend+0x60>)
 80020ce:	f003 fda5 	bl	8005c1c <HAL_GPIO_WritePin>

	sdata = data;
 80020d2:	79fb      	ldrb	r3, [r7, #7]
 80020d4:	73fb      	strb	r3, [r7, #15]
	if(cmd == lcd_CMD)
 80020d6:	79bb      	ldrb	r3, [r7, #6]
 80020d8:	2b01      	cmp	r3, #1
 80020da:	d105      	bne.n	80020e8 <LcdSend+0x34>
	{
		lcd44780_RS_0;
 80020dc:	2201      	movs	r2, #1
 80020de:	2101      	movs	r1, #1
 80020e0:	480c      	ldr	r0, [pc, #48]	; (8002114 <LcdSend+0x60>)
 80020e2:	f003 fd9b 	bl	8005c1c <HAL_GPIO_WritePin>
 80020e6:	e004      	b.n	80020f2 <LcdSend+0x3e>
	}                             //идентефикатор кода
	else
	{
		lcd44780_RS_1;
 80020e8:	2200      	movs	r2, #0
 80020ea:	2101      	movs	r1, #1
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LcdSend+0x60>)
 80020ee:	f003 fd95 	bl	8005c1c <HAL_GPIO_WritePin>
	}                             //идентефикатор данных
	send_data(sdata);
 80020f2:	7bfb      	ldrb	r3, [r7, #15]
 80020f4:	4618      	mov	r0, r3
 80020f6:	f000 f983 	bl	8002400 <send_data>

	if(cmd == lcd_CMD)while(check_busy_flag());
 80020fa:	79bb      	ldrb	r3, [r7, #6]
 80020fc:	2b01      	cmp	r3, #1
 80020fe:	d105      	bne.n	800210c <LcdSend+0x58>
 8002100:	bf00      	nop
 8002102:	f000 f9bd 	bl	8002480 <check_busy_flag>
 8002106:	4603      	mov	r3, r0
 8002108:	2b00      	cmp	r3, #0
 800210a:	d1fa      	bne.n	8002102 <LcdSend+0x4e>
}
 800210c:	bf00      	nop
 800210e:	3710      	adds	r7, #16
 8002110:	46bd      	mov	sp, r7
 8002112:	bd80      	pop	{r7, pc}
 8002114:	40020400 	.word	0x40020400

08002118 <LcdUpdate>:

void LcdUpdate(void)            //Copies the LCD cache into the device RAM
{
 8002118:	b580      	push	{r7, lr}
 800211a:	b082      	sub	sp, #8
 800211c:	af00      	add	r7, sp, #0
	int i = 0, j = 0;
 800211e:	2300      	movs	r3, #0
 8002120:	607b      	str	r3, [r7, #4]
 8002122:	2300      	movs	r3, #0
 8002124:	603b      	str	r3, [r7, #0]

	Need_update_Display=0;
 8002126:	4b17      	ldr	r3, [pc, #92]	; (8002184 <LcdUpdate+0x6c>)
 8002128:	2200      	movs	r2, #0
 800212a:	701a      	strb	r2, [r3, #0]
	LcdSend(HD44780_SET_CGRAM_ADD, lcd_CMD);//Позицианируем курсор на начало координат
 800212c:	2101      	movs	r1, #1
 800212e:	2040      	movs	r0, #64	; 0x40
 8002130:	f7ff ffc0 	bl	80020b4 <LcdSend>
	LcdSend(HD44780_SET_DDRAM_ADD, lcd_CMD);
 8002134:	2101      	movs	r1, #1
 8002136:	2080      	movs	r0, #128	; 0x80
 8002138:	f7ff ffbc 	bl	80020b4 <LcdSend>

	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800213c:	2300      	movs	r3, #0
 800213e:	607b      	str	r3, [r7, #4]
 8002140:	e017      	b.n	8002172 <LcdUpdate+0x5a>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002142:	2300      	movs	r3, #0
 8002144:	603b      	str	r3, [r7, #0]
 8002146:	e00e      	b.n	8002166 <LcdUpdate+0x4e>
		{
			LcdSend(LcdCache[((i * LCD_X_RES) + j)], lcd_DATA);       //вычисляем адрес в фрейм буфере, и данные от туда грузим в дисплей.
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2264      	movs	r2, #100	; 0x64
 800214c:	fb03 f202 	mul.w	r2, r3, r2
 8002150:	683b      	ldr	r3, [r7, #0]
 8002152:	4413      	add	r3, r2
 8002154:	4a0c      	ldr	r2, [pc, #48]	; (8002188 <LcdUpdate+0x70>)
 8002156:	5cd3      	ldrb	r3, [r2, r3]
 8002158:	2102      	movs	r1, #2
 800215a:	4618      	mov	r0, r3
 800215c:	f7ff ffaa 	bl	80020b4 <LcdSend>
		for (j = 0; j < LCD_X_RES; j++)        //грузим данные столюиками по 8 пикселей
 8002160:	683b      	ldr	r3, [r7, #0]
 8002162:	3301      	adds	r3, #1
 8002164:	603b      	str	r3, [r7, #0]
 8002166:	683b      	ldr	r3, [r7, #0]
 8002168:	2b63      	cmp	r3, #99	; 0x63
 800216a:	dded      	ble.n	8002148 <LcdUpdate+0x30>
	for (i = 0; i < (LCD_Y_RES >> 3); i++)        //грузим данные строками (было деление на 8)
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	3301      	adds	r3, #1
 8002170:	607b      	str	r3, [r7, #4]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	2b01      	cmp	r3, #1
 8002176:	dde4      	ble.n	8002142 <LcdUpdate+0x2a>
		}
}
 8002178:	bf00      	nop
 800217a:	bf00      	nop
 800217c:	3708      	adds	r7, #8
 800217e:	46bd      	mov	sp, r7
 8002180:	bd80      	pop	{r7, pc}
 8002182:	bf00      	nop
 8002184:	20000787 	.word	0x20000787
 8002188:	20000554 	.word	0x20000554

0800218c <LcdClear_massive>:
	LcdUpdate();
}


void LcdClear_massive(void)     //Clears the display
{
 800218c:	b480      	push	{r7}
 800218e:	b083      	sub	sp, #12
 8002190:	af00      	add	r7, sp, #0
	int i = 0;
 8002192:	2300      	movs	r3, #0
 8002194:	607b      	str	r3, [r7, #4]

	for (i = 0; i < LCD_CACHSIZE; i++)
 8002196:	2300      	movs	r3, #0
 8002198:	607b      	str	r3, [r7, #4]
 800219a:	e007      	b.n	80021ac <LcdClear_massive+0x20>
		LcdCache[i] = 0;            //забиваем всю память 0
 800219c:	4a08      	ldr	r2, [pc, #32]	; (80021c0 <LcdClear_massive+0x34>)
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	4413      	add	r3, r2
 80021a2:	2200      	movs	r2, #0
 80021a4:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < LCD_CACHSIZE; i++)
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	3301      	adds	r3, #1
 80021aa:	607b      	str	r3, [r7, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	2bc7      	cmp	r3, #199	; 0xc7
 80021b0:	ddf4      	ble.n	800219c <LcdClear_massive+0x10>
}
 80021b2:	bf00      	nop
 80021b4:	bf00      	nop
 80021b6:	370c      	adds	r7, #12
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bc80      	pop	{r7}
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	20000554 	.word	0x20000554

080021c4 <LcdGotoXYFont>:
	}
}


void LcdGotoXYFont(unsigned char x, unsigned char y)    //Sets cursor location to xy location. Range: 1,1 .. 14,6
{
 80021c4:	b480      	push	{r7}
 80021c6:	b083      	sub	sp, #12
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	4603      	mov	r3, r0
 80021cc:	460a      	mov	r2, r1
 80021ce:	71fb      	strb	r3, [r7, #7]
 80021d0:	4613      	mov	r3, r2
 80021d2:	71bb      	strb	r3, [r7, #6]
	LcdCacheIdx = ((int) (y) - 1) * Cntr_X_RES + ((int) (x) - 1) * Cntr_Y_RES;
 80021d4:	79bb      	ldrb	r3, [r7, #6]
 80021d6:	3b01      	subs	r3, #1
 80021d8:	2264      	movs	r2, #100	; 0x64
 80021da:	fb03 f202 	mul.w	r2, r3, r2
 80021de:	79fb      	ldrb	r3, [r7, #7]
 80021e0:	3b01      	subs	r3, #1
 80021e2:	011b      	lsls	r3, r3, #4
 80021e4:	4413      	add	r3, r2
 80021e6:	461a      	mov	r2, r3
 80021e8:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <LcdGotoXYFont+0x34>)
 80021ea:	601a      	str	r2, [r3, #0]
}
 80021ec:	bf00      	nop
 80021ee:	370c      	adds	r7, #12
 80021f0:	46bd      	mov	sp, r7
 80021f2:	bc80      	pop	{r7}
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop
 80021f8:	2000061c 	.word	0x2000061c

080021fc <clean_lcd_buf>:

void clean_lcd_buf(void)        //очистка текстового буфера
{
 80021fc:	b480      	push	{r7}
 80021fe:	b083      	sub	sp, #12
 8002200:	af00      	add	r7, sp, #0
	uint8_t i = 0;
 8002202:	2300      	movs	r3, #0
 8002204:	71fb      	strb	r3, [r7, #7]

	for (i = 0; i < 20; i++)
 8002206:	2300      	movs	r3, #0
 8002208:	71fb      	strb	r3, [r7, #7]
 800220a:	e006      	b.n	800221a <clean_lcd_buf+0x1e>
		lcd_buf[i] = 0;
 800220c:	79fb      	ldrb	r3, [r7, #7]
 800220e:	4a07      	ldr	r2, [pc, #28]	; (800222c <clean_lcd_buf+0x30>)
 8002210:	2100      	movs	r1, #0
 8002212:	54d1      	strb	r1, [r2, r3]
	for (i = 0; i < 20; i++)
 8002214:	79fb      	ldrb	r3, [r7, #7]
 8002216:	3301      	adds	r3, #1
 8002218:	71fb      	strb	r3, [r7, #7]
 800221a:	79fb      	ldrb	r3, [r7, #7]
 800221c:	2b13      	cmp	r3, #19
 800221e:	d9f5      	bls.n	800220c <clean_lcd_buf+0x10>
}
 8002220:	bf00      	nop
 8002222:	bf00      	nop
 8002224:	370c      	adds	r7, #12
 8002226:	46bd      	mov	sp, r7
 8002228:	bc80      	pop	{r7}
 800222a:	4770      	bx	lr
 800222c:	20000540 	.word	0x20000540

08002230 <LcdChr>:

void LcdChr(int ch)             //Displays a character at current cursor location and increment cursor location
{
 8002230:	b480      	push	{r7}
 8002232:	b085      	sub	sp, #20
 8002234:	af00      	add	r7, sp, #0
 8002236:	6078      	str	r0, [r7, #4]
	char i = 0;
 8002238:	2300      	movs	r3, #0
 800223a:	73fb      	strb	r3, [r7, #15]
	if(ch > 0x7f)
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	2b7f      	cmp	r3, #127	; 0x7f
 8002240:	dd1a      	ble.n	8002278 <LcdChr+0x48>
	{
		for (i = 0; i < 5; i++)
 8002242:	2300      	movs	r3, #0
 8002244:	73fb      	strb	r3, [r7, #15]
 8002246:	e013      	b.n	8002270 <LcdChr+0x40>
			LcdCache[LcdCacheIdx++] = lcd_font_table_rus[(ch * 5 + (i) - 0x3C0)];     //выделяем байт-столбик из символа и грузим в массив - 5 раз
 8002248:	687a      	ldr	r2, [r7, #4]
 800224a:	4613      	mov	r3, r2
 800224c:	009b      	lsls	r3, r3, #2
 800224e:	441a      	add	r2, r3
 8002250:	7bfb      	ldrb	r3, [r7, #15]
 8002252:	4413      	add	r3, r2
 8002254:	f5a3 7270 	sub.w	r2, r3, #960	; 0x3c0
 8002258:	4b1b      	ldr	r3, [pc, #108]	; (80022c8 <LcdChr+0x98>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	1c59      	adds	r1, r3, #1
 800225e:	481a      	ldr	r0, [pc, #104]	; (80022c8 <LcdChr+0x98>)
 8002260:	6001      	str	r1, [r0, #0]
 8002262:	491a      	ldr	r1, [pc, #104]	; (80022cc <LcdChr+0x9c>)
 8002264:	5c89      	ldrb	r1, [r1, r2]
 8002266:	4a1a      	ldr	r2, [pc, #104]	; (80022d0 <LcdChr+0xa0>)
 8002268:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 800226a:	7bfb      	ldrb	r3, [r7, #15]
 800226c:	3301      	adds	r3, #1
 800226e:	73fb      	strb	r3, [r7, #15]
 8002270:	7bfb      	ldrb	r3, [r7, #15]
 8002272:	2b04      	cmp	r3, #4
 8002274:	d9e8      	bls.n	8002248 <LcdChr+0x18>
 8002276:	e019      	b.n	80022ac <LcdChr+0x7c>
	} else
	{
		for (i = 0; i < 5; i++)
 8002278:	2300      	movs	r3, #0
 800227a:	73fb      	strb	r3, [r7, #15]
 800227c:	e013      	b.n	80022a6 <LcdChr+0x76>
			LcdCache[LcdCacheIdx++] = lcd_font_table[(ch * 5 + (i) - 0xA0)];  //выделяем байт-столбик из символа и грузим в массив - 5 раз
 800227e:	687a      	ldr	r2, [r7, #4]
 8002280:	4613      	mov	r3, r2
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	441a      	add	r2, r3
 8002286:	7bfb      	ldrb	r3, [r7, #15]
 8002288:	4413      	add	r3, r2
 800228a:	f1a3 02a0 	sub.w	r2, r3, #160	; 0xa0
 800228e:	4b0e      	ldr	r3, [pc, #56]	; (80022c8 <LcdChr+0x98>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	1c59      	adds	r1, r3, #1
 8002294:	480c      	ldr	r0, [pc, #48]	; (80022c8 <LcdChr+0x98>)
 8002296:	6001      	str	r1, [r0, #0]
 8002298:	490e      	ldr	r1, [pc, #56]	; (80022d4 <LcdChr+0xa4>)
 800229a:	5c89      	ldrb	r1, [r1, r2]
 800229c:	4a0c      	ldr	r2, [pc, #48]	; (80022d0 <LcdChr+0xa0>)
 800229e:	54d1      	strb	r1, [r2, r3]
		for (i = 0; i < 5; i++)
 80022a0:	7bfb      	ldrb	r3, [r7, #15]
 80022a2:	3301      	adds	r3, #1
 80022a4:	73fb      	strb	r3, [r7, #15]
 80022a6:	7bfb      	ldrb	r3, [r7, #15]
 80022a8:	2b04      	cmp	r3, #4
 80022aa:	d9e8      	bls.n	800227e <LcdChr+0x4e>
	}
	LcdCache[LcdCacheIdx++] = 0x00;       //добавляем пробел между символами
 80022ac:	4b06      	ldr	r3, [pc, #24]	; (80022c8 <LcdChr+0x98>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	1c5a      	adds	r2, r3, #1
 80022b2:	4905      	ldr	r1, [pc, #20]	; (80022c8 <LcdChr+0x98>)
 80022b4:	600a      	str	r2, [r1, #0]
 80022b6:	4a06      	ldr	r2, [pc, #24]	; (80022d0 <LcdChr+0xa0>)
 80022b8:	2100      	movs	r1, #0
 80022ba:	54d1      	strb	r1, [r2, r3]
}
 80022bc:	bf00      	nop
 80022be:	3714      	adds	r7, #20
 80022c0:	46bd      	mov	sp, r7
 80022c2:	bc80      	pop	{r7}
 80022c4:	4770      	bx	lr
 80022c6:	bf00      	nop
 80022c8:	2000061c 	.word	0x2000061c
 80022cc:	0801010c 	.word	0x0801010c
 80022d0:	20000554 	.word	0x20000554
 80022d4:	0800ff2c 	.word	0x0800ff2c

080022d8 <LcdString>:
	}
	LcdCache[LcdCacheIdx++] = 0xFF;       //добавляем пробел между символами
}

void LcdString(unsigned char x, unsigned char y)        //Displays a string at current cursor location
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b084      	sub	sp, #16
 80022dc:	af00      	add	r7, sp, #0
 80022de:	4603      	mov	r3, r0
 80022e0:	460a      	mov	r2, r1
 80022e2:	71fb      	strb	r3, [r7, #7]
 80022e4:	4613      	mov	r3, r2
 80022e6:	71bb      	strb	r3, [r7, #6]
	unsigned char i = 0;
 80022e8:	2300      	movs	r3, #0
 80022ea:	73fb      	strb	r3, [r7, #15]

	if(x > 17 || y > 8)
 80022ec:	79fb      	ldrb	r3, [r7, #7]
 80022ee:	2b11      	cmp	r3, #17
 80022f0:	d81f      	bhi.n	8002332 <LcdString+0x5a>
 80022f2:	79bb      	ldrb	r3, [r7, #6]
 80022f4:	2b08      	cmp	r3, #8
 80022f6:	d81c      	bhi.n	8002332 <LcdString+0x5a>
		return;
	LcdGotoXYFont(x, y);
 80022f8:	79ba      	ldrb	r2, [r7, #6]
 80022fa:	79fb      	ldrb	r3, [r7, #7]
 80022fc:	4611      	mov	r1, r2
 80022fe:	4618      	mov	r0, r3
 8002300:	f7ff ff60 	bl	80021c4 <LcdGotoXYFont>
	for (i = 0; i < 17; i++)
 8002304:	2300      	movs	r3, #0
 8002306:	73fb      	strb	r3, [r7, #15]
 8002308:	e00d      	b.n	8002326 <LcdString+0x4e>
		if(lcd_buf[i])
 800230a:	7bfb      	ldrb	r3, [r7, #15]
 800230c:	4a0b      	ldr	r2, [pc, #44]	; (800233c <LcdString+0x64>)
 800230e:	5cd3      	ldrb	r3, [r2, r3]
 8002310:	2b00      	cmp	r3, #0
 8002312:	d005      	beq.n	8002320 <LcdString+0x48>
			LcdChr(lcd_buf[i]);
 8002314:	7bfb      	ldrb	r3, [r7, #15]
 8002316:	4a09      	ldr	r2, [pc, #36]	; (800233c <LcdString+0x64>)
 8002318:	5cd3      	ldrb	r3, [r2, r3]
 800231a:	4618      	mov	r0, r3
 800231c:	f7ff ff88 	bl	8002230 <LcdChr>
	for (i = 0; i < 17; i++)
 8002320:	7bfb      	ldrb	r3, [r7, #15]
 8002322:	3301      	adds	r3, #1
 8002324:	73fb      	strb	r3, [r7, #15]
 8002326:	7bfb      	ldrb	r3, [r7, #15]
 8002328:	2b10      	cmp	r3, #16
 800232a:	d9ee      	bls.n	800230a <LcdString+0x32>
	clean_lcd_buf();
 800232c:	f7ff ff66 	bl	80021fc <clean_lcd_buf>
 8002330:	e000      	b.n	8002334 <LcdString+0x5c>
		return;
 8002332:	bf00      	nop
}
 8002334:	3710      	adds	r7, #16
 8002336:	46bd      	mov	sp, r7
 8002338:	bd80      	pop	{r7, pc}
 800233a:	bf00      	nop
 800233c:	20000540 	.word	0x20000540

08002340 <pulse_e>:
//////////////////////////////////////////////////////////////////////////////////////



void pulse_e() //импульс на вход Е индикатора
{
 8002340:	b580      	push	{r7, lr}
 8002342:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_SET);//    PIN_ON(PIN_E);
 8002344:	2201      	movs	r2, #1
 8002346:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800234a:	4805      	ldr	r0, [pc, #20]	; (8002360 <pulse_e+0x20>)
 800234c:	f003 fc66 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002350:	2200      	movs	r2, #0
 8002352:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002356:	4802      	ldr	r0, [pc, #8]	; (8002360 <pulse_e+0x20>)
 8002358:	f003 fc60 	bl	8005c1c <HAL_GPIO_WritePin>
}
 800235c:	bf00      	nop
 800235e:	bd80      	pop	{r7, pc}
 8002360:	40020400 	.word	0x40020400

08002364 <send_nibble>:

void send_nibble(unsigned char data) //полубайтовый вывод
{
 8002364:	b580      	push	{r7, lr}
 8002366:	b082      	sub	sp, #8
 8002368:	af00      	add	r7, sp, #0
 800236a:	4603      	mov	r3, r0
 800236c:	71fb      	strb	r3, [r7, #7]
	//выводим половину байта на соответствующие контакты
	if(data & 0x01)
 800236e:	79fb      	ldrb	r3, [r7, #7]
 8002370:	f003 0301 	and.w	r3, r3, #1
 8002374:	2b00      	cmp	r3, #0
 8002376:	d005      	beq.n	8002384 <send_nibble+0x20>
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB4);
 8002378:	2201      	movs	r2, #1
 800237a:	2104      	movs	r1, #4
 800237c:	481f      	ldr	r0, [pc, #124]	; (80023fc <send_nibble+0x98>)
 800237e:	f003 fc4d 	bl	8005c1c <HAL_GPIO_WritePin>
 8002382:	e004      	b.n	800238e <send_nibble+0x2a>
	else
		HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 8002384:	2200      	movs	r2, #0
 8002386:	2104      	movs	r1, #4
 8002388:	481c      	ldr	r0, [pc, #112]	; (80023fc <send_nibble+0x98>)
 800238a:	f003 fc47 	bl	8005c1c <HAL_GPIO_WritePin>

	if(data & 0x02)
 800238e:	79fb      	ldrb	r3, [r7, #7]
 8002390:	f003 0302 	and.w	r3, r3, #2
 8002394:	2b00      	cmp	r3, #0
 8002396:	d005      	beq.n	80023a4 <send_nibble+0x40>
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB5);
 8002398:	2201      	movs	r2, #1
 800239a:	2108      	movs	r1, #8
 800239c:	4817      	ldr	r0, [pc, #92]	; (80023fc <send_nibble+0x98>)
 800239e:	f003 fc3d 	bl	8005c1c <HAL_GPIO_WritePin>
 80023a2:	e004      	b.n	80023ae <send_nibble+0x4a>
	else
		HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80023a4:	2200      	movs	r2, #0
 80023a6:	2108      	movs	r1, #8
 80023a8:	4814      	ldr	r0, [pc, #80]	; (80023fc <send_nibble+0x98>)
 80023aa:	f003 fc37 	bl	8005c1c <HAL_GPIO_WritePin>

	if(data & 0x04)
 80023ae:	79fb      	ldrb	r3, [r7, #7]
 80023b0:	f003 0304 	and.w	r3, r3, #4
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d005      	beq.n	80023c4 <send_nibble+0x60>
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB6);
 80023b8:	2201      	movs	r2, #1
 80023ba:	2110      	movs	r1, #16
 80023bc:	480f      	ldr	r0, [pc, #60]	; (80023fc <send_nibble+0x98>)
 80023be:	f003 fc2d 	bl	8005c1c <HAL_GPIO_WritePin>
 80023c2:	e004      	b.n	80023ce <send_nibble+0x6a>
	else
		HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80023c4:	2200      	movs	r2, #0
 80023c6:	2110      	movs	r1, #16
 80023c8:	480c      	ldr	r0, [pc, #48]	; (80023fc <send_nibble+0x98>)
 80023ca:	f003 fc27 	bl	8005c1c <HAL_GPIO_WritePin>

	if(data & 0x08)
 80023ce:	79fb      	ldrb	r3, [r7, #7]
 80023d0:	f003 0308 	and.w	r3, r3, #8
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d005      	beq.n	80023e4 <send_nibble+0x80>
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_SET);//  PIN_ON(PIN_DB7);
 80023d8:	2201      	movs	r2, #1
 80023da:	2120      	movs	r1, #32
 80023dc:	4807      	ldr	r0, [pc, #28]	; (80023fc <send_nibble+0x98>)
 80023de:	f003 fc1d 	bl	8005c1c <HAL_GPIO_WritePin>
 80023e2:	e004      	b.n	80023ee <send_nibble+0x8a>
	else
		HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80023e4:	2200      	movs	r2, #0
 80023e6:	2120      	movs	r1, #32
 80023e8:	4804      	ldr	r0, [pc, #16]	; (80023fc <send_nibble+0x98>)
 80023ea:	f003 fc17 	bl	8005c1c <HAL_GPIO_WritePin>

	pulse_e(); //чтобы индикатор проглотил данные
 80023ee:	f7ff ffa7 	bl	8002340 <pulse_e>
}
 80023f2:	bf00      	nop
 80023f4:	3708      	adds	r7, #8
 80023f6:	46bd      	mov	sp, r7
 80023f8:	bd80      	pop	{r7, pc}
 80023fa:	bf00      	nop
 80023fc:	40020400 	.word	0x40020400

08002400 <send_data>:

void send_data(unsigned char data) //вывод 2хполбайта на индикатор
{
 8002400:	b580      	push	{r7, lr}
 8002402:	b082      	sub	sp, #8
 8002404:	af00      	add	r7, sp, #0
 8002406:	4603      	mov	r3, r0
 8002408:	71fb      	strb	r3, [r7, #7]
	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800240a:	79fb      	ldrb	r3, [r7, #7]
 800240c:	091b      	lsrs	r3, r3, #4
 800240e:	b2db      	uxtb	r3, r3
 8002410:	4618      	mov	r0, r3
 8002412:	f7ff ffa7 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002416:	79fb      	ldrb	r3, [r7, #7]
 8002418:	f003 030f 	and.w	r3, r3, #15
 800241c:	b2db      	uxtb	r3, r3
 800241e:	4618      	mov	r0, r3
 8002420:	f7ff ffa0 	bl	8002364 <send_nibble>
}
 8002424:	bf00      	nop
 8002426:	3708      	adds	r7, #8
 8002428:	46bd      	mov	sp, r7
 800242a:	bd80      	pop	{r7, pc}

0800242c <send_command>:

void send_command(unsigned char data) //вывод 2хполбайта на индикатор
{
 800242c:	b580      	push	{r7, lr}
 800242e:	b082      	sub	sp, #8
 8002430:	af00      	add	r7, sp, #0
 8002432:	4603      	mov	r3, r0
 8002434:	71fb      	strb	r3, [r7, #7]
	lcd44780_RS_0;
 8002436:	2201      	movs	r2, #1
 8002438:	2101      	movs	r1, #1
 800243a:	4810      	ldr	r0, [pc, #64]	; (800247c <send_command+0x50>)
 800243c:	f003 fbee 	bl	8005c1c <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 8002440:	2200      	movs	r2, #0
 8002442:	2102      	movs	r1, #2
 8002444:	480d      	ldr	r0, [pc, #52]	; (800247c <send_command+0x50>)
 8002446:	f003 fbe9 	bl	8005c1c <HAL_GPIO_WritePin>

	//Первым шлем старшие полбайта: по инструкции
	//сначала столбец, потом строка таблицы знакогенератора
	send_nibble((data>>4) & 0x0F);
 800244a:	79fb      	ldrb	r3, [r7, #7]
 800244c:	091b      	lsrs	r3, r3, #4
 800244e:	b2db      	uxtb	r3, r3
 8002450:	4618      	mov	r0, r3
 8002452:	f7ff ff87 	bl	8002364 <send_nibble>
	send_nibble(data & 0x0F);
 8002456:	79fb      	ldrb	r3, [r7, #7]
 8002458:	f003 030f 	and.w	r3, r3, #15
 800245c:	b2db      	uxtb	r3, r3
 800245e:	4618      	mov	r0, r3
 8002460:	f7ff ff80 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 8002464:	bf00      	nop
 8002466:	f000 f80b 	bl	8002480 <check_busy_flag>
 800246a:	4603      	mov	r3, r0
 800246c:	2b00      	cmp	r3, #0
 800246e:	d1fa      	bne.n	8002466 <send_command+0x3a>
}
 8002470:	bf00      	nop
 8002472:	bf00      	nop
 8002474:	3708      	adds	r7, #8
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
 800247a:	bf00      	nop
 800247c:	40020400 	.word	0x40020400

08002480 <check_busy_flag>:

int check_busy_flag(void)
{
 8002480:	b580      	push	{r7, lr}
 8002482:	b086      	sub	sp, #24
 8002484:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002486:	463b      	mov	r3, r7
 8002488:	2200      	movs	r2, #0
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	605a      	str	r2, [r3, #4]
 800248e:	609a      	str	r2, [r3, #8]
 8002490:	60da      	str	r2, [r3, #12]
 8002492:	611a      	str	r2, [r3, #16]
	GPIO_PinState status;

	lcd44780_RW_1; // Read
 8002494:	2201      	movs	r2, #1
 8002496:	2102      	movs	r1, #2
 8002498:	4822      	ldr	r0, [pc, #136]	; (8002524 <check_busy_flag+0xa4>)
 800249a:	f003 fbbf 	bl	8005c1c <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 800249e:	2320      	movs	r3, #32
 80024a0:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80024a2:	2300      	movs	r3, #0
 80024a4:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a6:	2300      	movs	r3, #0
 80024a8:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024aa:	2302      	movs	r3, #2
 80024ac:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ae:	463b      	mov	r3, r7
 80024b0:	4619      	mov	r1, r3
 80024b2:	481c      	ldr	r0, [pc, #112]	; (8002524 <check_busy_flag+0xa4>)
 80024b4:	f003 fac2 	bl	8005a3c <HAL_GPIO_Init>

	lcd44780_E_1;
 80024b8:	2201      	movs	r2, #1
 80024ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024be:	4819      	ldr	r0, [pc, #100]	; (8002524 <check_busy_flag+0xa4>)
 80024c0:	f003 fbac 	bl	8005c1c <HAL_GPIO_WritePin>
	status=HAL_GPIO_ReadPin(Display_DB7_GPIO_Port, Display_DB7_Pin);
 80024c4:	2120      	movs	r1, #32
 80024c6:	4817      	ldr	r0, [pc, #92]	; (8002524 <check_busy_flag+0xa4>)
 80024c8:	f003 fba2 	bl	8005c10 <HAL_GPIO_ReadPin>
 80024cc:	4603      	mov	r3, r0
 80024ce:	75fb      	strb	r3, [r7, #23]
	lcd44780_E_0;
 80024d0:	2200      	movs	r2, #0
 80024d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024d6:	4813      	ldr	r0, [pc, #76]	; (8002524 <check_busy_flag+0xa4>)
 80024d8:	f003 fba0 	bl	8005c1c <HAL_GPIO_WritePin>
	lcd44780_E_1;
 80024dc:	2201      	movs	r2, #1
 80024de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024e2:	4810      	ldr	r0, [pc, #64]	; (8002524 <check_busy_flag+0xa4>)
 80024e4:	f003 fb9a 	bl	8005c1c <HAL_GPIO_WritePin>
	lcd44780_E_0;
 80024e8:	2200      	movs	r2, #0
 80024ea:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024ee:	480d      	ldr	r0, [pc, #52]	; (8002524 <check_busy_flag+0xa4>)
 80024f0:	f003 fb94 	bl	8005c1c <HAL_GPIO_WritePin>
	GPIO_InitStruct.Pin = Display_DB7_Pin;
 80024f4:	2320      	movs	r3, #32
 80024f6:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80024f8:	2311      	movs	r3, #17
 80024fa:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024fc:	2300      	movs	r3, #0
 80024fe:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002500:	2302      	movs	r3, #2
 8002502:	60fb      	str	r3, [r7, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002504:	463b      	mov	r3, r7
 8002506:	4619      	mov	r1, r3
 8002508:	4806      	ldr	r0, [pc, #24]	; (8002524 <check_busy_flag+0xa4>)
 800250a:	f003 fa97 	bl	8005a3c <HAL_GPIO_Init>
	lcd44780_RW_0;
 800250e:	2200      	movs	r2, #0
 8002510:	2102      	movs	r1, #2
 8002512:	4804      	ldr	r0, [pc, #16]	; (8002524 <check_busy_flag+0xa4>)
 8002514:	f003 fb82 	bl	8005c1c <HAL_GPIO_WritePin>
	return status;
 8002518:	7dfb      	ldrb	r3, [r7, #23]
}
 800251a:	4618      	mov	r0, r3
 800251c:	3718      	adds	r7, #24
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}
 8002522:	bf00      	nop
 8002524:	40020400 	.word	0x40020400

08002528 <Poweroff_LCD>:

void Poweroff_LCD() //выключение ЖК
{
 8002528:	b580      	push	{r7, lr}
 800252a:	af00      	add	r7, sp, #0
	Display_status=0;
 800252c:	4b06      	ldr	r3, [pc, #24]	; (8002548 <Poweroff_LCD+0x20>)
 800252e:	2200      	movs	r2, #0
 8002530:	701a      	strb	r2, [r3, #0]

	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002532:	2001      	movs	r0, #1
 8002534:	f7ff ff7a 	bl	800242c <send_command>
	send_command(0x0A); // Display off
 8002538:	200a      	movs	r0, #10
 800253a:	f7ff ff77 	bl	800242c <send_command>
	send_command(0x1B); // Internal DCDC off
 800253e:	201b      	movs	r0, #27
 8002540:	f7ff ff74 	bl	800242c <send_command>
}
 8002544:	bf00      	nop
 8002546:	bd80      	pop	{r7, pc}
 8002548:	20000786 	.word	0x20000786

0800254c <Poweron_LCD>:

void Poweron_LCD() //включение ЖК
{
 800254c:	b580      	push	{r7, lr}
 800254e:	af00      	add	r7, sp, #0
	Display_status=1;
 8002550:	4b06      	ldr	r3, [pc, #24]	; (800256c <Poweron_LCD+0x20>)
 8002552:	2201      	movs	r2, #1
 8002554:	701a      	strb	r2, [r3, #0]

	send_command(0x0E); // Display on
 8002556:	200e      	movs	r0, #14
 8002558:	f7ff ff68 	bl	800242c <send_command>
	send_command(0x1F); // Internal DCDC on
 800255c:	201f      	movs	r0, #31
 800255e:	f7ff ff65 	bl	800242c <send_command>
	send_command(0x01); // очистили от мусора ОЗУ (т.с. что clear())
 8002562:	2001      	movs	r0, #1
 8002564:	f7ff ff62 	bl	800242c <send_command>
}
 8002568:	bf00      	nop
 800256a:	bd80      	pop	{r7, pc}
 800256c:	20000786 	.word	0x20000786

08002570 <init_LCD>:


void init_LCD() //инициализация ЖК
{
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	Display_status=1;
 8002574:	4b2f      	ldr	r3, [pc, #188]	; (8002634 <init_LCD+0xc4>)
 8002576:	2201      	movs	r2, #1
 8002578:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(Display_Power_GPIO_Port, Display_Power_Pin, GPIO_PIN_RESET); // подаем питание на дисплей
 800257a:	2200      	movs	r2, #0
 800257c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002580:	482d      	ldr	r0, [pc, #180]	; (8002638 <init_LCD+0xc8>)
 8002582:	f003 fb4b 	bl	8005c1c <HAL_GPIO_WritePin>
	//Выводы в 0
	HAL_GPIO_WritePin(Display_RS_GPIO_Port, Display_RS_Pin, GPIO_PIN_SET);//  PIN_OFF(PIN_RS); !!!
 8002586:	2201      	movs	r2, #1
 8002588:	2101      	movs	r1, #1
 800258a:	482b      	ldr	r0, [pc, #172]	; (8002638 <init_LCD+0xc8>)
 800258c:	f003 fb46 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_EN_GPIO_Port, Display_EN_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_E);
 8002590:	2200      	movs	r2, #0
 8002592:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002596:	4828      	ldr	r0, [pc, #160]	; (8002638 <init_LCD+0xc8>)
 8002598:	f003 fb40 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB4_GPIO_Port, Display_DB4_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB4);
 800259c:	2200      	movs	r2, #0
 800259e:	2104      	movs	r1, #4
 80025a0:	4825      	ldr	r0, [pc, #148]	; (8002638 <init_LCD+0xc8>)
 80025a2:	f003 fb3b 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB5_GPIO_Port, Display_DB5_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB5);
 80025a6:	2200      	movs	r2, #0
 80025a8:	2108      	movs	r1, #8
 80025aa:	4823      	ldr	r0, [pc, #140]	; (8002638 <init_LCD+0xc8>)
 80025ac:	f003 fb36 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB6_GPIO_Port, Display_DB6_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB6);
 80025b0:	2200      	movs	r2, #0
 80025b2:	2110      	movs	r1, #16
 80025b4:	4820      	ldr	r0, [pc, #128]	; (8002638 <init_LCD+0xc8>)
 80025b6:	f003 fb31 	bl	8005c1c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(Display_DB7_GPIO_Port, Display_DB7_Pin, GPIO_PIN_RESET);//  PIN_OFF(PIN_DB7);
 80025ba:	2200      	movs	r2, #0
 80025bc:	2120      	movs	r1, #32
 80025be:	481e      	ldr	r0, [pc, #120]	; (8002638 <init_LCD+0xc8>)
 80025c0:	f003 fb2c 	bl	8005c1c <HAL_GPIO_WritePin>

	//Ждем включения ЖКИ
	HAL_Delay(500);
 80025c4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80025c8:	f002 ffd8 	bl	800557c <HAL_Delay>
	lcd44780_RS_0;
 80025cc:	2201      	movs	r2, #1
 80025ce:	2101      	movs	r1, #1
 80025d0:	4819      	ldr	r0, [pc, #100]	; (8002638 <init_LCD+0xc8>)
 80025d2:	f003 fb23 	bl	8005c1c <HAL_GPIO_WritePin>
	lcd44780_RW_0;
 80025d6:	2200      	movs	r2, #0
 80025d8:	2102      	movs	r1, #2
 80025da:	4817      	ldr	r0, [pc, #92]	; (8002638 <init_LCD+0xc8>)
 80025dc:	f003 fb1e 	bl	8005c1c <HAL_GPIO_WritePin>
	send_nibble(0x02);
 80025e0:	2002      	movs	r0, #2
 80025e2:	f7ff febf 	bl	8002364 <send_nibble>
	send_nibble(0x02);
 80025e6:	2002      	movs	r0, #2
 80025e8:	f7ff febc 	bl	8002364 <send_nibble>
	send_nibble(0x08);// N=1 F=0
 80025ec:	2008      	movs	r0, #8
 80025ee:	f7ff feb9 	bl	8002364 <send_nibble>

	while(check_busy_flag());
 80025f2:	bf00      	nop
 80025f4:	f7ff ff44 	bl	8002480 <check_busy_flag>
 80025f8:	4603      	mov	r3, r0
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d1fa      	bne.n	80025f4 <init_LCD+0x84>

	send_command(0x0E);// D=1 C=1 B=0
 80025fe:	200e      	movs	r0, #14
 8002600:	f7ff ff14 	bl	800242c <send_command>
	send_command(0x01);
 8002604:	2001      	movs	r0, #1
 8002606:	f7ff ff11 	bl	800242c <send_command>
	send_command(0x06); // I/D=1  S/H=0
 800260a:	2006      	movs	r0, #6
 800260c:	f7ff ff0e 	bl	800242c <send_command>
	send_command(0x2A);// DL=0 N=1 F=0 FT1=1 FT0=0
 8002610:	202a      	movs	r0, #42	; 0x2a
 8002612:	f7ff ff0b 	bl	800242c <send_command>
	send_command(0x1F); //переключение в графику
 8002616:	201f      	movs	r0, #31
 8002618:	f7ff ff08 	bl	800242c <send_command>
	send_command(0x01); //очистили от мусора ОЗУ (т.с. что clear())
 800261c:	2001      	movs	r0, #1
 800261e:	f7ff ff05 	bl	800242c <send_command>

	lcd44780_RS_1;
 8002622:	2200      	movs	r2, #0
 8002624:	2101      	movs	r1, #1
 8002626:	4804      	ldr	r0, [pc, #16]	; (8002638 <init_LCD+0xc8>)
 8002628:	f003 faf8 	bl	8005c1c <HAL_GPIO_WritePin>

	LcdClear_massive();
 800262c:	f7ff fdae 	bl	800218c <LcdClear_massive>

}
 8002630:	bf00      	nop
 8002632:	bd80      	pop	{r7, pc}
 8002634:	20000786 	.word	0x20000786
 8002638:	40020400 	.word	0x40020400

0800263c <LcdBarLine>:
	while(check_busy_flag());

}

void LcdBarLine(uint32_t fill)    // рисуем прогресс-бар в второй строке
{
 800263c:	b5b0      	push	{r4, r5, r7, lr}
 800263e:	b086      	sub	sp, #24
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
	uint16_t i, full_fill_position;
	float y;

	if(fill>0xFFFFF)return;
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800264a:	f080 808f 	bcs.w	800276c <LcdBarLine+0x130>

	// поиск свободного места в массиве кеша дисплея
	//	for (i = LCD_CACHSIZE-1; i > LCD_X_RES; i--) // поиск свободного места в массиве кеша дисплея, в указанной строке
	//		if(LcdCache[i]==0x00)
	//			found_free_position=i;
	y=LCD_X_RES;
 800264e:	4b49      	ldr	r3, [pc, #292]	; (8002774 <LcdBarLine+0x138>)
 8002650:	613b      	str	r3, [r7, #16]
	y*=8; //сколько всего диступно места
 8002652:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002656:	6938      	ldr	r0, [r7, #16]
 8002658:	f7fe fbb6 	bl	8000dc8 <__aeabi_fmul>
 800265c:	4603      	mov	r3, r0
 800265e:	613b      	str	r3, [r7, #16]
	y/=(float)0xFFFFF;
 8002660:	4945      	ldr	r1, [pc, #276]	; (8002778 <LcdBarLine+0x13c>)
 8002662:	6938      	ldr	r0, [r7, #16]
 8002664:	f7fe fc64 	bl	8000f30 <__aeabi_fdiv>
 8002668:	4603      	mov	r3, r0
 800266a:	613b      	str	r3, [r7, #16]
	y*=(float)fill;// получаем коэфицент заполнения прогрессбара
 800266c:	6878      	ldr	r0, [r7, #4]
 800266e:	f7fe fb53 	bl	8000d18 <__aeabi_ui2f>
 8002672:	4603      	mov	r3, r0
 8002674:	4619      	mov	r1, r3
 8002676:	6938      	ldr	r0, [r7, #16]
 8002678:	f7fe fba6 	bl	8000dc8 <__aeabi_fmul>
 800267c:	4603      	mov	r3, r0
 800267e:	613b      	str	r3, [r7, #16]
	full_fill_position=floor(y/8);
 8002680:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8002684:	6938      	ldr	r0, [r7, #16]
 8002686:	f7fe fc53 	bl	8000f30 <__aeabi_fdiv>
 800268a:	4603      	mov	r3, r0
 800268c:	4618      	mov	r0, r3
 800268e:	f7fd feed 	bl	800046c <__aeabi_f2d>
 8002692:	4602      	mov	r2, r0
 8002694:	460b      	mov	r3, r1
 8002696:	4610      	mov	r0, r2
 8002698:	4619      	mov	r1, r3
 800269a:	f008 f92d 	bl	800a8f8 <floor>
 800269e:	4602      	mov	r2, r0
 80026a0:	460b      	mov	r3, r1
 80026a2:	4610      	mov	r0, r2
 80026a4:	4619      	mov	r1, r3
 80026a6:	f7fe fa11 	bl	8000acc <__aeabi_d2uiz>
 80026aa:	4603      	mov	r3, r0
 80026ac:	81fb      	strh	r3, [r7, #14]
	//need_to_be_filled=(LCD_CACHSIZE-1-found_free_position)*8 - ;
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 80026ae:	2364      	movs	r3, #100	; 0x64
 80026b0:	82fb      	strh	r3, [r7, #22]
 80026b2:	e057      	b.n	8002764 <LcdBarLine+0x128>
		if(y!=0)
 80026b4:	f04f 0100 	mov.w	r1, #0
 80026b8:	6938      	ldr	r0, [r7, #16]
 80026ba:	f7fe fd19 	bl	80010f0 <__aeabi_fcmpeq>
 80026be:	4603      	mov	r3, r0
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d14c      	bne.n	800275e <LcdBarLine+0x122>
		{
			if(full_fill_position>(i-LCD_X_RES))
 80026c4:	8afb      	ldrh	r3, [r7, #22]
 80026c6:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80026ca:	89fb      	ldrh	r3, [r7, #14]
 80026cc:	429a      	cmp	r2, r3
 80026ce:	dc08      	bgt.n	80026e2 <LcdBarLine+0xa6>
			{
				LcdCache[i]=LcdCache[i]^0xFF;
 80026d0:	8afb      	ldrh	r3, [r7, #22]
 80026d2:	4a2a      	ldr	r2, [pc, #168]	; (800277c <LcdBarLine+0x140>)
 80026d4:	5cd2      	ldrb	r2, [r2, r3]
 80026d6:	8afb      	ldrh	r3, [r7, #22]
 80026d8:	43d2      	mvns	r2, r2
 80026da:	b2d1      	uxtb	r1, r2
 80026dc:	4a27      	ldr	r2, [pc, #156]	; (800277c <LcdBarLine+0x140>)
 80026de:	54d1      	strb	r1, [r2, r3]
 80026e0:	e03d      	b.n	800275e <LcdBarLine+0x122>
			} else
			{
				y-=floor(y/8)*8;
 80026e2:	6938      	ldr	r0, [r7, #16]
 80026e4:	f7fd fec2 	bl	800046c <__aeabi_f2d>
 80026e8:	4604      	mov	r4, r0
 80026ea:	460d      	mov	r5, r1
 80026ec:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 80026f0:	6938      	ldr	r0, [r7, #16]
 80026f2:	f7fe fc1d 	bl	8000f30 <__aeabi_fdiv>
 80026f6:	4603      	mov	r3, r0
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7fd feb7 	bl	800046c <__aeabi_f2d>
 80026fe:	4602      	mov	r2, r0
 8002700:	460b      	mov	r3, r1
 8002702:	4610      	mov	r0, r2
 8002704:	4619      	mov	r1, r3
 8002706:	f008 f8f7 	bl	800a8f8 <floor>
 800270a:	f04f 0200 	mov.w	r2, #0
 800270e:	4b1c      	ldr	r3, [pc, #112]	; (8002780 <LcdBarLine+0x144>)
 8002710:	f7fd ff04 	bl	800051c <__aeabi_dmul>
 8002714:	4602      	mov	r2, r0
 8002716:	460b      	mov	r3, r1
 8002718:	4620      	mov	r0, r4
 800271a:	4629      	mov	r1, r5
 800271c:	f7fd fd46 	bl	80001ac <__aeabi_dsub>
 8002720:	4602      	mov	r2, r0
 8002722:	460b      	mov	r3, r1
 8002724:	4610      	mov	r0, r2
 8002726:	4619      	mov	r1, r3
 8002728:	f7fe f9f0 	bl	8000b0c <__aeabi_d2f>
 800272c:	4603      	mov	r3, r0
 800272e:	613b      	str	r3, [r7, #16]
				LcdCache[i]=LcdCache[i]^((1<<(uint16_t)y)-1);
 8002730:	8afb      	ldrh	r3, [r7, #22]
 8002732:	4a12      	ldr	r2, [pc, #72]	; (800277c <LcdBarLine+0x140>)
 8002734:	5cd3      	ldrb	r3, [r2, r3]
 8002736:	b25c      	sxtb	r4, r3
 8002738:	6938      	ldr	r0, [r7, #16]
 800273a:	f7fe fd0b 	bl	8001154 <__aeabi_f2uiz>
 800273e:	4603      	mov	r3, r0
 8002740:	b29b      	uxth	r3, r3
 8002742:	461a      	mov	r2, r3
 8002744:	2301      	movs	r3, #1
 8002746:	4093      	lsls	r3, r2
 8002748:	b2db      	uxtb	r3, r3
 800274a:	3b01      	subs	r3, #1
 800274c:	b2db      	uxtb	r3, r3
 800274e:	b25b      	sxtb	r3, r3
 8002750:	4063      	eors	r3, r4
 8002752:	b25a      	sxtb	r2, r3
 8002754:	8afb      	ldrh	r3, [r7, #22]
 8002756:	b2d1      	uxtb	r1, r2
 8002758:	4a08      	ldr	r2, [pc, #32]	; (800277c <LcdBarLine+0x140>)
 800275a:	54d1      	strb	r1, [r2, r3]
				break;
 800275c:	e007      	b.n	800276e <LcdBarLine+0x132>
	for (i = LCD_X_RES; i < LCD_CACHSIZE; i++){ // заполнение прогрессбара
 800275e:	8afb      	ldrh	r3, [r7, #22]
 8002760:	3301      	adds	r3, #1
 8002762:	82fb      	strh	r3, [r7, #22]
 8002764:	8afb      	ldrh	r3, [r7, #22]
 8002766:	2bc7      	cmp	r3, #199	; 0xc7
 8002768:	d9a4      	bls.n	80026b4 <LcdBarLine+0x78>
 800276a:	e000      	b.n	800276e <LcdBarLine+0x132>
	if(fill>0xFFFFF)return;
 800276c:	bf00      	nop
			}
		}
	}

}
 800276e:	3718      	adds	r7, #24
 8002770:	46bd      	mov	sp, r7
 8002772:	bdb0      	pop	{r4, r5, r7, pc}
 8002774:	42c80000 	.word	0x42c80000
 8002778:	497ffff0 	.word	0x497ffff0
 800277c:	20000554 	.word	0x20000554
 8002780:	40200000 	.word	0x40200000

08002784 <output_state>:
//==============================================================================================


//==============================================================================================
void output_state(uint8_t type)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	b084      	sub	sp, #16
 8002788:	af00      	add	r7, sp, #0
 800278a:	4603      	mov	r3, r0
 800278c:	71fb      	strb	r3, [r7, #7]
	int relay_settling_time_ms=50;
 800278e:	2332      	movs	r3, #50	; 0x32
 8002790:	60fb      	str	r3, [r7, #12]
	switch(type)
 8002792:	79fb      	ldrb	r3, [r7, #7]
 8002794:	2b04      	cmp	r3, #4
 8002796:	f200 80f2 	bhi.w	800297e <output_state+0x1fa>
 800279a:	a201      	add	r2, pc, #4	; (adr r2, 80027a0 <output_state+0x1c>)
 800279c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027a0:	080027b5 	.word	0x080027b5
 80027a4:	080027ed 	.word	0x080027ed
 80027a8:	0800283d 	.word	0x0800283d
 80027ac:	0800289d 	.word	0x0800289d
 80027b0:	080028fd 	.word	0x080028fd
	{
	//----------------------------------------------------------//
	case Output_off_STATE:
		Relay_control(0,0); // set all coils off
 80027b4:	2100      	movs	r1, #0
 80027b6:	2000      	movs	r0, #0
 80027b8:	f7fe ff48 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027bc:	2100      	movs	r1, #0
 80027be:	2001      	movs	r0, #1
 80027c0:	f7fe ff44 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027c4:	2100      	movs	r1, #0
 80027c6:	2002      	movs	r0, #2
 80027c8:	f7fe ff40 	bl	800164c <Relay_control>
		Relay_control(3,0); // Output Enable
 80027cc:	2100      	movs	r1, #0
 80027ce:	2003      	movs	r0, #3
 80027d0:	f7fe ff3c 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	4618      	mov	r0, r3
 80027d8:	f002 fed0 	bl	800557c <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80027dc:	2100      	movs	r1, #0
 80027de:	2000      	movs	r0, #0
 80027e0:	f7fe ff34 	bl	800164c <Relay_control>
		Current_output_status=Output_off_STATE;
 80027e4:	4b68      	ldr	r3, [pc, #416]	; (8002988 <output_state+0x204>)
 80027e6:	2200      	movs	r2, #0
 80027e8:	701a      	strb	r2, [r3, #0]
		break;
 80027ea:	e0c8      	b.n	800297e <output_state+0x1fa>

	case Output_x1_STATE:
		Relay_control(0,0); // set all coils off
 80027ec:	2100      	movs	r1, #0
 80027ee:	2000      	movs	r0, #0
 80027f0:	f7fe ff2c 	bl	800164c <Relay_control>
		Relay_control(1,0); // x1 mode
 80027f4:	2100      	movs	r1, #0
 80027f6:	2001      	movs	r0, #1
 80027f8:	f7fe ff28 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80027fc:	2100      	movs	r1, #0
 80027fe:	2002      	movs	r0, #2
 8002800:	f7fe ff24 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002804:	2101      	movs	r1, #1
 8002806:	2003      	movs	r0, #3
 8002808:	f7fe ff20 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4618      	mov	r0, r3
 8002810:	f002 feb4 	bl	800557c <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002814:	2100      	movs	r1, #0
 8002816:	2000      	movs	r0, #0
 8002818:	f7fe ff18 	bl	800164c <Relay_control>
		Current_output_status=Output_x1_STATE;
 800281c:	4b5a      	ldr	r3, [pc, #360]	; (8002988 <output_state+0x204>)
 800281e:	2201      	movs	r2, #1
 8002820:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8002822:	4b5a      	ldr	r3, [pc, #360]	; (800298c <output_state+0x208>)
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	4a5a      	ldr	r2, [pc, #360]	; (8002990 <output_state+0x20c>)
 8002828:	6812      	ldr	r2, [r2, #0]
 800282a:	4611      	mov	r1, r2
 800282c:	4618      	mov	r0, r3
 800282e:	f7fe f9c1 	bl	8000bb4 <__aeabi_fsub>
 8002832:	4603      	mov	r3, r0
 8002834:	461a      	mov	r2, r3
 8002836:	4b57      	ldr	r3, [pc, #348]	; (8002994 <output_state+0x210>)
 8002838:	601a      	str	r2, [r3, #0]
		break;
 800283a:	e0a0      	b.n	800297e <output_state+0x1fa>

	case Output_x2_STATE:
		Relay_control(0,0); // set all coils off
 800283c:	2100      	movs	r1, #0
 800283e:	2000      	movs	r0, #0
 8002840:	f7fe ff04 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 8002844:	2101      	movs	r1, #1
 8002846:	2001      	movs	r0, #1
 8002848:	f7fe ff00 	bl	800164c <Relay_control>
		Relay_control(2,1); // x2/x4 mode
 800284c:	2101      	movs	r1, #1
 800284e:	2002      	movs	r0, #2
 8002850:	f7fe fefc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 8002854:	2101      	movs	r1, #1
 8002856:	2003      	movs	r0, #3
 8002858:	f7fe fef8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	4618      	mov	r0, r3
 8002860:	f002 fe8c 	bl	800557c <HAL_Delay>
		Relay_control(0,0); // set all coils off
 8002864:	2100      	movs	r1, #0
 8002866:	2000      	movs	r0, #0
 8002868:	f7fe fef0 	bl	800164c <Relay_control>
		Current_output_status=Output_x2_STATE;
 800286c:	4b46      	ldr	r3, [pc, #280]	; (8002988 <output_state+0x204>)
 800286e:	2202      	movs	r2, #2
 8002870:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x2_coeff;
 8002872:	4b46      	ldr	r3, [pc, #280]	; (800298c <output_state+0x208>)
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4a46      	ldr	r2, [pc, #280]	; (8002990 <output_state+0x20c>)
 8002878:	6812      	ldr	r2, [r2, #0]
 800287a:	4611      	mov	r1, r2
 800287c:	4618      	mov	r0, r3
 800287e:	f7fe f999 	bl	8000bb4 <__aeabi_fsub>
 8002882:	4603      	mov	r3, r0
 8002884:	461a      	mov	r2, r3
 8002886:	4b44      	ldr	r3, [pc, #272]	; (8002998 <output_state+0x214>)
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	4619      	mov	r1, r3
 800288c:	4610      	mov	r0, r2
 800288e:	f7fe fa9b 	bl	8000dc8 <__aeabi_fmul>
 8002892:	4603      	mov	r3, r0
 8002894:	461a      	mov	r2, r3
 8002896:	4b3f      	ldr	r3, [pc, #252]	; (8002994 <output_state+0x210>)
 8002898:	601a      	str	r2, [r3, #0]
		break;
 800289a:	e070      	b.n	800297e <output_state+0x1fa>

	case Output_x4_STATE:
		Relay_control(0,0); // set all coils off
 800289c:	2100      	movs	r1, #0
 800289e:	2000      	movs	r0, #0
 80028a0:	f7fe fed4 	bl	800164c <Relay_control>
		Relay_control(1,1); // x1 mode
 80028a4:	2101      	movs	r1, #1
 80028a6:	2001      	movs	r0, #1
 80028a8:	f7fe fed0 	bl	800164c <Relay_control>
		Relay_control(2,0); // x2/x4 mode
 80028ac:	2100      	movs	r1, #0
 80028ae:	2002      	movs	r0, #2
 80028b0:	f7fe fecc 	bl	800164c <Relay_control>
		Relay_control(3,1); // Output Enable
 80028b4:	2101      	movs	r1, #1
 80028b6:	2003      	movs	r0, #3
 80028b8:	f7fe fec8 	bl	800164c <Relay_control>
		HAL_Delay(relay_settling_time_ms); // wait
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	4618      	mov	r0, r3
 80028c0:	f002 fe5c 	bl	800557c <HAL_Delay>
		Relay_control(0,0); // set all coils off
 80028c4:	2100      	movs	r1, #0
 80028c6:	2000      	movs	r0, #0
 80028c8:	f7fe fec0 	bl	800164c <Relay_control>
		Current_output_status=Output_x4_STATE;
 80028cc:	4b2e      	ldr	r3, [pc, #184]	; (8002988 <output_state+0x204>)
 80028ce:	2203      	movs	r2, #3
 80028d0:	701a      	strb	r2, [r3, #0]
		DAC_fullrange_voltage=(cal_DAC_up_voltage-cal_DAC_down_voltage)*gain_x4_coeff;
 80028d2:	4b2e      	ldr	r3, [pc, #184]	; (800298c <output_state+0x208>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a2e      	ldr	r2, [pc, #184]	; (8002990 <output_state+0x20c>)
 80028d8:	6812      	ldr	r2, [r2, #0]
 80028da:	4611      	mov	r1, r2
 80028dc:	4618      	mov	r0, r3
 80028de:	f7fe f969 	bl	8000bb4 <__aeabi_fsub>
 80028e2:	4603      	mov	r3, r0
 80028e4:	461a      	mov	r2, r3
 80028e6:	4b2d      	ldr	r3, [pc, #180]	; (800299c <output_state+0x218>)
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	4619      	mov	r1, r3
 80028ec:	4610      	mov	r0, r2
 80028ee:	f7fe fa6b 	bl	8000dc8 <__aeabi_fmul>
 80028f2:	4603      	mov	r3, r0
 80028f4:	461a      	mov	r2, r3
 80028f6:	4b27      	ldr	r3, [pc, #156]	; (8002994 <output_state+0x210>)
 80028f8:	601a      	str	r2, [r3, #0]
		break;
 80028fa:	e040      	b.n	800297e <output_state+0x1fa>

	case Output_auto_STATE:
		if((cal_DAC_up_voltage-cal_DAC_down_voltage)/DAC_target_speed > 600)
 80028fc:	4b23      	ldr	r3, [pc, #140]	; (800298c <output_state+0x208>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	4a23      	ldr	r2, [pc, #140]	; (8002990 <output_state+0x20c>)
 8002902:	6812      	ldr	r2, [r2, #0]
 8002904:	4611      	mov	r1, r2
 8002906:	4618      	mov	r0, r3
 8002908:	f7fe f954 	bl	8000bb4 <__aeabi_fsub>
 800290c:	4603      	mov	r3, r0
 800290e:	461a      	mov	r2, r3
 8002910:	4b23      	ldr	r3, [pc, #140]	; (80029a0 <output_state+0x21c>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	4619      	mov	r1, r3
 8002916:	4610      	mov	r0, r2
 8002918:	f7fe fb0a 	bl	8000f30 <__aeabi_fdiv>
 800291c:	4603      	mov	r3, r0
 800291e:	4921      	ldr	r1, [pc, #132]	; (80029a4 <output_state+0x220>)
 8002920:	4618      	mov	r0, r3
 8002922:	f7fe fc0d 	bl	8001140 <__aeabi_fcmpgt>
 8002926:	4603      	mov	r3, r0
 8002928:	2b00      	cmp	r3, #0
 800292a:	d003      	beq.n	8002934 <output_state+0x1b0>
		{
			output_state(Output_x1_STATE);
 800292c:	2001      	movs	r0, #1
 800292e:	f7ff ff29 	bl	8002784 <output_state>
				output_state(Output_x2_STATE);
			}
			else
				output_state(Output_x4_STATE);

		break;
 8002932:	e023      	b.n	800297c <output_state+0x1f8>
			if (((cal_DAC_up_voltage-cal_DAC_down_voltage)*2)/DAC_target_speed > 600)
 8002934:	4b15      	ldr	r3, [pc, #84]	; (800298c <output_state+0x208>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4a15      	ldr	r2, [pc, #84]	; (8002990 <output_state+0x20c>)
 800293a:	6812      	ldr	r2, [r2, #0]
 800293c:	4611      	mov	r1, r2
 800293e:	4618      	mov	r0, r3
 8002940:	f7fe f938 	bl	8000bb4 <__aeabi_fsub>
 8002944:	4603      	mov	r3, r0
 8002946:	4619      	mov	r1, r3
 8002948:	4618      	mov	r0, r3
 800294a:	f7fe f935 	bl	8000bb8 <__addsf3>
 800294e:	4603      	mov	r3, r0
 8002950:	461a      	mov	r2, r3
 8002952:	4b13      	ldr	r3, [pc, #76]	; (80029a0 <output_state+0x21c>)
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	4619      	mov	r1, r3
 8002958:	4610      	mov	r0, r2
 800295a:	f7fe fae9 	bl	8000f30 <__aeabi_fdiv>
 800295e:	4603      	mov	r3, r0
 8002960:	4910      	ldr	r1, [pc, #64]	; (80029a4 <output_state+0x220>)
 8002962:	4618      	mov	r0, r3
 8002964:	f7fe fbec 	bl	8001140 <__aeabi_fcmpgt>
 8002968:	4603      	mov	r3, r0
 800296a:	2b00      	cmp	r3, #0
 800296c:	d003      	beq.n	8002976 <output_state+0x1f2>
				output_state(Output_x2_STATE);
 800296e:	2002      	movs	r0, #2
 8002970:	f7ff ff08 	bl	8002784 <output_state>
		break;
 8002974:	e002      	b.n	800297c <output_state+0x1f8>
				output_state(Output_x4_STATE);
 8002976:	2003      	movs	r0, #3
 8002978:	f7ff ff04 	bl	8002784 <output_state>
		break;
 800297c:	bf00      	nop
	}
}
 800297e:	bf00      	nop
 8002980:	3710      	adds	r7, #16
 8002982:	46bd      	mov	sp, r7
 8002984:	bd80      	pop	{r7, pc}
 8002986:	bf00      	nop
 8002988:	2000077c 	.word	0x2000077c
 800298c:	20000774 	.word	0x20000774
 8002990:	20000778 	.word	0x20000778
 8002994:	20000770 	.word	0x20000770
 8002998:	20000538 	.word	0x20000538
 800299c:	2000053c 	.word	0x2000053c
 80029a0:	20000764 	.word	0x20000764
 80029a4:	44160000 	.word	0x44160000

080029a8 <display_screen>:
//==============================================================================================


//==============================================================================================
void display_screen(uint8_t type)
{
 80029a8:	b590      	push	{r4, r7, lr}
 80029aa:	b087      	sub	sp, #28
 80029ac:	af02      	add	r7, sp, #8
 80029ae:	4603      	mov	r3, r0
 80029b0:	71fb      	strb	r3, [r7, #7]
	char sign;
	switch(type)
 80029b2:	79fb      	ldrb	r3, [r7, #7]
 80029b4:	2b05      	cmp	r3, #5
 80029b6:	f200 81d4 	bhi.w	8002d62 <display_screen+0x3ba>
 80029ba:	a201      	add	r2, pc, #4	; (adr r2, 80029c0 <display_screen+0x18>)
 80029bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80029c0:	08002bf9 	.word	0x08002bf9
 80029c4:	08002cfb 	.word	0x08002cfb
 80029c8:	08002d1d 	.word	0x08002d1d
 80029cc:	08002d3f 	.word	0x08002d3f
 80029d0:	080029d9 	.word	0x080029d9
 80029d4:	08002a83 	.word	0x08002a83
	{
	//----------------------------------------------------------//
	case AMP_SCREEN:
		if(DAC_code_direction==DIRECTION_UP_STATE)
 80029d8:	4b8e      	ldr	r3, [pc, #568]	; (8002c14 <display_screen+0x26c>)
 80029da:	781b      	ldrb	r3, [r3, #0]
 80029dc:	2b01      	cmp	r3, #1
 80029de:	d102      	bne.n	80029e6 <display_screen+0x3e>
		{
			sign='+';
 80029e0:	232b      	movs	r3, #43	; 0x2b
 80029e2:	73fb      	strb	r3, [r7, #15]
 80029e4:	e008      	b.n	80029f8 <display_screen+0x50>
		}
		else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 80029e6:	4b8b      	ldr	r3, [pc, #556]	; (8002c14 <display_screen+0x26c>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d102      	bne.n	80029f4 <display_screen+0x4c>
		{
			sign='-';
 80029ee:	232d      	movs	r3, #45	; 0x2d
 80029f0:	73fb      	strb	r3, [r7, #15]
 80029f2:	e001      	b.n	80029f8 <display_screen+0x50>
		} else
		{
			sign='*';
 80029f4:	232a      	movs	r3, #42	; 0x2a
 80029f6:	73fb      	strb	r3, [r7, #15]
		}

		sprintf(lcd_buf,"I %c%1.4EA",sign, amp_target_speed);
 80029f8:	7bfc      	ldrb	r4, [r7, #15]
 80029fa:	4b87      	ldr	r3, [pc, #540]	; (8002c18 <display_screen+0x270>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	4618      	mov	r0, r3
 8002a00:	f7fd fd34 	bl	800046c <__aeabi_f2d>
 8002a04:	4602      	mov	r2, r0
 8002a06:	460b      	mov	r3, r1
 8002a08:	e9cd 2300 	strd	r2, r3, [sp]
 8002a0c:	4622      	mov	r2, r4
 8002a0e:	4983      	ldr	r1, [pc, #524]	; (8002c1c <display_screen+0x274>)
 8002a10:	4883      	ldr	r0, [pc, #524]	; (8002c20 <display_screen+0x278>)
 8002a12:	f008 fea3 	bl	800b75c <siprintf>
		LcdString(1, 1);
 8002a16:	2101      	movs	r1, #1
 8002a18:	2001      	movs	r0, #1
 8002a1a:	f7ff fc5d 	bl	80022d8 <LcdString>

		if(cfg.LDACMODE==1){
 8002a1e:	4b81      	ldr	r3, [pc, #516]	; (8002c24 <display_screen+0x27c>)
 8002a20:	789b      	ldrb	r3, [r3, #2]
 8002a22:	2b01      	cmp	r3, #1
 8002a24:	d117      	bne.n	8002a56 <display_screen+0xae>
			sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002a26:	4b80      	ldr	r3, [pc, #512]	; (8002c28 <display_screen+0x280>)
 8002a28:	781b      	ldrb	r3, [r3, #0]
 8002a2a:	461a      	mov	r2, r3
 8002a2c:	4b7f      	ldr	r3, [pc, #508]	; (8002c2c <display_screen+0x284>)
 8002a2e:	781b      	ldrb	r3, [r3, #0]
 8002a30:	4619      	mov	r1, r3
 8002a32:	4b7f      	ldr	r3, [pc, #508]	; (8002c30 <display_screen+0x288>)
 8002a34:	781b      	ldrb	r3, [r3, #0]
 8002a36:	9300      	str	r3, [sp, #0]
 8002a38:	460b      	mov	r3, r1
 8002a3a:	497e      	ldr	r1, [pc, #504]	; (8002c34 <display_screen+0x28c>)
 8002a3c:	4878      	ldr	r0, [pc, #480]	; (8002c20 <display_screen+0x278>)
 8002a3e:	f008 fe8d 	bl	800b75c <siprintf>
			LcdString(1, 2);
 8002a42:	2102      	movs	r1, #2
 8002a44:	2001      	movs	r0, #1
 8002a46:	f7ff fc47 	bl	80022d8 <LcdString>
			LcdBarLine(DAC_code);
 8002a4a:	4b7b      	ldr	r3, [pc, #492]	; (8002c38 <display_screen+0x290>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	4618      	mov	r0, r3
 8002a50:	f7ff fdf4 	bl	800263c <LcdBarLine>
			{
				sprintf(lcd_buf,"READY TO GO");
				LcdString(1, 2);
			}
		}
		break;
 8002a54:	e185      	b.n	8002d62 <display_screen+0x3ba>
			if(Current_output_status==Output_off_STATE)
 8002a56:	4b79      	ldr	r3, [pc, #484]	; (8002c3c <display_screen+0x294>)
 8002a58:	781b      	ldrb	r3, [r3, #0]
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d108      	bne.n	8002a70 <display_screen+0xc8>
				sprintf(lcd_buf,"OUTPUT DISABLED");
 8002a5e:	4978      	ldr	r1, [pc, #480]	; (8002c40 <display_screen+0x298>)
 8002a60:	486f      	ldr	r0, [pc, #444]	; (8002c20 <display_screen+0x278>)
 8002a62:	f008 fe7b 	bl	800b75c <siprintf>
				LcdString(1, 2);
 8002a66:	2102      	movs	r1, #2
 8002a68:	2001      	movs	r0, #1
 8002a6a:	f7ff fc35 	bl	80022d8 <LcdString>
		break;
 8002a6e:	e178      	b.n	8002d62 <display_screen+0x3ba>
				sprintf(lcd_buf,"READY TO GO");
 8002a70:	4974      	ldr	r1, [pc, #464]	; (8002c44 <display_screen+0x29c>)
 8002a72:	486b      	ldr	r0, [pc, #428]	; (8002c20 <display_screen+0x278>)
 8002a74:	f008 fe72 	bl	800b75c <siprintf>
				LcdString(1, 2);
 8002a78:	2102      	movs	r1, #2
 8002a7a:	2001      	movs	r0, #1
 8002a7c:	f7ff fc2c 	bl	80022d8 <LcdString>
		break;
 8002a80:	e16f      	b.n	8002d62 <display_screen+0x3ba>

	//----------------------------------------------------------//
	case VOLT_SCREEN:

		if(Current_output_status==Output_x4_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x4_coeff);
 8002a82:	4b6e      	ldr	r3, [pc, #440]	; (8002c3c <display_screen+0x294>)
 8002a84:	781b      	ldrb	r3, [r3, #0]
 8002a86:	2b03      	cmp	r3, #3
 8002a88:	d125      	bne.n	8002ad6 <display_screen+0x12e>
 8002a8a:	4b6b      	ldr	r3, [pc, #428]	; (8002c38 <display_screen+0x290>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4618      	mov	r0, r3
 8002a90:	f7fe f942 	bl	8000d18 <__aeabi_ui2f>
 8002a94:	4602      	mov	r2, r0
 8002a96:	4b6c      	ldr	r3, [pc, #432]	; (8002c48 <display_screen+0x2a0>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	4619      	mov	r1, r3
 8002a9c:	4610      	mov	r0, r2
 8002a9e:	f7fe f993 	bl	8000dc8 <__aeabi_fmul>
 8002aa2:	4603      	mov	r3, r0
 8002aa4:	461a      	mov	r2, r3
 8002aa6:	4b69      	ldr	r3, [pc, #420]	; (8002c4c <display_screen+0x2a4>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	4619      	mov	r1, r3
 8002aac:	4610      	mov	r0, r2
 8002aae:	f7fe f883 	bl	8000bb8 <__addsf3>
 8002ab2:	4603      	mov	r3, r0
 8002ab4:	461a      	mov	r2, r3
 8002ab6:	4b66      	ldr	r3, [pc, #408]	; (8002c50 <display_screen+0x2a8>)
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	4619      	mov	r1, r3
 8002abc:	4610      	mov	r0, r2
 8002abe:	f7fe f983 	bl	8000dc8 <__aeabi_fmul>
 8002ac2:	4603      	mov	r3, r0
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	f7fd fcd1 	bl	800046c <__aeabi_f2d>
 8002aca:	4602      	mov	r2, r0
 8002acc:	460b      	mov	r3, r1
 8002ace:	4961      	ldr	r1, [pc, #388]	; (8002c54 <display_screen+0x2ac>)
 8002ad0:	4853      	ldr	r0, [pc, #332]	; (8002c20 <display_screen+0x278>)
 8002ad2:	f008 fe43 	bl	800b75c <siprintf>
		if(Current_output_status==Output_x2_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution))*gain_x2_coeff);
 8002ad6:	4b59      	ldr	r3, [pc, #356]	; (8002c3c <display_screen+0x294>)
 8002ad8:	781b      	ldrb	r3, [r3, #0]
 8002ada:	2b02      	cmp	r3, #2
 8002adc:	d125      	bne.n	8002b2a <display_screen+0x182>
 8002ade:	4b56      	ldr	r3, [pc, #344]	; (8002c38 <display_screen+0x290>)
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	f7fe f918 	bl	8000d18 <__aeabi_ui2f>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	4b57      	ldr	r3, [pc, #348]	; (8002c48 <display_screen+0x2a0>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	4619      	mov	r1, r3
 8002af0:	4610      	mov	r0, r2
 8002af2:	f7fe f969 	bl	8000dc8 <__aeabi_fmul>
 8002af6:	4603      	mov	r3, r0
 8002af8:	461a      	mov	r2, r3
 8002afa:	4b54      	ldr	r3, [pc, #336]	; (8002c4c <display_screen+0x2a4>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4619      	mov	r1, r3
 8002b00:	4610      	mov	r0, r2
 8002b02:	f7fe f859 	bl	8000bb8 <__addsf3>
 8002b06:	4603      	mov	r3, r0
 8002b08:	461a      	mov	r2, r3
 8002b0a:	4b53      	ldr	r3, [pc, #332]	; (8002c58 <display_screen+0x2b0>)
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	4619      	mov	r1, r3
 8002b10:	4610      	mov	r0, r2
 8002b12:	f7fe f959 	bl	8000dc8 <__aeabi_fmul>
 8002b16:	4603      	mov	r3, r0
 8002b18:	4618      	mov	r0, r3
 8002b1a:	f7fd fca7 	bl	800046c <__aeabi_f2d>
 8002b1e:	4602      	mov	r2, r0
 8002b20:	460b      	mov	r3, r1
 8002b22:	494c      	ldr	r1, [pc, #304]	; (8002c54 <display_screen+0x2ac>)
 8002b24:	483e      	ldr	r0, [pc, #248]	; (8002c20 <display_screen+0x278>)
 8002b26:	f008 fe19 	bl	800b75c <siprintf>
		if(Current_output_status==Output_x1_STATE)sprintf(lcd_buf,"Vout %2.5fV",(cal_DAC_down_voltage+(DAC_code*dac_resolution)));
 8002b2a:	4b44      	ldr	r3, [pc, #272]	; (8002c3c <display_screen+0x294>)
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	2b01      	cmp	r3, #1
 8002b30:	d11d      	bne.n	8002b6e <display_screen+0x1c6>
 8002b32:	4b41      	ldr	r3, [pc, #260]	; (8002c38 <display_screen+0x290>)
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	4618      	mov	r0, r3
 8002b38:	f7fe f8ee 	bl	8000d18 <__aeabi_ui2f>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	4b42      	ldr	r3, [pc, #264]	; (8002c48 <display_screen+0x2a0>)
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	4619      	mov	r1, r3
 8002b44:	4610      	mov	r0, r2
 8002b46:	f7fe f93f 	bl	8000dc8 <__aeabi_fmul>
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	461a      	mov	r2, r3
 8002b4e:	4b3f      	ldr	r3, [pc, #252]	; (8002c4c <display_screen+0x2a4>)
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	4619      	mov	r1, r3
 8002b54:	4610      	mov	r0, r2
 8002b56:	f7fe f82f 	bl	8000bb8 <__addsf3>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	f7fd fc85 	bl	800046c <__aeabi_f2d>
 8002b62:	4602      	mov	r2, r0
 8002b64:	460b      	mov	r3, r1
 8002b66:	493b      	ldr	r1, [pc, #236]	; (8002c54 <display_screen+0x2ac>)
 8002b68:	482d      	ldr	r0, [pc, #180]	; (8002c20 <display_screen+0x278>)
 8002b6a:	f008 fdf7 	bl	800b75c <siprintf>
		if(Current_output_status==Output_off_STATE)sprintf(lcd_buf,"Vout %2.5fV",Voltage);
 8002b6e:	4b33      	ldr	r3, [pc, #204]	; (8002c3c <display_screen+0x294>)
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d10a      	bne.n	8002b8c <display_screen+0x1e4>
 8002b76:	4b39      	ldr	r3, [pc, #228]	; (8002c5c <display_screen+0x2b4>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	f7fd fc76 	bl	800046c <__aeabi_f2d>
 8002b80:	4602      	mov	r2, r0
 8002b82:	460b      	mov	r3, r1
 8002b84:	4933      	ldr	r1, [pc, #204]	; (8002c54 <display_screen+0x2ac>)
 8002b86:	4826      	ldr	r0, [pc, #152]	; (8002c20 <display_screen+0x278>)
 8002b88:	f008 fde8 	bl	800b75c <siprintf>
		LcdString(1, 1);
 8002b8c:	2101      	movs	r1, #1
 8002b8e:	2001      	movs	r0, #1
 8002b90:	f7ff fba2 	bl	80022d8 <LcdString>
		if(Current_output_status==Output_off_STATE)
 8002b94:	4b29      	ldr	r3, [pc, #164]	; (8002c3c <display_screen+0x294>)
 8002b96:	781b      	ldrb	r3, [r3, #0]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d107      	bne.n	8002bac <display_screen+0x204>
		{
			sprintf(lcd_buf,"OUTPUT DISABLED");
 8002b9c:	4928      	ldr	r1, [pc, #160]	; (8002c40 <display_screen+0x298>)
 8002b9e:	4820      	ldr	r0, [pc, #128]	; (8002c20 <display_screen+0x278>)
 8002ba0:	f008 fddc 	bl	800b75c <siprintf>
			LcdString(1, 2);
 8002ba4:	2102      	movs	r1, #2
 8002ba6:	2001      	movs	r0, #1
 8002ba8:	f7ff fb96 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x1_STATE)
 8002bac:	4b23      	ldr	r3, [pc, #140]	; (8002c3c <display_screen+0x294>)
 8002bae:	781b      	ldrb	r3, [r3, #0]
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d107      	bne.n	8002bc4 <display_screen+0x21c>
		{
			sprintf(lcd_buf,"X1 MODE");
 8002bb4:	492a      	ldr	r1, [pc, #168]	; (8002c60 <display_screen+0x2b8>)
 8002bb6:	481a      	ldr	r0, [pc, #104]	; (8002c20 <display_screen+0x278>)
 8002bb8:	f008 fdd0 	bl	800b75c <siprintf>
			LcdString(1, 2);
 8002bbc:	2102      	movs	r1, #2
 8002bbe:	2001      	movs	r0, #1
 8002bc0:	f7ff fb8a 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x2_STATE)
 8002bc4:	4b1d      	ldr	r3, [pc, #116]	; (8002c3c <display_screen+0x294>)
 8002bc6:	781b      	ldrb	r3, [r3, #0]
 8002bc8:	2b02      	cmp	r3, #2
 8002bca:	d107      	bne.n	8002bdc <display_screen+0x234>
		{
			sprintf(lcd_buf,"X2 MODE");
 8002bcc:	4925      	ldr	r1, [pc, #148]	; (8002c64 <display_screen+0x2bc>)
 8002bce:	4814      	ldr	r0, [pc, #80]	; (8002c20 <display_screen+0x278>)
 8002bd0:	f008 fdc4 	bl	800b75c <siprintf>
			LcdString(1, 2);
 8002bd4:	2102      	movs	r1, #2
 8002bd6:	2001      	movs	r0, #1
 8002bd8:	f7ff fb7e 	bl	80022d8 <LcdString>
		}
		if(Current_output_status==Output_x4_STATE)
 8002bdc:	4b17      	ldr	r3, [pc, #92]	; (8002c3c <display_screen+0x294>)
 8002bde:	781b      	ldrb	r3, [r3, #0]
 8002be0:	2b03      	cmp	r3, #3
 8002be2:	f040 80bd 	bne.w	8002d60 <display_screen+0x3b8>
		{
			sprintf(lcd_buf,"X4 MODE");
 8002be6:	4920      	ldr	r1, [pc, #128]	; (8002c68 <display_screen+0x2c0>)
 8002be8:	480d      	ldr	r0, [pc, #52]	; (8002c20 <display_screen+0x278>)
 8002bea:	f008 fdb7 	bl	800b75c <siprintf>
			LcdString(1, 2);
 8002bee:	2102      	movs	r1, #2
 8002bf0:	2001      	movs	r0, #1
 8002bf2:	f7ff fb71 	bl	80022d8 <LcdString>
		}
		break;
 8002bf6:	e0b3      	b.n	8002d60 <display_screen+0x3b8>
	//----------------------------------------------------------//
		case dU_dt_SCREEN:
			if(DAC_code_direction==DIRECTION_UP_STATE)
 8002bf8:	4b06      	ldr	r3, [pc, #24]	; (8002c14 <display_screen+0x26c>)
 8002bfa:	781b      	ldrb	r3, [r3, #0]
 8002bfc:	2b01      	cmp	r3, #1
 8002bfe:	d102      	bne.n	8002c06 <display_screen+0x25e>
			{
				sign='+';
 8002c00:	232b      	movs	r3, #43	; 0x2b
 8002c02:	73fb      	strb	r3, [r7, #15]
 8002c04:	e034      	b.n	8002c70 <display_screen+0x2c8>
			}
			else if(DAC_code_direction==DIRECTION_DOWN_STATE)
 8002c06:	4b03      	ldr	r3, [pc, #12]	; (8002c14 <display_screen+0x26c>)
 8002c08:	781b      	ldrb	r3, [r3, #0]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d12e      	bne.n	8002c6c <display_screen+0x2c4>
			{
				sign='-';
 8002c0e:	232d      	movs	r3, #45	; 0x2d
 8002c10:	73fb      	strb	r3, [r7, #15]
 8002c12:	e02d      	b.n	8002c70 <display_screen+0x2c8>
 8002c14:	20000784 	.word	0x20000784
 8002c18:	2000000c 	.word	0x2000000c
 8002c1c:	0800fb48 	.word	0x0800fb48
 8002c20:	20000540 	.word	0x20000540
 8002c24:	20000750 	.word	0x20000750
 8002c28:	20000720 	.word	0x20000720
 8002c2c:	20000721 	.word	0x20000721
 8002c30:	20000722 	.word	0x20000722
 8002c34:	0800fb54 	.word	0x0800fb54
 8002c38:	20000780 	.word	0x20000780
 8002c3c:	2000077c 	.word	0x2000077c
 8002c40:	0800fb6c 	.word	0x0800fb6c
 8002c44:	0800fb7c 	.word	0x0800fb7c
 8002c48:	20000648 	.word	0x20000648
 8002c4c:	20000778 	.word	0x20000778
 8002c50:	2000053c 	.word	0x2000053c
 8002c54:	0800fb88 	.word	0x0800fb88
 8002c58:	20000538 	.word	0x20000538
 8002c5c:	2000076c 	.word	0x2000076c
 8002c60:	0800fb94 	.word	0x0800fb94
 8002c64:	0800fb9c 	.word	0x0800fb9c
 8002c68:	0800fba4 	.word	0x0800fba4
			} else
			{
				sign='*';
 8002c6c:	232a      	movs	r3, #42	; 0x2a
 8002c6e:	73fb      	strb	r3, [r7, #15]
			}

			sprintf(lcd_buf,"' %c%1.4EV/s",sign, ramp_target_speed);
 8002c70:	7bfc      	ldrb	r4, [r7, #15]
 8002c72:	4b3e      	ldr	r3, [pc, #248]	; (8002d6c <display_screen+0x3c4>)
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	4618      	mov	r0, r3
 8002c78:	f7fd fbf8 	bl	800046c <__aeabi_f2d>
 8002c7c:	4602      	mov	r2, r0
 8002c7e:	460b      	mov	r3, r1
 8002c80:	e9cd 2300 	strd	r2, r3, [sp]
 8002c84:	4622      	mov	r2, r4
 8002c86:	493a      	ldr	r1, [pc, #232]	; (8002d70 <display_screen+0x3c8>)
 8002c88:	483a      	ldr	r0, [pc, #232]	; (8002d74 <display_screen+0x3cc>)
 8002c8a:	f008 fd67 	bl	800b75c <siprintf>
			LcdString(1, 1);
 8002c8e:	2101      	movs	r1, #1
 8002c90:	2001      	movs	r0, #1
 8002c92:	f7ff fb21 	bl	80022d8 <LcdString>

			if(cfg.LDACMODE==1){
 8002c96:	4b38      	ldr	r3, [pc, #224]	; (8002d78 <display_screen+0x3d0>)
 8002c98:	789b      	ldrb	r3, [r3, #2]
 8002c9a:	2b01      	cmp	r3, #1
 8002c9c:	d117      	bne.n	8002cce <display_screen+0x326>
				sprintf(lcd_buf,"ARM      %01u:%02u:%02u",eta_hours,eta_minute,eta_second);
 8002c9e:	4b37      	ldr	r3, [pc, #220]	; (8002d7c <display_screen+0x3d4>)
 8002ca0:	781b      	ldrb	r3, [r3, #0]
 8002ca2:	461a      	mov	r2, r3
 8002ca4:	4b36      	ldr	r3, [pc, #216]	; (8002d80 <display_screen+0x3d8>)
 8002ca6:	781b      	ldrb	r3, [r3, #0]
 8002ca8:	4619      	mov	r1, r3
 8002caa:	4b36      	ldr	r3, [pc, #216]	; (8002d84 <display_screen+0x3dc>)
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	9300      	str	r3, [sp, #0]
 8002cb0:	460b      	mov	r3, r1
 8002cb2:	4935      	ldr	r1, [pc, #212]	; (8002d88 <display_screen+0x3e0>)
 8002cb4:	482f      	ldr	r0, [pc, #188]	; (8002d74 <display_screen+0x3cc>)
 8002cb6:	f008 fd51 	bl	800b75c <siprintf>
				LcdString(1, 2);
 8002cba:	2102      	movs	r1, #2
 8002cbc:	2001      	movs	r0, #1
 8002cbe:	f7ff fb0b 	bl	80022d8 <LcdString>
				LcdBarLine(DAC_code);
 8002cc2:	4b32      	ldr	r3, [pc, #200]	; (8002d8c <display_screen+0x3e4>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	f7ff fcb8 	bl	800263c <LcdBarLine>
				{
					sprintf(lcd_buf,"READY TO GO");
					LcdString(1, 2);
				}
			}
			break;
 8002ccc:	e049      	b.n	8002d62 <display_screen+0x3ba>
				if(Current_output_status==Output_off_STATE)
 8002cce:	4b30      	ldr	r3, [pc, #192]	; (8002d90 <display_screen+0x3e8>)
 8002cd0:	781b      	ldrb	r3, [r3, #0]
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d108      	bne.n	8002ce8 <display_screen+0x340>
					sprintf(lcd_buf,"OUTPUT DISABLED");
 8002cd6:	492f      	ldr	r1, [pc, #188]	; (8002d94 <display_screen+0x3ec>)
 8002cd8:	4826      	ldr	r0, [pc, #152]	; (8002d74 <display_screen+0x3cc>)
 8002cda:	f008 fd3f 	bl	800b75c <siprintf>
					LcdString(1, 2);
 8002cde:	2102      	movs	r1, #2
 8002ce0:	2001      	movs	r0, #1
 8002ce2:	f7ff faf9 	bl	80022d8 <LcdString>
			break;
 8002ce6:	e03c      	b.n	8002d62 <display_screen+0x3ba>
					sprintf(lcd_buf,"READY TO GO");
 8002ce8:	492b      	ldr	r1, [pc, #172]	; (8002d98 <display_screen+0x3f0>)
 8002cea:	4822      	ldr	r0, [pc, #136]	; (8002d74 <display_screen+0x3cc>)
 8002cec:	f008 fd36 	bl	800b75c <siprintf>
					LcdString(1, 2);
 8002cf0:	2102      	movs	r1, #2
 8002cf2:	2001      	movs	r0, #1
 8002cf4:	f7ff faf0 	bl	80022d8 <LcdString>
			break;
 8002cf8:	e033      	b.n	8002d62 <display_screen+0x3ba>
			//----------------------------------------------------------//
	case Hello_SCREEN:
		sprintf(lcd_buf,"Hello AmpNuts!");
 8002cfa:	4928      	ldr	r1, [pc, #160]	; (8002d9c <display_screen+0x3f4>)
 8002cfc:	481d      	ldr	r0, [pc, #116]	; (8002d74 <display_screen+0x3cc>)
 8002cfe:	f008 fd2d 	bl	800b75c <siprintf>
		LcdString(1, 1);
 8002d02:	2101      	movs	r1, #1
 8002d04:	2001      	movs	r0, #1
 8002d06:	f7ff fae7 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"I`m Micron-GLIN");
 8002d0a:	4925      	ldr	r1, [pc, #148]	; (8002da0 <display_screen+0x3f8>)
 8002d0c:	4819      	ldr	r0, [pc, #100]	; (8002d74 <display_screen+0x3cc>)
 8002d0e:	f008 fd25 	bl	800b75c <siprintf>
		LcdString(1, 2);
 8002d12:	2102      	movs	r1, #2
 8002d14:	2001      	movs	r0, #1
 8002d16:	f7ff fadf 	bl	80022d8 <LcdString>
		break;
 8002d1a:	e022      	b.n	8002d62 <display_screen+0x3ba>
		//----------------------------------------------------------//
	case Warm_up_SCREEN:
		sprintf(lcd_buf,"need time to");
 8002d1c:	4921      	ldr	r1, [pc, #132]	; (8002da4 <display_screen+0x3fc>)
 8002d1e:	4815      	ldr	r0, [pc, #84]	; (8002d74 <display_screen+0x3cc>)
 8002d20:	f008 fd1c 	bl	800b75c <siprintf>
		LcdString(1, 1);
 8002d24:	2101      	movs	r1, #1
 8002d26:	2001      	movs	r0, #1
 8002d28:	f7ff fad6 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"warm-up my refs");
 8002d2c:	491e      	ldr	r1, [pc, #120]	; (8002da8 <display_screen+0x400>)
 8002d2e:	4811      	ldr	r0, [pc, #68]	; (8002d74 <display_screen+0x3cc>)
 8002d30:	f008 fd14 	bl	800b75c <siprintf>
		LcdString(1, 2);
 8002d34:	2102      	movs	r1, #2
 8002d36:	2001      	movs	r0, #1
 8002d38:	f7ff face 	bl	80022d8 <LcdString>
		break;
 8002d3c:	e011      	b.n	8002d62 <display_screen+0x3ba>
		//----------------------------------------------------------//
	case Ready_SCREEN:
		sprintf(lcd_buf,"I`m ready...");
 8002d3e:	491b      	ldr	r1, [pc, #108]	; (8002dac <display_screen+0x404>)
 8002d40:	480c      	ldr	r0, [pc, #48]	; (8002d74 <display_screen+0x3cc>)
 8002d42:	f008 fd0b 	bl	800b75c <siprintf>
		LcdString(1, 1);
 8002d46:	2101      	movs	r1, #1
 8002d48:	2001      	movs	r0, #1
 8002d4a:	f7ff fac5 	bl	80022d8 <LcdString>
		sprintf(lcd_buf,"      Let`s start!");
 8002d4e:	4918      	ldr	r1, [pc, #96]	; (8002db0 <display_screen+0x408>)
 8002d50:	4808      	ldr	r0, [pc, #32]	; (8002d74 <display_screen+0x3cc>)
 8002d52:	f008 fd03 	bl	800b75c <siprintf>
		LcdString(1, 2);
 8002d56:	2102      	movs	r1, #2
 8002d58:	2001      	movs	r0, #1
 8002d5a:	f7ff fabd 	bl	80022d8 <LcdString>
		break;
 8002d5e:	e000      	b.n	8002d62 <display_screen+0x3ba>
		break;
 8002d60:	bf00      	nop
	}

}
 8002d62:	bf00      	nop
 8002d64:	3714      	adds	r7, #20
 8002d66:	46bd      	mov	sp, r7
 8002d68:	bd90      	pop	{r4, r7, pc}
 8002d6a:	bf00      	nop
 8002d6c:	20000010 	.word	0x20000010
 8002d70:	0800fbac 	.word	0x0800fbac
 8002d74:	20000540 	.word	0x20000540
 8002d78:	20000750 	.word	0x20000750
 8002d7c:	20000720 	.word	0x20000720
 8002d80:	20000721 	.word	0x20000721
 8002d84:	20000722 	.word	0x20000722
 8002d88:	0800fb54 	.word	0x0800fb54
 8002d8c:	20000780 	.word	0x20000780
 8002d90:	2000077c 	.word	0x2000077c
 8002d94:	0800fb6c 	.word	0x0800fb6c
 8002d98:	0800fb7c 	.word	0x0800fb7c
 8002d9c:	0800fbbc 	.word	0x0800fbbc
 8002da0:	0800fbcc 	.word	0x0800fbcc
 8002da4:	0800fbdc 	.word	0x0800fbdc
 8002da8:	0800fbec 	.word	0x0800fbec
 8002dac:	0800fbfc 	.word	0x0800fbfc
 8002db0:	0800fc0c 	.word	0x0800fc0c

08002db4 <send_answer_to_CDC>:
//==============================================================================================


//==============================================================================================
void send_answer_to_CDC(uint8_t type)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b084      	sub	sp, #16
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	4603      	mov	r3, r0
 8002dbc:	71fb      	strb	r3, [r7, #7]
	uint8_t cdc_counter=0;
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	73fb      	strb	r3, [r7, #15]

	switch(type)
 8002dc2:	79fb      	ldrb	r3, [r7, #7]
 8002dc4:	2b10      	cmp	r3, #16
 8002dc6:	f200 80a6 	bhi.w	8002f16 <send_answer_to_CDC+0x162>
 8002dca:	a201      	add	r2, pc, #4	; (adr r2, 8002dd0 <send_answer_to_CDC+0x1c>)
 8002dcc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002dd0:	08002e1b 	.word	0x08002e1b
 8002dd4:	08002e39 	.word	0x08002e39
 8002dd8:	08002e55 	.word	0x08002e55
 8002ddc:	08002e71 	.word	0x08002e71
 8002de0:	08002eab 	.word	0x08002eab
 8002de4:	08002ec7 	.word	0x08002ec7
 8002de8:	08002f17 	.word	0x08002f17
 8002dec:	08002f17 	.word	0x08002f17
 8002df0:	08002f17 	.word	0x08002f17
 8002df4:	08002f17 	.word	0x08002f17
 8002df8:	08002f17 	.word	0x08002f17
 8002dfc:	08002f17 	.word	0x08002f17
 8002e00:	08002f17 	.word	0x08002f17
 8002e04:	08002f17 	.word	0x08002f17
 8002e08:	08002f17 	.word	0x08002f17
 8002e0c:	08002ee3 	.word	0x08002ee3
 8002e10:	08002e8d 	.word	0x08002e8d
	{
	case ERROR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Error1, strlen((const char *)Error1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e14:	7bfb      	ldrb	r3, [r7, #15]
 8002e16:	3301      	adds	r3, #1
 8002e18:	73fb      	strb	r3, [r7, #15]
 8002e1a:	f240 21dd 	movw	r1, #733	; 0x2dd
 8002e1e:	4840      	ldr	r0, [pc, #256]	; (8002f20 <send_answer_to_CDC+0x16c>)
 8002e20:	f007 fb3c 	bl	800a49c <CDC_Transmit_FS>
 8002e24:	4603      	mov	r3, r0
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d066      	beq.n	8002ef8 <send_answer_to_CDC+0x144>
 8002e2a:	7bfb      	ldrb	r3, [r7, #15]
 8002e2c:	2bff      	cmp	r3, #255	; 0xff
 8002e2e:	d1f1      	bne.n	8002e14 <send_answer_to_CDC+0x60>
		break;
 8002e30:	e062      	b.n	8002ef8 <send_answer_to_CDC+0x144>
	case ERROR_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)Error2, strlen((const char *)Error2))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e32:	7bfb      	ldrb	r3, [r7, #15]
 8002e34:	3301      	adds	r3, #1
 8002e36:	73fb      	strb	r3, [r7, #15]
 8002e38:	2129      	movs	r1, #41	; 0x29
 8002e3a:	483a      	ldr	r0, [pc, #232]	; (8002f24 <send_answer_to_CDC+0x170>)
 8002e3c:	f007 fb2e 	bl	800a49c <CDC_Transmit_FS>
 8002e40:	4603      	mov	r3, r0
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d05a      	beq.n	8002efc <send_answer_to_CDC+0x148>
 8002e46:	7bfb      	ldrb	r3, [r7, #15]
 8002e48:	2bff      	cmp	r3, #255	; 0xff
 8002e4a:	d1f2      	bne.n	8002e32 <send_answer_to_CDC+0x7e>
		break;
 8002e4c:	e056      	b.n	8002efc <send_answer_to_CDC+0x148>
	case OK_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)OK, strlen((const char *)OK))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e4e:	7bfb      	ldrb	r3, [r7, #15]
 8002e50:	3301      	adds	r3, #1
 8002e52:	73fb      	strb	r3, [r7, #15]
 8002e54:	2104      	movs	r1, #4
 8002e56:	4834      	ldr	r0, [pc, #208]	; (8002f28 <send_answer_to_CDC+0x174>)
 8002e58:	f007 fb20 	bl	800a49c <CDC_Transmit_FS>
 8002e5c:	4603      	mov	r3, r0
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d04e      	beq.n	8002f00 <send_answer_to_CDC+0x14c>
 8002e62:	7bfb      	ldrb	r3, [r7, #15]
 8002e64:	2bff      	cmp	r3, #255	; 0xff
 8002e66:	d1f2      	bne.n	8002e4e <send_answer_to_CDC+0x9a>
		break;
 8002e68:	e04a      	b.n	8002f00 <send_answer_to_CDC+0x14c>
	case OK_TYPE_2:
		while((CDC_Transmit_FS((uint8_t *)OK_Enter, strlen((const char *)OK_Enter))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e6a:	7bfb      	ldrb	r3, [r7, #15]
 8002e6c:	3301      	adds	r3, #1
 8002e6e:	73fb      	strb	r3, [r7, #15]
 8002e70:	2117      	movs	r1, #23
 8002e72:	482e      	ldr	r0, [pc, #184]	; (8002f2c <send_answer_to_CDC+0x178>)
 8002e74:	f007 fb12 	bl	800a49c <CDC_Transmit_FS>
 8002e78:	4603      	mov	r3, r0
 8002e7a:	2b00      	cmp	r3, #0
 8002e7c:	d042      	beq.n	8002f04 <send_answer_to_CDC+0x150>
 8002e7e:	7bfb      	ldrb	r3, [r7, #15]
 8002e80:	2bff      	cmp	r3, #255	; 0xff
 8002e82:	d1f2      	bne.n	8002e6a <send_answer_to_CDC+0xb6>
		break;
 8002e84:	e03e      	b.n	8002f04 <send_answer_to_CDC+0x150>
	case EXTENDED_HELP:
		while((CDC_Transmit_FS((uint8_t *)extended_help1, strlen((const char *)extended_help1))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002e86:	7bfb      	ldrb	r3, [r7, #15]
 8002e88:	3301      	adds	r3, #1
 8002e8a:	73fb      	strb	r3, [r7, #15]
 8002e8c:	f240 2162 	movw	r1, #610	; 0x262
 8002e90:	4827      	ldr	r0, [pc, #156]	; (8002f30 <send_answer_to_CDC+0x17c>)
 8002e92:	f007 fb03 	bl	800a49c <CDC_Transmit_FS>
 8002e96:	4603      	mov	r3, r0
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d035      	beq.n	8002f08 <send_answer_to_CDC+0x154>
 8002e9c:	7bfb      	ldrb	r3, [r7, #15]
 8002e9e:	2bff      	cmp	r3, #255	; 0xff
 8002ea0:	d1f1      	bne.n	8002e86 <send_answer_to_CDC+0xd2>
		break;
 8002ea2:	e031      	b.n	8002f08 <send_answer_to_CDC+0x154>
	case CLEAR_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)clear, strlen((const char *)clear))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002ea4:	7bfb      	ldrb	r3, [r7, #15]
 8002ea6:	3301      	adds	r3, #1
 8002ea8:	73fb      	strb	r3, [r7, #15]
 8002eaa:	2105      	movs	r1, #5
 8002eac:	4821      	ldr	r0, [pc, #132]	; (8002f34 <send_answer_to_CDC+0x180>)
 8002eae:	f007 faf5 	bl	800a49c <CDC_Transmit_FS>
 8002eb2:	4603      	mov	r3, r0
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d029      	beq.n	8002f0c <send_answer_to_CDC+0x158>
 8002eb8:	7bfb      	ldrb	r3, [r7, #15]
 8002eba:	2bff      	cmp	r3, #255	; 0xff
 8002ebc:	d1f2      	bne.n	8002ea4 <send_answer_to_CDC+0xf0>
		break;
 8002ebe:	e025      	b.n	8002f0c <send_answer_to_CDC+0x158>
	case DONE_TYPE_1:
		while((CDC_Transmit_FS((uint8_t *)Done, strlen((const char *)Done))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002ec0:	7bfb      	ldrb	r3, [r7, #15]
 8002ec2:	3301      	adds	r3, #1
 8002ec4:	73fb      	strb	r3, [r7, #15]
 8002ec6:	2116      	movs	r1, #22
 8002ec8:	481b      	ldr	r0, [pc, #108]	; (8002f38 <send_answer_to_CDC+0x184>)
 8002eca:	f007 fae7 	bl	800a49c <CDC_Transmit_FS>
 8002ece:	4603      	mov	r3, r0
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d01d      	beq.n	8002f10 <send_answer_to_CDC+0x15c>
 8002ed4:	7bfb      	ldrb	r3, [r7, #15]
 8002ed6:	2bff      	cmp	r3, #255	; 0xff
 8002ed8:	d1f2      	bne.n	8002ec0 <send_answer_to_CDC+0x10c>
		break;
 8002eda:	e019      	b.n	8002f10 <send_answer_to_CDC+0x15c>
	case RUN_CAL_TYPE_TEMP:
		while((CDC_Transmit_FS((uint8_t *)run_cal, strlen((const char *)run_cal))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8002edc:	7bfb      	ldrb	r3, [r7, #15]
 8002ede:	3301      	adds	r3, #1
 8002ee0:	73fb      	strb	r3, [r7, #15]
 8002ee2:	211b      	movs	r1, #27
 8002ee4:	4815      	ldr	r0, [pc, #84]	; (8002f3c <send_answer_to_CDC+0x188>)
 8002ee6:	f007 fad9 	bl	800a49c <CDC_Transmit_FS>
 8002eea:	4603      	mov	r3, r0
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d011      	beq.n	8002f14 <send_answer_to_CDC+0x160>
 8002ef0:	7bfb      	ldrb	r3, [r7, #15]
 8002ef2:	2bff      	cmp	r3, #255	; 0xff
 8002ef4:	d1f2      	bne.n	8002edc <send_answer_to_CDC+0x128>
		break;
 8002ef6:	e00d      	b.n	8002f14 <send_answer_to_CDC+0x160>
		break;
 8002ef8:	bf00      	nop
 8002efa:	e00c      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002efc:	bf00      	nop
 8002efe:	e00a      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f00:	bf00      	nop
 8002f02:	e008      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f04:	bf00      	nop
 8002f06:	e006      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f08:	bf00      	nop
 8002f0a:	e004      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f0c:	bf00      	nop
 8002f0e:	e002      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f10:	bf00      	nop
 8002f12:	e000      	b.n	8002f16 <send_answer_to_CDC+0x162>
		break;
 8002f14:	bf00      	nop
	}
}
 8002f16:	bf00      	nop
 8002f18:	3710      	adds	r7, #16
 8002f1a:	46bd      	mov	sp, r7
 8002f1c:	bd80      	pop	{r7, pc}
 8002f1e:	bf00      	nop
 8002f20:	08010278 	.word	0x08010278
 8002f24:	080107d4 	.word	0x080107d4
 8002f28:	0801024c 	.word	0x0801024c
 8002f2c:	080107bc 	.word	0x080107bc
 8002f30:	08010558 	.word	0x08010558
 8002f34:	08010270 	.word	0x08010270
 8002f38:	08010800 	.word	0x08010800
 8002f3c:	08010254 	.word	0x08010254

08002f40 <cmd_SWEEP_START>:



//==============================================================================================
void cmd_SWEEP_START()
{
 8002f40:	b580      	push	{r7, lr}
 8002f42:	af00      	add	r7, sp, #0
	output_state(Output_auto_STATE);
 8002f44:	2004      	movs	r0, #4
 8002f46:	f7ff fc1d 	bl	8002784 <output_state>
	DDS_Calculation();
 8002f4a:	f7fe fe05 	bl	8001b58 <DDS_Calculation>
	DAC_TEMP_CAL();
 8002f4e:	f7fe fd93 	bl	8001a78 <DAC_TEMP_CAL>
	CPLD_control(CPLD_ON_STATE); // Enable LDAC signal
 8002f52:	2001      	movs	r0, #1
 8002f54:	f7fe fc34 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f58:	f7fe fd06 	bl	8001968 <DAC_SendInit>
}
 8002f5c:	bf00      	nop
 8002f5e:	bd80      	pop	{r7, pc}

08002f60 <cmd_SWEEP_STOP>:
//==============================================================================================


//==============================================================================================
void cmd_SWEEP_STOP()
{
 8002f60:	b580      	push	{r7, lr}
 8002f62:	af00      	add	r7, sp, #0
	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002f64:	2000      	movs	r0, #0
 8002f66:	f7fe fc2b 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002f6a:	f7fe fcfd 	bl	8001968 <DAC_SendInit>
}
 8002f6e:	bf00      	nop
 8002f70:	bd80      	pop	{r7, pc}
	...

08002f74 <cmd_DAC_SET>:
//==============================================================================================


//==============================================================================================
void cmd_DAC_SET(uint32_t code)
{
 8002f74:	b580      	push	{r7, lr}
 8002f76:	b082      	sub	sp, #8
 8002f78:	af00      	add	r7, sp, #0
 8002f7a:	6078      	str	r0, [r7, #4]
	if (code>0xFFFFF)return;
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002f82:	d21f      	bcs.n	8002fc4 <cmd_DAC_SET+0x50>

	if(DAC_code_direction!=DIRECTION_CYCLE_STATE)
 8002f84:	4b11      	ldr	r3, [pc, #68]	; (8002fcc <cmd_DAC_SET+0x58>)
 8002f86:	781b      	ldrb	r3, [r3, #0]
 8002f88:	2b02      	cmp	r3, #2
 8002f8a:	d00f      	beq.n	8002fac <cmd_DAC_SET+0x38>
	{
		switch(code)
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d004      	beq.n	8002f9c <cmd_DAC_SET+0x28>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	4a0e      	ldr	r2, [pc, #56]	; (8002fd0 <cmd_DAC_SET+0x5c>)
 8002f96:	4293      	cmp	r3, r2
 8002f98:	d004      	beq.n	8002fa4 <cmd_DAC_SET+0x30>
 8002f9a:	e008      	b.n	8002fae <cmd_DAC_SET+0x3a>
		{
		case DAC_CODE_DOWN:
			DAC_code_direction=DIRECTION_UP_STATE;
 8002f9c:	4b0b      	ldr	r3, [pc, #44]	; (8002fcc <cmd_DAC_SET+0x58>)
 8002f9e:	2201      	movs	r2, #1
 8002fa0:	701a      	strb	r2, [r3, #0]
			break;
 8002fa2:	e004      	b.n	8002fae <cmd_DAC_SET+0x3a>
		case DAC_CODE_TOP:
			DAC_code_direction=DIRECTION_DOWN_STATE;
 8002fa4:	4b09      	ldr	r3, [pc, #36]	; (8002fcc <cmd_DAC_SET+0x58>)
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	701a      	strb	r2, [r3, #0]
			break;
 8002faa:	e000      	b.n	8002fae <cmd_DAC_SET+0x3a>
		}
	}
 8002fac:	bf00      	nop

	CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
 8002fae:	2000      	movs	r0, #0
 8002fb0:	f7fe fc06 	bl	80017c0 <CPLD_control>
	DAC_SendInit();
 8002fb4:	f7fe fcd8 	bl	8001968 <DAC_SendInit>
	DAC_TEMP_CAL();
 8002fb8:	f7fe fd5e 	bl	8001a78 <DAC_TEMP_CAL>
	DAC_Write(code);
 8002fbc:	6878      	ldr	r0, [r7, #4]
 8002fbe:	f7fe fc93 	bl	80018e8 <DAC_Write>
 8002fc2:	e000      	b.n	8002fc6 <cmd_DAC_SET+0x52>
	if (code>0xFFFFF)return;
 8002fc4:	bf00      	nop
}
 8002fc6:	3708      	adds	r7, #8
 8002fc8:	46bd      	mov	sp, r7
 8002fca:	bd80      	pop	{r7, pc}
 8002fcc:	20000784 	.word	0x20000784
 8002fd0:	000fffff 	.word	0x000fffff

08002fd4 <cmd_SET_OUTPUT_VOLTAGE>:
//==============================================================================================


//==============================================================================================
FunctionalState cmd_SET_OUTPUT_VOLTAGE(float volt)
{
 8002fd4:	b580      	push	{r7, lr}
 8002fd6:	b082      	sub	sp, #8
 8002fd8:	af00      	add	r7, sp, #0
 8002fda:	6078      	str	r0, [r7, #4]
	if(volt>=cal_DAC_down_voltage && volt<=cal_DAC_up_voltage)
 8002fdc:	4b85      	ldr	r3, [pc, #532]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	4619      	mov	r1, r3
 8002fe2:	6878      	ldr	r0, [r7, #4]
 8002fe4:	f7fe f8a2 	bl	800112c <__aeabi_fcmpge>
 8002fe8:	4603      	mov	r3, r0
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d03f      	beq.n	800306e <cmd_SET_OUTPUT_VOLTAGE+0x9a>
 8002fee:	4b82      	ldr	r3, [pc, #520]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	4619      	mov	r1, r3
 8002ff4:	6878      	ldr	r0, [r7, #4]
 8002ff6:	f7fe f88f 	bl	8001118 <__aeabi_fcmple>
 8002ffa:	4603      	mov	r3, r0
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d036      	beq.n	800306e <cmd_SET_OUTPUT_VOLTAGE+0x9a>
	{
		if(Current_output_status!=Output_x1_STATE)output_state(Output_x1_STATE);
 8003000:	4b7e      	ldr	r3, [pc, #504]	; (80031fc <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 8003002:	781b      	ldrb	r3, [r3, #0]
 8003004:	2b01      	cmp	r3, #1
 8003006:	d002      	beq.n	800300e <cmd_SET_OUTPUT_VOLTAGE+0x3a>
 8003008:	2001      	movs	r0, #1
 800300a:	f7ff fbbb 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 800300e:	4b7a      	ldr	r3, [pc, #488]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	4a78      	ldr	r2, [pc, #480]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003014:	6812      	ldr	r2, [r2, #0]
 8003016:	4611      	mov	r1, r2
 8003018:	4618      	mov	r0, r3
 800301a:	f7fd fdcb 	bl	8000bb4 <__aeabi_fsub>
 800301e:	4603      	mov	r3, r0
 8003020:	4977      	ldr	r1, [pc, #476]	; (8003200 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 8003022:	4618      	mov	r0, r3
 8003024:	f7fd ff84 	bl	8000f30 <__aeabi_fdiv>
 8003028:	4603      	mov	r3, r0
 800302a:	461a      	mov	r2, r3
 800302c:	4b75      	ldr	r3, [pc, #468]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 800302e:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt-cal_DAC_down_voltage)/dac_resolution);
 8003030:	4b70      	ldr	r3, [pc, #448]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	4619      	mov	r1, r3
 8003036:	6878      	ldr	r0, [r7, #4]
 8003038:	f7fd fdbc 	bl	8000bb4 <__aeabi_fsub>
 800303c:	4603      	mov	r3, r0
 800303e:	461a      	mov	r2, r3
 8003040:	4b70      	ldr	r3, [pc, #448]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	4619      	mov	r1, r3
 8003046:	4610      	mov	r0, r2
 8003048:	f7fd ff72 	bl	8000f30 <__aeabi_fdiv>
 800304c:	4603      	mov	r3, r0
 800304e:	4618      	mov	r0, r3
 8003050:	f7fe f880 	bl	8001154 <__aeabi_f2uiz>
 8003054:	4603      	mov	r3, r0
 8003056:	4a6c      	ldr	r2, [pc, #432]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8003058:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 800305a:	4b6b      	ldr	r3, [pc, #428]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	4618      	mov	r0, r3
 8003060:	f7ff ff88 	bl	8002f74 <cmd_DAC_SET>
		Voltage=volt;
 8003064:	4a69      	ldr	r2, [pc, #420]	; (800320c <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6013      	str	r3, [r2, #0]
		return ret_OK;
 800306a:	2301      	movs	r3, #1
 800306c:	e0be      	b.n	80031ec <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x2_coeff) && volt<=(cal_DAC_up_voltage*gain_x2_coeff))
 800306e:	4b61      	ldr	r3, [pc, #388]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	4a67      	ldr	r2, [pc, #412]	; (8003210 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003074:	6812      	ldr	r2, [r2, #0]
 8003076:	4611      	mov	r1, r2
 8003078:	4618      	mov	r0, r3
 800307a:	f7fd fea5 	bl	8000dc8 <__aeabi_fmul>
 800307e:	4603      	mov	r3, r0
 8003080:	4619      	mov	r1, r3
 8003082:	6878      	ldr	r0, [r7, #4]
 8003084:	f7fe f852 	bl	800112c <__aeabi_fcmpge>
 8003088:	4603      	mov	r3, r0
 800308a:	2b00      	cmp	r3, #0
 800308c:	d04e      	beq.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x158>
 800308e:	4b5a      	ldr	r3, [pc, #360]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	4a5f      	ldr	r2, [pc, #380]	; (8003210 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 8003094:	6812      	ldr	r2, [r2, #0]
 8003096:	4611      	mov	r1, r2
 8003098:	4618      	mov	r0, r3
 800309a:	f7fd fe95 	bl	8000dc8 <__aeabi_fmul>
 800309e:	4603      	mov	r3, r0
 80030a0:	4619      	mov	r1, r3
 80030a2:	6878      	ldr	r0, [r7, #4]
 80030a4:	f7fe f838 	bl	8001118 <__aeabi_fcmple>
 80030a8:	4603      	mov	r3, r0
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d03e      	beq.n	800312c <cmd_SET_OUTPUT_VOLTAGE+0x158>
	{
		if(Current_output_status!=Output_x2_STATE)output_state(Output_x2_STATE);
 80030ae:	4b53      	ldr	r3, [pc, #332]	; (80031fc <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 80030b0:	781b      	ldrb	r3, [r3, #0]
 80030b2:	2b02      	cmp	r3, #2
 80030b4:	d002      	beq.n	80030bc <cmd_SET_OUTPUT_VOLTAGE+0xe8>
 80030b6:	2002      	movs	r0, #2
 80030b8:	f7ff fb64 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 80030bc:	4b4e      	ldr	r3, [pc, #312]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	4a4c      	ldr	r2, [pc, #304]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80030c2:	6812      	ldr	r2, [r2, #0]
 80030c4:	4611      	mov	r1, r2
 80030c6:	4618      	mov	r0, r3
 80030c8:	f7fd fd74 	bl	8000bb4 <__aeabi_fsub>
 80030cc:	4603      	mov	r3, r0
 80030ce:	494c      	ldr	r1, [pc, #304]	; (8003200 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 80030d0:	4618      	mov	r0, r3
 80030d2:	f7fd ff2d 	bl	8000f30 <__aeabi_fdiv>
 80030d6:	4603      	mov	r3, r0
 80030d8:	461a      	mov	r2, r3
 80030da:	4b4a      	ldr	r3, [pc, #296]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80030dc:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x2_coeff-cal_DAC_down_voltage)/dac_resolution);
 80030de:	4b4c      	ldr	r3, [pc, #304]	; (8003210 <cmd_SET_OUTPUT_VOLTAGE+0x23c>)
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	4619      	mov	r1, r3
 80030e4:	6878      	ldr	r0, [r7, #4]
 80030e6:	f7fd ff23 	bl	8000f30 <__aeabi_fdiv>
 80030ea:	4603      	mov	r3, r0
 80030ec:	461a      	mov	r2, r3
 80030ee:	4b41      	ldr	r3, [pc, #260]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	4619      	mov	r1, r3
 80030f4:	4610      	mov	r0, r2
 80030f6:	f7fd fd5d 	bl	8000bb4 <__aeabi_fsub>
 80030fa:	4603      	mov	r3, r0
 80030fc:	461a      	mov	r2, r3
 80030fe:	4b41      	ldr	r3, [pc, #260]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	4619      	mov	r1, r3
 8003104:	4610      	mov	r0, r2
 8003106:	f7fd ff13 	bl	8000f30 <__aeabi_fdiv>
 800310a:	4603      	mov	r3, r0
 800310c:	4618      	mov	r0, r3
 800310e:	f7fe f821 	bl	8001154 <__aeabi_f2uiz>
 8003112:	4603      	mov	r3, r0
 8003114:	4a3c      	ldr	r2, [pc, #240]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 8003116:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 8003118:	4b3b      	ldr	r3, [pc, #236]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	4618      	mov	r0, r3
 800311e:	f7ff ff29 	bl	8002f74 <cmd_DAC_SET>
		Voltage=volt;
 8003122:	4a3a      	ldr	r2, [pc, #232]	; (800320c <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	6013      	str	r3, [r2, #0]
		return ret_OK;
 8003128:	2301      	movs	r3, #1
 800312a:	e05f      	b.n	80031ec <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}
	if(volt>=(cal_DAC_down_voltage*gain_x4_coeff) && volt<=(cal_DAC_up_voltage*gain_x4_coeff))
 800312c:	4b31      	ldr	r3, [pc, #196]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	4a38      	ldr	r2, [pc, #224]	; (8003214 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003132:	6812      	ldr	r2, [r2, #0]
 8003134:	4611      	mov	r1, r2
 8003136:	4618      	mov	r0, r3
 8003138:	f7fd fe46 	bl	8000dc8 <__aeabi_fmul>
 800313c:	4603      	mov	r3, r0
 800313e:	4619      	mov	r1, r3
 8003140:	6878      	ldr	r0, [r7, #4]
 8003142:	f7fd fff3 	bl	800112c <__aeabi_fcmpge>
 8003146:	4603      	mov	r3, r0
 8003148:	2b00      	cmp	r3, #0
 800314a:	d04e      	beq.n	80031ea <cmd_SET_OUTPUT_VOLTAGE+0x216>
 800314c:	4b2a      	ldr	r3, [pc, #168]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	4a30      	ldr	r2, [pc, #192]	; (8003214 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 8003152:	6812      	ldr	r2, [r2, #0]
 8003154:	4611      	mov	r1, r2
 8003156:	4618      	mov	r0, r3
 8003158:	f7fd fe36 	bl	8000dc8 <__aeabi_fmul>
 800315c:	4603      	mov	r3, r0
 800315e:	4619      	mov	r1, r3
 8003160:	6878      	ldr	r0, [r7, #4]
 8003162:	f7fd ffd9 	bl	8001118 <__aeabi_fcmple>
 8003166:	4603      	mov	r3, r0
 8003168:	2b00      	cmp	r3, #0
 800316a:	d03e      	beq.n	80031ea <cmd_SET_OUTPUT_VOLTAGE+0x216>
	{
		if(Current_output_status!=Output_x4_STATE)output_state(Output_x4_STATE);
 800316c:	4b23      	ldr	r3, [pc, #140]	; (80031fc <cmd_SET_OUTPUT_VOLTAGE+0x228>)
 800316e:	781b      	ldrb	r3, [r3, #0]
 8003170:	2b03      	cmp	r3, #3
 8003172:	d002      	beq.n	800317a <cmd_SET_OUTPUT_VOLTAGE+0x1a6>
 8003174:	2003      	movs	r0, #3
 8003176:	f7ff fb05 	bl	8002784 <output_state>
		dac_resolution=(cal_DAC_up_voltage-cal_DAC_down_voltage)/0xFFFFF; // Calculate 1 LSB resolution
 800317a:	4b1f      	ldr	r3, [pc, #124]	; (80031f8 <cmd_SET_OUTPUT_VOLTAGE+0x224>)
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	4a1d      	ldr	r2, [pc, #116]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 8003180:	6812      	ldr	r2, [r2, #0]
 8003182:	4611      	mov	r1, r2
 8003184:	4618      	mov	r0, r3
 8003186:	f7fd fd15 	bl	8000bb4 <__aeabi_fsub>
 800318a:	4603      	mov	r3, r0
 800318c:	491c      	ldr	r1, [pc, #112]	; (8003200 <cmd_SET_OUTPUT_VOLTAGE+0x22c>)
 800318e:	4618      	mov	r0, r3
 8003190:	f7fd fece 	bl	8000f30 <__aeabi_fdiv>
 8003194:	4603      	mov	r3, r0
 8003196:	461a      	mov	r2, r3
 8003198:	4b1a      	ldr	r3, [pc, #104]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 800319a:	601a      	str	r2, [r3, #0]
		DAC_code=(uint32_t)((volt/gain_x4_coeff-cal_DAC_down_voltage)/dac_resolution);
 800319c:	4b1d      	ldr	r3, [pc, #116]	; (8003214 <cmd_SET_OUTPUT_VOLTAGE+0x240>)
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	4619      	mov	r1, r3
 80031a2:	6878      	ldr	r0, [r7, #4]
 80031a4:	f7fd fec4 	bl	8000f30 <__aeabi_fdiv>
 80031a8:	4603      	mov	r3, r0
 80031aa:	461a      	mov	r2, r3
 80031ac:	4b11      	ldr	r3, [pc, #68]	; (80031f4 <cmd_SET_OUTPUT_VOLTAGE+0x220>)
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	4619      	mov	r1, r3
 80031b2:	4610      	mov	r0, r2
 80031b4:	f7fd fcfe 	bl	8000bb4 <__aeabi_fsub>
 80031b8:	4603      	mov	r3, r0
 80031ba:	461a      	mov	r2, r3
 80031bc:	4b11      	ldr	r3, [pc, #68]	; (8003204 <cmd_SET_OUTPUT_VOLTAGE+0x230>)
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	4619      	mov	r1, r3
 80031c2:	4610      	mov	r0, r2
 80031c4:	f7fd feb4 	bl	8000f30 <__aeabi_fdiv>
 80031c8:	4603      	mov	r3, r0
 80031ca:	4618      	mov	r0, r3
 80031cc:	f7fd ffc2 	bl	8001154 <__aeabi_f2uiz>
 80031d0:	4603      	mov	r3, r0
 80031d2:	4a0d      	ldr	r2, [pc, #52]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80031d4:	6013      	str	r3, [r2, #0]
		cmd_DAC_SET(DAC_code);
 80031d6:	4b0c      	ldr	r3, [pc, #48]	; (8003208 <cmd_SET_OUTPUT_VOLTAGE+0x234>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	4618      	mov	r0, r3
 80031dc:	f7ff feca 	bl	8002f74 <cmd_DAC_SET>
		Voltage=volt;
 80031e0:	4a0a      	ldr	r2, [pc, #40]	; (800320c <cmd_SET_OUTPUT_VOLTAGE+0x238>)
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	6013      	str	r3, [r2, #0]
		return ret_OK;
 80031e6:	2301      	movs	r3, #1
 80031e8:	e000      	b.n	80031ec <cmd_SET_OUTPUT_VOLTAGE+0x218>
	}

	return ret_ERROR;
 80031ea:	2300      	movs	r3, #0
}
 80031ec:	4618      	mov	r0, r3
 80031ee:	3708      	adds	r7, #8
 80031f0:	46bd      	mov	sp, r7
 80031f2:	bd80      	pop	{r7, pc}
 80031f4:	20000778 	.word	0x20000778
 80031f8:	20000774 	.word	0x20000774
 80031fc:	2000077c 	.word	0x2000077c
 8003200:	497ffff0 	.word	0x497ffff0
 8003204:	20000648 	.word	0x20000648
 8003208:	20000780 	.word	0x20000780
 800320c:	2000076c 	.word	0x2000076c
 8003210:	20000538 	.word	0x20000538
 8003214:	2000053c 	.word	0x2000053c

08003218 <cmd_CAP_SET>:



//==============================================================================================
FunctionalState cmd_CAP_SET(uint8_t value)
{
 8003218:	b580      	push	{r7, lr}
 800321a:	b082      	sub	sp, #8
 800321c:	af00      	add	r7, sp, #0
 800321e:	4603      	mov	r3, r0
 8003220:	71fb      	strb	r3, [r7, #7]
	if(value>=C_value_max_count)
 8003222:	79fb      	ldrb	r3, [r7, #7]
 8003224:	2b09      	cmp	r3, #9
 8003226:	d901      	bls.n	800322c <cmd_CAP_SET+0x14>
		return ret_ERROR;
 8003228:	2300      	movs	r3, #0
 800322a:	e011      	b.n	8003250 <cmd_CAP_SET+0x38>
	C_ref=value;
 800322c:	4a0a      	ldr	r2, [pc, #40]	; (8003258 <cmd_CAP_SET+0x40>)
 800322e:	79fb      	ldrb	r3, [r7, #7]
 8003230:	7013      	strb	r3, [r2, #0]
	if(mode==AMP_SCREEN)return Recalculate_ramp_speed(mode,amp_target_speed);
 8003232:	4b0a      	ldr	r3, [pc, #40]	; (800325c <cmd_CAP_SET+0x44>)
 8003234:	781b      	ldrb	r3, [r3, #0]
 8003236:	2b04      	cmp	r3, #4
 8003238:	d109      	bne.n	800324e <cmd_CAP_SET+0x36>
 800323a:	4b08      	ldr	r3, [pc, #32]	; (800325c <cmd_CAP_SET+0x44>)
 800323c:	781b      	ldrb	r3, [r3, #0]
 800323e:	4a08      	ldr	r2, [pc, #32]	; (8003260 <cmd_CAP_SET+0x48>)
 8003240:	6812      	ldr	r2, [r2, #0]
 8003242:	4611      	mov	r1, r2
 8003244:	4618      	mov	r0, r3
 8003246:	f000 f80f 	bl	8003268 <Recalculate_ramp_speed>
 800324a:	4603      	mov	r3, r0
 800324c:	e000      	b.n	8003250 <cmd_CAP_SET+0x38>
	return ret_OK;
 800324e:	2301      	movs	r3, #1
}
 8003250:	4618      	mov	r0, r3
 8003252:	3708      	adds	r7, #8
 8003254:	46bd      	mov	sp, r7
 8003256:	bd80      	pop	{r7, pc}
 8003258:	20000769 	.word	0x20000769
 800325c:	20000768 	.word	0x20000768
 8003260:	2000000c 	.word	0x2000000c
 8003264:	00000000 	.word	0x00000000

08003268 <Recalculate_ramp_speed>:



//==============================================================================================
FunctionalState Recalculate_ramp_speed(uint8_t new_state, float new_speed)
{
 8003268:	b5b0      	push	{r4, r5, r7, lr}
 800326a:	b084      	sub	sp, #16
 800326c:	af00      	add	r7, sp, #0
 800326e:	4603      	mov	r3, r0
 8003270:	6039      	str	r1, [r7, #0]
 8003272:	71fb      	strb	r3, [r7, #7]
	float tmp_speed=0;
 8003274:	f04f 0300 	mov.w	r3, #0
 8003278:	60fb      	str	r3, [r7, #12]

	if(new_state==AMP_SCREEN) // check current
 800327a:	79fb      	ldrb	r3, [r7, #7]
 800327c:	2b04      	cmp	r3, #4
 800327e:	d120      	bne.n	80032c2 <Recalculate_ramp_speed+0x5a>
		tmp_speed=new_speed/(C_value[C_ref]*1E-12);
 8003280:	6838      	ldr	r0, [r7, #0]
 8003282:	f7fd f8f3 	bl	800046c <__aeabi_f2d>
 8003286:	4604      	mov	r4, r0
 8003288:	460d      	mov	r5, r1
 800328a:	4b37      	ldr	r3, [pc, #220]	; (8003368 <Recalculate_ramp_speed+0x100>)
 800328c:	781b      	ldrb	r3, [r3, #0]
 800328e:	461a      	mov	r2, r3
 8003290:	4b36      	ldr	r3, [pc, #216]	; (800336c <Recalculate_ramp_speed+0x104>)
 8003292:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003296:	4618      	mov	r0, r3
 8003298:	f7fd f8e8 	bl	800046c <__aeabi_f2d>
 800329c:	a32c      	add	r3, pc, #176	; (adr r3, 8003350 <Recalculate_ramp_speed+0xe8>)
 800329e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032a2:	f7fd f93b 	bl	800051c <__aeabi_dmul>
 80032a6:	4602      	mov	r2, r0
 80032a8:	460b      	mov	r3, r1
 80032aa:	4620      	mov	r0, r4
 80032ac:	4629      	mov	r1, r5
 80032ae:	f7fd fa5f 	bl	8000770 <__aeabi_ddiv>
 80032b2:	4602      	mov	r2, r0
 80032b4:	460b      	mov	r3, r1
 80032b6:	4610      	mov	r0, r2
 80032b8:	4619      	mov	r1, r3
 80032ba:	f7fd fc27 	bl	8000b0c <__aeabi_d2f>
 80032be:	4603      	mov	r3, r0
 80032c0:	60fb      	str	r3, [r7, #12]
	if(new_state==dU_dt_SCREEN) // check speed
 80032c2:	79fb      	ldrb	r3, [r7, #7]
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d101      	bne.n	80032cc <Recalculate_ramp_speed+0x64>
		tmp_speed=new_speed;
 80032c8:	683b      	ldr	r3, [r7, #0]
 80032ca:	60fb      	str	r3, [r7, #12]

	if(tmp_speed<0.0009 || tmp_speed>1.1) // limit V/s
 80032cc:	68f8      	ldr	r0, [r7, #12]
 80032ce:	f7fd f8cd 	bl	800046c <__aeabi_f2d>
 80032d2:	a321      	add	r3, pc, #132	; (adr r3, 8003358 <Recalculate_ramp_speed+0xf0>)
 80032d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032d8:	f7fd fb92 	bl	8000a00 <__aeabi_dcmplt>
 80032dc:	4603      	mov	r3, r0
 80032de:	2b00      	cmp	r3, #0
 80032e0:	d10a      	bne.n	80032f8 <Recalculate_ramp_speed+0x90>
 80032e2:	68f8      	ldr	r0, [r7, #12]
 80032e4:	f7fd f8c2 	bl	800046c <__aeabi_f2d>
 80032e8:	a31d      	add	r3, pc, #116	; (adr r3, 8003360 <Recalculate_ramp_speed+0xf8>)
 80032ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032ee:	f7fd fba5 	bl	8000a3c <__aeabi_dcmpgt>
 80032f2:	4603      	mov	r3, r0
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d001      	beq.n	80032fc <Recalculate_ramp_speed+0x94>
		return ret_ERROR;
 80032f8:	2300      	movs	r3, #0
 80032fa:	e025      	b.n	8003348 <Recalculate_ramp_speed+0xe0>

	if(new_state==AMP_SCREEN) // check current
 80032fc:	79fb      	ldrb	r3, [r7, #7]
 80032fe:	2b04      	cmp	r3, #4
 8003300:	d108      	bne.n	8003314 <Recalculate_ramp_speed+0xac>
	{
		amp_target_speed=new_speed;
 8003302:	4a1b      	ldr	r2, [pc, #108]	; (8003370 <Recalculate_ramp_speed+0x108>)
 8003304:	683b      	ldr	r3, [r7, #0]
 8003306:	6013      	str	r3, [r2, #0]
		ramp_target_speed=tmp_speed;
 8003308:	4a1a      	ldr	r2, [pc, #104]	; (8003374 <Recalculate_ramp_speed+0x10c>)
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	6013      	str	r3, [r2, #0]
		mode=AMP_SCREEN;
 800330e:	4b1a      	ldr	r3, [pc, #104]	; (8003378 <Recalculate_ramp_speed+0x110>)
 8003310:	2204      	movs	r2, #4
 8003312:	701a      	strb	r2, [r3, #0]
	}

	if(new_state==dU_dt_SCREEN) // check speed
 8003314:	79fb      	ldrb	r3, [r7, #7]
 8003316:	2b00      	cmp	r3, #0
 8003318:	d105      	bne.n	8003326 <Recalculate_ramp_speed+0xbe>
	{
		ramp_target_speed=new_speed;
 800331a:	4a16      	ldr	r2, [pc, #88]	; (8003374 <Recalculate_ramp_speed+0x10c>)
 800331c:	683b      	ldr	r3, [r7, #0]
 800331e:	6013      	str	r3, [r2, #0]
		mode=dU_dt_SCREEN;
 8003320:	4b15      	ldr	r3, [pc, #84]	; (8003378 <Recalculate_ramp_speed+0x110>)
 8003322:	2200      	movs	r2, #0
 8003324:	701a      	strb	r2, [r3, #0]
	}

	DAC_target_speed=tmp_speed;
 8003326:	4a15      	ldr	r2, [pc, #84]	; (800337c <Recalculate_ramp_speed+0x114>)
 8003328:	68fb      	ldr	r3, [r7, #12]
 800332a:	6013      	str	r3, [r2, #0]
	if(cfg.LDACMODE==0)
 800332c:	4b14      	ldr	r3, [pc, #80]	; (8003380 <Recalculate_ramp_speed+0x118>)
 800332e:	789b      	ldrb	r3, [r3, #2]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d103      	bne.n	800333c <Recalculate_ramp_speed+0xd4>
	{
		CPLD_control(CPLD_OFF_STATE);
 8003334:	2000      	movs	r0, #0
 8003336:	f7fe fa43 	bl	80017c0 <CPLD_control>
 800333a:	e002      	b.n	8003342 <Recalculate_ramp_speed+0xda>
	}
	else
	{
		CPLD_control(CPLD_ON_STATE);
 800333c:	2001      	movs	r0, #1
 800333e:	f7fe fa3f 	bl	80017c0 <CPLD_control>
	}
	DDS_Calculation();
 8003342:	f7fe fc09 	bl	8001b58 <DDS_Calculation>
	return ret_OK;
 8003346:	2301      	movs	r3, #1
}
 8003348:	4618      	mov	r0, r3
 800334a:	3710      	adds	r7, #16
 800334c:	46bd      	mov	sp, r7
 800334e:	bdb0      	pop	{r4, r5, r7, pc}
 8003350:	812dea11 	.word	0x812dea11
 8003354:	3d719799 	.word	0x3d719799
 8003358:	487fcb92 	.word	0x487fcb92
 800335c:	3f4d7dbf 	.word	0x3f4d7dbf
 8003360:	9999999a 	.word	0x9999999a
 8003364:	3ff19999 	.word	0x3ff19999
 8003368:	20000769 	.word	0x20000769
 800336c:	20000620 	.word	0x20000620
 8003370:	2000000c 	.word	0x2000000c
 8003374:	20000010 	.word	0x20000010
 8003378:	20000768 	.word	0x20000768
 800337c:	20000764 	.word	0x20000764
 8003380:	20000750 	.word	0x20000750
 8003384:	00000000 	.word	0x00000000

08003388 <cmd_CAL>:



//==============================================================================================
FunctionalState cmd_CAL(uint8_t cmd, float coeff)
{
 8003388:	b580      	push	{r7, lr}
 800338a:	b084      	sub	sp, #16
 800338c:	af00      	add	r7, sp, #0
 800338e:	4603      	mov	r3, r0
 8003390:	6039      	str	r1, [r7, #0]
 8003392:	71fb      	strb	r3, [r7, #7]
	float tmpx;

	if(CAL_STATE==LOCK_STATE) return 0;
 8003394:	4b96      	ldr	r3, [pc, #600]	; (80035f0 <cmd_CAL+0x268>)
 8003396:	781b      	ldrb	r3, [r3, #0]
 8003398:	2b01      	cmp	r3, #1
 800339a:	d101      	bne.n	80033a0 <cmd_CAL+0x18>
 800339c:	2300      	movs	r3, #0
 800339e:	e0f0      	b.n	8003582 <cmd_CAL+0x1fa>

	tmpx=coeff;
 80033a0:	683b      	ldr	r3, [r7, #0]
 80033a2:	60fb      	str	r3, [r7, #12]

	switch(cmd)
 80033a4:	79fb      	ldrb	r3, [r7, #7]
 80033a6:	3b06      	subs	r3, #6
 80033a8:	2b07      	cmp	r3, #7
 80033aa:	f200 80e7 	bhi.w	800357c <cmd_CAL+0x1f4>
 80033ae:	a201      	add	r2, pc, #4	; (adr r2, 80033b4 <cmd_CAL+0x2c>)
 80033b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80033b4:	080033d5 	.word	0x080033d5
 80033b8:	080033e7 	.word	0x080033e7
 80033bc:	080033f9 	.word	0x080033f9
 80033c0:	0800340b 	.word	0x0800340b
 80033c4:	080034a1 	.word	0x080034a1
 80033c8:	0800350f 	.word	0x0800350f
 80033cc:	0800341d 	.word	0x0800341d
 80033d0:	0800345f 	.word	0x0800345f
	{
	case DAC_CAL_TEMP:
		DAC_Write(DAC_CODE_MIDDLE);
 80033d4:	4887      	ldr	r0, [pc, #540]	; (80035f4 <cmd_CAL+0x26c>)
 80033d6:	f7fe fa87 	bl	80018e8 <DAC_Write>
		DAC_TEMP_CAL();
 80033da:	f7fe fb4d 	bl	8001a78 <DAC_TEMP_CAL>
		DAC_Write(DAC_CODE_MIDDLE);
 80033de:	4885      	ldr	r0, [pc, #532]	; (80035f4 <cmd_CAL+0x26c>)
 80033e0:	f7fe fa82 	bl	80018e8 <DAC_Write>
		break;
 80033e4:	e0ca      	b.n	800357c <cmd_CAL+0x1f4>

	case DAC_CAL_POLY_A:
		EEPROM_write(corr_coeff_1_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033e6:	68f8      	ldr	r0, [r7, #12]
 80033e8:	f000 f9bf 	bl	800376a <float_to_binary>
 80033ec:	4603      	mov	r3, r0
 80033ee:	4619      	mov	r1, r3
 80033f0:	2010      	movs	r0, #16
 80033f2:	f000 f9f9 	bl	80037e8 <EEPROM_write>
		break;
 80033f6:	e0c1      	b.n	800357c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_B:
		EEPROM_write(corr_coeff_2_EEPROM_ADDRESS,float_to_binary(tmpx));
 80033f8:	68f8      	ldr	r0, [r7, #12]
 80033fa:	f000 f9b6 	bl	800376a <float_to_binary>
 80033fe:	4603      	mov	r3, r0
 8003400:	4619      	mov	r1, r3
 8003402:	2018      	movs	r0, #24
 8003404:	f000 f9f0 	bl	80037e8 <EEPROM_write>
		break;
 8003408:	e0b8      	b.n	800357c <cmd_CAL+0x1f4>
	case DAC_CAL_POLY_C:
		EEPROM_write(corr_coeff_3_EEPROM_ADDRESS,float_to_binary(tmpx));
 800340a:	68f8      	ldr	r0, [r7, #12]
 800340c:	f000 f9ad 	bl	800376a <float_to_binary>
 8003410:	4603      	mov	r3, r0
 8003412:	4619      	mov	r1, r3
 8003414:	2020      	movs	r0, #32
 8003416:	f000 f9e7 	bl	80037e8 <EEPROM_write>
		break;
 800341a:	e0af      	b.n	800357c <cmd_CAL+0x1f4>

	case GAIN_X2_CAL:
		if((tmpx<2.1 && tmpx>1.9))
 800341c:	68f8      	ldr	r0, [r7, #12]
 800341e:	f7fd f825 	bl	800046c <__aeabi_f2d>
 8003422:	a35b      	add	r3, pc, #364	; (adr r3, 8003590 <cmd_CAL+0x208>)
 8003424:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003428:	f7fd faea 	bl	8000a00 <__aeabi_dcmplt>
 800342c:	4603      	mov	r3, r0
 800342e:	2b00      	cmp	r3, #0
 8003430:	d013      	beq.n	800345a <cmd_CAL+0xd2>
 8003432:	68f8      	ldr	r0, [r7, #12]
 8003434:	f7fd f81a 	bl	800046c <__aeabi_f2d>
 8003438:	a357      	add	r3, pc, #348	; (adr r3, 8003598 <cmd_CAL+0x210>)
 800343a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800343e:	f7fd fafd 	bl	8000a3c <__aeabi_dcmpgt>
 8003442:	4603      	mov	r3, r0
 8003444:	2b00      	cmp	r3, #0
 8003446:	d008      	beq.n	800345a <cmd_CAL+0xd2>
		{
			EEPROM_write(gain_x2_EEPROM_ADDRESS,float_to_binary(tmpx));
 8003448:	68f8      	ldr	r0, [r7, #12]
 800344a:	f000 f98e 	bl	800376a <float_to_binary>
 800344e:	4603      	mov	r3, r0
 8003450:	4619      	mov	r1, r3
 8003452:	2028      	movs	r0, #40	; 0x28
 8003454:	f000 f9c8 	bl	80037e8 <EEPROM_write>
		}
		else return 0;
		break;
 8003458:	e090      	b.n	800357c <cmd_CAL+0x1f4>
		else return 0;
 800345a:	2300      	movs	r3, #0
 800345c:	e091      	b.n	8003582 <cmd_CAL+0x1fa>
	case GAIN_X4_CAL:
		if((tmpx<4.1 && tmpx>3.9))
 800345e:	68f8      	ldr	r0, [r7, #12]
 8003460:	f7fd f804 	bl	800046c <__aeabi_f2d>
 8003464:	a34e      	add	r3, pc, #312	; (adr r3, 80035a0 <cmd_CAL+0x218>)
 8003466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800346a:	f7fd fac9 	bl	8000a00 <__aeabi_dcmplt>
 800346e:	4603      	mov	r3, r0
 8003470:	2b00      	cmp	r3, #0
 8003472:	d013      	beq.n	800349c <cmd_CAL+0x114>
 8003474:	68f8      	ldr	r0, [r7, #12]
 8003476:	f7fc fff9 	bl	800046c <__aeabi_f2d>
 800347a:	a34b      	add	r3, pc, #300	; (adr r3, 80035a8 <cmd_CAL+0x220>)
 800347c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003480:	f7fd fadc 	bl	8000a3c <__aeabi_dcmpgt>
 8003484:	4603      	mov	r3, r0
 8003486:	2b00      	cmp	r3, #0
 8003488:	d008      	beq.n	800349c <cmd_CAL+0x114>
		{
			EEPROM_write(gain_x4_EEPROM_ADDRESS,float_to_binary(tmpx));
 800348a:	68f8      	ldr	r0, [r7, #12]
 800348c:	f000 f96d 	bl	800376a <float_to_binary>
 8003490:	4603      	mov	r3, r0
 8003492:	4619      	mov	r1, r3
 8003494:	2030      	movs	r0, #48	; 0x30
 8003496:	f000 f9a7 	bl	80037e8 <EEPROM_write>
		}
		else return 0;
		break;
 800349a:	e06f      	b.n	800357c <cmd_CAL+0x1f4>
		else return 0;
 800349c:	2300      	movs	r3, #0
 800349e:	e070      	b.n	8003582 <cmd_CAL+0x1fa>
	case DAC_CAL_TOP:
		if((tmpx<10.1 && tmpx>9.9) || (tmpx>6.8 && tmpx<7.1))
 80034a0:	68f8      	ldr	r0, [r7, #12]
 80034a2:	f7fc ffe3 	bl	800046c <__aeabi_f2d>
 80034a6:	a342      	add	r3, pc, #264	; (adr r3, 80035b0 <cmd_CAL+0x228>)
 80034a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034ac:	f7fd faa8 	bl	8000a00 <__aeabi_dcmplt>
 80034b0:	4603      	mov	r3, r0
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d00a      	beq.n	80034cc <cmd_CAL+0x144>
 80034b6:	68f8      	ldr	r0, [r7, #12]
 80034b8:	f7fc ffd8 	bl	800046c <__aeabi_f2d>
 80034bc:	a33e      	add	r3, pc, #248	; (adr r3, 80035b8 <cmd_CAL+0x230>)
 80034be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034c2:	f7fd fabb 	bl	8000a3c <__aeabi_dcmpgt>
 80034c6:	4603      	mov	r3, r0
 80034c8:	2b00      	cmp	r3, #0
 80034ca:	d115      	bne.n	80034f8 <cmd_CAL+0x170>
 80034cc:	68f8      	ldr	r0, [r7, #12]
 80034ce:	f7fc ffcd 	bl	800046c <__aeabi_f2d>
 80034d2:	a33b      	add	r3, pc, #236	; (adr r3, 80035c0 <cmd_CAL+0x238>)
 80034d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034d8:	f7fd fab0 	bl	8000a3c <__aeabi_dcmpgt>
 80034dc:	4603      	mov	r3, r0
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d013      	beq.n	800350a <cmd_CAL+0x182>
 80034e2:	68f8      	ldr	r0, [r7, #12]
 80034e4:	f7fc ffc2 	bl	800046c <__aeabi_f2d>
 80034e8:	a337      	add	r3, pc, #220	; (adr r3, 80035c8 <cmd_CAL+0x240>)
 80034ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034ee:	f7fd fa87 	bl	8000a00 <__aeabi_dcmplt>
 80034f2:	4603      	mov	r3, r0
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d008      	beq.n	800350a <cmd_CAL+0x182>
		{
			EEPROM_write(cal_DAC_up_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 80034f8:	68f8      	ldr	r0, [r7, #12]
 80034fa:	f000 f936 	bl	800376a <float_to_binary>
 80034fe:	4603      	mov	r3, r0
 8003500:	4619      	mov	r1, r3
 8003502:	2000      	movs	r0, #0
 8003504:	f000 f970 	bl	80037e8 <EEPROM_write>
		}
		else return 0;
		break;
 8003508:	e038      	b.n	800357c <cmd_CAL+0x1f4>
		else return 0;
 800350a:	2300      	movs	r3, #0
 800350c:	e039      	b.n	8003582 <cmd_CAL+0x1fa>
	case DAC_CAL_DOWN:
		if((tmpx>-10.1 && tmpx<-9.9) || (tmpx<-6.8 && tmpx>-7.1))
 800350e:	68f8      	ldr	r0, [r7, #12]
 8003510:	f7fc ffac 	bl	800046c <__aeabi_f2d>
 8003514:	a32e      	add	r3, pc, #184	; (adr r3, 80035d0 <cmd_CAL+0x248>)
 8003516:	e9d3 2300 	ldrd	r2, r3, [r3]
 800351a:	f7fd fa8f 	bl	8000a3c <__aeabi_dcmpgt>
 800351e:	4603      	mov	r3, r0
 8003520:	2b00      	cmp	r3, #0
 8003522:	d00a      	beq.n	800353a <cmd_CAL+0x1b2>
 8003524:	68f8      	ldr	r0, [r7, #12]
 8003526:	f7fc ffa1 	bl	800046c <__aeabi_f2d>
 800352a:	a32b      	add	r3, pc, #172	; (adr r3, 80035d8 <cmd_CAL+0x250>)
 800352c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003530:	f7fd fa66 	bl	8000a00 <__aeabi_dcmplt>
 8003534:	4603      	mov	r3, r0
 8003536:	2b00      	cmp	r3, #0
 8003538:	d115      	bne.n	8003566 <cmd_CAL+0x1de>
 800353a:	68f8      	ldr	r0, [r7, #12]
 800353c:	f7fc ff96 	bl	800046c <__aeabi_f2d>
 8003540:	a327      	add	r3, pc, #156	; (adr r3, 80035e0 <cmd_CAL+0x258>)
 8003542:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003546:	f7fd fa5b 	bl	8000a00 <__aeabi_dcmplt>
 800354a:	4603      	mov	r3, r0
 800354c:	2b00      	cmp	r3, #0
 800354e:	d013      	beq.n	8003578 <cmd_CAL+0x1f0>
 8003550:	68f8      	ldr	r0, [r7, #12]
 8003552:	f7fc ff8b 	bl	800046c <__aeabi_f2d>
 8003556:	a324      	add	r3, pc, #144	; (adr r3, 80035e8 <cmd_CAL+0x260>)
 8003558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800355c:	f7fd fa6e 	bl	8000a3c <__aeabi_dcmpgt>
 8003560:	4603      	mov	r3, r0
 8003562:	2b00      	cmp	r3, #0
 8003564:	d008      	beq.n	8003578 <cmd_CAL+0x1f0>
		{
			EEPROM_write(cal_DAC_down_voltage_EEPROM_ADDRESS,float_to_binary(tmpx)); // Write top voltage calibration to EEPROM in uV value
 8003566:	68f8      	ldr	r0, [r7, #12]
 8003568:	f000 f8ff 	bl	800376a <float_to_binary>
 800356c:	4603      	mov	r3, r0
 800356e:	4619      	mov	r1, r3
 8003570:	2008      	movs	r0, #8
 8003572:	f000 f939 	bl	80037e8 <EEPROM_write>
		}
		else return 0;
		break;
 8003576:	e001      	b.n	800357c <cmd_CAL+0x1f4>
		else return 0;
 8003578:	2300      	movs	r3, #0
 800357a:	e002      	b.n	8003582 <cmd_CAL+0x1fa>
	}

	load_data_from_EEPROM();
 800357c:	f000 f83c 	bl	80035f8 <load_data_from_EEPROM>
	return 1;
 8003580:	2301      	movs	r3, #1
}
 8003582:	4618      	mov	r0, r3
 8003584:	3710      	adds	r7, #16
 8003586:	46bd      	mov	sp, r7
 8003588:	bd80      	pop	{r7, pc}
 800358a:	bf00      	nop
 800358c:	f3af 8000 	nop.w
 8003590:	cccccccd 	.word	0xcccccccd
 8003594:	4000cccc 	.word	0x4000cccc
 8003598:	66666666 	.word	0x66666666
 800359c:	3ffe6666 	.word	0x3ffe6666
 80035a0:	66666666 	.word	0x66666666
 80035a4:	40106666 	.word	0x40106666
 80035a8:	33333333 	.word	0x33333333
 80035ac:	400f3333 	.word	0x400f3333
 80035b0:	33333333 	.word	0x33333333
 80035b4:	40243333 	.word	0x40243333
 80035b8:	cccccccd 	.word	0xcccccccd
 80035bc:	4023cccc 	.word	0x4023cccc
 80035c0:	33333333 	.word	0x33333333
 80035c4:	401b3333 	.word	0x401b3333
 80035c8:	66666666 	.word	0x66666666
 80035cc:	401c6666 	.word	0x401c6666
 80035d0:	33333333 	.word	0x33333333
 80035d4:	c0243333 	.word	0xc0243333
 80035d8:	cccccccd 	.word	0xcccccccd
 80035dc:	c023cccc 	.word	0xc023cccc
 80035e0:	33333333 	.word	0x33333333
 80035e4:	c01b3333 	.word	0xc01b3333
 80035e8:	66666666 	.word	0x66666666
 80035ec:	c01c6666 	.word	0xc01c6666
 80035f0:	2000001d 	.word	0x2000001d
 80035f4:	0007ffff 	.word	0x0007ffff

080035f8 <load_data_from_EEPROM>:
//==============================================================================================


//==============================================================================================
void load_data_from_EEPROM(void)
{
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b082      	sub	sp, #8
 80035fc:	af00      	add	r7, sp, #0
	uint32_t addr_i,addr_hex;
	cal_DAC_up_voltage=binary_to_float(EEPROM_read(cal_DAC_up_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 80035fe:	2000      	movs	r0, #0
 8003600:	f000 f8d8 	bl	80037b4 <EEPROM_read>
 8003604:	4603      	mov	r3, r0
 8003606:	4618      	mov	r0, r3
 8003608:	f000 f89c 	bl	8003744 <binary_to_float>
 800360c:	4603      	mov	r3, r0
 800360e:	4a34      	ldr	r2, [pc, #208]	; (80036e0 <load_data_from_EEPROM+0xe8>)
 8003610:	6013      	str	r3, [r2, #0]
	cal_DAC_down_voltage=binary_to_float(EEPROM_read(cal_DAC_down_voltage_EEPROM_ADDRESS)); // Read top voltage calibration from EEPROM in uV value
 8003612:	2008      	movs	r0, #8
 8003614:	f000 f8ce 	bl	80037b4 <EEPROM_read>
 8003618:	4603      	mov	r3, r0
 800361a:	4618      	mov	r0, r3
 800361c:	f000 f892 	bl	8003744 <binary_to_float>
 8003620:	4603      	mov	r3, r0
 8003622:	4a30      	ldr	r2, [pc, #192]	; (80036e4 <load_data_from_EEPROM+0xec>)
 8003624:	6013      	str	r3, [r2, #0]
	DAC_fullrange_voltage=cal_DAC_up_voltage-cal_DAC_down_voltage;
 8003626:	4b2e      	ldr	r3, [pc, #184]	; (80036e0 <load_data_from_EEPROM+0xe8>)
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	4a2e      	ldr	r2, [pc, #184]	; (80036e4 <load_data_from_EEPROM+0xec>)
 800362c:	6812      	ldr	r2, [r2, #0]
 800362e:	4611      	mov	r1, r2
 8003630:	4618      	mov	r0, r3
 8003632:	f7fd fabf 	bl	8000bb4 <__aeabi_fsub>
 8003636:	4603      	mov	r3, r0
 8003638:	461a      	mov	r2, r3
 800363a:	4b2b      	ldr	r3, [pc, #172]	; (80036e8 <load_data_from_EEPROM+0xf0>)
 800363c:	601a      	str	r2, [r3, #0]

	corr_coeff_1=binary_to_float(EEPROM_read(corr_coeff_1_EEPROM_ADDRESS));
 800363e:	2010      	movs	r0, #16
 8003640:	f000 f8b8 	bl	80037b4 <EEPROM_read>
 8003644:	4603      	mov	r3, r0
 8003646:	4618      	mov	r0, r3
 8003648:	f000 f87c 	bl	8003744 <binary_to_float>
 800364c:	4603      	mov	r3, r0
 800364e:	4a27      	ldr	r2, [pc, #156]	; (80036ec <load_data_from_EEPROM+0xf4>)
 8003650:	6013      	str	r3, [r2, #0]
	corr_coeff_2=binary_to_float(EEPROM_read(corr_coeff_2_EEPROM_ADDRESS));
 8003652:	2018      	movs	r0, #24
 8003654:	f000 f8ae 	bl	80037b4 <EEPROM_read>
 8003658:	4603      	mov	r3, r0
 800365a:	4618      	mov	r0, r3
 800365c:	f000 f872 	bl	8003744 <binary_to_float>
 8003660:	4603      	mov	r3, r0
 8003662:	4a23      	ldr	r2, [pc, #140]	; (80036f0 <load_data_from_EEPROM+0xf8>)
 8003664:	6013      	str	r3, [r2, #0]
	corr_coeff_3=binary_to_float(EEPROM_read(corr_coeff_3_EEPROM_ADDRESS));
 8003666:	2020      	movs	r0, #32
 8003668:	f000 f8a4 	bl	80037b4 <EEPROM_read>
 800366c:	4603      	mov	r3, r0
 800366e:	4618      	mov	r0, r3
 8003670:	f000 f868 	bl	8003744 <binary_to_float>
 8003674:	4603      	mov	r3, r0
 8003676:	4a1f      	ldr	r2, [pc, #124]	; (80036f4 <load_data_from_EEPROM+0xfc>)
 8003678:	6013      	str	r3, [r2, #0]
	gain_x2_coeff=binary_to_float(EEPROM_read(gain_x2_EEPROM_ADDRESS));
 800367a:	2028      	movs	r0, #40	; 0x28
 800367c:	f000 f89a 	bl	80037b4 <EEPROM_read>
 8003680:	4603      	mov	r3, r0
 8003682:	4618      	mov	r0, r3
 8003684:	f000 f85e 	bl	8003744 <binary_to_float>
 8003688:	4603      	mov	r3, r0
 800368a:	4a1b      	ldr	r2, [pc, #108]	; (80036f8 <load_data_from_EEPROM+0x100>)
 800368c:	6013      	str	r3, [r2, #0]
	gain_x4_coeff=binary_to_float(EEPROM_read(gain_x4_EEPROM_ADDRESS));
 800368e:	2030      	movs	r0, #48	; 0x30
 8003690:	f000 f890 	bl	80037b4 <EEPROM_read>
 8003694:	4603      	mov	r3, r0
 8003696:	4618      	mov	r0, r3
 8003698:	f000 f854 	bl	8003744 <binary_to_float>
 800369c:	4603      	mov	r3, r0
 800369e:	4a17      	ldr	r2, [pc, #92]	; (80036fc <load_data_from_EEPROM+0x104>)
 80036a0:	6013      	str	r3, [r2, #0]

	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 80036a2:	2300      	movs	r3, #0
 80036a4:	607b      	str	r3, [r7, #4]
 80036a6:	e012      	b.n	80036ce <load_data_from_EEPROM+0xd6>
	{
		addr_hex=C_value_base_EEPROM_ADDRESS+(0x08*addr_i);
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	3307      	adds	r3, #7
 80036ac:	00db      	lsls	r3, r3, #3
 80036ae:	603b      	str	r3, [r7, #0]
		C_value[addr_i]=binary_to_float(EEPROM_read(addr_hex));
 80036b0:	6838      	ldr	r0, [r7, #0]
 80036b2:	f000 f87f 	bl	80037b4 <EEPROM_read>
 80036b6:	4603      	mov	r3, r0
 80036b8:	4618      	mov	r0, r3
 80036ba:	f000 f843 	bl	8003744 <binary_to_float>
 80036be:	4602      	mov	r2, r0
 80036c0:	490f      	ldr	r1, [pc, #60]	; (8003700 <load_data_from_EEPROM+0x108>)
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	for(addr_i=0; addr_i<C_value_max_count; addr_i++)
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	3301      	adds	r3, #1
 80036cc:	607b      	str	r3, [r7, #4]
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	2b09      	cmp	r3, #9
 80036d2:	d9e9      	bls.n	80036a8 <load_data_from_EEPROM+0xb0>
	}
}
 80036d4:	bf00      	nop
 80036d6:	bf00      	nop
 80036d8:	3708      	adds	r7, #8
 80036da:	46bd      	mov	sp, r7
 80036dc:	bd80      	pop	{r7, pc}
 80036de:	bf00      	nop
 80036e0:	20000774 	.word	0x20000774
 80036e4:	20000778 	.word	0x20000778
 80036e8:	20000770 	.word	0x20000770
 80036ec:	2000052c 	.word	0x2000052c
 80036f0:	20000530 	.word	0x20000530
 80036f4:	20000534 	.word	0x20000534
 80036f8:	20000538 	.word	0x20000538
 80036fc:	2000053c 	.word	0x2000053c
 8003700:	20000620 	.word	0x20000620

08003704 <write_c_value_to_EEPROM>:
//==============================================================================================


//==============================================================================================
void write_c_value_to_EEPROM(uint32_t addr_i, float value)
{
 8003704:	b580      	push	{r7, lr}
 8003706:	b084      	sub	sp, #16
 8003708:	af00      	add	r7, sp, #0
 800370a:	6078      	str	r0, [r7, #4]
 800370c:	6039      	str	r1, [r7, #0]
	uint32_t addr_hex=C_value_base_EEPROM_ADDRESS+(0x08*addr_i);
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	3307      	adds	r3, #7
 8003712:	00db      	lsls	r3, r3, #3
 8003714:	60fb      	str	r3, [r7, #12]

	if(addr_i>=C_value_max_count)return;
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	2b09      	cmp	r3, #9
 800371a:	d80d      	bhi.n	8003738 <write_c_value_to_EEPROM+0x34>

	C_value[addr_i]=value;
 800371c:	4908      	ldr	r1, [pc, #32]	; (8003740 <write_c_value_to_EEPROM+0x3c>)
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	683a      	ldr	r2, [r7, #0]
 8003722:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	EEPROM_write(addr_hex,float_to_binary(value));
 8003726:	6838      	ldr	r0, [r7, #0]
 8003728:	f000 f81f 	bl	800376a <float_to_binary>
 800372c:	4603      	mov	r3, r0
 800372e:	4619      	mov	r1, r3
 8003730:	68f8      	ldr	r0, [r7, #12]
 8003732:	f000 f859 	bl	80037e8 <EEPROM_write>
 8003736:	e000      	b.n	800373a <write_c_value_to_EEPROM+0x36>
	if(addr_i>=C_value_max_count)return;
 8003738:	bf00      	nop
}
 800373a:	3710      	adds	r7, #16
 800373c:	46bd      	mov	sp, r7
 800373e:	bd80      	pop	{r7, pc}
 8003740:	20000620 	.word	0x20000620

08003744 <binary_to_float>:
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC push_options
#pragma GCC optimize ("O0")

float binary_to_float(uint32_t a)
{
 8003744:	b480      	push	{r7}
 8003746:	b085      	sub	sp, #20
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
	int * p;
	float out=0;
 800374c:	f04f 0300 	mov.w	r3, #0
 8003750:	60bb      	str	r3, [r7, #8]

	p = &out;
 8003752:	f107 0308 	add.w	r3, r7, #8
 8003756:	60fb      	str	r3, [r7, #12]
	(*p)=a;
 8003758:	687a      	ldr	r2, [r7, #4]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	601a      	str	r2, [r3, #0]
	return out;
 800375e:	68bb      	ldr	r3, [r7, #8]
}
 8003760:	4618      	mov	r0, r3
 8003762:	3714      	adds	r7, #20
 8003764:	46bd      	mov	sp, r7
 8003766:	bc80      	pop	{r7}
 8003768:	4770      	bx	lr

0800376a <float_to_binary>:


uint32_t float_to_binary(float a)
{
 800376a:	b480      	push	{r7}
 800376c:	b087      	sub	sp, #28
 800376e:	af00      	add	r7, sp, #0
 8003770:	6078      	str	r0, [r7, #4]
	int i;
	int * p;
	uint32_t out=0;
 8003772:	2300      	movs	r3, #0
 8003774:	613b      	str	r3, [r7, #16]

	p = &a;
 8003776:	1d3b      	adds	r3, r7, #4
 8003778:	60fb      	str	r3, [r7, #12]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 800377a:	231f      	movs	r3, #31
 800377c:	617b      	str	r3, [r7, #20]
 800377e:	e010      	b.n	80037a2 <float_to_binary+0x38>
	{
		out+=((*p) >> i & 1)<<i;
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	681a      	ldr	r2, [r3, #0]
 8003784:	697b      	ldr	r3, [r7, #20]
 8003786:	fa42 f303 	asr.w	r3, r2, r3
 800378a:	f003 0201 	and.w	r2, r3, #1
 800378e:	697b      	ldr	r3, [r7, #20]
 8003790:	fa02 f303 	lsl.w	r3, r2, r3
 8003794:	461a      	mov	r2, r3
 8003796:	693b      	ldr	r3, [r7, #16]
 8003798:	4413      	add	r3, r2
 800379a:	613b      	str	r3, [r7, #16]
	for (i = sizeof(int) * 8 - 1; i >= 0; i--)
 800379c:	697b      	ldr	r3, [r7, #20]
 800379e:	3b01      	subs	r3, #1
 80037a0:	617b      	str	r3, [r7, #20]
 80037a2:	697b      	ldr	r3, [r7, #20]
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	daeb      	bge.n	8003780 <float_to_binary+0x16>
	}

	return out;
 80037a8:	693b      	ldr	r3, [r7, #16]
}
 80037aa:	4618      	mov	r0, r3
 80037ac:	371c      	adds	r7, #28
 80037ae:	46bd      	mov	sp, r7
 80037b0:	bc80      	pop	{r7}
 80037b2:	4770      	bx	lr

080037b4 <EEPROM_read>:
//==============================================================================================


//==============================================================================================
uint32_t EEPROM_read(uint32_t address_of_read)
{
 80037b4:	b480      	push	{r7}
 80037b6:	b085      	sub	sp, #20
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
	uint32_t Address;

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80037c2:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 80037c6:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	4a06      	ldr	r2, [pc, #24]	; (80037e4 <EEPROM_read+0x30>)
 80037cc:	4293      	cmp	r3, r2
 80037ce:	d301      	bcc.n	80037d4 <EEPROM_read+0x20>
	{
		return 0x00;
 80037d0:	2300      	movs	r3, #0
 80037d2:	e001      	b.n	80037d8 <EEPROM_read+0x24>
	}
	return *(__IO uint32_t *) Address;
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	681b      	ldr	r3, [r3, #0]
}
 80037d8:	4618      	mov	r0, r3
 80037da:	3714      	adds	r7, #20
 80037dc:	46bd      	mov	sp, r7
 80037de:	bc80      	pop	{r7}
 80037e0:	4770      	bx	lr
 80037e2:	bf00      	nop
 80037e4:	08082800 	.word	0x08082800

080037e8 <EEPROM_write>:
//==============================================================================================


//==============================================================================================
void EEPROM_write(uint32_t address_of_read, uint32_t data)
{
 80037e8:	b580      	push	{r7, lr}
 80037ea:	b084      	sub	sp, #16
 80037ec:	af00      	add	r7, sp, #0
 80037ee:	6078      	str	r0, [r7, #4]
 80037f0:	6039      	str	r1, [r7, #0]
	/* Clear all pending flags */
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR | FLASH_FLAG_OPTVERRUSR);

	/*  Data EEPROM Fast Word program of FAST_DATA_32 at addresses defined by
	     DATA_EEPROM_START_ADDR and DATA_EEPROM_END_ADDR */
	Address = DATA_EEPROM_START_ADDR + address_of_read;
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80037f8:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
 80037fc:	60fb      	str	r3, [r7, #12]
	if(Address > DATA_EEPROM_END_ADDR)
 80037fe:	68fb      	ldr	r3, [r7, #12]
 8003800:	4a0d      	ldr	r2, [pc, #52]	; (8003838 <EEPROM_write+0x50>)
 8003802:	4293      	cmp	r3, r2
 8003804:	d212      	bcs.n	800382c <EEPROM_write+0x44>
	{
		return;
	}

	HAL_FLASHEx_DATAEEPROM_Unlock();
 8003806:	f001 ffef 	bl	80057e8 <HAL_FLASHEx_DATAEEPROM_Unlock>
	FLASHStatus = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_WORD, Address, data);
 800380a:	683a      	ldr	r2, [r7, #0]
 800380c:	68f9      	ldr	r1, [r7, #12]
 800380e:	2002      	movs	r0, #2
 8003810:	f002 f806 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 8003814:	4603      	mov	r3, r0
 8003816:	72fb      	strb	r3, [r7, #11]
	HAL_FLASHEx_DATAEEPROM_Lock();
 8003818:	f001 fff8 	bl	800580c <HAL_FLASHEx_DATAEEPROM_Lock>

	if(FLASHStatus != HAL_OK)
 800381c:	7afb      	ldrb	r3, [r7, #11]
 800381e:	2b00      	cmp	r3, #0
 8003820:	d106      	bne.n	8003830 <EEPROM_write+0x48>
	{
		return;
	}
	//FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLASH_FLAG_SIZERR | FLASH_FLAG_OPTVERR);

	if(*(__IO uint32_t *) Address != data)
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	683a      	ldr	r2, [r7, #0]
 8003828:	429a      	cmp	r2, r3
 800382a:	e002      	b.n	8003832 <EEPROM_write+0x4a>
		return;
 800382c:	bf00      	nop
 800382e:	e000      	b.n	8003832 <EEPROM_write+0x4a>
		return;
 8003830:	bf00      	nop
	{
		return;
	}

}
 8003832:	3710      	adds	r7, #16
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}
 8003838:	08082800 	.word	0x08082800

0800383c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800383c:	b580      	push	{r7, lr}
 800383e:	b08a      	sub	sp, #40	; 0x28
 8003840:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003842:	f107 0314 	add.w	r3, r7, #20
 8003846:	2200      	movs	r2, #0
 8003848:	601a      	str	r2, [r3, #0]
 800384a:	605a      	str	r2, [r3, #4]
 800384c:	609a      	str	r2, [r3, #8]
 800384e:	60da      	str	r2, [r3, #12]
 8003850:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003852:	4b7c      	ldr	r3, [pc, #496]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003854:	69db      	ldr	r3, [r3, #28]
 8003856:	4a7b      	ldr	r2, [pc, #492]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003858:	f043 0304 	orr.w	r3, r3, #4
 800385c:	61d3      	str	r3, [r2, #28]
 800385e:	4b79      	ldr	r3, [pc, #484]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003860:	69db      	ldr	r3, [r3, #28]
 8003862:	f003 0304 	and.w	r3, r3, #4
 8003866:	613b      	str	r3, [r7, #16]
 8003868:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800386a:	4b76      	ldr	r3, [pc, #472]	; (8003a44 <MX_GPIO_Init+0x208>)
 800386c:	69db      	ldr	r3, [r3, #28]
 800386e:	4a75      	ldr	r2, [pc, #468]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003870:	f043 0320 	orr.w	r3, r3, #32
 8003874:	61d3      	str	r3, [r2, #28]
 8003876:	4b73      	ldr	r3, [pc, #460]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003878:	69db      	ldr	r3, [r3, #28]
 800387a:	f003 0320 	and.w	r3, r3, #32
 800387e:	60fb      	str	r3, [r7, #12]
 8003880:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003882:	4b70      	ldr	r3, [pc, #448]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003884:	69db      	ldr	r3, [r3, #28]
 8003886:	4a6f      	ldr	r2, [pc, #444]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003888:	f043 0301 	orr.w	r3, r3, #1
 800388c:	61d3      	str	r3, [r2, #28]
 800388e:	4b6d      	ldr	r3, [pc, #436]	; (8003a44 <MX_GPIO_Init+0x208>)
 8003890:	69db      	ldr	r3, [r3, #28]
 8003892:	f003 0301 	and.w	r3, r3, #1
 8003896:	60bb      	str	r3, [r7, #8]
 8003898:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800389a:	4b6a      	ldr	r3, [pc, #424]	; (8003a44 <MX_GPIO_Init+0x208>)
 800389c:	69db      	ldr	r3, [r3, #28]
 800389e:	4a69      	ldr	r2, [pc, #420]	; (8003a44 <MX_GPIO_Init+0x208>)
 80038a0:	f043 0302 	orr.w	r3, r3, #2
 80038a4:	61d3      	str	r3, [r2, #28]
 80038a6:	4b67      	ldr	r3, [pc, #412]	; (8003a44 <MX_GPIO_Init+0x208>)
 80038a8:	69db      	ldr	r3, [r3, #28]
 80038aa:	f003 0302 	and.w	r3, r3, #2
 80038ae:	607b      	str	r3, [r7, #4]
 80038b0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Count_EN_GPIO_Port, Count_EN_Pin, GPIO_PIN_RESET);
 80038b2:	2200      	movs	r2, #0
 80038b4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80038b8:	4863      	ldr	r0, [pc, #396]	; (8003a48 <MX_GPIO_Init+0x20c>)
 80038ba:	f002 f9af 	bl	8005c1c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Relay_cs_GPIO_Port, Relay_cs_Pin, GPIO_PIN_SET);
 80038be:	2201      	movs	r2, #1
 80038c0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80038c4:	4860      	ldr	r0, [pc, #384]	; (8003a48 <MX_GPIO_Init+0x20c>)
 80038c6:	f002 f9a9 	bl	8005c1c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 80038ca:	2201      	movs	r2, #1
 80038cc:	f248 011f 	movw	r1, #32799	; 0x801f
 80038d0:	485e      	ldr	r0, [pc, #376]	; (8003a4c <MX_GPIO_Init+0x210>)
 80038d2:	f002 f9a3 	bl	8005c1c <HAL_GPIO_WritePin>
                          |DAC_SYNC_Pin|DAC_CLR_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RS_Pin|Display_Power_Pin, GPIO_PIN_RESET);
 80038d6:	2200      	movs	r2, #0
 80038d8:	f640 0101 	movw	r1, #2049	; 0x801
 80038dc:	485c      	ldr	r0, [pc, #368]	; (8003a50 <MX_GPIO_Init+0x214>)
 80038de:	f002 f99d 	bl	8005c1c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|SPI2_NSS_Pin
 80038e2:	2201      	movs	r2, #1
 80038e4:	f241 413e 	movw	r1, #5182	; 0x143e
 80038e8:	4859      	ldr	r0, [pc, #356]	; (8003a50 <MX_GPIO_Init+0x214>)
 80038ea:	f002 f997 	bl	8005c1c <HAL_GPIO_WritePin>
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Start_button_Pin;
 80038ee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80038f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80038f4:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80038f8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80038fa:	2301      	movs	r3, #1
 80038fc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Start_button_GPIO_Port, &GPIO_InitStruct);
 80038fe:	f107 0314 	add.w	r3, r7, #20
 8003902:	4619      	mov	r1, r3
 8003904:	4850      	ldr	r0, [pc, #320]	; (8003a48 <MX_GPIO_Init+0x20c>)
 8003906:	f002 f899 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Count_EN_Pin;
 800390a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800390e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003910:	2301      	movs	r3, #1
 8003912:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003914:	2300      	movs	r3, #0
 8003916:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003918:	2302      	movs	r3, #2
 800391a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Count_EN_GPIO_Port, &GPIO_InitStruct);
 800391c:	f107 0314 	add.w	r3, r7, #20
 8003920:	4619      	mov	r1, r3
 8003922:	4849      	ldr	r0, [pc, #292]	; (8003a48 <MX_GPIO_Init+0x20c>)
 8003924:	f002 f88a 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Relay_cs_Pin;
 8003928:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800392c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800392e:	2301      	movs	r3, #1
 8003930:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003932:	2300      	movs	r3, #0
 8003934:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003936:	2303      	movs	r3, #3
 8003938:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Relay_cs_GPIO_Port, &GPIO_InitStruct);
 800393a:	f107 0314 	add.w	r3, r7, #20
 800393e:	4619      	mov	r1, r3
 8003940:	4841      	ldr	r0, [pc, #260]	; (8003a48 <MX_GPIO_Init+0x20c>)
 8003942:	f002 f87b 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin
                           PAPin */
  GPIO_InitStruct.Pin = Control_bus_0_Pin|Control_bus_1_Pin|Control_bus_2_Pin|Control_bus_3_Pin
 8003946:	f248 030f 	movw	r3, #32783	; 0x800f
 800394a:	617b      	str	r3, [r7, #20]
                          |DAC_CLR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800394c:	2301      	movs	r3, #1
 800394e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003950:	2300      	movs	r3, #0
 8003952:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003954:	2303      	movs	r3, #3
 8003956:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003958:	f107 0314 	add.w	r3, r7, #20
 800395c:	4619      	mov	r1, r3
 800395e:	483b      	ldr	r0, [pc, #236]	; (8003a4c <MX_GPIO_Init+0x210>)
 8003960:	f002 f86c 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_SYNC_Pin;
 8003964:	2310      	movs	r3, #16
 8003966:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003968:	2301      	movs	r3, #1
 800396a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800396c:	2301      	movs	r3, #1
 800396e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003970:	2303      	movs	r3, #3
 8003972:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DAC_SYNC_GPIO_Port, &GPIO_InitStruct);
 8003974:	f107 0314 	add.w	r3, r7, #20
 8003978:	4619      	mov	r1, r3
 800397a:	4834      	ldr	r0, [pc, #208]	; (8003a4c <MX_GPIO_Init+0x210>)
 800397c:	f002 f85e 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Display_RS_Pin;
 8003980:	2301      	movs	r3, #1
 8003982:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003984:	2301      	movs	r3, #1
 8003986:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003988:	2300      	movs	r3, #0
 800398a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800398c:	2302      	movs	r3, #2
 800398e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(Display_RS_GPIO_Port, &GPIO_InitStruct);
 8003990:	f107 0314 	add.w	r3, r7, #20
 8003994:	4619      	mov	r1, r3
 8003996:	482e      	ldr	r0, [pc, #184]	; (8003a50 <MX_GPIO_Init+0x214>)
 8003998:	f002 f850 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin
                           PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Display_RW_Pin|Display_DB4_Pin|Display_EN_Pin|Display_Power_Pin
 800399c:	f640 433e 	movw	r3, #3134	; 0xc3e
 80039a0:	617b      	str	r3, [r7, #20]
                          |Display_DB5_Pin|Display_DB6_Pin|Display_DB7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80039a2:	2311      	movs	r3, #17
 80039a4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039a6:	2300      	movs	r3, #0
 80039a8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80039aa:	2302      	movs	r3, #2
 80039ac:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80039ae:	f107 0314 	add.w	r3, r7, #20
 80039b2:	4619      	mov	r1, r3
 80039b4:	4826      	ldr	r0, [pc, #152]	; (8003a50 <MX_GPIO_Init+0x214>)
 80039b6:	f002 f841 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI2_NSS_Pin;
 80039ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80039be:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80039c0:	2301      	movs	r3, #1
 80039c2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80039c4:	2300      	movs	r3, #0
 80039c6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80039c8:	2303      	movs	r3, #3
 80039ca:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SPI2_NSS_GPIO_Port, &GPIO_InitStruct);
 80039cc:	f107 0314 	add.w	r3, r7, #20
 80039d0:	4619      	mov	r1, r3
 80039d2:	481f      	ldr	r0, [pc, #124]	; (8003a50 <MX_GPIO_Init+0x214>)
 80039d4:	f002 f832 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Encode_Push_Pin;
 80039d8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039dc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80039de:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80039e2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80039e4:	2301      	movs	r3, #1
 80039e6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Encode_Push_GPIO_Port, &GPIO_InitStruct);
 80039e8:	f107 0314 	add.w	r3, r7, #20
 80039ec:	4619      	mov	r1, r3
 80039ee:	4817      	ldr	r0, [pc, #92]	; (8003a4c <MX_GPIO_Init+0x210>)
 80039f0:	f002 f824 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = CPU_IRQ_Pin;
 80039f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80039f8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80039fa:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80039fe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a00:	2300      	movs	r3, #0
 8003a02:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(CPU_IRQ_GPIO_Port, &GPIO_InitStruct);
 8003a04:	f107 0314 	add.w	r3, r7, #20
 8003a08:	4619      	mov	r1, r3
 8003a0a:	4810      	ldr	r0, [pc, #64]	; (8003a4c <MX_GPIO_Init+0x210>)
 8003a0c:	f002 f816 	bl	8005a3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DAC_ALARM_Pin;
 8003a10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003a14:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003a16:	2300      	movs	r3, #0
 8003a18:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003a1a:	2301      	movs	r3, #1
 8003a1c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DAC_ALARM_GPIO_Port, &GPIO_InitStruct);
 8003a1e:	f107 0314 	add.w	r3, r7, #20
 8003a22:	4619      	mov	r1, r3
 8003a24:	4809      	ldr	r0, [pc, #36]	; (8003a4c <MX_GPIO_Init+0x210>)
 8003a26:	f002 f809 	bl	8005a3c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 8003a2a:	2200      	movs	r2, #0
 8003a2c:	2101      	movs	r1, #1
 8003a2e:	2028      	movs	r0, #40	; 0x28
 8003a30:	f001 fdc8 	bl	80055c4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8003a34:	2028      	movs	r0, #40	; 0x28
 8003a36:	f001 fe03 	bl	8005640 <HAL_NVIC_EnableIRQ>

}
 8003a3a:	bf00      	nop
 8003a3c:	3728      	adds	r7, #40	; 0x28
 8003a3e:	46bd      	mov	sp, r7
 8003a40:	bd80      	pop	{r7, pc}
 8003a42:	bf00      	nop
 8003a44:	40023800 	.word	0x40023800
 8003a48:	40020800 	.word	0x40020800
 8003a4c:	40020000 	.word	0x40020000
 8003a50:	40020400 	.word	0x40020400

08003a54 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8003a54:	b580      	push	{r7, lr}
 8003a56:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8003a58:	4b12      	ldr	r3, [pc, #72]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a5a:	4a13      	ldr	r2, [pc, #76]	; (8003aa8 <MX_I2C1_Init+0x54>)
 8003a5c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8003a5e:	4b11      	ldr	r3, [pc, #68]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a60:	4a12      	ldr	r2, [pc, #72]	; (8003aac <MX_I2C1_Init+0x58>)
 8003a62:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003a64:	4b0f      	ldr	r3, [pc, #60]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a66:	2200      	movs	r2, #0
 8003a68:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8003a6a:	4b0e      	ldr	r3, [pc, #56]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003a70:	4b0c      	ldr	r3, [pc, #48]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a72:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003a76:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003a78:	4b0a      	ldr	r3, [pc, #40]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8003a7e:	4b09      	ldr	r3, [pc, #36]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a80:	2200      	movs	r2, #0
 8003a82:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003a84:	4b07      	ldr	r3, [pc, #28]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a86:	2200      	movs	r2, #0
 8003a88:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003a8a:	4b06      	ldr	r3, [pc, #24]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a8c:	2200      	movs	r2, #0
 8003a8e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003a90:	4804      	ldr	r0, [pc, #16]	; (8003aa4 <MX_I2C1_Init+0x50>)
 8003a92:	f002 f8d3 	bl	8005c3c <HAL_I2C_Init>
 8003a96:	4603      	mov	r3, r0
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d001      	beq.n	8003aa0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003a9c:	f001 f888 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8003aa0:	bf00      	nop
 8003aa2:	bd80      	pop	{r7, pc}
 8003aa4:	20000690 	.word	0x20000690
 8003aa8:	40005400 	.word	0x40005400
 8003aac:	000186a0 	.word	0x000186a0

08003ab0 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8003ab0:	b580      	push	{r7, lr}
 8003ab2:	b08a      	sub	sp, #40	; 0x28
 8003ab4:	af00      	add	r7, sp, #0
 8003ab6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003ab8:	f107 0314 	add.w	r3, r7, #20
 8003abc:	2200      	movs	r2, #0
 8003abe:	601a      	str	r2, [r3, #0]
 8003ac0:	605a      	str	r2, [r3, #4]
 8003ac2:	609a      	str	r2, [r3, #8]
 8003ac4:	60da      	str	r2, [r3, #12]
 8003ac6:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	4a17      	ldr	r2, [pc, #92]	; (8003b2c <HAL_I2C_MspInit+0x7c>)
 8003ace:	4293      	cmp	r3, r2
 8003ad0:	d128      	bne.n	8003b24 <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003ad2:	4b17      	ldr	r3, [pc, #92]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003ad4:	69db      	ldr	r3, [r3, #28]
 8003ad6:	4a16      	ldr	r2, [pc, #88]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003ad8:	f043 0302 	orr.w	r3, r3, #2
 8003adc:	61d3      	str	r3, [r2, #28]
 8003ade:	4b14      	ldr	r3, [pc, #80]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003ae0:	69db      	ldr	r3, [r3, #28]
 8003ae2:	f003 0302 	and.w	r3, r3, #2
 8003ae6:	613b      	str	r3, [r7, #16]
 8003ae8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = TMP117_SCL_Pin|TMP117_SDA_Pin;
 8003aea:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003aee:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003af0:	2312      	movs	r3, #18
 8003af2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003af4:	2301      	movs	r3, #1
 8003af6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003af8:	2303      	movs	r3, #3
 8003afa:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003afc:	2304      	movs	r3, #4
 8003afe:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003b00:	f107 0314 	add.w	r3, r7, #20
 8003b04:	4619      	mov	r1, r3
 8003b06:	480b      	ldr	r0, [pc, #44]	; (8003b34 <HAL_I2C_MspInit+0x84>)
 8003b08:	f001 ff98 	bl	8005a3c <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003b0c:	4b08      	ldr	r3, [pc, #32]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003b0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b10:	4a07      	ldr	r2, [pc, #28]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003b12:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b16:	6253      	str	r3, [r2, #36]	; 0x24
 8003b18:	4b05      	ldr	r3, [pc, #20]	; (8003b30 <HAL_I2C_MspInit+0x80>)
 8003b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b20:	60fb      	str	r3, [r7, #12]
 8003b22:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8003b24:	bf00      	nop
 8003b26:	3728      	adds	r7, #40	; 0x28
 8003b28:	46bd      	mov	sp, r7
 8003b2a:	bd80      	pop	{r7, pc}
 8003b2c:	40005400 	.word	0x40005400
 8003b30:	40023800 	.word	0x40023800
 8003b34:	40020400 	.word	0x40020400

08003b38 <USB_rx_command_buffer_push_refd>:
uint8_t eta_hours,eta_minute,eta_second;

int16_t Enc_Counter = 0;
uint32_t Display_timeout=0;

CIRC_GBUF_DEF(uint8_t, USB_rx_command_buffer, 30);
 8003b38:	b580      	push	{r7, lr}
 8003b3a:	b082      	sub	sp, #8
 8003b3c:	af00      	add	r7, sp, #0
 8003b3e:	6078      	str	r0, [r7, #4]
 8003b40:	6879      	ldr	r1, [r7, #4]
 8003b42:	4804      	ldr	r0, [pc, #16]	; (8003b54 <USB_rx_command_buffer_push_refd+0x1c>)
 8003b44:	f7fd fd34 	bl	80015b0 <__circ_gbuf_push>
 8003b48:	4603      	mov	r3, r0
 8003b4a:	4618      	mov	r0, r3
 8003b4c:	3708      	adds	r7, #8
 8003b4e:	46bd      	mov	sp, r7
 8003b50:	bd80      	pop	{r7, pc}
 8003b52:	bf00      	nop
 8003b54:	20000000 	.word	0x20000000

08003b58 <USB_rx_command_buffer_pop_refd>:
 8003b58:	b580      	push	{r7, lr}
 8003b5a:	b082      	sub	sp, #8
 8003b5c:	af00      	add	r7, sp, #0
 8003b5e:	6078      	str	r0, [r7, #4]
 8003b60:	2200      	movs	r2, #0
 8003b62:	6879      	ldr	r1, [r7, #4]
 8003b64:	4803      	ldr	r0, [pc, #12]	; (8003b74 <USB_rx_command_buffer_pop_refd+0x1c>)
 8003b66:	f7fd fcd1 	bl	800150c <__circ_gbuf_pop>
 8003b6a:	4603      	mov	r3, r0
 8003b6c:	4618      	mov	r0, r3
 8003b6e:	3708      	adds	r7, #8
 8003b70:	46bd      	mov	sp, r7
 8003b72:	bd80      	pop	{r7, pc}
 8003b74:	20000000 	.word	0x20000000

08003b78 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003b78:	b590      	push	{r4, r7, lr}
 8003b7a:	b095      	sub	sp, #84	; 0x54
 8003b7c:	af12      	add	r7, sp, #72	; 0x48
  /* USER CODE BEGIN 1 */
	cfg.PDN=0; // DAC power up
 8003b7e:	4b9a      	ldr	r3, [pc, #616]	; (8003de8 <main+0x270>)
 8003b80:	2200      	movs	r2, #0
 8003b82:	721a      	strb	r2, [r3, #8]
	cfg.VREFVAL=0x08; // 20 V ± 1.25 V
 8003b84:	4b98      	ldr	r3, [pc, #608]	; (8003de8 <main+0x270>)
 8003b86:	2208      	movs	r2, #8
 8003b88:	71da      	strb	r2, [r3, #7]
	cfg.FSET=1; // Enhanced THD
 8003b8a:	4b97      	ldr	r3, [pc, #604]	; (8003de8 <main+0x270>)
 8003b8c:	2201      	movs	r2, #1
 8003b8e:	719a      	strb	r2, [r3, #6]
	cfg.DSDO=1; // SDO enabled
 8003b90:	4b95      	ldr	r3, [pc, #596]	; (8003de8 <main+0x270>)
 8003b92:	2201      	movs	r2, #1
 8003b94:	715a      	strb	r2, [r3, #5]
	cfg.ENALMP=0; // Indicates end of temperature calibration cycle. ALARM pin pulled low
 8003b96:	4b94      	ldr	r3, [pc, #592]	; (8003de8 <main+0x270>)
 8003b98:	2200      	movs	r2, #0
 8003b9a:	711a      	strb	r2, [r3, #4]
	cfg.FSDO=0; // Fast SDO disabled
 8003b9c:	4b92      	ldr	r3, [pc, #584]	; (8003de8 <main+0x270>)
 8003b9e:	2200      	movs	r2, #0
 8003ba0:	70da      	strb	r2, [r3, #3]
	cfg.LDACMODE=0; // DAC *NOT* updated on LDAC !!!!falling edge!!!!
 8003ba2:	4b91      	ldr	r3, [pc, #580]	; (8003de8 <main+0x270>)
 8003ba4:	2200      	movs	r2, #0
 8003ba6:	709a      	strb	r2, [r3, #2]
	cfg.TNH_MASK=0x00; // This bit is writable only when FSET = 0
 8003ba8:	4b8f      	ldr	r3, [pc, #572]	; (8003de8 <main+0x270>)
 8003baa:	2200      	movs	r2, #0
 8003bac:	705a      	strb	r2, [r3, #1]
	cfg.EN_TMP_CAL=0; // Temperature calibration feature enabled
 8003bae:	4b8e      	ldr	r3, [pc, #568]	; (8003de8 <main+0x270>)
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	701a      	strb	r2, [r3, #0]

	DAC_target_speed=0.1; //  V/s
 8003bb4:	4b8d      	ldr	r3, [pc, #564]	; (8003dec <main+0x274>)
 8003bb6:	4a8e      	ldr	r2, [pc, #568]	; (8003df0 <main+0x278>)
 8003bb8:	601a      	str	r2, [r3, #0]
	DAC_code=DAC_CODE_MIDDLE;
 8003bba:	4b8e      	ldr	r3, [pc, #568]	; (8003df4 <main+0x27c>)
 8003bbc:	4a8e      	ldr	r2, [pc, #568]	; (8003df8 <main+0x280>)
 8003bbe:	601a      	str	r2, [r3, #0]
	DAC_code_direction=DIRECTION_UP_STATE;
 8003bc0:	4b8e      	ldr	r3, [pc, #568]	; (8003dfc <main+0x284>)
 8003bc2:	2201      	movs	r2, #1
 8003bc4:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003bc6:	f001 fcb7 	bl	8005538 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003bca:	f000 f939 	bl	8003e40 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003bce:	f7ff fe35 	bl	800383c <MX_GPIO_Init>
  MX_SPI1_Init();
 8003bd2:	f000 fff3 	bl	8004bbc <MX_SPI1_Init>
  MX_SPI2_Init();
 8003bd6:	f001 f825 	bl	8004c24 <MX_SPI2_Init>
  MX_USB_DEVICE_Init();
 8003bda:	f006 fbc5 	bl	800a368 <MX_USB_DEVICE_Init>
  MX_TIM3_Init();
 8003bde:	f001 fa9b 	bl	8005118 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003be2:	f001 fae7 	bl	80051b4 <MX_TIM4_Init>
  MX_I2C1_Init();
 8003be6:	f7ff ff35 	bl	8003a54 <MX_I2C1_Init>
  MX_TIM2_Init();
 8003bea:	f001 fa49 	bl	8005080 <MX_TIM2_Init>

  /* Initialize interrupts */
  MX_NVIC_Init();
 8003bee:	f000 f973 	bl	8003ed8 <MX_NVIC_Init>
  /* USER CODE BEGIN 2 */

	init_LCD();
 8003bf2:	f7fe fcbd 	bl	8002570 <init_LCD>
  LcdUpdate();
  LcdClear_massive();
  HAL_Delay(3000); //WarmUP
	 */

	load_data_from_EEPROM();
 8003bf6:	f7ff fcff 	bl	80035f8 <load_data_from_EEPROM>
	TMP117_Initialization(hi2c1);
 8003bfa:	4c81      	ldr	r4, [pc, #516]	; (8003e00 <main+0x288>)
 8003bfc:	4668      	mov	r0, sp
 8003bfe:	f104 0310 	add.w	r3, r4, #16
 8003c02:	2244      	movs	r2, #68	; 0x44
 8003c04:	4619      	mov	r1, r3
 8003c06:	f006 ff21 	bl	800aa4c <memcpy>
 8003c0a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003c0e:	f001 fc15 	bl	800543c <TMP117_Initialization>
	DDS_Init();
 8003c12:	f7fe f8dd 	bl	8001dd0 <DDS_Init>
	DAC_SendInit();
 8003c16:	f7fd fea7 	bl	8001968 <DAC_SendInit>
	DAC_Write(DAC_code);
 8003c1a:	4b76      	ldr	r3, [pc, #472]	; (8003df4 <main+0x27c>)
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	4618      	mov	r0, r3
 8003c20:	f7fd fe62 	bl	80018e8 <DAC_Write>

	HAL_TIM_Base_Start_IT(&htim3);
 8003c24:	4877      	ldr	r0, [pc, #476]	; (8003e04 <main+0x28c>)
 8003c26:	f004 fd43 	bl	80086b0 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim2);
 8003c2a:	4877      	ldr	r0, [pc, #476]	; (8003e08 <main+0x290>)
 8003c2c:	f004 fd40 	bl	80086b0 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8003c30:	213c      	movs	r1, #60	; 0x3c
 8003c32:	4876      	ldr	r0, [pc, #472]	; (8003e0c <main+0x294>)
 8003c34:	f004 fde4 	bl	8008800 <HAL_TIM_Encoder_Start>


	output_state(Output_off_STATE);
 8003c38:	2000      	movs	r0, #0
 8003c3a:	f7fe fda3 	bl	8002784 <output_state>
	CPLD_control(CPLD_OFF_STATE);
 8003c3e:	2000      	movs	r0, #0
 8003c40:	f7fd fdbe 	bl	80017c0 <CPLD_control>

	send_answer_to_CDC(CLEAR_TYPE_1);
 8003c44:	2004      	movs	r0, #4
 8003c46:	f7ff f8b5 	bl	8002db4 <send_answer_to_CDC>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		if(USB_CDC_End_Line_Received)
 8003c4a:	4b71      	ldr	r3, [pc, #452]	; (8003e10 <main+0x298>)
 8003c4c:	781b      	ldrb	r3, [r3, #0]
 8003c4e:	b2db      	uxtb	r3, r3
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d062      	beq.n	8003d1a <main+0x1a2>
		{
			uint8_t i=0,x=0;
 8003c54:	2300      	movs	r3, #0
 8003c56:	71fb      	strb	r3, [r7, #7]
 8003c58:	2300      	movs	r3, #0
 8003c5a:	71bb      	strb	r3, [r7, #6]
			USB_CDC_End_Line_Received=0;
 8003c5c:	4b6c      	ldr	r3, [pc, #432]	; (8003e10 <main+0x298>)
 8003c5e:	2200      	movs	r2, #0
 8003c60:	701a      	strb	r2, [r3, #0]
			while (1) {
				if (i>=command_buffer_len) break;
 8003c62:	79fb      	ldrb	r3, [r7, #7]
 8003c64:	2b3f      	cmp	r3, #63	; 0x3f
 8003c66:	d81a      	bhi.n	8003c9e <main+0x126>
				if (CIRC_GBUF_POP(USB_rx_command_buffer,&command_buffer[i])) command_buffer[i]='\n';
 8003c68:	79fb      	ldrb	r3, [r7, #7]
 8003c6a:	4a6a      	ldr	r2, [pc, #424]	; (8003e14 <main+0x29c>)
 8003c6c:	4413      	add	r3, r2
 8003c6e:	4618      	mov	r0, r3
 8003c70:	f7ff ff72 	bl	8003b58 <USB_rx_command_buffer_pop_refd>
 8003c74:	4603      	mov	r3, r0
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d003      	beq.n	8003c82 <main+0x10a>
 8003c7a:	79fb      	ldrb	r3, [r7, #7]
 8003c7c:	4a65      	ldr	r2, [pc, #404]	; (8003e14 <main+0x29c>)
 8003c7e:	210a      	movs	r1, #10
 8003c80:	54d1      	strb	r1, [r2, r3]
				if (command_buffer[i]=='\n' || command_buffer[i]=='\r') break;
 8003c82:	79fb      	ldrb	r3, [r7, #7]
 8003c84:	4a63      	ldr	r2, [pc, #396]	; (8003e14 <main+0x29c>)
 8003c86:	5cd3      	ldrb	r3, [r2, r3]
 8003c88:	2b0a      	cmp	r3, #10
 8003c8a:	d009      	beq.n	8003ca0 <main+0x128>
 8003c8c:	79fb      	ldrb	r3, [r7, #7]
 8003c8e:	4a61      	ldr	r2, [pc, #388]	; (8003e14 <main+0x29c>)
 8003c90:	5cd3      	ldrb	r3, [r2, r3]
 8003c92:	2b0d      	cmp	r3, #13
 8003c94:	d004      	beq.n	8003ca0 <main+0x128>
				i++;
 8003c96:	79fb      	ldrb	r3, [r7, #7]
 8003c98:	3301      	adds	r3, #1
 8003c9a:	71fb      	strb	r3, [r7, #7]
				if (i>=command_buffer_len) break;
 8003c9c:	e7e1      	b.n	8003c62 <main+0xea>
 8003c9e:	bf00      	nop
			}
			i=0;
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	71fb      	strb	r3, [r7, #7]
			x=0;
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	71bb      	strb	r3, [r7, #6]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003ca8:	e017      	b.n	8003cda <main+0x162>
			{
				if (command_buffer[i]=='\177') // Backspace
 8003caa:	79fb      	ldrb	r3, [r7, #7]
 8003cac:	4a59      	ldr	r2, [pc, #356]	; (8003e14 <main+0x29c>)
 8003cae:	5cd3      	ldrb	r3, [r2, r3]
 8003cb0:	2b7f      	cmp	r3, #127	; 0x7f
 8003cb2:	d106      	bne.n	8003cc2 <main+0x14a>
				{
					if(x>0)x--;
 8003cb4:	79bb      	ldrb	r3, [r7, #6]
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d00c      	beq.n	8003cd4 <main+0x15c>
 8003cba:	79bb      	ldrb	r3, [r7, #6]
 8003cbc:	3b01      	subs	r3, #1
 8003cbe:	71bb      	strb	r3, [r7, #6]
 8003cc0:	e008      	b.n	8003cd4 <main+0x15c>
				}
				else
				{
					command_buffer[x]=command_buffer[i];
 8003cc2:	79fa      	ldrb	r2, [r7, #7]
 8003cc4:	79bb      	ldrb	r3, [r7, #6]
 8003cc6:	4953      	ldr	r1, [pc, #332]	; (8003e14 <main+0x29c>)
 8003cc8:	5c89      	ldrb	r1, [r1, r2]
 8003cca:	4a52      	ldr	r2, [pc, #328]	; (8003e14 <main+0x29c>)
 8003ccc:	54d1      	strb	r1, [r2, r3]
					x++;
 8003cce:	79bb      	ldrb	r3, [r7, #6]
 8003cd0:	3301      	adds	r3, #1
 8003cd2:	71bb      	strb	r3, [r7, #6]
				}
				i++;
 8003cd4:	79fb      	ldrb	r3, [r7, #7]
 8003cd6:	3301      	adds	r3, #1
 8003cd8:	71fb      	strb	r3, [r7, #7]
			while (command_buffer[i]!='\0' && i<command_buffer_len)
 8003cda:	79fb      	ldrb	r3, [r7, #7]
 8003cdc:	4a4d      	ldr	r2, [pc, #308]	; (8003e14 <main+0x29c>)
 8003cde:	5cd3      	ldrb	r3, [r2, r3]
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d00a      	beq.n	8003cfa <main+0x182>
 8003ce4:	79fb      	ldrb	r3, [r7, #7]
 8003ce6:	2b3f      	cmp	r3, #63	; 0x3f
 8003ce8:	d9df      	bls.n	8003caa <main+0x132>
			}
			while (x<command_buffer_len)
 8003cea:	e006      	b.n	8003cfa <main+0x182>
			{
				command_buffer[x]='\0';
 8003cec:	79bb      	ldrb	r3, [r7, #6]
 8003cee:	4a49      	ldr	r2, [pc, #292]	; (8003e14 <main+0x29c>)
 8003cf0:	2100      	movs	r1, #0
 8003cf2:	54d1      	strb	r1, [r2, r3]
				x++;
 8003cf4:	79bb      	ldrb	r3, [r7, #6]
 8003cf6:	3301      	adds	r3, #1
 8003cf8:	71bb      	strb	r3, [r7, #6]
			while (x<command_buffer_len)
 8003cfa:	79bb      	ldrb	r3, [r7, #6]
 8003cfc:	2b3f      	cmp	r3, #63	; 0x3f
 8003cfe:	d9f5      	bls.n	8003cec <main+0x174>
			}
			command_buffer[command_buffer_len-1]='\0';
 8003d00:	4b44      	ldr	r3, [pc, #272]	; (8003e14 <main+0x29c>)
 8003d02:	2200      	movs	r2, #0
 8003d04:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f

			Parsing_USB_command();
 8003d08:	f000 f91e 	bl	8003f48 <Parsing_USB_command>
			if(Display_status==0)Display_need_wakeup=1;
 8003d0c:	4b42      	ldr	r3, [pc, #264]	; (8003e18 <main+0x2a0>)
 8003d0e:	781b      	ldrb	r3, [r3, #0]
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	d102      	bne.n	8003d1a <main+0x1a2>
 8003d14:	4b41      	ldr	r3, [pc, #260]	; (8003e1c <main+0x2a4>)
 8003d16:	2201      	movs	r2, #1
 8003d18:	701a      	strb	r2, [r3, #0]
		}

		if(Need_update_DDS)
 8003d1a:	4b41      	ldr	r3, [pc, #260]	; (8003e20 <main+0x2a8>)
 8003d1c:	781b      	ldrb	r3, [r3, #0]
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d00d      	beq.n	8003d3e <main+0x1c6>
		{
			if(Ramp_dac_step_complete)
 8003d22:	4b40      	ldr	r3, [pc, #256]	; (8003e24 <main+0x2ac>)
 8003d24:	781b      	ldrb	r3, [r3, #0]
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d007      	beq.n	8003d3a <main+0x1c2>
			{
				DDS_Update();
 8003d2a:	f7fe f92d 	bl	8001f88 <DDS_Update>
				Need_update_DDS=0;
 8003d2e:	4b3c      	ldr	r3, [pc, #240]	; (8003e20 <main+0x2a8>)
 8003d30:	2200      	movs	r2, #0
 8003d32:	701a      	strb	r2, [r3, #0]
				Ramp_dac_step_complete=0;
 8003d34:	4b3b      	ldr	r3, [pc, #236]	; (8003e24 <main+0x2ac>)
 8003d36:	2200      	movs	r2, #0
 8003d38:	701a      	strb	r2, [r3, #0]
			}
			DDS_Calculation();
 8003d3a:	f7fd ff0d 	bl	8001b58 <DDS_Calculation>
			//Recalculate_ramp_speed(SWEEP_MODE);

		}
		if(Need_update_Display && Display_status)
 8003d3e:	4b3a      	ldr	r3, [pc, #232]	; (8003e28 <main+0x2b0>)
 8003d40:	781b      	ldrb	r3, [r3, #0]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d01e      	beq.n	8003d84 <main+0x20c>
 8003d46:	4b34      	ldr	r3, [pc, #208]	; (8003e18 <main+0x2a0>)
 8003d48:	781b      	ldrb	r3, [r3, #0]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d01a      	beq.n	8003d84 <main+0x20c>
		{
			switch(mode)
 8003d4e:	4b37      	ldr	r3, [pc, #220]	; (8003e2c <main+0x2b4>)
 8003d50:	781b      	ldrb	r3, [r3, #0]
 8003d52:	2b05      	cmp	r3, #5
 8003d54:	d00e      	beq.n	8003d74 <main+0x1fc>
 8003d56:	2b05      	cmp	r3, #5
 8003d58:	dc10      	bgt.n	8003d7c <main+0x204>
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d002      	beq.n	8003d64 <main+0x1ec>
 8003d5e:	2b04      	cmp	r3, #4
 8003d60:	d004      	beq.n	8003d6c <main+0x1f4>
 8003d62:	e00b      	b.n	8003d7c <main+0x204>
			{
			//----------------------------------------------------------//
			case dU_dt_SCREEN:
				display_screen(dU_dt_SCREEN);
 8003d64:	2000      	movs	r0, #0
 8003d66:	f7fe fe1f 	bl	80029a8 <display_screen>
			break;
 8003d6a:	e007      	b.n	8003d7c <main+0x204>
			case AMP_SCREEN:
				display_screen(AMP_SCREEN);
 8003d6c:	2004      	movs	r0, #4
 8003d6e:	f7fe fe1b 	bl	80029a8 <display_screen>
			break;
 8003d72:	e003      	b.n	8003d7c <main+0x204>
			case VOLT_SCREEN:
				display_screen(VOLT_SCREEN);
 8003d74:	2005      	movs	r0, #5
 8003d76:	f7fe fe17 	bl	80029a8 <display_screen>
			break;
 8003d7a:	bf00      	nop
			}

			LcdUpdate();
 8003d7c:	f7fe f9cc 	bl	8002118 <LcdUpdate>
			LcdClear_massive();
 8003d80:	f7fe fa04 	bl	800218c <LcdClear_massive>
		}
		if(Display_need_wakeup)
 8003d84:	4b25      	ldr	r3, [pc, #148]	; (8003e1c <main+0x2a4>)
 8003d86:	781b      	ldrb	r3, [r3, #0]
 8003d88:	2b00      	cmp	r3, #0
 8003d8a:	d00b      	beq.n	8003da4 <main+0x22c>
		{
			Display_need_wakeup=0;
 8003d8c:	4b23      	ldr	r3, [pc, #140]	; (8003e1c <main+0x2a4>)
 8003d8e:	2200      	movs	r2, #0
 8003d90:	701a      	strb	r2, [r3, #0]
			Poweron_LCD();
 8003d92:	f7fe fbdb 	bl	800254c <Poweron_LCD>
			Display_timeout=0;
 8003d96:	4b26      	ldr	r3, [pc, #152]	; (8003e30 <main+0x2b8>)
 8003d98:	2200      	movs	r2, #0
 8003d9a:	601a      	str	r2, [r3, #0]
			Need_update_Display=1;
 8003d9c:	4b22      	ldr	r3, [pc, #136]	; (8003e28 <main+0x2b0>)
 8003d9e:	2201      	movs	r2, #1
 8003da0:	701a      	strb	r2, [r3, #0]
 8003da2:	e752      	b.n	8003c4a <main+0xd2>
		} else
		{
			if(Display_status==1) // If display on
 8003da4:	4b1c      	ldr	r3, [pc, #112]	; (8003e18 <main+0x2a0>)
 8003da6:	781b      	ldrb	r3, [r3, #0]
 8003da8:	2b01      	cmp	r3, #1
 8003daa:	d119      	bne.n	8003de0 <main+0x268>
			{
				// 1 hour timeout if output is off
				// 1 day timeout if output is on
				if((Display_timeout>72000 && Current_output_status==Output_off_STATE) || (Display_timeout>1728000 && Current_output_status!=Output_off_STATE))
 8003dac:	4b20      	ldr	r3, [pc, #128]	; (8003e30 <main+0x2b8>)
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	4a20      	ldr	r2, [pc, #128]	; (8003e34 <main+0x2bc>)
 8003db2:	4293      	cmp	r3, r2
 8003db4:	d903      	bls.n	8003dbe <main+0x246>
 8003db6:	4b20      	ldr	r3, [pc, #128]	; (8003e38 <main+0x2c0>)
 8003db8:	781b      	ldrb	r3, [r3, #0]
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	d00a      	beq.n	8003dd4 <main+0x25c>
 8003dbe:	4b1c      	ldr	r3, [pc, #112]	; (8003e30 <main+0x2b8>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	4a1e      	ldr	r2, [pc, #120]	; (8003e3c <main+0x2c4>)
 8003dc4:	4293      	cmp	r3, r2
 8003dc6:	f67f af40 	bls.w	8003c4a <main+0xd2>
 8003dca:	4b1b      	ldr	r3, [pc, #108]	; (8003e38 <main+0x2c0>)
 8003dcc:	781b      	ldrb	r3, [r3, #0]
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	f43f af3b 	beq.w	8003c4a <main+0xd2>
				{
					Poweroff_LCD();
 8003dd4:	f7fe fba8 	bl	8002528 <Poweroff_LCD>
					Display_timeout=0;
 8003dd8:	4b15      	ldr	r3, [pc, #84]	; (8003e30 <main+0x2b8>)
 8003dda:	2200      	movs	r2, #0
 8003ddc:	601a      	str	r2, [r3, #0]
 8003dde:	e734      	b.n	8003c4a <main+0xd2>
				}
			} else Display_timeout=0;
 8003de0:	4b13      	ldr	r3, [pc, #76]	; (8003e30 <main+0x2b8>)
 8003de2:	2200      	movs	r2, #0
 8003de4:	601a      	str	r2, [r3, #0]
		if(USB_CDC_End_Line_Received)
 8003de6:	e730      	b.n	8003c4a <main+0xd2>
 8003de8:	20000750 	.word	0x20000750
 8003dec:	20000764 	.word	0x20000764
 8003df0:	3dcccccd 	.word	0x3dcccccd
 8003df4:	20000780 	.word	0x20000780
 8003df8:	0007ffff 	.word	0x0007ffff
 8003dfc:	20000784 	.word	0x20000784
 8003e00:	20000690 	.word	0x20000690
 8003e04:	20000880 	.word	0x20000880
 8003e08:	20000840 	.word	0x20000840
 8003e0c:	200008c0 	.word	0x200008c0
 8003e10:	2000064c 	.word	0x2000064c
 8003e14:	20000650 	.word	0x20000650
 8003e18:	20000786 	.word	0x20000786
 8003e1c:	2000001c 	.word	0x2000001c
 8003e20:	20000788 	.word	0x20000788
 8003e24:	20000789 	.word	0x20000789
 8003e28:	20000787 	.word	0x20000787
 8003e2c:	20000768 	.word	0x20000768
 8003e30:	20000724 	.word	0x20000724
 8003e34:	00011940 	.word	0x00011940
 8003e38:	2000077c 	.word	0x2000077c
 8003e3c:	001a5e00 	.word	0x001a5e00

08003e40 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003e40:	b580      	push	{r7, lr}
 8003e42:	b092      	sub	sp, #72	; 0x48
 8003e44:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003e46:	f107 0314 	add.w	r3, r7, #20
 8003e4a:	2234      	movs	r2, #52	; 0x34
 8003e4c:	2100      	movs	r1, #0
 8003e4e:	4618      	mov	r0, r3
 8003e50:	f006 fe0a 	bl	800aa68 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003e54:	463b      	mov	r3, r7
 8003e56:	2200      	movs	r2, #0
 8003e58:	601a      	str	r2, [r3, #0]
 8003e5a:	605a      	str	r2, [r3, #4]
 8003e5c:	609a      	str	r2, [r3, #8]
 8003e5e:	60da      	str	r2, [r3, #12]
 8003e60:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003e62:	4b1c      	ldr	r3, [pc, #112]	; (8003ed4 <SystemClock_Config+0x94>)
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8003e6a:	4a1a      	ldr	r2, [pc, #104]	; (8003ed4 <SystemClock_Config+0x94>)
 8003e6c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003e70:	6013      	str	r3, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003e72:	2301      	movs	r3, #1
 8003e74:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003e76:	2301      	movs	r3, #1
 8003e78:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003e7a:	2302      	movs	r3, #2
 8003e7c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003e7e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003e82:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8003e84:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8003e88:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 8003e8a:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8003e8e:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003e90:	f107 0314 	add.w	r3, r7, #20
 8003e94:	4618      	mov	r0, r3
 8003e96:	f003 fb01 	bl	800749c <HAL_RCC_OscConfig>
 8003e9a:	4603      	mov	r3, r0
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	d001      	beq.n	8003ea4 <SystemClock_Config+0x64>
  {
    Error_Handler();
 8003ea0:	f000 fe86 	bl	8004bb0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003ea4:	230f      	movs	r3, #15
 8003ea6:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003ea8:	2303      	movs	r3, #3
 8003eaa:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003eac:	2300      	movs	r3, #0
 8003eae:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003eb0:	2300      	movs	r3, #0
 8003eb2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003eb8:	463b      	mov	r3, r7
 8003eba:	2101      	movs	r1, #1
 8003ebc:	4618      	mov	r0, r3
 8003ebe:	f003 fd4d 	bl	800795c <HAL_RCC_ClockConfig>
 8003ec2:	4603      	mov	r3, r0
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	d001      	beq.n	8003ecc <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8003ec8:	f000 fe72 	bl	8004bb0 <Error_Handler>
  }
}
 8003ecc:	bf00      	nop
 8003ece:	3748      	adds	r7, #72	; 0x48
 8003ed0:	46bd      	mov	sp, r7
 8003ed2:	bd80      	pop	{r7, pc}
 8003ed4:	40007000 	.word	0x40007000

08003ed8 <MX_NVIC_Init>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8003ed8:	b580      	push	{r7, lr}
 8003eda:	af00      	add	r7, sp, #0
  /* EXTI9_5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8003edc:	2200      	movs	r2, #0
 8003ede:	2100      	movs	r1, #0
 8003ee0:	2017      	movs	r0, #23
 8003ee2:	f001 fb6f 	bl	80055c4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8003ee6:	2017      	movs	r0, #23
 8003ee8:	f001 fbaa 	bl	8005640 <HAL_NVIC_EnableIRQ>
}
 8003eec:	bf00      	nop
 8003eee:	bd80      	pop	{r7, pc}

08003ef0 <HAL_TIM_PeriodElapsedCallback>:
//==============================================================================================


// Callback: timer has rolled over
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003ef0:	b480      	push	{r7}
 8003ef2:	b083      	sub	sp, #12
 8003ef4:	af00      	add	r7, sp, #0
 8003ef6:	6078      	str	r0, [r7, #4]
	if (htim == &htim3 )// INL correction, each 500ms
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	4a0d      	ldr	r2, [pc, #52]	; (8003f30 <HAL_TIM_PeriodElapsedCallback+0x40>)
 8003efc:	4293      	cmp	r3, r2
 8003efe:	d106      	bne.n	8003f0e <HAL_TIM_PeriodElapsedCallback+0x1e>
	{
		if(cfg.LDACMODE==1)Need_update_DDS=1;
 8003f00:	4b0c      	ldr	r3, [pc, #48]	; (8003f34 <HAL_TIM_PeriodElapsedCallback+0x44>)
 8003f02:	789b      	ldrb	r3, [r3, #2]
 8003f04:	2b01      	cmp	r3, #1
 8003f06:	d102      	bne.n	8003f0e <HAL_TIM_PeriodElapsedCallback+0x1e>
 8003f08:	4b0b      	ldr	r3, [pc, #44]	; (8003f38 <HAL_TIM_PeriodElapsedCallback+0x48>)
 8003f0a:	2201      	movs	r2, #1
 8003f0c:	701a      	strb	r2, [r3, #0]
	}

	if (htim == &htim2 )//User interface workload, each 50ms
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	4a0a      	ldr	r2, [pc, #40]	; (8003f3c <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8003f12:	4293      	cmp	r3, r2
 8003f14:	d107      	bne.n	8003f26 <HAL_TIM_PeriodElapsedCallback+0x36>
	{
		Need_update_Display=1;
 8003f16:	4b0a      	ldr	r3, [pc, #40]	; (8003f40 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8003f18:	2201      	movs	r2, #1
 8003f1a:	701a      	strb	r2, [r3, #0]
		Display_timeout++;
 8003f1c:	4b09      	ldr	r3, [pc, #36]	; (8003f44 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	3301      	adds	r3, #1
 8003f22:	4a08      	ldr	r2, [pc, #32]	; (8003f44 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8003f24:	6013      	str	r3, [r2, #0]
	}

}
 8003f26:	bf00      	nop
 8003f28:	370c      	adds	r7, #12
 8003f2a:	46bd      	mov	sp, r7
 8003f2c:	bc80      	pop	{r7}
 8003f2e:	4770      	bx	lr
 8003f30:	20000880 	.word	0x20000880
 8003f34:	20000750 	.word	0x20000750
 8003f38:	20000788 	.word	0x20000788
 8003f3c:	20000840 	.word	0x20000840
 8003f40:	20000787 	.word	0x20000787
 8003f44:	20000724 	.word	0x20000724

08003f48 <Parsing_USB_command>:

	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
}

void Parsing_USB_command(void)
{
 8003f48:	b590      	push	{r4, r7, lr}
 8003f4a:	b0a7      	sub	sp, #156	; 0x9c
 8003f4c:	af12      	add	r7, sp, #72	; 0x48
	//char *found;
	char decoded_string_1[31];
	char decoded_string_2[31];
	int num_of_cap;
	float f_value;
	uint8_t cdc_counter=0;
 8003f4e:	2300      	movs	r3, #0
 8003f50:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f

	if(sscanf((char *)command_buffer,"%s", decoded_string_1)!=1)
 8003f54:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003f58:	461a      	mov	r2, r3
 8003f5a:	49ca      	ldr	r1, [pc, #808]	; (8004284 <Parsing_USB_command+0x33c>)
 8003f5c:	48ca      	ldr	r0, [pc, #808]	; (8004288 <Parsing_USB_command+0x340>)
 8003f5e:	f007 fc1d 	bl	800b79c <siscanf>
 8003f62:	4603      	mov	r3, r0
 8003f64:	2b01      	cmp	r3, #1
 8003f66:	d004      	beq.n	8003f72 <Parsing_USB_command+0x2a>
	{
		send_answer_to_CDC(ERROR_TYPE_1);
 8003f68:	2000      	movs	r0, #0
 8003f6a:	f7fe ff23 	bl	8002db4 <send_answer_to_CDC>
		return;
 8003f6e:	f000 bde5 	b.w	8004b3c <Parsing_USB_command+0xbf4>
	}

	// ==== SWEEP command ====
	if(!(strcmp(decoded_string_1,"SWEEP")))
 8003f72:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003f76:	49c5      	ldr	r1, [pc, #788]	; (800428c <Parsing_USB_command+0x344>)
 8003f78:	4618      	mov	r0, r3
 8003f7a:	f7fc f901 	bl	8000180 <strcmp>
 8003f7e:	4603      	mov	r3, r0
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d13b      	bne.n	8003ffc <Parsing_USB_command+0xb4>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8003f84:	f107 030c 	add.w	r3, r7, #12
 8003f88:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003f8c:	49c0      	ldr	r1, [pc, #768]	; (8004290 <Parsing_USB_command+0x348>)
 8003f8e:	48be      	ldr	r0, [pc, #760]	; (8004288 <Parsing_USB_command+0x340>)
 8003f90:	f007 fc04 	bl	800b79c <siscanf>
 8003f94:	4603      	mov	r3, r0
 8003f96:	2b02      	cmp	r3, #2
 8003f98:	d004      	beq.n	8003fa4 <Parsing_USB_command+0x5c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8003f9a:	2001      	movs	r0, #1
 8003f9c:	f7fe ff0a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003fa0:	f000 bdcc 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"START")))
 8003fa4:	f107 030c 	add.w	r3, r7, #12
 8003fa8:	49ba      	ldr	r1, [pc, #744]	; (8004294 <Parsing_USB_command+0x34c>)
 8003faa:	4618      	mov	r0, r3
 8003fac:	f7fc f8e8 	bl	8000180 <strcmp>
 8003fb0:	4603      	mov	r3, r0
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d10d      	bne.n	8003fd2 <Parsing_USB_command+0x8a>
		{
			cmd_SWEEP_START();
 8003fb6:	f7fe ffc3 	bl	8002f40 <cmd_SWEEP_START>
			if(mode==VOLT_SCREEN)mode=dU_dt_SCREEN;
 8003fba:	4bb7      	ldr	r3, [pc, #732]	; (8004298 <Parsing_USB_command+0x350>)
 8003fbc:	781b      	ldrb	r3, [r3, #0]
 8003fbe:	2b05      	cmp	r3, #5
 8003fc0:	d102      	bne.n	8003fc8 <Parsing_USB_command+0x80>
 8003fc2:	4bb5      	ldr	r3, [pc, #724]	; (8004298 <Parsing_USB_command+0x350>)
 8003fc4:	2200      	movs	r2, #0
 8003fc6:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8003fc8:	2003      	movs	r0, #3
 8003fca:	f7fe fef3 	bl	8002db4 <send_answer_to_CDC>
			return;
 8003fce:	f000 bdb5 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"STOP")))
 8003fd2:	f107 030c 	add.w	r3, r7, #12
 8003fd6:	49b1      	ldr	r1, [pc, #708]	; (800429c <Parsing_USB_command+0x354>)
 8003fd8:	4618      	mov	r0, r3
 8003fda:	f7fc f8d1 	bl	8000180 <strcmp>
 8003fde:	4603      	mov	r3, r0
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d106      	bne.n	8003ff2 <Parsing_USB_command+0xaa>
			{
				cmd_SWEEP_STOP();
 8003fe4:	f7fe ffbc 	bl	8002f60 <cmd_SWEEP_STOP>
				send_answer_to_CDC(OK_TYPE_2);
 8003fe8:	2003      	movs	r0, #3
 8003fea:	f7fe fee3 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003fee:	f000 bda5 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 8003ff2:	2000      	movs	r0, #0
 8003ff4:	f7fe fede 	bl	8002db4 <send_answer_to_CDC>
				return;
 8003ff8:	f000 bda0 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}

		}
	}
	// ==== CAP_SET command ====
	if(!(strcmp(decoded_string_1,"CAP_SET")))
 8003ffc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004000:	49a7      	ldr	r1, [pc, #668]	; (80042a0 <Parsing_USB_command+0x358>)
 8004002:	4618      	mov	r0, r3
 8004004:	f7fc f8bc 	bl	8000180 <strcmp>
 8004008:	4603      	mov	r3, r0
 800400a:	2b00      	cmp	r3, #0
 800400c:	d121      	bne.n	8004052 <Parsing_USB_command+0x10a>
	{
		if(sscanf((char *)command_buffer,"%s %d", decoded_string_1, &num_of_cap)!=2)
 800400e:	f107 0308 	add.w	r3, r7, #8
 8004012:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004016:	49a3      	ldr	r1, [pc, #652]	; (80042a4 <Parsing_USB_command+0x35c>)
 8004018:	489b      	ldr	r0, [pc, #620]	; (8004288 <Parsing_USB_command+0x340>)
 800401a:	f007 fbbf 	bl	800b79c <siscanf>
 800401e:	4603      	mov	r3, r0
 8004020:	2b02      	cmp	r3, #2
 8004022:	d004      	beq.n	800402e <Parsing_USB_command+0xe6>
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004024:	2001      	movs	r0, #1
 8004026:	f7fe fec5 	bl	8002db4 <send_answer_to_CDC>
				return;
 800402a:	f000 bd87 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}

			if(cmd_CAP_SET(num_of_cap))
 800402e:	68bb      	ldr	r3, [r7, #8]
 8004030:	b2db      	uxtb	r3, r3
 8004032:	4618      	mov	r0, r3
 8004034:	f7ff f8f0 	bl	8003218 <cmd_CAP_SET>
 8004038:	4603      	mov	r3, r0
 800403a:	2b00      	cmp	r3, #0
 800403c:	d004      	beq.n	8004048 <Parsing_USB_command+0x100>
			{
				send_answer_to_CDC(OK_TYPE_2);
 800403e:	2003      	movs	r0, #3
 8004040:	f7fe feb8 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004044:	f000 bd7a 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004048:	2001      	movs	r0, #1
 800404a:	f7fe feb3 	bl	8002db4 <send_answer_to_CDC>
				return;
 800404e:	f000 bd75 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
	}


	// ==== DAC_SET command ====
	if(!(strcmp(decoded_string_1,"DAC_SET")))
 8004052:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004056:	4994      	ldr	r1, [pc, #592]	; (80042a8 <Parsing_USB_command+0x360>)
 8004058:	4618      	mov	r0, r3
 800405a:	f7fc f891 	bl	8000180 <strcmp>
 800405e:	4603      	mov	r3, r0
 8004060:	2b00      	cmp	r3, #0
 8004062:	d154      	bne.n	800410e <Parsing_USB_command+0x1c6>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004064:	f107 030c 	add.w	r3, r7, #12
 8004068:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800406c:	4988      	ldr	r1, [pc, #544]	; (8004290 <Parsing_USB_command+0x348>)
 800406e:	4886      	ldr	r0, [pc, #536]	; (8004288 <Parsing_USB_command+0x340>)
 8004070:	f007 fb94 	bl	800b79c <siscanf>
 8004074:	4603      	mov	r3, r0
 8004076:	2b02      	cmp	r3, #2
 8004078:	d004      	beq.n	8004084 <Parsing_USB_command+0x13c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800407a:	2001      	movs	r0, #1
 800407c:	f7fe fe9a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004080:	f000 bd5c 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"TOP"))){
 8004084:	f107 030c 	add.w	r3, r7, #12
 8004088:	4988      	ldr	r1, [pc, #544]	; (80042ac <Parsing_USB_command+0x364>)
 800408a:	4618      	mov	r0, r3
 800408c:	f7fc f878 	bl	8000180 <strcmp>
 8004090:	4603      	mov	r3, r0
 8004092:	2b00      	cmp	r3, #0
 8004094:	d107      	bne.n	80040a6 <Parsing_USB_command+0x15e>
			cmd_DAC_SET(DAC_CODE_TOP);
 8004096:	4886      	ldr	r0, [pc, #536]	; (80042b0 <Parsing_USB_command+0x368>)
 8004098:	f7fe ff6c 	bl	8002f74 <cmd_DAC_SET>
			send_answer_to_CDC(OK_TYPE_2);
 800409c:	2003      	movs	r0, #3
 800409e:	f7fe fe89 	bl	8002db4 <send_answer_to_CDC>
			return;
 80040a2:	f000 bd4b 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 80040a6:	f107 030c 	add.w	r3, r7, #12
 80040aa:	4982      	ldr	r1, [pc, #520]	; (80042b4 <Parsing_USB_command+0x36c>)
 80040ac:	4618      	mov	r0, r3
 80040ae:	f7fc f867 	bl	8000180 <strcmp>
 80040b2:	4603      	mov	r3, r0
 80040b4:	2b00      	cmp	r3, #0
 80040b6:	d107      	bne.n	80040c8 <Parsing_USB_command+0x180>
				cmd_DAC_SET(DAC_CODE_DOWN);
 80040b8:	2000      	movs	r0, #0
 80040ba:	f7fe ff5b 	bl	8002f74 <cmd_DAC_SET>
				send_answer_to_CDC(OK_TYPE_2);
 80040be:	2003      	movs	r0, #3
 80040c0:	f7fe fe78 	bl	8002db4 <send_answer_to_CDC>
				return;
 80040c4:	f000 bd3a 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80040c8:	1d3b      	adds	r3, r7, #4
 80040ca:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80040ce:	497a      	ldr	r1, [pc, #488]	; (80042b8 <Parsing_USB_command+0x370>)
 80040d0:	486d      	ldr	r0, [pc, #436]	; (8004288 <Parsing_USB_command+0x340>)
 80040d2:	f007 fb63 	bl	800b79c <siscanf>
 80040d6:	4603      	mov	r3, r0
 80040d8:	2b02      	cmp	r3, #2
 80040da:	d004      	beq.n	80040e6 <Parsing_USB_command+0x19e>
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 80040dc:	2001      	movs	r0, #1
 80040de:	f7fe fe69 	bl	8002db4 <send_answer_to_CDC>
					return;
 80040e2:	f000 bd2b 	b.w	8004b3c <Parsing_USB_command+0xbf4>
				}

				if(cmd_SET_OUTPUT_VOLTAGE(f_value))
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	4618      	mov	r0, r3
 80040ea:	f7fe ff73 	bl	8002fd4 <cmd_SET_OUTPUT_VOLTAGE>
 80040ee:	4603      	mov	r3, r0
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	d007      	beq.n	8004104 <Parsing_USB_command+0x1bc>
				{
					mode=VOLT_SCREEN;
 80040f4:	4b68      	ldr	r3, [pc, #416]	; (8004298 <Parsing_USB_command+0x350>)
 80040f6:	2205      	movs	r2, #5
 80040f8:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 80040fa:	2003      	movs	r0, #3
 80040fc:	f7fe fe5a 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004100:	f000 bd1c 	b.w	8004b3c <Parsing_USB_command+0xbf4>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_2);
 8004104:	2001      	movs	r0, #1
 8004106:	f7fe fe55 	bl	8002db4 <send_answer_to_CDC>
					return;
 800410a:	f000 bd17 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
	}


	// ==== OUTPUT command ====
	if(!(strcmp(decoded_string_1,"OUTPUT")))
 800410e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004112:	496a      	ldr	r1, [pc, #424]	; (80042bc <Parsing_USB_command+0x374>)
 8004114:	4618      	mov	r0, r3
 8004116:	f7fc f833 	bl	8000180 <strcmp>
 800411a:	4603      	mov	r3, r0
 800411c:	2b00      	cmp	r3, #0
 800411e:	d158      	bne.n	80041d2 <Parsing_USB_command+0x28a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004120:	f107 030c 	add.w	r3, r7, #12
 8004124:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004128:	4959      	ldr	r1, [pc, #356]	; (8004290 <Parsing_USB_command+0x348>)
 800412a:	4857      	ldr	r0, [pc, #348]	; (8004288 <Parsing_USB_command+0x340>)
 800412c:	f007 fb36 	bl	800b79c <siscanf>
 8004130:	4603      	mov	r3, r0
 8004132:	2b02      	cmp	r3, #2
 8004134:	d004      	beq.n	8004140 <Parsing_USB_command+0x1f8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004136:	2001      	movs	r0, #1
 8004138:	f7fe fe3c 	bl	8002db4 <send_answer_to_CDC>
			return;
 800413c:	f000 bcfe 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"OFF"))){
 8004140:	f107 030c 	add.w	r3, r7, #12
 8004144:	495e      	ldr	r1, [pc, #376]	; (80042c0 <Parsing_USB_command+0x378>)
 8004146:	4618      	mov	r0, r3
 8004148:	f7fc f81a 	bl	8000180 <strcmp>
 800414c:	4603      	mov	r3, r0
 800414e:	2b00      	cmp	r3, #0
 8004150:	d107      	bne.n	8004162 <Parsing_USB_command+0x21a>
			output_state(Output_off_STATE);
 8004152:	2000      	movs	r0, #0
 8004154:	f7fe fb16 	bl	8002784 <output_state>
			send_answer_to_CDC(OK_TYPE_2);
 8004158:	2003      	movs	r0, #3
 800415a:	f7fe fe2b 	bl	8002db4 <send_answer_to_CDC>
			return;
 800415e:	f000 bced 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"X1"))){
 8004162:	f107 030c 	add.w	r3, r7, #12
 8004166:	4957      	ldr	r1, [pc, #348]	; (80042c4 <Parsing_USB_command+0x37c>)
 8004168:	4618      	mov	r0, r3
 800416a:	f7fc f809 	bl	8000180 <strcmp>
 800416e:	4603      	mov	r3, r0
 8004170:	2b00      	cmp	r3, #0
 8004172:	d107      	bne.n	8004184 <Parsing_USB_command+0x23c>
				output_state(Output_x1_STATE);
 8004174:	2001      	movs	r0, #1
 8004176:	f7fe fb05 	bl	8002784 <output_state>
				send_answer_to_CDC(OK_TYPE_2);
 800417a:	2003      	movs	r0, #3
 800417c:	f7fe fe1a 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004180:	f000 bcdc 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"X2"))){
 8004184:	f107 030c 	add.w	r3, r7, #12
 8004188:	494f      	ldr	r1, [pc, #316]	; (80042c8 <Parsing_USB_command+0x380>)
 800418a:	4618      	mov	r0, r3
 800418c:	f7fb fff8 	bl	8000180 <strcmp>
 8004190:	4603      	mov	r3, r0
 8004192:	2b00      	cmp	r3, #0
 8004194:	d107      	bne.n	80041a6 <Parsing_USB_command+0x25e>
					output_state(Output_x2_STATE);
 8004196:	2002      	movs	r0, #2
 8004198:	f7fe faf4 	bl	8002784 <output_state>
					send_answer_to_CDC(OK_TYPE_2);
 800419c:	2003      	movs	r0, #3
 800419e:	f7fe fe09 	bl	8002db4 <send_answer_to_CDC>
					return;
 80041a2:	f000 bccb 	b.w	8004b3c <Parsing_USB_command+0xbf4>
				}
				else
				{
					if(!(strcmp(decoded_string_2,"X4"))){
 80041a6:	f107 030c 	add.w	r3, r7, #12
 80041aa:	4948      	ldr	r1, [pc, #288]	; (80042cc <Parsing_USB_command+0x384>)
 80041ac:	4618      	mov	r0, r3
 80041ae:	f7fb ffe7 	bl	8000180 <strcmp>
 80041b2:	4603      	mov	r3, r0
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d107      	bne.n	80041c8 <Parsing_USB_command+0x280>
						output_state(Output_x4_STATE);
 80041b8:	2003      	movs	r0, #3
 80041ba:	f7fe fae3 	bl	8002784 <output_state>
						send_answer_to_CDC(OK_TYPE_2);
 80041be:	2003      	movs	r0, #3
 80041c0:	f7fe fdf8 	bl	8002db4 <send_answer_to_CDC>
						return;
 80041c4:	f000 bcba 	b.w	8004b3c <Parsing_USB_command+0xbf4>
					}
					else
					{
						send_answer_to_CDC(ERROR_TYPE_2);
 80041c8:	2001      	movs	r0, #1
 80041ca:	f7fe fdf3 	bl	8002db4 <send_answer_to_CDC>
						return;
 80041ce:	f000 bcb5 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
		}
	}

	// ==== CAL_STATE command ====
	if(!(strcmp(decoded_string_1,"CAL_STATE")))
 80041d2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80041d6:	493e      	ldr	r1, [pc, #248]	; (80042d0 <Parsing_USB_command+0x388>)
 80041d8:	4618      	mov	r0, r3
 80041da:	f7fb ffd1 	bl	8000180 <strcmp>
 80041de:	4603      	mov	r3, r0
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d136      	bne.n	8004252 <Parsing_USB_command+0x30a>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 80041e4:	f107 030c 	add.w	r3, r7, #12
 80041e8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80041ec:	4928      	ldr	r1, [pc, #160]	; (8004290 <Parsing_USB_command+0x348>)
 80041ee:	4826      	ldr	r0, [pc, #152]	; (8004288 <Parsing_USB_command+0x340>)
 80041f0:	f007 fad4 	bl	800b79c <siscanf>
 80041f4:	4603      	mov	r3, r0
 80041f6:	2b02      	cmp	r3, #2
 80041f8:	d004      	beq.n	8004204 <Parsing_USB_command+0x2bc>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80041fa:	2001      	movs	r0, #1
 80041fc:	f7fe fdda 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004200:	f000 bc9c 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"UNLOCK"))){
 8004204:	f107 030c 	add.w	r3, r7, #12
 8004208:	4932      	ldr	r1, [pc, #200]	; (80042d4 <Parsing_USB_command+0x38c>)
 800420a:	4618      	mov	r0, r3
 800420c:	f7fb ffb8 	bl	8000180 <strcmp>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d107      	bne.n	8004226 <Parsing_USB_command+0x2de>
			CAL_STATE=UNLOCK_STATE;
 8004216:	4b30      	ldr	r3, [pc, #192]	; (80042d8 <Parsing_USB_command+0x390>)
 8004218:	2200      	movs	r2, #0
 800421a:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 800421c:	2003      	movs	r0, #3
 800421e:	f7fe fdc9 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004222:	f000 bc8b 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"LOCK"))){
 8004226:	f107 030c 	add.w	r3, r7, #12
 800422a:	492c      	ldr	r1, [pc, #176]	; (80042dc <Parsing_USB_command+0x394>)
 800422c:	4618      	mov	r0, r3
 800422e:	f7fb ffa7 	bl	8000180 <strcmp>
 8004232:	4603      	mov	r3, r0
 8004234:	2b00      	cmp	r3, #0
 8004236:	d107      	bne.n	8004248 <Parsing_USB_command+0x300>
				CAL_STATE=LOCK_STATE;
 8004238:	4b27      	ldr	r3, [pc, #156]	; (80042d8 <Parsing_USB_command+0x390>)
 800423a:	2201      	movs	r2, #1
 800423c:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 800423e:	2003      	movs	r0, #3
 8004240:	f7fe fdb8 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004244:	f000 bc7a 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004248:	2001      	movs	r0, #1
 800424a:	f7fe fdb3 	bl	8002db4 <send_answer_to_CDC>
				return;
 800424e:	f000 bc75 	b.w	8004b3c <Parsing_USB_command+0xbf4>
			}
		}
	}

	// ==== DAC_CAL_TEMP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TEMP")))
 8004252:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004256:	4922      	ldr	r1, [pc, #136]	; (80042e0 <Parsing_USB_command+0x398>)
 8004258:	4618      	mov	r0, r3
 800425a:	f7fb ff91 	bl	8000180 <strcmp>
 800425e:	4603      	mov	r3, r0
 8004260:	2b00      	cmp	r3, #0
 8004262:	d159      	bne.n	8004318 <Parsing_USB_command+0x3d0>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004264:	f107 030c 	add.w	r3, r7, #12
 8004268:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800426c:	4908      	ldr	r1, [pc, #32]	; (8004290 <Parsing_USB_command+0x348>)
 800426e:	4806      	ldr	r0, [pc, #24]	; (8004288 <Parsing_USB_command+0x340>)
 8004270:	f007 fa94 	bl	800b79c <siscanf>
 8004274:	4603      	mov	r3, r0
 8004276:	2b02      	cmp	r3, #2
 8004278:	d034      	beq.n	80042e4 <Parsing_USB_command+0x39c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800427a:	2001      	movs	r0, #1
 800427c:	f7fe fd9a 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004280:	f000 bc5c 	b.w	8004b3c <Parsing_USB_command+0xbf4>
 8004284:	0800fc20 	.word	0x0800fc20
 8004288:	20000650 	.word	0x20000650
 800428c:	0800fc24 	.word	0x0800fc24
 8004290:	0800fc2c 	.word	0x0800fc2c
 8004294:	0800fc34 	.word	0x0800fc34
 8004298:	20000768 	.word	0x20000768
 800429c:	0800fc3c 	.word	0x0800fc3c
 80042a0:	0800fc44 	.word	0x0800fc44
 80042a4:	0800fc4c 	.word	0x0800fc4c
 80042a8:	0800fc54 	.word	0x0800fc54
 80042ac:	0800fc5c 	.word	0x0800fc5c
 80042b0:	000fffff 	.word	0x000fffff
 80042b4:	0800fc60 	.word	0x0800fc60
 80042b8:	0800fc68 	.word	0x0800fc68
 80042bc:	0800fc70 	.word	0x0800fc70
 80042c0:	0800fc78 	.word	0x0800fc78
 80042c4:	0800fc7c 	.word	0x0800fc7c
 80042c8:	0800fc80 	.word	0x0800fc80
 80042cc:	0800fc84 	.word	0x0800fc84
 80042d0:	0800fc88 	.word	0x0800fc88
 80042d4:	0800fc94 	.word	0x0800fc94
 80042d8:	2000001d 	.word	0x2000001d
 80042dc:	0800fc9c 	.word	0x0800fc9c
 80042e0:	0800fca4 	.word	0x0800fca4
		}

		if(!(strcmp(decoded_string_2,"START"))){
 80042e4:	f107 030c 	add.w	r3, r7, #12
 80042e8:	49ba      	ldr	r1, [pc, #744]	; (80045d4 <Parsing_USB_command+0x68c>)
 80042ea:	4618      	mov	r0, r3
 80042ec:	f7fb ff48 	bl	8000180 <strcmp>
 80042f0:	4603      	mov	r3, r0
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d10b      	bne.n	800430e <Parsing_USB_command+0x3c6>
			send_answer_to_CDC(RUN_CAL_TYPE_TEMP);
 80042f6:	200f      	movs	r0, #15
 80042f8:	f7fe fd5c 	bl	8002db4 <send_answer_to_CDC>
			cmd_CAL(DAC_CAL_TEMP,NONE);
 80042fc:	49b6      	ldr	r1, [pc, #728]	; (80045d8 <Parsing_USB_command+0x690>)
 80042fe:	2006      	movs	r0, #6
 8004300:	f7ff f842 	bl	8003388 <cmd_CAL>
			send_answer_to_CDC(OK_TYPE_1);
 8004304:	2002      	movs	r0, #2
 8004306:	f7fe fd55 	bl	8002db4 <send_answer_to_CDC>
			return;
 800430a:	f000 bc17 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 800430e:	2000      	movs	r0, #0
 8004310:	f7fe fd50 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004314:	f000 bc12 	b.w	8004b3c <Parsing_USB_command+0xbf4>
		}
	}

	// ==== DAC_CAL_POLY_A command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_A")))
 8004318:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800431c:	49af      	ldr	r1, [pc, #700]	; (80045dc <Parsing_USB_command+0x694>)
 800431e:	4618      	mov	r0, r3
 8004320:	f7fb ff2e 	bl	8000180 <strcmp>
 8004324:	4603      	mov	r3, r0
 8004326:	2b00      	cmp	r3, #0
 8004328:	d116      	bne.n	8004358 <Parsing_USB_command+0x410>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 800432a:	1d3b      	adds	r3, r7, #4
 800432c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004330:	49ab      	ldr	r1, [pc, #684]	; (80045e0 <Parsing_USB_command+0x698>)
 8004332:	48ac      	ldr	r0, [pc, #688]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004334:	f007 fa32 	bl	800b79c <siscanf>
 8004338:	4603      	mov	r3, r0
 800433a:	2b02      	cmp	r3, #2
 800433c:	d003      	beq.n	8004346 <Parsing_USB_command+0x3fe>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800433e:	2001      	movs	r0, #1
 8004340:	f7fe fd38 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004344:	e3fa      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		cmd_CAL(DAC_CAL_POLY_A,f_value);
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	4619      	mov	r1, r3
 800434a:	2007      	movs	r0, #7
 800434c:	f7ff f81c 	bl	8003388 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 8004350:	2003      	movs	r0, #3
 8004352:	f7fe fd2f 	bl	8002db4 <send_answer_to_CDC>
		return;
 8004356:	e3f1      	b.n	8004b3c <Parsing_USB_command+0xbf4>
	}

	// ==== DAC_CAL_POLY_B command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_B")))
 8004358:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800435c:	49a2      	ldr	r1, [pc, #648]	; (80045e8 <Parsing_USB_command+0x6a0>)
 800435e:	4618      	mov	r0, r3
 8004360:	f7fb ff0e 	bl	8000180 <strcmp>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d116      	bne.n	8004398 <Parsing_USB_command+0x450>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 800436a:	1d3b      	adds	r3, r7, #4
 800436c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004370:	499b      	ldr	r1, [pc, #620]	; (80045e0 <Parsing_USB_command+0x698>)
 8004372:	489c      	ldr	r0, [pc, #624]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004374:	f007 fa12 	bl	800b79c <siscanf>
 8004378:	4603      	mov	r3, r0
 800437a:	2b02      	cmp	r3, #2
 800437c:	d003      	beq.n	8004386 <Parsing_USB_command+0x43e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800437e:	2001      	movs	r0, #1
 8004380:	f7fe fd18 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004384:	e3da      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		cmd_CAL(DAC_CAL_POLY_B,f_value);
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	4619      	mov	r1, r3
 800438a:	2008      	movs	r0, #8
 800438c:	f7fe fffc 	bl	8003388 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 8004390:	2003      	movs	r0, #3
 8004392:	f7fe fd0f 	bl	8002db4 <send_answer_to_CDC>
		return;
 8004396:	e3d1      	b.n	8004b3c <Parsing_USB_command+0xbf4>
	}

	// ==== DAC_CAL_POLY_C command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_POLY_C")))
 8004398:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800439c:	4993      	ldr	r1, [pc, #588]	; (80045ec <Parsing_USB_command+0x6a4>)
 800439e:	4618      	mov	r0, r3
 80043a0:	f7fb feee 	bl	8000180 <strcmp>
 80043a4:	4603      	mov	r3, r0
 80043a6:	2b00      	cmp	r3, #0
 80043a8:	d116      	bne.n	80043d8 <Parsing_USB_command+0x490>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80043aa:	1d3b      	adds	r3, r7, #4
 80043ac:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80043b0:	498b      	ldr	r1, [pc, #556]	; (80045e0 <Parsing_USB_command+0x698>)
 80043b2:	488c      	ldr	r0, [pc, #560]	; (80045e4 <Parsing_USB_command+0x69c>)
 80043b4:	f007 f9f2 	bl	800b79c <siscanf>
 80043b8:	4603      	mov	r3, r0
 80043ba:	2b02      	cmp	r3, #2
 80043bc:	d003      	beq.n	80043c6 <Parsing_USB_command+0x47e>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80043be:	2001      	movs	r0, #1
 80043c0:	f7fe fcf8 	bl	8002db4 <send_answer_to_CDC>
			return;
 80043c4:	e3ba      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		cmd_CAL(DAC_CAL_POLY_C,f_value);
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	4619      	mov	r1, r3
 80043ca:	2009      	movs	r0, #9
 80043cc:	f7fe ffdc 	bl	8003388 <cmd_CAL>
		send_answer_to_CDC(OK_TYPE_2);
 80043d0:	2003      	movs	r0, #3
 80043d2:	f7fe fcef 	bl	8002db4 <send_answer_to_CDC>
		return;
 80043d6:	e3b1      	b.n	8004b3c <Parsing_USB_command+0xbf4>
	}

	// ==== GAIN_X2_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X2_CAL")))
 80043d8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80043dc:	4984      	ldr	r1, [pc, #528]	; (80045f0 <Parsing_USB_command+0x6a8>)
 80043de:	4618      	mov	r0, r3
 80043e0:	f7fb fece 	bl	8000180 <strcmp>
 80043e4:	4603      	mov	r3, r0
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d11d      	bne.n	8004426 <Parsing_USB_command+0x4de>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80043ea:	1d3b      	adds	r3, r7, #4
 80043ec:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80043f0:	497b      	ldr	r1, [pc, #492]	; (80045e0 <Parsing_USB_command+0x698>)
 80043f2:	487c      	ldr	r0, [pc, #496]	; (80045e4 <Parsing_USB_command+0x69c>)
 80043f4:	f007 f9d2 	bl	800b79c <siscanf>
 80043f8:	4603      	mov	r3, r0
 80043fa:	2b02      	cmp	r3, #2
 80043fc:	d003      	beq.n	8004406 <Parsing_USB_command+0x4be>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80043fe:	2001      	movs	r0, #1
 8004400:	f7fe fcd8 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004404:	e39a      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(cmd_CAL(GAIN_X2_CAL,f_value))
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	4619      	mov	r1, r3
 800440a:	200c      	movs	r0, #12
 800440c:	f7fe ffbc 	bl	8003388 <cmd_CAL>
 8004410:	4603      	mov	r3, r0
 8004412:	2b00      	cmp	r3, #0
 8004414:	d003      	beq.n	800441e <Parsing_USB_command+0x4d6>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004416:	2003      	movs	r0, #3
 8004418:	f7fe fccc 	bl	8002db4 <send_answer_to_CDC>
			return;
 800441c:	e38e      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800441e:	2001      	movs	r0, #1
 8004420:	f7fe fcc8 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004424:	e38a      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
	}

	// ==== GAIN_X4_CAL command ====
	if(!(strcmp(decoded_string_1,"GAIN_X4_CAL")))
 8004426:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800442a:	4972      	ldr	r1, [pc, #456]	; (80045f4 <Parsing_USB_command+0x6ac>)
 800442c:	4618      	mov	r0, r3
 800442e:	f7fb fea7 	bl	8000180 <strcmp>
 8004432:	4603      	mov	r3, r0
 8004434:	2b00      	cmp	r3, #0
 8004436:	d11d      	bne.n	8004474 <Parsing_USB_command+0x52c>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004438:	1d3b      	adds	r3, r7, #4
 800443a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800443e:	4968      	ldr	r1, [pc, #416]	; (80045e0 <Parsing_USB_command+0x698>)
 8004440:	4868      	ldr	r0, [pc, #416]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004442:	f007 f9ab 	bl	800b79c <siscanf>
 8004446:	4603      	mov	r3, r0
 8004448:	2b02      	cmp	r3, #2
 800444a:	d003      	beq.n	8004454 <Parsing_USB_command+0x50c>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800444c:	2001      	movs	r0, #1
 800444e:	f7fe fcb1 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004452:	e373      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(cmd_CAL(GAIN_X4_CAL,f_value))
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	4619      	mov	r1, r3
 8004458:	200d      	movs	r0, #13
 800445a:	f7fe ff95 	bl	8003388 <cmd_CAL>
 800445e:	4603      	mov	r3, r0
 8004460:	2b00      	cmp	r3, #0
 8004462:	d003      	beq.n	800446c <Parsing_USB_command+0x524>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004464:	2003      	movs	r0, #3
 8004466:	f7fe fca5 	bl	8002db4 <send_answer_to_CDC>
			return;
 800446a:	e367      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800446c:	2001      	movs	r0, #1
 800446e:	f7fe fca1 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004472:	e363      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
	}


	// ==== DAC_CAL_TOP command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_TOP")))
 8004474:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004478:	495f      	ldr	r1, [pc, #380]	; (80045f8 <Parsing_USB_command+0x6b0>)
 800447a:	4618      	mov	r0, r3
 800447c:	f7fb fe80 	bl	8000180 <strcmp>
 8004480:	4603      	mov	r3, r0
 8004482:	2b00      	cmp	r3, #0
 8004484:	d11d      	bne.n	80044c2 <Parsing_USB_command+0x57a>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 8004486:	1d3b      	adds	r3, r7, #4
 8004488:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800448c:	4954      	ldr	r1, [pc, #336]	; (80045e0 <Parsing_USB_command+0x698>)
 800448e:	4855      	ldr	r0, [pc, #340]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004490:	f007 f984 	bl	800b79c <siscanf>
 8004494:	4603      	mov	r3, r0
 8004496:	2b02      	cmp	r3, #2
 8004498:	d003      	beq.n	80044a2 <Parsing_USB_command+0x55a>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800449a:	2001      	movs	r0, #1
 800449c:	f7fe fc8a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044a0:	e34c      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(cmd_CAL(DAC_CAL_TOP,f_value))
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	4619      	mov	r1, r3
 80044a6:	200a      	movs	r0, #10
 80044a8:	f7fe ff6e 	bl	8003388 <cmd_CAL>
 80044ac:	4603      	mov	r3, r0
 80044ae:	2b00      	cmp	r3, #0
 80044b0:	d003      	beq.n	80044ba <Parsing_USB_command+0x572>
		{
			send_answer_to_CDC(OK_TYPE_2);
 80044b2:	2003      	movs	r0, #3
 80044b4:	f7fe fc7e 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044b8:	e340      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80044ba:	2001      	movs	r0, #1
 80044bc:	f7fe fc7a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044c0:	e33c      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
	}


	// ==== DAC_CAL_DOWN command ====
	if(!(strcmp(decoded_string_1,"DAC_CAL_DOWN")))
 80044c2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80044c6:	494d      	ldr	r1, [pc, #308]	; (80045fc <Parsing_USB_command+0x6b4>)
 80044c8:	4618      	mov	r0, r3
 80044ca:	f7fb fe59 	bl	8000180 <strcmp>
 80044ce:	4603      	mov	r3, r0
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d11d      	bne.n	8004510 <Parsing_USB_command+0x5c8>
	{
		if(sscanf((char *)command_buffer,"%s %f", decoded_string_1, &f_value)!=2)
 80044d4:	1d3b      	adds	r3, r7, #4
 80044d6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80044da:	4941      	ldr	r1, [pc, #260]	; (80045e0 <Parsing_USB_command+0x698>)
 80044dc:	4841      	ldr	r0, [pc, #260]	; (80045e4 <Parsing_USB_command+0x69c>)
 80044de:	f007 f95d 	bl	800b79c <siscanf>
 80044e2:	4603      	mov	r3, r0
 80044e4:	2b02      	cmp	r3, #2
 80044e6:	d003      	beq.n	80044f0 <Parsing_USB_command+0x5a8>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 80044e8:	2001      	movs	r0, #1
 80044ea:	f7fe fc63 	bl	8002db4 <send_answer_to_CDC>
			return;
 80044ee:	e325      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(cmd_CAL(DAC_CAL_DOWN,f_value))
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	4619      	mov	r1, r3
 80044f4:	200b      	movs	r0, #11
 80044f6:	f7fe ff47 	bl	8003388 <cmd_CAL>
 80044fa:	4603      	mov	r3, r0
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d003      	beq.n	8004508 <Parsing_USB_command+0x5c0>
		{
			send_answer_to_CDC(OK_TYPE_2);
 8004500:	2003      	movs	r0, #3
 8004502:	f7fe fc57 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004506:	e319      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004508:	2001      	movs	r0, #1
 800450a:	f7fe fc53 	bl	8002db4 <send_answer_to_CDC>
			return;
 800450e:	e315      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
	}

	// ==== CAL_C_VALUE command ====
	if(!(strcmp(decoded_string_1,"CAL_C_VALUE")))
 8004510:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004514:	493a      	ldr	r1, [pc, #232]	; (8004600 <Parsing_USB_command+0x6b8>)
 8004516:	4618      	mov	r0, r3
 8004518:	f7fb fe32 	bl	8000180 <strcmp>
 800451c:	4603      	mov	r3, r0
 800451e:	2b00      	cmp	r3, #0
 8004520:	d124      	bne.n	800456c <Parsing_USB_command+0x624>
	{
		if(sscanf((char *)command_buffer,"%s %d %f", decoded_string_1, &num_of_cap, &f_value)!=3)
 8004522:	f107 0108 	add.w	r1, r7, #8
 8004526:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800452a:	1d3b      	adds	r3, r7, #4
 800452c:	9300      	str	r3, [sp, #0]
 800452e:	460b      	mov	r3, r1
 8004530:	4934      	ldr	r1, [pc, #208]	; (8004604 <Parsing_USB_command+0x6bc>)
 8004532:	482c      	ldr	r0, [pc, #176]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004534:	f007 f932 	bl	800b79c <siscanf>
 8004538:	4603      	mov	r3, r0
 800453a:	2b03      	cmp	r3, #3
 800453c:	d003      	beq.n	8004546 <Parsing_USB_command+0x5fe>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 800453e:	2001      	movs	r0, #1
 8004540:	f7fe fc38 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004544:	e2fa      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		if(CAL_STATE!=LOCK_STATE)
 8004546:	4b30      	ldr	r3, [pc, #192]	; (8004608 <Parsing_USB_command+0x6c0>)
 8004548:	781b      	ldrb	r3, [r3, #0]
 800454a:	2b01      	cmp	r3, #1
 800454c:	d00a      	beq.n	8004564 <Parsing_USB_command+0x61c>
		{
			write_c_value_to_EEPROM(num_of_cap, f_value);
 800454e:	68bb      	ldr	r3, [r7, #8]
 8004550:	461a      	mov	r2, r3
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	4619      	mov	r1, r3
 8004556:	4610      	mov	r0, r2
 8004558:	f7ff f8d4 	bl	8003704 <write_c_value_to_EEPROM>
			send_answer_to_CDC(OK_TYPE_2);
 800455c:	2003      	movs	r0, #3
 800455e:	f7fe fc29 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004562:	e2eb      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004564:	2001      	movs	r0, #1
 8004566:	f7fe fc25 	bl	8002db4 <send_answer_to_CDC>
			return;
 800456a:	e2e7      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
	}


	// ==== SWEEP_RATE command ====
	if(!(strcmp(decoded_string_1,"SWEEP_RATE")))
 800456c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004570:	4926      	ldr	r1, [pc, #152]	; (800460c <Parsing_USB_command+0x6c4>)
 8004572:	4618      	mov	r0, r3
 8004574:	f7fb fe04 	bl	8000180 <strcmp>
 8004578:	4603      	mov	r3, r0
 800457a:	2b00      	cmp	r3, #0
 800457c:	d15c      	bne.n	8004638 <Parsing_USB_command+0x6f0>
	{
		if(sscanf((char *)command_buffer,"%s %s %f", decoded_string_1, decoded_string_2, &f_value)!=3)
 800457e:	f107 010c 	add.w	r1, r7, #12
 8004582:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004586:	1d3b      	adds	r3, r7, #4
 8004588:	9300      	str	r3, [sp, #0]
 800458a:	460b      	mov	r3, r1
 800458c:	4920      	ldr	r1, [pc, #128]	; (8004610 <Parsing_USB_command+0x6c8>)
 800458e:	4815      	ldr	r0, [pc, #84]	; (80045e4 <Parsing_USB_command+0x69c>)
 8004590:	f007 f904 	bl	800b79c <siscanf>
 8004594:	4603      	mov	r3, r0
 8004596:	2b03      	cmp	r3, #3
 8004598:	d003      	beq.n	80045a2 <Parsing_USB_command+0x65a>
		{
			send_answer_to_CDC(ERROR_TYPE_1);
 800459a:	2000      	movs	r0, #0
 800459c:	f7fe fc0a 	bl	8002db4 <send_answer_to_CDC>
			return;
 80045a0:	e2cc      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		if(!(strcmp(decoded_string_2,"AMP")))
 80045a2:	f107 030c 	add.w	r3, r7, #12
 80045a6:	491b      	ldr	r1, [pc, #108]	; (8004614 <Parsing_USB_command+0x6cc>)
 80045a8:	4618      	mov	r0, r3
 80045aa:	f7fb fde9 	bl	8000180 <strcmp>
 80045ae:	4603      	mov	r3, r0
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	d131      	bne.n	8004618 <Parsing_USB_command+0x6d0>
		{
			if(Recalculate_ramp_speed(AMP_SCREEN, f_value)==ret_OK)
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	4619      	mov	r1, r3
 80045b8:	2004      	movs	r0, #4
 80045ba:	f7fe fe55 	bl	8003268 <Recalculate_ramp_speed>
 80045be:	4603      	mov	r3, r0
 80045c0:	2b01      	cmp	r3, #1
 80045c2:	d103      	bne.n	80045cc <Parsing_USB_command+0x684>
			{
				send_answer_to_CDC(OK_TYPE_2);
 80045c4:	2003      	movs	r0, #3
 80045c6:	f7fe fbf5 	bl	8002db4 <send_answer_to_CDC>
				return;
 80045ca:	e2b7      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 80045cc:	2001      	movs	r0, #1
 80045ce:	f7fe fbf1 	bl	8002db4 <send_answer_to_CDC>
				return;
 80045d2:	e2b3      	b.n	8004b3c <Parsing_USB_command+0xbf4>
 80045d4:	0800fc34 	.word	0x0800fc34
 80045d8:	41600000 	.word	0x41600000
 80045dc:	0800fcb4 	.word	0x0800fcb4
 80045e0:	0800fc68 	.word	0x0800fc68
 80045e4:	20000650 	.word	0x20000650
 80045e8:	0800fcc4 	.word	0x0800fcc4
 80045ec:	0800fcd4 	.word	0x0800fcd4
 80045f0:	0800fce4 	.word	0x0800fce4
 80045f4:	0800fcf0 	.word	0x0800fcf0
 80045f8:	0800fcfc 	.word	0x0800fcfc
 80045fc:	0800fd08 	.word	0x0800fd08
 8004600:	0800fd18 	.word	0x0800fd18
 8004604:	0800fd24 	.word	0x0800fd24
 8004608:	2000001d 	.word	0x2000001d
 800460c:	0800fd30 	.word	0x0800fd30
 8004610:	0800fd3c 	.word	0x0800fd3c
 8004614:	0800fd48 	.word	0x0800fd48
			}
		}
		else
		{
			if(Recalculate_ramp_speed(dU_dt_SCREEN, f_value)==ret_OK)
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	4619      	mov	r1, r3
 800461c:	2000      	movs	r0, #0
 800461e:	f7fe fe23 	bl	8003268 <Recalculate_ramp_speed>
 8004622:	4603      	mov	r3, r0
 8004624:	2b01      	cmp	r3, #1
 8004626:	d103      	bne.n	8004630 <Parsing_USB_command+0x6e8>
			{
				send_answer_to_CDC(OK_TYPE_2);
 8004628:	2003      	movs	r0, #3
 800462a:	f7fe fbc3 	bl	8002db4 <send_answer_to_CDC>
				return;
 800462e:	e285      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_2);
 8004630:	2001      	movs	r0, #1
 8004632:	f7fe fbbf 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004636:	e281      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
		}
	}

	// ==== SHOW command ====
	if(!(strcmp(decoded_string_1,"SHOW")))
 8004638:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800463c:	49b3      	ldr	r1, [pc, #716]	; (800490c <Parsing_USB_command+0x9c4>)
 800463e:	4618      	mov	r0, r3
 8004640:	f7fb fd9e 	bl	8000180 <strcmp>
 8004644:	4603      	mov	r3, r0
 8004646:	2b00      	cmp	r3, #0
 8004648:	f040 8228 	bne.w	8004a9c <Parsing_USB_command+0xb54>
	{

		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 800464c:	f107 030c 	add.w	r3, r7, #12
 8004650:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004654:	49ae      	ldr	r1, [pc, #696]	; (8004910 <Parsing_USB_command+0x9c8>)
 8004656:	48af      	ldr	r0, [pc, #700]	; (8004914 <Parsing_USB_command+0x9cc>)
 8004658:	f007 f8a0 	bl	800b79c <siscanf>
 800465c:	4603      	mov	r3, r0
 800465e:	2b02      	cmp	r3, #2
 8004660:	d003      	beq.n	800466a <Parsing_USB_command+0x722>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004662:	2001      	movs	r0, #1
 8004664:	f7fe fba6 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004668:	e268      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"INFO"))){
 800466a:	f107 030c 	add.w	r3, r7, #12
 800466e:	49aa      	ldr	r1, [pc, #680]	; (8004918 <Parsing_USB_command+0x9d0>)
 8004670:	4618      	mov	r0, r3
 8004672:	f7fb fd85 	bl	8000180 <strcmp>
 8004676:	4603      	mov	r3, r0
 8004678:	2b00      	cmp	r3, #0
 800467a:	f040 81fe 	bne.w	8004a7a <Parsing_USB_command+0xb32>
			sprintf((char *)large_string_buffer,"\n\rDAC 0xFFFFF voltage calibration constant: %1.6E\n\r",cal_DAC_up_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800467e:	4ba7      	ldr	r3, [pc, #668]	; (800491c <Parsing_USB_command+0x9d4>)
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	4618      	mov	r0, r3
 8004684:	f7fb fef2 	bl	800046c <__aeabi_f2d>
 8004688:	4602      	mov	r2, r0
 800468a:	460b      	mov	r3, r1
 800468c:	49a4      	ldr	r1, [pc, #656]	; (8004920 <Parsing_USB_command+0x9d8>)
 800468e:	48a5      	ldr	r0, [pc, #660]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004690:	f007 f864 	bl	800b75c <siprintf>
 8004694:	e004      	b.n	80046a0 <Parsing_USB_command+0x758>
 8004696:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800469a:	3301      	adds	r3, #1
 800469c:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80046a0:	48a0      	ldr	r0, [pc, #640]	; (8004924 <Parsing_USB_command+0x9dc>)
 80046a2:	f7fb fd77 	bl	8000194 <strlen>
 80046a6:	4603      	mov	r3, r0
 80046a8:	b29b      	uxth	r3, r3
 80046aa:	4619      	mov	r1, r3
 80046ac:	489d      	ldr	r0, [pc, #628]	; (8004924 <Parsing_USB_command+0x9dc>)
 80046ae:	f005 fef5 	bl	800a49c <CDC_Transmit_FS>
 80046b2:	4603      	mov	r3, r0
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d003      	beq.n	80046c0 <Parsing_USB_command+0x778>
 80046b8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046bc:	2bff      	cmp	r3, #255	; 0xff
 80046be:	d1ea      	bne.n	8004696 <Parsing_USB_command+0x74e>
			sprintf((char *)large_string_buffer,"DAC 0x00000 voltage calibration constant: %1.6E\n\r",cal_DAC_down_voltage);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80046c0:	4b99      	ldr	r3, [pc, #612]	; (8004928 <Parsing_USB_command+0x9e0>)
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	4618      	mov	r0, r3
 80046c6:	f7fb fed1 	bl	800046c <__aeabi_f2d>
 80046ca:	4602      	mov	r2, r0
 80046cc:	460b      	mov	r3, r1
 80046ce:	4997      	ldr	r1, [pc, #604]	; (800492c <Parsing_USB_command+0x9e4>)
 80046d0:	4894      	ldr	r0, [pc, #592]	; (8004924 <Parsing_USB_command+0x9dc>)
 80046d2:	f007 f843 	bl	800b75c <siprintf>
 80046d6:	e004      	b.n	80046e2 <Parsing_USB_command+0x79a>
 80046d8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046dc:	3301      	adds	r3, #1
 80046de:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80046e2:	4890      	ldr	r0, [pc, #576]	; (8004924 <Parsing_USB_command+0x9dc>)
 80046e4:	f7fb fd56 	bl	8000194 <strlen>
 80046e8:	4603      	mov	r3, r0
 80046ea:	b29b      	uxth	r3, r3
 80046ec:	4619      	mov	r1, r3
 80046ee:	488d      	ldr	r0, [pc, #564]	; (8004924 <Parsing_USB_command+0x9dc>)
 80046f0:	f005 fed4 	bl	800a49c <CDC_Transmit_FS>
 80046f4:	4603      	mov	r3, r0
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d003      	beq.n	8004702 <Parsing_USB_command+0x7ba>
 80046fa:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80046fe:	2bff      	cmp	r3, #255	; 0xff
 8004700:	d1ea      	bne.n	80046d8 <Parsing_USB_command+0x790>
			sprintf((char *)large_string_buffer,"Linearity correction A: %1.6E\n\r",corr_coeff_1);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004702:	4b8b      	ldr	r3, [pc, #556]	; (8004930 <Parsing_USB_command+0x9e8>)
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	4618      	mov	r0, r3
 8004708:	f7fb feb0 	bl	800046c <__aeabi_f2d>
 800470c:	4602      	mov	r2, r0
 800470e:	460b      	mov	r3, r1
 8004710:	4988      	ldr	r1, [pc, #544]	; (8004934 <Parsing_USB_command+0x9ec>)
 8004712:	4884      	ldr	r0, [pc, #528]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004714:	f007 f822 	bl	800b75c <siprintf>
 8004718:	e004      	b.n	8004724 <Parsing_USB_command+0x7dc>
 800471a:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 800471e:	3301      	adds	r3, #1
 8004720:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004724:	487f      	ldr	r0, [pc, #508]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004726:	f7fb fd35 	bl	8000194 <strlen>
 800472a:	4603      	mov	r3, r0
 800472c:	b29b      	uxth	r3, r3
 800472e:	4619      	mov	r1, r3
 8004730:	487c      	ldr	r0, [pc, #496]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004732:	f005 feb3 	bl	800a49c <CDC_Transmit_FS>
 8004736:	4603      	mov	r3, r0
 8004738:	2b00      	cmp	r3, #0
 800473a:	d003      	beq.n	8004744 <Parsing_USB_command+0x7fc>
 800473c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004740:	2bff      	cmp	r3, #255	; 0xff
 8004742:	d1ea      	bne.n	800471a <Parsing_USB_command+0x7d2>
			sprintf((char *)large_string_buffer,"Linearity correction B: %1.6E\n\r",corr_coeff_2);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004744:	4b7c      	ldr	r3, [pc, #496]	; (8004938 <Parsing_USB_command+0x9f0>)
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4618      	mov	r0, r3
 800474a:	f7fb fe8f 	bl	800046c <__aeabi_f2d>
 800474e:	4602      	mov	r2, r0
 8004750:	460b      	mov	r3, r1
 8004752:	497a      	ldr	r1, [pc, #488]	; (800493c <Parsing_USB_command+0x9f4>)
 8004754:	4873      	ldr	r0, [pc, #460]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004756:	f007 f801 	bl	800b75c <siprintf>
 800475a:	e004      	b.n	8004766 <Parsing_USB_command+0x81e>
 800475c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004760:	3301      	adds	r3, #1
 8004762:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004766:	486f      	ldr	r0, [pc, #444]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004768:	f7fb fd14 	bl	8000194 <strlen>
 800476c:	4603      	mov	r3, r0
 800476e:	b29b      	uxth	r3, r3
 8004770:	4619      	mov	r1, r3
 8004772:	486c      	ldr	r0, [pc, #432]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004774:	f005 fe92 	bl	800a49c <CDC_Transmit_FS>
 8004778:	4603      	mov	r3, r0
 800477a:	2b00      	cmp	r3, #0
 800477c:	d003      	beq.n	8004786 <Parsing_USB_command+0x83e>
 800477e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004782:	2bff      	cmp	r3, #255	; 0xff
 8004784:	d1ea      	bne.n	800475c <Parsing_USB_command+0x814>
			sprintf((char *)large_string_buffer,"Linearity correction C: %1.6E\n\r",corr_coeff_3);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004786:	4b6e      	ldr	r3, [pc, #440]	; (8004940 <Parsing_USB_command+0x9f8>)
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	4618      	mov	r0, r3
 800478c:	f7fb fe6e 	bl	800046c <__aeabi_f2d>
 8004790:	4602      	mov	r2, r0
 8004792:	460b      	mov	r3, r1
 8004794:	496b      	ldr	r1, [pc, #428]	; (8004944 <Parsing_USB_command+0x9fc>)
 8004796:	4863      	ldr	r0, [pc, #396]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004798:	f006 ffe0 	bl	800b75c <siprintf>
 800479c:	e004      	b.n	80047a8 <Parsing_USB_command+0x860>
 800479e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047a2:	3301      	adds	r3, #1
 80047a4:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80047a8:	485e      	ldr	r0, [pc, #376]	; (8004924 <Parsing_USB_command+0x9dc>)
 80047aa:	f7fb fcf3 	bl	8000194 <strlen>
 80047ae:	4603      	mov	r3, r0
 80047b0:	b29b      	uxth	r3, r3
 80047b2:	4619      	mov	r1, r3
 80047b4:	485b      	ldr	r0, [pc, #364]	; (8004924 <Parsing_USB_command+0x9dc>)
 80047b6:	f005 fe71 	bl	800a49c <CDC_Transmit_FS>
 80047ba:	4603      	mov	r3, r0
 80047bc:	2b00      	cmp	r3, #0
 80047be:	d003      	beq.n	80047c8 <Parsing_USB_command+0x880>
 80047c0:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047c4:	2bff      	cmp	r3, #255	; 0xff
 80047c6:	d1ea      	bne.n	800479e <Parsing_USB_command+0x856>
			sprintf((char *)large_string_buffer,"LT5400 gain X2 correction: %1.6E\n\r",gain_x2_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80047c8:	4b5f      	ldr	r3, [pc, #380]	; (8004948 <Parsing_USB_command+0xa00>)
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	4618      	mov	r0, r3
 80047ce:	f7fb fe4d 	bl	800046c <__aeabi_f2d>
 80047d2:	4602      	mov	r2, r0
 80047d4:	460b      	mov	r3, r1
 80047d6:	495d      	ldr	r1, [pc, #372]	; (800494c <Parsing_USB_command+0xa04>)
 80047d8:	4852      	ldr	r0, [pc, #328]	; (8004924 <Parsing_USB_command+0x9dc>)
 80047da:	f006 ffbf 	bl	800b75c <siprintf>
 80047de:	e004      	b.n	80047ea <Parsing_USB_command+0x8a2>
 80047e0:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80047e4:	3301      	adds	r3, #1
 80047e6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80047ea:	484e      	ldr	r0, [pc, #312]	; (8004924 <Parsing_USB_command+0x9dc>)
 80047ec:	f7fb fcd2 	bl	8000194 <strlen>
 80047f0:	4603      	mov	r3, r0
 80047f2:	b29b      	uxth	r3, r3
 80047f4:	4619      	mov	r1, r3
 80047f6:	484b      	ldr	r0, [pc, #300]	; (8004924 <Parsing_USB_command+0x9dc>)
 80047f8:	f005 fe50 	bl	800a49c <CDC_Transmit_FS>
 80047fc:	4603      	mov	r3, r0
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d003      	beq.n	800480a <Parsing_USB_command+0x8c2>
 8004802:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004806:	2bff      	cmp	r3, #255	; 0xff
 8004808:	d1ea      	bne.n	80047e0 <Parsing_USB_command+0x898>
			sprintf((char *)large_string_buffer,"LT5400 gain X4 correction: %1.6E\n\r",gain_x4_coeff);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800480a:	4b51      	ldr	r3, [pc, #324]	; (8004950 <Parsing_USB_command+0xa08>)
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	4618      	mov	r0, r3
 8004810:	f7fb fe2c 	bl	800046c <__aeabi_f2d>
 8004814:	4602      	mov	r2, r0
 8004816:	460b      	mov	r3, r1
 8004818:	494e      	ldr	r1, [pc, #312]	; (8004954 <Parsing_USB_command+0xa0c>)
 800481a:	4842      	ldr	r0, [pc, #264]	; (8004924 <Parsing_USB_command+0x9dc>)
 800481c:	f006 ff9e 	bl	800b75c <siprintf>
 8004820:	e004      	b.n	800482c <Parsing_USB_command+0x8e4>
 8004822:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004826:	3301      	adds	r3, #1
 8004828:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800482c:	483d      	ldr	r0, [pc, #244]	; (8004924 <Parsing_USB_command+0x9dc>)
 800482e:	f7fb fcb1 	bl	8000194 <strlen>
 8004832:	4603      	mov	r3, r0
 8004834:	b29b      	uxth	r3, r3
 8004836:	4619      	mov	r1, r3
 8004838:	483a      	ldr	r0, [pc, #232]	; (8004924 <Parsing_USB_command+0x9dc>)
 800483a:	f005 fe2f 	bl	800a49c <CDC_Transmit_FS>
 800483e:	4603      	mov	r3, r0
 8004840:	2b00      	cmp	r3, #0
 8004842:	d003      	beq.n	800484c <Parsing_USB_command+0x904>
 8004844:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004848:	2bff      	cmp	r3, #255	; 0xff
 800484a:	d1ea      	bne.n	8004822 <Parsing_USB_command+0x8da>
			for(uint8_t i=0;i<C_value_max_count;i++)
 800484c:	2300      	movs	r3, #0
 800484e:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 8004852:	e02d      	b.n	80048b0 <Parsing_USB_command+0x968>
			{
				sprintf((char *)large_string_buffer,"C%d capacitance: %1.6EpF\n\r",(int)i,C_value[i]);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004854:	f897 404e 	ldrb.w	r4, [r7, #78]	; 0x4e
 8004858:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 800485c:	4a3e      	ldr	r2, [pc, #248]	; (8004958 <Parsing_USB_command+0xa10>)
 800485e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004862:	4618      	mov	r0, r3
 8004864:	f7fb fe02 	bl	800046c <__aeabi_f2d>
 8004868:	4602      	mov	r2, r0
 800486a:	460b      	mov	r3, r1
 800486c:	e9cd 2300 	strd	r2, r3, [sp]
 8004870:	4622      	mov	r2, r4
 8004872:	493a      	ldr	r1, [pc, #232]	; (800495c <Parsing_USB_command+0xa14>)
 8004874:	482b      	ldr	r0, [pc, #172]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004876:	f006 ff71 	bl	800b75c <siprintf>
 800487a:	e004      	b.n	8004886 <Parsing_USB_command+0x93e>
 800487c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004880:	3301      	adds	r3, #1
 8004882:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004886:	4827      	ldr	r0, [pc, #156]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004888:	f7fb fc84 	bl	8000194 <strlen>
 800488c:	4603      	mov	r3, r0
 800488e:	b29b      	uxth	r3, r3
 8004890:	4619      	mov	r1, r3
 8004892:	4824      	ldr	r0, [pc, #144]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004894:	f005 fe02 	bl	800a49c <CDC_Transmit_FS>
 8004898:	4603      	mov	r3, r0
 800489a:	2b00      	cmp	r3, #0
 800489c:	d003      	beq.n	80048a6 <Parsing_USB_command+0x95e>
 800489e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80048a2:	2bff      	cmp	r3, #255	; 0xff
 80048a4:	d1ea      	bne.n	800487c <Parsing_USB_command+0x934>
			for(uint8_t i=0;i<C_value_max_count;i++)
 80048a6:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 80048aa:	3301      	adds	r3, #1
 80048ac:	f887 304e 	strb.w	r3, [r7, #78]	; 0x4e
 80048b0:	f897 304e 	ldrb.w	r3, [r7, #78]	; 0x4e
 80048b4:	2b09      	cmp	r3, #9
 80048b6:	d9cd      	bls.n	8004854 <Parsing_USB_command+0x90c>
			}
			sprintf((char *)large_string_buffer,"\n\rDAC code: 0x%x\n\r",(unsigned int)DAC_code);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80048b8:	4b29      	ldr	r3, [pc, #164]	; (8004960 <Parsing_USB_command+0xa18>)
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	461a      	mov	r2, r3
 80048be:	4929      	ldr	r1, [pc, #164]	; (8004964 <Parsing_USB_command+0xa1c>)
 80048c0:	4818      	ldr	r0, [pc, #96]	; (8004924 <Parsing_USB_command+0x9dc>)
 80048c2:	f006 ff4b 	bl	800b75c <siprintf>
 80048c6:	e004      	b.n	80048d2 <Parsing_USB_command+0x98a>
 80048c8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80048cc:	3301      	adds	r3, #1
 80048ce:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80048d2:	4814      	ldr	r0, [pc, #80]	; (8004924 <Parsing_USB_command+0x9dc>)
 80048d4:	f7fb fc5e 	bl	8000194 <strlen>
 80048d8:	4603      	mov	r3, r0
 80048da:	b29b      	uxth	r3, r3
 80048dc:	4619      	mov	r1, r3
 80048de:	4811      	ldr	r0, [pc, #68]	; (8004924 <Parsing_USB_command+0x9dc>)
 80048e0:	f005 fddc 	bl	800a49c <CDC_Transmit_FS>
 80048e4:	4603      	mov	r3, r0
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	d003      	beq.n	80048f2 <Parsing_USB_command+0x9aa>
 80048ea:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80048ee:	2bff      	cmp	r3, #255	; 0xff
 80048f0:	d1ea      	bne.n	80048c8 <Parsing_USB_command+0x980>
			sprintf((char *)large_string_buffer,"DDS FTW: 0x%x\n\r",(unsigned int)DDS_FTW);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80048f2:	4b1d      	ldr	r3, [pc, #116]	; (8004968 <Parsing_USB_command+0xa20>)
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	4618      	mov	r0, r3
 80048f8:	f7fc fc2c 	bl	8001154 <__aeabi_f2uiz>
 80048fc:	4603      	mov	r3, r0
 80048fe:	461a      	mov	r2, r3
 8004900:	491a      	ldr	r1, [pc, #104]	; (800496c <Parsing_USB_command+0xa24>)
 8004902:	4808      	ldr	r0, [pc, #32]	; (8004924 <Parsing_USB_command+0x9dc>)
 8004904:	f006 ff2a 	bl	800b75c <siprintf>
 8004908:	e037      	b.n	800497a <Parsing_USB_command+0xa32>
 800490a:	bf00      	nop
 800490c:	0800fd4c 	.word	0x0800fd4c
 8004910:	0800fc2c 	.word	0x0800fc2c
 8004914:	20000650 	.word	0x20000650
 8004918:	0800fd54 	.word	0x0800fd54
 800491c:	20000774 	.word	0x20000774
 8004920:	0800fd5c 	.word	0x0800fd5c
 8004924:	200006e4 	.word	0x200006e4
 8004928:	20000778 	.word	0x20000778
 800492c:	0800fd90 	.word	0x0800fd90
 8004930:	2000052c 	.word	0x2000052c
 8004934:	0800fdc4 	.word	0x0800fdc4
 8004938:	20000530 	.word	0x20000530
 800493c:	0800fde4 	.word	0x0800fde4
 8004940:	20000534 	.word	0x20000534
 8004944:	0800fe04 	.word	0x0800fe04
 8004948:	20000538 	.word	0x20000538
 800494c:	0800fe24 	.word	0x0800fe24
 8004950:	2000053c 	.word	0x2000053c
 8004954:	0800fe48 	.word	0x0800fe48
 8004958:	20000620 	.word	0x20000620
 800495c:	0800fe6c 	.word	0x0800fe6c
 8004960:	20000780 	.word	0x20000780
 8004964:	0800fe88 	.word	0x0800fe88
 8004968:	2000075c 	.word	0x2000075c
 800496c:	0800fe9c 	.word	0x0800fe9c
 8004970:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004974:	3301      	adds	r3, #1
 8004976:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800497a:	4872      	ldr	r0, [pc, #456]	; (8004b44 <Parsing_USB_command+0xbfc>)
 800497c:	f7fb fc0a 	bl	8000194 <strlen>
 8004980:	4603      	mov	r3, r0
 8004982:	b29b      	uxth	r3, r3
 8004984:	4619      	mov	r1, r3
 8004986:	486f      	ldr	r0, [pc, #444]	; (8004b44 <Parsing_USB_command+0xbfc>)
 8004988:	f005 fd88 	bl	800a49c <CDC_Transmit_FS>
 800498c:	4603      	mov	r3, r0
 800498e:	2b00      	cmp	r3, #0
 8004990:	d003      	beq.n	800499a <Parsing_USB_command+0xa52>
 8004992:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004996:	2bff      	cmp	r3, #255	; 0xff
 8004998:	d1ea      	bne.n	8004970 <Parsing_USB_command+0xa28>
			sprintf((char *)large_string_buffer,"CPLD control word: 0x%x\n\r",CPLD_WORD);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 800499a:	4b6b      	ldr	r3, [pc, #428]	; (8004b48 <Parsing_USB_command+0xc00>)
 800499c:	781b      	ldrb	r3, [r3, #0]
 800499e:	461a      	mov	r2, r3
 80049a0:	496a      	ldr	r1, [pc, #424]	; (8004b4c <Parsing_USB_command+0xc04>)
 80049a2:	4868      	ldr	r0, [pc, #416]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049a4:	f006 feda 	bl	800b75c <siprintf>
 80049a8:	e004      	b.n	80049b4 <Parsing_USB_command+0xa6c>
 80049aa:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80049ae:	3301      	adds	r3, #1
 80049b0:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80049b4:	4863      	ldr	r0, [pc, #396]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049b6:	f7fb fbed 	bl	8000194 <strlen>
 80049ba:	4603      	mov	r3, r0
 80049bc:	b29b      	uxth	r3, r3
 80049be:	4619      	mov	r1, r3
 80049c0:	4860      	ldr	r0, [pc, #384]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049c2:	f005 fd6b 	bl	800a49c <CDC_Transmit_FS>
 80049c6:	4603      	mov	r3, r0
 80049c8:	2b00      	cmp	r3, #0
 80049ca:	d003      	beq.n	80049d4 <Parsing_USB_command+0xa8c>
 80049cc:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80049d0:	2bff      	cmp	r3, #255	; 0xff
 80049d2:	d1ea      	bne.n	80049aa <Parsing_USB_command+0xa62>
			sprintf((char *)large_string_buffer,"Output mode: 0x%x\n\r",Current_output_status);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 80049d4:	4b5e      	ldr	r3, [pc, #376]	; (8004b50 <Parsing_USB_command+0xc08>)
 80049d6:	781b      	ldrb	r3, [r3, #0]
 80049d8:	461a      	mov	r2, r3
 80049da:	495e      	ldr	r1, [pc, #376]	; (8004b54 <Parsing_USB_command+0xc0c>)
 80049dc:	4859      	ldr	r0, [pc, #356]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049de:	f006 febd 	bl	800b75c <siprintf>
 80049e2:	e004      	b.n	80049ee <Parsing_USB_command+0xaa6>
 80049e4:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80049e8:	3301      	adds	r3, #1
 80049ea:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80049ee:	4855      	ldr	r0, [pc, #340]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049f0:	f7fb fbd0 	bl	8000194 <strlen>
 80049f4:	4603      	mov	r3, r0
 80049f6:	b29b      	uxth	r3, r3
 80049f8:	4619      	mov	r1, r3
 80049fa:	4852      	ldr	r0, [pc, #328]	; (8004b44 <Parsing_USB_command+0xbfc>)
 80049fc:	f005 fd4e 	bl	800a49c <CDC_Transmit_FS>
 8004a00:	4603      	mov	r3, r0
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	d003      	beq.n	8004a0e <Parsing_USB_command+0xac6>
 8004a06:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004a0a:	2bff      	cmp	r3, #255	; 0xff
 8004a0c:	d1ea      	bne.n	80049e4 <Parsing_USB_command+0xa9c>
			sprintf((char *)large_string_buffer,"Temperature: %2.3f°C\n\r",TMP117_get_Temperature(hi2c1)*0.0078125);while((CDC_Transmit_FS((uint8_t *)large_string_buffer, strlen((const char *)large_string_buffer))!=USBD_OK)&&cdc_counter<0xFF)cdc_counter++;
 8004a0e:	4c52      	ldr	r4, [pc, #328]	; (8004b58 <Parsing_USB_command+0xc10>)
 8004a10:	4668      	mov	r0, sp
 8004a12:	f104 0310 	add.w	r3, r4, #16
 8004a16:	2244      	movs	r2, #68	; 0x44
 8004a18:	4619      	mov	r1, r3
 8004a1a:	f006 f817 	bl	800aa4c <memcpy>
 8004a1e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8004a22:	f000 fc9f 	bl	8005364 <TMP117_get_Temperature>
 8004a26:	4603      	mov	r3, r0
 8004a28:	4618      	mov	r0, r3
 8004a2a:	f7fb fd0d 	bl	8000448 <__aeabi_i2d>
 8004a2e:	f04f 0200 	mov.w	r2, #0
 8004a32:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8004a36:	f7fb fd71 	bl	800051c <__aeabi_dmul>
 8004a3a:	4602      	mov	r2, r0
 8004a3c:	460b      	mov	r3, r1
 8004a3e:	4947      	ldr	r1, [pc, #284]	; (8004b5c <Parsing_USB_command+0xc14>)
 8004a40:	4840      	ldr	r0, [pc, #256]	; (8004b44 <Parsing_USB_command+0xbfc>)
 8004a42:	f006 fe8b 	bl	800b75c <siprintf>
 8004a46:	e004      	b.n	8004a52 <Parsing_USB_command+0xb0a>
 8004a48:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004a4c:	3301      	adds	r3, #1
 8004a4e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8004a52:	483c      	ldr	r0, [pc, #240]	; (8004b44 <Parsing_USB_command+0xbfc>)
 8004a54:	f7fb fb9e 	bl	8000194 <strlen>
 8004a58:	4603      	mov	r3, r0
 8004a5a:	b29b      	uxth	r3, r3
 8004a5c:	4619      	mov	r1, r3
 8004a5e:	4839      	ldr	r0, [pc, #228]	; (8004b44 <Parsing_USB_command+0xbfc>)
 8004a60:	f005 fd1c 	bl	800a49c <CDC_Transmit_FS>
 8004a64:	4603      	mov	r3, r0
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d003      	beq.n	8004a72 <Parsing_USB_command+0xb2a>
 8004a6a:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8004a6e:	2bff      	cmp	r3, #255	; 0xff
 8004a70:	d1ea      	bne.n	8004a48 <Parsing_USB_command+0xb00>
			send_answer_to_CDC(OK_TYPE_2);
 8004a72:	2003      	movs	r0, #3
 8004a74:	f7fe f99e 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004a78:	e060      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"HELP_EXTENDED"))){
 8004a7a:	f107 030c 	add.w	r3, r7, #12
 8004a7e:	4938      	ldr	r1, [pc, #224]	; (8004b60 <Parsing_USB_command+0xc18>)
 8004a80:	4618      	mov	r0, r3
 8004a82:	f7fb fb7d 	bl	8000180 <strcmp>
 8004a86:	4603      	mov	r3, r0
 8004a88:	2b00      	cmp	r3, #0
 8004a8a:	d103      	bne.n	8004a94 <Parsing_USB_command+0xb4c>
				send_answer_to_CDC(EXTENDED_HELP);
 8004a8c:	2010      	movs	r0, #16
 8004a8e:	f7fe f991 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004a92:	e053      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				send_answer_to_CDC(ERROR_TYPE_1);
 8004a94:	2000      	movs	r0, #0
 8004a96:	f7fe f98d 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004a9a:	e04f      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
		}
	}

	// ==== SWEEP_DIRECTION command ====
	if(!(strcmp(decoded_string_1,"SWEEP_DIRECTION")))
 8004a9c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004aa0:	4930      	ldr	r1, [pc, #192]	; (8004b64 <Parsing_USB_command+0xc1c>)
 8004aa2:	4618      	mov	r0, r3
 8004aa4:	f7fb fb6c 	bl	8000180 <strcmp>
 8004aa8:	4603      	mov	r3, r0
 8004aaa:	2b00      	cmp	r3, #0
 8004aac:	d142      	bne.n	8004b34 <Parsing_USB_command+0xbec>
	{
		if(sscanf((char *)command_buffer,"%s %s", decoded_string_1, decoded_string_2)!=2)
 8004aae:	f107 030c 	add.w	r3, r7, #12
 8004ab2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8004ab6:	492c      	ldr	r1, [pc, #176]	; (8004b68 <Parsing_USB_command+0xc20>)
 8004ab8:	482c      	ldr	r0, [pc, #176]	; (8004b6c <Parsing_USB_command+0xc24>)
 8004aba:	f006 fe6f 	bl	800b79c <siscanf>
 8004abe:	4603      	mov	r3, r0
 8004ac0:	2b02      	cmp	r3, #2
 8004ac2:	d003      	beq.n	8004acc <Parsing_USB_command+0xb84>
		{
			send_answer_to_CDC(ERROR_TYPE_2);
 8004ac4:	2001      	movs	r0, #1
 8004ac6:	f7fe f975 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004aca:	e037      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}

		if(!(strcmp(decoded_string_2,"UP"))){
 8004acc:	f107 030c 	add.w	r3, r7, #12
 8004ad0:	4927      	ldr	r1, [pc, #156]	; (8004b70 <Parsing_USB_command+0xc28>)
 8004ad2:	4618      	mov	r0, r3
 8004ad4:	f7fb fb54 	bl	8000180 <strcmp>
 8004ad8:	4603      	mov	r3, r0
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d106      	bne.n	8004aec <Parsing_USB_command+0xba4>
			DAC_code_direction=DIRECTION_UP_STATE;
 8004ade:	4b25      	ldr	r3, [pc, #148]	; (8004b74 <Parsing_USB_command+0xc2c>)
 8004ae0:	2201      	movs	r2, #1
 8004ae2:	701a      	strb	r2, [r3, #0]
			send_answer_to_CDC(OK_TYPE_2);
 8004ae4:	2003      	movs	r0, #3
 8004ae6:	f7fe f965 	bl	8002db4 <send_answer_to_CDC>
			return;
 8004aea:	e027      	b.n	8004b3c <Parsing_USB_command+0xbf4>
		}
		else
		{
			if(!(strcmp(decoded_string_2,"DOWN"))){
 8004aec:	f107 030c 	add.w	r3, r7, #12
 8004af0:	4921      	ldr	r1, [pc, #132]	; (8004b78 <Parsing_USB_command+0xc30>)
 8004af2:	4618      	mov	r0, r3
 8004af4:	f7fb fb44 	bl	8000180 <strcmp>
 8004af8:	4603      	mov	r3, r0
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d106      	bne.n	8004b0c <Parsing_USB_command+0xbc4>
				DAC_code_direction=DIRECTION_DOWN_STATE;
 8004afe:	4b1d      	ldr	r3, [pc, #116]	; (8004b74 <Parsing_USB_command+0xc2c>)
 8004b00:	2200      	movs	r2, #0
 8004b02:	701a      	strb	r2, [r3, #0]
				send_answer_to_CDC(OK_TYPE_2);
 8004b04:	2003      	movs	r0, #3
 8004b06:	f7fe f955 	bl	8002db4 <send_answer_to_CDC>
				return;
 8004b0a:	e017      	b.n	8004b3c <Parsing_USB_command+0xbf4>
			}
			else
			{
				if(!(strcmp(decoded_string_2,"CYCLE"))){
 8004b0c:	f107 030c 	add.w	r3, r7, #12
 8004b10:	491a      	ldr	r1, [pc, #104]	; (8004b7c <Parsing_USB_command+0xc34>)
 8004b12:	4618      	mov	r0, r3
 8004b14:	f7fb fb34 	bl	8000180 <strcmp>
 8004b18:	4603      	mov	r3, r0
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d106      	bne.n	8004b2c <Parsing_USB_command+0xbe4>
					DAC_code_direction=DIRECTION_CYCLE_STATE;
 8004b1e:	4b15      	ldr	r3, [pc, #84]	; (8004b74 <Parsing_USB_command+0xc2c>)
 8004b20:	2202      	movs	r2, #2
 8004b22:	701a      	strb	r2, [r3, #0]
					send_answer_to_CDC(OK_TYPE_2);
 8004b24:	2003      	movs	r0, #3
 8004b26:	f7fe f945 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004b2a:	e007      	b.n	8004b3c <Parsing_USB_command+0xbf4>
				}
				else
				{
					send_answer_to_CDC(ERROR_TYPE_1);
 8004b2c:	2000      	movs	r0, #0
 8004b2e:	f7fe f941 	bl	8002db4 <send_answer_to_CDC>
					return;
 8004b32:	e003      	b.n	8004b3c <Parsing_USB_command+0xbf4>
				}
			}
		}
	}

	send_answer_to_CDC(ERROR_TYPE_1);
 8004b34:	2000      	movs	r0, #0
 8004b36:	f7fe f93d 	bl	8002db4 <send_answer_to_CDC>
	return;
 8004b3a:	bf00      	nop
}
 8004b3c:	3754      	adds	r7, #84	; 0x54
 8004b3e:	46bd      	mov	sp, r7
 8004b40:	bd90      	pop	{r4, r7, pc}
 8004b42:	bf00      	nop
 8004b44:	200006e4 	.word	0x200006e4
 8004b48:	2000075a 	.word	0x2000075a
 8004b4c:	0800feac 	.word	0x0800feac
 8004b50:	2000077c 	.word	0x2000077c
 8004b54:	0800fec8 	.word	0x0800fec8
 8004b58:	20000690 	.word	0x20000690
 8004b5c:	0800fedc 	.word	0x0800fedc
 8004b60:	0800fef4 	.word	0x0800fef4
 8004b64:	0800ff04 	.word	0x0800ff04
 8004b68:	0800fc2c 	.word	0x0800fc2c
 8004b6c:	20000650 	.word	0x20000650
 8004b70:	0800ff14 	.word	0x0800ff14
 8004b74:	20000784 	.word	0x20000784
 8004b78:	0800fc60 	.word	0x0800fc60
 8004b7c:	0800ff18 	.word	0x0800ff18

08004b80 <Write_to_circ_buffer>:

void Write_to_circ_buffer(uint8_t Buf)
{
 8004b80:	b580      	push	{r7, lr}
 8004b82:	b082      	sub	sp, #8
 8004b84:	af00      	add	r7, sp, #0
 8004b86:	4603      	mov	r3, r0
 8004b88:	71fb      	strb	r3, [r7, #7]
	if(CIRC_GBUF_PUSH(USB_rx_command_buffer, &Buf))	CIRC_GBUF_FLUSH(USB_rx_command_buffer); // If out of space, something wrong, clean all !!!
 8004b8a:	1dfb      	adds	r3, r7, #7
 8004b8c:	4618      	mov	r0, r3
 8004b8e:	f7fe ffd3 	bl	8003b38 <USB_rx_command_buffer_push_refd>
 8004b92:	4603      	mov	r3, r0
 8004b94:	2b00      	cmp	r3, #0
 8004b96:	d005      	beq.n	8004ba4 <Write_to_circ_buffer+0x24>
 8004b98:	4b04      	ldr	r3, [pc, #16]	; (8004bac <Write_to_circ_buffer+0x2c>)
 8004b9a:	2200      	movs	r2, #0
 8004b9c:	809a      	strh	r2, [r3, #4]
 8004b9e:	4b03      	ldr	r3, [pc, #12]	; (8004bac <Write_to_circ_buffer+0x2c>)
 8004ba0:	2200      	movs	r2, #0
 8004ba2:	80da      	strh	r2, [r3, #6]
}
 8004ba4:	bf00      	nop
 8004ba6:	3708      	adds	r7, #8
 8004ba8:	46bd      	mov	sp, r7
 8004baa:	bd80      	pop	{r7, pc}
 8004bac:	20000000 	.word	0x20000000

08004bb0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004bb0:	b480      	push	{r7}
 8004bb2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004bb4:	b672      	cpsid	i
}
 8004bb6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8004bb8:	e7fe      	b.n	8004bb8 <Error_Handler+0x8>
	...

08004bbc <MX_SPI1_Init>:
SPI_HandleTypeDef hspi1;
SPI_HandleTypeDef hspi2;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8004bbc:	b580      	push	{r7, lr}
 8004bbe:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8004bc0:	4b16      	ldr	r3, [pc, #88]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bc2:	4a17      	ldr	r2, [pc, #92]	; (8004c20 <MX_SPI1_Init+0x64>)
 8004bc4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004bc6:	4b15      	ldr	r3, [pc, #84]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bc8:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004bcc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004bce:	4b13      	ldr	r3, [pc, #76]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bd0:	2200      	movs	r2, #0
 8004bd2:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 8004bd4:	4b11      	ldr	r3, [pc, #68]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bd6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004bda:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004bdc:	4b0f      	ldr	r3, [pc, #60]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bde:	2200      	movs	r2, #0
 8004be0:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8004be2:	4b0e      	ldr	r3, [pc, #56]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004be4:	2201      	movs	r2, #1
 8004be6:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004be8:	4b0c      	ldr	r3, [pc, #48]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bea:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004bee:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8004bf0:	4b0a      	ldr	r3, [pc, #40]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bf2:	2218      	movs	r2, #24
 8004bf4:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004bf6:	4b09      	ldr	r3, [pc, #36]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bf8:	2200      	movs	r2, #0
 8004bfa:	621a      	str	r2, [r3, #32]
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004bfc:	4b07      	ldr	r3, [pc, #28]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004bfe:	2200      	movs	r2, #0
 8004c00:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8004c02:	4b06      	ldr	r3, [pc, #24]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004c04:	220a      	movs	r2, #10
 8004c06:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004c08:	4804      	ldr	r0, [pc, #16]	; (8004c1c <MX_SPI1_Init+0x60>)
 8004c0a:	f003 f833 	bl	8007c74 <HAL_SPI_Init>
 8004c0e:	4603      	mov	r3, r0
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d001      	beq.n	8004c18 <MX_SPI1_Init+0x5c>
  {
    Error_Handler();
 8004c14:	f7ff ffcc 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8004c18:	bf00      	nop
 8004c1a:	bd80      	pop	{r7, pc}
 8004c1c:	2000078c 	.word	0x2000078c
 8004c20:	40013000 	.word	0x40013000

08004c24 <MX_SPI2_Init>:
/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8004c24:	b580      	push	{r7, lr}
 8004c26:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8004c28:	4b16      	ldr	r3, [pc, #88]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c2a:	4a17      	ldr	r2, [pc, #92]	; (8004c88 <MX_SPI2_Init+0x64>)
 8004c2c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8004c2e:	4b15      	ldr	r3, [pc, #84]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c30:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004c34:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8004c36:	4b13      	ldr	r3, [pc, #76]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c38:	2200      	movs	r2, #0
 8004c3a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 8004c3c:	4b11      	ldr	r3, [pc, #68]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c3e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004c42:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004c44:	4b0f      	ldr	r3, [pc, #60]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c46:	2200      	movs	r2, #0
 8004c48:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8004c4a:	4b0e      	ldr	r3, [pc, #56]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c4c:	2201      	movs	r2, #1
 8004c4e:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8004c50:	4b0c      	ldr	r3, [pc, #48]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c52:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004c56:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8004c58:	4b0a      	ldr	r3, [pc, #40]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c5a:	2218      	movs	r2, #24
 8004c5c:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004c5e:	4b09      	ldr	r3, [pc, #36]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c60:	2200      	movs	r2, #0
 8004c62:	621a      	str	r2, [r3, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004c64:	4b07      	ldr	r3, [pc, #28]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c66:	2200      	movs	r2, #0
 8004c68:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8004c6a:	4b06      	ldr	r3, [pc, #24]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c6c:	220a      	movs	r2, #10
 8004c6e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8004c70:	4804      	ldr	r0, [pc, #16]	; (8004c84 <MX_SPI2_Init+0x60>)
 8004c72:	f002 ffff 	bl	8007c74 <HAL_SPI_Init>
 8004c76:	4603      	mov	r3, r0
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d001      	beq.n	8004c80 <MX_SPI2_Init+0x5c>
  {
    Error_Handler();
 8004c7c:	f7ff ff98 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8004c80:	bf00      	nop
 8004c82:	bd80      	pop	{r7, pc}
 8004c84:	200007e4 	.word	0x200007e4
 8004c88:	40003800 	.word	0x40003800

08004c8c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8004c8c:	b580      	push	{r7, lr}
 8004c8e:	b08c      	sub	sp, #48	; 0x30
 8004c90:	af00      	add	r7, sp, #0
 8004c92:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004c94:	f107 031c 	add.w	r3, r7, #28
 8004c98:	2200      	movs	r2, #0
 8004c9a:	601a      	str	r2, [r3, #0]
 8004c9c:	605a      	str	r2, [r3, #4]
 8004c9e:	609a      	str	r2, [r3, #8]
 8004ca0:	60da      	str	r2, [r3, #12]
 8004ca2:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	4a32      	ldr	r2, [pc, #200]	; (8004d74 <HAL_SPI_MspInit+0xe8>)
 8004caa:	4293      	cmp	r3, r2
 8004cac:	d130      	bne.n	8004d10 <HAL_SPI_MspInit+0x84>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004cae:	4b32      	ldr	r3, [pc, #200]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004cb0:	6a1b      	ldr	r3, [r3, #32]
 8004cb2:	4a31      	ldr	r2, [pc, #196]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004cb4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004cb8:	6213      	str	r3, [r2, #32]
 8004cba:	4b2f      	ldr	r3, [pc, #188]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004cbc:	6a1b      	ldr	r3, [r3, #32]
 8004cbe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004cc2:	61bb      	str	r3, [r7, #24]
 8004cc4:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004cc6:	4b2c      	ldr	r3, [pc, #176]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004cc8:	69db      	ldr	r3, [r3, #28]
 8004cca:	4a2b      	ldr	r2, [pc, #172]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004ccc:	f043 0301 	orr.w	r3, r3, #1
 8004cd0:	61d3      	str	r3, [r2, #28]
 8004cd2:	4b29      	ldr	r3, [pc, #164]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004cd4:	69db      	ldr	r3, [r3, #28]
 8004cd6:	f003 0301 	and.w	r3, r3, #1
 8004cda:	617b      	str	r3, [r7, #20]
 8004cdc:	697b      	ldr	r3, [r7, #20]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8004cde:	23e0      	movs	r3, #224	; 0xe0
 8004ce0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004ce2:	2302      	movs	r3, #2
 8004ce4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004ce6:	2300      	movs	r3, #0
 8004ce8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004cea:	2303      	movs	r3, #3
 8004cec:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8004cee:	2305      	movs	r3, #5
 8004cf0:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004cf2:	f107 031c 	add.w	r3, r7, #28
 8004cf6:	4619      	mov	r1, r3
 8004cf8:	4820      	ldr	r0, [pc, #128]	; (8004d7c <HAL_SPI_MspInit+0xf0>)
 8004cfa:	f000 fe9f 	bl	8005a3c <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 1, 0);
 8004cfe:	2200      	movs	r2, #0
 8004d00:	2101      	movs	r1, #1
 8004d02:	2023      	movs	r0, #35	; 0x23
 8004d04:	f000 fc5e 	bl	80055c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8004d08:	2023      	movs	r0, #35	; 0x23
 8004d0a:	f000 fc99 	bl	8005640 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8004d0e:	e02d      	b.n	8004d6c <HAL_SPI_MspInit+0xe0>
  else if(spiHandle->Instance==SPI2)
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	4a1a      	ldr	r2, [pc, #104]	; (8004d80 <HAL_SPI_MspInit+0xf4>)
 8004d16:	4293      	cmp	r3, r2
 8004d18:	d128      	bne.n	8004d6c <HAL_SPI_MspInit+0xe0>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8004d1a:	4b17      	ldr	r3, [pc, #92]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d1e:	4a16      	ldr	r2, [pc, #88]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d20:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004d24:	6253      	str	r3, [r2, #36]	; 0x24
 8004d26:	4b14      	ldr	r3, [pc, #80]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d2a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004d2e:	613b      	str	r3, [r7, #16]
 8004d30:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004d32:	4b11      	ldr	r3, [pc, #68]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d34:	69db      	ldr	r3, [r3, #28]
 8004d36:	4a10      	ldr	r2, [pc, #64]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d38:	f043 0302 	orr.w	r3, r3, #2
 8004d3c:	61d3      	str	r3, [r2, #28]
 8004d3e:	4b0e      	ldr	r3, [pc, #56]	; (8004d78 <HAL_SPI_MspInit+0xec>)
 8004d40:	69db      	ldr	r3, [r3, #28]
 8004d42:	f003 0302 	and.w	r3, r3, #2
 8004d46:	60fb      	str	r3, [r7, #12]
 8004d48:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8004d4a:	f44f 4320 	mov.w	r3, #40960	; 0xa000
 8004d4e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004d50:	2302      	movs	r3, #2
 8004d52:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004d54:	2300      	movs	r3, #0
 8004d56:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004d58:	2303      	movs	r3, #3
 8004d5a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8004d5c:	2305      	movs	r3, #5
 8004d5e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004d60:	f107 031c 	add.w	r3, r7, #28
 8004d64:	4619      	mov	r1, r3
 8004d66:	4807      	ldr	r0, [pc, #28]	; (8004d84 <HAL_SPI_MspInit+0xf8>)
 8004d68:	f000 fe68 	bl	8005a3c <HAL_GPIO_Init>
}
 8004d6c:	bf00      	nop
 8004d6e:	3730      	adds	r7, #48	; 0x30
 8004d70:	46bd      	mov	sp, r7
 8004d72:	bd80      	pop	{r7, pc}
 8004d74:	40013000 	.word	0x40013000
 8004d78:	40023800 	.word	0x40023800
 8004d7c:	40020000 	.word	0x40020000
 8004d80:	40003800 	.word	0x40003800
 8004d84:	40020400 	.word	0x40020400

08004d88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004d88:	b580      	push	{r7, lr}
 8004d8a:	b084      	sub	sp, #16
 8004d8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 8004d8e:	4b26      	ldr	r3, [pc, #152]	; (8004e28 <HAL_MspInit+0xa0>)
 8004d90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d92:	4a25      	ldr	r2, [pc, #148]	; (8004e28 <HAL_MspInit+0xa0>)
 8004d94:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004d98:	6253      	str	r3, [r2, #36]	; 0x24
 8004d9a:	4b23      	ldr	r3, [pc, #140]	; (8004e28 <HAL_MspInit+0xa0>)
 8004d9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d9e:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8004da2:	60fb      	str	r3, [r7, #12]
 8004da4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004da6:	4b20      	ldr	r3, [pc, #128]	; (8004e28 <HAL_MspInit+0xa0>)
 8004da8:	6a1b      	ldr	r3, [r3, #32]
 8004daa:	4a1f      	ldr	r2, [pc, #124]	; (8004e28 <HAL_MspInit+0xa0>)
 8004dac:	f043 0301 	orr.w	r3, r3, #1
 8004db0:	6213      	str	r3, [r2, #32]
 8004db2:	4b1d      	ldr	r3, [pc, #116]	; (8004e28 <HAL_MspInit+0xa0>)
 8004db4:	6a1b      	ldr	r3, [r3, #32]
 8004db6:	f003 0301 	and.w	r3, r3, #1
 8004dba:	60bb      	str	r3, [r7, #8]
 8004dbc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8004dbe:	4b1a      	ldr	r3, [pc, #104]	; (8004e28 <HAL_MspInit+0xa0>)
 8004dc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dc2:	4a19      	ldr	r2, [pc, #100]	; (8004e28 <HAL_MspInit+0xa0>)
 8004dc4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004dc8:	6253      	str	r3, [r2, #36]	; 0x24
 8004dca:	4b17      	ldr	r3, [pc, #92]	; (8004e28 <HAL_MspInit+0xa0>)
 8004dcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004dd2:	607b      	str	r3, [r7, #4]
 8004dd4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 1, 0);
 8004dd6:	2200      	movs	r2, #0
 8004dd8:	2101      	movs	r1, #1
 8004dda:	f06f 000b 	mvn.w	r0, #11
 8004dde:	f000 fbf1 	bl	80055c4 <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 1, 0);
 8004de2:	2200      	movs	r2, #0
 8004de4:	2101      	movs	r1, #1
 8004de6:	f06f 000a 	mvn.w	r0, #10
 8004dea:	f000 fbeb 	bl	80055c4 <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 1, 0);
 8004dee:	2200      	movs	r2, #0
 8004df0:	2101      	movs	r1, #1
 8004df2:	f06f 0009 	mvn.w	r0, #9
 8004df6:	f000 fbe5 	bl	80055c4 <HAL_NVIC_SetPriority>
  /* SVC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVC_IRQn, 1, 0);
 8004dfa:	2200      	movs	r2, #0
 8004dfc:	2101      	movs	r1, #1
 8004dfe:	f06f 0004 	mvn.w	r0, #4
 8004e02:	f000 fbdf 	bl	80055c4 <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 1, 0);
 8004e06:	2200      	movs	r2, #0
 8004e08:	2101      	movs	r1, #1
 8004e0a:	f06f 0003 	mvn.w	r0, #3
 8004e0e:	f000 fbd9 	bl	80055c4 <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 1, 0);
 8004e12:	2200      	movs	r2, #0
 8004e14:	2101      	movs	r1, #1
 8004e16:	f06f 0001 	mvn.w	r0, #1
 8004e1a:	f000 fbd3 	bl	80055c4 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8004e1e:	bf00      	nop
 8004e20:	3710      	adds	r7, #16
 8004e22:	46bd      	mov	sp, r7
 8004e24:	bd80      	pop	{r7, pc}
 8004e26:	bf00      	nop
 8004e28:	40023800 	.word	0x40023800

08004e2c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004e2c:	b480      	push	{r7}
 8004e2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004e30:	e7fe      	b.n	8004e30 <NMI_Handler+0x4>

08004e32 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004e32:	b480      	push	{r7}
 8004e34:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004e36:	e7fe      	b.n	8004e36 <HardFault_Handler+0x4>

08004e38 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004e38:	b480      	push	{r7}
 8004e3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004e3c:	e7fe      	b.n	8004e3c <MemManage_Handler+0x4>

08004e3e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004e3e:	b480      	push	{r7}
 8004e40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004e42:	e7fe      	b.n	8004e42 <BusFault_Handler+0x4>

08004e44 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004e44:	b480      	push	{r7}
 8004e46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004e48:	e7fe      	b.n	8004e48 <UsageFault_Handler+0x4>

08004e4a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004e4a:	b480      	push	{r7}
 8004e4c:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8004e4e:	bf00      	nop
 8004e50:	46bd      	mov	sp, r7
 8004e52:	bc80      	pop	{r7}
 8004e54:	4770      	bx	lr

08004e56 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004e56:	b480      	push	{r7}
 8004e58:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004e5a:	bf00      	nop
 8004e5c:	46bd      	mov	sp, r7
 8004e5e:	bc80      	pop	{r7}
 8004e60:	4770      	bx	lr

08004e62 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004e62:	b480      	push	{r7}
 8004e64:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004e66:	bf00      	nop
 8004e68:	46bd      	mov	sp, r7
 8004e6a:	bc80      	pop	{r7}
 8004e6c:	4770      	bx	lr

08004e6e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004e6e:	b580      	push	{r7, lr}
 8004e70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004e72:	f000 fb71 	bl	8005558 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004e76:	bf00      	nop
 8004e78:	bd80      	pop	{r7, pc}
	...

08004e7c <USB_LP_IRQHandler>:

/**
  * @brief This function handles USB low priority interrupt.
  */
void USB_LP_IRQHandler(void)
{
 8004e7c:	b580      	push	{r7, lr}
 8004e7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_IRQn 0 */

  /* USER CODE END USB_LP_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8004e80:	4802      	ldr	r0, [pc, #8]	; (8004e8c <USB_LP_IRQHandler+0x10>)
 8004e82:	f001 fc29 	bl	80066d8 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN USB_LP_IRQn 1 */

  /* USER CODE END USB_LP_IRQn 1 */
}
 8004e86:	bf00      	nop
 8004e88:	bd80      	pop	{r7, pc}
 8004e8a:	bf00      	nop
 8004e8c:	20000f44 	.word	0x20000f44

08004e90 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8004e90:	b580      	push	{r7, lr}
 8004e92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Encode_Push_Pin);
 8004e94:	f44f 7080 	mov.w	r0, #256	; 0x100
 8004e98:	f000 fec4 	bl	8005c24 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(CPU_IRQ_Pin);
 8004e9c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8004ea0:	f000 fec0 	bl	8005c24 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8004ea4:	bf00      	nop
 8004ea6:	bd80      	pop	{r7, pc}

08004ea8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8004ea8:	b580      	push	{r7, lr}
 8004eaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8004eac:	4802      	ldr	r0, [pc, #8]	; (8004eb8 <TIM2_IRQHandler+0x10>)
 8004eae:	f003 fd97 	bl	80089e0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8004eb2:	bf00      	nop
 8004eb4:	bd80      	pop	{r7, pc}
 8004eb6:	bf00      	nop
 8004eb8:	20000840 	.word	0x20000840

08004ebc <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8004ebc:	b580      	push	{r7, lr}
 8004ebe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8004ec0:	4802      	ldr	r0, [pc, #8]	; (8004ecc <TIM3_IRQHandler+0x10>)
 8004ec2:	f003 fd8d 	bl	80089e0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8004ec6:	bf00      	nop
 8004ec8:	bd80      	pop	{r7, pc}
 8004eca:	bf00      	nop
 8004ecc:	20000880 	.word	0x20000880

08004ed0 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8004ed0:	b580      	push	{r7, lr}
 8004ed2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004ed4:	4802      	ldr	r0, [pc, #8]	; (8004ee0 <SPI1_IRQHandler+0x10>)
 8004ed6:	f003 fb07 	bl	80084e8 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8004eda:	bf00      	nop
 8004edc:	bd80      	pop	{r7, pc}
 8004ede:	bf00      	nop
 8004ee0:	2000078c 	.word	0x2000078c

08004ee4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8004ee4:	b580      	push	{r7, lr}
 8004ee6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Start_button_Pin);
 8004ee8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8004eec:	f000 fe9a 	bl	8005c24 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004ef0:	bf00      	nop
 8004ef2:	bd80      	pop	{r7, pc}

08004ef4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8004ef4:	b480      	push	{r7}
 8004ef6:	af00      	add	r7, sp, #0
	return 1;
 8004ef8:	2301      	movs	r3, #1
}
 8004efa:	4618      	mov	r0, r3
 8004efc:	46bd      	mov	sp, r7
 8004efe:	bc80      	pop	{r7}
 8004f00:	4770      	bx	lr

08004f02 <_kill>:

int _kill(int pid, int sig)
{
 8004f02:	b580      	push	{r7, lr}
 8004f04:	b082      	sub	sp, #8
 8004f06:	af00      	add	r7, sp, #0
 8004f08:	6078      	str	r0, [r7, #4]
 8004f0a:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8004f0c:	f005 fd74 	bl	800a9f8 <__errno>
 8004f10:	4603      	mov	r3, r0
 8004f12:	2216      	movs	r2, #22
 8004f14:	601a      	str	r2, [r3, #0]
	return -1;
 8004f16:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004f1a:	4618      	mov	r0, r3
 8004f1c:	3708      	adds	r7, #8
 8004f1e:	46bd      	mov	sp, r7
 8004f20:	bd80      	pop	{r7, pc}

08004f22 <_exit>:

void _exit (int status)
{
 8004f22:	b580      	push	{r7, lr}
 8004f24:	b082      	sub	sp, #8
 8004f26:	af00      	add	r7, sp, #0
 8004f28:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8004f2a:	f04f 31ff 	mov.w	r1, #4294967295
 8004f2e:	6878      	ldr	r0, [r7, #4]
 8004f30:	f7ff ffe7 	bl	8004f02 <_kill>
	while (1) {}		/* Make sure we hang here */
 8004f34:	e7fe      	b.n	8004f34 <_exit+0x12>

08004f36 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004f36:	b580      	push	{r7, lr}
 8004f38:	b086      	sub	sp, #24
 8004f3a:	af00      	add	r7, sp, #0
 8004f3c:	60f8      	str	r0, [r7, #12]
 8004f3e:	60b9      	str	r1, [r7, #8]
 8004f40:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f42:	2300      	movs	r3, #0
 8004f44:	617b      	str	r3, [r7, #20]
 8004f46:	e00a      	b.n	8004f5e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8004f48:	f3af 8000 	nop.w
 8004f4c:	4601      	mov	r1, r0
 8004f4e:	68bb      	ldr	r3, [r7, #8]
 8004f50:	1c5a      	adds	r2, r3, #1
 8004f52:	60ba      	str	r2, [r7, #8]
 8004f54:	b2ca      	uxtb	r2, r1
 8004f56:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f58:	697b      	ldr	r3, [r7, #20]
 8004f5a:	3301      	adds	r3, #1
 8004f5c:	617b      	str	r3, [r7, #20]
 8004f5e:	697a      	ldr	r2, [r7, #20]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	429a      	cmp	r2, r3
 8004f64:	dbf0      	blt.n	8004f48 <_read+0x12>
	}

return len;
 8004f66:	687b      	ldr	r3, [r7, #4]
}
 8004f68:	4618      	mov	r0, r3
 8004f6a:	3718      	adds	r7, #24
 8004f6c:	46bd      	mov	sp, r7
 8004f6e:	bd80      	pop	{r7, pc}

08004f70 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004f70:	b580      	push	{r7, lr}
 8004f72:	b086      	sub	sp, #24
 8004f74:	af00      	add	r7, sp, #0
 8004f76:	60f8      	str	r0, [r7, #12]
 8004f78:	60b9      	str	r1, [r7, #8]
 8004f7a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f7c:	2300      	movs	r3, #0
 8004f7e:	617b      	str	r3, [r7, #20]
 8004f80:	e009      	b.n	8004f96 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8004f82:	68bb      	ldr	r3, [r7, #8]
 8004f84:	1c5a      	adds	r2, r3, #1
 8004f86:	60ba      	str	r2, [r7, #8]
 8004f88:	781b      	ldrb	r3, [r3, #0]
 8004f8a:	4618      	mov	r0, r3
 8004f8c:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004f90:	697b      	ldr	r3, [r7, #20]
 8004f92:	3301      	adds	r3, #1
 8004f94:	617b      	str	r3, [r7, #20]
 8004f96:	697a      	ldr	r2, [r7, #20]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	429a      	cmp	r2, r3
 8004f9c:	dbf1      	blt.n	8004f82 <_write+0x12>
	}
	return len;
 8004f9e:	687b      	ldr	r3, [r7, #4]
}
 8004fa0:	4618      	mov	r0, r3
 8004fa2:	3718      	adds	r7, #24
 8004fa4:	46bd      	mov	sp, r7
 8004fa6:	bd80      	pop	{r7, pc}

08004fa8 <_close>:

int _close(int file)
{
 8004fa8:	b480      	push	{r7}
 8004faa:	b083      	sub	sp, #12
 8004fac:	af00      	add	r7, sp, #0
 8004fae:	6078      	str	r0, [r7, #4]
	return -1;
 8004fb0:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004fb4:	4618      	mov	r0, r3
 8004fb6:	370c      	adds	r7, #12
 8004fb8:	46bd      	mov	sp, r7
 8004fba:	bc80      	pop	{r7}
 8004fbc:	4770      	bx	lr

08004fbe <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004fbe:	b480      	push	{r7}
 8004fc0:	b083      	sub	sp, #12
 8004fc2:	af00      	add	r7, sp, #0
 8004fc4:	6078      	str	r0, [r7, #4]
 8004fc6:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8004fc8:	683b      	ldr	r3, [r7, #0]
 8004fca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004fce:	605a      	str	r2, [r3, #4]
	return 0;
 8004fd0:	2300      	movs	r3, #0
}
 8004fd2:	4618      	mov	r0, r3
 8004fd4:	370c      	adds	r7, #12
 8004fd6:	46bd      	mov	sp, r7
 8004fd8:	bc80      	pop	{r7}
 8004fda:	4770      	bx	lr

08004fdc <_isatty>:

int _isatty(int file)
{
 8004fdc:	b480      	push	{r7}
 8004fde:	b083      	sub	sp, #12
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	6078      	str	r0, [r7, #4]
	return 1;
 8004fe4:	2301      	movs	r3, #1
}
 8004fe6:	4618      	mov	r0, r3
 8004fe8:	370c      	adds	r7, #12
 8004fea:	46bd      	mov	sp, r7
 8004fec:	bc80      	pop	{r7}
 8004fee:	4770      	bx	lr

08004ff0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004ff0:	b480      	push	{r7}
 8004ff2:	b085      	sub	sp, #20
 8004ff4:	af00      	add	r7, sp, #0
 8004ff6:	60f8      	str	r0, [r7, #12]
 8004ff8:	60b9      	str	r1, [r7, #8]
 8004ffa:	607a      	str	r2, [r7, #4]
	return 0;
 8004ffc:	2300      	movs	r3, #0
}
 8004ffe:	4618      	mov	r0, r3
 8005000:	3714      	adds	r7, #20
 8005002:	46bd      	mov	sp, r7
 8005004:	bc80      	pop	{r7}
 8005006:	4770      	bx	lr

08005008 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8005008:	b580      	push	{r7, lr}
 800500a:	b086      	sub	sp, #24
 800500c:	af00      	add	r7, sp, #0
 800500e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8005010:	4a14      	ldr	r2, [pc, #80]	; (8005064 <_sbrk+0x5c>)
 8005012:	4b15      	ldr	r3, [pc, #84]	; (8005068 <_sbrk+0x60>)
 8005014:	1ad3      	subs	r3, r2, r3
 8005016:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8005018:	697b      	ldr	r3, [r7, #20]
 800501a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800501c:	4b13      	ldr	r3, [pc, #76]	; (800506c <_sbrk+0x64>)
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	2b00      	cmp	r3, #0
 8005022:	d102      	bne.n	800502a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8005024:	4b11      	ldr	r3, [pc, #68]	; (800506c <_sbrk+0x64>)
 8005026:	4a12      	ldr	r2, [pc, #72]	; (8005070 <_sbrk+0x68>)
 8005028:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800502a:	4b10      	ldr	r3, [pc, #64]	; (800506c <_sbrk+0x64>)
 800502c:	681a      	ldr	r2, [r3, #0]
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	4413      	add	r3, r2
 8005032:	693a      	ldr	r2, [r7, #16]
 8005034:	429a      	cmp	r2, r3
 8005036:	d207      	bcs.n	8005048 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8005038:	f005 fcde 	bl	800a9f8 <__errno>
 800503c:	4603      	mov	r3, r0
 800503e:	220c      	movs	r2, #12
 8005040:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8005042:	f04f 33ff 	mov.w	r3, #4294967295
 8005046:	e009      	b.n	800505c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8005048:	4b08      	ldr	r3, [pc, #32]	; (800506c <_sbrk+0x64>)
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800504e:	4b07      	ldr	r3, [pc, #28]	; (800506c <_sbrk+0x64>)
 8005050:	681a      	ldr	r2, [r3, #0]
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	4413      	add	r3, r2
 8005056:	4a05      	ldr	r2, [pc, #20]	; (800506c <_sbrk+0x64>)
 8005058:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800505a:	68fb      	ldr	r3, [r7, #12]
}
 800505c:	4618      	mov	r0, r3
 800505e:	3718      	adds	r7, #24
 8005060:	46bd      	mov	sp, r7
 8005062:	bd80      	pop	{r7, pc}
 8005064:	20004000 	.word	0x20004000
 8005068:	00000c00 	.word	0x00000c00
 800506c:	2000083c 	.word	0x2000083c
 8005070:	20001460 	.word	0x20001460

08005074 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8005074:	b480      	push	{r7}
 8005076:	af00      	add	r7, sp, #0
    
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8005078:	bf00      	nop
 800507a:	46bd      	mov	sp, r7
 800507c:	bc80      	pop	{r7}
 800507e:	4770      	bx	lr

08005080 <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8005080:	b580      	push	{r7, lr}
 8005082:	b086      	sub	sp, #24
 8005084:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005086:	f107 0308 	add.w	r3, r7, #8
 800508a:	2200      	movs	r2, #0
 800508c:	601a      	str	r2, [r3, #0]
 800508e:	605a      	str	r2, [r3, #4]
 8005090:	609a      	str	r2, [r3, #8]
 8005092:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005094:	463b      	mov	r3, r7
 8005096:	2200      	movs	r2, #0
 8005098:	601a      	str	r2, [r3, #0]
 800509a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800509c:	4b1d      	ldr	r3, [pc, #116]	; (8005114 <MX_TIM2_Init+0x94>)
 800509e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80050a2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 32000 -1;
 80050a4:	4b1b      	ldr	r3, [pc, #108]	; (8005114 <MX_TIM2_Init+0x94>)
 80050a6:	f647 42ff 	movw	r2, #31999	; 0x7cff
 80050aa:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80050ac:	4b19      	ldr	r3, [pc, #100]	; (8005114 <MX_TIM2_Init+0x94>)
 80050ae:	2200      	movs	r2, #0
 80050b0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50 - 1;
 80050b2:	4b18      	ldr	r3, [pc, #96]	; (8005114 <MX_TIM2_Init+0x94>)
 80050b4:	2231      	movs	r2, #49	; 0x31
 80050b6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80050b8:	4b16      	ldr	r3, [pc, #88]	; (8005114 <MX_TIM2_Init+0x94>)
 80050ba:	2200      	movs	r2, #0
 80050bc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80050be:	4b15      	ldr	r3, [pc, #84]	; (8005114 <MX_TIM2_Init+0x94>)
 80050c0:	2200      	movs	r2, #0
 80050c2:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80050c4:	4813      	ldr	r0, [pc, #76]	; (8005114 <MX_TIM2_Init+0x94>)
 80050c6:	f003 faa3 	bl	8008610 <HAL_TIM_Base_Init>
 80050ca:	4603      	mov	r3, r0
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d001      	beq.n	80050d4 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80050d0:	f7ff fd6e 	bl	8004bb0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80050d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80050d8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80050da:	f107 0308 	add.w	r3, r7, #8
 80050de:	4619      	mov	r1, r3
 80050e0:	480c      	ldr	r0, [pc, #48]	; (8005114 <MX_TIM2_Init+0x94>)
 80050e2:	f003 fbcf 	bl	8008884 <HAL_TIM_ConfigClockSource>
 80050e6:	4603      	mov	r3, r0
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	d001      	beq.n	80050f0 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80050ec:	f7ff fd60 	bl	8004bb0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80050f0:	2300      	movs	r3, #0
 80050f2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80050f4:	2300      	movs	r3, #0
 80050f6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80050f8:	463b      	mov	r3, r7
 80050fa:	4619      	mov	r1, r3
 80050fc:	4805      	ldr	r0, [pc, #20]	; (8005114 <MX_TIM2_Init+0x94>)
 80050fe:	f003 fcfb 	bl	8008af8 <HAL_TIMEx_MasterConfigSynchronization>
 8005102:	4603      	mov	r3, r0
 8005104:	2b00      	cmp	r3, #0
 8005106:	d001      	beq.n	800510c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8005108:	f7ff fd52 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800510c:	bf00      	nop
 800510e:	3718      	adds	r7, #24
 8005110:	46bd      	mov	sp, r7
 8005112:	bd80      	pop	{r7, pc}
 8005114:	20000840 	.word	0x20000840

08005118 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8005118:	b580      	push	{r7, lr}
 800511a:	b086      	sub	sp, #24
 800511c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800511e:	f107 0308 	add.w	r3, r7, #8
 8005122:	2200      	movs	r2, #0
 8005124:	601a      	str	r2, [r3, #0]
 8005126:	605a      	str	r2, [r3, #4]
 8005128:	609a      	str	r2, [r3, #8]
 800512a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800512c:	463b      	mov	r3, r7
 800512e:	2200      	movs	r2, #0
 8005130:	601a      	str	r2, [r3, #0]
 8005132:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8005134:	4b1d      	ldr	r3, [pc, #116]	; (80051ac <MX_TIM3_Init+0x94>)
 8005136:	4a1e      	ldr	r2, [pc, #120]	; (80051b0 <MX_TIM3_Init+0x98>)
 8005138:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 32000 -1;
 800513a:	4b1c      	ldr	r3, [pc, #112]	; (80051ac <MX_TIM3_Init+0x94>)
 800513c:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8005140:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005142:	4b1a      	ldr	r3, [pc, #104]	; (80051ac <MX_TIM3_Init+0x94>)
 8005144:	2200      	movs	r2, #0
 8005146:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 500 -1;
 8005148:	4b18      	ldr	r3, [pc, #96]	; (80051ac <MX_TIM3_Init+0x94>)
 800514a:	f240 12f3 	movw	r2, #499	; 0x1f3
 800514e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005150:	4b16      	ldr	r3, [pc, #88]	; (80051ac <MX_TIM3_Init+0x94>)
 8005152:	2200      	movs	r2, #0
 8005154:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005156:	4b15      	ldr	r3, [pc, #84]	; (80051ac <MX_TIM3_Init+0x94>)
 8005158:	2200      	movs	r2, #0
 800515a:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800515c:	4813      	ldr	r0, [pc, #76]	; (80051ac <MX_TIM3_Init+0x94>)
 800515e:	f003 fa57 	bl	8008610 <HAL_TIM_Base_Init>
 8005162:	4603      	mov	r3, r0
 8005164:	2b00      	cmp	r3, #0
 8005166:	d001      	beq.n	800516c <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8005168:	f7ff fd22 	bl	8004bb0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800516c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005170:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8005172:	f107 0308 	add.w	r3, r7, #8
 8005176:	4619      	mov	r1, r3
 8005178:	480c      	ldr	r0, [pc, #48]	; (80051ac <MX_TIM3_Init+0x94>)
 800517a:	f003 fb83 	bl	8008884 <HAL_TIM_ConfigClockSource>
 800517e:	4603      	mov	r3, r0
 8005180:	2b00      	cmp	r3, #0
 8005182:	d001      	beq.n	8005188 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8005184:	f7ff fd14 	bl	8004bb0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005188:	2300      	movs	r3, #0
 800518a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800518c:	2300      	movs	r3, #0
 800518e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8005190:	463b      	mov	r3, r7
 8005192:	4619      	mov	r1, r3
 8005194:	4805      	ldr	r0, [pc, #20]	; (80051ac <MX_TIM3_Init+0x94>)
 8005196:	f003 fcaf 	bl	8008af8 <HAL_TIMEx_MasterConfigSynchronization>
 800519a:	4603      	mov	r3, r0
 800519c:	2b00      	cmp	r3, #0
 800519e:	d001      	beq.n	80051a4 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80051a0:	f7ff fd06 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80051a4:	bf00      	nop
 80051a6:	3718      	adds	r7, #24
 80051a8:	46bd      	mov	sp, r7
 80051aa:	bd80      	pop	{r7, pc}
 80051ac:	20000880 	.word	0x20000880
 80051b0:	40000400 	.word	0x40000400

080051b4 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 80051b4:	b580      	push	{r7, lr}
 80051b6:	b08c      	sub	sp, #48	; 0x30
 80051b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80051ba:	f107 030c 	add.w	r3, r7, #12
 80051be:	2224      	movs	r2, #36	; 0x24
 80051c0:	2100      	movs	r1, #0
 80051c2:	4618      	mov	r0, r3
 80051c4:	f005 fc50 	bl	800aa68 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80051c8:	1d3b      	adds	r3, r7, #4
 80051ca:	2200      	movs	r2, #0
 80051cc:	601a      	str	r2, [r3, #0]
 80051ce:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80051d0:	4b20      	ldr	r3, [pc, #128]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051d2:	4a21      	ldr	r2, [pc, #132]	; (8005258 <MX_TIM4_Init+0xa4>)
 80051d4:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 80051d6:	4b1f      	ldr	r3, [pc, #124]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051d8:	2200      	movs	r2, #0
 80051da:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80051dc:	4b1d      	ldr	r3, [pc, #116]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051de:	2200      	movs	r2, #0
 80051e0:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 80051e2:	4b1c      	ldr	r3, [pc, #112]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80051e8:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80051ea:	4b1a      	ldr	r3, [pc, #104]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051ec:	2200      	movs	r2, #0
 80051ee:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80051f0:	4b18      	ldr	r3, [pc, #96]	; (8005254 <MX_TIM4_Init+0xa0>)
 80051f2:	2200      	movs	r2, #0
 80051f4:	615a      	str	r2, [r3, #20]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80051f6:	2301      	movs	r3, #1
 80051f8:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80051fa:	2300      	movs	r3, #0
 80051fc:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80051fe:	2301      	movs	r3, #1
 8005200:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8005202:	2300      	movs	r3, #0
 8005204:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8005206:	2300      	movs	r3, #0
 8005208:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 800520a:	2302      	movs	r3, #2
 800520c:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800520e:	2301      	movs	r3, #1
 8005210:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8005212:	2300      	movs	r3, #0
 8005214:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8005216:	2300      	movs	r3, #0
 8005218:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 800521a:	f107 030c 	add.w	r3, r7, #12
 800521e:	4619      	mov	r1, r3
 8005220:	480c      	ldr	r0, [pc, #48]	; (8005254 <MX_TIM4_Init+0xa0>)
 8005222:	f003 fa71 	bl	8008708 <HAL_TIM_Encoder_Init>
 8005226:	4603      	mov	r3, r0
 8005228:	2b00      	cmp	r3, #0
 800522a:	d001      	beq.n	8005230 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 800522c:	f7ff fcc0 	bl	8004bb0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005230:	2300      	movs	r3, #0
 8005232:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005234:	2300      	movs	r3, #0
 8005236:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8005238:	1d3b      	adds	r3, r7, #4
 800523a:	4619      	mov	r1, r3
 800523c:	4805      	ldr	r0, [pc, #20]	; (8005254 <MX_TIM4_Init+0xa0>)
 800523e:	f003 fc5b 	bl	8008af8 <HAL_TIMEx_MasterConfigSynchronization>
 8005242:	4603      	mov	r3, r0
 8005244:	2b00      	cmp	r3, #0
 8005246:	d001      	beq.n	800524c <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8005248:	f7ff fcb2 	bl	8004bb0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800524c:	bf00      	nop
 800524e:	3730      	adds	r7, #48	; 0x30
 8005250:	46bd      	mov	sp, r7
 8005252:	bd80      	pop	{r7, pc}
 8005254:	200008c0 	.word	0x200008c0
 8005258:	40000800 	.word	0x40000800

0800525c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 800525c:	b580      	push	{r7, lr}
 800525e:	b084      	sub	sp, #16
 8005260:	af00      	add	r7, sp, #0
 8005262:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800526c:	d114      	bne.n	8005298 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800526e:	4b19      	ldr	r3, [pc, #100]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 8005270:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005272:	4a18      	ldr	r2, [pc, #96]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 8005274:	f043 0301 	orr.w	r3, r3, #1
 8005278:	6253      	str	r3, [r2, #36]	; 0x24
 800527a:	4b16      	ldr	r3, [pc, #88]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 800527c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800527e:	f003 0301 	and.w	r3, r3, #1
 8005282:	60fb      	str	r3, [r7, #12]
 8005284:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8005286:	2200      	movs	r2, #0
 8005288:	2101      	movs	r1, #1
 800528a:	201c      	movs	r0, #28
 800528c:	f000 f99a 	bl	80055c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005290:	201c      	movs	r0, #28
 8005292:	f000 f9d5 	bl	8005640 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 8005296:	e018      	b.n	80052ca <HAL_TIM_Base_MspInit+0x6e>
  else if(tim_baseHandle->Instance==TIM3)
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	4a0e      	ldr	r2, [pc, #56]	; (80052d8 <HAL_TIM_Base_MspInit+0x7c>)
 800529e:	4293      	cmp	r3, r2
 80052a0:	d113      	bne.n	80052ca <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80052a2:	4b0c      	ldr	r3, [pc, #48]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 80052a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052a6:	4a0b      	ldr	r2, [pc, #44]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 80052a8:	f043 0302 	orr.w	r3, r3, #2
 80052ac:	6253      	str	r3, [r2, #36]	; 0x24
 80052ae:	4b09      	ldr	r3, [pc, #36]	; (80052d4 <HAL_TIM_Base_MspInit+0x78>)
 80052b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052b2:	f003 0302 	and.w	r3, r3, #2
 80052b6:	60bb      	str	r3, [r7, #8]
 80052b8:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 80052ba:	2200      	movs	r2, #0
 80052bc:	2101      	movs	r1, #1
 80052be:	201d      	movs	r0, #29
 80052c0:	f000 f980 	bl	80055c4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 80052c4:	201d      	movs	r0, #29
 80052c6:	f000 f9bb 	bl	8005640 <HAL_NVIC_EnableIRQ>
}
 80052ca:	bf00      	nop
 80052cc:	3710      	adds	r7, #16
 80052ce:	46bd      	mov	sp, r7
 80052d0:	bd80      	pop	{r7, pc}
 80052d2:	bf00      	nop
 80052d4:	40023800 	.word	0x40023800
 80052d8:	40000400 	.word	0x40000400

080052dc <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 80052dc:	b580      	push	{r7, lr}
 80052de:	b08a      	sub	sp, #40	; 0x28
 80052e0:	af00      	add	r7, sp, #0
 80052e2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80052e4:	f107 0314 	add.w	r3, r7, #20
 80052e8:	2200      	movs	r2, #0
 80052ea:	601a      	str	r2, [r3, #0]
 80052ec:	605a      	str	r2, [r3, #4]
 80052ee:	609a      	str	r2, [r3, #8]
 80052f0:	60da      	str	r2, [r3, #12]
 80052f2:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM4)
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	4a17      	ldr	r2, [pc, #92]	; (8005358 <HAL_TIM_Encoder_MspInit+0x7c>)
 80052fa:	4293      	cmp	r3, r2
 80052fc:	d127      	bne.n	800534e <HAL_TIM_Encoder_MspInit+0x72>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 80052fe:	4b17      	ldr	r3, [pc, #92]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 8005300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005302:	4a16      	ldr	r2, [pc, #88]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 8005304:	f043 0304 	orr.w	r3, r3, #4
 8005308:	6253      	str	r3, [r2, #36]	; 0x24
 800530a:	4b14      	ldr	r3, [pc, #80]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 800530c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800530e:	f003 0304 	and.w	r3, r3, #4
 8005312:	613b      	str	r3, [r7, #16]
 8005314:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005316:	4b11      	ldr	r3, [pc, #68]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 8005318:	69db      	ldr	r3, [r3, #28]
 800531a:	4a10      	ldr	r2, [pc, #64]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 800531c:	f043 0302 	orr.w	r3, r3, #2
 8005320:	61d3      	str	r3, [r2, #28]
 8005322:	4b0e      	ldr	r3, [pc, #56]	; (800535c <HAL_TIM_Encoder_MspInit+0x80>)
 8005324:	69db      	ldr	r3, [r3, #28]
 8005326:	f003 0302 	and.w	r3, r3, #2
 800532a:	60fb      	str	r3, [r7, #12]
 800532c:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PB6     ------> TIM4_CH1
    PB7     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800532e:	23c0      	movs	r3, #192	; 0xc0
 8005330:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005332:	2302      	movs	r3, #2
 8005334:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005336:	2300      	movs	r3, #0
 8005338:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800533a:	2300      	movs	r3, #0
 800533c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800533e:	2302      	movs	r3, #2
 8005340:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005342:	f107 0314 	add.w	r3, r7, #20
 8005346:	4619      	mov	r1, r3
 8005348:	4805      	ldr	r0, [pc, #20]	; (8005360 <HAL_TIM_Encoder_MspInit+0x84>)
 800534a:	f000 fb77 	bl	8005a3c <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 800534e:	bf00      	nop
 8005350:	3728      	adds	r7, #40	; 0x28
 8005352:	46bd      	mov	sp, r7
 8005354:	bd80      	pop	{r7, pc}
 8005356:	bf00      	nop
 8005358:	40000800 	.word	0x40000800
 800535c:	40023800 	.word	0x40023800
 8005360:	40020400 	.word	0x40020400

08005364 <TMP117_get_Temperature>:
   @Description   Function gives to us ambient temperature
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  Float
 */
uint16_t TMP117_get_Temperature             (I2C_HandleTypeDef i2c)
{
 8005364:	b084      	sub	sp, #16
 8005366:	b580      	push	{r7, lr}
 8005368:	b084      	sub	sp, #16
 800536a:	af02      	add	r7, sp, #8
 800536c:	f107 0c10 	add.w	ip, r7, #16
 8005370:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      int16_t tmpx=0;
 8005374:	2300      	movs	r3, #0
 8005376:	80fb      	strh	r3, [r7, #6]
      buf[0]=TMP117_TemperatureRegister;
 8005378:	4b18      	ldr	r3, [pc, #96]	; (80053dc <TMP117_get_Temperature+0x78>)
 800537a:	2200      	movs	r2, #0
 800537c:	701a      	strb	r2, [r3, #0]

//      buf[0]=TMP117_ConfigurationRegister;

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,1,100);
 800537e:	4b18      	ldr	r3, [pc, #96]	; (80053e0 <TMP117_get_Temperature+0x7c>)
 8005380:	781b      	ldrb	r3, [r3, #0]
 8005382:	b299      	uxth	r1, r3
 8005384:	2364      	movs	r3, #100	; 0x64
 8005386:	9300      	str	r3, [sp, #0]
 8005388:	2301      	movs	r3, #1
 800538a:	4a14      	ldr	r2, [pc, #80]	; (80053dc <TMP117_get_Temperature+0x78>)
 800538c:	f107 0010 	add.w	r0, r7, #16
 8005390:	f000 fd1c 	bl	8005dcc <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 8005394:	2001      	movs	r0, #1
 8005396:	f000 f8f1 	bl	800557c <HAL_Delay>
      HAL_I2C_Master_Receive(&i2c,TMP117_DeviceID,buf,2,1000);
 800539a:	4b11      	ldr	r3, [pc, #68]	; (80053e0 <TMP117_get_Temperature+0x7c>)
 800539c:	781b      	ldrb	r3, [r3, #0]
 800539e:	b299      	uxth	r1, r3
 80053a0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80053a4:	9300      	str	r3, [sp, #0]
 80053a6:	2302      	movs	r3, #2
 80053a8:	4a0c      	ldr	r2, [pc, #48]	; (80053dc <TMP117_get_Temperature+0x78>)
 80053aa:	f107 0010 	add.w	r0, r7, #16
 80053ae:	f000 fea3 	bl	80060f8 <HAL_I2C_Master_Receive>
      tmpx=buf[0];
 80053b2:	4b0a      	ldr	r3, [pc, #40]	; (80053dc <TMP117_get_Temperature+0x78>)
 80053b4:	781b      	ldrb	r3, [r3, #0]
 80053b6:	80fb      	strh	r3, [r7, #6]
      tmpx<<=8;
 80053b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80053bc:	021b      	lsls	r3, r3, #8
 80053be:	80fb      	strh	r3, [r7, #6]
      tmpx|=buf[1];
 80053c0:	4b06      	ldr	r3, [pc, #24]	; (80053dc <TMP117_get_Temperature+0x78>)
 80053c2:	785b      	ldrb	r3, [r3, #1]
 80053c4:	b21a      	sxth	r2, r3
 80053c6:	88fb      	ldrh	r3, [r7, #6]
 80053c8:	4313      	orrs	r3, r2
 80053ca:	80fb      	strh	r3, [r7, #6]

      return tmpx;
 80053cc:	88fb      	ldrh	r3, [r7, #6]
}
 80053ce:	4618      	mov	r0, r3
 80053d0:	3708      	adds	r7, #8
 80053d2:	46bd      	mov	sp, r7
 80053d4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80053d8:	b004      	add	sp, #16
 80053da:	4770      	bx	lr
 80053dc:	20000900 	.word	0x20000900
 80053e0:	20000024 	.word	0x20000024

080053e4 <TMP117_set_Configuration>:
                  uint8_t first     ->  [15:8]
                  uint8_t second    ->  [7:0]
   @Return value  void
 */
void TMP117_set_Configuration            (I2C_HandleTypeDef i2c,uint8_t first,uint8_t second)
{
 80053e4:	b084      	sub	sp, #16
 80053e6:	b580      	push	{r7, lr}
 80053e8:	b082      	sub	sp, #8
 80053ea:	af02      	add	r7, sp, #8
 80053ec:	f107 0c08 	add.w	ip, r7, #8
 80053f0:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
      static uint8_t buf[3];
      buf[0]=TMP117_ConfigurationRegister;
 80053f4:	4b0f      	ldr	r3, [pc, #60]	; (8005434 <TMP117_set_Configuration+0x50>)
 80053f6:	2201      	movs	r2, #1
 80053f8:	701a      	strb	r2, [r3, #0]
      buf[1]=first;
 80053fa:	4a0e      	ldr	r2, [pc, #56]	; (8005434 <TMP117_set_Configuration+0x50>)
 80053fc:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 8005400:	7053      	strb	r3, [r2, #1]
      buf[2]=second;
 8005402:	4a0c      	ldr	r2, [pc, #48]	; (8005434 <TMP117_set_Configuration+0x50>)
 8005404:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8005408:	7093      	strb	r3, [r2, #2]

      HAL_I2C_Master_Transmit(&i2c,TMP117_DeviceID,buf,2,100);
 800540a:	4b0b      	ldr	r3, [pc, #44]	; (8005438 <TMP117_set_Configuration+0x54>)
 800540c:	781b      	ldrb	r3, [r3, #0]
 800540e:	b299      	uxth	r1, r3
 8005410:	2364      	movs	r3, #100	; 0x64
 8005412:	9300      	str	r3, [sp, #0]
 8005414:	2302      	movs	r3, #2
 8005416:	4a07      	ldr	r2, [pc, #28]	; (8005434 <TMP117_set_Configuration+0x50>)
 8005418:	f107 0008 	add.w	r0, r7, #8
 800541c:	f000 fcd6 	bl	8005dcc <HAL_I2C_Master_Transmit>
      HAL_Delay(1);
 8005420:	2001      	movs	r0, #1
 8005422:	f000 f8ab 	bl	800557c <HAL_Delay>
}
 8005426:	bf00      	nop
 8005428:	46bd      	mov	sp, r7
 800542a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800542e:	b004      	add	sp, #16
 8005430:	4770      	bx	lr
 8005432:	bf00      	nop
 8005434:	20000904 	.word	0x20000904
 8005438:	20000024 	.word	0x20000024

0800543c <TMP117_Initialization>:
   @Description   Custom Parameters for Sensor
   @Parameter     I2C_HandleTypeDef ->  HAL_I2C Handle
   @Return value  void
 */
void TMP117_Initialization               (I2C_HandleTypeDef i2c)
{
 800543c:	b084      	sub	sp, #16
 800543e:	b580      	push	{r7, lr}
 8005440:	b094      	sub	sp, #80	; 0x50
 8005442:	af14      	add	r7, sp, #80	; 0x50
 8005444:	f107 0c08 	add.w	ip, r7, #8
 8005448:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    TMP117_set_Configuration(i2c,0x02,0x22);
 800544c:	2322      	movs	r3, #34	; 0x22
 800544e:	9312      	str	r3, [sp, #72]	; 0x48
 8005450:	2302      	movs	r3, #2
 8005452:	9311      	str	r3, [sp, #68]	; 0x44
 8005454:	4668      	mov	r0, sp
 8005456:	f107 0318 	add.w	r3, r7, #24
 800545a:	2244      	movs	r2, #68	; 0x44
 800545c:	4619      	mov	r1, r3
 800545e:	f005 faf5 	bl	800aa4c <memcpy>
 8005462:	f107 0308 	add.w	r3, r7, #8
 8005466:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005468:	f7ff ffbc 	bl	80053e4 <TMP117_set_Configuration>
	HAL_Delay(2); // wait 2ms
 800546c:	2002      	movs	r0, #2
 800546e:	f000 f885 	bl	800557c <HAL_Delay>
	TMP117_set_Configuration(i2c,0x03,0xA0);
 8005472:	23a0      	movs	r3, #160	; 0xa0
 8005474:	9312      	str	r3, [sp, #72]	; 0x48
 8005476:	2303      	movs	r3, #3
 8005478:	9311      	str	r3, [sp, #68]	; 0x44
 800547a:	4668      	mov	r0, sp
 800547c:	f107 0318 	add.w	r3, r7, #24
 8005480:	2244      	movs	r2, #68	; 0x44
 8005482:	4619      	mov	r1, r3
 8005484:	f005 fae2 	bl	800aa4c <memcpy>
 8005488:	f107 0308 	add.w	r3, r7, #8
 800548c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800548e:	f7ff ffa9 	bl	80053e4 <TMP117_set_Configuration>
	//TMP117_set_Configuration(i2c,0x02,0x20);
//      TMP117_set_Temperature_Offset(i2c,0x00,0x00); //Default Value
//      TMP117_set_LowLimit(i2c,0x12,0x80);           //Set 10 Celcius
//      TMP117_set_HighLimit(i2c,0x51,0x20);          //Set 40 Celcius
}
 8005492:	bf00      	nop
 8005494:	46bd      	mov	sp, r7
 8005496:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800549a:	b004      	add	sp, #16
 800549c:	4770      	bx	lr
	...

080054a0 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80054a0:	480c      	ldr	r0, [pc, #48]	; (80054d4 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80054a2:	490d      	ldr	r1, [pc, #52]	; (80054d8 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80054a4:	4a0d      	ldr	r2, [pc, #52]	; (80054dc <LoopFillZerobss+0x1a>)
  movs r3, #0
 80054a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80054a8:	e002      	b.n	80054b0 <LoopCopyDataInit>

080054aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80054aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80054ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80054ae:	3304      	adds	r3, #4

080054b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80054b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80054b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80054b4:	d3f9      	bcc.n	80054aa <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80054b6:	4a0a      	ldr	r2, [pc, #40]	; (80054e0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80054b8:	4c0a      	ldr	r4, [pc, #40]	; (80054e4 <LoopFillZerobss+0x22>)
  movs r3, #0
 80054ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80054bc:	e001      	b.n	80054c2 <LoopFillZerobss>

080054be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80054be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80054c0:	3204      	adds	r2, #4

080054c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80054c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80054c4:	d3fb      	bcc.n	80054be <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80054c6:	f7ff fdd5 	bl	8005074 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80054ca:	f005 fa9b 	bl	800aa04 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80054ce:	f7fe fb53 	bl	8003b78 <main>
  bx lr
 80054d2:	4770      	bx	lr
  ldr r0, =_sdata
 80054d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80054d8:	20000510 	.word	0x20000510
  ldr r2, =_sidata
 80054dc:	08010d44 	.word	0x08010d44
  ldr r2, =_sbss
 80054e0:	20000510 	.word	0x20000510
  ldr r4, =_ebss
 80054e4:	20001460 	.word	0x20001460

080054e8 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80054e8:	e7fe      	b.n	80054e8 <ADC1_IRQHandler>
	...

080054ec <HAL_InitTick>:
 80054ec:	b538      	push	{r3, r4, r5, lr}
 80054ee:	4b0f      	ldr	r3, [pc, #60]	; (800552c <HAL_InitTick+0x40>)
 80054f0:	681b      	ldr	r3, [r3, #0]
 80054f2:	b90b      	cbnz	r3, 80054f8 <HAL_InitTick+0xc>
 80054f4:	2001      	movs	r0, #1
 80054f6:	bd38      	pop	{r3, r4, r5, pc}
 80054f8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80054fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8005500:	490b      	ldr	r1, [pc, #44]	; (8005530 <HAL_InitTick+0x44>)
 8005502:	4605      	mov	r5, r0
 8005504:	6808      	ldr	r0, [r1, #0]
 8005506:	fbb0 f0f3 	udiv	r0, r0, r3
 800550a:	f000 f8a7 	bl	800565c <HAL_SYSTICK_Config>
 800550e:	4604      	mov	r4, r0
 8005510:	2800      	cmp	r0, #0
 8005512:	d1ef      	bne.n	80054f4 <HAL_InitTick+0x8>
 8005514:	2d0f      	cmp	r5, #15
 8005516:	d8ed      	bhi.n	80054f4 <HAL_InitTick+0x8>
 8005518:	4602      	mov	r2, r0
 800551a:	4629      	mov	r1, r5
 800551c:	f04f 30ff 	mov.w	r0, #4294967295
 8005520:	f000 f850 	bl	80055c4 <HAL_NVIC_SetPriority>
 8005524:	4b03      	ldr	r3, [pc, #12]	; (8005534 <HAL_InitTick+0x48>)
 8005526:	4620      	mov	r0, r4
 8005528:	601d      	str	r5, [r3, #0]
 800552a:	bd38      	pop	{r3, r4, r5, pc}
 800552c:	20000028 	.word	0x20000028
 8005530:	20000020 	.word	0x20000020
 8005534:	2000002c 	.word	0x2000002c

08005538 <HAL_Init>:
 8005538:	2003      	movs	r0, #3
 800553a:	b510      	push	{r4, lr}
 800553c:	f000 f830 	bl	80055a0 <HAL_NVIC_SetPriorityGrouping>
 8005540:	200f      	movs	r0, #15
 8005542:	f7ff ffd3 	bl	80054ec <HAL_InitTick>
 8005546:	b110      	cbz	r0, 800554e <HAL_Init+0x16>
 8005548:	2401      	movs	r4, #1
 800554a:	4620      	mov	r0, r4
 800554c:	bd10      	pop	{r4, pc}
 800554e:	4604      	mov	r4, r0
 8005550:	f7ff fc1a 	bl	8004d88 <HAL_MspInit>
 8005554:	4620      	mov	r0, r4
 8005556:	bd10      	pop	{r4, pc}

08005558 <HAL_IncTick>:
 8005558:	4a03      	ldr	r2, [pc, #12]	; (8005568 <HAL_IncTick+0x10>)
 800555a:	4904      	ldr	r1, [pc, #16]	; (800556c <HAL_IncTick+0x14>)
 800555c:	6813      	ldr	r3, [r2, #0]
 800555e:	6809      	ldr	r1, [r1, #0]
 8005560:	440b      	add	r3, r1
 8005562:	6013      	str	r3, [r2, #0]
 8005564:	4770      	bx	lr
 8005566:	bf00      	nop
 8005568:	20000908 	.word	0x20000908
 800556c:	20000028 	.word	0x20000028

08005570 <HAL_GetTick>:
 8005570:	4b01      	ldr	r3, [pc, #4]	; (8005578 <HAL_GetTick+0x8>)
 8005572:	6818      	ldr	r0, [r3, #0]
 8005574:	4770      	bx	lr
 8005576:	bf00      	nop
 8005578:	20000908 	.word	0x20000908

0800557c <HAL_Delay>:
 800557c:	b538      	push	{r3, r4, r5, lr}
 800557e:	4604      	mov	r4, r0
 8005580:	f7ff fff6 	bl	8005570 <HAL_GetTick>
 8005584:	1c63      	adds	r3, r4, #1
 8005586:	4605      	mov	r5, r0
 8005588:	d002      	beq.n	8005590 <HAL_Delay+0x14>
 800558a:	4b04      	ldr	r3, [pc, #16]	; (800559c <HAL_Delay+0x20>)
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	441c      	add	r4, r3
 8005590:	f7ff ffee 	bl	8005570 <HAL_GetTick>
 8005594:	1b40      	subs	r0, r0, r5
 8005596:	42a0      	cmp	r0, r4
 8005598:	d3fa      	bcc.n	8005590 <HAL_Delay+0x14>
 800559a:	bd38      	pop	{r3, r4, r5, pc}
 800559c:	20000028 	.word	0x20000028

080055a0 <HAL_NVIC_SetPriorityGrouping>:
 80055a0:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
 80055a4:	4906      	ldr	r1, [pc, #24]	; (80055c0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80055a6:	0203      	lsls	r3, r0, #8
 80055a8:	68ca      	ldr	r2, [r1, #12]
 80055aa:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80055ae:	ea02 020c 	and.w	r2, r2, ip
 80055b2:	4313      	orrs	r3, r2
 80055b4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80055b8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80055bc:	60cb      	str	r3, [r1, #12]
 80055be:	4770      	bx	lr
 80055c0:	e000ed00 	.word	0xe000ed00

080055c4 <HAL_NVIC_SetPriority>:
 80055c4:	4b1c      	ldr	r3, [pc, #112]	; (8005638 <HAL_NVIC_SetPriority+0x74>)
 80055c6:	b500      	push	{lr}
 80055c8:	68db      	ldr	r3, [r3, #12]
 80055ca:	f3c3 2302 	ubfx	r3, r3, #8, #3
 80055ce:	f1c3 0e07 	rsb	lr, r3, #7
 80055d2:	f1be 0f04 	cmp.w	lr, #4
 80055d6:	f103 0c04 	add.w	ip, r3, #4
 80055da:	bf28      	it	cs
 80055dc:	f04f 0e04 	movcs.w	lr, #4
 80055e0:	f1bc 0f06 	cmp.w	ip, #6
 80055e4:	d91b      	bls.n	800561e <HAL_NVIC_SetPriority+0x5a>
 80055e6:	f04f 3cff 	mov.w	ip, #4294967295
 80055ea:	3b03      	subs	r3, #3
 80055ec:	fa0c fc03 	lsl.w	ip, ip, r3
 80055f0:	ea22 020c 	bic.w	r2, r2, ip
 80055f4:	f04f 3cff 	mov.w	ip, #4294967295
 80055f8:	fa0c fc0e 	lsl.w	ip, ip, lr
 80055fc:	ea21 010c 	bic.w	r1, r1, ip
 8005600:	4099      	lsls	r1, r3
 8005602:	2800      	cmp	r0, #0
 8005604:	ea41 0102 	orr.w	r1, r1, r2
 8005608:	db0c      	blt.n	8005624 <HAL_NVIC_SetPriority+0x60>
 800560a:	0109      	lsls	r1, r1, #4
 800560c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8005610:	b2c9      	uxtb	r1, r1
 8005612:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8005616:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
 800561a:	f85d fb04 	ldr.w	pc, [sp], #4
 800561e:	2200      	movs	r2, #0
 8005620:	4613      	mov	r3, r2
 8005622:	e7e7      	b.n	80055f4 <HAL_NVIC_SetPriority+0x30>
 8005624:	4b05      	ldr	r3, [pc, #20]	; (800563c <HAL_NVIC_SetPriority+0x78>)
 8005626:	f000 000f 	and.w	r0, r0, #15
 800562a:	0109      	lsls	r1, r1, #4
 800562c:	b2c9      	uxtb	r1, r1
 800562e:	4403      	add	r3, r0
 8005630:	7619      	strb	r1, [r3, #24]
 8005632:	f85d fb04 	ldr.w	pc, [sp], #4
 8005636:	bf00      	nop
 8005638:	e000ed00 	.word	0xe000ed00
 800563c:	e000ecfc 	.word	0xe000ecfc

08005640 <HAL_NVIC_EnableIRQ>:
 8005640:	2800      	cmp	r0, #0
 8005642:	db07      	blt.n	8005654 <HAL_NVIC_EnableIRQ+0x14>
 8005644:	2301      	movs	r3, #1
 8005646:	f000 011f 	and.w	r1, r0, #31
 800564a:	4a03      	ldr	r2, [pc, #12]	; (8005658 <HAL_NVIC_EnableIRQ+0x18>)
 800564c:	0940      	lsrs	r0, r0, #5
 800564e:	408b      	lsls	r3, r1
 8005650:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8005654:	4770      	bx	lr
 8005656:	bf00      	nop
 8005658:	e000e100 	.word	0xe000e100

0800565c <HAL_SYSTICK_Config>:
 800565c:	3801      	subs	r0, #1
 800565e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8005662:	d20f      	bcs.n	8005684 <HAL_SYSTICK_Config+0x28>
 8005664:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8005668:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800566c:	2200      	movs	r2, #0
 800566e:	2107      	movs	r1, #7
 8005670:	b410      	push	{r4}
 8005672:	4c05      	ldr	r4, [pc, #20]	; (8005688 <HAL_SYSTICK_Config+0x2c>)
 8005674:	6158      	str	r0, [r3, #20]
 8005676:	f884 c023 	strb.w	ip, [r4, #35]	; 0x23
 800567a:	4610      	mov	r0, r2
 800567c:	619a      	str	r2, [r3, #24]
 800567e:	bc10      	pop	{r4}
 8005680:	6119      	str	r1, [r3, #16]
 8005682:	4770      	bx	lr
 8005684:	2001      	movs	r0, #1
 8005686:	4770      	bx	lr
 8005688:	e000ed00 	.word	0xe000ed00

0800568c <HAL_DMA_Abort_IT>:
 800568c:	b538      	push	{r3, r4, r5, lr}
 800568e:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 8005692:	4603      	mov	r3, r0
 8005694:	2a02      	cmp	r2, #2
 8005696:	d003      	beq.n	80056a0 <HAL_DMA_Abort_IT+0x14>
 8005698:	2204      	movs	r2, #4
 800569a:	2001      	movs	r0, #1
 800569c:	639a      	str	r2, [r3, #56]	; 0x38
 800569e:	bd38      	pop	{r3, r4, r5, pc}
 80056a0:	6801      	ldr	r1, [r0, #0]
 80056a2:	f04f 0c01 	mov.w	ip, #1
 80056a6:	680c      	ldr	r4, [r1, #0]
 80056a8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80056aa:	f024 040e 	bic.w	r4, r4, #14
 80056ae:	600c      	str	r4, [r1, #0]
 80056b0:	2400      	movs	r4, #0
 80056b2:	680d      	ldr	r5, [r1, #0]
 80056b4:	f002 021c 	and.w	r2, r2, #28
 80056b8:	f025 0501 	bic.w	r5, r5, #1
 80056bc:	600d      	str	r5, [r1, #0]
 80056be:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 80056c0:	6b41      	ldr	r1, [r0, #52]	; 0x34
 80056c2:	fa0c f202 	lsl.w	r2, ip, r2
 80056c6:	606a      	str	r2, [r5, #4]
 80056c8:	f880 c021 	strb.w	ip, [r0, #33]	; 0x21
 80056cc:	f880 4020 	strb.w	r4, [r0, #32]
 80056d0:	b111      	cbz	r1, 80056d8 <HAL_DMA_Abort_IT+0x4c>
 80056d2:	4788      	blx	r1
 80056d4:	4620      	mov	r0, r4
 80056d6:	bd38      	pop	{r3, r4, r5, pc}
 80056d8:	4608      	mov	r0, r1
 80056da:	bd38      	pop	{r3, r4, r5, pc}

080056dc <FLASH_SetErrorCode>:
 80056dc:	4b27      	ldr	r3, [pc, #156]	; (800577c <FLASH_SetErrorCode+0xa0>)
 80056de:	b570      	push	{r4, r5, r6, lr}
 80056e0:	699b      	ldr	r3, [r3, #24]
 80056e2:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80056e6:	d039      	beq.n	800575c <FLASH_SetErrorCode+0x80>
 80056e8:	4a25      	ldr	r2, [pc, #148]	; (8005780 <FLASH_SetErrorCode+0xa4>)
 80056ea:	f44f 6670 	mov.w	r6, #3840	; 0xf00
 80056ee:	6953      	ldr	r3, [r2, #20]
 80056f0:	f44f 6ee0 	mov.w	lr, #1792	; 0x700
 80056f4:	f043 0302 	orr.w	r3, r3, #2
 80056f8:	6153      	str	r3, [r2, #20]
 80056fa:	f44f 6c30 	mov.w	ip, #2816	; 0xb00
 80056fe:	f44f 6050 	mov.w	r0, #3328	; 0xd00
 8005702:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8005706:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800570a:	f44f 7540 	mov.w	r5, #768	; 0x300
 800570e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005712:	4c1a      	ldr	r4, [pc, #104]	; (800577c <FLASH_SetErrorCode+0xa0>)
 8005714:	69a4      	ldr	r4, [r4, #24]
 8005716:	05a4      	lsls	r4, r4, #22
 8005718:	d508      	bpl.n	800572c <FLASH_SetErrorCode+0x50>
 800571a:	4630      	mov	r0, r6
 800571c:	4672      	mov	r2, lr
 800571e:	4661      	mov	r1, ip
 8005720:	462b      	mov	r3, r5
 8005722:	4d17      	ldr	r5, [pc, #92]	; (8005780 <FLASH_SetErrorCode+0xa4>)
 8005724:	696c      	ldr	r4, [r5, #20]
 8005726:	f044 0401 	orr.w	r4, r4, #1
 800572a:	616c      	str	r4, [r5, #20]
 800572c:	4c13      	ldr	r4, [pc, #76]	; (800577c <FLASH_SetErrorCode+0xa0>)
 800572e:	69a4      	ldr	r4, [r4, #24]
 8005730:	0524      	lsls	r4, r4, #20
 8005732:	d506      	bpl.n	8005742 <FLASH_SetErrorCode+0x66>
 8005734:	4602      	mov	r2, r0
 8005736:	4812      	ldr	r0, [pc, #72]	; (8005780 <FLASH_SetErrorCode+0xa4>)
 8005738:	460b      	mov	r3, r1
 800573a:	6941      	ldr	r1, [r0, #20]
 800573c:	f041 0104 	orr.w	r1, r1, #4
 8005740:	6141      	str	r1, [r0, #20]
 8005742:	490e      	ldr	r1, [pc, #56]	; (800577c <FLASH_SetErrorCode+0xa0>)
 8005744:	6989      	ldr	r1, [r1, #24]
 8005746:	0549      	lsls	r1, r1, #21
 8005748:	d505      	bpl.n	8005756 <FLASH_SetErrorCode+0x7a>
 800574a:	490d      	ldr	r1, [pc, #52]	; (8005780 <FLASH_SetErrorCode+0xa4>)
 800574c:	4613      	mov	r3, r2
 800574e:	694a      	ldr	r2, [r1, #20]
 8005750:	f042 0208 	orr.w	r2, r2, #8
 8005754:	614a      	str	r2, [r1, #20]
 8005756:	4a09      	ldr	r2, [pc, #36]	; (800577c <FLASH_SetErrorCode+0xa0>)
 8005758:	6193      	str	r3, [r2, #24]
 800575a:	bd70      	pop	{r4, r5, r6, pc}
 800575c:	f44f 6660 	mov.w	r6, #3584	; 0xe00
 8005760:	f44f 6ec0 	mov.w	lr, #1536	; 0x600
 8005764:	f44f 6c20 	mov.w	ip, #2560	; 0xa00
 8005768:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 800576c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005770:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8005774:	f44f 7500 	mov.w	r5, #512	; 0x200
 8005778:	e7cb      	b.n	8005712 <FLASH_SetErrorCode+0x36>
 800577a:	bf00      	nop
 800577c:	40023c00 	.word	0x40023c00
 8005780:	2000090c 	.word	0x2000090c

08005784 <FLASH_WaitForLastOperation>:
 8005784:	b570      	push	{r4, r5, r6, lr}
 8005786:	4604      	mov	r4, r0
 8005788:	f7ff fef2 	bl	8005570 <HAL_GetTick>
 800578c:	4605      	mov	r5, r0
 800578e:	4e15      	ldr	r6, [pc, #84]	; (80057e4 <FLASH_WaitForLastOperation+0x60>)
 8005790:	1c60      	adds	r0, r4, #1
 8005792:	d11c      	bne.n	80057ce <FLASH_WaitForLastOperation+0x4a>
 8005794:	4a13      	ldr	r2, [pc, #76]	; (80057e4 <FLASH_WaitForLastOperation+0x60>)
 8005796:	6993      	ldr	r3, [r2, #24]
 8005798:	07d9      	lsls	r1, r3, #31
 800579a:	d4fc      	bmi.n	8005796 <FLASH_WaitForLastOperation+0x12>
 800579c:	4b11      	ldr	r3, [pc, #68]	; (80057e4 <FLASH_WaitForLastOperation+0x60>)
 800579e:	699a      	ldr	r2, [r3, #24]
 80057a0:	0794      	lsls	r4, r2, #30
 80057a2:	bf44      	itt	mi
 80057a4:	2202      	movmi	r2, #2
 80057a6:	619a      	strmi	r2, [r3, #24]
 80057a8:	4b0e      	ldr	r3, [pc, #56]	; (80057e4 <FLASH_WaitForLastOperation+0x60>)
 80057aa:	699a      	ldr	r2, [r3, #24]
 80057ac:	05d0      	lsls	r0, r2, #23
 80057ae:	d40a      	bmi.n	80057c6 <FLASH_WaitForLastOperation+0x42>
 80057b0:	699a      	ldr	r2, [r3, #24]
 80057b2:	0511      	lsls	r1, r2, #20
 80057b4:	d407      	bmi.n	80057c6 <FLASH_WaitForLastOperation+0x42>
 80057b6:	699a      	ldr	r2, [r3, #24]
 80057b8:	0552      	lsls	r2, r2, #21
 80057ba:	d404      	bmi.n	80057c6 <FLASH_WaitForLastOperation+0x42>
 80057bc:	6998      	ldr	r0, [r3, #24]
 80057be:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 80057c2:	d100      	bne.n	80057c6 <FLASH_WaitForLastOperation+0x42>
 80057c4:	bd70      	pop	{r4, r5, r6, pc}
 80057c6:	f7ff ff89 	bl	80056dc <FLASH_SetErrorCode>
 80057ca:	2001      	movs	r0, #1
 80057cc:	bd70      	pop	{r4, r5, r6, pc}
 80057ce:	69b3      	ldr	r3, [r6, #24]
 80057d0:	07db      	lsls	r3, r3, #31
 80057d2:	d5e3      	bpl.n	800579c <FLASH_WaitForLastOperation+0x18>
 80057d4:	b124      	cbz	r4, 80057e0 <FLASH_WaitForLastOperation+0x5c>
 80057d6:	f7ff fecb 	bl	8005570 <HAL_GetTick>
 80057da:	1b40      	subs	r0, r0, r5
 80057dc:	42a0      	cmp	r0, r4
 80057de:	d9d7      	bls.n	8005790 <FLASH_WaitForLastOperation+0xc>
 80057e0:	2003      	movs	r0, #3
 80057e2:	bd70      	pop	{r4, r5, r6, pc}
 80057e4:	40023c00 	.word	0x40023c00

080057e8 <HAL_FLASHEx_DATAEEPROM_Unlock>:
 80057e8:	4b05      	ldr	r3, [pc, #20]	; (8005800 <HAL_FLASHEx_DATAEEPROM_Unlock+0x18>)
 80057ea:	685a      	ldr	r2, [r3, #4]
 80057ec:	07d2      	lsls	r2, r2, #31
 80057ee:	d505      	bpl.n	80057fc <HAL_FLASHEx_DATAEEPROM_Unlock+0x14>
 80057f0:	4904      	ldr	r1, [pc, #16]	; (8005804 <HAL_FLASHEx_DATAEEPROM_Unlock+0x1c>)
 80057f2:	4a05      	ldr	r2, [pc, #20]	; (8005808 <HAL_FLASHEx_DATAEEPROM_Unlock+0x20>)
 80057f4:	60d9      	str	r1, [r3, #12]
 80057f6:	2000      	movs	r0, #0
 80057f8:	60da      	str	r2, [r3, #12]
 80057fa:	4770      	bx	lr
 80057fc:	2001      	movs	r0, #1
 80057fe:	4770      	bx	lr
 8005800:	40023c00 	.word	0x40023c00
 8005804:	89abcdef 	.word	0x89abcdef
 8005808:	02030405 	.word	0x02030405

0800580c <HAL_FLASHEx_DATAEEPROM_Lock>:
 800580c:	4a03      	ldr	r2, [pc, #12]	; (800581c <HAL_FLASHEx_DATAEEPROM_Lock+0x10>)
 800580e:	2000      	movs	r0, #0
 8005810:	6853      	ldr	r3, [r2, #4]
 8005812:	f043 0301 	orr.w	r3, r3, #1
 8005816:	6053      	str	r3, [r2, #4]
 8005818:	4770      	bx	lr
 800581a:	bf00      	nop
 800581c:	40023c00 	.word	0x40023c00

08005820 <HAL_FLASHEx_DATAEEPROM_Program>:
 8005820:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005824:	4e83      	ldr	r6, [pc, #524]	; (8005a34 <HAL_FLASHEx_DATAEEPROM_Program+0x214>)
 8005826:	7c33      	ldrb	r3, [r6, #16]
 8005828:	2b01      	cmp	r3, #1
 800582a:	d01f      	beq.n	800586c <HAL_FLASHEx_DATAEEPROM_Program+0x4c>
 800582c:	2701      	movs	r7, #1
 800582e:	4605      	mov	r5, r0
 8005830:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005834:	4688      	mov	r8, r1
 8005836:	4691      	mov	r9, r2
 8005838:	7437      	strb	r7, [r6, #16]
 800583a:	f7ff ffa3 	bl	8005784 <FLASH_WaitForLastOperation>
 800583e:	4604      	mov	r4, r0
 8005840:	b978      	cbnz	r0, 8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005842:	2d02      	cmp	r5, #2
 8005844:	6170      	str	r0, [r6, #20]
 8005846:	d045      	beq.n	80058d4 <HAL_FLASHEx_DATAEEPROM_Program+0xb4>
 8005848:	2d01      	cmp	r5, #1
 800584a:	d052      	beq.n	80058f2 <HAL_FLASHEx_DATAEEPROM_Program+0xd2>
 800584c:	b195      	cbz	r5, 8005874 <HAL_FLASHEx_DATAEEPROM_Program+0x54>
 800584e:	2d04      	cmp	r5, #4
 8005850:	f000 8083 	beq.w	800595a <HAL_FLASHEx_DATAEEPROM_Program+0x13a>
 8005854:	2d08      	cmp	r5, #8
 8005856:	f000 80aa 	beq.w	80059ae <HAL_FLASHEx_DATAEEPROM_Program+0x18e>
 800585a:	2d10      	cmp	r5, #16
 800585c:	f000 80c8 	beq.w	80059f0 <HAL_FLASHEx_DATAEEPROM_Program+0x1d0>
 8005860:	463c      	mov	r4, r7
 8005862:	2300      	movs	r3, #0
 8005864:	4620      	mov	r0, r4
 8005866:	7433      	strb	r3, [r6, #16]
 8005868:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800586c:	2402      	movs	r4, #2
 800586e:	4620      	mov	r0, r4
 8005870:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005874:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005878:	f7ff ff84 	bl	8005784 <FLASH_WaitForLastOperation>
 800587c:	4604      	mov	r4, r0
 800587e:	2800      	cmp	r0, #0
 8005880:	d1ef      	bne.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005882:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 8005886:	f040 808a 	bne.w	800599e <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 800588a:	22ff      	movs	r2, #255	; 0xff
 800588c:	f028 0503 	bic.w	r5, r8, #3
 8005890:	f008 0803 	and.w	r8, r8, #3
 8005894:	682c      	ldr	r4, [r5, #0]
 8005896:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800589a:	fa02 f208 	lsl.w	r2, r2, r8
 800589e:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058a2:	ea24 0402 	bic.w	r4, r4, r2
 80058a6:	f7ff ff6d 	bl	8005784 <FLASH_WaitForLastOperation>
 80058aa:	4603      	mov	r3, r0
 80058ac:	b928      	cbnz	r0, 80058ba <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 80058ae:	6173      	str	r3, [r6, #20]
 80058b0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058b4:	602b      	str	r3, [r5, #0]
 80058b6:	f7ff ff65 	bl	8005784 <FLASH_WaitForLastOperation>
 80058ba:	2300      	movs	r3, #0
 80058bc:	4622      	mov	r2, r4
 80058be:	4629      	mov	r1, r5
 80058c0:	2010      	movs	r0, #16
 80058c2:	7433      	strb	r3, [r6, #16]
 80058c4:	f7ff ffac 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 80058c8:	7c33      	ldrb	r3, [r6, #16]
 80058ca:	4604      	mov	r4, r0
 80058cc:	2b01      	cmp	r3, #1
 80058ce:	d1c8      	bne.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058d0:	2402      	movs	r4, #2
 80058d2:	e7c6      	b.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058d4:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058d8:	f7ff ff54 	bl	8005784 <FLASH_WaitForLastOperation>
 80058dc:	4604      	mov	r4, r0
 80058de:	2800      	cmp	r0, #0
 80058e0:	d1bf      	bne.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058e2:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058e6:	f8c8 9000 	str.w	r9, [r8]
 80058ea:	f7ff ff4b 	bl	8005784 <FLASH_WaitForLastOperation>
 80058ee:	4604      	mov	r4, r0
 80058f0:	e7b7      	b.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80058f2:	f24c 3050 	movw	r0, #50000	; 0xc350
 80058f6:	f7ff ff45 	bl	8005784 <FLASH_WaitForLastOperation>
 80058fa:	4604      	mov	r4, r0
 80058fc:	2800      	cmp	r0, #0
 80058fe:	d1b0      	bne.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005900:	fa1f f289 	uxth.w	r2, r9
 8005904:	2a00      	cmp	r2, #0
 8005906:	f040 8081 	bne.w	8005a0c <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 800590a:	f008 0303 	and.w	r3, r8, #3
 800590e:	2b03      	cmp	r3, #3
 8005910:	7432      	strb	r2, [r6, #16]
 8005912:	f000 8083 	beq.w	8005a1c <HAL_FLASHEx_DATAEEPROM_Program+0x1fc>
 8005916:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800591a:	f028 0803 	bic.w	r8, r8, #3
 800591e:	f8d8 4000 	ldr.w	r4, [r8]
 8005922:	00db      	lsls	r3, r3, #3
 8005924:	fa02 f303 	lsl.w	r3, r2, r3
 8005928:	f24c 3050 	movw	r0, #50000	; 0xc350
 800592c:	ea24 0403 	bic.w	r4, r4, r3
 8005930:	f7ff ff28 	bl	8005784 <FLASH_WaitForLastOperation>
 8005934:	4603      	mov	r3, r0
 8005936:	b930      	cbnz	r0, 8005946 <HAL_FLASHEx_DATAEEPROM_Program+0x126>
 8005938:	6170      	str	r0, [r6, #20]
 800593a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800593e:	f8c8 3000 	str.w	r3, [r8]
 8005942:	f7ff ff1f 	bl	8005784 <FLASH_WaitForLastOperation>
 8005946:	4622      	mov	r2, r4
 8005948:	4641      	mov	r1, r8
 800594a:	2010      	movs	r0, #16
 800594c:	f7ff ff68 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 8005950:	4604      	mov	r4, r0
 8005952:	7c33      	ldrb	r3, [r6, #16]
 8005954:	2b01      	cmp	r3, #1
 8005956:	d184      	bne.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005958:	e7ba      	b.n	80058d0 <HAL_FLASHEx_DATAEEPROM_Program+0xb0>
 800595a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800595e:	f7ff ff11 	bl	8005784 <FLASH_WaitForLastOperation>
 8005962:	4604      	mov	r4, r0
 8005964:	2800      	cmp	r0, #0
 8005966:	f47f af7c 	bne.w	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 800596a:	4a33      	ldr	r2, [pc, #204]	; (8005a38 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 800596c:	6853      	ldr	r3, [r2, #4]
 800596e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005972:	6053      	str	r3, [r2, #4]
 8005974:	f019 02ff 	ands.w	r2, r9, #255	; 0xff
 8005978:	d111      	bne.n	800599e <HAL_FLASHEx_DATAEEPROM_Program+0x17e>
 800597a:	f008 0303 	and.w	r3, r8, #3
 800597e:	00da      	lsls	r2, r3, #3
 8005980:	23ff      	movs	r3, #255	; 0xff
 8005982:	f028 0503 	bic.w	r5, r8, #3
 8005986:	682c      	ldr	r4, [r5, #0]
 8005988:	4093      	lsls	r3, r2
 800598a:	f24c 3050 	movw	r0, #50000	; 0xc350
 800598e:	ea24 0403 	bic.w	r4, r4, r3
 8005992:	f7ff fef7 	bl	8005784 <FLASH_WaitForLastOperation>
 8005996:	4603      	mov	r3, r0
 8005998:	2800      	cmp	r0, #0
 800599a:	d18e      	bne.n	80058ba <HAL_FLASHEx_DATAEEPROM_Program+0x9a>
 800599c:	e787      	b.n	80058ae <HAL_FLASHEx_DATAEEPROM_Program+0x8e>
 800599e:	f24c 3050 	movw	r0, #50000	; 0xc350
 80059a2:	f888 2000 	strb.w	r2, [r8]
 80059a6:	f7ff feed 	bl	8005784 <FLASH_WaitForLastOperation>
 80059aa:	4604      	mov	r4, r0
 80059ac:	e759      	b.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80059ae:	f24c 3050 	movw	r0, #50000	; 0xc350
 80059b2:	f7ff fee7 	bl	8005784 <FLASH_WaitForLastOperation>
 80059b6:	4604      	mov	r4, r0
 80059b8:	2800      	cmp	r0, #0
 80059ba:	f47f af52 	bne.w	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 80059be:	491e      	ldr	r1, [pc, #120]	; (8005a38 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 80059c0:	fa1f f289 	uxth.w	r2, r9
 80059c4:	684b      	ldr	r3, [r1, #4]
 80059c6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80059ca:	604b      	str	r3, [r1, #4]
 80059cc:	b9f2      	cbnz	r2, 8005a0c <HAL_FLASHEx_DATAEEPROM_Program+0x1ec>
 80059ce:	f008 0303 	and.w	r3, r8, #3
 80059d2:	2b03      	cmp	r3, #3
 80059d4:	7430      	strb	r0, [r6, #16]
 80059d6:	d19e      	bne.n	8005916 <HAL_FLASHEx_DATAEEPROM_Program+0xf6>
 80059d8:	4641      	mov	r1, r8
 80059da:	2200      	movs	r2, #0
 80059dc:	2004      	movs	r0, #4
 80059de:	f7ff ff1f 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 80059e2:	2200      	movs	r2, #0
 80059e4:	f108 0101 	add.w	r1, r8, #1
 80059e8:	2004      	movs	r0, #4
 80059ea:	f7ff ff19 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 80059ee:	e7b0      	b.n	8005952 <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 80059f0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80059f4:	f7ff fec6 	bl	8005784 <FLASH_WaitForLastOperation>
 80059f8:	4604      	mov	r4, r0
 80059fa:	2800      	cmp	r0, #0
 80059fc:	f47f af31 	bne.w	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005a00:	4a0d      	ldr	r2, [pc, #52]	; (8005a38 <HAL_FLASHEx_DATAEEPROM_Program+0x218>)
 8005a02:	6853      	ldr	r3, [r2, #4]
 8005a04:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005a08:	6053      	str	r3, [r2, #4]
 8005a0a:	e76a      	b.n	80058e2 <HAL_FLASHEx_DATAEEPROM_Program+0xc2>
 8005a0c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8005a10:	f8a8 2000 	strh.w	r2, [r8]
 8005a14:	f7ff feb6 	bl	8005784 <FLASH_WaitForLastOperation>
 8005a18:	4604      	mov	r4, r0
 8005a1a:	e722      	b.n	8005862 <HAL_FLASHEx_DATAEEPROM_Program+0x42>
 8005a1c:	4641      	mov	r1, r8
 8005a1e:	4602      	mov	r2, r0
 8005a20:	2004      	movs	r0, #4
 8005a22:	f7ff fefd 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 8005a26:	4622      	mov	r2, r4
 8005a28:	f108 0101 	add.w	r1, r8, #1
 8005a2c:	2004      	movs	r0, #4
 8005a2e:	f7ff fef7 	bl	8005820 <HAL_FLASHEx_DATAEEPROM_Program>
 8005a32:	e78e      	b.n	8005952 <HAL_FLASHEx_DATAEEPROM_Program+0x132>
 8005a34:	2000090c 	.word	0x2000090c
 8005a38:	40023c00 	.word	0x40023c00

08005a3c <HAL_GPIO_Init>:
 8005a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a40:	680c      	ldr	r4, [r1, #0]
 8005a42:	b085      	sub	sp, #20
 8005a44:	2c00      	cmp	r4, #0
 8005a46:	d07c      	beq.n	8005b42 <HAL_GPIO_Init+0x106>
 8005a48:	f04f 0e00 	mov.w	lr, #0
 8005a4c:	f04f 0b01 	mov.w	fp, #1
 8005a50:	4673      	mov	r3, lr
 8005a52:	468c      	mov	ip, r1
 8005a54:	fa0b f503 	lsl.w	r5, fp, r3
 8005a58:	ea15 0a04 	ands.w	sl, r5, r4
 8005a5c:	d06b      	beq.n	8005b36 <HAL_GPIO_Init+0xfa>
 8005a5e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8005a62:	f001 0203 	and.w	r2, r1, #3
 8005a66:	1e57      	subs	r7, r2, #1
 8005a68:	2f01      	cmp	r7, #1
 8005a6a:	d96d      	bls.n	8005b48 <HAL_GPIO_Init+0x10c>
 8005a6c:	2a03      	cmp	r2, #3
 8005a6e:	f040 80ae 	bne.w	8005bce <HAL_GPIO_Init+0x192>
 8005a72:	fa02 f20e 	lsl.w	r2, r2, lr
 8005a76:	43d7      	mvns	r7, r2
 8005a78:	6805      	ldr	r5, [r0, #0]
 8005a7a:	f411 3f40 	tst.w	r1, #196608	; 0x30000
 8005a7e:	ea07 0705 	and.w	r7, r7, r5
 8005a82:	ea42 0207 	orr.w	r2, r2, r7
 8005a86:	6002      	str	r2, [r0, #0]
 8005a88:	d055      	beq.n	8005b36 <HAL_GPIO_Init+0xfa>
 8005a8a:	260f      	movs	r6, #15
 8005a8c:	4d5a      	ldr	r5, [pc, #360]	; (8005bf8 <HAL_GPIO_Init+0x1bc>)
 8005a8e:	f003 0703 	and.w	r7, r3, #3
 8005a92:	6a2a      	ldr	r2, [r5, #32]
 8005a94:	00bf      	lsls	r7, r7, #2
 8005a96:	f042 0201 	orr.w	r2, r2, #1
 8005a9a:	622a      	str	r2, [r5, #32]
 8005a9c:	6a2a      	ldr	r2, [r5, #32]
 8005a9e:	fa06 f807 	lsl.w	r8, r6, r7
 8005aa2:	f002 0201 	and.w	r2, r2, #1
 8005aa6:	9203      	str	r2, [sp, #12]
 8005aa8:	9a03      	ldr	r2, [sp, #12]
 8005aaa:	f023 0203 	bic.w	r2, r3, #3
 8005aae:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8005ab2:	4e52      	ldr	r6, [pc, #328]	; (8005bfc <HAL_GPIO_Init+0x1c0>)
 8005ab4:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8005ab8:	6895      	ldr	r5, [r2, #8]
 8005aba:	42b0      	cmp	r0, r6
 8005abc:	ea25 0508 	bic.w	r5, r5, r8
 8005ac0:	d015      	beq.n	8005aee <HAL_GPIO_Init+0xb2>
 8005ac2:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005ac6:	42b0      	cmp	r0, r6
 8005ac8:	f000 808c 	beq.w	8005be4 <HAL_GPIO_Init+0x1a8>
 8005acc:	4e4c      	ldr	r6, [pc, #304]	; (8005c00 <HAL_GPIO_Init+0x1c4>)
 8005ace:	42b0      	cmp	r0, r6
 8005ad0:	f000 808c 	beq.w	8005bec <HAL_GPIO_Init+0x1b0>
 8005ad4:	4e4b      	ldr	r6, [pc, #300]	; (8005c04 <HAL_GPIO_Init+0x1c8>)
 8005ad6:	42b0      	cmp	r0, r6
 8005ad8:	d07e      	beq.n	8005bd8 <HAL_GPIO_Init+0x19c>
 8005ada:	4e4b      	ldr	r6, [pc, #300]	; (8005c08 <HAL_GPIO_Init+0x1cc>)
 8005adc:	42b0      	cmp	r0, r6
 8005ade:	bf0c      	ite	eq
 8005ae0:	f04f 0804 	moveq.w	r8, #4
 8005ae4:	f04f 0805 	movne.w	r8, #5
 8005ae8:	fa08 f707 	lsl.w	r7, r8, r7
 8005aec:	433d      	orrs	r5, r7
 8005aee:	ea6f 070a 	mvn.w	r7, sl
 8005af2:	6095      	str	r5, [r2, #8]
 8005af4:	4a45      	ldr	r2, [pc, #276]	; (8005c0c <HAL_GPIO_Init+0x1d0>)
 8005af6:	03cd      	lsls	r5, r1, #15
 8005af8:	6812      	ldr	r2, [r2, #0]
 8005afa:	4d44      	ldr	r5, [pc, #272]	; (8005c0c <HAL_GPIO_Init+0x1d0>)
 8005afc:	bf54      	ite	pl
 8005afe:	403a      	andpl	r2, r7
 8005b00:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005b04:	602a      	str	r2, [r5, #0]
 8005b06:	686d      	ldr	r5, [r5, #4]
 8005b08:	038a      	lsls	r2, r1, #14
 8005b0a:	4a40      	ldr	r2, [pc, #256]	; (8005c0c <HAL_GPIO_Init+0x1d0>)
 8005b0c:	bf54      	ite	pl
 8005b0e:	403d      	andpl	r5, r7
 8005b10:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005b14:	6055      	str	r5, [r2, #4]
 8005b16:	6895      	ldr	r5, [r2, #8]
 8005b18:	02ce      	lsls	r6, r1, #11
 8005b1a:	4a3c      	ldr	r2, [pc, #240]	; (8005c0c <HAL_GPIO_Init+0x1d0>)
 8005b1c:	bf54      	ite	pl
 8005b1e:	403d      	andpl	r5, r7
 8005b20:	ea4a 0505 	orrmi.w	r5, sl, r5
 8005b24:	6095      	str	r5, [r2, #8]
 8005b26:	68d2      	ldr	r2, [r2, #12]
 8005b28:	0289      	lsls	r1, r1, #10
 8005b2a:	4938      	ldr	r1, [pc, #224]	; (8005c0c <HAL_GPIO_Init+0x1d0>)
 8005b2c:	bf54      	ite	pl
 8005b2e:	403a      	andpl	r2, r7
 8005b30:	ea4a 0202 	orrmi.w	r2, sl, r2
 8005b34:	60ca      	str	r2, [r1, #12]
 8005b36:	3301      	adds	r3, #1
 8005b38:	fa34 f203 	lsrs.w	r2, r4, r3
 8005b3c:	f10e 0e02 	add.w	lr, lr, #2
 8005b40:	d188      	bne.n	8005a54 <HAL_GPIO_Init+0x18>
 8005b42:	b005      	add	sp, #20
 8005b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b48:	f04f 0903 	mov.w	r9, #3
 8005b4c:	6886      	ldr	r6, [r0, #8]
 8005b4e:	f8dc 700c 	ldr.w	r7, [ip, #12]
 8005b52:	fa09 f90e 	lsl.w	r9, r9, lr
 8005b56:	ea26 0609 	bic.w	r6, r6, r9
 8005b5a:	fa07 f70e 	lsl.w	r7, r7, lr
 8005b5e:	4337      	orrs	r7, r6
 8005b60:	6087      	str	r7, [r0, #8]
 8005b62:	ea6f 0709 	mvn.w	r7, r9
 8005b66:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8005b6a:	f3c1 1800 	ubfx	r8, r1, #4, #1
 8005b6e:	fa08 f803 	lsl.w	r8, r8, r3
 8005b72:	ea29 0505 	bic.w	r5, r9, r5
 8005b76:	ea48 0505 	orr.w	r5, r8, r5
 8005b7a:	6045      	str	r5, [r0, #4]
 8005b7c:	68c5      	ldr	r5, [r0, #12]
 8005b7e:	2a02      	cmp	r2, #2
 8005b80:	ea05 0807 	and.w	r8, r5, r7
 8005b84:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8005b88:	fa02 f20e 	lsl.w	r2, r2, lr
 8005b8c:	fa05 f50e 	lsl.w	r5, r5, lr
 8005b90:	ea45 0508 	orr.w	r5, r5, r8
 8005b94:	60c5      	str	r5, [r0, #12]
 8005b96:	f47f af6f 	bne.w	8005a78 <HAL_GPIO_Init+0x3c>
 8005b9a:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8005b9e:	f003 0807 	and.w	r8, r3, #7
 8005ba2:	ea4f 0888 	mov.w	r8, r8, lsl #2
 8005ba6:	fa05 f508 	lsl.w	r5, r5, r8
 8005baa:	9501      	str	r5, [sp, #4]
 8005bac:	250f      	movs	r5, #15
 8005bae:	ea4f 09d3 	mov.w	r9, r3, lsr #3
 8005bb2:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 8005bb6:	f8d9 6020 	ldr.w	r6, [r9, #32]
 8005bba:	fa05 f808 	lsl.w	r8, r5, r8
 8005bbe:	9d01      	ldr	r5, [sp, #4]
 8005bc0:	ea26 0808 	bic.w	r8, r6, r8
 8005bc4:	ea45 0508 	orr.w	r5, r5, r8
 8005bc8:	f8c9 5020 	str.w	r5, [r9, #32]
 8005bcc:	e754      	b.n	8005a78 <HAL_GPIO_Init+0x3c>
 8005bce:	2703      	movs	r7, #3
 8005bd0:	fa07 f70e 	lsl.w	r7, r7, lr
 8005bd4:	43ff      	mvns	r7, r7
 8005bd6:	e7d1      	b.n	8005b7c <HAL_GPIO_Init+0x140>
 8005bd8:	f04f 0803 	mov.w	r8, #3
 8005bdc:	fa08 f707 	lsl.w	r7, r8, r7
 8005be0:	433d      	orrs	r5, r7
 8005be2:	e784      	b.n	8005aee <HAL_GPIO_Init+0xb2>
 8005be4:	fa0b f707 	lsl.w	r7, fp, r7
 8005be8:	433d      	orrs	r5, r7
 8005bea:	e780      	b.n	8005aee <HAL_GPIO_Init+0xb2>
 8005bec:	f04f 0802 	mov.w	r8, #2
 8005bf0:	fa08 f707 	lsl.w	r7, r8, r7
 8005bf4:	433d      	orrs	r5, r7
 8005bf6:	e77a      	b.n	8005aee <HAL_GPIO_Init+0xb2>
 8005bf8:	40023800 	.word	0x40023800
 8005bfc:	40020000 	.word	0x40020000
 8005c00:	40020800 	.word	0x40020800
 8005c04:	40020c00 	.word	0x40020c00
 8005c08:	40021000 	.word	0x40021000
 8005c0c:	40010400 	.word	0x40010400

08005c10 <HAL_GPIO_ReadPin>:
 8005c10:	6903      	ldr	r3, [r0, #16]
 8005c12:	4219      	tst	r1, r3
 8005c14:	bf14      	ite	ne
 8005c16:	2001      	movne	r0, #1
 8005c18:	2000      	moveq	r0, #0
 8005c1a:	4770      	bx	lr

08005c1c <HAL_GPIO_WritePin>:
 8005c1c:	b902      	cbnz	r2, 8005c20 <HAL_GPIO_WritePin+0x4>
 8005c1e:	0409      	lsls	r1, r1, #16
 8005c20:	6181      	str	r1, [r0, #24]
 8005c22:	4770      	bx	lr

08005c24 <HAL_GPIO_EXTI_IRQHandler>:
 8005c24:	4a04      	ldr	r2, [pc, #16]	; (8005c38 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8005c26:	6951      	ldr	r1, [r2, #20]
 8005c28:	4201      	tst	r1, r0
 8005c2a:	d100      	bne.n	8005c2e <HAL_GPIO_EXTI_IRQHandler+0xa>
 8005c2c:	4770      	bx	lr
 8005c2e:	b508      	push	{r3, lr}
 8005c30:	6150      	str	r0, [r2, #20]
 8005c32:	f009 ff85 	bl	800fb40 <__HAL_GPIO_EXTI_Callback_veneer>
 8005c36:	bd08      	pop	{r3, pc}
 8005c38:	40010400 	.word	0x40010400

08005c3c <HAL_I2C_Init>:
 8005c3c:	2800      	cmp	r0, #0
 8005c3e:	f000 80b9 	beq.w	8005db4 <HAL_I2C_Init+0x178>
 8005c42:	b538      	push	{r3, r4, r5, lr}
 8005c44:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005c48:	4604      	mov	r4, r0
 8005c4a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	f000 8098 	beq.w	8005d84 <HAL_I2C_Init+0x148>
 8005c54:	2224      	movs	r2, #36	; 0x24
 8005c56:	6823      	ldr	r3, [r4, #0]
 8005c58:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8005c5c:	681a      	ldr	r2, [r3, #0]
 8005c5e:	f022 0201 	bic.w	r2, r2, #1
 8005c62:	601a      	str	r2, [r3, #0]
 8005c64:	681a      	ldr	r2, [r3, #0]
 8005c66:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005c6a:	601a      	str	r2, [r3, #0]
 8005c6c:	681a      	ldr	r2, [r3, #0]
 8005c6e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005c72:	601a      	str	r2, [r3, #0]
 8005c74:	f001 ff90 	bl	8007b98 <HAL_RCC_GetPCLK1Freq>
 8005c78:	6863      	ldr	r3, [r4, #4]
 8005c7a:	494f      	ldr	r1, [pc, #316]	; (8005db8 <HAL_I2C_Init+0x17c>)
 8005c7c:	428b      	cmp	r3, r1
 8005c7e:	d84f      	bhi.n	8005d20 <HAL_I2C_Init+0xe4>
 8005c80:	4a4e      	ldr	r2, [pc, #312]	; (8005dbc <HAL_I2C_Init+0x180>)
 8005c82:	4290      	cmp	r0, r2
 8005c84:	d97c      	bls.n	8005d80 <HAL_I2C_Init+0x144>
 8005c86:	4d4e      	ldr	r5, [pc, #312]	; (8005dc0 <HAL_I2C_Init+0x184>)
 8005c88:	005a      	lsls	r2, r3, #1
 8005c8a:	fba5 3500 	umull	r3, r5, r5, r0
 8005c8e:	1e43      	subs	r3, r0, #1
 8005c90:	fbb3 f3f2 	udiv	r3, r3, r2
 8005c94:	f640 7efc 	movw	lr, #4092	; 0xffc
 8005c98:	6822      	ldr	r2, [r4, #0]
 8005c9a:	0ca9      	lsrs	r1, r5, #18
 8005c9c:	6850      	ldr	r0, [r2, #4]
 8005c9e:	f101 0c01 	add.w	ip, r1, #1
 8005ca2:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 8005ca6:	ea40 4095 	orr.w	r0, r0, r5, lsr #18
 8005caa:	6050      	str	r0, [r2, #4]
 8005cac:	6a11      	ldr	r1, [r2, #32]
 8005cae:	3301      	adds	r3, #1
 8005cb0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8005cb4:	ea41 010c 	orr.w	r1, r1, ip
 8005cb8:	6211      	str	r1, [r2, #32]
 8005cba:	69d1      	ldr	r1, [r2, #28]
 8005cbc:	ea13 0f0e 	tst.w	r3, lr
 8005cc0:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005cc4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005cc8:	d161      	bne.n	8005d8e <HAL_I2C_Init+0x152>
 8005cca:	2304      	movs	r3, #4
 8005ccc:	430b      	orrs	r3, r1
 8005cce:	61d3      	str	r3, [r2, #28]
 8005cd0:	6811      	ldr	r1, [r2, #0]
 8005cd2:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005cd6:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005cda:	4303      	orrs	r3, r0
 8005cdc:	430b      	orrs	r3, r1
 8005cde:	6013      	str	r3, [r2, #0]
 8005ce0:	6891      	ldr	r1, [r2, #8]
 8005ce2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005ce6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005cea:	4303      	orrs	r3, r0
 8005cec:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005cf0:	430b      	orrs	r3, r1
 8005cf2:	6093      	str	r3, [r2, #8]
 8005cf4:	68d0      	ldr	r0, [r2, #12]
 8005cf6:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005cfa:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005cfe:	430b      	orrs	r3, r1
 8005d00:	4303      	orrs	r3, r0
 8005d02:	60d3      	str	r3, [r2, #12]
 8005d04:	6813      	ldr	r3, [r2, #0]
 8005d06:	2100      	movs	r1, #0
 8005d08:	f043 0301 	orr.w	r3, r3, #1
 8005d0c:	6013      	str	r3, [r2, #0]
 8005d0e:	2320      	movs	r3, #32
 8005d10:	6421      	str	r1, [r4, #64]	; 0x40
 8005d12:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8005d16:	6321      	str	r1, [r4, #48]	; 0x30
 8005d18:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8005d1c:	4608      	mov	r0, r1
 8005d1e:	bd38      	pop	{r3, r4, r5, pc}
 8005d20:	4a28      	ldr	r2, [pc, #160]	; (8005dc4 <HAL_I2C_Init+0x188>)
 8005d22:	4290      	cmp	r0, r2
 8005d24:	d92c      	bls.n	8005d80 <HAL_I2C_Init+0x144>
 8005d26:	4d26      	ldr	r5, [pc, #152]	; (8005dc0 <HAL_I2C_Init+0x184>)
 8005d28:	fba5 2c00 	umull	r2, ip, r5, r0
 8005d2c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005d30:	ea4f 419c 	mov.w	r1, ip, lsr #18
 8005d34:	fb02 f101 	mul.w	r1, r2, r1
 8005d38:	4d23      	ldr	r5, [pc, #140]	; (8005dc8 <HAL_I2C_Init+0x18c>)
 8005d3a:	6822      	ldr	r2, [r4, #0]
 8005d3c:	fba5 5101 	umull	r5, r1, r5, r1
 8005d40:	6855      	ldr	r5, [r2, #4]
 8005d42:	0989      	lsrs	r1, r1, #6
 8005d44:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005d48:	ea45 459c 	orr.w	r5, r5, ip, lsr #18
 8005d4c:	6055      	str	r5, [r2, #4]
 8005d4e:	6a15      	ldr	r5, [r2, #32]
 8005d50:	3101      	adds	r1, #1
 8005d52:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005d56:	4329      	orrs	r1, r5
 8005d58:	6211      	str	r1, [r2, #32]
 8005d5a:	69d1      	ldr	r1, [r2, #28]
 8005d5c:	68a5      	ldr	r5, [r4, #8]
 8005d5e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005d62:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005d66:	b9ad      	cbnz	r5, 8005d94 <HAL_I2C_Init+0x158>
 8005d68:	3801      	subs	r0, #1
 8005d6a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005d6e:	fbb0 f3f3 	udiv	r3, r0, r3
 8005d72:	3301      	adds	r3, #1
 8005d74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005d78:	b1d3      	cbz	r3, 8005db0 <HAL_I2C_Init+0x174>
 8005d7a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005d7e:	e7a5      	b.n	8005ccc <HAL_I2C_Init+0x90>
 8005d80:	2001      	movs	r0, #1
 8005d82:	bd38      	pop	{r3, r4, r5, pc}
 8005d84:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8005d88:	f7fd fe92 	bl	8003ab0 <HAL_I2C_MspInit>
 8005d8c:	e762      	b.n	8005c54 <HAL_I2C_Init+0x18>
 8005d8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005d92:	e79b      	b.n	8005ccc <HAL_I2C_Init+0x90>
 8005d94:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005d98:	3801      	subs	r0, #1
 8005d9a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8005d9e:	fbb0 f3f3 	udiv	r3, r0, r3
 8005da2:	3301      	adds	r3, #1
 8005da4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005da8:	b113      	cbz	r3, 8005db0 <HAL_I2C_Init+0x174>
 8005daa:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005dae:	e78d      	b.n	8005ccc <HAL_I2C_Init+0x90>
 8005db0:	2301      	movs	r3, #1
 8005db2:	e78b      	b.n	8005ccc <HAL_I2C_Init+0x90>
 8005db4:	2001      	movs	r0, #1
 8005db6:	4770      	bx	lr
 8005db8:	000186a0 	.word	0x000186a0
 8005dbc:	001e847f 	.word	0x001e847f
 8005dc0:	431bde83 	.word	0x431bde83
 8005dc4:	003d08ff 	.word	0x003d08ff
 8005dc8:	10624dd3 	.word	0x10624dd3

08005dcc <HAL_I2C_Master_Transmit>:
 8005dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dd0:	4605      	mov	r5, r0
 8005dd2:	b083      	sub	sp, #12
 8005dd4:	4699      	mov	r9, r3
 8005dd6:	4688      	mov	r8, r1
 8005dd8:	4692      	mov	sl, r2
 8005dda:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8005ddc:	f7ff fbc8 	bl	8005570 <HAL_GetTick>
 8005de0:	f895 303d 	ldrb.w	r3, [r5, #61]	; 0x3d
 8005de4:	2b20      	cmp	r3, #32
 8005de6:	d003      	beq.n	8005df0 <HAL_I2C_Master_Transmit+0x24>
 8005de8:	2002      	movs	r0, #2
 8005dea:	b003      	add	sp, #12
 8005dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005df0:	4606      	mov	r6, r0
 8005df2:	e005      	b.n	8005e00 <HAL_I2C_Master_Transmit+0x34>
 8005df4:	f7ff fbbc 	bl	8005570 <HAL_GetTick>
 8005df8:	1b80      	subs	r0, r0, r6
 8005dfa:	2819      	cmp	r0, #25
 8005dfc:	f200 80f8 	bhi.w	8005ff0 <HAL_I2C_Master_Transmit+0x224>
 8005e00:	682c      	ldr	r4, [r5, #0]
 8005e02:	69a3      	ldr	r3, [r4, #24]
 8005e04:	ea6f 0c03 	mvn.w	ip, r3
 8005e08:	f01c 0b02 	ands.w	fp, ip, #2
 8005e0c:	d0f2      	beq.n	8005df4 <HAL_I2C_Master_Transmit+0x28>
 8005e0e:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 8005e12:	2b01      	cmp	r3, #1
 8005e14:	d0e8      	beq.n	8005de8 <HAL_I2C_Master_Transmit+0x1c>
 8005e16:	2301      	movs	r3, #1
 8005e18:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8005e1c:	6823      	ldr	r3, [r4, #0]
 8005e1e:	07d9      	lsls	r1, r3, #31
 8005e20:	d571      	bpl.n	8005f06 <HAL_I2C_Master_Transmit+0x13a>
 8005e22:	2200      	movs	r2, #0
 8005e24:	2021      	movs	r0, #33	; 0x21
 8005e26:	2110      	movs	r1, #16
 8005e28:	6823      	ldr	r3, [r4, #0]
 8005e2a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005e2e:	6023      	str	r3, [r4, #0]
 8005e30:	f885 003d 	strb.w	r0, [r5, #61]	; 0x3d
 8005e34:	f885 103e 	strb.w	r1, [r5, #62]	; 0x3e
 8005e38:	642a      	str	r2, [r5, #64]	; 0x40
 8005e3a:	f8a5 902a 	strh.w	r9, [r5, #42]	; 0x2a
 8005e3e:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005e40:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 8005e44:	62ea      	str	r2, [r5, #44]	; 0x2c
 8005e46:	852b      	strh	r3, [r5, #40]	; 0x28
 8005e48:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8005e4a:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8005e4e:	2b08      	cmp	r3, #8
 8005e50:	d006      	beq.n	8005e60 <HAL_I2C_Master_Transmit+0x94>
 8005e52:	2b01      	cmp	r3, #1
 8005e54:	d004      	beq.n	8005e60 <HAL_I2C_Master_Transmit+0x94>
 8005e56:	4293      	cmp	r3, r2
 8005e58:	d002      	beq.n	8005e60 <HAL_I2C_Master_Transmit+0x94>
 8005e5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8005e5c:	2b12      	cmp	r3, #18
 8005e5e:	d103      	bne.n	8005e68 <HAL_I2C_Master_Transmit+0x9c>
 8005e60:	6823      	ldr	r3, [r4, #0]
 8005e62:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e66:	6023      	str	r3, [r4, #0]
 8005e68:	1c7b      	adds	r3, r7, #1
 8005e6a:	d13e      	bne.n	8005eea <HAL_I2C_Master_Transmit+0x11e>
 8005e6c:	6963      	ldr	r3, [r4, #20]
 8005e6e:	07d8      	lsls	r0, r3, #31
 8005e70:	d5fc      	bpl.n	8005e6c <HAL_I2C_Master_Transmit+0xa0>
 8005e72:	692b      	ldr	r3, [r5, #16]
 8005e74:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005e78:	d14a      	bne.n	8005f10 <HAL_I2C_Master_Transmit+0x144>
 8005e7a:	f008 01fe 	and.w	r1, r8, #254	; 0xfe
 8005e7e:	6121      	str	r1, [r4, #16]
 8005e80:	1c78      	adds	r0, r7, #1
 8005e82:	d004      	beq.n	8005e8e <HAL_I2C_Master_Transmit+0xc2>
 8005e84:	e0dd      	b.n	8006042 <HAL_I2C_Master_Transmit+0x276>
 8005e86:	6963      	ldr	r3, [r4, #20]
 8005e88:	055a      	lsls	r2, r3, #21
 8005e8a:	f100 80c2 	bmi.w	8006012 <HAL_I2C_Master_Transmit+0x246>
 8005e8e:	6963      	ldr	r3, [r4, #20]
 8005e90:	0799      	lsls	r1, r3, #30
 8005e92:	d5f8      	bpl.n	8005e86 <HAL_I2C_Master_Transmit+0xba>
 8005e94:	2200      	movs	r2, #0
 8005e96:	9201      	str	r2, [sp, #4]
 8005e98:	6962      	ldr	r2, [r4, #20]
 8005e9a:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8005e9c:	9201      	str	r2, [sp, #4]
 8005e9e:	69a2      	ldr	r2, [r4, #24]
 8005ea0:	9201      	str	r2, [sp, #4]
 8005ea2:	9a01      	ldr	r2, [sp, #4]
 8005ea4:	2b00      	cmp	r3, #0
 8005ea6:	d075      	beq.n	8005f94 <HAL_I2C_Master_Transmit+0x1c8>
 8005ea8:	1c79      	adds	r1, r7, #1
 8005eaa:	f040 8081 	bne.w	8005fb0 <HAL_I2C_Master_Transmit+0x1e4>
 8005eae:	6963      	ldr	r3, [r4, #20]
 8005eb0:	061a      	lsls	r2, r3, #24
 8005eb2:	d441      	bmi.n	8005f38 <HAL_I2C_Master_Transmit+0x16c>
 8005eb4:	6963      	ldr	r3, [r4, #20]
 8005eb6:	055b      	lsls	r3, r3, #21
 8005eb8:	d5f9      	bpl.n	8005eae <HAL_I2C_Master_Transmit+0xe2>
 8005eba:	2200      	movs	r2, #0
 8005ebc:	2320      	movs	r3, #32
 8005ebe:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 8005ec2:	6161      	str	r1, [r4, #20]
 8005ec4:	632a      	str	r2, [r5, #48]	; 0x30
 8005ec6:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8005eca:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8005ece:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005ed0:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8005ed4:	f043 0304 	orr.w	r3, r3, #4
 8005ed8:	642b      	str	r3, [r5, #64]	; 0x40
 8005eda:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005edc:	2b04      	cmp	r3, #4
 8005ede:	f000 80e6 	beq.w	80060ae <HAL_I2C_Master_Transmit+0x2e2>
 8005ee2:	2001      	movs	r0, #1
 8005ee4:	b003      	add	sp, #12
 8005ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005eea:	6963      	ldr	r3, [r4, #20]
 8005eec:	07d9      	lsls	r1, r3, #31
 8005eee:	d4c0      	bmi.n	8005e72 <HAL_I2C_Master_Transmit+0xa6>
 8005ef0:	f7ff fb3e 	bl	8005570 <HAL_GetTick>
 8005ef4:	1b80      	subs	r0, r0, r6
 8005ef6:	4287      	cmp	r7, r0
 8005ef8:	f0c0 80b3 	bcc.w	8006062 <HAL_I2C_Master_Transmit+0x296>
 8005efc:	2f00      	cmp	r7, #0
 8005efe:	f000 80b0 	beq.w	8006062 <HAL_I2C_Master_Transmit+0x296>
 8005f02:	682c      	ldr	r4, [r5, #0]
 8005f04:	e7b0      	b.n	8005e68 <HAL_I2C_Master_Transmit+0x9c>
 8005f06:	6823      	ldr	r3, [r4, #0]
 8005f08:	f043 0301 	orr.w	r3, r3, #1
 8005f0c:	6023      	str	r3, [r4, #0]
 8005f0e:	e788      	b.n	8005e22 <HAL_I2C_Master_Transmit+0x56>
 8005f10:	ea4f 13e8 	mov.w	r3, r8, asr #7
 8005f14:	f003 0306 	and.w	r3, r3, #6
 8005f18:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8005f1c:	6123      	str	r3, [r4, #16]
 8005f1e:	1c7b      	adds	r3, r7, #1
 8005f20:	d003      	beq.n	8005f2a <HAL_I2C_Master_Transmit+0x15e>
 8005f22:	e0b5      	b.n	8006090 <HAL_I2C_Master_Transmit+0x2c4>
 8005f24:	6963      	ldr	r3, [r4, #20]
 8005f26:	0559      	lsls	r1, r3, #21
 8005f28:	d473      	bmi.n	8006012 <HAL_I2C_Master_Transmit+0x246>
 8005f2a:	6963      	ldr	r3, [r4, #20]
 8005f2c:	0718      	lsls	r0, r3, #28
 8005f2e:	d5f9      	bpl.n	8005f24 <HAL_I2C_Master_Transmit+0x158>
 8005f30:	fa5f f388 	uxtb.w	r3, r8
 8005f34:	6123      	str	r3, [r4, #16]
 8005f36:	e7a3      	b.n	8005e80 <HAL_I2C_Master_Transmit+0xb4>
 8005f38:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8005f3a:	f8b5 c028 	ldrh.w	ip, [r5, #40]	; 0x28
 8005f3e:	4601      	mov	r1, r0
 8005f40:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005f44:	f10c 32ff 	add.w	r2, ip, #4294967295
 8005f48:	6123      	str	r3, [r4, #16]
 8005f4a:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005f4c:	b292      	uxth	r2, r2
 8005f4e:	3b01      	subs	r3, #1
 8005f50:	b29b      	uxth	r3, r3
 8005f52:	856b      	strh	r3, [r5, #42]	; 0x2a
 8005f54:	6963      	ldr	r3, [r4, #20]
 8005f56:	6269      	str	r1, [r5, #36]	; 0x24
 8005f58:	0759      	lsls	r1, r3, #29
 8005f5a:	852a      	strh	r2, [r5, #40]	; 0x28
 8005f5c:	d50c      	bpl.n	8005f78 <HAL_I2C_Master_Transmit+0x1ac>
 8005f5e:	b15a      	cbz	r2, 8005f78 <HAL_I2C_Master_Transmit+0x1ac>
 8005f60:	7843      	ldrb	r3, [r0, #1]
 8005f62:	f1ac 0c02 	sub.w	ip, ip, #2
 8005f66:	6123      	str	r3, [r4, #16]
 8005f68:	8d6b      	ldrh	r3, [r5, #42]	; 0x2a
 8005f6a:	3002      	adds	r0, #2
 8005f6c:	3b01      	subs	r3, #1
 8005f6e:	b29b      	uxth	r3, r3
 8005f70:	f8a5 c028 	strh.w	ip, [r5, #40]	; 0x28
 8005f74:	6268      	str	r0, [r5, #36]	; 0x24
 8005f76:	856b      	strh	r3, [r5, #42]	; 0x2a
 8005f78:	1c78      	adds	r0, r7, #1
 8005f7a:	d129      	bne.n	8005fd0 <HAL_I2C_Master_Transmit+0x204>
 8005f7c:	6963      	ldr	r3, [r4, #20]
 8005f7e:	0759      	lsls	r1, r3, #29
 8005f80:	d405      	bmi.n	8005f8e <HAL_I2C_Master_Transmit+0x1c2>
 8005f82:	6963      	ldr	r3, [r4, #20]
 8005f84:	055a      	lsls	r2, r3, #21
 8005f86:	d498      	bmi.n	8005eba <HAL_I2C_Master_Transmit+0xee>
 8005f88:	6963      	ldr	r3, [r4, #20]
 8005f8a:	0759      	lsls	r1, r3, #29
 8005f8c:	d5f9      	bpl.n	8005f82 <HAL_I2C_Master_Transmit+0x1b6>
 8005f8e:	8d2b      	ldrh	r3, [r5, #40]	; 0x28
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	d189      	bne.n	8005ea8 <HAL_I2C_Master_Transmit+0xdc>
 8005f94:	2300      	movs	r3, #0
 8005f96:	2120      	movs	r1, #32
 8005f98:	6822      	ldr	r2, [r4, #0]
 8005f9a:	4618      	mov	r0, r3
 8005f9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005fa0:	6022      	str	r2, [r4, #0]
 8005fa2:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 8005fa6:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
 8005faa:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
 8005fae:	e71c      	b.n	8005dea <HAL_I2C_Master_Transmit+0x1e>
 8005fb0:	6963      	ldr	r3, [r4, #20]
 8005fb2:	0618      	lsls	r0, r3, #24
 8005fb4:	d4c0      	bmi.n	8005f38 <HAL_I2C_Master_Transmit+0x16c>
 8005fb6:	6963      	ldr	r3, [r4, #20]
 8005fb8:	0558      	lsls	r0, r3, #21
 8005fba:	f53f af7e 	bmi.w	8005eba <HAL_I2C_Master_Transmit+0xee>
 8005fbe:	f7ff fad7 	bl	8005570 <HAL_GetTick>
 8005fc2:	1b80      	subs	r0, r0, r6
 8005fc4:	4287      	cmp	r7, r0
 8005fc6:	d379      	bcc.n	80060bc <HAL_I2C_Master_Transmit+0x2f0>
 8005fc8:	2f00      	cmp	r7, #0
 8005fca:	d077      	beq.n	80060bc <HAL_I2C_Master_Transmit+0x2f0>
 8005fcc:	682c      	ldr	r4, [r5, #0]
 8005fce:	e76b      	b.n	8005ea8 <HAL_I2C_Master_Transmit+0xdc>
 8005fd0:	6963      	ldr	r3, [r4, #20]
 8005fd2:	075b      	lsls	r3, r3, #29
 8005fd4:	d4db      	bmi.n	8005f8e <HAL_I2C_Master_Transmit+0x1c2>
 8005fd6:	6963      	ldr	r3, [r4, #20]
 8005fd8:	055b      	lsls	r3, r3, #21
 8005fda:	f53f af6e 	bmi.w	8005eba <HAL_I2C_Master_Transmit+0xee>
 8005fde:	f7ff fac7 	bl	8005570 <HAL_GetTick>
 8005fe2:	1b80      	subs	r0, r0, r6
 8005fe4:	4287      	cmp	r7, r0
 8005fe6:	d369      	bcc.n	80060bc <HAL_I2C_Master_Transmit+0x2f0>
 8005fe8:	2f00      	cmp	r7, #0
 8005fea:	d067      	beq.n	80060bc <HAL_I2C_Master_Transmit+0x2f0>
 8005fec:	682c      	ldr	r4, [r5, #0]
 8005fee:	e7c3      	b.n	8005f78 <HAL_I2C_Master_Transmit+0x1ac>
 8005ff0:	2320      	movs	r3, #32
 8005ff2:	2002      	movs	r0, #2
 8005ff4:	f8c5 b030 	str.w	fp, [r5, #48]	; 0x30
 8005ff8:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 8005ffc:	f885 b03e 	strb.w	fp, [r5, #62]	; 0x3e
 8006000:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006002:	f885 b03c 	strb.w	fp, [r5, #60]	; 0x3c
 8006006:	f043 0320 	orr.w	r3, r3, #32
 800600a:	642b      	str	r3, [r5, #64]	; 0x40
 800600c:	b003      	add	sp, #12
 800600e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006012:	2200      	movs	r2, #0
 8006014:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 8006018:	2120      	movs	r1, #32
 800601a:	2001      	movs	r0, #1
 800601c:	6823      	ldr	r3, [r4, #0]
 800601e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006022:	6023      	str	r3, [r4, #0]
 8006024:	6166      	str	r6, [r4, #20]
 8006026:	632a      	str	r2, [r5, #48]	; 0x30
 8006028:	f885 103d 	strb.w	r1, [r5, #61]	; 0x3d
 800602c:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006030:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006032:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 8006036:	f043 0304 	orr.w	r3, r3, #4
 800603a:	642b      	str	r3, [r5, #64]	; 0x40
 800603c:	b003      	add	sp, #12
 800603e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006042:	6963      	ldr	r3, [r4, #20]
 8006044:	079b      	lsls	r3, r3, #30
 8006046:	f53f af25 	bmi.w	8005e94 <HAL_I2C_Master_Transmit+0xc8>
 800604a:	6963      	ldr	r3, [r4, #20]
 800604c:	055b      	lsls	r3, r3, #21
 800604e:	d4e0      	bmi.n	8006012 <HAL_I2C_Master_Transmit+0x246>
 8006050:	f7ff fa8e 	bl	8005570 <HAL_GetTick>
 8006054:	1b80      	subs	r0, r0, r6
 8006056:	4287      	cmp	r7, r0
 8006058:	d33e      	bcc.n	80060d8 <HAL_I2C_Master_Transmit+0x30c>
 800605a:	2f00      	cmp	r7, #0
 800605c:	d03c      	beq.n	80060d8 <HAL_I2C_Master_Transmit+0x30c>
 800605e:	682c      	ldr	r4, [r5, #0]
 8006060:	e70e      	b.n	8005e80 <HAL_I2C_Master_Transmit+0xb4>
 8006062:	2200      	movs	r2, #0
 8006064:	2320      	movs	r3, #32
 8006066:	632a      	str	r2, [r5, #48]	; 0x30
 8006068:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 800606c:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 8006070:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8006072:	6829      	ldr	r1, [r5, #0]
 8006074:	f043 0320 	orr.w	r3, r3, #32
 8006078:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 800607c:	642b      	str	r3, [r5, #64]	; 0x40
 800607e:	680b      	ldr	r3, [r1, #0]
 8006080:	05da      	lsls	r2, r3, #23
 8006082:	f57f af2e 	bpl.w	8005ee2 <HAL_I2C_Master_Transmit+0x116>
 8006086:	f44f 7300 	mov.w	r3, #512	; 0x200
 800608a:	2001      	movs	r0, #1
 800608c:	642b      	str	r3, [r5, #64]	; 0x40
 800608e:	e6ac      	b.n	8005dea <HAL_I2C_Master_Transmit+0x1e>
 8006090:	6963      	ldr	r3, [r4, #20]
 8006092:	071a      	lsls	r2, r3, #28
 8006094:	f53f af4c 	bmi.w	8005f30 <HAL_I2C_Master_Transmit+0x164>
 8006098:	6963      	ldr	r3, [r4, #20]
 800609a:	055a      	lsls	r2, r3, #21
 800609c:	d4b9      	bmi.n	8006012 <HAL_I2C_Master_Transmit+0x246>
 800609e:	f7ff fa67 	bl	8005570 <HAL_GetTick>
 80060a2:	1b83      	subs	r3, r0, r6
 80060a4:	429f      	cmp	r7, r3
 80060a6:	d317      	bcc.n	80060d8 <HAL_I2C_Master_Transmit+0x30c>
 80060a8:	b1b7      	cbz	r7, 80060d8 <HAL_I2C_Master_Transmit+0x30c>
 80060aa:	682c      	ldr	r4, [r5, #0]
 80060ac:	e737      	b.n	8005f1e <HAL_I2C_Master_Transmit+0x152>
 80060ae:	682a      	ldr	r2, [r5, #0]
 80060b0:	2001      	movs	r0, #1
 80060b2:	6813      	ldr	r3, [r2, #0]
 80060b4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80060b8:	6013      	str	r3, [r2, #0]
 80060ba:	e696      	b.n	8005dea <HAL_I2C_Master_Transmit+0x1e>
 80060bc:	2200      	movs	r2, #0
 80060be:	2320      	movs	r3, #32
 80060c0:	632a      	str	r2, [r5, #48]	; 0x30
 80060c2:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80060c6:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80060ca:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80060cc:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80060d0:	f043 0320 	orr.w	r3, r3, #32
 80060d4:	642b      	str	r3, [r5, #64]	; 0x40
 80060d6:	e700      	b.n	8005eda <HAL_I2C_Master_Transmit+0x10e>
 80060d8:	2200      	movs	r2, #0
 80060da:	2320      	movs	r3, #32
 80060dc:	632a      	str	r2, [r5, #48]	; 0x30
 80060de:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
 80060e2:	f885 203e 	strb.w	r2, [r5, #62]	; 0x3e
 80060e6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80060e8:	2001      	movs	r0, #1
 80060ea:	f043 0320 	orr.w	r3, r3, #32
 80060ee:	f885 203c 	strb.w	r2, [r5, #60]	; 0x3c
 80060f2:	642b      	str	r3, [r5, #64]	; 0x40
 80060f4:	e679      	b.n	8005dea <HAL_I2C_Master_Transmit+0x1e>
 80060f6:	bf00      	nop

080060f8 <HAL_I2C_Master_Receive>:
 80060f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80060fc:	4604      	mov	r4, r0
 80060fe:	b086      	sub	sp, #24
 8006100:	4698      	mov	r8, r3
 8006102:	460f      	mov	r7, r1
 8006104:	4691      	mov	r9, r2
 8006106:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8006108:	f7ff fa32 	bl	8005570 <HAL_GetTick>
 800610c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006110:	2b20      	cmp	r3, #32
 8006112:	d003      	beq.n	800611c <HAL_I2C_Master_Receive+0x24>
 8006114:	2002      	movs	r0, #2
 8006116:	b006      	add	sp, #24
 8006118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800611c:	4606      	mov	r6, r0
 800611e:	e005      	b.n	800612c <HAL_I2C_Master_Receive+0x34>
 8006120:	f7ff fa26 	bl	8005570 <HAL_GetTick>
 8006124:	1b80      	subs	r0, r0, r6
 8006126:	2819      	cmp	r0, #25
 8006128:	f200 80a9 	bhi.w	800627e <HAL_I2C_Master_Receive+0x186>
 800612c:	6823      	ldr	r3, [r4, #0]
 800612e:	6998      	ldr	r0, [r3, #24]
 8006130:	43c0      	mvns	r0, r0
 8006132:	f010 0a02 	ands.w	sl, r0, #2
 8006136:	d0f3      	beq.n	8006120 <HAL_I2C_Master_Receive+0x28>
 8006138:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 800613c:	2a01      	cmp	r2, #1
 800613e:	d0e9      	beq.n	8006114 <HAL_I2C_Master_Receive+0x1c>
 8006140:	2201      	movs	r2, #1
 8006142:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006146:	681a      	ldr	r2, [r3, #0]
 8006148:	07d2      	lsls	r2, r2, #31
 800614a:	d563      	bpl.n	8006214 <HAL_I2C_Master_Receive+0x11c>
 800614c:	2100      	movs	r1, #0
 800614e:	f04f 0c22 	mov.w	ip, #34	; 0x22
 8006152:	2010      	movs	r0, #16
 8006154:	681a      	ldr	r2, [r3, #0]
 8006156:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800615a:	601a      	str	r2, [r3, #0]
 800615c:	f884 c03d 	strb.w	ip, [r4, #61]	; 0x3d
 8006160:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
 8006164:	6421      	str	r1, [r4, #64]	; 0x40
 8006166:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
 800616a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800616c:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006170:	62e1      	str	r1, [r4, #44]	; 0x2c
 8006172:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006174:	8522      	strh	r2, [r4, #40]	; 0x28
 8006176:	681a      	ldr	r2, [r3, #0]
 8006178:	2908      	cmp	r1, #8
 800617a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800617e:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8006182:	601a      	str	r2, [r3, #0]
 8006184:	d007      	beq.n	8006196 <HAL_I2C_Master_Receive+0x9e>
 8006186:	2901      	cmp	r1, #1
 8006188:	d005      	beq.n	8006196 <HAL_I2C_Master_Receive+0x9e>
 800618a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800618e:	d002      	beq.n	8006196 <HAL_I2C_Master_Receive+0x9e>
 8006190:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006192:	2a11      	cmp	r2, #17
 8006194:	d103      	bne.n	800619e <HAL_I2C_Master_Receive+0xa6>
 8006196:	681a      	ldr	r2, [r3, #0]
 8006198:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800619c:	601a      	str	r2, [r3, #0]
 800619e:	1c69      	adds	r1, r5, #1
 80061a0:	d12a      	bne.n	80061f8 <HAL_I2C_Master_Receive+0x100>
 80061a2:	695a      	ldr	r2, [r3, #20]
 80061a4:	07d2      	lsls	r2, r2, #31
 80061a6:	d5fc      	bpl.n	80061a2 <HAL_I2C_Master_Receive+0xaa>
 80061a8:	6922      	ldr	r2, [r4, #16]
 80061aa:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 80061ae:	d136      	bne.n	800621e <HAL_I2C_Master_Receive+0x126>
 80061b0:	f047 0201 	orr.w	r2, r7, #1
 80061b4:	b2d2      	uxtb	r2, r2
 80061b6:	611a      	str	r2, [r3, #16]
 80061b8:	1c68      	adds	r0, r5, #1
 80061ba:	d003      	beq.n	80061c4 <HAL_I2C_Master_Receive+0xcc>
 80061bc:	e109      	b.n	80063d2 <HAL_I2C_Master_Receive+0x2da>
 80061be:	695a      	ldr	r2, [r3, #20]
 80061c0:	0552      	lsls	r2, r2, #21
 80061c2:	d46d      	bmi.n	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 80061c4:	695a      	ldr	r2, [r3, #20]
 80061c6:	0791      	lsls	r1, r2, #30
 80061c8:	d5f9      	bpl.n	80061be <HAL_I2C_Master_Receive+0xc6>
 80061ca:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80061cc:	2a00      	cmp	r2, #0
 80061ce:	d17f      	bne.n	80062d0 <HAL_I2C_Master_Receive+0x1d8>
 80061d0:	9201      	str	r2, [sp, #4]
 80061d2:	695a      	ldr	r2, [r3, #20]
 80061d4:	9201      	str	r2, [sp, #4]
 80061d6:	699a      	ldr	r2, [r3, #24]
 80061d8:	9201      	str	r2, [sp, #4]
 80061da:	9a01      	ldr	r2, [sp, #4]
 80061dc:	681a      	ldr	r2, [r3, #0]
 80061de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061e2:	601a      	str	r2, [r3, #0]
 80061e4:	2300      	movs	r3, #0
 80061e6:	2220      	movs	r2, #32
 80061e8:	4618      	mov	r0, r3
 80061ea:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 80061ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80061f2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80061f6:	e78e      	b.n	8006116 <HAL_I2C_Master_Receive+0x1e>
 80061f8:	695a      	ldr	r2, [r3, #20]
 80061fa:	07d0      	lsls	r0, r2, #31
 80061fc:	d4d4      	bmi.n	80061a8 <HAL_I2C_Master_Receive+0xb0>
 80061fe:	f7ff f9b7 	bl	8005570 <HAL_GetTick>
 8006202:	1b83      	subs	r3, r0, r6
 8006204:	429d      	cmp	r5, r3
 8006206:	f0c0 810e 	bcc.w	8006426 <HAL_I2C_Master_Receive+0x32e>
 800620a:	2d00      	cmp	r5, #0
 800620c:	f000 810b 	beq.w	8006426 <HAL_I2C_Master_Receive+0x32e>
 8006210:	6823      	ldr	r3, [r4, #0]
 8006212:	e7c4      	b.n	800619e <HAL_I2C_Master_Receive+0xa6>
 8006214:	681a      	ldr	r2, [r3, #0]
 8006216:	f042 0201 	orr.w	r2, r2, #1
 800621a:	601a      	str	r2, [r3, #0]
 800621c:	e796      	b.n	800614c <HAL_I2C_Master_Receive+0x54>
 800621e:	ea4f 18e7 	mov.w	r8, r7, asr #7
 8006222:	f008 0806 	and.w	r8, r8, #6
 8006226:	f048 02f0 	orr.w	r2, r8, #240	; 0xf0
 800622a:	611a      	str	r2, [r3, #16]
 800622c:	1c6a      	adds	r2, r5, #1
 800622e:	d003      	beq.n	8006238 <HAL_I2C_Master_Receive+0x140>
 8006230:	e10f      	b.n	8006452 <HAL_I2C_Master_Receive+0x35a>
 8006232:	695a      	ldr	r2, [r3, #20]
 8006234:	0551      	lsls	r1, r2, #21
 8006236:	d433      	bmi.n	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 8006238:	695a      	ldr	r2, [r3, #20]
 800623a:	0710      	lsls	r0, r2, #28
 800623c:	d5f9      	bpl.n	8006232 <HAL_I2C_Master_Receive+0x13a>
 800623e:	b2ff      	uxtb	r7, r7
 8006240:	611f      	str	r7, [r3, #16]
 8006242:	1c68      	adds	r0, r5, #1
 8006244:	d003      	beq.n	800624e <HAL_I2C_Master_Receive+0x156>
 8006246:	e1a8      	b.n	800659a <HAL_I2C_Master_Receive+0x4a2>
 8006248:	695a      	ldr	r2, [r3, #20]
 800624a:	0552      	lsls	r2, r2, #21
 800624c:	d428      	bmi.n	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 800624e:	695a      	ldr	r2, [r3, #20]
 8006250:	0791      	lsls	r1, r2, #30
 8006252:	d5f9      	bpl.n	8006248 <HAL_I2C_Master_Receive+0x150>
 8006254:	2200      	movs	r2, #0
 8006256:	9205      	str	r2, [sp, #20]
 8006258:	695a      	ldr	r2, [r3, #20]
 800625a:	9205      	str	r2, [sp, #20]
 800625c:	699a      	ldr	r2, [r3, #24]
 800625e:	9205      	str	r2, [sp, #20]
 8006260:	9a05      	ldr	r2, [sp, #20]
 8006262:	681a      	ldr	r2, [r3, #0]
 8006264:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006268:	601a      	str	r2, [r3, #0]
 800626a:	1c68      	adds	r0, r5, #1
 800626c:	f040 81a8 	bne.w	80065c0 <HAL_I2C_Master_Receive+0x4c8>
 8006270:	695a      	ldr	r2, [r3, #20]
 8006272:	07d1      	lsls	r1, r2, #31
 8006274:	d5fc      	bpl.n	8006270 <HAL_I2C_Master_Receive+0x178>
 8006276:	f048 02f1 	orr.w	r2, r8, #241	; 0xf1
 800627a:	611a      	str	r2, [r3, #16]
 800627c:	e79c      	b.n	80061b8 <HAL_I2C_Master_Receive+0xc0>
 800627e:	2320      	movs	r3, #32
 8006280:	2002      	movs	r0, #2
 8006282:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8006286:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800628a:	f884 a03e 	strb.w	sl, [r4, #62]	; 0x3e
 800628e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006290:	f884 a03c 	strb.w	sl, [r4, #60]	; 0x3c
 8006294:	f043 0320 	orr.w	r3, r3, #32
 8006298:	6423      	str	r3, [r4, #64]	; 0x40
 800629a:	b006      	add	sp, #24
 800629c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80062a0:	2200      	movs	r2, #0
 80062a2:	f46f 6680 	mvn.w	r6, #1024	; 0x400
 80062a6:	2520      	movs	r5, #32
 80062a8:	2001      	movs	r0, #1
 80062aa:	6819      	ldr	r1, [r3, #0]
 80062ac:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80062b0:	6019      	str	r1, [r3, #0]
 80062b2:	615e      	str	r6, [r3, #20]
 80062b4:	6322      	str	r2, [r4, #48]	; 0x30
 80062b6:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
 80062ba:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 80062be:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80062c0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 80062c4:	f043 0304 	orr.w	r3, r3, #4
 80062c8:	6423      	str	r3, [r4, #64]	; 0x40
 80062ca:	b006      	add	sp, #24
 80062cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80062d0:	2a01      	cmp	r2, #1
 80062d2:	f04f 0000 	mov.w	r0, #0
 80062d6:	6819      	ldr	r1, [r3, #0]
 80062d8:	f000 8151 	beq.w	800657e <HAL_I2C_Master_Receive+0x486>
 80062dc:	2a02      	cmp	r2, #2
 80062de:	f000 80fb 	beq.w	80064d8 <HAL_I2C_Master_Receive+0x3e0>
 80062e2:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 80062e6:	6019      	str	r1, [r3, #0]
 80062e8:	9004      	str	r0, [sp, #16]
 80062ea:	6959      	ldr	r1, [r3, #20]
 80062ec:	9104      	str	r1, [sp, #16]
 80062ee:	6999      	ldr	r1, [r3, #24]
 80062f0:	9104      	str	r1, [sp, #16]
 80062f2:	9904      	ldr	r1, [sp, #16]
 80062f4:	2a03      	cmp	r2, #3
 80062f6:	d848      	bhi.n	800638a <HAL_I2C_Master_Receive+0x292>
 80062f8:	2a01      	cmp	r2, #1
 80062fa:	f000 8118 	beq.w	800652e <HAL_I2C_Master_Receive+0x436>
 80062fe:	2a02      	cmp	r2, #2
 8006300:	f000 80c3 	beq.w	800648a <HAL_I2C_Master_Receive+0x392>
 8006304:	1c68      	adds	r0, r5, #1
 8006306:	f040 80f5 	bne.w	80064f4 <HAL_I2C_Master_Receive+0x3fc>
 800630a:	695a      	ldr	r2, [r3, #20]
 800630c:	0751      	lsls	r1, r2, #29
 800630e:	d5fc      	bpl.n	800630a <HAL_I2C_Master_Receive+0x212>
 8006310:	681a      	ldr	r2, [r3, #0]
 8006312:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006314:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006318:	601a      	str	r2, [r3, #0]
 800631a:	691b      	ldr	r3, [r3, #16]
 800631c:	700b      	strb	r3, [r1, #0]
 800631e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006320:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006322:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006324:	3b01      	subs	r3, #1
 8006326:	3101      	adds	r1, #1
 8006328:	3a01      	subs	r2, #1
 800632a:	b29b      	uxth	r3, r3
 800632c:	6261      	str	r1, [r4, #36]	; 0x24
 800632e:	8522      	strh	r2, [r4, #40]	; 0x28
 8006330:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006332:	1c6b      	adds	r3, r5, #1
 8006334:	6822      	ldr	r2, [r4, #0]
 8006336:	f040 80ec 	bne.w	8006512 <HAL_I2C_Master_Receive+0x41a>
 800633a:	6953      	ldr	r3, [r2, #20]
 800633c:	075f      	lsls	r7, r3, #29
 800633e:	d5fc      	bpl.n	800633a <HAL_I2C_Master_Receive+0x242>
 8006340:	6813      	ldr	r3, [r2, #0]
 8006342:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006344:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006348:	6013      	str	r3, [r2, #0]
 800634a:	6913      	ldr	r3, [r2, #16]
 800634c:	700b      	strb	r3, [r1, #0]
 800634e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006350:	6821      	ldr	r1, [r4, #0]
 8006352:	3b01      	subs	r3, #1
 8006354:	b29b      	uxth	r3, r3
 8006356:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006358:	8563      	strh	r3, [r4, #42]	; 0x2a
 800635a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800635c:	6909      	ldr	r1, [r1, #16]
 800635e:	1e53      	subs	r3, r2, #1
 8006360:	1c47      	adds	r7, r0, #1
 8006362:	8523      	strh	r3, [r4, #40]	; 0x28
 8006364:	6267      	str	r7, [r4, #36]	; 0x24
 8006366:	7041      	strb	r1, [r0, #1]
 8006368:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800636a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800636c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800636e:	3a01      	subs	r2, #1
 8006370:	3b01      	subs	r3, #1
 8006372:	3101      	adds	r1, #1
 8006374:	b292      	uxth	r2, r2
 8006376:	b29b      	uxth	r3, r3
 8006378:	6261      	str	r1, [r4, #36]	; 0x24
 800637a:	8522      	strh	r2, [r4, #40]	; 0x28
 800637c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800637e:	2a00      	cmp	r2, #0
 8006380:	f43f af30 	beq.w	80061e4 <HAL_I2C_Master_Receive+0xec>
 8006384:	2a03      	cmp	r2, #3
 8006386:	6823      	ldr	r3, [r4, #0]
 8006388:	d9b6      	bls.n	80062f8 <HAL_I2C_Master_Receive+0x200>
 800638a:	b955      	cbnz	r5, 80063a2 <HAL_I2C_Master_Receive+0x2aa>
 800638c:	e031      	b.n	80063f2 <HAL_I2C_Master_Receive+0x2fa>
 800638e:	695a      	ldr	r2, [r3, #20]
 8006390:	06d1      	lsls	r1, r2, #27
 8006392:	f100 80df 	bmi.w	8006554 <HAL_I2C_Master_Receive+0x45c>
 8006396:	f7ff f8eb 	bl	8005570 <HAL_GetTick>
 800639a:	1b80      	subs	r0, r0, r6
 800639c:	4285      	cmp	r5, r0
 800639e:	d331      	bcc.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	695a      	ldr	r2, [r3, #20]
 80063a4:	0650      	lsls	r0, r2, #25
 80063a6:	d5f2      	bpl.n	800638e <HAL_I2C_Master_Receive+0x296>
 80063a8:	691a      	ldr	r2, [r3, #16]
 80063aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063ac:	701a      	strb	r2, [r3, #0]
 80063ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80063b0:	6820      	ldr	r0, [r4, #0]
 80063b2:	3b01      	subs	r3, #1
 80063b4:	b29b      	uxth	r3, r3
 80063b6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80063b8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80063ba:	6943      	ldr	r3, [r0, #20]
 80063bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80063be:	3a01      	subs	r2, #1
 80063c0:	1c4f      	adds	r7, r1, #1
 80063c2:	b292      	uxth	r2, r2
 80063c4:	075b      	lsls	r3, r3, #29
 80063c6:	6267      	str	r7, [r4, #36]	; 0x24
 80063c8:	8522      	strh	r2, [r4, #40]	; 0x28
 80063ca:	d5d8      	bpl.n	800637e <HAL_I2C_Master_Receive+0x286>
 80063cc:	6903      	ldr	r3, [r0, #16]
 80063ce:	704b      	strb	r3, [r1, #1]
 80063d0:	e074      	b.n	80064bc <HAL_I2C_Master_Receive+0x3c4>
 80063d2:	695a      	ldr	r2, [r3, #20]
 80063d4:	0797      	lsls	r7, r2, #30
 80063d6:	f53f aef8 	bmi.w	80061ca <HAL_I2C_Master_Receive+0xd2>
 80063da:	695a      	ldr	r2, [r3, #20]
 80063dc:	0557      	lsls	r7, r2, #21
 80063de:	f53f af5f 	bmi.w	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 80063e2:	f7ff f8c5 	bl	8005570 <HAL_GetTick>
 80063e6:	1b83      	subs	r3, r0, r6
 80063e8:	429d      	cmp	r5, r3
 80063ea:	d30b      	bcc.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 80063ec:	b155      	cbz	r5, 8006404 <HAL_I2C_Master_Receive+0x30c>
 80063ee:	6823      	ldr	r3, [r4, #0]
 80063f0:	e6e2      	b.n	80061b8 <HAL_I2C_Master_Receive+0xc0>
 80063f2:	695a      	ldr	r2, [r3, #20]
 80063f4:	0652      	lsls	r2, r2, #25
 80063f6:	d4d7      	bmi.n	80063a8 <HAL_I2C_Master_Receive+0x2b0>
 80063f8:	695a      	ldr	r2, [r3, #20]
 80063fa:	06d1      	lsls	r1, r2, #27
 80063fc:	f100 80aa 	bmi.w	8006554 <HAL_I2C_Master_Receive+0x45c>
 8006400:	f7ff f8b6 	bl	8005570 <HAL_GetTick>
 8006404:	2200      	movs	r2, #0
 8006406:	2320      	movs	r3, #32
 8006408:	2001      	movs	r0, #1
 800640a:	6322      	str	r2, [r4, #48]	; 0x30
 800640c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006410:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006414:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006416:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 800641a:	f043 0320 	orr.w	r3, r3, #32
 800641e:	6423      	str	r3, [r4, #64]	; 0x40
 8006420:	b006      	add	sp, #24
 8006422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006426:	2200      	movs	r2, #0
 8006428:	2320      	movs	r3, #32
 800642a:	6322      	str	r2, [r4, #48]	; 0x30
 800642c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006430:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006434:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006436:	6821      	ldr	r1, [r4, #0]
 8006438:	f043 0320 	orr.w	r3, r3, #32
 800643c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006440:	6423      	str	r3, [r4, #64]	; 0x40
 8006442:	680b      	ldr	r3, [r1, #0]
 8006444:	05d8      	lsls	r0, r3, #23
 8006446:	d545      	bpl.n	80064d4 <HAL_I2C_Master_Receive+0x3dc>
 8006448:	f44f 7300 	mov.w	r3, #512	; 0x200
 800644c:	2001      	movs	r0, #1
 800644e:	6423      	str	r3, [r4, #64]	; 0x40
 8006450:	e661      	b.n	8006116 <HAL_I2C_Master_Receive+0x1e>
 8006452:	695a      	ldr	r2, [r3, #20]
 8006454:	0712      	lsls	r2, r2, #28
 8006456:	f53f aef2 	bmi.w	800623e <HAL_I2C_Master_Receive+0x146>
 800645a:	695a      	ldr	r2, [r3, #20]
 800645c:	0551      	lsls	r1, r2, #21
 800645e:	f53f af1f 	bmi.w	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 8006462:	f7ff f885 	bl	8005570 <HAL_GetTick>
 8006466:	1b83      	subs	r3, r0, r6
 8006468:	429d      	cmp	r5, r3
 800646a:	d3cb      	bcc.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 800646c:	2d00      	cmp	r5, #0
 800646e:	d0c9      	beq.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006470:	6823      	ldr	r3, [r4, #0]
 8006472:	e6db      	b.n	800622c <HAL_I2C_Master_Receive+0x134>
 8006474:	695a      	ldr	r2, [r3, #20]
 8006476:	0757      	lsls	r7, r2, #29
 8006478:	d40c      	bmi.n	8006494 <HAL_I2C_Master_Receive+0x39c>
 800647a:	f7ff f879 	bl	8005570 <HAL_GetTick>
 800647e:	1b80      	subs	r0, r0, r6
 8006480:	4285      	cmp	r5, r0
 8006482:	d3bf      	bcc.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006484:	2d00      	cmp	r5, #0
 8006486:	d0bd      	beq.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006488:	6823      	ldr	r3, [r4, #0]
 800648a:	1c69      	adds	r1, r5, #1
 800648c:	d1f2      	bne.n	8006474 <HAL_I2C_Master_Receive+0x37c>
 800648e:	695a      	ldr	r2, [r3, #20]
 8006490:	0752      	lsls	r2, r2, #29
 8006492:	d5fc      	bpl.n	800648e <HAL_I2C_Master_Receive+0x396>
 8006494:	681a      	ldr	r2, [r3, #0]
 8006496:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800649a:	601a      	str	r2, [r3, #0]
 800649c:	691a      	ldr	r2, [r3, #16]
 800649e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064a0:	701a      	strb	r2, [r3, #0]
 80064a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80064a4:	1c53      	adds	r3, r2, #1
 80064a6:	6263      	str	r3, [r4, #36]	; 0x24
 80064a8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80064aa:	3b01      	subs	r3, #1
 80064ac:	8523      	strh	r3, [r4, #40]	; 0x28
 80064ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80064b0:	3b01      	subs	r3, #1
 80064b2:	b29b      	uxth	r3, r3
 80064b4:	8563      	strh	r3, [r4, #42]	; 0x2a
 80064b6:	6823      	ldr	r3, [r4, #0]
 80064b8:	691b      	ldr	r3, [r3, #16]
 80064ba:	7053      	strb	r3, [r2, #1]
 80064bc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80064be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80064c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80064c2:	3a01      	subs	r2, #1
 80064c4:	3b01      	subs	r3, #1
 80064c6:	3101      	adds	r1, #1
 80064c8:	b292      	uxth	r2, r2
 80064ca:	b29b      	uxth	r3, r3
 80064cc:	6261      	str	r1, [r4, #36]	; 0x24
 80064ce:	8563      	strh	r3, [r4, #42]	; 0x2a
 80064d0:	8522      	strh	r2, [r4, #40]	; 0x28
 80064d2:	e754      	b.n	800637e <HAL_I2C_Master_Receive+0x286>
 80064d4:	2001      	movs	r0, #1
 80064d6:	e61e      	b.n	8006116 <HAL_I2C_Master_Receive+0x1e>
 80064d8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80064dc:	6019      	str	r1, [r3, #0]
 80064de:	6819      	ldr	r1, [r3, #0]
 80064e0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80064e4:	6019      	str	r1, [r3, #0]
 80064e6:	9003      	str	r0, [sp, #12]
 80064e8:	6959      	ldr	r1, [r3, #20]
 80064ea:	9103      	str	r1, [sp, #12]
 80064ec:	6999      	ldr	r1, [r3, #24]
 80064ee:	9103      	str	r1, [sp, #12]
 80064f0:	9903      	ldr	r1, [sp, #12]
 80064f2:	e6ff      	b.n	80062f4 <HAL_I2C_Master_Receive+0x1fc>
 80064f4:	695a      	ldr	r2, [r3, #20]
 80064f6:	0752      	lsls	r2, r2, #29
 80064f8:	f53f af0a 	bmi.w	8006310 <HAL_I2C_Master_Receive+0x218>
 80064fc:	f7ff f838 	bl	8005570 <HAL_GetTick>
 8006500:	1b80      	subs	r0, r0, r6
 8006502:	4285      	cmp	r5, r0
 8006504:	f4ff af7e 	bcc.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006508:	2d00      	cmp	r5, #0
 800650a:	f43f af7b 	beq.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 800650e:	6823      	ldr	r3, [r4, #0]
 8006510:	e6f8      	b.n	8006304 <HAL_I2C_Master_Receive+0x20c>
 8006512:	6953      	ldr	r3, [r2, #20]
 8006514:	0758      	lsls	r0, r3, #29
 8006516:	f53f af13 	bmi.w	8006340 <HAL_I2C_Master_Receive+0x248>
 800651a:	f7ff f829 	bl	8005570 <HAL_GetTick>
 800651e:	1b80      	subs	r0, r0, r6
 8006520:	4285      	cmp	r5, r0
 8006522:	f4ff af6f 	bcc.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006526:	2d00      	cmp	r5, #0
 8006528:	f47f af03 	bne.w	8006332 <HAL_I2C_Master_Receive+0x23a>
 800652c:	e76a      	b.n	8006404 <HAL_I2C_Master_Receive+0x30c>
 800652e:	b955      	cbnz	r5, 8006546 <HAL_I2C_Master_Receive+0x44e>
 8006530:	e020      	b.n	8006574 <HAL_I2C_Master_Receive+0x47c>
 8006532:	695a      	ldr	r2, [r3, #20]
 8006534:	06d7      	lsls	r7, r2, #27
 8006536:	d40d      	bmi.n	8006554 <HAL_I2C_Master_Receive+0x45c>
 8006538:	f7ff f81a 	bl	8005570 <HAL_GetTick>
 800653c:	1b80      	subs	r0, r0, r6
 800653e:	4285      	cmp	r5, r0
 8006540:	f4ff af60 	bcc.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 8006544:	6823      	ldr	r3, [r4, #0]
 8006546:	695a      	ldr	r2, [r3, #20]
 8006548:	0652      	lsls	r2, r2, #25
 800654a:	d5f2      	bpl.n	8006532 <HAL_I2C_Master_Receive+0x43a>
 800654c:	691a      	ldr	r2, [r3, #16]
 800654e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006550:	701a      	strb	r2, [r3, #0]
 8006552:	e7b3      	b.n	80064bc <HAL_I2C_Master_Receive+0x3c4>
 8006554:	2200      	movs	r2, #0
 8006556:	f06f 0510 	mvn.w	r5, #16
 800655a:	2120      	movs	r1, #32
 800655c:	615d      	str	r5, [r3, #20]
 800655e:	6322      	str	r2, [r4, #48]	; 0x30
 8006560:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8006564:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8006568:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800656a:	2001      	movs	r0, #1
 800656c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
 8006570:	6423      	str	r3, [r4, #64]	; 0x40
 8006572:	e5d0      	b.n	8006116 <HAL_I2C_Master_Receive+0x1e>
 8006574:	695a      	ldr	r2, [r3, #20]
 8006576:	0650      	lsls	r0, r2, #25
 8006578:	f57f af3e 	bpl.w	80063f8 <HAL_I2C_Master_Receive+0x300>
 800657c:	e7e6      	b.n	800654c <HAL_I2C_Master_Receive+0x454>
 800657e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8006582:	6019      	str	r1, [r3, #0]
 8006584:	9002      	str	r0, [sp, #8]
 8006586:	6959      	ldr	r1, [r3, #20]
 8006588:	9102      	str	r1, [sp, #8]
 800658a:	6999      	ldr	r1, [r3, #24]
 800658c:	9102      	str	r1, [sp, #8]
 800658e:	9902      	ldr	r1, [sp, #8]
 8006590:	6819      	ldr	r1, [r3, #0]
 8006592:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8006596:	6019      	str	r1, [r3, #0]
 8006598:	e6ac      	b.n	80062f4 <HAL_I2C_Master_Receive+0x1fc>
 800659a:	695a      	ldr	r2, [r3, #20]
 800659c:	0797      	lsls	r7, r2, #30
 800659e:	f53f ae59 	bmi.w	8006254 <HAL_I2C_Master_Receive+0x15c>
 80065a2:	695a      	ldr	r2, [r3, #20]
 80065a4:	0557      	lsls	r7, r2, #21
 80065a6:	f53f ae7b 	bmi.w	80062a0 <HAL_I2C_Master_Receive+0x1a8>
 80065aa:	f7fe ffe1 	bl	8005570 <HAL_GetTick>
 80065ae:	1b83      	subs	r3, r0, r6
 80065b0:	429d      	cmp	r5, r3
 80065b2:	f4ff af27 	bcc.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 80065b6:	2d00      	cmp	r5, #0
 80065b8:	f43f af24 	beq.w	8006404 <HAL_I2C_Master_Receive+0x30c>
 80065bc:	6823      	ldr	r3, [r4, #0]
 80065be:	e640      	b.n	8006242 <HAL_I2C_Master_Receive+0x14a>
 80065c0:	695a      	ldr	r2, [r3, #20]
 80065c2:	07d2      	lsls	r2, r2, #31
 80065c4:	f53f ae57 	bmi.w	8006276 <HAL_I2C_Master_Receive+0x17e>
 80065c8:	f7fe ffd2 	bl	8005570 <HAL_GetTick>
 80065cc:	1b83      	subs	r3, r0, r6
 80065ce:	429d      	cmp	r5, r3
 80065d0:	f4ff af29 	bcc.w	8006426 <HAL_I2C_Master_Receive+0x32e>
 80065d4:	2d00      	cmp	r5, #0
 80065d6:	f43f af26 	beq.w	8006426 <HAL_I2C_Master_Receive+0x32e>
 80065da:	6823      	ldr	r3, [r4, #0]
 80065dc:	e645      	b.n	800626a <HAL_I2C_Master_Receive+0x172>
 80065de:	bf00      	nop

080065e0 <HAL_PCD_Init>:
 80065e0:	2800      	cmp	r0, #0
 80065e2:	d05d      	beq.n	80066a0 <HAL_PCD_Init+0xc0>
 80065e4:	b570      	push	{r4, r5, r6, lr}
 80065e6:	f890 32a9 	ldrb.w	r3, [r0, #681]	; 0x2a9
 80065ea:	4604      	mov	r4, r0
 80065ec:	b086      	sub	sp, #24
 80065ee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80065f2:	2b00      	cmp	r3, #0
 80065f4:	d04f      	beq.n	8006696 <HAL_PCD_Init+0xb6>
 80065f6:	2303      	movs	r3, #3
 80065f8:	6820      	ldr	r0, [r4, #0]
 80065fa:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 80065fe:	f002 fab7 	bl	8008b70 <USB_DisableGlobalInt>
 8006602:	6860      	ldr	r0, [r4, #4]
 8006604:	b368      	cbz	r0, 8006662 <HAL_PCD_Init+0x82>
 8006606:	2200      	movs	r2, #0
 8006608:	f04f 0e01 	mov.w	lr, #1
 800660c:	4611      	mov	r1, r2
 800660e:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8006612:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006616:	f102 0c01 	add.w	ip, r2, #1
 800661a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800661e:	86da      	strh	r2, [r3, #54]	; 0x36
 8006620:	fa5f f28c 	uxtb.w	r2, ip
 8006624:	4282      	cmp	r2, r0
 8006626:	e9c3 110e 	strd	r1, r1, [r3, #56]	; 0x38
 800662a:	f883 e029 	strb.w	lr, [r3, #41]	; 0x29
 800662e:	f883 102b 	strb.w	r1, [r3, #43]	; 0x2b
 8006632:	6419      	str	r1, [r3, #64]	; 0x40
 8006634:	d3eb      	bcc.n	800660e <HAL_PCD_Init+0x2e>
 8006636:	2200      	movs	r2, #0
 8006638:	4611      	mov	r1, r2
 800663a:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800663e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006642:	f102 0c01 	add.w	ip, r2, #1
 8006646:	f883 2168 	strb.w	r2, [r3, #360]	; 0x168
 800664a:	fa5f f28c 	uxtb.w	r2, ip
 800664e:	4282      	cmp	r2, r0
 8006650:	e9c3 115e 	strd	r1, r1, [r3, #376]	; 0x178
 8006654:	f883 1169 	strb.w	r1, [r3, #361]	; 0x169
 8006658:	f883 116b 	strb.w	r1, [r3, #363]	; 0x16b
 800665c:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8006660:	d3eb      	bcc.n	800663a <HAL_PCD_Init+0x5a>
 8006662:	46a4      	mov	ip, r4
 8006664:	46ee      	mov	lr, sp
 8006666:	f85c 6b10 	ldr.w	r6, [ip], #16
 800666a:	1d25      	adds	r5, r4, #4
 800666c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8006670:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8006674:	f8dc 3000 	ldr.w	r3, [ip]
 8006678:	4630      	mov	r0, r6
 800667a:	f8ce 3000 	str.w	r3, [lr]
 800667e:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8006682:	f002 fa7f 	bl	8008b84 <USB_DevInit>
 8006686:	2000      	movs	r0, #0
 8006688:	2301      	movs	r3, #1
 800668a:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 800668e:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8006692:	b006      	add	sp, #24
 8006694:	bd70      	pop	{r4, r5, r6, pc}
 8006696:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 800669a:	f003 fff1 	bl	800a680 <HAL_PCD_MspInit>
 800669e:	e7aa      	b.n	80065f6 <HAL_PCD_Init+0x16>
 80066a0:	2001      	movs	r0, #1
 80066a2:	4770      	bx	lr

080066a4 <HAL_PCD_Start>:
 80066a4:	b538      	push	{r3, r4, r5, lr}
 80066a6:	f890 32a8 	ldrb.w	r3, [r0, #680]	; 0x2a8
 80066aa:	2b01      	cmp	r3, #1
 80066ac:	d012      	beq.n	80066d4 <HAL_PCD_Start+0x30>
 80066ae:	4604      	mov	r4, r0
 80066b0:	2501      	movs	r5, #1
 80066b2:	6800      	ldr	r0, [r0, #0]
 80066b4:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 80066b8:	f002 fa50 	bl	8008b5c <USB_EnableGlobalInt>
 80066bc:	4629      	mov	r1, r5
 80066be:	4620      	mov	r0, r4
 80066c0:	f003 ffd2 	bl	800a668 <HAL_PCDEx_SetConnectionState>
 80066c4:	6820      	ldr	r0, [r4, #0]
 80066c6:	f003 f84d 	bl	8009764 <USB_DevConnect>
 80066ca:	2300      	movs	r3, #0
 80066cc:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80066d0:	4618      	mov	r0, r3
 80066d2:	bd38      	pop	{r3, r4, r5, pc}
 80066d4:	2002      	movs	r0, #2
 80066d6:	bd38      	pop	{r3, r4, r5, pc}

080066d8 <HAL_PCD_IRQHandler>:
 80066d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066dc:	4604      	mov	r4, r0
 80066de:	6800      	ldr	r0, [r0, #0]
 80066e0:	f003 f842 	bl	8009768 <USB_ReadInterrupts>
 80066e4:	0406      	lsls	r6, r0, #16
 80066e6:	d443      	bmi.n	8006770 <HAL_PCD_IRQHandler+0x98>
 80066e8:	6820      	ldr	r0, [r4, #0]
 80066ea:	f003 f83d 	bl	8009768 <USB_ReadInterrupts>
 80066ee:	0545      	lsls	r5, r0, #21
 80066f0:	f100 8180 	bmi.w	80069f4 <HAL_PCD_IRQHandler+0x31c>
 80066f4:	6820      	ldr	r0, [r4, #0]
 80066f6:	f003 f837 	bl	8009768 <USB_ReadInterrupts>
 80066fa:	f410 4f80 	tst.w	r0, #16384	; 0x4000
 80066fe:	6820      	ldr	r0, [r4, #0]
 8006700:	d007      	beq.n	8006712 <HAL_PCD_IRQHandler+0x3a>
 8006702:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006706:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800670a:	041b      	lsls	r3, r3, #16
 800670c:	0c1b      	lsrs	r3, r3, #16
 800670e:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006712:	f003 f829 	bl	8009768 <USB_ReadInterrupts>
 8006716:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 800671a:	6820      	ldr	r0, [r4, #0]
 800671c:	d007      	beq.n	800672e <HAL_PCD_IRQHandler+0x56>
 800671e:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006722:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006726:	041b      	lsls	r3, r3, #16
 8006728:	0c1b      	lsrs	r3, r3, #16
 800672a:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 800672e:	f003 f81b 	bl	8009768 <USB_ReadInterrupts>
 8006732:	04c0      	lsls	r0, r0, #19
 8006734:	f100 81f6 	bmi.w	8006b24 <HAL_PCD_IRQHandler+0x44c>
 8006738:	6820      	ldr	r0, [r4, #0]
 800673a:	f003 f815 	bl	8009768 <USB_ReadInterrupts>
 800673e:	0501      	lsls	r1, r0, #20
 8006740:	f100 81d5 	bmi.w	8006aee <HAL_PCD_IRQHandler+0x416>
 8006744:	6820      	ldr	r0, [r4, #0]
 8006746:	f003 f80f 	bl	8009768 <USB_ReadInterrupts>
 800674a:	0582      	lsls	r2, r0, #22
 800674c:	f100 81c2 	bmi.w	8006ad4 <HAL_PCD_IRQHandler+0x3fc>
 8006750:	6820      	ldr	r0, [r4, #0]
 8006752:	f003 f809 	bl	8009768 <USB_ReadInterrupts>
 8006756:	05c3      	lsls	r3, r0, #23
 8006758:	d508      	bpl.n	800676c <HAL_PCD_IRQHandler+0x94>
 800675a:	6822      	ldr	r2, [r4, #0]
 800675c:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006760:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006764:	041b      	lsls	r3, r3, #16
 8006766:	0c1b      	lsrs	r3, r3, #16
 8006768:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 800676c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006770:	6822      	ldr	r2, [r4, #0]
 8006772:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006776:	4610      	mov	r0, r2
 8006778:	041d      	lsls	r5, r3, #16
 800677a:	d5b6      	bpl.n	80066ea <HAL_PCD_IRQHandler+0x12>
 800677c:	f8df 934c 	ldr.w	r9, [pc, #844]	; 8006acc <HAL_PCD_IRQHandler+0x3f4>
 8006780:	f8df a34c 	ldr.w	sl, [pc, #844]	; 8006ad0 <HAL_PCD_IRQHandler+0x3f8>
 8006784:	e011      	b.n	80067aa <HAL_PCD_IRQHandler+0xd2>
 8006786:	f011 0110 	ands.w	r1, r1, #16
 800678a:	f000 8151 	beq.w	8006a30 <HAL_PCD_IRQHandler+0x358>
 800678e:	8801      	ldrh	r1, [r0, #0]
 8006790:	f411 6500 	ands.w	r5, r1, #2048	; 0x800
 8006794:	b28b      	uxth	r3, r1
 8006796:	f040 8176 	bne.w	8006a86 <HAL_PCD_IRQHandler+0x3ae>
 800679a:	0419      	lsls	r1, r3, #16
 800679c:	f100 821b 	bmi.w	8006bd6 <HAL_PCD_IRQHandler+0x4fe>
 80067a0:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 80067a4:	041e      	lsls	r6, r3, #16
 80067a6:	f140 811f 	bpl.w	80069e8 <HAL_PCD_IRQHandler+0x310>
 80067aa:	f8b0 5044 	ldrh.w	r5, [r0, #68]	; 0x44
 80067ae:	b2a9      	uxth	r1, r5
 80067b0:	f015 050f 	ands.w	r5, r5, #15
 80067b4:	d0e7      	beq.n	8006786 <HAL_PCD_IRQHandler+0xae>
 80067b6:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 80067ba:	00ae      	lsls	r6, r5, #2
 80067bc:	041f      	lsls	r7, r3, #16
 80067be:	fa1f f883 	uxth.w	r8, r3
 80067c2:	f100 80a0 	bmi.w	8006906 <HAL_PCD_IRQHandler+0x22e>
 80067c6:	f018 0f80 	tst.w	r8, #128	; 0x80
 80067ca:	d0e9      	beq.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 80067cc:	f830 3025 	ldrh.w	r3, [r0, r5, lsl #2]
 80067d0:	1977      	adds	r7, r6, r5
 80067d2:	b29b      	uxth	r3, r3
 80067d4:	ea03 0309 	and.w	r3, r3, r9
 80067d8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80067dc:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 80067e0:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 80067e4:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80067e8:	2b03      	cmp	r3, #3
 80067ea:	f000 80d0 	beq.w	800698e <HAL_PCD_IRQHandler+0x2b6>
 80067ee:	2b00      	cmp	r3, #0
 80067f0:	f000 80cd 	beq.w	800698e <HAL_PCD_IRQHandler+0x2b6>
 80067f4:	2b02      	cmp	r3, #2
 80067f6:	d103      	bne.n	8006800 <HAL_PCD_IRQHandler+0x128>
 80067f8:	f418 7f80 	tst.w	r8, #256	; 0x100
 80067fc:	f000 80c7 	beq.w	800698e <HAL_PCD_IRQHandler+0x2b6>
 8006800:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006804:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006808:	b29b      	uxth	r3, r3
 800680a:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800680e:	f018 0c40 	ands.w	ip, r8, #64	; 0x40
 8006812:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006816:	f000 8255 	beq.w	8006cc4 <HAL_PCD_IRQHandler+0x5ec>
 800681a:	eb06 0c05 	add.w	ip, r6, r5
 800681e:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 8006822:	eb04 0ccc 	add.w	ip, r4, ip, lsl #3
 8006826:	f8dc e040 	ldr.w	lr, [ip, #64]	; 0x40
 800682a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800682e:	459e      	cmp	lr, r3
 8006830:	f240 834b 	bls.w	8006eca <HAL_PCD_IRQHandler+0x7f2>
 8006834:	ebae 0e03 	sub.w	lr, lr, r3
 8006838:	f8cc e040 	str.w	lr, [ip, #64]	; 0x40
 800683c:	f1be 0f00 	cmp.w	lr, #0
 8006840:	f000 8346 	beq.w	8006ed0 <HAL_PCD_IRQHandler+0x7f8>
 8006844:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006848:	d00f      	beq.n	800686a <HAL_PCD_IRQHandler+0x192>
 800684a:	f830 c021 	ldrh.w	ip, [r0, r1, lsl #2]
 800684e:	f42c 4ce0 	bic.w	ip, ip, #28672	; 0x7000
 8006852:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8006856:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 800685a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800685e:	f44c 4c40 	orr.w	ip, ip, #49152	; 0xc000
 8006862:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 8006866:	f820 c021 	strh.w	ip, [r0, r1, lsl #2]
 800686a:	eb06 0e05 	add.w	lr, r6, r5
 800686e:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
 8006872:	f89e c04c 	ldrb.w	ip, [lr, #76]	; 0x4c
 8006876:	f1bc 0f01 	cmp.w	ip, #1
 800687a:	f040 8316 	bne.w	8006eaa <HAL_PCD_IRQHandler+0x7d2>
 800687e:	f8de 203c 	ldr.w	r2, [lr, #60]	; 0x3c
 8006882:	f8de 8038 	ldr.w	r8, [lr, #56]	; 0x38
 8006886:	eb02 0c03 	add.w	ip, r2, r3
 800688a:	f8de 2044 	ldr.w	r2, [lr, #68]	; 0x44
 800688e:	f8ce c03c 	str.w	ip, [lr, #60]	; 0x3c
 8006892:	441a      	add	r2, r3
 8006894:	f8ce 2044 	str.w	r2, [lr, #68]	; 0x44
 8006898:	f8de 2048 	ldr.w	r2, [lr, #72]	; 0x48
 800689c:	4542      	cmp	r2, r8
 800689e:	f0c0 83e4 	bcc.w	800706a <HAL_PCD_IRQHandler+0x992>
 80068a2:	eba2 0208 	sub.w	r2, r2, r8
 80068a6:	f8ce 2048 	str.w	r2, [lr, #72]	; 0x48
 80068aa:	fa1f f388 	uxth.w	r3, r8
 80068ae:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 80068b2:	f1be 0f00 	cmp.w	lr, #0
 80068b6:	f040 83cb 	bne.w	8007050 <HAL_PCD_IRQHandler+0x978>
 80068ba:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80068be:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80068c2:	f201 4e04 	addw	lr, r1, #1028	; 0x404
 80068c6:	b292      	uxth	r2, r2
 80068c8:	eb0e 0102 	add.w	r1, lr, r2
 80068cc:	f1b8 0f00 	cmp.w	r8, #0
 80068d0:	f040 83f8 	bne.w	80070c4 <HAL_PCD_IRQHandler+0x9ec>
 80068d4:	f83e 1002 	ldrh.w	r1, [lr, r2]
 80068d8:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 80068dc:	0409      	lsls	r1, r1, #16
 80068de:	0c09      	lsrs	r1, r1, #16
 80068e0:	f82e 1002 	strh.w	r1, [lr, r2]
 80068e4:	f83e 1002 	ldrh.w	r1, [lr, r2]
 80068e8:	b289      	uxth	r1, r1
 80068ea:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80068ee:	f82e 1002 	strh.w	r1, [lr, r2]
 80068f2:	1972      	adds	r2, r6, r5
 80068f4:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 80068f8:	8e12      	ldrh	r2, [r2, #48]	; 0x30
 80068fa:	4661      	mov	r1, ip
 80068fc:	f002 ff38 	bl	8009770 <USB_WritePMA>
 8006900:	6820      	ldr	r0, [r4, #0]
 8006902:	4602      	mov	r2, r0
 8006904:	e2d1      	b.n	8006eaa <HAL_PCD_IRQHandler+0x7d2>
 8006906:	f640 738f 	movw	r3, #3983	; 0xf8f
 800690a:	f830 2025 	ldrh.w	r2, [r0, r5, lsl #2]
 800690e:	1971      	adds	r1, r6, r5
 8006910:	4013      	ands	r3, r2
 8006912:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006916:	f820 3025 	strh.w	r3, [r0, r5, lsl #2]
 800691a:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 800691e:	f891 3174 	ldrb.w	r3, [r1, #372]	; 0x174
 8006922:	2b00      	cmp	r3, #0
 8006924:	f040 811c 	bne.w	8006b60 <HAL_PCD_IRQHandler+0x488>
 8006928:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800692c:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006930:	b29b      	uxth	r3, r3
 8006932:	3306      	adds	r3, #6
 8006934:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006938:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800693c:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006940:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006944:	461f      	mov	r7, r3
 8006946:	2b00      	cmp	r3, #0
 8006948:	f040 81ac 	bne.w	8006ca4 <HAL_PCD_IRQHandler+0x5cc>
 800694c:	1971      	adds	r1, r6, r5
 800694e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8006952:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8006956:	00c9      	lsls	r1, r1, #3
 8006958:	443a      	add	r2, r7
 800695a:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 800695e:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 8006962:	443a      	add	r2, r7
 8006964:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 8006968:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 800696c:	b122      	cbz	r2, 8006978 <HAL_PCD_IRQHandler+0x2a0>
 800696e:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8006972:	42bb      	cmp	r3, r7
 8006974:	f240 819d 	bls.w	8006cb2 <HAL_PCD_IRQHandler+0x5da>
 8006978:	1973      	adds	r3, r6, r5
 800697a:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800697e:	4620      	mov	r0, r4
 8006980:	f893 1168 	ldrb.w	r1, [r3, #360]	; 0x168
 8006984:	f003 fea4 	bl	800a6d0 <HAL_PCD_DataOutStageCallback>
 8006988:	6820      	ldr	r0, [r4, #0]
 800698a:	4602      	mov	r2, r0
 800698c:	e71b      	b.n	80067c6 <HAL_PCD_IRQHandler+0xee>
 800698e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006992:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006996:	b29b      	uxth	r3, r3
 8006998:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800699c:	442e      	add	r6, r5
 800699e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80069a2:	f8b3 3404 	ldrh.w	r3, [r3, #1028]	; 0x404
 80069a6:	eb04 06c6 	add.w	r6, r4, r6, lsl #3
 80069aa:	6c32      	ldr	r2, [r6, #64]	; 0x40
 80069ac:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80069b0:	429a      	cmp	r2, r3
 80069b2:	f240 8108 	bls.w	8006bc6 <HAL_PCD_IRQHandler+0x4ee>
 80069b6:	1ad2      	subs	r2, r2, r3
 80069b8:	6432      	str	r2, [r6, #64]	; 0x40
 80069ba:	2a00      	cmp	r2, #0
 80069bc:	f000 8105 	beq.w	8006bca <HAL_PCD_IRQHandler+0x4f2>
 80069c0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80069c2:	3501      	adds	r5, #1
 80069c4:	441a      	add	r2, r3
 80069c6:	63f2      	str	r2, [r6, #60]	; 0x3c
 80069c8:	6c72      	ldr	r2, [r6, #68]	; 0x44
 80069ca:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80069ce:	4413      	add	r3, r2
 80069d0:	6473      	str	r3, [r6, #68]	; 0x44
 80069d2:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80069d6:	f002 fb3d 	bl	8009054 <USB_EPStartXfer>
 80069da:	6820      	ldr	r0, [r4, #0]
 80069dc:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 80069e0:	4602      	mov	r2, r0
 80069e2:	041e      	lsls	r6, r3, #16
 80069e4:	f53f aee1 	bmi.w	80067aa <HAL_PCD_IRQHandler+0xd2>
 80069e8:	4610      	mov	r0, r2
 80069ea:	f002 febd 	bl	8009768 <USB_ReadInterrupts>
 80069ee:	0545      	lsls	r5, r0, #21
 80069f0:	f57f ae80 	bpl.w	80066f4 <HAL_PCD_IRQHandler+0x1c>
 80069f4:	6822      	ldr	r2, [r4, #0]
 80069f6:	4620      	mov	r0, r4
 80069f8:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80069fc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006a00:	041b      	lsls	r3, r3, #16
 8006a02:	0c1b      	lsrs	r3, r3, #16
 8006a04:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006a08:	f003 fe7a 	bl	800a700 <HAL_PCD_ResetCallback>
 8006a0c:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8006a10:	2b01      	cmp	r3, #1
 8006a12:	f43f ae6f 	beq.w	80066f4 <HAL_PCD_IRQHandler+0x1c>
 8006a16:	2500      	movs	r5, #0
 8006a18:	2301      	movs	r3, #1
 8006a1a:	4629      	mov	r1, r5
 8006a1c:	6820      	ldr	r0, [r4, #0]
 8006a1e:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8006a22:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8006a26:	f002 fe97 	bl	8009758 <USB_SetDevAddress>
 8006a2a:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8006a2e:	e661      	b.n	80066f4 <HAL_PCD_IRQHandler+0x1c>
 8006a30:	8803      	ldrh	r3, [r0, #0]
 8006a32:	b29b      	uxth	r3, r3
 8006a34:	ea03 0309 	and.w	r3, r3, r9
 8006a38:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006a3c:	8003      	strh	r3, [r0, #0]
 8006a3e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006a42:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 8006a46:	b29b      	uxth	r3, r3
 8006a48:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006a4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8006a50:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 8006a54:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006a56:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006a5a:	6463      	str	r3, [r4, #68]	; 0x44
 8006a5c:	4413      	add	r3, r2
 8006a5e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8006a60:	4620      	mov	r0, r4
 8006a62:	f003 fe3f 	bl	800a6e4 <HAL_PCD_DataInStageCallback>
 8006a66:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8006a6a:	b363      	cbz	r3, 8006ac6 <HAL_PCD_IRQHandler+0x3ee>
 8006a6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006a6e:	bb53      	cbnz	r3, 8006ac6 <HAL_PCD_IRQHandler+0x3ee>
 8006a70:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8006a74:	6820      	ldr	r0, [r4, #0]
 8006a76:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006a7a:	f8a0 204c 	strh.w	r2, [r0, #76]	; 0x4c
 8006a7e:	4602      	mov	r2, r0
 8006a80:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8006a84:	e68c      	b.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006a86:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006a8a:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8006a8e:	b29b      	uxth	r3, r3
 8006a90:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006a94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006a98:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8006a9c:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8006aa0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006aa4:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8006aa8:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 8006aac:	f002 fe70 	bl	8009790 <USB_ReadPMA>
 8006ab0:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006ab4:	6822      	ldr	r2, [r4, #0]
 8006ab6:	4620      	mov	r0, r4
 8006ab8:	8811      	ldrh	r1, [r2, #0]
 8006aba:	400b      	ands	r3, r1
 8006abc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006ac0:	8013      	strh	r3, [r2, #0]
 8006ac2:	f003 fdfd 	bl	800a6c0 <HAL_PCD_SetupStageCallback>
 8006ac6:	6820      	ldr	r0, [r4, #0]
 8006ac8:	4602      	mov	r2, r0
 8006aca:	e669      	b.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006acc:	ffff8f0f 	.word	0xffff8f0f
 8006ad0:	ffff8fbf 	.word	0xffff8fbf
 8006ad4:	6822      	ldr	r2, [r4, #0]
 8006ad6:	4620      	mov	r0, r4
 8006ad8:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006adc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006ae0:	041b      	lsls	r3, r3, #16
 8006ae2:	0c1b      	lsrs	r3, r3, #16
 8006ae4:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006ae8:	f003 fe06 	bl	800a6f8 <HAL_PCD_SOFCallback>
 8006aec:	e630      	b.n	8006750 <HAL_PCD_IRQHandler+0x78>
 8006aee:	6822      	ldr	r2, [r4, #0]
 8006af0:	4620      	mov	r0, r4
 8006af2:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006af6:	b29b      	uxth	r3, r3
 8006af8:	f043 0308 	orr.w	r3, r3, #8
 8006afc:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006b00:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8006b04:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b08:	041b      	lsls	r3, r3, #16
 8006b0a:	0c1b      	lsrs	r3, r3, #16
 8006b0c:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8006b10:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006b14:	b29b      	uxth	r3, r3
 8006b16:	f043 0304 	orr.w	r3, r3, #4
 8006b1a:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006b1e:	f003 fe01 	bl	800a724 <HAL_PCD_SuspendCallback>
 8006b22:	e60f      	b.n	8006744 <HAL_PCD_IRQHandler+0x6c>
 8006b24:	6822      	ldr	r2, [r4, #0]
 8006b26:	4620      	mov	r0, r4
 8006b28:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006b2c:	f023 0304 	bic.w	r3, r3, #4
 8006b30:	041b      	lsls	r3, r3, #16
 8006b32:	0c1b      	lsrs	r3, r3, #16
 8006b34:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006b38:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8006b3c:	f023 0308 	bic.w	r3, r3, #8
 8006b40:	041b      	lsls	r3, r3, #16
 8006b42:	0c1b      	lsrs	r3, r3, #16
 8006b44:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8006b48:	f003 fdfc 	bl	800a744 <HAL_PCD_ResumeCallback>
 8006b4c:	6820      	ldr	r0, [r4, #0]
 8006b4e:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8006b52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006b56:	041b      	lsls	r3, r3, #16
 8006b58:	0c1b      	lsrs	r3, r3, #16
 8006b5a:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
 8006b5e:	e5ec      	b.n	800673a <HAL_PCD_IRQHandler+0x62>
 8006b60:	f891 316b 	ldrb.w	r3, [r1, #363]	; 0x16b
 8006b64:	2b02      	cmp	r3, #2
 8006b66:	f000 8120 	beq.w	8006daa <HAL_PCD_IRQHandler+0x6d2>
 8006b6a:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006b6e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006b72:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006b76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006b7a:	041b      	lsls	r3, r3, #16
 8006b7c:	0c1b      	lsrs	r3, r3, #16
 8006b7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006b82:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8006b86:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8006b8a:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006b8e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8006b92:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8006b96:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006b9a:	b29b      	uxth	r3, r3
 8006b9c:	d06e      	beq.n	8006c7c <HAL_PCD_IRQHandler+0x5a4>
 8006b9e:	3302      	adds	r3, #2
 8006ba0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006ba4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006ba8:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006bac:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006bb0:	461f      	mov	r7, r3
 8006bb2:	2b00      	cmp	r3, #0
 8006bb4:	f43f aeca 	beq.w	800694c <HAL_PCD_IRQHandler+0x274>
 8006bb8:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8006bbc:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006bc0:	f002 fde6 	bl	8009790 <USB_ReadPMA>
 8006bc4:	e6c2      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006bc6:	2300      	movs	r3, #0
 8006bc8:	6433      	str	r3, [r6, #64]	; 0x40
 8006bca:	4620      	mov	r0, r4
 8006bcc:	f003 fd8a 	bl	800a6e4 <HAL_PCD_DataInStageCallback>
 8006bd0:	6820      	ldr	r0, [r4, #0]
 8006bd2:	4602      	mov	r2, r0
 8006bd4:	e5e4      	b.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006bd6:	f640 738f 	movw	r3, #3983	; 0xf8f
 8006bda:	8802      	ldrh	r2, [r0, #0]
 8006bdc:	4013      	ands	r3, r2
 8006bde:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006be2:	8003      	strh	r3, [r0, #0]
 8006be4:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006be8:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8006bec:	b29b      	uxth	r3, r3
 8006bee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006bf2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006bf6:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 8006bfa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006bfe:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8006c02:	b193      	cbz	r3, 8006c2a <HAL_PCD_IRQHandler+0x552>
 8006c04:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
 8006c08:	b179      	cbz	r1, 8006c2a <HAL_PCD_IRQHandler+0x552>
 8006c0a:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8006c0e:	f002 fdbf 	bl	8009790 <USB_ReadPMA>
 8006c12:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8006c16:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
 8006c1a:	4620      	mov	r0, r4
 8006c1c:	4413      	add	r3, r2
 8006c1e:	4629      	mov	r1, r5
 8006c20:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
 8006c24:	f003 fd54 	bl	800a6d0 <HAL_PCD_DataOutStageCallback>
 8006c28:	6820      	ldr	r0, [r4, #0]
 8006c2a:	8803      	ldrh	r3, [r0, #0]
 8006c2c:	4602      	mov	r2, r0
 8006c2e:	051b      	lsls	r3, r3, #20
 8006c30:	f53f adb6 	bmi.w	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006c34:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006c38:	f8d4 1178 	ldr.w	r1, [r4, #376]	; 0x178
 8006c3c:	b29b      	uxth	r3, r3
 8006c3e:	f200 450c 	addw	r5, r0, #1036	; 0x40c
 8006c42:	2900      	cmp	r1, #0
 8006c44:	f040 80a6 	bne.w	8006d94 <HAL_PCD_IRQHandler+0x6bc>
 8006c48:	5ae9      	ldrh	r1, [r5, r3]
 8006c4a:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8006c4e:	0409      	lsls	r1, r1, #16
 8006c50:	0c09      	lsrs	r1, r1, #16
 8006c52:	52e9      	strh	r1, [r5, r3]
 8006c54:	5ae9      	ldrh	r1, [r5, r3]
 8006c56:	b289      	uxth	r1, r1
 8006c58:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006c5c:	52e9      	strh	r1, [r5, r3]
 8006c5e:	8803      	ldrh	r3, [r0, #0]
 8006c60:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006c64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c68:	041b      	lsls	r3, r3, #16
 8006c6a:	0c1b      	lsrs	r3, r3, #16
 8006c6c:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8006c70:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006c74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006c78:	8003      	strh	r3, [r0, #0]
 8006c7a:	e591      	b.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006c7c:	3306      	adds	r3, #6
 8006c7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006c82:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006c86:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006c8a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006c8e:	461f      	mov	r7, r3
 8006c90:	2b00      	cmp	r3, #0
 8006c92:	f43f ae5b 	beq.w	800694c <HAL_PCD_IRQHandler+0x274>
 8006c96:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8006c9a:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006c9e:	f002 fd77 	bl	8009790 <USB_ReadPMA>
 8006ca2:	e653      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006ca4:	f8b1 216e 	ldrh.w	r2, [r1, #366]	; 0x16e
 8006ca8:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006cac:	f002 fd70 	bl	8009790 <USB_ReadPMA>
 8006cb0:	e64c      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006cb2:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 8006cb6:	6820      	ldr	r0, [r4, #0]
 8006cb8:	4421      	add	r1, r4
 8006cba:	f002 f9cb 	bl	8009054 <USB_EPStartXfer>
 8006cbe:	6820      	ldr	r0, [r4, #0]
 8006cc0:	4602      	mov	r2, r0
 8006cc2:	e580      	b.n	80067c6 <HAL_PCD_IRQHandler+0xee>
 8006cc4:	f8b3 e40c 	ldrh.w	lr, [r3, #1036]	; 0x40c
 8006cc8:	1973      	adds	r3, r6, r5
 8006cca:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006cce:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 8006cd2:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8006cd6:	45f3      	cmp	fp, lr
 8006cd8:	f0c0 80a5 	bcc.w	8006e26 <HAL_PCD_IRQHandler+0x74e>
 8006cdc:	ebab 0c0e 	sub.w	ip, fp, lr
 8006ce0:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8006ce4:	f1bc 0f00 	cmp.w	ip, #0
 8006ce8:	f000 809f 	beq.w	8006e2a <HAL_PCD_IRQHandler+0x752>
 8006cec:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006cf0:	d10d      	bne.n	8006d0e <HAL_PCD_IRQHandler+0x636>
 8006cf2:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006cf6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006cfa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006cfe:	041b      	lsls	r3, r3, #16
 8006d00:	0c1b      	lsrs	r3, r3, #16
 8006d02:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006d06:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006d0a:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006d0e:	1973      	adds	r3, r6, r5
 8006d10:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8006d14:	f893 c04c 	ldrb.w	ip, [r3, #76]	; 0x4c
 8006d18:	f1bc 0f01 	cmp.w	ip, #1
 8006d1c:	f040 80c5 	bne.w	8006eaa <HAL_PCD_IRQHandler+0x7d2>
 8006d20:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006d22:	f8d3 8038 	ldr.w	r8, [r3, #56]	; 0x38
 8006d26:	eb02 0c0e 	add.w	ip, r2, lr
 8006d2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006d2c:	f8c3 c03c 	str.w	ip, [r3, #60]	; 0x3c
 8006d30:	4472      	add	r2, lr
 8006d32:	645a      	str	r2, [r3, #68]	; 0x44
 8006d34:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006d36:	4542      	cmp	r2, r8
 8006d38:	f0c0 81ab 	bcc.w	8007092 <HAL_PCD_IRQHandler+0x9ba>
 8006d3c:	eba2 0208 	sub.w	r2, r2, r8
 8006d40:	649a      	str	r2, [r3, #72]	; 0x48
 8006d42:	fa1f fe88 	uxth.w	lr, r8
 8006d46:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	f040 8194 	bne.w	8007078 <HAL_PCD_IRQHandler+0x9a0>
 8006d50:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006d54:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8006d58:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8006d5c:	b292      	uxth	r2, r2
 8006d5e:	188b      	adds	r3, r1, r2
 8006d60:	f1b8 0f00 	cmp.w	r8, #0
 8006d64:	f040 81d0 	bne.w	8007108 <HAL_PCD_IRQHandler+0xa30>
 8006d68:	5a8b      	ldrh	r3, [r1, r2]
 8006d6a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8006d6e:	041b      	lsls	r3, r3, #16
 8006d70:	0c1b      	lsrs	r3, r3, #16
 8006d72:	528b      	strh	r3, [r1, r2]
 8006d74:	5a8b      	ldrh	r3, [r1, r2]
 8006d76:	b29b      	uxth	r3, r3
 8006d78:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006d7c:	528b      	strh	r3, [r1, r2]
 8006d7e:	1972      	adds	r2, r6, r5
 8006d80:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8006d84:	4673      	mov	r3, lr
 8006d86:	4661      	mov	r1, ip
 8006d88:	8e52      	ldrh	r2, [r2, #50]	; 0x32
 8006d8a:	f002 fcf1 	bl	8009770 <USB_WritePMA>
 8006d8e:	6820      	ldr	r0, [r4, #0]
 8006d90:	4602      	mov	r2, r0
 8006d92:	e08a      	b.n	8006eaa <HAL_PCD_IRQHandler+0x7d2>
 8006d94:	293e      	cmp	r1, #62	; 0x3e
 8006d96:	f200 80cb 	bhi.w	8006f30 <HAL_PCD_IRQHandler+0x858>
 8006d9a:	084e      	lsrs	r6, r1, #1
 8006d9c:	07cf      	lsls	r7, r1, #31
 8006d9e:	bf48      	it	mi
 8006da0:	3601      	addmi	r6, #1
 8006da2:	02b1      	lsls	r1, r6, #10
 8006da4:	b289      	uxth	r1, r1
 8006da6:	52e9      	strh	r1, [r5, r3]
 8006da8:	e759      	b.n	8006c5e <HAL_PCD_IRQHandler+0x586>
 8006daa:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8006dae:	f418 4c80 	ands.w	ip, r8, #16384	; 0x4000
 8006db2:	b29b      	uxth	r3, r3
 8006db4:	f000 80c7 	beq.w	8006f46 <HAL_PCD_IRQHandler+0x86e>
 8006db8:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006dbc:	3302      	adds	r3, #2
 8006dbe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006dc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006dc6:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006dca:	f8d1 c180 	ldr.w	ip, [r1, #384]	; 0x180
 8006dce:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006dd2:	459c      	cmp	ip, r3
 8006dd4:	461f      	mov	r7, r3
 8006dd6:	f0c0 8112 	bcc.w	8006ffe <HAL_PCD_IRQHandler+0x926>
 8006dda:	ebac 0c03 	sub.w	ip, ip, r3
 8006dde:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8006de2:	f1bc 0f00 	cmp.w	ip, #0
 8006de6:	f000 810e 	beq.w	8007006 <HAL_PCD_IRQHandler+0x92e>
 8006dea:	f018 0f40 	tst.w	r8, #64	; 0x40
 8006dee:	d00d      	beq.n	8006e0c <HAL_PCD_IRQHandler+0x734>
 8006df0:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006df4:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8006df8:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006dfc:	0409      	lsls	r1, r1, #16
 8006dfe:	0c09      	lsrs	r1, r1, #16
 8006e00:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006e04:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8006e08:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006e0c:	2b00      	cmp	r3, #0
 8006e0e:	f000 80c3 	beq.w	8006f98 <HAL_PCD_IRQHandler+0x8c0>
 8006e12:	1971      	adds	r1, r6, r5
 8006e14:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8006e18:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 8006e1c:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006e20:	f002 fcb6 	bl	8009790 <USB_ReadPMA>
 8006e24:	e592      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006e26:	f8c3 c040 	str.w	ip, [r3, #64]	; 0x40
 8006e2a:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006e2e:	2b00      	cmp	r3, #0
 8006e30:	f040 80be 	bne.w	8006fb0 <HAL_PCD_IRQHandler+0x8d8>
 8006e34:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8006e38:	010b      	lsls	r3, r1, #4
 8006e3a:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006e3e:	4406      	add	r6, r0
 8006e40:	b2ad      	uxth	r5, r5
 8006e42:	5b72      	ldrh	r2, [r6, r5]
 8006e44:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006e48:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006e4c:	0412      	lsls	r2, r2, #16
 8006e4e:	0c12      	lsrs	r2, r2, #16
 8006e50:	5372      	strh	r2, [r6, r5]
 8006e52:	5b72      	ldrh	r2, [r6, r5]
 8006e54:	4403      	add	r3, r0
 8006e56:	b292      	uxth	r2, r2
 8006e58:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006e5c:	5372      	strh	r2, [r6, r5]
 8006e5e:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 8006e62:	b280      	uxth	r0, r0
 8006e64:	5a1a      	ldrh	r2, [r3, r0]
 8006e66:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006e6a:	0412      	lsls	r2, r2, #16
 8006e6c:	0c12      	lsrs	r2, r2, #16
 8006e6e:	521a      	strh	r2, [r3, r0]
 8006e70:	5a1a      	ldrh	r2, [r3, r0]
 8006e72:	b292      	uxth	r2, r2
 8006e74:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006e78:	521a      	strh	r2, [r3, r0]
 8006e7a:	4620      	mov	r0, r4
 8006e7c:	f003 fc32 	bl	800a6e4 <HAL_PCD_DataInStageCallback>
 8006e80:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006e84:	6820      	ldr	r0, [r4, #0]
 8006e86:	d183      	bne.n	8006d90 <HAL_PCD_IRQHandler+0x6b8>
 8006e88:	4602      	mov	r2, r0
 8006e8a:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006e8e:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006e92:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006e96:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006e9a:	041b      	lsls	r3, r3, #16
 8006e9c:	0c1b      	lsrs	r3, r3, #16
 8006e9e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006ea2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006ea6:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006eaa:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
 8006eae:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8006eb2:	b29b      	uxth	r3, r3
 8006eb4:	ea03 030a 	and.w	r3, r3, sl
 8006eb8:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8006ebc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006ec0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006ec4:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8006ec8:	e46a      	b.n	80067a0 <HAL_PCD_IRQHandler+0xc8>
 8006eca:	2300      	movs	r3, #0
 8006ecc:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 8006ed0:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	d17f      	bne.n	8006fd8 <HAL_PCD_IRQHandler+0x900>
 8006ed8:	f8b0 5050 	ldrh.w	r5, [r0, #80]	; 0x50
 8006edc:	010b      	lsls	r3, r1, #4
 8006ede:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006ee2:	4406      	add	r6, r0
 8006ee4:	b2ad      	uxth	r5, r5
 8006ee6:	5b72      	ldrh	r2, [r6, r5]
 8006ee8:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006eec:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006ef0:	0412      	lsls	r2, r2, #16
 8006ef2:	0c12      	lsrs	r2, r2, #16
 8006ef4:	5372      	strh	r2, [r6, r5]
 8006ef6:	5b72      	ldrh	r2, [r6, r5]
 8006ef8:	4403      	add	r3, r0
 8006efa:	b292      	uxth	r2, r2
 8006efc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006f00:	5372      	strh	r2, [r6, r5]
 8006f02:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 8006f06:	b280      	uxth	r0, r0
 8006f08:	5a1a      	ldrh	r2, [r3, r0]
 8006f0a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006f0e:	0412      	lsls	r2, r2, #16
 8006f10:	0c12      	lsrs	r2, r2, #16
 8006f12:	521a      	strh	r2, [r3, r0]
 8006f14:	5a1a      	ldrh	r2, [r3, r0]
 8006f16:	b292      	uxth	r2, r2
 8006f18:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006f1c:	521a      	strh	r2, [r3, r0]
 8006f1e:	4620      	mov	r0, r4
 8006f20:	f003 fbe0 	bl	800a6e4 <HAL_PCD_DataInStageCallback>
 8006f24:	f418 4f80 	tst.w	r8, #16384	; 0x4000
 8006f28:	6820      	ldr	r0, [r4, #0]
 8006f2a:	d1ad      	bne.n	8006e88 <HAL_PCD_IRQHandler+0x7b0>
 8006f2c:	4602      	mov	r2, r0
 8006f2e:	e7bc      	b.n	8006eaa <HAL_PCD_IRQHandler+0x7d2>
 8006f30:	094e      	lsrs	r6, r1, #5
 8006f32:	06c9      	lsls	r1, r1, #27
 8006f34:	4989      	ldr	r1, [pc, #548]	; (800715c <HAL_PCD_IRQHandler+0xa84>)
 8006f36:	bf08      	it	eq
 8006f38:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8006f3c:	ea41 2186 	orr.w	r1, r1, r6, lsl #10
 8006f40:	b289      	uxth	r1, r1
 8006f42:	52e9      	strh	r1, [r5, r3]
 8006f44:	e68b      	b.n	8006c5e <HAL_PCD_IRQHandler+0x586>
 8006f46:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 8006f4a:	3306      	adds	r3, #6
 8006f4c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006f50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006f54:	f8b3 3400 	ldrh.w	r3, [r3, #1024]	; 0x400
 8006f58:	f8d1 e180 	ldr.w	lr, [r1, #384]	; 0x180
 8006f5c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006f60:	459e      	cmp	lr, r3
 8006f62:	461f      	mov	r7, r3
 8006f64:	d360      	bcc.n	8007028 <HAL_PCD_IRQHandler+0x950>
 8006f66:	ebae 0e03 	sub.w	lr, lr, r3
 8006f6a:	f8c1 e180 	str.w	lr, [r1, #384]	; 0x180
 8006f6e:	f1be 0f00 	cmp.w	lr, #0
 8006f72:	d05b      	beq.n	800702c <HAL_PCD_IRQHandler+0x954>
 8006f74:	f018 0f40 	tst.w	r8, #64	; 0x40
 8006f78:	d10d      	bne.n	8006f96 <HAL_PCD_IRQHandler+0x8be>
 8006f7a:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8006f7e:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8006f82:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8006f86:	0409      	lsls	r1, r1, #16
 8006f88:	0c09      	lsrs	r1, r1, #16
 8006f8a:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8006f8e:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8006f92:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8006f96:	b90b      	cbnz	r3, 8006f9c <HAL_PCD_IRQHandler+0x8c4>
 8006f98:	461f      	mov	r7, r3
 8006f9a:	e4d7      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006f9c:	1971      	adds	r1, r6, r5
 8006f9e:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8006fa2:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8006fa6:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 8006faa:	f002 fbf1 	bl	8009790 <USB_ReadPMA>
 8006fae:	e4cd      	b.n	800694c <HAL_PCD_IRQHandler+0x274>
 8006fb0:	2b01      	cmp	r3, #1
 8006fb2:	f47f af62 	bne.w	8006e7a <HAL_PCD_IRQHandler+0x7a2>
 8006fb6:	2500      	movs	r5, #0
 8006fb8:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006fbc:	010b      	lsls	r3, r1, #4
 8006fbe:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006fc2:	b292      	uxth	r2, r2
 8006fc4:	4406      	add	r6, r0
 8006fc6:	52b5      	strh	r5, [r6, r2]
 8006fc8:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006fcc:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006fd0:	4403      	add	r3, r0
 8006fd2:	b292      	uxth	r2, r2
 8006fd4:	529d      	strh	r5, [r3, r2]
 8006fd6:	e750      	b.n	8006e7a <HAL_PCD_IRQHandler+0x7a2>
 8006fd8:	2b01      	cmp	r3, #1
 8006fda:	d1a0      	bne.n	8006f1e <HAL_PCD_IRQHandler+0x846>
 8006fdc:	2500      	movs	r5, #0
 8006fde:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006fe2:	010b      	lsls	r3, r1, #4
 8006fe4:	f203 4604 	addw	r6, r3, #1028	; 0x404
 8006fe8:	b292      	uxth	r2, r2
 8006fea:	4406      	add	r6, r0
 8006fec:	52b5      	strh	r5, [r6, r2]
 8006fee:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8006ff2:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8006ff6:	4403      	add	r3, r0
 8006ff8:	b292      	uxth	r2, r2
 8006ffa:	529d      	strh	r5, [r3, r2]
 8006ffc:	e78f      	b.n	8006f1e <HAL_PCD_IRQHandler+0x846>
 8006ffe:	f04f 0c00 	mov.w	ip, #0
 8007002:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 8007006:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 800700a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800700e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8007012:	0409      	lsls	r1, r1, #16
 8007014:	0c09      	lsrs	r1, r1, #16
 8007016:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 800701a:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800701e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8007022:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 8007026:	e6e0      	b.n	8006dea <HAL_PCD_IRQHandler+0x712>
 8007028:	f8c1 c180 	str.w	ip, [r1, #384]	; 0x180
 800702c:	f830 1022 	ldrh.w	r1, [r0, r2, lsl #2]
 8007030:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8007034:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8007038:	0409      	lsls	r1, r1, #16
 800703a:	0c09      	lsrs	r1, r1, #16
 800703c:	f481 5100 	eor.w	r1, r1, #8192	; 0x2000
 8007040:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8007044:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8007048:	f820 1022 	strh.w	r1, [r0, r2, lsl #2]
 800704c:	e792      	b.n	8006f74 <HAL_PCD_IRQHandler+0x89c>
 800704e:	b293      	uxth	r3, r2
 8007050:	f1be 0f01 	cmp.w	lr, #1
 8007054:	f47f ac4d 	bne.w	80068f2 <HAL_PCD_IRQHandler+0x21a>
 8007058:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800705c:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8007060:	f201 4104 	addw	r1, r1, #1028	; 0x404
 8007064:	b292      	uxth	r2, r2
 8007066:	528b      	strh	r3, [r1, r2]
 8007068:	e443      	b.n	80068f2 <HAL_PCD_IRQHandler+0x21a>
 800706a:	b9ba      	cbnz	r2, 800709c <HAL_PCD_IRQHandler+0x9c4>
 800706c:	4698      	mov	r8, r3
 800706e:	f88e 204c 	strb.w	r2, [lr, #76]	; 0x4c
 8007072:	e41c      	b.n	80068ae <HAL_PCD_IRQHandler+0x1d6>
 8007074:	fa1f fe82 	uxth.w	lr, r2
 8007078:	2b01      	cmp	r3, #1
 800707a:	f47f ae80 	bne.w	8006d7e <HAL_PCD_IRQHandler+0x6a6>
 800707e:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8007082:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8007086:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 800708a:	b29b      	uxth	r3, r3
 800708c:	f822 e003 	strh.w	lr, [r2, r3]
 8007090:	e675      	b.n	8006d7e <HAL_PCD_IRQHandler+0x6a6>
 8007092:	bb22      	cbnz	r2, 80070de <HAL_PCD_IRQHandler+0xa06>
 8007094:	46f0      	mov	r8, lr
 8007096:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800709a:	e654      	b.n	8006d46 <HAL_PCD_IRQHandler+0x66e>
 800709c:	2300      	movs	r3, #0
 800709e:	f88e 304c 	strb.w	r3, [lr, #76]	; 0x4c
 80070a2:	f8ce 3048 	str.w	r3, [lr, #72]	; 0x48
 80070a6:	f897 e029 	ldrb.w	lr, [r7, #41]	; 0x29
 80070aa:	f1be 0f00 	cmp.w	lr, #0
 80070ae:	d1ce      	bne.n	800704e <HAL_PCD_IRQHandler+0x976>
 80070b0:	4690      	mov	r8, r2
 80070b2:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80070b6:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80070ba:	b29b      	uxth	r3, r3
 80070bc:	f201 4104 	addw	r1, r1, #1028	; 0x404
 80070c0:	4419      	add	r1, r3
 80070c2:	b293      	uxth	r3, r2
 80070c4:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 80070c8:	d82b      	bhi.n	8007122 <HAL_PCD_IRQHandler+0xa4a>
 80070ca:	ea4f 0258 	mov.w	r2, r8, lsr #1
 80070ce:	f018 0f01 	tst.w	r8, #1
 80070d2:	bf18      	it	ne
 80070d4:	3201      	addne	r2, #1
 80070d6:	0292      	lsls	r2, r2, #10
 80070d8:	b292      	uxth	r2, r2
 80070da:	800a      	strh	r2, [r1, #0]
 80070dc:	e409      	b.n	80068f2 <HAL_PCD_IRQHandler+0x21a>
 80070de:	f04f 0e00 	mov.w	lr, #0
 80070e2:	f8c3 e048 	str.w	lr, [r3, #72]	; 0x48
 80070e6:	f883 e04c 	strb.w	lr, [r3, #76]	; 0x4c
 80070ea:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d1c0      	bne.n	8007074 <HAL_PCD_IRQHandler+0x99c>
 80070f2:	4690      	mov	r8, r2
 80070f4:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80070f8:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 80070fc:	f201 410c 	addw	r1, r1, #1036	; 0x40c
 8007100:	b29b      	uxth	r3, r3
 8007102:	440b      	add	r3, r1
 8007104:	fa1f fe82 	uxth.w	lr, r2
 8007108:	f1b8 0f3e 	cmp.w	r8, #62	; 0x3e
 800710c:	d818      	bhi.n	8007140 <HAL_PCD_IRQHandler+0xa68>
 800710e:	ea4f 0258 	mov.w	r2, r8, lsr #1
 8007112:	f018 0f01 	tst.w	r8, #1
 8007116:	bf18      	it	ne
 8007118:	3201      	addne	r2, #1
 800711a:	0292      	lsls	r2, r2, #10
 800711c:	b292      	uxth	r2, r2
 800711e:	801a      	strh	r2, [r3, #0]
 8007120:	e62d      	b.n	8006d7e <HAL_PCD_IRQHandler+0x6a6>
 8007122:	ea4f 1258 	mov.w	r2, r8, lsr #5
 8007126:	f8df e034 	ldr.w	lr, [pc, #52]	; 800715c <HAL_PCD_IRQHandler+0xa84>
 800712a:	f018 0f1f 	tst.w	r8, #31
 800712e:	bf08      	it	eq
 8007130:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8007134:	ea4e 2282 	orr.w	r2, lr, r2, lsl #10
 8007138:	b292      	uxth	r2, r2
 800713a:	800a      	strh	r2, [r1, #0]
 800713c:	f7ff bbd9 	b.w	80068f2 <HAL_PCD_IRQHandler+0x21a>
 8007140:	ea4f 1258 	mov.w	r2, r8, lsr #5
 8007144:	4905      	ldr	r1, [pc, #20]	; (800715c <HAL_PCD_IRQHandler+0xa84>)
 8007146:	f018 0f1f 	tst.w	r8, #31
 800714a:	bf08      	it	eq
 800714c:	f102 32ff 	addeq.w	r2, r2, #4294967295
 8007150:	ea41 2282 	orr.w	r2, r1, r2, lsl #10
 8007154:	b292      	uxth	r2, r2
 8007156:	801a      	strh	r2, [r3, #0]
 8007158:	e611      	b.n	8006d7e <HAL_PCD_IRQHandler+0x6a6>
 800715a:	bf00      	nop
 800715c:	ffff8000 	.word	0xffff8000

08007160 <HAL_PCD_SetAddress>:
 8007160:	f890 22a8 	ldrb.w	r2, [r0, #680]	; 0x2a8
 8007164:	2a01      	cmp	r2, #1
 8007166:	d00e      	beq.n	8007186 <HAL_PCD_SetAddress+0x26>
 8007168:	b510      	push	{r4, lr}
 800716a:	2201      	movs	r2, #1
 800716c:	4604      	mov	r4, r0
 800716e:	6800      	ldr	r0, [r0, #0]
 8007170:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8007174:	f884 22a8 	strb.w	r2, [r4, #680]	; 0x2a8
 8007178:	f002 faee 	bl	8009758 <USB_SetDevAddress>
 800717c:	2300      	movs	r3, #0
 800717e:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007182:	4618      	mov	r0, r3
 8007184:	bd10      	pop	{r4, pc}
 8007186:	2002      	movs	r0, #2
 8007188:	4770      	bx	lr
 800718a:	bf00      	nop

0800718c <HAL_PCD_EP_Open>:
 800718c:	f001 0c07 	and.w	ip, r1, #7
 8007190:	0609      	lsls	r1, r1, #24
 8007192:	b510      	push	{r4, lr}
 8007194:	4604      	mov	r4, r0
 8007196:	d425      	bmi.n	80071e4 <HAL_PCD_EP_Open+0x58>
 8007198:	f04f 0e00 	mov.w	lr, #0
 800719c:	eb0c 008c 	add.w	r0, ip, ip, lsl #2
 80071a0:	00c0      	lsls	r0, r0, #3
 80071a2:	f500 71b4 	add.w	r1, r0, #360	; 0x168
 80071a6:	4420      	add	r0, r4
 80071a8:	f880 e169 	strb.w	lr, [r0, #361]	; 0x169
 80071ac:	4421      	add	r1, r4
 80071ae:	610a      	str	r2, [r1, #16]
 80071b0:	784a      	ldrb	r2, [r1, #1]
 80071b2:	f881 c000 	strb.w	ip, [r1]
 80071b6:	70cb      	strb	r3, [r1, #3]
 80071b8:	b10a      	cbz	r2, 80071be <HAL_PCD_EP_Open+0x32>
 80071ba:	f8a1 c00e 	strh.w	ip, [r1, #14]
 80071be:	2b02      	cmp	r3, #2
 80071c0:	bf04      	itt	eq
 80071c2:	2300      	moveq	r3, #0
 80071c4:	710b      	strbeq	r3, [r1, #4]
 80071c6:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80071ca:	2b01      	cmp	r3, #1
 80071cc:	d019      	beq.n	8007202 <HAL_PCD_EP_Open+0x76>
 80071ce:	2301      	movs	r3, #1
 80071d0:	6820      	ldr	r0, [r4, #0]
 80071d2:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80071d6:	f001 fce9 	bl	8008bac <USB_ActivateEndpoint>
 80071da:	2300      	movs	r3, #0
 80071dc:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80071e0:	4618      	mov	r0, r3
 80071e2:	bd10      	pop	{r4, pc}
 80071e4:	f10c 0101 	add.w	r1, ip, #1
 80071e8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80071ec:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80071f0:	2001      	movs	r0, #1
 80071f2:	7048      	strb	r0, [r1, #1]
 80071f4:	eb0c 0100 	add.w	r1, ip, r0
 80071f8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80071fc:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8007200:	e7d5      	b.n	80071ae <HAL_PCD_EP_Open+0x22>
 8007202:	2002      	movs	r0, #2
 8007204:	bd10      	pop	{r4, pc}
 8007206:	bf00      	nop

08007208 <HAL_PCD_EP_Close>:
 8007208:	060b      	lsls	r3, r1, #24
 800720a:	b510      	push	{r4, lr}
 800720c:	4604      	mov	r4, r0
 800720e:	d41b      	bmi.n	8007248 <HAL_PCD_EP_Close+0x40>
 8007210:	f001 0307 	and.w	r3, r1, #7
 8007214:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8007218:	00d2      	lsls	r2, r2, #3
 800721a:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 800721e:	4401      	add	r1, r0
 8007220:	4402      	add	r2, r0
 8007222:	2000      	movs	r0, #0
 8007224:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007228:	700b      	strb	r3, [r1, #0]
 800722a:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800722e:	2b01      	cmp	r3, #1
 8007230:	d019      	beq.n	8007266 <HAL_PCD_EP_Close+0x5e>
 8007232:	2301      	movs	r3, #1
 8007234:	6820      	ldr	r0, [r4, #0]
 8007236:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800723a:	f001 fe2b 	bl	8008e94 <USB_DeactivateEndpoint>
 800723e:	2300      	movs	r3, #0
 8007240:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007244:	4618      	mov	r0, r3
 8007246:	bd10      	pop	{r4, pc}
 8007248:	2001      	movs	r0, #1
 800724a:	f001 0307 	and.w	r3, r1, #7
 800724e:	181a      	adds	r2, r3, r0
 8007250:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007254:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 8007258:	4611      	mov	r1, r2
 800725a:	7050      	strb	r0, [r2, #1]
 800725c:	700b      	strb	r3, [r1, #0]
 800725e:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 8007262:	2b01      	cmp	r3, #1
 8007264:	d1e5      	bne.n	8007232 <HAL_PCD_EP_Close+0x2a>
 8007266:	2002      	movs	r0, #2
 8007268:	bd10      	pop	{r4, pc}
 800726a:	bf00      	nop

0800726c <HAL_PCD_EP_Receive>:
 800726c:	b510      	push	{r4, lr}
 800726e:	2400      	movs	r4, #0
 8007270:	f001 0e07 	and.w	lr, r1, #7
 8007274:	eb0e 018e 	add.w	r1, lr, lr, lsl #2
 8007278:	eb00 0cc1 	add.w	ip, r0, r1, lsl #3
 800727c:	e9cc 235f 	strd	r2, r3, [ip, #380]	; 0x17c
 8007280:	6800      	ldr	r0, [r0, #0]
 8007282:	f50c 71b4 	add.w	r1, ip, #360	; 0x168
 8007286:	f8cc 4184 	str.w	r4, [ip, #388]	; 0x184
 800728a:	f88c 4169 	strb.w	r4, [ip, #361]	; 0x169
 800728e:	f88c e168 	strb.w	lr, [ip, #360]	; 0x168
 8007292:	f001 fedf 	bl	8009054 <USB_EPStartXfer>
 8007296:	4620      	mov	r0, r4
 8007298:	bd10      	pop	{r4, pc}
 800729a:	bf00      	nop

0800729c <HAL_PCD_EP_GetRxCount>:
 800729c:	f001 0107 	and.w	r1, r1, #7
 80072a0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80072a4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80072a8:	f8d1 0184 	ldr.w	r0, [r1, #388]	; 0x184
 80072ac:	4770      	bx	lr
 80072ae:	bf00      	nop

080072b0 <HAL_PCD_EP_Transmit>:
 80072b0:	b570      	push	{r4, r5, r6, lr}
 80072b2:	2601      	movs	r6, #1
 80072b4:	2500      	movs	r5, #0
 80072b6:	4604      	mov	r4, r0
 80072b8:	f001 0e07 	and.w	lr, r1, #7
 80072bc:	eb0e 0c8e 	add.w	ip, lr, lr, lsl #2
 80072c0:	eb0e 0106 	add.w	r1, lr, r6
 80072c4:	eb00 0ccc 	add.w	ip, r0, ip, lsl #3
 80072c8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80072cc:	f8cc 203c 	str.w	r2, [ip, #60]	; 0x3c
 80072d0:	f88c e028 	strb.w	lr, [ip, #40]	; 0x28
 80072d4:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 80072d8:	f8cc 3048 	str.w	r3, [ip, #72]	; 0x48
 80072dc:	f88c 604c 	strb.w	r6, [ip, #76]	; 0x4c
 80072e0:	f8cc 5044 	str.w	r5, [ip, #68]	; 0x44
 80072e4:	f88c 6029 	strb.w	r6, [ip, #41]	; 0x29
 80072e8:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 80072ec:	6800      	ldr	r0, [r0, #0]
 80072ee:	f001 feb1 	bl	8009054 <USB_EPStartXfer>
 80072f2:	4628      	mov	r0, r5
 80072f4:	bd70      	pop	{r4, r5, r6, pc}
 80072f6:	bf00      	nop

080072f8 <HAL_PCD_EP_SetStall>:
 80072f8:	6843      	ldr	r3, [r0, #4]
 80072fa:	b510      	push	{r4, lr}
 80072fc:	4604      	mov	r4, r0
 80072fe:	f001 0007 	and.w	r0, r1, #7
 8007302:	4298      	cmp	r0, r3
 8007304:	d82d      	bhi.n	8007362 <HAL_PCD_EP_SetStall+0x6a>
 8007306:	060b      	lsls	r3, r1, #24
 8007308:	d41a      	bmi.n	8007340 <HAL_PCD_EP_SetStall+0x48>
 800730a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800730e:	00c9      	lsls	r1, r1, #3
 8007310:	f501 72b4 	add.w	r2, r1, #360	; 0x168
 8007314:	1863      	adds	r3, r4, r1
 8007316:	18a1      	adds	r1, r4, r2
 8007318:	2200      	movs	r2, #0
 800731a:	f883 2169 	strb.w	r2, [r3, #361]	; 0x169
 800731e:	2301      	movs	r3, #1
 8007320:	7008      	strb	r0, [r1, #0]
 8007322:	708b      	strb	r3, [r1, #2]
 8007324:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 8007328:	429a      	cmp	r2, r3
 800732a:	d018      	beq.n	800735e <HAL_PCD_EP_SetStall+0x66>
 800732c:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8007330:	6820      	ldr	r0, [r4, #0]
 8007332:	f002 f999 	bl	8009668 <USB_EPSetStall>
 8007336:	2300      	movs	r3, #0
 8007338:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 800733c:	4618      	mov	r0, r3
 800733e:	bd10      	pop	{r4, pc}
 8007340:	2201      	movs	r2, #1
 8007342:	1883      	adds	r3, r0, r2
 8007344:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8007348:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800734c:	705a      	strb	r2, [r3, #1]
 800734e:	4619      	mov	r1, r3
 8007350:	2301      	movs	r3, #1
 8007352:	7008      	strb	r0, [r1, #0]
 8007354:	708b      	strb	r3, [r1, #2]
 8007356:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 800735a:	429a      	cmp	r2, r3
 800735c:	d1e6      	bne.n	800732c <HAL_PCD_EP_SetStall+0x34>
 800735e:	2002      	movs	r0, #2
 8007360:	bd10      	pop	{r4, pc}
 8007362:	2001      	movs	r0, #1
 8007364:	bd10      	pop	{r4, pc}
 8007366:	bf00      	nop

08007368 <HAL_PCD_EP_ClrStall>:
 8007368:	b538      	push	{r3, r4, r5, lr}
 800736a:	6843      	ldr	r3, [r0, #4]
 800736c:	f001 020f 	and.w	r2, r1, #15
 8007370:	429a      	cmp	r2, r3
 8007372:	d832      	bhi.n	80073da <HAL_PCD_EP_ClrStall+0x72>
 8007374:	060b      	lsls	r3, r1, #24
 8007376:	4604      	mov	r4, r0
 8007378:	d41c      	bmi.n	80073b4 <HAL_PCD_EP_ClrStall+0x4c>
 800737a:	f001 0307 	and.w	r3, r1, #7
 800737e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8007382:	00d2      	lsls	r2, r2, #3
 8007384:	f502 71b4 	add.w	r1, r2, #360	; 0x168
 8007388:	4401      	add	r1, r0
 800738a:	4402      	add	r2, r0
 800738c:	2500      	movs	r5, #0
 800738e:	2000      	movs	r0, #0
 8007390:	f882 0169 	strb.w	r0, [r2, #361]	; 0x169
 8007394:	700b      	strb	r3, [r1, #0]
 8007396:	708d      	strb	r5, [r1, #2]
 8007398:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 800739c:	2b01      	cmp	r3, #1
 800739e:	d01a      	beq.n	80073d6 <HAL_PCD_EP_ClrStall+0x6e>
 80073a0:	2301      	movs	r3, #1
 80073a2:	6820      	ldr	r0, [r4, #0]
 80073a4:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80073a8:	f002 f986 	bl	80096b8 <USB_EPClearStall>
 80073ac:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 80073b0:	4628      	mov	r0, r5
 80073b2:	bd38      	pop	{r3, r4, r5, pc}
 80073b4:	2001      	movs	r0, #1
 80073b6:	f001 0307 	and.w	r3, r1, #7
 80073ba:	181a      	adds	r2, r3, r0
 80073bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80073c0:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 80073c4:	4611      	mov	r1, r2
 80073c6:	2500      	movs	r5, #0
 80073c8:	7050      	strb	r0, [r2, #1]
 80073ca:	700b      	strb	r3, [r1, #0]
 80073cc:	708d      	strb	r5, [r1, #2]
 80073ce:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80073d2:	2b01      	cmp	r3, #1
 80073d4:	d1e4      	bne.n	80073a0 <HAL_PCD_EP_ClrStall+0x38>
 80073d6:	2002      	movs	r0, #2
 80073d8:	bd38      	pop	{r3, r4, r5, pc}
 80073da:	2001      	movs	r0, #1
 80073dc:	bd38      	pop	{r3, r4, r5, pc}
 80073de:	bf00      	nop

080073e0 <HAL_PCDEx_PMAConfig>:
 80073e0:	f011 0f80 	tst.w	r1, #128	; 0x80
 80073e4:	d00b      	beq.n	80073fe <HAL_PCDEx_PMAConfig+0x1e>
 80073e6:	f001 0107 	and.w	r1, r1, #7
 80073ea:	3101      	adds	r1, #1
 80073ec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80073f0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80073f4:	b95a      	cbnz	r2, 800740e <HAL_PCDEx_PMAConfig+0x2e>
 80073f6:	2000      	movs	r0, #0
 80073f8:	80cb      	strh	r3, [r1, #6]
 80073fa:	730a      	strb	r2, [r1, #12]
 80073fc:	4770      	bx	lr
 80073fe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007402:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8007406:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 800740a:	2a00      	cmp	r2, #0
 800740c:	d0f3      	beq.n	80073f6 <HAL_PCDEx_PMAConfig+0x16>
 800740e:	2201      	movs	r2, #1
 8007410:	2000      	movs	r0, #0
 8007412:	608b      	str	r3, [r1, #8]
 8007414:	730a      	strb	r2, [r1, #12]
 8007416:	4770      	bx	lr

08007418 <RCC_SetFlashLatencyFromMSIRange>:
 8007418:	4b1d      	ldr	r3, [pc, #116]	; (8007490 <RCC_SetFlashLatencyFromMSIRange+0x78>)
 800741a:	b082      	sub	sp, #8
 800741c:	689a      	ldr	r2, [r3, #8]
 800741e:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 8007422:	d116      	bne.n	8007452 <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007424:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007426:	00d2      	lsls	r2, r2, #3
 8007428:	d420      	bmi.n	800746c <RCC_SetFlashLatencyFromMSIRange+0x54>
 800742a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800742c:	4919      	ldr	r1, [pc, #100]	; (8007494 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 800742e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007432:	625a      	str	r2, [r3, #36]	; 0x24
 8007434:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007436:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800743a:	9201      	str	r2, [sp, #4]
 800743c:	9a01      	ldr	r2, [sp, #4]
 800743e:	680a      	ldr	r2, [r1, #0]
 8007440:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8007442:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 8007446:	f021 5180 	bic.w	r1, r1, #268435456	; 0x10000000
 800744a:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 800744e:	6259      	str	r1, [r3, #36]	; 0x24
 8007450:	d013      	beq.n	800747a <RCC_SetFlashLatencyFromMSIRange+0x62>
 8007452:	2000      	movs	r0, #0
 8007454:	4a10      	ldr	r2, [pc, #64]	; (8007498 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8007456:	6813      	ldr	r3, [r2, #0]
 8007458:	f023 0301 	bic.w	r3, r3, #1
 800745c:	4303      	orrs	r3, r0
 800745e:	6013      	str	r3, [r2, #0]
 8007460:	6813      	ldr	r3, [r2, #0]
 8007462:	f003 0301 	and.w	r3, r3, #1
 8007466:	4058      	eors	r0, r3
 8007468:	b002      	add	sp, #8
 800746a:	4770      	bx	lr
 800746c:	4b09      	ldr	r3, [pc, #36]	; (8007494 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 800746e:	681a      	ldr	r2, [r3, #0]
 8007470:	f402 52c0 	and.w	r2, r2, #6144	; 0x1800
 8007474:	f5b2 5fc0 	cmp.w	r2, #6144	; 0x1800
 8007478:	d1eb      	bne.n	8007452 <RCC_SetFlashLatencyFromMSIRange+0x3a>
 800747a:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 800747e:	d1e8      	bne.n	8007452 <RCC_SetFlashLatencyFromMSIRange+0x3a>
 8007480:	4a05      	ldr	r2, [pc, #20]	; (8007498 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8007482:	2001      	movs	r0, #1
 8007484:	6813      	ldr	r3, [r2, #0]
 8007486:	f043 0304 	orr.w	r3, r3, #4
 800748a:	6013      	str	r3, [r2, #0]
 800748c:	e7e2      	b.n	8007454 <RCC_SetFlashLatencyFromMSIRange+0x3c>
 800748e:	bf00      	nop
 8007490:	40023800 	.word	0x40023800
 8007494:	40007000 	.word	0x40007000
 8007498:	40023c00 	.word	0x40023c00

0800749c <HAL_RCC_OscConfig>:
 800749c:	2800      	cmp	r0, #0
 800749e:	f000 81f8 	beq.w	8007892 <HAL_RCC_OscConfig+0x3f6>
 80074a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80074a6:	4aa2      	ldr	r2, [pc, #648]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80074a8:	6803      	ldr	r3, [r0, #0]
 80074aa:	6895      	ldr	r5, [r2, #8]
 80074ac:	6896      	ldr	r6, [r2, #8]
 80074ae:	07d9      	lsls	r1, r3, #31
 80074b0:	4604      	mov	r4, r0
 80074b2:	b083      	sub	sp, #12
 80074b4:	f005 050c 	and.w	r5, r5, #12
 80074b8:	f406 3680 	and.w	r6, r6, #65536	; 0x10000
 80074bc:	d52e      	bpl.n	800751c <HAL_RCC_OscConfig+0x80>
 80074be:	2d08      	cmp	r5, #8
 80074c0:	f000 8128 	beq.w	8007714 <HAL_RCC_OscConfig+0x278>
 80074c4:	2d0c      	cmp	r5, #12
 80074c6:	f000 8122 	beq.w	800770e <HAL_RCC_OscConfig+0x272>
 80074ca:	6863      	ldr	r3, [r4, #4]
 80074cc:	2b01      	cmp	r3, #1
 80074ce:	d00f      	beq.n	80074f0 <HAL_RCC_OscConfig+0x54>
 80074d0:	2b00      	cmp	r3, #0
 80074d2:	f000 8180 	beq.w	80077d6 <HAL_RCC_OscConfig+0x33a>
 80074d6:	2b05      	cmp	r3, #5
 80074d8:	4b95      	ldr	r3, [pc, #596]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80074da:	681a      	ldr	r2, [r3, #0]
 80074dc:	f000 81db 	beq.w	8007896 <HAL_RCC_OscConfig+0x3fa>
 80074e0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80074e4:	601a      	str	r2, [r3, #0]
 80074e6:	681a      	ldr	r2, [r3, #0]
 80074e8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80074ec:	601a      	str	r2, [r3, #0]
 80074ee:	e004      	b.n	80074fa <HAL_RCC_OscConfig+0x5e>
 80074f0:	4a8f      	ldr	r2, [pc, #572]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80074f2:	6813      	ldr	r3, [r2, #0]
 80074f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80074f8:	6013      	str	r3, [r2, #0]
 80074fa:	f7fe f839 	bl	8005570 <HAL_GetTick>
 80074fe:	f8df 8230 	ldr.w	r8, [pc, #560]	; 8007730 <HAL_RCC_OscConfig+0x294>
 8007502:	4607      	mov	r7, r0
 8007504:	e005      	b.n	8007512 <HAL_RCC_OscConfig+0x76>
 8007506:	f7fe f833 	bl	8005570 <HAL_GetTick>
 800750a:	1bc0      	subs	r0, r0, r7
 800750c:	2864      	cmp	r0, #100	; 0x64
 800750e:	f200 815e 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 8007512:	f8d8 3000 	ldr.w	r3, [r8]
 8007516:	039b      	lsls	r3, r3, #14
 8007518:	d5f5      	bpl.n	8007506 <HAL_RCC_OscConfig+0x6a>
 800751a:	6823      	ldr	r3, [r4, #0]
 800751c:	0799      	lsls	r1, r3, #30
 800751e:	d522      	bpl.n	8007566 <HAL_RCC_OscConfig+0xca>
 8007520:	2d04      	cmp	r5, #4
 8007522:	f000 8114 	beq.w	800774e <HAL_RCC_OscConfig+0x2b2>
 8007526:	2d0c      	cmp	r5, #12
 8007528:	f000 810e 	beq.w	8007748 <HAL_RCC_OscConfig+0x2ac>
 800752c:	68e3      	ldr	r3, [r4, #12]
 800752e:	2b00      	cmp	r3, #0
 8007530:	f000 8179 	beq.w	8007826 <HAL_RCC_OscConfig+0x38a>
 8007534:	2201      	movs	r2, #1
 8007536:	4b7f      	ldr	r3, [pc, #508]	; (8007734 <HAL_RCC_OscConfig+0x298>)
 8007538:	4f7d      	ldr	r7, [pc, #500]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 800753a:	601a      	str	r2, [r3, #0]
 800753c:	f7fe f818 	bl	8005570 <HAL_GetTick>
 8007540:	4606      	mov	r6, r0
 8007542:	e005      	b.n	8007550 <HAL_RCC_OscConfig+0xb4>
 8007544:	f7fe f814 	bl	8005570 <HAL_GetTick>
 8007548:	1b80      	subs	r0, r0, r6
 800754a:	2802      	cmp	r0, #2
 800754c:	f200 813f 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 8007550:	683b      	ldr	r3, [r7, #0]
 8007552:	079b      	lsls	r3, r3, #30
 8007554:	d5f6      	bpl.n	8007544 <HAL_RCC_OscConfig+0xa8>
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	6922      	ldr	r2, [r4, #16]
 800755a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800755e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007562:	607b      	str	r3, [r7, #4]
 8007564:	6823      	ldr	r3, [r4, #0]
 8007566:	06d9      	lsls	r1, r3, #27
 8007568:	d525      	bpl.n	80075b6 <HAL_RCC_OscConfig+0x11a>
 800756a:	2d00      	cmp	r5, #0
 800756c:	f000 8098 	beq.w	80076a0 <HAL_RCC_OscConfig+0x204>
 8007570:	69a3      	ldr	r3, [r4, #24]
 8007572:	2b00      	cmp	r3, #0
 8007574:	f000 816a 	beq.w	800784c <HAL_RCC_OscConfig+0x3b0>
 8007578:	2201      	movs	r2, #1
 800757a:	4b6e      	ldr	r3, [pc, #440]	; (8007734 <HAL_RCC_OscConfig+0x298>)
 800757c:	4e6c      	ldr	r6, [pc, #432]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 800757e:	621a      	str	r2, [r3, #32]
 8007580:	f7fd fff6 	bl	8005570 <HAL_GetTick>
 8007584:	4607      	mov	r7, r0
 8007586:	e005      	b.n	8007594 <HAL_RCC_OscConfig+0xf8>
 8007588:	f7fd fff2 	bl	8005570 <HAL_GetTick>
 800758c:	1bc0      	subs	r0, r0, r7
 800758e:	2802      	cmp	r0, #2
 8007590:	f200 811d 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 8007594:	6833      	ldr	r3, [r6, #0]
 8007596:	059b      	lsls	r3, r3, #22
 8007598:	d5f6      	bpl.n	8007588 <HAL_RCC_OscConfig+0xec>
 800759a:	6873      	ldr	r3, [r6, #4]
 800759c:	6a22      	ldr	r2, [r4, #32]
 800759e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80075a2:	4313      	orrs	r3, r2
 80075a4:	6073      	str	r3, [r6, #4]
 80075a6:	6873      	ldr	r3, [r6, #4]
 80075a8:	69e2      	ldr	r2, [r4, #28]
 80075aa:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80075ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80075b2:	6073      	str	r3, [r6, #4]
 80075b4:	6823      	ldr	r3, [r4, #0]
 80075b6:	0719      	lsls	r1, r3, #28
 80075b8:	d516      	bpl.n	80075e8 <HAL_RCC_OscConfig+0x14c>
 80075ba:	6963      	ldr	r3, [r4, #20]
 80075bc:	2b00      	cmp	r3, #0
 80075be:	f000 8121 	beq.w	8007804 <HAL_RCC_OscConfig+0x368>
 80075c2:	2201      	movs	r2, #1
 80075c4:	4b5b      	ldr	r3, [pc, #364]	; (8007734 <HAL_RCC_OscConfig+0x298>)
 80075c6:	4f5a      	ldr	r7, [pc, #360]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80075c8:	f8c3 2680 	str.w	r2, [r3, #1664]	; 0x680
 80075cc:	f7fd ffd0 	bl	8005570 <HAL_GetTick>
 80075d0:	4606      	mov	r6, r0
 80075d2:	e005      	b.n	80075e0 <HAL_RCC_OscConfig+0x144>
 80075d4:	f7fd ffcc 	bl	8005570 <HAL_GetTick>
 80075d8:	1b80      	subs	r0, r0, r6
 80075da:	2802      	cmp	r0, #2
 80075dc:	f200 80f7 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 80075e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80075e2:	079a      	lsls	r2, r3, #30
 80075e4:	d5f6      	bpl.n	80075d4 <HAL_RCC_OscConfig+0x138>
 80075e6:	6823      	ldr	r3, [r4, #0]
 80075e8:	075e      	lsls	r6, r3, #29
 80075ea:	d53b      	bpl.n	8007664 <HAL_RCC_OscConfig+0x1c8>
 80075ec:	4b50      	ldr	r3, [pc, #320]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80075ee:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80075f0:	00d0      	lsls	r0, r2, #3
 80075f2:	f100 8129 	bmi.w	8007848 <HAL_RCC_OscConfig+0x3ac>
 80075f6:	2601      	movs	r6, #1
 80075f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80075fa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80075fe:	625a      	str	r2, [r3, #36]	; 0x24
 8007600:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007602:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007606:	9301      	str	r3, [sp, #4]
 8007608:	9b01      	ldr	r3, [sp, #4]
 800760a:	4f4b      	ldr	r7, [pc, #300]	; (8007738 <HAL_RCC_OscConfig+0x29c>)
 800760c:	683b      	ldr	r3, [r7, #0]
 800760e:	05d9      	lsls	r1, r3, #23
 8007610:	f140 80cc 	bpl.w	80077ac <HAL_RCC_OscConfig+0x310>
 8007614:	68a3      	ldr	r3, [r4, #8]
 8007616:	2b01      	cmp	r3, #1
 8007618:	f000 8175 	beq.w	8007906 <HAL_RCC_OscConfig+0x46a>
 800761c:	2b00      	cmp	r3, #0
 800761e:	f000 80a9 	beq.w	8007774 <HAL_RCC_OscConfig+0x2d8>
 8007622:	2b05      	cmp	r3, #5
 8007624:	4b42      	ldr	r3, [pc, #264]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 8007626:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007628:	f000 818b 	beq.w	8007942 <HAL_RCC_OscConfig+0x4a6>
 800762c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007630:	635a      	str	r2, [r3, #52]	; 0x34
 8007632:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007634:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007638:	635a      	str	r2, [r3, #52]	; 0x34
 800763a:	f7fd ff99 	bl	8005570 <HAL_GetTick>
 800763e:	f241 3988 	movw	r9, #5000	; 0x1388
 8007642:	4607      	mov	r7, r0
 8007644:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 8007730 <HAL_RCC_OscConfig+0x294>
 8007648:	e005      	b.n	8007656 <HAL_RCC_OscConfig+0x1ba>
 800764a:	f7fd ff91 	bl	8005570 <HAL_GetTick>
 800764e:	1bc0      	subs	r0, r0, r7
 8007650:	4548      	cmp	r0, r9
 8007652:	f200 80bc 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 8007656:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
 800765a:	059b      	lsls	r3, r3, #22
 800765c:	d5f5      	bpl.n	800764a <HAL_RCC_OscConfig+0x1ae>
 800765e:	2e00      	cmp	r6, #0
 8007660:	f040 814b 	bne.w	80078fa <HAL_RCC_OscConfig+0x45e>
 8007664:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007666:	b1b8      	cbz	r0, 8007698 <HAL_RCC_OscConfig+0x1fc>
 8007668:	2d0c      	cmp	r5, #12
 800766a:	f000 8152 	beq.w	8007912 <HAL_RCC_OscConfig+0x476>
 800766e:	2802      	cmp	r0, #2
 8007670:	f04f 0200 	mov.w	r2, #0
 8007674:	4b2f      	ldr	r3, [pc, #188]	; (8007734 <HAL_RCC_OscConfig+0x298>)
 8007676:	f000 8116 	beq.w	80078a6 <HAL_RCC_OscConfig+0x40a>
 800767a:	661a      	str	r2, [r3, #96]	; 0x60
 800767c:	f7fd ff78 	bl	8005570 <HAL_GetTick>
 8007680:	4d2b      	ldr	r5, [pc, #172]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 8007682:	4604      	mov	r4, r0
 8007684:	e005      	b.n	8007692 <HAL_RCC_OscConfig+0x1f6>
 8007686:	f7fd ff73 	bl	8005570 <HAL_GetTick>
 800768a:	1b00      	subs	r0, r0, r4
 800768c:	2802      	cmp	r0, #2
 800768e:	f200 809e 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 8007692:	682b      	ldr	r3, [r5, #0]
 8007694:	019b      	lsls	r3, r3, #6
 8007696:	d4f6      	bmi.n	8007686 <HAL_RCC_OscConfig+0x1ea>
 8007698:	2000      	movs	r0, #0
 800769a:	b003      	add	sp, #12
 800769c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80076a0:	4b23      	ldr	r3, [pc, #140]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	059a      	lsls	r2, r3, #22
 80076a6:	d502      	bpl.n	80076ae <HAL_RCC_OscConfig+0x212>
 80076a8:	69a3      	ldr	r3, [r4, #24]
 80076aa:	2b00      	cmp	r3, #0
 80076ac:	d03b      	beq.n	8007726 <HAL_RCC_OscConfig+0x28a>
 80076ae:	4e20      	ldr	r6, [pc, #128]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80076b0:	6a20      	ldr	r0, [r4, #32]
 80076b2:	6873      	ldr	r3, [r6, #4]
 80076b4:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80076b8:	4298      	cmp	r0, r3
 80076ba:	f240 80d7 	bls.w	800786c <HAL_RCC_OscConfig+0x3d0>
 80076be:	f7ff feab 	bl	8007418 <RCC_SetFlashLatencyFromMSIRange>
 80076c2:	2800      	cmp	r0, #0
 80076c4:	d12f      	bne.n	8007726 <HAL_RCC_OscConfig+0x28a>
 80076c6:	6872      	ldr	r2, [r6, #4]
 80076c8:	6a23      	ldr	r3, [r4, #32]
 80076ca:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80076ce:	431a      	orrs	r2, r3
 80076d0:	6072      	str	r2, [r6, #4]
 80076d2:	6872      	ldr	r2, [r6, #4]
 80076d4:	69e1      	ldr	r1, [r4, #28]
 80076d6:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80076da:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 80076de:	6072      	str	r2, [r6, #4]
 80076e0:	4a13      	ldr	r2, [pc, #76]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 80076e2:	0b5b      	lsrs	r3, r3, #13
 80076e4:	6891      	ldr	r1, [r2, #8]
 80076e6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80076ea:	3301      	adds	r3, #1
 80076ec:	fa02 f303 	lsl.w	r3, r2, r3
 80076f0:	4a12      	ldr	r2, [pc, #72]	; (800773c <HAL_RCC_OscConfig+0x2a0>)
 80076f2:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80076f6:	5c52      	ldrb	r2, [r2, r1]
 80076f8:	4811      	ldr	r0, [pc, #68]	; (8007740 <HAL_RCC_OscConfig+0x2a4>)
 80076fa:	40d3      	lsrs	r3, r2
 80076fc:	4a11      	ldr	r2, [pc, #68]	; (8007744 <HAL_RCC_OscConfig+0x2a8>)
 80076fe:	6003      	str	r3, [r0, #0]
 8007700:	6810      	ldr	r0, [r2, #0]
 8007702:	f7fd fef3 	bl	80054ec <HAL_InitTick>
 8007706:	2800      	cmp	r0, #0
 8007708:	d1c7      	bne.n	800769a <HAL_RCC_OscConfig+0x1fe>
 800770a:	6823      	ldr	r3, [r4, #0]
 800770c:	e753      	b.n	80075b6 <HAL_RCC_OscConfig+0x11a>
 800770e:	2e00      	cmp	r6, #0
 8007710:	f43f aedb 	beq.w	80074ca <HAL_RCC_OscConfig+0x2e>
 8007714:	4a06      	ldr	r2, [pc, #24]	; (8007730 <HAL_RCC_OscConfig+0x294>)
 8007716:	6812      	ldr	r2, [r2, #0]
 8007718:	0392      	lsls	r2, r2, #14
 800771a:	f57f aeff 	bpl.w	800751c <HAL_RCC_OscConfig+0x80>
 800771e:	6862      	ldr	r2, [r4, #4]
 8007720:	2a00      	cmp	r2, #0
 8007722:	f47f aefb 	bne.w	800751c <HAL_RCC_OscConfig+0x80>
 8007726:	2001      	movs	r0, #1
 8007728:	b003      	add	sp, #12
 800772a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800772e:	bf00      	nop
 8007730:	40023800 	.word	0x40023800
 8007734:	42470000 	.word	0x42470000
 8007738:	40007000 	.word	0x40007000
 800773c:	08010824 	.word	0x08010824
 8007740:	20000020 	.word	0x20000020
 8007744:	2000002c 	.word	0x2000002c
 8007748:	2e00      	cmp	r6, #0
 800774a:	f47f aeef 	bne.w	800752c <HAL_RCC_OscConfig+0x90>
 800774e:	4a81      	ldr	r2, [pc, #516]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 8007750:	6812      	ldr	r2, [r2, #0]
 8007752:	0792      	lsls	r2, r2, #30
 8007754:	d502      	bpl.n	800775c <HAL_RCC_OscConfig+0x2c0>
 8007756:	68e2      	ldr	r2, [r4, #12]
 8007758:	2a01      	cmp	r2, #1
 800775a:	d1e4      	bne.n	8007726 <HAL_RCC_OscConfig+0x28a>
 800775c:	497d      	ldr	r1, [pc, #500]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 800775e:	6920      	ldr	r0, [r4, #16]
 8007760:	684a      	ldr	r2, [r1, #4]
 8007762:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8007766:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800776a:	604a      	str	r2, [r1, #4]
 800776c:	06d9      	lsls	r1, r3, #27
 800776e:	f57f af22 	bpl.w	80075b6 <HAL_RCC_OscConfig+0x11a>
 8007772:	e6fa      	b.n	800756a <HAL_RCC_OscConfig+0xce>
 8007774:	4f77      	ldr	r7, [pc, #476]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 8007776:	f241 3988 	movw	r9, #5000	; 0x1388
 800777a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800777c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007780:	637b      	str	r3, [r7, #52]	; 0x34
 8007782:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007784:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007788:	637b      	str	r3, [r7, #52]	; 0x34
 800778a:	f7fd fef1 	bl	8005570 <HAL_GetTick>
 800778e:	4680      	mov	r8, r0
 8007790:	e005      	b.n	800779e <HAL_RCC_OscConfig+0x302>
 8007792:	f7fd feed 	bl	8005570 <HAL_GetTick>
 8007796:	eba0 0008 	sub.w	r0, r0, r8
 800779a:	4548      	cmp	r0, r9
 800779c:	d817      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 800779e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80077a0:	0598      	lsls	r0, r3, #22
 80077a2:	d4f6      	bmi.n	8007792 <HAL_RCC_OscConfig+0x2f6>
 80077a4:	2e00      	cmp	r6, #0
 80077a6:	f43f af5d 	beq.w	8007664 <HAL_RCC_OscConfig+0x1c8>
 80077aa:	e0a6      	b.n	80078fa <HAL_RCC_OscConfig+0x45e>
 80077ac:	683b      	ldr	r3, [r7, #0]
 80077ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80077b2:	603b      	str	r3, [r7, #0]
 80077b4:	f7fd fedc 	bl	8005570 <HAL_GetTick>
 80077b8:	4680      	mov	r8, r0
 80077ba:	683b      	ldr	r3, [r7, #0]
 80077bc:	05da      	lsls	r2, r3, #23
 80077be:	f53f af29 	bmi.w	8007614 <HAL_RCC_OscConfig+0x178>
 80077c2:	f7fd fed5 	bl	8005570 <HAL_GetTick>
 80077c6:	eba0 0008 	sub.w	r0, r0, r8
 80077ca:	2864      	cmp	r0, #100	; 0x64
 80077cc:	d9f5      	bls.n	80077ba <HAL_RCC_OscConfig+0x31e>
 80077ce:	2003      	movs	r0, #3
 80077d0:	b003      	add	sp, #12
 80077d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80077d6:	4f5f      	ldr	r7, [pc, #380]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 80077d8:	683b      	ldr	r3, [r7, #0]
 80077da:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80077de:	603b      	str	r3, [r7, #0]
 80077e0:	683b      	ldr	r3, [r7, #0]
 80077e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80077e6:	603b      	str	r3, [r7, #0]
 80077e8:	f7fd fec2 	bl	8005570 <HAL_GetTick>
 80077ec:	4680      	mov	r8, r0
 80077ee:	e005      	b.n	80077fc <HAL_RCC_OscConfig+0x360>
 80077f0:	f7fd febe 	bl	8005570 <HAL_GetTick>
 80077f4:	eba0 0008 	sub.w	r0, r0, r8
 80077f8:	2864      	cmp	r0, #100	; 0x64
 80077fa:	d8e8      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 80077fc:	683b      	ldr	r3, [r7, #0]
 80077fe:	0398      	lsls	r0, r3, #14
 8007800:	d4f6      	bmi.n	80077f0 <HAL_RCC_OscConfig+0x354>
 8007802:	e68a      	b.n	800751a <HAL_RCC_OscConfig+0x7e>
 8007804:	4a54      	ldr	r2, [pc, #336]	; (8007958 <HAL_RCC_OscConfig+0x4bc>)
 8007806:	4f53      	ldr	r7, [pc, #332]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 8007808:	f8c2 3680 	str.w	r3, [r2, #1664]	; 0x680
 800780c:	f7fd feb0 	bl	8005570 <HAL_GetTick>
 8007810:	4606      	mov	r6, r0
 8007812:	e004      	b.n	800781e <HAL_RCC_OscConfig+0x382>
 8007814:	f7fd feac 	bl	8005570 <HAL_GetTick>
 8007818:	1b80      	subs	r0, r0, r6
 800781a:	2802      	cmp	r0, #2
 800781c:	d8d7      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 800781e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007820:	079b      	lsls	r3, r3, #30
 8007822:	d4f7      	bmi.n	8007814 <HAL_RCC_OscConfig+0x378>
 8007824:	e6df      	b.n	80075e6 <HAL_RCC_OscConfig+0x14a>
 8007826:	4a4c      	ldr	r2, [pc, #304]	; (8007958 <HAL_RCC_OscConfig+0x4bc>)
 8007828:	4f4a      	ldr	r7, [pc, #296]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 800782a:	6013      	str	r3, [r2, #0]
 800782c:	f7fd fea0 	bl	8005570 <HAL_GetTick>
 8007830:	4606      	mov	r6, r0
 8007832:	e004      	b.n	800783e <HAL_RCC_OscConfig+0x3a2>
 8007834:	f7fd fe9c 	bl	8005570 <HAL_GetTick>
 8007838:	1b80      	subs	r0, r0, r6
 800783a:	2802      	cmp	r0, #2
 800783c:	d8c7      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 800783e:	683b      	ldr	r3, [r7, #0]
 8007840:	0798      	lsls	r0, r3, #30
 8007842:	d4f7      	bmi.n	8007834 <HAL_RCC_OscConfig+0x398>
 8007844:	6823      	ldr	r3, [r4, #0]
 8007846:	e68e      	b.n	8007566 <HAL_RCC_OscConfig+0xca>
 8007848:	2600      	movs	r6, #0
 800784a:	e6de      	b.n	800760a <HAL_RCC_OscConfig+0x16e>
 800784c:	4a42      	ldr	r2, [pc, #264]	; (8007958 <HAL_RCC_OscConfig+0x4bc>)
 800784e:	4f41      	ldr	r7, [pc, #260]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 8007850:	6213      	str	r3, [r2, #32]
 8007852:	f7fd fe8d 	bl	8005570 <HAL_GetTick>
 8007856:	4606      	mov	r6, r0
 8007858:	e004      	b.n	8007864 <HAL_RCC_OscConfig+0x3c8>
 800785a:	f7fd fe89 	bl	8005570 <HAL_GetTick>
 800785e:	1b80      	subs	r0, r0, r6
 8007860:	2802      	cmp	r0, #2
 8007862:	d8b4      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 8007864:	683b      	ldr	r3, [r7, #0]
 8007866:	0598      	lsls	r0, r3, #22
 8007868:	d4f7      	bmi.n	800785a <HAL_RCC_OscConfig+0x3be>
 800786a:	e74e      	b.n	800770a <HAL_RCC_OscConfig+0x26e>
 800786c:	6873      	ldr	r3, [r6, #4]
 800786e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007872:	4303      	orrs	r3, r0
 8007874:	6073      	str	r3, [r6, #4]
 8007876:	6873      	ldr	r3, [r6, #4]
 8007878:	69e2      	ldr	r2, [r4, #28]
 800787a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800787e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007882:	6073      	str	r3, [r6, #4]
 8007884:	f7ff fdc8 	bl	8007418 <RCC_SetFlashLatencyFromMSIRange>
 8007888:	2800      	cmp	r0, #0
 800788a:	f47f af4c 	bne.w	8007726 <HAL_RCC_OscConfig+0x28a>
 800788e:	6a23      	ldr	r3, [r4, #32]
 8007890:	e726      	b.n	80076e0 <HAL_RCC_OscConfig+0x244>
 8007892:	2001      	movs	r0, #1
 8007894:	4770      	bx	lr
 8007896:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800789a:	601a      	str	r2, [r3, #0]
 800789c:	681a      	ldr	r2, [r3, #0]
 800789e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80078a2:	601a      	str	r2, [r3, #0]
 80078a4:	e629      	b.n	80074fa <HAL_RCC_OscConfig+0x5e>
 80078a6:	661a      	str	r2, [r3, #96]	; 0x60
 80078a8:	f7fd fe62 	bl	8005570 <HAL_GetTick>
 80078ac:	4e29      	ldr	r6, [pc, #164]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 80078ae:	4605      	mov	r5, r0
 80078b0:	e004      	b.n	80078bc <HAL_RCC_OscConfig+0x420>
 80078b2:	f7fd fe5d 	bl	8005570 <HAL_GetTick>
 80078b6:	1b40      	subs	r0, r0, r5
 80078b8:	2802      	cmp	r0, #2
 80078ba:	d888      	bhi.n	80077ce <HAL_RCC_OscConfig+0x332>
 80078bc:	6833      	ldr	r3, [r6, #0]
 80078be:	0199      	lsls	r1, r3, #6
 80078c0:	d4f7      	bmi.n	80078b2 <HAL_RCC_OscConfig+0x416>
 80078c2:	e9d4 310a 	ldrd	r3, r1, [r4, #40]	; 0x28
 80078c6:	430b      	orrs	r3, r1
 80078c8:	2101      	movs	r1, #1
 80078ca:	68b2      	ldr	r2, [r6, #8]
 80078cc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80078ce:	f422 027d 	bic.w	r2, r2, #16580608	; 0xfd0000
 80078d2:	4313      	orrs	r3, r2
 80078d4:	4a20      	ldr	r2, [pc, #128]	; (8007958 <HAL_RCC_OscConfig+0x4bc>)
 80078d6:	4303      	orrs	r3, r0
 80078d8:	60b3      	str	r3, [r6, #8]
 80078da:	6611      	str	r1, [r2, #96]	; 0x60
 80078dc:	f7fd fe48 	bl	8005570 <HAL_GetTick>
 80078e0:	4d1c      	ldr	r5, [pc, #112]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 80078e2:	4604      	mov	r4, r0
 80078e4:	e005      	b.n	80078f2 <HAL_RCC_OscConfig+0x456>
 80078e6:	f7fd fe43 	bl	8005570 <HAL_GetTick>
 80078ea:	1b00      	subs	r0, r0, r4
 80078ec:	2802      	cmp	r0, #2
 80078ee:	f63f af6e 	bhi.w	80077ce <HAL_RCC_OscConfig+0x332>
 80078f2:	682b      	ldr	r3, [r5, #0]
 80078f4:	019a      	lsls	r2, r3, #6
 80078f6:	d5f6      	bpl.n	80078e6 <HAL_RCC_OscConfig+0x44a>
 80078f8:	e6ce      	b.n	8007698 <HAL_RCC_OscConfig+0x1fc>
 80078fa:	4a16      	ldr	r2, [pc, #88]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 80078fc:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80078fe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007902:	6253      	str	r3, [r2, #36]	; 0x24
 8007904:	e6ae      	b.n	8007664 <HAL_RCC_OscConfig+0x1c8>
 8007906:	4a13      	ldr	r2, [pc, #76]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 8007908:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800790a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800790e:	6353      	str	r3, [r2, #52]	; 0x34
 8007910:	e693      	b.n	800763a <HAL_RCC_OscConfig+0x19e>
 8007912:	2801      	cmp	r0, #1
 8007914:	f43f aec1 	beq.w	800769a <HAL_RCC_OscConfig+0x1fe>
 8007918:	4b0e      	ldr	r3, [pc, #56]	; (8007954 <HAL_RCC_OscConfig+0x4b8>)
 800791a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800791c:	689b      	ldr	r3, [r3, #8]
 800791e:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 8007922:	4291      	cmp	r1, r2
 8007924:	f47f aeff 	bne.w	8007726 <HAL_RCC_OscConfig+0x28a>
 8007928:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800792a:	f403 1170 	and.w	r1, r3, #3932160	; 0x3c0000
 800792e:	4291      	cmp	r1, r2
 8007930:	f47f aef9 	bne.w	8007726 <HAL_RCC_OscConfig+0x28a>
 8007934:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007936:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 800793a:	1a18      	subs	r0, r3, r0
 800793c:	bf18      	it	ne
 800793e:	2001      	movne	r0, #1
 8007940:	e6ab      	b.n	800769a <HAL_RCC_OscConfig+0x1fe>
 8007942:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007946:	635a      	str	r2, [r3, #52]	; 0x34
 8007948:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800794a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800794e:	635a      	str	r2, [r3, #52]	; 0x34
 8007950:	e673      	b.n	800763a <HAL_RCC_OscConfig+0x19e>
 8007952:	bf00      	nop
 8007954:	40023800 	.word	0x40023800
 8007958:	42470000 	.word	0x42470000

0800795c <HAL_RCC_ClockConfig>:
 800795c:	2800      	cmp	r0, #0
 800795e:	f000 80c2 	beq.w	8007ae6 <HAL_RCC_ClockConfig+0x18a>
 8007962:	4a85      	ldr	r2, [pc, #532]	; (8007b78 <HAL_RCC_ClockConfig+0x21c>)
 8007964:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007968:	6813      	ldr	r3, [r2, #0]
 800796a:	4604      	mov	r4, r0
 800796c:	f003 0301 	and.w	r3, r3, #1
 8007970:	428b      	cmp	r3, r1
 8007972:	460d      	mov	r5, r1
 8007974:	d213      	bcs.n	800799e <HAL_RCC_ClockConfig+0x42>
 8007976:	2901      	cmp	r1, #1
 8007978:	d103      	bne.n	8007982 <HAL_RCC_ClockConfig+0x26>
 800797a:	6813      	ldr	r3, [r2, #0]
 800797c:	f043 0304 	orr.w	r3, r3, #4
 8007980:	6013      	str	r3, [r2, #0]
 8007982:	4a7d      	ldr	r2, [pc, #500]	; (8007b78 <HAL_RCC_ClockConfig+0x21c>)
 8007984:	6813      	ldr	r3, [r2, #0]
 8007986:	f023 0301 	bic.w	r3, r3, #1
 800798a:	432b      	orrs	r3, r5
 800798c:	6013      	str	r3, [r2, #0]
 800798e:	6813      	ldr	r3, [r2, #0]
 8007990:	f003 0301 	and.w	r3, r3, #1
 8007994:	42ab      	cmp	r3, r5
 8007996:	d002      	beq.n	800799e <HAL_RCC_ClockConfig+0x42>
 8007998:	2001      	movs	r0, #1
 800799a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800799e:	6823      	ldr	r3, [r4, #0]
 80079a0:	0799      	lsls	r1, r3, #30
 80079a2:	d506      	bpl.n	80079b2 <HAL_RCC_ClockConfig+0x56>
 80079a4:	4975      	ldr	r1, [pc, #468]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 80079a6:	68a0      	ldr	r0, [r4, #8]
 80079a8:	688a      	ldr	r2, [r1, #8]
 80079aa:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80079ae:	4302      	orrs	r2, r0
 80079b0:	608a      	str	r2, [r1, #8]
 80079b2:	07da      	lsls	r2, r3, #31
 80079b4:	d529      	bpl.n	8007a0a <HAL_RCC_ClockConfig+0xae>
 80079b6:	6862      	ldr	r2, [r4, #4]
 80079b8:	4b70      	ldr	r3, [pc, #448]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 80079ba:	2a02      	cmp	r2, #2
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	f000 808e 	beq.w	8007ade <HAL_RCC_ClockConfig+0x182>
 80079c2:	2a03      	cmp	r2, #3
 80079c4:	f000 8085 	beq.w	8007ad2 <HAL_RCC_ClockConfig+0x176>
 80079c8:	2a01      	cmp	r2, #1
 80079ca:	f000 80d1 	beq.w	8007b70 <HAL_RCC_ClockConfig+0x214>
 80079ce:	0598      	lsls	r0, r3, #22
 80079d0:	d5e2      	bpl.n	8007998 <HAL_RCC_ClockConfig+0x3c>
 80079d2:	4e6a      	ldr	r6, [pc, #424]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 80079d4:	f241 3888 	movw	r8, #5000	; 0x1388
 80079d8:	68b3      	ldr	r3, [r6, #8]
 80079da:	f023 0303 	bic.w	r3, r3, #3
 80079de:	4313      	orrs	r3, r2
 80079e0:	60b3      	str	r3, [r6, #8]
 80079e2:	f7fd fdc5 	bl	8005570 <HAL_GetTick>
 80079e6:	6863      	ldr	r3, [r4, #4]
 80079e8:	4607      	mov	r7, r0
 80079ea:	2b02      	cmp	r3, #2
 80079ec:	d055      	beq.n	8007a9a <HAL_RCC_ClockConfig+0x13e>
 80079ee:	2b03      	cmp	r3, #3
 80079f0:	d05e      	beq.n	8007ab0 <HAL_RCC_ClockConfig+0x154>
 80079f2:	2b01      	cmp	r3, #1
 80079f4:	d105      	bne.n	8007a02 <HAL_RCC_ClockConfig+0xa6>
 80079f6:	e066      	b.n	8007ac6 <HAL_RCC_ClockConfig+0x16a>
 80079f8:	f7fd fdba 	bl	8005570 <HAL_GetTick>
 80079fc:	1bc0      	subs	r0, r0, r7
 80079fe:	4540      	cmp	r0, r8
 8007a00:	d873      	bhi.n	8007aea <HAL_RCC_ClockConfig+0x18e>
 8007a02:	68b3      	ldr	r3, [r6, #8]
 8007a04:	f013 0f0c 	tst.w	r3, #12
 8007a08:	d1f6      	bne.n	80079f8 <HAL_RCC_ClockConfig+0x9c>
 8007a0a:	4a5b      	ldr	r2, [pc, #364]	; (8007b78 <HAL_RCC_ClockConfig+0x21c>)
 8007a0c:	6813      	ldr	r3, [r2, #0]
 8007a0e:	f003 0301 	and.w	r3, r3, #1
 8007a12:	42ab      	cmp	r3, r5
 8007a14:	d906      	bls.n	8007a24 <HAL_RCC_ClockConfig+0xc8>
 8007a16:	6813      	ldr	r3, [r2, #0]
 8007a18:	f023 0301 	bic.w	r3, r3, #1
 8007a1c:	6013      	str	r3, [r2, #0]
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	07da      	lsls	r2, r3, #31
 8007a22:	d4b9      	bmi.n	8007998 <HAL_RCC_ClockConfig+0x3c>
 8007a24:	6823      	ldr	r3, [r4, #0]
 8007a26:	0759      	lsls	r1, r3, #29
 8007a28:	d506      	bpl.n	8007a38 <HAL_RCC_ClockConfig+0xdc>
 8007a2a:	4954      	ldr	r1, [pc, #336]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 8007a2c:	68e0      	ldr	r0, [r4, #12]
 8007a2e:	688a      	ldr	r2, [r1, #8]
 8007a30:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007a34:	4302      	orrs	r2, r0
 8007a36:	608a      	str	r2, [r1, #8]
 8007a38:	071b      	lsls	r3, r3, #28
 8007a3a:	d420      	bmi.n	8007a7e <HAL_RCC_ClockConfig+0x122>
 8007a3c:	494f      	ldr	r1, [pc, #316]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 8007a3e:	688a      	ldr	r2, [r1, #8]
 8007a40:	f002 030c 	and.w	r3, r2, #12
 8007a44:	2b08      	cmp	r3, #8
 8007a46:	d079      	beq.n	8007b3c <HAL_RCC_ClockConfig+0x1e0>
 8007a48:	2b0c      	cmp	r3, #12
 8007a4a:	d050      	beq.n	8007aee <HAL_RCC_ClockConfig+0x192>
 8007a4c:	2b04      	cmp	r3, #4
 8007a4e:	d044      	beq.n	8007ada <HAL_RCC_ClockConfig+0x17e>
 8007a50:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8007a54:	684b      	ldr	r3, [r1, #4]
 8007a56:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007a5a:	3301      	adds	r3, #1
 8007a5c:	4098      	lsls	r0, r3
 8007a5e:	4b47      	ldr	r3, [pc, #284]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 8007a60:	4a47      	ldr	r2, [pc, #284]	; (8007b80 <HAL_RCC_ClockConfig+0x224>)
 8007a62:	689b      	ldr	r3, [r3, #8]
 8007a64:	4947      	ldr	r1, [pc, #284]	; (8007b84 <HAL_RCC_ClockConfig+0x228>)
 8007a66:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007a6a:	5cd3      	ldrb	r3, [r2, r3]
 8007a6c:	4a46      	ldr	r2, [pc, #280]	; (8007b88 <HAL_RCC_ClockConfig+0x22c>)
 8007a6e:	fa20 f303 	lsr.w	r3, r0, r3
 8007a72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007a76:	6808      	ldr	r0, [r1, #0]
 8007a78:	6013      	str	r3, [r2, #0]
 8007a7a:	f7fd bd37 	b.w	80054ec <HAL_InitTick>
 8007a7e:	4a3f      	ldr	r2, [pc, #252]	; (8007b7c <HAL_RCC_ClockConfig+0x220>)
 8007a80:	6921      	ldr	r1, [r4, #16]
 8007a82:	6893      	ldr	r3, [r2, #8]
 8007a84:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8007a88:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007a8c:	6093      	str	r3, [r2, #8]
 8007a8e:	e7d5      	b.n	8007a3c <HAL_RCC_ClockConfig+0xe0>
 8007a90:	f7fd fd6e 	bl	8005570 <HAL_GetTick>
 8007a94:	1bc3      	subs	r3, r0, r7
 8007a96:	4543      	cmp	r3, r8
 8007a98:	d827      	bhi.n	8007aea <HAL_RCC_ClockConfig+0x18e>
 8007a9a:	68b3      	ldr	r3, [r6, #8]
 8007a9c:	f003 030c 	and.w	r3, r3, #12
 8007aa0:	2b08      	cmp	r3, #8
 8007aa2:	d1f5      	bne.n	8007a90 <HAL_RCC_ClockConfig+0x134>
 8007aa4:	e7b1      	b.n	8007a0a <HAL_RCC_ClockConfig+0xae>
 8007aa6:	f7fd fd63 	bl	8005570 <HAL_GetTick>
 8007aaa:	1bc0      	subs	r0, r0, r7
 8007aac:	4540      	cmp	r0, r8
 8007aae:	d81c      	bhi.n	8007aea <HAL_RCC_ClockConfig+0x18e>
 8007ab0:	68b3      	ldr	r3, [r6, #8]
 8007ab2:	f003 030c 	and.w	r3, r3, #12
 8007ab6:	2b0c      	cmp	r3, #12
 8007ab8:	d1f5      	bne.n	8007aa6 <HAL_RCC_ClockConfig+0x14a>
 8007aba:	e7a6      	b.n	8007a0a <HAL_RCC_ClockConfig+0xae>
 8007abc:	f7fd fd58 	bl	8005570 <HAL_GetTick>
 8007ac0:	1bc0      	subs	r0, r0, r7
 8007ac2:	4540      	cmp	r0, r8
 8007ac4:	d811      	bhi.n	8007aea <HAL_RCC_ClockConfig+0x18e>
 8007ac6:	68b3      	ldr	r3, [r6, #8]
 8007ac8:	f003 030c 	and.w	r3, r3, #12
 8007acc:	2b04      	cmp	r3, #4
 8007ace:	d1f5      	bne.n	8007abc <HAL_RCC_ClockConfig+0x160>
 8007ad0:	e79b      	b.n	8007a0a <HAL_RCC_ClockConfig+0xae>
 8007ad2:	019f      	lsls	r7, r3, #6
 8007ad4:	f53f af7d 	bmi.w	80079d2 <HAL_RCC_ClockConfig+0x76>
 8007ad8:	e75e      	b.n	8007998 <HAL_RCC_ClockConfig+0x3c>
 8007ada:	482c      	ldr	r0, [pc, #176]	; (8007b8c <HAL_RCC_ClockConfig+0x230>)
 8007adc:	e7bf      	b.n	8007a5e <HAL_RCC_ClockConfig+0x102>
 8007ade:	039b      	lsls	r3, r3, #14
 8007ae0:	f53f af77 	bmi.w	80079d2 <HAL_RCC_ClockConfig+0x76>
 8007ae4:	e758      	b.n	8007998 <HAL_RCC_ClockConfig+0x3c>
 8007ae6:	2001      	movs	r0, #1
 8007ae8:	4770      	bx	lr
 8007aea:	2003      	movs	r0, #3
 8007aec:	e755      	b.n	800799a <HAL_RCC_ClockConfig+0x3e>
 8007aee:	4828      	ldr	r0, [pc, #160]	; (8007b90 <HAL_RCC_ClockConfig+0x234>)
 8007af0:	688b      	ldr	r3, [r1, #8]
 8007af2:	f3c2 4183 	ubfx	r1, r2, #18, #4
 8007af6:	5c44      	ldrb	r4, [r0, r1]
 8007af8:	f3c2 5281 	ubfx	r2, r2, #22, #2
 8007afc:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8007b00:	f102 0201 	add.w	r2, r2, #1
 8007b04:	ea4f 1144 	mov.w	r1, r4, lsl #5
 8007b08:	d01a      	beq.n	8007b40 <HAL_RCC_ClockConfig+0x1e4>
 8007b0a:	1b09      	subs	r1, r1, r4
 8007b0c:	eb65 0505 	sbc.w	r5, r5, r5
 8007b10:	01ab      	lsls	r3, r5, #6
 8007b12:	0188      	lsls	r0, r1, #6
 8007b14:	1a40      	subs	r0, r0, r1
 8007b16:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007b1a:	eb63 0305 	sbc.w	r3, r3, r5
 8007b1e:	00c1      	lsls	r1, r0, #3
 8007b20:	00db      	lsls	r3, r3, #3
 8007b22:	190c      	adds	r4, r1, r4
 8007b24:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8007b28:	f143 0300 	adc.w	r3, r3, #0
 8007b2c:	0259      	lsls	r1, r3, #9
 8007b2e:	0260      	lsls	r0, r4, #9
 8007b30:	2300      	movs	r3, #0
 8007b32:	ea41 51d4 	orr.w	r1, r1, r4, lsr #23
 8007b36:	f7f9 fb2d 	bl	8001194 <__aeabi_uldivmod>
 8007b3a:	e790      	b.n	8007a5e <HAL_RCC_ClockConfig+0x102>
 8007b3c:	4815      	ldr	r0, [pc, #84]	; (8007b94 <HAL_RCC_ClockConfig+0x238>)
 8007b3e:	e78e      	b.n	8007a5e <HAL_RCC_ClockConfig+0x102>
 8007b40:	1b0d      	subs	r5, r1, r4
 8007b42:	eb66 0606 	sbc.w	r6, r6, r6
 8007b46:	01b0      	lsls	r0, r6, #6
 8007b48:	01a9      	lsls	r1, r5, #6
 8007b4a:	1b49      	subs	r1, r1, r5
 8007b4c:	ea40 6095 	orr.w	r0, r0, r5, lsr #26
 8007b50:	eb60 0006 	sbc.w	r0, r0, r6
 8007b54:	00c0      	lsls	r0, r0, #3
 8007b56:	ea40 7051 	orr.w	r0, r0, r1, lsr #29
 8007b5a:	00c9      	lsls	r1, r1, #3
 8007b5c:	190c      	adds	r4, r1, r4
 8007b5e:	f140 0000 	adc.w	r0, r0, #0
 8007b62:	0281      	lsls	r1, r0, #10
 8007b64:	ea41 5194 	orr.w	r1, r1, r4, lsr #22
 8007b68:	02a0      	lsls	r0, r4, #10
 8007b6a:	f7f9 fb13 	bl	8001194 <__aeabi_uldivmod>
 8007b6e:	e776      	b.n	8007a5e <HAL_RCC_ClockConfig+0x102>
 8007b70:	079e      	lsls	r6, r3, #30
 8007b72:	f53f af2e 	bmi.w	80079d2 <HAL_RCC_ClockConfig+0x76>
 8007b76:	e70f      	b.n	8007998 <HAL_RCC_ClockConfig+0x3c>
 8007b78:	40023c00 	.word	0x40023c00
 8007b7c:	40023800 	.word	0x40023800
 8007b80:	08010824 	.word	0x08010824
 8007b84:	2000002c 	.word	0x2000002c
 8007b88:	20000020 	.word	0x20000020
 8007b8c:	00f42400 	.word	0x00f42400
 8007b90:	08010818 	.word	0x08010818
 8007b94:	007a1200 	.word	0x007a1200

08007b98 <HAL_RCC_GetPCLK1Freq>:
 8007b98:	4b04      	ldr	r3, [pc, #16]	; (8007bac <HAL_RCC_GetPCLK1Freq+0x14>)
 8007b9a:	4a05      	ldr	r2, [pc, #20]	; (8007bb0 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007b9c:	689b      	ldr	r3, [r3, #8]
 8007b9e:	4905      	ldr	r1, [pc, #20]	; (8007bb4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007ba0:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8007ba4:	5ccb      	ldrb	r3, [r1, r3]
 8007ba6:	6810      	ldr	r0, [r2, #0]
 8007ba8:	40d8      	lsrs	r0, r3
 8007baa:	4770      	bx	lr
 8007bac:	40023800 	.word	0x40023800
 8007bb0:	20000020 	.word	0x20000020
 8007bb4:	08010834 	.word	0x08010834

08007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 8007bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007bbc:	461d      	mov	r5, r3
 8007bbe:	4616      	mov	r6, r2
 8007bc0:	b082      	sub	sp, #8
 8007bc2:	460c      	mov	r4, r1
 8007bc4:	4607      	mov	r7, r0
 8007bc6:	f7fd fcd3 	bl	8005570 <HAL_GetTick>
 8007bca:	4435      	add	r5, r6
 8007bcc:	1a2d      	subs	r5, r5, r0
 8007bce:	f7fd fccf 	bl	8005570 <HAL_GetTick>
 8007bd2:	4680      	mov	r8, r0
 8007bd4:	4b26      	ldr	r3, [pc, #152]	; (8007c70 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 8007bdc:	fb05 f303 	mul.w	r3, r5, r3
 8007be0:	9301      	str	r3, [sp, #4]
 8007be2:	1c73      	adds	r3, r6, #1
 8007be4:	6839      	ldr	r1, [r7, #0]
 8007be6:	d107      	bne.n	8007bf8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 8007be8:	688b      	ldr	r3, [r1, #8]
 8007bea:	ea34 0303 	bics.w	r3, r4, r3
 8007bee:	d0fb      	beq.n	8007be8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
 8007bf0:	2000      	movs	r0, #0
 8007bf2:	b002      	add	sp, #8
 8007bf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007bf8:	688b      	ldr	r3, [r1, #8]
 8007bfa:	ea34 0303 	bics.w	r3, r4, r3
 8007bfe:	d1f7      	bne.n	8007bf0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
 8007c00:	f7fd fcb6 	bl	8005570 <HAL_GetTick>
 8007c04:	eba0 0308 	sub.w	r3, r0, r8
 8007c08:	42ab      	cmp	r3, r5
 8007c0a:	d207      	bcs.n	8007c1c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
 8007c0c:	9b01      	ldr	r3, [sp, #4]
 8007c0e:	2b00      	cmp	r3, #0
 8007c10:	9b01      	ldr	r3, [sp, #4]
 8007c12:	bf08      	it	eq
 8007c14:	2500      	moveq	r5, #0
 8007c16:	3b01      	subs	r3, #1
 8007c18:	9301      	str	r3, [sp, #4]
 8007c1a:	e7e2      	b.n	8007be2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
 8007c1c:	e9d7 3100 	ldrd	r3, r1, [r7]
 8007c20:	685a      	ldr	r2, [r3, #4]
 8007c22:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8007c26:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007c2a:	605a      	str	r2, [r3, #4]
 8007c2c:	d014      	beq.n	8007c58 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
 8007c2e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007c30:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007c34:	d007      	beq.n	8007c46 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x8e>
 8007c36:	2201      	movs	r2, #1
 8007c38:	2300      	movs	r3, #0
 8007c3a:	2003      	movs	r0, #3
 8007c3c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
 8007c40:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8007c44:	e7d5      	b.n	8007bf2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
 8007c46:	681a      	ldr	r2, [r3, #0]
 8007c48:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007c4c:	601a      	str	r2, [r3, #0]
 8007c4e:	681a      	ldr	r2, [r3, #0]
 8007c50:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007c54:	601a      	str	r2, [r3, #0]
 8007c56:	e7ee      	b.n	8007c36 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
 8007c58:	68ba      	ldr	r2, [r7, #8]
 8007c5a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007c5e:	d002      	beq.n	8007c66 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
 8007c60:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007c64:	d1e3      	bne.n	8007c2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8007c66:	681a      	ldr	r2, [r3, #0]
 8007c68:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007c6c:	601a      	str	r2, [r3, #0]
 8007c6e:	e7de      	b.n	8007c2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x76>
 8007c70:	20000020 	.word	0x20000020

08007c74 <HAL_SPI_Init>:
 8007c74:	2800      	cmp	r0, #0
 8007c76:	d053      	beq.n	8007d20 <HAL_SPI_Init+0xac>
 8007c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8007c7c:	4604      	mov	r4, r0
 8007c7e:	2b00      	cmp	r3, #0
 8007c80:	d03f      	beq.n	8007d02 <HAL_SPI_Init+0x8e>
 8007c82:	2300      	movs	r3, #0
 8007c84:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007c88:	2000      	movs	r0, #0
 8007c8a:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8007c8e:	62a0      	str	r0, [r4, #40]	; 0x28
 8007c90:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8007c94:	2a00      	cmp	r2, #0
 8007c96:	d03a      	beq.n	8007d0e <HAL_SPI_Init+0x9a>
 8007c98:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8007c9c:	2702      	movs	r7, #2
 8007c9e:	f04f 0c01 	mov.w	ip, #1
 8007ca2:	2600      	movs	r6, #0
 8007ca4:	f402 4204 	and.w	r2, r2, #33792	; 0x8400
 8007ca8:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8007cac:	4313      	orrs	r3, r2
 8007cae:	68e2      	ldr	r2, [r4, #12]
 8007cb0:	f884 7051 	strb.w	r7, [r4, #81]	; 0x51
 8007cb4:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8007cb8:	4313      	orrs	r3, r2
 8007cba:	6922      	ldr	r2, [r4, #16]
 8007cbc:	69a1      	ldr	r1, [r4, #24]
 8007cbe:	403a      	ands	r2, r7
 8007cc0:	4313      	orrs	r3, r2
 8007cc2:	6962      	ldr	r2, [r4, #20]
 8007cc4:	6825      	ldr	r5, [r4, #0]
 8007cc6:	ea02 020c 	and.w	r2, r2, ip
 8007cca:	431a      	orrs	r2, r3
 8007ccc:	69e3      	ldr	r3, [r4, #28]
 8007cce:	f003 0738 	and.w	r7, r3, #56	; 0x38
 8007cd2:	6a23      	ldr	r3, [r4, #32]
 8007cd4:	f003 0e80 	and.w	lr, r3, #128	; 0x80
 8007cd8:	f401 7300 	and.w	r3, r1, #512	; 0x200
 8007cdc:	4313      	orrs	r3, r2
 8007cde:	433b      	orrs	r3, r7
 8007ce0:	682a      	ldr	r2, [r5, #0]
 8007ce2:	ea43 030e 	orr.w	r3, r3, lr
 8007ce6:	0c09      	lsrs	r1, r1, #16
 8007ce8:	4303      	orrs	r3, r0
 8007cea:	f001 0104 	and.w	r1, r1, #4
 8007cee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007cf2:	602a      	str	r2, [r5, #0]
 8007cf4:	602b      	str	r3, [r5, #0]
 8007cf6:	6069      	str	r1, [r5, #4]
 8007cf8:	6566      	str	r6, [r4, #84]	; 0x54
 8007cfa:	f884 c051 	strb.w	ip, [r4, #81]	; 0x51
 8007cfe:	4630      	mov	r0, r6
 8007d00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d02:	6842      	ldr	r2, [r0, #4]
 8007d04:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d08:	d0be      	beq.n	8007c88 <HAL_SPI_Init+0x14>
 8007d0a:	61c3      	str	r3, [r0, #28]
 8007d0c:	e7bc      	b.n	8007c88 <HAL_SPI_Init+0x14>
 8007d0e:	4620      	mov	r0, r4
 8007d10:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
 8007d14:	f7fc ffba 	bl	8004c8c <HAL_SPI_MspInit>
 8007d18:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007d1a:	f403 5000 	and.w	r0, r3, #8192	; 0x2000
 8007d1e:	e7bb      	b.n	8007c98 <HAL_SPI_Init+0x24>
 8007d20:	2001      	movs	r0, #1
 8007d22:	4770      	bx	lr

08007d24 <HAL_SPI_Transmit>:
 8007d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d28:	461d      	mov	r5, r3
 8007d2a:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007d2e:	b082      	sub	sp, #8
 8007d30:	2b01      	cmp	r3, #1
 8007d32:	f000 8088 	beq.w	8007e46 <HAL_SPI_Transmit+0x122>
 8007d36:	2301      	movs	r3, #1
 8007d38:	4604      	mov	r4, r0
 8007d3a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8007d3e:	4688      	mov	r8, r1
 8007d40:	4617      	mov	r7, r2
 8007d42:	f7fd fc15 	bl	8005570 <HAL_GetTick>
 8007d46:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007d4a:	4606      	mov	r6, r0
 8007d4c:	2b01      	cmp	r3, #1
 8007d4e:	b2d8      	uxtb	r0, r3
 8007d50:	d009      	beq.n	8007d66 <HAL_SPI_Transmit+0x42>
 8007d52:	2002      	movs	r0, #2
 8007d54:	2201      	movs	r2, #1
 8007d56:	2300      	movs	r3, #0
 8007d58:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8007d5c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007d60:	b002      	add	sp, #8
 8007d62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007d66:	f1b8 0f00 	cmp.w	r8, #0
 8007d6a:	d0f3      	beq.n	8007d54 <HAL_SPI_Transmit+0x30>
 8007d6c:	2f00      	cmp	r7, #0
 8007d6e:	d0f1      	beq.n	8007d54 <HAL_SPI_Transmit+0x30>
 8007d70:	2300      	movs	r3, #0
 8007d72:	2203      	movs	r2, #3
 8007d74:	63a3      	str	r3, [r4, #56]	; 0x38
 8007d76:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8007d7a:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8007d7c:	6563      	str	r3, [r4, #84]	; 0x54
 8007d7e:	6463      	str	r3, [r4, #68]	; 0x44
 8007d80:	86e7      	strh	r7, [r4, #54]	; 0x36
 8007d82:	6423      	str	r3, [r4, #64]	; 0x40
 8007d84:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007d86:	68a3      	ldr	r3, [r4, #8]
 8007d88:	6820      	ldr	r0, [r4, #0]
 8007d8a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007d8e:	4684      	mov	ip, r0
 8007d90:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 8007d94:	86a7      	strh	r7, [r4, #52]	; 0x34
 8007d96:	f000 8083 	beq.w	8007ea0 <HAL_SPI_Transmit+0x17c>
 8007d9a:	6803      	ldr	r3, [r0, #0]
 8007d9c:	065b      	lsls	r3, r3, #25
 8007d9e:	d403      	bmi.n	8007da8 <HAL_SPI_Transmit+0x84>
 8007da0:	6803      	ldr	r3, [r0, #0]
 8007da2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007da6:	6003      	str	r3, [r0, #0]
 8007da8:	68e3      	ldr	r3, [r4, #12]
 8007daa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007dae:	6863      	ldr	r3, [r4, #4]
 8007db0:	d04d      	beq.n	8007e4e <HAL_SPI_Transmit+0x12a>
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	f000 8096 	beq.w	8007ee4 <HAL_SPI_Transmit+0x1c0>
 8007db8:	2f01      	cmp	r7, #1
 8007dba:	f000 8093 	beq.w	8007ee4 <HAL_SPI_Transmit+0x1c0>
 8007dbe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dc0:	b29b      	uxth	r3, r3
 8007dc2:	b1bb      	cbz	r3, 8007df4 <HAL_SPI_Transmit+0xd0>
 8007dc4:	2d00      	cmp	r5, #0
 8007dc6:	f000 80cc 	beq.w	8007f62 <HAL_SPI_Transmit+0x23e>
 8007dca:	1c6f      	adds	r7, r5, #1
 8007dcc:	d17f      	bne.n	8007ece <HAL_SPI_Transmit+0x1aa>
 8007dce:	6823      	ldr	r3, [r4, #0]
 8007dd0:	689a      	ldr	r2, [r3, #8]
 8007dd2:	0790      	lsls	r0, r2, #30
 8007dd4:	f140 8091 	bpl.w	8007efa <HAL_SPI_Transmit+0x1d6>
 8007dd8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007dda:	7812      	ldrb	r2, [r2, #0]
 8007ddc:	731a      	strb	r2, [r3, #12]
 8007dde:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007de0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007de2:	3901      	subs	r1, #1
 8007de4:	b289      	uxth	r1, r1
 8007de6:	86e1      	strh	r1, [r4, #54]	; 0x36
 8007de8:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007dea:	3301      	adds	r3, #1
 8007dec:	b289      	uxth	r1, r1
 8007dee:	6323      	str	r3, [r4, #48]	; 0x30
 8007df0:	2900      	cmp	r1, #0
 8007df2:	d1ec      	bne.n	8007dce <HAL_SPI_Transmit+0xaa>
 8007df4:	6862      	ldr	r2, [r4, #4]
 8007df6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007dfa:	4b72      	ldr	r3, [pc, #456]	; (8007fc4 <HAL_SPI_Transmit+0x2a0>)
 8007dfc:	4872      	ldr	r0, [pc, #456]	; (8007fc8 <HAL_SPI_Transmit+0x2a4>)
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007e04:	fba0 0303 	umull	r0, r3, r0, r3
 8007e08:	ea4f 5353 	mov.w	r3, r3, lsr #21
 8007e0c:	fb01 f303 	mul.w	r3, r1, r3
 8007e10:	9301      	str	r3, [sp, #4]
 8007e12:	d107      	bne.n	8007e24 <HAL_SPI_Transmit+0x100>
 8007e14:	e0c6      	b.n	8007fa4 <HAL_SPI_Transmit+0x280>
 8007e16:	9b01      	ldr	r3, [sp, #4]
 8007e18:	6822      	ldr	r2, [r4, #0]
 8007e1a:	3b01      	subs	r3, #1
 8007e1c:	9301      	str	r3, [sp, #4]
 8007e1e:	6893      	ldr	r3, [r2, #8]
 8007e20:	061b      	lsls	r3, r3, #24
 8007e22:	d502      	bpl.n	8007e2a <HAL_SPI_Transmit+0x106>
 8007e24:	9b01      	ldr	r3, [sp, #4]
 8007e26:	2b00      	cmp	r3, #0
 8007e28:	d1f5      	bne.n	8007e16 <HAL_SPI_Transmit+0xf2>
 8007e2a:	68a3      	ldr	r3, [r4, #8]
 8007e2c:	b933      	cbnz	r3, 8007e3c <HAL_SPI_Transmit+0x118>
 8007e2e:	6822      	ldr	r2, [r4, #0]
 8007e30:	9300      	str	r3, [sp, #0]
 8007e32:	68d3      	ldr	r3, [r2, #12]
 8007e34:	9300      	str	r3, [sp, #0]
 8007e36:	6893      	ldr	r3, [r2, #8]
 8007e38:	9300      	str	r3, [sp, #0]
 8007e3a:	9b00      	ldr	r3, [sp, #0]
 8007e3c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007e3e:	3800      	subs	r0, #0
 8007e40:	bf18      	it	ne
 8007e42:	2001      	movne	r0, #1
 8007e44:	e786      	b.n	8007d54 <HAL_SPI_Transmit+0x30>
 8007e46:	2002      	movs	r0, #2
 8007e48:	b002      	add	sp, #8
 8007e4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e4e:	461a      	mov	r2, r3
 8007e50:	2b00      	cmp	r3, #0
 8007e52:	d174      	bne.n	8007f3e <HAL_SPI_Transmit+0x21a>
 8007e54:	4641      	mov	r1, r8
 8007e56:	f831 7b02 	ldrh.w	r7, [r1], #2
 8007e5a:	60c7      	str	r7, [r0, #12]
 8007e5c:	6321      	str	r1, [r4, #48]	; 0x30
 8007e5e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007e60:	3901      	subs	r1, #1
 8007e62:	b289      	uxth	r1, r1
 8007e64:	86e1      	strh	r1, [r4, #54]	; 0x36
 8007e66:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8007e68:	b289      	uxth	r1, r1
 8007e6a:	2900      	cmp	r1, #0
 8007e6c:	d0c3      	beq.n	8007df6 <HAL_SPI_Transmit+0xd2>
 8007e6e:	2d00      	cmp	r5, #0
 8007e70:	f000 808b 	beq.w	8007f8a <HAL_SPI_Transmit+0x266>
 8007e74:	1c69      	adds	r1, r5, #1
 8007e76:	d158      	bne.n	8007f2a <HAL_SPI_Transmit+0x206>
 8007e78:	6883      	ldr	r3, [r0, #8]
 8007e7a:	079a      	lsls	r2, r3, #30
 8007e7c:	f140 8089 	bpl.w	8007f92 <HAL_SPI_Transmit+0x26e>
 8007e80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e82:	f832 3b02 	ldrh.w	r3, [r2], #2
 8007e86:	60c3      	str	r3, [r0, #12]
 8007e88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e8a:	6322      	str	r2, [r4, #48]	; 0x30
 8007e8c:	3b01      	subs	r3, #1
 8007e8e:	b29b      	uxth	r3, r3
 8007e90:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007e92:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e94:	b29b      	uxth	r3, r3
 8007e96:	2b00      	cmp	r3, #0
 8007e98:	d1ee      	bne.n	8007e78 <HAL_SPI_Transmit+0x154>
 8007e9a:	6863      	ldr	r3, [r4, #4]
 8007e9c:	461a      	mov	r2, r3
 8007e9e:	e7aa      	b.n	8007df6 <HAL_SPI_Transmit+0xd2>
 8007ea0:	6803      	ldr	r3, [r0, #0]
 8007ea2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007ea6:	6003      	str	r3, [r0, #0]
 8007ea8:	6803      	ldr	r3, [r0, #0]
 8007eaa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007eae:	6003      	str	r3, [r0, #0]
 8007eb0:	e773      	b.n	8007d9a <HAL_SPI_Transmit+0x76>
 8007eb2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007eb4:	7812      	ldrb	r2, [r2, #0]
 8007eb6:	731a      	strb	r2, [r3, #12]
 8007eb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eba:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007ebc:	3b01      	subs	r3, #1
 8007ebe:	3201      	adds	r2, #1
 8007ec0:	b29b      	uxth	r3, r3
 8007ec2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007ec4:	6322      	str	r2, [r4, #48]	; 0x30
 8007ec6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ec8:	b29b      	uxth	r3, r3
 8007eca:	2b00      	cmp	r3, #0
 8007ecc:	d092      	beq.n	8007df4 <HAL_SPI_Transmit+0xd0>
 8007ece:	6823      	ldr	r3, [r4, #0]
 8007ed0:	689a      	ldr	r2, [r3, #8]
 8007ed2:	0791      	lsls	r1, r2, #30
 8007ed4:	d4ed      	bmi.n	8007eb2 <HAL_SPI_Transmit+0x18e>
 8007ed6:	f7fd fb4b 	bl	8005570 <HAL_GetTick>
 8007eda:	1b83      	subs	r3, r0, r6
 8007edc:	429d      	cmp	r5, r3
 8007ede:	d8f2      	bhi.n	8007ec6 <HAL_SPI_Transmit+0x1a2>
 8007ee0:	2003      	movs	r0, #3
 8007ee2:	e737      	b.n	8007d54 <HAL_SPI_Transmit+0x30>
 8007ee4:	f898 3000 	ldrb.w	r3, [r8]
 8007ee8:	7303      	strb	r3, [r0, #12]
 8007eea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007eee:	3b01      	subs	r3, #1
 8007ef0:	3201      	adds	r2, #1
 8007ef2:	b29b      	uxth	r3, r3
 8007ef4:	6322      	str	r2, [r4, #48]	; 0x30
 8007ef6:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007ef8:	e761      	b.n	8007dbe <HAL_SPI_Transmit+0x9a>
 8007efa:	f7fd fb39 	bl	8005570 <HAL_GetTick>
 8007efe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f00:	b29b      	uxth	r3, r3
 8007f02:	2b00      	cmp	r3, #0
 8007f04:	f47f af63 	bne.w	8007dce <HAL_SPI_Transmit+0xaa>
 8007f08:	e774      	b.n	8007df4 <HAL_SPI_Transmit+0xd0>
 8007f0a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007f0c:	f832 3b02 	ldrh.w	r3, [r2], #2
 8007f10:	f8cc 300c 	str.w	r3, [ip, #12]
 8007f14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f16:	6322      	str	r2, [r4, #48]	; 0x30
 8007f18:	3b01      	subs	r3, #1
 8007f1a:	b29b      	uxth	r3, r3
 8007f1c:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007f1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f20:	b29b      	uxth	r3, r3
 8007f22:	2b00      	cmp	r3, #0
 8007f24:	d0b9      	beq.n	8007e9a <HAL_SPI_Transmit+0x176>
 8007f26:	f8d4 c000 	ldr.w	ip, [r4]
 8007f2a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8007f2e:	079b      	lsls	r3, r3, #30
 8007f30:	d4eb      	bmi.n	8007f0a <HAL_SPI_Transmit+0x1e6>
 8007f32:	f7fd fb1d 	bl	8005570 <HAL_GetTick>
 8007f36:	1b83      	subs	r3, r0, r6
 8007f38:	429d      	cmp	r5, r3
 8007f3a:	d9d1      	bls.n	8007ee0 <HAL_SPI_Transmit+0x1bc>
 8007f3c:	e7ef      	b.n	8007f1e <HAL_SPI_Transmit+0x1fa>
 8007f3e:	2f01      	cmp	r7, #1
 8007f40:	d191      	bne.n	8007e66 <HAL_SPI_Transmit+0x142>
 8007f42:	e787      	b.n	8007e54 <HAL_SPI_Transmit+0x130>
 8007f44:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007f46:	7812      	ldrb	r2, [r2, #0]
 8007f48:	731a      	strb	r2, [r3, #12]
 8007f4a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f4c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007f4e:	3b01      	subs	r3, #1
 8007f50:	b29b      	uxth	r3, r3
 8007f52:	86e3      	strh	r3, [r4, #54]	; 0x36
 8007f54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f56:	3201      	adds	r2, #1
 8007f58:	b29b      	uxth	r3, r3
 8007f5a:	6322      	str	r2, [r4, #48]	; 0x30
 8007f5c:	2b00      	cmp	r3, #0
 8007f5e:	f43f af49 	beq.w	8007df4 <HAL_SPI_Transmit+0xd0>
 8007f62:	6823      	ldr	r3, [r4, #0]
 8007f64:	689a      	ldr	r2, [r3, #8]
 8007f66:	0792      	lsls	r2, r2, #30
 8007f68:	d4ec      	bmi.n	8007f44 <HAL_SPI_Transmit+0x220>
 8007f6a:	f7fd fb01 	bl	8005570 <HAL_GetTick>
 8007f6e:	e7b7      	b.n	8007ee0 <HAL_SPI_Transmit+0x1bc>
 8007f70:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007f72:	f831 2b02 	ldrh.w	r2, [r1], #2
 8007f76:	60c2      	str	r2, [r0, #12]
 8007f78:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007f7a:	6321      	str	r1, [r4, #48]	; 0x30
 8007f7c:	3a01      	subs	r2, #1
 8007f7e:	b292      	uxth	r2, r2
 8007f80:	86e2      	strh	r2, [r4, #54]	; 0x36
 8007f82:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007f84:	b292      	uxth	r2, r2
 8007f86:	2a00      	cmp	r2, #0
 8007f88:	d088      	beq.n	8007e9c <HAL_SPI_Transmit+0x178>
 8007f8a:	6882      	ldr	r2, [r0, #8]
 8007f8c:	0797      	lsls	r7, r2, #30
 8007f8e:	d5ec      	bpl.n	8007f6a <HAL_SPI_Transmit+0x246>
 8007f90:	e7ee      	b.n	8007f70 <HAL_SPI_Transmit+0x24c>
 8007f92:	f7fd faed 	bl	8005570 <HAL_GetTick>
 8007f96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f98:	b29b      	uxth	r3, r3
 8007f9a:	2b00      	cmp	r3, #0
 8007f9c:	f43f af7d 	beq.w	8007e9a <HAL_SPI_Transmit+0x176>
 8007fa0:	6820      	ldr	r0, [r4, #0]
 8007fa2:	e769      	b.n	8007e78 <HAL_SPI_Transmit+0x154>
 8007fa4:	4633      	mov	r3, r6
 8007fa6:	462a      	mov	r2, r5
 8007fa8:	2180      	movs	r1, #128	; 0x80
 8007faa:	4620      	mov	r0, r4
 8007fac:	f7ff fe04 	bl	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007fb0:	2800      	cmp	r0, #0
 8007fb2:	f43f af3a 	beq.w	8007e2a <HAL_SPI_Transmit+0x106>
 8007fb6:	2220      	movs	r2, #32
 8007fb8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007fba:	4313      	orrs	r3, r2
 8007fbc:	6563      	str	r3, [r4, #84]	; 0x54
 8007fbe:	6562      	str	r2, [r4, #84]	; 0x54
 8007fc0:	e733      	b.n	8007e2a <HAL_SPI_Transmit+0x106>
 8007fc2:	bf00      	nop
 8007fc4:	20000020 	.word	0x20000020
 8007fc8:	165e9f81 	.word	0x165e9f81

08007fcc <HAL_SPI_TransmitReceive>:
 8007fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd0:	4604      	mov	r4, r0
 8007fd2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 8007fd6:	b082      	sub	sp, #8
 8007fd8:	2801      	cmp	r0, #1
 8007fda:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007fdc:	f000 8089 	beq.w	80080f2 <HAL_SPI_TransmitReceive+0x126>
 8007fe0:	4698      	mov	r8, r3
 8007fe2:	2301      	movs	r3, #1
 8007fe4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007fe8:	468a      	mov	sl, r1
 8007fea:	4691      	mov	r9, r2
 8007fec:	f7fd fac0 	bl	8005570 <HAL_GetTick>
 8007ff0:	f894 7051 	ldrb.w	r7, [r4, #81]	; 0x51
 8007ff4:	4606      	mov	r6, r0
 8007ff6:	2f01      	cmp	r7, #1
 8007ff8:	6863      	ldr	r3, [r4, #4]
 8007ffa:	b2f9      	uxtb	r1, r7
 8007ffc:	d011      	beq.n	8008022 <HAL_SPI_TransmitReceive+0x56>
 8007ffe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008002:	d009      	beq.n	8008018 <HAL_SPI_TransmitReceive+0x4c>
 8008004:	2002      	movs	r0, #2
 8008006:	2201      	movs	r2, #1
 8008008:	2300      	movs	r3, #0
 800800a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800800e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008012:	b002      	add	sp, #8
 8008014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008018:	68a2      	ldr	r2, [r4, #8]
 800801a:	2a00      	cmp	r2, #0
 800801c:	d1f2      	bne.n	8008004 <HAL_SPI_TransmitReceive+0x38>
 800801e:	2904      	cmp	r1, #4
 8008020:	d1f0      	bne.n	8008004 <HAL_SPI_TransmitReceive+0x38>
 8008022:	f1ba 0f00 	cmp.w	sl, #0
 8008026:	d068      	beq.n	80080fa <HAL_SPI_TransmitReceive+0x12e>
 8008028:	f1b9 0f00 	cmp.w	r9, #0
 800802c:	d065      	beq.n	80080fa <HAL_SPI_TransmitReceive+0x12e>
 800802e:	f1b8 0f00 	cmp.w	r8, #0
 8008032:	d062      	beq.n	80080fa <HAL_SPI_TransmitReceive+0x12e>
 8008034:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8008038:	6820      	ldr	r0, [r4, #0]
 800803a:	2a04      	cmp	r2, #4
 800803c:	bf1c      	itt	ne
 800803e:	2205      	movne	r2, #5
 8008040:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
 8008044:	2200      	movs	r2, #0
 8008046:	6562      	str	r2, [r4, #84]	; 0x54
 8008048:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 800804c:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
 8008050:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
 8008054:	6802      	ldr	r2, [r0, #0]
 8008056:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 800805a:	0651      	lsls	r1, r2, #25
 800805c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 8008060:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 8008064:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
 8008068:	d403      	bmi.n	8008072 <HAL_SPI_TransmitReceive+0xa6>
 800806a:	6802      	ldr	r2, [r0, #0]
 800806c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008070:	6002      	str	r2, [r0, #0]
 8008072:	68e2      	ldr	r2, [r4, #12]
 8008074:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8008078:	d04f      	beq.n	800811a <HAL_SPI_TransmitReceive+0x14e>
 800807a:	2b00      	cmp	r3, #0
 800807c:	d03f      	beq.n	80080fe <HAL_SPI_TransmitReceive+0x132>
 800807e:	f1b8 0f01 	cmp.w	r8, #1
 8008082:	d03c      	beq.n	80080fe <HAL_SPI_TransmitReceive+0x132>
 8008084:	2701      	movs	r7, #1
 8008086:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008088:	b29b      	uxth	r3, r3
 800808a:	b91b      	cbnz	r3, 8008094 <HAL_SPI_TransmitReceive+0xc8>
 800808c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800808e:	b29b      	uxth	r3, r3
 8008090:	2b00      	cmp	r3, #0
 8008092:	d07f      	beq.n	8008194 <HAL_SPI_TransmitReceive+0x1c8>
 8008094:	6822      	ldr	r2, [r4, #0]
 8008096:	6893      	ldr	r3, [r2, #8]
 8008098:	0799      	lsls	r1, r3, #30
 800809a:	d50f      	bpl.n	80080bc <HAL_SPI_TransmitReceive+0xf0>
 800809c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800809e:	b29b      	uxth	r3, r3
 80080a0:	b163      	cbz	r3, 80080bc <HAL_SPI_TransmitReceive+0xf0>
 80080a2:	b15f      	cbz	r7, 80080bc <HAL_SPI_TransmitReceive+0xf0>
 80080a4:	2700      	movs	r7, #0
 80080a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80080a8:	781b      	ldrb	r3, [r3, #0]
 80080aa:	7313      	strb	r3, [r2, #12]
 80080ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80080ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80080b0:	3b01      	subs	r3, #1
 80080b2:	3201      	adds	r2, #1
 80080b4:	6322      	str	r2, [r4, #48]	; 0x30
 80080b6:	b29b      	uxth	r3, r3
 80080b8:	6822      	ldr	r2, [r4, #0]
 80080ba:	86e3      	strh	r3, [r4, #54]	; 0x36
 80080bc:	6893      	ldr	r3, [r2, #8]
 80080be:	f013 0301 	ands.w	r3, r3, #1
 80080c2:	d00d      	beq.n	80080e0 <HAL_SPI_TransmitReceive+0x114>
 80080c4:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80080c6:	b289      	uxth	r1, r1
 80080c8:	b151      	cbz	r1, 80080e0 <HAL_SPI_TransmitReceive+0x114>
 80080ca:	68d2      	ldr	r2, [r2, #12]
 80080cc:	461f      	mov	r7, r3
 80080ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080d0:	701a      	strb	r2, [r3, #0]
 80080d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080d4:	3301      	adds	r3, #1
 80080d6:	63a3      	str	r3, [r4, #56]	; 0x38
 80080d8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080da:	3b01      	subs	r3, #1
 80080dc:	b29b      	uxth	r3, r3
 80080de:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80080e0:	f7fd fa46 	bl	8005570 <HAL_GetTick>
 80080e4:	1b80      	subs	r0, r0, r6
 80080e6:	42a8      	cmp	r0, r5
 80080e8:	d314      	bcc.n	8008114 <HAL_SPI_TransmitReceive+0x148>
 80080ea:	1c6a      	adds	r2, r5, #1
 80080ec:	d0cb      	beq.n	8008086 <HAL_SPI_TransmitReceive+0xba>
 80080ee:	2003      	movs	r0, #3
 80080f0:	e789      	b.n	8008006 <HAL_SPI_TransmitReceive+0x3a>
 80080f2:	2002      	movs	r0, #2
 80080f4:	b002      	add	sp, #8
 80080f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80080fa:	2001      	movs	r0, #1
 80080fc:	e783      	b.n	8008006 <HAL_SPI_TransmitReceive+0x3a>
 80080fe:	f89a 3000 	ldrb.w	r3, [sl]
 8008102:	7303      	strb	r3, [r0, #12]
 8008104:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008106:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008108:	3b01      	subs	r3, #1
 800810a:	3201      	adds	r2, #1
 800810c:	b29b      	uxth	r3, r3
 800810e:	6322      	str	r2, [r4, #48]	; 0x30
 8008110:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008112:	e7b7      	b.n	8008084 <HAL_SPI_TransmitReceive+0xb8>
 8008114:	2d00      	cmp	r5, #0
 8008116:	d1b6      	bne.n	8008086 <HAL_SPI_TransmitReceive+0xba>
 8008118:	e7e9      	b.n	80080ee <HAL_SPI_TransmitReceive+0x122>
 800811a:	2b00      	cmp	r3, #0
 800811c:	d16c      	bne.n	80081f8 <HAL_SPI_TransmitReceive+0x22c>
 800811e:	4651      	mov	r1, sl
 8008120:	f831 3b02 	ldrh.w	r3, [r1], #2
 8008124:	60c3      	str	r3, [r0, #12]
 8008126:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008128:	6321      	str	r1, [r4, #48]	; 0x30
 800812a:	3b01      	subs	r3, #1
 800812c:	b29b      	uxth	r3, r3
 800812e:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008130:	1c6a      	adds	r2, r5, #1
 8008132:	f04f 0701 	mov.w	r7, #1
 8008136:	d025      	beq.n	8008184 <HAL_SPI_TransmitReceive+0x1b8>
 8008138:	e062      	b.n	8008200 <HAL_SPI_TransmitReceive+0x234>
 800813a:	6822      	ldr	r2, [r4, #0]
 800813c:	6893      	ldr	r3, [r2, #8]
 800813e:	079b      	lsls	r3, r3, #30
 8008140:	d50d      	bpl.n	800815e <HAL_SPI_TransmitReceive+0x192>
 8008142:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008144:	b29b      	uxth	r3, r3
 8008146:	b153      	cbz	r3, 800815e <HAL_SPI_TransmitReceive+0x192>
 8008148:	b14f      	cbz	r7, 800815e <HAL_SPI_TransmitReceive+0x192>
 800814a:	2700      	movs	r7, #0
 800814c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800814e:	f831 3b02 	ldrh.w	r3, [r1], #2
 8008152:	60d3      	str	r3, [r2, #12]
 8008154:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008156:	6321      	str	r1, [r4, #48]	; 0x30
 8008158:	3b01      	subs	r3, #1
 800815a:	b29b      	uxth	r3, r3
 800815c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800815e:	6893      	ldr	r3, [r2, #8]
 8008160:	f013 0301 	ands.w	r3, r3, #1
 8008164:	d00c      	beq.n	8008180 <HAL_SPI_TransmitReceive+0x1b4>
 8008166:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008168:	b289      	uxth	r1, r1
 800816a:	b149      	cbz	r1, 8008180 <HAL_SPI_TransmitReceive+0x1b4>
 800816c:	461f      	mov	r7, r3
 800816e:	68d3      	ldr	r3, [r2, #12]
 8008170:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008172:	f822 3b02 	strh.w	r3, [r2], #2
 8008176:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008178:	63a2      	str	r2, [r4, #56]	; 0x38
 800817a:	3b01      	subs	r3, #1
 800817c:	b29b      	uxth	r3, r3
 800817e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008180:	f7fd f9f6 	bl	8005570 <HAL_GetTick>
 8008184:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008186:	b29b      	uxth	r3, r3
 8008188:	2b00      	cmp	r3, #0
 800818a:	d1d6      	bne.n	800813a <HAL_SPI_TransmitReceive+0x16e>
 800818c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800818e:	b29b      	uxth	r3, r3
 8008190:	2b00      	cmp	r3, #0
 8008192:	d1d2      	bne.n	800813a <HAL_SPI_TransmitReceive+0x16e>
 8008194:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008198:	4b32      	ldr	r3, [pc, #200]	; (8008264 <HAL_SPI_TransmitReceive+0x298>)
 800819a:	4a33      	ldr	r2, [pc, #204]	; (8008268 <HAL_SPI_TransmitReceive+0x29c>)
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	fba2 2303 	umull	r2, r3, r2, r3
 80081a2:	0d5b      	lsrs	r3, r3, #21
 80081a4:	fb01 f303 	mul.w	r3, r1, r3
 80081a8:	6862      	ldr	r2, [r4, #4]
 80081aa:	9301      	str	r3, [sp, #4]
 80081ac:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80081b0:	d114      	bne.n	80081dc <HAL_SPI_TransmitReceive+0x210>
 80081b2:	4633      	mov	r3, r6
 80081b4:	462a      	mov	r2, r5
 80081b6:	2180      	movs	r1, #128	; 0x80
 80081b8:	4620      	mov	r0, r4
 80081ba:	f7ff fcfd 	bl	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80081be:	b180      	cbz	r0, 80081e2 <HAL_SPI_TransmitReceive+0x216>
 80081c0:	2220      	movs	r2, #32
 80081c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80081c4:	2001      	movs	r0, #1
 80081c6:	4313      	orrs	r3, r2
 80081c8:	6563      	str	r3, [r4, #84]	; 0x54
 80081ca:	6562      	str	r2, [r4, #84]	; 0x54
 80081cc:	e71b      	b.n	8008006 <HAL_SPI_TransmitReceive+0x3a>
 80081ce:	9b01      	ldr	r3, [sp, #4]
 80081d0:	6822      	ldr	r2, [r4, #0]
 80081d2:	3b01      	subs	r3, #1
 80081d4:	9301      	str	r3, [sp, #4]
 80081d6:	6893      	ldr	r3, [r2, #8]
 80081d8:	061b      	lsls	r3, r3, #24
 80081da:	d502      	bpl.n	80081e2 <HAL_SPI_TransmitReceive+0x216>
 80081dc:	9b01      	ldr	r3, [sp, #4]
 80081de:	2b00      	cmp	r3, #0
 80081e0:	d1f5      	bne.n	80081ce <HAL_SPI_TransmitReceive+0x202>
 80081e2:	68a0      	ldr	r0, [r4, #8]
 80081e4:	2800      	cmp	r0, #0
 80081e6:	d13b      	bne.n	8008260 <HAL_SPI_TransmitReceive+0x294>
 80081e8:	6823      	ldr	r3, [r4, #0]
 80081ea:	9000      	str	r0, [sp, #0]
 80081ec:	68da      	ldr	r2, [r3, #12]
 80081ee:	9200      	str	r2, [sp, #0]
 80081f0:	689b      	ldr	r3, [r3, #8]
 80081f2:	9300      	str	r3, [sp, #0]
 80081f4:	9b00      	ldr	r3, [sp, #0]
 80081f6:	e706      	b.n	8008006 <HAL_SPI_TransmitReceive+0x3a>
 80081f8:	f1b8 0f01 	cmp.w	r8, #1
 80081fc:	d198      	bne.n	8008130 <HAL_SPI_TransmitReceive+0x164>
 80081fe:	e78e      	b.n	800811e <HAL_SPI_TransmitReceive+0x152>
 8008200:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008202:	b29b      	uxth	r3, r3
 8008204:	b91b      	cbnz	r3, 800820e <HAL_SPI_TransmitReceive+0x242>
 8008206:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008208:	b29b      	uxth	r3, r3
 800820a:	2b00      	cmp	r3, #0
 800820c:	d0c2      	beq.n	8008194 <HAL_SPI_TransmitReceive+0x1c8>
 800820e:	6822      	ldr	r2, [r4, #0]
 8008210:	6893      	ldr	r3, [r2, #8]
 8008212:	0798      	lsls	r0, r3, #30
 8008214:	d50d      	bpl.n	8008232 <HAL_SPI_TransmitReceive+0x266>
 8008216:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008218:	b29b      	uxth	r3, r3
 800821a:	b153      	cbz	r3, 8008232 <HAL_SPI_TransmitReceive+0x266>
 800821c:	b14f      	cbz	r7, 8008232 <HAL_SPI_TransmitReceive+0x266>
 800821e:	2700      	movs	r7, #0
 8008220:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008222:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008226:	60d1      	str	r1, [r2, #12]
 8008228:	6323      	str	r3, [r4, #48]	; 0x30
 800822a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800822c:	3b01      	subs	r3, #1
 800822e:	b29b      	uxth	r3, r3
 8008230:	86e3      	strh	r3, [r4, #54]	; 0x36
 8008232:	6893      	ldr	r3, [r2, #8]
 8008234:	f013 0301 	ands.w	r3, r3, #1
 8008238:	d00c      	beq.n	8008254 <HAL_SPI_TransmitReceive+0x288>
 800823a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800823c:	b289      	uxth	r1, r1
 800823e:	b149      	cbz	r1, 8008254 <HAL_SPI_TransmitReceive+0x288>
 8008240:	461f      	mov	r7, r3
 8008242:	68d3      	ldr	r3, [r2, #12]
 8008244:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008246:	f822 3b02 	strh.w	r3, [r2], #2
 800824a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800824c:	63a2      	str	r2, [r4, #56]	; 0x38
 800824e:	3b01      	subs	r3, #1
 8008250:	b29b      	uxth	r3, r3
 8008252:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008254:	f7fd f98c 	bl	8005570 <HAL_GetTick>
 8008258:	1b80      	subs	r0, r0, r6
 800825a:	42a8      	cmp	r0, r5
 800825c:	d3d0      	bcc.n	8008200 <HAL_SPI_TransmitReceive+0x234>
 800825e:	e746      	b.n	80080ee <HAL_SPI_TransmitReceive+0x122>
 8008260:	2000      	movs	r0, #0
 8008262:	e6d0      	b.n	8008006 <HAL_SPI_TransmitReceive+0x3a>
 8008264:	20000020 	.word	0x20000020
 8008268:	165e9f81 	.word	0x165e9f81

0800826c <HAL_SPI_Receive>:
 800826c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008270:	6846      	ldr	r6, [r0, #4]
 8008272:	4604      	mov	r4, r0
 8008274:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
 8008278:	4690      	mov	r8, r2
 800827a:	461d      	mov	r5, r3
 800827c:	460f      	mov	r7, r1
 800827e:	b082      	sub	sp, #8
 8008280:	d071      	beq.n	8008366 <HAL_SPI_Receive+0xfa>
 8008282:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008286:	2b01      	cmp	r3, #1
 8008288:	d079      	beq.n	800837e <HAL_SPI_Receive+0x112>
 800828a:	2301      	movs	r3, #1
 800828c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8008290:	f7fd f96e 	bl	8005570 <HAL_GetTick>
 8008294:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 8008298:	4606      	mov	r6, r0
 800829a:	f1bc 0f01 	cmp.w	ip, #1
 800829e:	fa5f f08c 	uxtb.w	r0, ip
 80082a2:	d009      	beq.n	80082b8 <HAL_SPI_Receive+0x4c>
 80082a4:	2002      	movs	r0, #2
 80082a6:	2201      	movs	r2, #1
 80082a8:	2300      	movs	r3, #0
 80082aa:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 80082ae:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80082b2:	b002      	add	sp, #8
 80082b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80082b8:	2f00      	cmp	r7, #0
 80082ba:	d0f4      	beq.n	80082a6 <HAL_SPI_Receive+0x3a>
 80082bc:	f1b8 0f00 	cmp.w	r8, #0
 80082c0:	d0f1      	beq.n	80082a6 <HAL_SPI_Receive+0x3a>
 80082c2:	2300      	movs	r3, #0
 80082c4:	2104      	movs	r1, #4
 80082c6:	68a2      	ldr	r2, [r4, #8]
 80082c8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
 80082cc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80082d0:	6822      	ldr	r2, [r4, #0]
 80082d2:	6563      	str	r3, [r4, #84]	; 0x54
 80082d4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80082d8:	6323      	str	r3, [r4, #48]	; 0x30
 80082da:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
 80082de:	86a3      	strh	r3, [r4, #52]	; 0x34
 80082e0:	86e3      	strh	r3, [r4, #54]	; 0x36
 80082e2:	63a7      	str	r7, [r4, #56]	; 0x38
 80082e4:	4613      	mov	r3, r2
 80082e6:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
 80082ea:	d107      	bne.n	80082fc <HAL_SPI_Receive+0x90>
 80082ec:	6811      	ldr	r1, [r2, #0]
 80082ee:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80082f2:	6011      	str	r1, [r2, #0]
 80082f4:	6811      	ldr	r1, [r2, #0]
 80082f6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 80082fa:	6011      	str	r1, [r2, #0]
 80082fc:	6811      	ldr	r1, [r2, #0]
 80082fe:	064f      	lsls	r7, r1, #25
 8008300:	d403      	bmi.n	800830a <HAL_SPI_Receive+0x9e>
 8008302:	6811      	ldr	r1, [r2, #0]
 8008304:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8008308:	6011      	str	r1, [r2, #0]
 800830a:	68e1      	ldr	r1, [r4, #12]
 800830c:	2900      	cmp	r1, #0
 800830e:	d05a      	beq.n	80083c6 <HAL_SPI_Receive+0x15a>
 8008310:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008312:	b289      	uxth	r1, r1
 8008314:	b1a1      	cbz	r1, 8008340 <HAL_SPI_Receive+0xd4>
 8008316:	2d00      	cmp	r5, #0
 8008318:	f000 80b3 	beq.w	8008482 <HAL_SPI_Receive+0x216>
 800831c:	1c68      	adds	r0, r5, #1
 800831e:	d140      	bne.n	80083a2 <HAL_SPI_Receive+0x136>
 8008320:	6893      	ldr	r3, [r2, #8]
 8008322:	07d9      	lsls	r1, r3, #31
 8008324:	d547      	bpl.n	80083b6 <HAL_SPI_Receive+0x14a>
 8008326:	68d1      	ldr	r1, [r2, #12]
 8008328:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800832a:	f823 1b02 	strh.w	r1, [r3], #2
 800832e:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8008330:	63a3      	str	r3, [r4, #56]	; 0x38
 8008332:	3901      	subs	r1, #1
 8008334:	b289      	uxth	r1, r1
 8008336:	87e1      	strh	r1, [r4, #62]	; 0x3e
 8008338:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800833a:	b29b      	uxth	r3, r3
 800833c:	2b00      	cmp	r3, #0
 800833e:	d1ef      	bne.n	8008320 <HAL_SPI_Receive+0xb4>
 8008340:	6863      	ldr	r3, [r4, #4]
 8008342:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008346:	f000 80a0 	beq.w	800848a <HAL_SPI_Receive+0x21e>
 800834a:	4633      	mov	r3, r6
 800834c:	462a      	mov	r2, r5
 800834e:	2101      	movs	r1, #1
 8008350:	4620      	mov	r0, r4
 8008352:	f7ff fc31 	bl	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008356:	2800      	cmp	r0, #0
 8008358:	f040 80a7 	bne.w	80084aa <HAL_SPI_Receive+0x23e>
 800835c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800835e:	3800      	subs	r0, #0
 8008360:	bf18      	it	ne
 8008362:	2001      	movne	r0, #1
 8008364:	e79f      	b.n	80082a6 <HAL_SPI_Receive+0x3a>
 8008366:	6883      	ldr	r3, [r0, #8]
 8008368:	2b00      	cmp	r3, #0
 800836a:	d18a      	bne.n	8008282 <HAL_SPI_Receive+0x16>
 800836c:	9500      	str	r5, [sp, #0]
 800836e:	2504      	movs	r5, #4
 8008370:	4613      	mov	r3, r2
 8008372:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
 8008376:	460a      	mov	r2, r1
 8008378:	f7ff fe28 	bl	8007fcc <HAL_SPI_TransmitReceive>
 800837c:	e799      	b.n	80082b2 <HAL_SPI_Receive+0x46>
 800837e:	2002      	movs	r0, #2
 8008380:	b002      	add	sp, #8
 8008382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008386:	68db      	ldr	r3, [r3, #12]
 8008388:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800838a:	f822 3b02 	strh.w	r3, [r2], #2
 800838e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008390:	63a2      	str	r2, [r4, #56]	; 0x38
 8008392:	3b01      	subs	r3, #1
 8008394:	b29b      	uxth	r3, r3
 8008396:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008398:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800839a:	b29b      	uxth	r3, r3
 800839c:	2b00      	cmp	r3, #0
 800839e:	d0cf      	beq.n	8008340 <HAL_SPI_Receive+0xd4>
 80083a0:	6823      	ldr	r3, [r4, #0]
 80083a2:	689a      	ldr	r2, [r3, #8]
 80083a4:	07d2      	lsls	r2, r2, #31
 80083a6:	d4ee      	bmi.n	8008386 <HAL_SPI_Receive+0x11a>
 80083a8:	f7fd f8e2 	bl	8005570 <HAL_GetTick>
 80083ac:	1b83      	subs	r3, r0, r6
 80083ae:	429d      	cmp	r5, r3
 80083b0:	d8f2      	bhi.n	8008398 <HAL_SPI_Receive+0x12c>
 80083b2:	2003      	movs	r0, #3
 80083b4:	e777      	b.n	80082a6 <HAL_SPI_Receive+0x3a>
 80083b6:	f7fd f8db 	bl	8005570 <HAL_GetTick>
 80083ba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083bc:	b29b      	uxth	r3, r3
 80083be:	2b00      	cmp	r3, #0
 80083c0:	d0be      	beq.n	8008340 <HAL_SPI_Receive+0xd4>
 80083c2:	6822      	ldr	r2, [r4, #0]
 80083c4:	e7ac      	b.n	8008320 <HAL_SPI_Receive+0xb4>
 80083c6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80083c8:	b292      	uxth	r2, r2
 80083ca:	2a00      	cmp	r2, #0
 80083cc:	d0b8      	beq.n	8008340 <HAL_SPI_Receive+0xd4>
 80083ce:	2d00      	cmp	r5, #0
 80083d0:	d043      	beq.n	800845a <HAL_SPI_Receive+0x1ee>
 80083d2:	1c6f      	adds	r7, r5, #1
 80083d4:	d00f      	beq.n	80083f6 <HAL_SPI_Receive+0x18a>
 80083d6:	e027      	b.n	8008428 <HAL_SPI_Receive+0x1bc>
 80083d8:	7b1a      	ldrb	r2, [r3, #12]
 80083da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80083dc:	701a      	strb	r2, [r3, #0]
 80083de:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80083e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80083e2:	3901      	subs	r1, #1
 80083e4:	b289      	uxth	r1, r1
 80083e6:	87e1      	strh	r1, [r4, #62]	; 0x3e
 80083e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083ea:	3201      	adds	r2, #1
 80083ec:	b29b      	uxth	r3, r3
 80083ee:	63a2      	str	r2, [r4, #56]	; 0x38
 80083f0:	2b00      	cmp	r3, #0
 80083f2:	d0a5      	beq.n	8008340 <HAL_SPI_Receive+0xd4>
 80083f4:	6823      	ldr	r3, [r4, #0]
 80083f6:	689a      	ldr	r2, [r3, #8]
 80083f8:	07d0      	lsls	r0, r2, #31
 80083fa:	d4ed      	bmi.n	80083d8 <HAL_SPI_Receive+0x16c>
 80083fc:	f7fd f8b8 	bl	8005570 <HAL_GetTick>
 8008400:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008402:	b29b      	uxth	r3, r3
 8008404:	2b00      	cmp	r3, #0
 8008406:	d1f5      	bne.n	80083f4 <HAL_SPI_Receive+0x188>
 8008408:	e79a      	b.n	8008340 <HAL_SPI_Receive+0xd4>
 800840a:	7b1a      	ldrb	r2, [r3, #12]
 800840c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800840e:	701a      	strb	r2, [r3, #0]
 8008410:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008412:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008414:	3b01      	subs	r3, #1
 8008416:	3201      	adds	r2, #1
 8008418:	b29b      	uxth	r3, r3
 800841a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800841c:	63a2      	str	r2, [r4, #56]	; 0x38
 800841e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008420:	b29b      	uxth	r3, r3
 8008422:	2b00      	cmp	r3, #0
 8008424:	d08c      	beq.n	8008340 <HAL_SPI_Receive+0xd4>
 8008426:	6823      	ldr	r3, [r4, #0]
 8008428:	689a      	ldr	r2, [r3, #8]
 800842a:	07d1      	lsls	r1, r2, #31
 800842c:	d4ed      	bmi.n	800840a <HAL_SPI_Receive+0x19e>
 800842e:	f7fd f89f 	bl	8005570 <HAL_GetTick>
 8008432:	1b83      	subs	r3, r0, r6
 8008434:	429d      	cmp	r5, r3
 8008436:	d9bc      	bls.n	80083b2 <HAL_SPI_Receive+0x146>
 8008438:	e7f1      	b.n	800841e <HAL_SPI_Receive+0x1b2>
 800843a:	7b1a      	ldrb	r2, [r3, #12]
 800843c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800843e:	701a      	strb	r2, [r3, #0]
 8008440:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008442:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008444:	3b01      	subs	r3, #1
 8008446:	b29b      	uxth	r3, r3
 8008448:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800844a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800844c:	3201      	adds	r2, #1
 800844e:	b29b      	uxth	r3, r3
 8008450:	63a2      	str	r2, [r4, #56]	; 0x38
 8008452:	2b00      	cmp	r3, #0
 8008454:	f43f af74 	beq.w	8008340 <HAL_SPI_Receive+0xd4>
 8008458:	6823      	ldr	r3, [r4, #0]
 800845a:	689a      	ldr	r2, [r3, #8]
 800845c:	07d2      	lsls	r2, r2, #31
 800845e:	d4ec      	bmi.n	800843a <HAL_SPI_Receive+0x1ce>
 8008460:	f7fd f886 	bl	8005570 <HAL_GetTick>
 8008464:	e7a5      	b.n	80083b2 <HAL_SPI_Receive+0x146>
 8008466:	68d3      	ldr	r3, [r2, #12]
 8008468:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800846a:	f821 3b02 	strh.w	r3, [r1], #2
 800846e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008470:	63a1      	str	r1, [r4, #56]	; 0x38
 8008472:	3b01      	subs	r3, #1
 8008474:	b29b      	uxth	r3, r3
 8008476:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008478:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800847a:	b29b      	uxth	r3, r3
 800847c:	2b00      	cmp	r3, #0
 800847e:	f43f af5f 	beq.w	8008340 <HAL_SPI_Receive+0xd4>
 8008482:	6893      	ldr	r3, [r2, #8]
 8008484:	07db      	lsls	r3, r3, #31
 8008486:	d5eb      	bpl.n	8008460 <HAL_SPI_Receive+0x1f4>
 8008488:	e7ed      	b.n	8008466 <HAL_SPI_Receive+0x1fa>
 800848a:	68a3      	ldr	r3, [r4, #8]
 800848c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008490:	d021      	beq.n	80084d6 <HAL_SPI_Receive+0x26a>
 8008492:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008496:	d00f      	beq.n	80084b8 <HAL_SPI_Receive+0x24c>
 8008498:	4633      	mov	r3, r6
 800849a:	462a      	mov	r2, r5
 800849c:	2180      	movs	r1, #128	; 0x80
 800849e:	4620      	mov	r0, r4
 80084a0:	f7ff fb8a 	bl	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80084a4:	2800      	cmp	r0, #0
 80084a6:	f43f af59 	beq.w	800835c <HAL_SPI_Receive+0xf0>
 80084aa:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80084ac:	f043 0320 	orr.w	r3, r3, #32
 80084b0:	6563      	str	r3, [r4, #84]	; 0x54
 80084b2:	2320      	movs	r3, #32
 80084b4:	6563      	str	r3, [r4, #84]	; 0x54
 80084b6:	e751      	b.n	800835c <HAL_SPI_Receive+0xf0>
 80084b8:	6820      	ldr	r0, [r4, #0]
 80084ba:	4633      	mov	r3, r6
 80084bc:	6801      	ldr	r1, [r0, #0]
 80084be:	462a      	mov	r2, r5
 80084c0:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80084c4:	6001      	str	r1, [r0, #0]
 80084c6:	2101      	movs	r1, #1
 80084c8:	4620      	mov	r0, r4
 80084ca:	f7ff fb75 	bl	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80084ce:	2800      	cmp	r0, #0
 80084d0:	f43f af44 	beq.w	800835c <HAL_SPI_Receive+0xf0>
 80084d4:	e7e9      	b.n	80084aa <HAL_SPI_Receive+0x23e>
 80084d6:	6822      	ldr	r2, [r4, #0]
 80084d8:	6813      	ldr	r3, [r2, #0]
 80084da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80084de:	6013      	str	r3, [r2, #0]
 80084e0:	e7da      	b.n	8008498 <HAL_SPI_Receive+0x22c>
 80084e2:	bf00      	nop

080084e4 <HAL_SPI_ErrorCallback>:
 80084e4:	4770      	bx	lr
 80084e6:	bf00      	nop

080084e8 <HAL_SPI_IRQHandler>:
 80084e8:	b530      	push	{r4, r5, lr}
 80084ea:	6802      	ldr	r2, [r0, #0]
 80084ec:	4604      	mov	r4, r0
 80084ee:	6851      	ldr	r1, [r2, #4]
 80084f0:	6893      	ldr	r3, [r2, #8]
 80084f2:	b085      	sub	sp, #20
 80084f4:	f013 0f40 	tst.w	r3, #64	; 0x40
 80084f8:	f3c3 1580 	ubfx	r5, r3, #6, #1
 80084fc:	d105      	bne.n	800850a <HAL_SPI_IRQHandler+0x22>
 80084fe:	f013 0f01 	tst.w	r3, #1
 8008502:	d002      	beq.n	800850a <HAL_SPI_IRQHandler+0x22>
 8008504:	f011 0f40 	tst.w	r1, #64	; 0x40
 8008508:	d159      	bne.n	80085be <HAL_SPI_IRQHandler+0xd6>
 800850a:	0798      	lsls	r0, r3, #30
 800850c:	d501      	bpl.n	8008512 <HAL_SPI_IRQHandler+0x2a>
 800850e:	0608      	lsls	r0, r1, #24
 8008510:	d44f      	bmi.n	80085b2 <HAL_SPI_IRQHandler+0xca>
 8008512:	f3c3 1040 	ubfx	r0, r3, #5, #1
 8008516:	069b      	lsls	r3, r3, #26
 8008518:	d510      	bpl.n	800853c <HAL_SPI_IRQHandler+0x54>
 800851a:	0688      	lsls	r0, r1, #26
 800851c:	d50c      	bpl.n	8008538 <HAL_SPI_IRQHandler+0x50>
 800851e:	2d00      	cmp	r5, #0
 8008520:	d05a      	beq.n	80085d8 <HAL_SPI_IRQHandler+0xf0>
 8008522:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008526:	2b03      	cmp	r3, #3
 8008528:	d14b      	bne.n	80085c2 <HAL_SPI_IRQHandler+0xda>
 800852a:	2300      	movs	r3, #0
 800852c:	9302      	str	r3, [sp, #8]
 800852e:	68d3      	ldr	r3, [r2, #12]
 8008530:	9302      	str	r3, [sp, #8]
 8008532:	6893      	ldr	r3, [r2, #8]
 8008534:	9302      	str	r3, [sp, #8]
 8008536:	9b02      	ldr	r3, [sp, #8]
 8008538:	b005      	add	sp, #20
 800853a:	bd30      	pop	{r4, r5, pc}
 800853c:	2d00      	cmp	r5, #0
 800853e:	d0fb      	beq.n	8008538 <HAL_SPI_IRQHandler+0x50>
 8008540:	068b      	lsls	r3, r1, #26
 8008542:	d5f9      	bpl.n	8008538 <HAL_SPI_IRQHandler+0x50>
 8008544:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008548:	2b03      	cmp	r3, #3
 800854a:	d0ee      	beq.n	800852a <HAL_SPI_IRQHandler+0x42>
 800854c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800854e:	f043 0304 	orr.w	r3, r3, #4
 8008552:	6563      	str	r3, [r4, #84]	; 0x54
 8008554:	9001      	str	r0, [sp, #4]
 8008556:	68d3      	ldr	r3, [r2, #12]
 8008558:	9301      	str	r3, [sp, #4]
 800855a:	6893      	ldr	r3, [r2, #8]
 800855c:	9301      	str	r3, [sp, #4]
 800855e:	9b01      	ldr	r3, [sp, #4]
 8008560:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008562:	2b00      	cmp	r3, #0
 8008564:	d0e8      	beq.n	8008538 <HAL_SPI_IRQHandler+0x50>
 8008566:	2001      	movs	r0, #1
 8008568:	6853      	ldr	r3, [r2, #4]
 800856a:	0789      	lsls	r1, r1, #30
 800856c:	f023 03e0 	bic.w	r3, r3, #224	; 0xe0
 8008570:	6053      	str	r3, [r2, #4]
 8008572:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 8008576:	d03d      	beq.n	80085f4 <HAL_SPI_IRQHandler+0x10c>
 8008578:	6853      	ldr	r3, [r2, #4]
 800857a:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800857c:	f023 0303 	bic.w	r3, r3, #3
 8008580:	6053      	str	r3, [r2, #4]
 8008582:	b140      	cbz	r0, 8008596 <HAL_SPI_IRQHandler+0xae>
 8008584:	4b1d      	ldr	r3, [pc, #116]	; (80085fc <HAL_SPI_IRQHandler+0x114>)
 8008586:	6343      	str	r3, [r0, #52]	; 0x34
 8008588:	f7fd f880 	bl	800568c <HAL_DMA_Abort_IT>
 800858c:	b118      	cbz	r0, 8008596 <HAL_SPI_IRQHandler+0xae>
 800858e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008590:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008594:	6563      	str	r3, [r4, #84]	; 0x54
 8008596:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8008598:	2800      	cmp	r0, #0
 800859a:	d0cd      	beq.n	8008538 <HAL_SPI_IRQHandler+0x50>
 800859c:	4b17      	ldr	r3, [pc, #92]	; (80085fc <HAL_SPI_IRQHandler+0x114>)
 800859e:	6343      	str	r3, [r0, #52]	; 0x34
 80085a0:	f7fd f874 	bl	800568c <HAL_DMA_Abort_IT>
 80085a4:	2800      	cmp	r0, #0
 80085a6:	d0c7      	beq.n	8008538 <HAL_SPI_IRQHandler+0x50>
 80085a8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80085aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80085ae:	6563      	str	r3, [r4, #84]	; 0x54
 80085b0:	e7c2      	b.n	8008538 <HAL_SPI_IRQHandler+0x50>
 80085b2:	4620      	mov	r0, r4
 80085b4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80085b6:	b005      	add	sp, #20
 80085b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80085bc:	4718      	bx	r3
 80085be:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80085c0:	e7f9      	b.n	80085b6 <HAL_SPI_IRQHandler+0xce>
 80085c2:	2000      	movs	r0, #0
 80085c4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80085c6:	f043 0304 	orr.w	r3, r3, #4
 80085ca:	6563      	str	r3, [r4, #84]	; 0x54
 80085cc:	9001      	str	r0, [sp, #4]
 80085ce:	68d3      	ldr	r3, [r2, #12]
 80085d0:	9301      	str	r3, [sp, #4]
 80085d2:	6893      	ldr	r3, [r2, #8]
 80085d4:	9301      	str	r3, [sp, #4]
 80085d6:	9b01      	ldr	r3, [sp, #4]
 80085d8:	2000      	movs	r0, #0
 80085da:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80085dc:	f043 0301 	orr.w	r3, r3, #1
 80085e0:	6563      	str	r3, [r4, #84]	; 0x54
 80085e2:	9003      	str	r0, [sp, #12]
 80085e4:	6893      	ldr	r3, [r2, #8]
 80085e6:	9303      	str	r3, [sp, #12]
 80085e8:	6813      	ldr	r3, [r2, #0]
 80085ea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80085ee:	6013      	str	r3, [r2, #0]
 80085f0:	9b03      	ldr	r3, [sp, #12]
 80085f2:	e7b5      	b.n	8008560 <HAL_SPI_IRQHandler+0x78>
 80085f4:	4620      	mov	r0, r4
 80085f6:	f7ff ff75 	bl	80084e4 <HAL_SPI_ErrorCallback>
 80085fa:	e79d      	b.n	8008538 <HAL_SPI_IRQHandler+0x50>
 80085fc:	08008601 	.word	0x08008601

08008600 <SPI_DMAAbortOnError>:
 8008600:	b508      	push	{r3, lr}
 8008602:	2300      	movs	r3, #0
 8008604:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008606:	87c3      	strh	r3, [r0, #62]	; 0x3e
 8008608:	86c3      	strh	r3, [r0, #54]	; 0x36
 800860a:	f7ff ff6b 	bl	80084e4 <HAL_SPI_ErrorCallback>
 800860e:	bd08      	pop	{r3, pc}

08008610 <HAL_TIM_Base_Init>:
 8008610:	2800      	cmp	r0, #0
 8008612:	d049      	beq.n	80086a8 <HAL_TIM_Base_Init+0x98>
 8008614:	b510      	push	{r4, lr}
 8008616:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800861a:	4604      	mov	r4, r0
 800861c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008620:	2b00      	cmp	r3, #0
 8008622:	d03c      	beq.n	800869e <HAL_TIM_Base_Init+0x8e>
 8008624:	2302      	movs	r3, #2
 8008626:	6822      	ldr	r2, [r4, #0]
 8008628:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800862c:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008630:	6813      	ldr	r3, [r2, #0]
 8008632:	d013      	beq.n	800865c <HAL_TIM_Base_Init+0x4c>
 8008634:	491d      	ldr	r1, [pc, #116]	; (80086ac <HAL_TIM_Base_Init+0x9c>)
 8008636:	428a      	cmp	r2, r1
 8008638:	d010      	beq.n	800865c <HAL_TIM_Base_Init+0x4c>
 800863a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800863e:	428a      	cmp	r2, r1
 8008640:	d00c      	beq.n	800865c <HAL_TIM_Base_Init+0x4c>
 8008642:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 8008646:	428a      	cmp	r2, r1
 8008648:	d00c      	beq.n	8008664 <HAL_TIM_Base_Init+0x54>
 800864a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800864e:	428a      	cmp	r2, r1
 8008650:	d008      	beq.n	8008664 <HAL_TIM_Base_Init+0x54>
 8008652:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008656:	428a      	cmp	r2, r1
 8008658:	d108      	bne.n	800866c <HAL_TIM_Base_Init+0x5c>
 800865a:	e003      	b.n	8008664 <HAL_TIM_Base_Init+0x54>
 800865c:	68a1      	ldr	r1, [r4, #8]
 800865e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008662:	430b      	orrs	r3, r1
 8008664:	6921      	ldr	r1, [r4, #16]
 8008666:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800866a:	430b      	orrs	r3, r1
 800866c:	2101      	movs	r1, #1
 800866e:	6960      	ldr	r0, [r4, #20]
 8008670:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008674:	4303      	orrs	r3, r0
 8008676:	68e0      	ldr	r0, [r4, #12]
 8008678:	6013      	str	r3, [r2, #0]
 800867a:	6863      	ldr	r3, [r4, #4]
 800867c:	62d0      	str	r0, [r2, #44]	; 0x2c
 800867e:	6293      	str	r3, [r2, #40]	; 0x28
 8008680:	6151      	str	r1, [r2, #20]
 8008682:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8008686:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
 800868a:	f884 103b 	strb.w	r1, [r4, #59]	; 0x3b
 800868e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
 8008692:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8008696:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 800869a:	2000      	movs	r0, #0
 800869c:	bd10      	pop	{r4, pc}
 800869e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80086a2:	f7fc fddb 	bl	800525c <HAL_TIM_Base_MspInit>
 80086a6:	e7bd      	b.n	8008624 <HAL_TIM_Base_Init+0x14>
 80086a8:	2001      	movs	r0, #1
 80086aa:	4770      	bx	lr
 80086ac:	40000400 	.word	0x40000400

080086b0 <HAL_TIM_Base_Start_IT>:
 80086b0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80086b4:	2b01      	cmp	r3, #1
 80086b6:	d120      	bne.n	80086fa <HAL_TIM_Base_Start_IT+0x4a>
 80086b8:	2202      	movs	r2, #2
 80086ba:	6803      	ldr	r3, [r0, #0]
 80086bc:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 80086c0:	68da      	ldr	r2, [r3, #12]
 80086c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80086c6:	f042 0201 	orr.w	r2, r2, #1
 80086ca:	60da      	str	r2, [r3, #12]
 80086cc:	d00a      	beq.n	80086e4 <HAL_TIM_Base_Start_IT+0x34>
 80086ce:	4a0d      	ldr	r2, [pc, #52]	; (8008704 <HAL_TIM_Base_Start_IT+0x54>)
 80086d0:	4293      	cmp	r3, r2
 80086d2:	d007      	beq.n	80086e4 <HAL_TIM_Base_Start_IT+0x34>
 80086d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80086d8:	4293      	cmp	r3, r2
 80086da:	d003      	beq.n	80086e4 <HAL_TIM_Base_Start_IT+0x34>
 80086dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80086e0:	4293      	cmp	r3, r2
 80086e2:	d104      	bne.n	80086ee <HAL_TIM_Base_Start_IT+0x3e>
 80086e4:	689a      	ldr	r2, [r3, #8]
 80086e6:	f002 0207 	and.w	r2, r2, #7
 80086ea:	2a06      	cmp	r2, #6
 80086ec:	d007      	beq.n	80086fe <HAL_TIM_Base_Start_IT+0x4e>
 80086ee:	681a      	ldr	r2, [r3, #0]
 80086f0:	2000      	movs	r0, #0
 80086f2:	f042 0201 	orr.w	r2, r2, #1
 80086f6:	601a      	str	r2, [r3, #0]
 80086f8:	4770      	bx	lr
 80086fa:	2001      	movs	r0, #1
 80086fc:	4770      	bx	lr
 80086fe:	2000      	movs	r0, #0
 8008700:	4770      	bx	lr
 8008702:	bf00      	nop
 8008704:	40000400 	.word	0x40000400

08008708 <HAL_TIM_Encoder_Init>:
 8008708:	2800      	cmp	r0, #0
 800870a:	d075      	beq.n	80087f8 <HAL_TIM_Encoder_Init+0xf0>
 800870c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800870e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008712:	4604      	mov	r4, r0
 8008714:	460d      	mov	r5, r1
 8008716:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800871a:	2b00      	cmp	r3, #0
 800871c:	d067      	beq.n	80087ee <HAL_TIM_Encoder_Init+0xe6>
 800871e:	2202      	movs	r2, #2
 8008720:	6823      	ldr	r3, [r4, #0]
 8008722:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
 8008726:	689a      	ldr	r2, [r3, #8]
 8008728:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800872c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8008730:	f022 0207 	bic.w	r2, r2, #7
 8008734:	609a      	str	r2, [r3, #8]
 8008736:	681a      	ldr	r2, [r3, #0]
 8008738:	d013      	beq.n	8008762 <HAL_TIM_Encoder_Init+0x5a>
 800873a:	4930      	ldr	r1, [pc, #192]	; (80087fc <HAL_TIM_Encoder_Init+0xf4>)
 800873c:	428b      	cmp	r3, r1
 800873e:	d010      	beq.n	8008762 <HAL_TIM_Encoder_Init+0x5a>
 8008740:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008744:	428b      	cmp	r3, r1
 8008746:	d00c      	beq.n	8008762 <HAL_TIM_Encoder_Init+0x5a>
 8008748:	f501 3180 	add.w	r1, r1, #65536	; 0x10000
 800874c:	428b      	cmp	r3, r1
 800874e:	d00c      	beq.n	800876a <HAL_TIM_Encoder_Init+0x62>
 8008750:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8008754:	428b      	cmp	r3, r1
 8008756:	d008      	beq.n	800876a <HAL_TIM_Encoder_Init+0x62>
 8008758:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800875c:	428b      	cmp	r3, r1
 800875e:	d108      	bne.n	8008772 <HAL_TIM_Encoder_Init+0x6a>
 8008760:	e003      	b.n	800876a <HAL_TIM_Encoder_Init+0x62>
 8008762:	68a1      	ldr	r1, [r4, #8]
 8008764:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008768:	430a      	orrs	r2, r1
 800876a:	6921      	ldr	r1, [r4, #16]
 800876c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8008770:	430a      	orrs	r2, r1
 8008772:	2601      	movs	r6, #1
 8008774:	6961      	ldr	r1, [r4, #20]
 8008776:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800877a:	430a      	orrs	r2, r1
 800877c:	68e1      	ldr	r1, [r4, #12]
 800877e:	601a      	str	r2, [r3, #0]
 8008780:	6862      	ldr	r2, [r4, #4]
 8008782:	62d9      	str	r1, [r3, #44]	; 0x2c
 8008784:	629a      	str	r2, [r3, #40]	; 0x28
 8008786:	69a9      	ldr	r1, [r5, #24]
 8008788:	68aa      	ldr	r2, [r5, #8]
 800878a:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 800878e:	692a      	ldr	r2, [r5, #16]
 8008790:	615e      	str	r6, [r3, #20]
 8008792:	6898      	ldr	r0, [r3, #8]
 8008794:	699f      	ldr	r7, [r3, #24]
 8008796:	0112      	lsls	r2, r2, #4
 8008798:	f427 7c40 	bic.w	ip, r7, #768	; 0x300
 800879c:	69ef      	ldr	r7, [r5, #28]
 800879e:	f02c 0c03 	bic.w	ip, ip, #3
 80087a2:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 80087a6:	68ef      	ldr	r7, [r5, #12]
 80087a8:	ea41 010c 	orr.w	r1, r1, ip
 80087ac:	433a      	orrs	r2, r7
 80087ae:	6a1f      	ldr	r7, [r3, #32]
 80087b0:	f421 417c 	bic.w	r1, r1, #64512	; 0xfc00
 80087b4:	f027 0caa 	bic.w	ip, r7, #170	; 0xaa
 80087b8:	6a2f      	ldr	r7, [r5, #32]
 80087ba:	f021 01fc 	bic.w	r1, r1, #252	; 0xfc
 80087be:	ea42 3207 	orr.w	r2, r2, r7, lsl #12
 80087c2:	430a      	orrs	r2, r1
 80087c4:	696f      	ldr	r7, [r5, #20]
 80087c6:	6869      	ldr	r1, [r5, #4]
 80087c8:	682d      	ldr	r5, [r5, #0]
 80087ca:	ea41 1107 	orr.w	r1, r1, r7, lsl #4
 80087ce:	4328      	orrs	r0, r5
 80087d0:	ea41 010c 	orr.w	r1, r1, ip
 80087d4:	6098      	str	r0, [r3, #8]
 80087d6:	619a      	str	r2, [r3, #24]
 80087d8:	6219      	str	r1, [r3, #32]
 80087da:	f884 603e 	strb.w	r6, [r4, #62]	; 0x3e
 80087de:	f884 603a 	strb.w	r6, [r4, #58]	; 0x3a
 80087e2:	f884 603b 	strb.w	r6, [r4, #59]	; 0x3b
 80087e6:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 80087ea:	2000      	movs	r0, #0
 80087ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087ee:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80087f2:	f7fc fd73 	bl	80052dc <HAL_TIM_Encoder_MspInit>
 80087f6:	e792      	b.n	800871e <HAL_TIM_Encoder_Init+0x16>
 80087f8:	2001      	movs	r0, #1
 80087fa:	4770      	bx	lr
 80087fc:	40000400 	.word	0x40000400

08008800 <HAL_TIM_Encoder_Start>:
 8008800:	4603      	mov	r3, r0
 8008802:	f890 003a 	ldrb.w	r0, [r0, #58]	; 0x3a
 8008806:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 800880a:	b2c0      	uxtb	r0, r0
 800880c:	b2d2      	uxtb	r2, r2
 800880e:	b9a9      	cbnz	r1, 800883c <HAL_TIM_Encoder_Start+0x3c>
 8008810:	2801      	cmp	r0, #1
 8008812:	d001      	beq.n	8008818 <HAL_TIM_Encoder_Start+0x18>
 8008814:	2001      	movs	r0, #1
 8008816:	4770      	bx	lr
 8008818:	2102      	movs	r1, #2
 800881a:	681a      	ldr	r2, [r3, #0]
 800881c:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8008820:	6a13      	ldr	r3, [r2, #32]
 8008822:	f023 0301 	bic.w	r3, r3, #1
 8008826:	6213      	str	r3, [r2, #32]
 8008828:	6a13      	ldr	r3, [r2, #32]
 800882a:	f043 0301 	orr.w	r3, r3, #1
 800882e:	6213      	str	r3, [r2, #32]
 8008830:	6813      	ldr	r3, [r2, #0]
 8008832:	2000      	movs	r0, #0
 8008834:	f043 0301 	orr.w	r3, r3, #1
 8008838:	6013      	str	r3, [r2, #0]
 800883a:	4770      	bx	lr
 800883c:	2904      	cmp	r1, #4
 800883e:	d01a      	beq.n	8008876 <HAL_TIM_Encoder_Start+0x76>
 8008840:	2801      	cmp	r0, #1
 8008842:	d1e7      	bne.n	8008814 <HAL_TIM_Encoder_Start+0x14>
 8008844:	2a01      	cmp	r2, #1
 8008846:	d1e6      	bne.n	8008816 <HAL_TIM_Encoder_Start+0x16>
 8008848:	2102      	movs	r1, #2
 800884a:	681a      	ldr	r2, [r3, #0]
 800884c:	f883 103a 	strb.w	r1, [r3, #58]	; 0x3a
 8008850:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 8008854:	6a13      	ldr	r3, [r2, #32]
 8008856:	f023 0301 	bic.w	r3, r3, #1
 800885a:	6213      	str	r3, [r2, #32]
 800885c:	6a13      	ldr	r3, [r2, #32]
 800885e:	f043 0301 	orr.w	r3, r3, #1
 8008862:	6213      	str	r3, [r2, #32]
 8008864:	6a13      	ldr	r3, [r2, #32]
 8008866:	f023 0310 	bic.w	r3, r3, #16
 800886a:	6213      	str	r3, [r2, #32]
 800886c:	6a13      	ldr	r3, [r2, #32]
 800886e:	f043 0310 	orr.w	r3, r3, #16
 8008872:	6213      	str	r3, [r2, #32]
 8008874:	e7dc      	b.n	8008830 <HAL_TIM_Encoder_Start+0x30>
 8008876:	2a01      	cmp	r2, #1
 8008878:	d1cc      	bne.n	8008814 <HAL_TIM_Encoder_Start+0x14>
 800887a:	2102      	movs	r1, #2
 800887c:	681a      	ldr	r2, [r3, #0]
 800887e:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
 8008882:	e7ef      	b.n	8008864 <HAL_TIM_Encoder_Start+0x64>

08008884 <HAL_TIM_ConfigClockSource>:
 8008884:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8008888:	2a01      	cmp	r2, #1
 800888a:	d075      	beq.n	8008978 <HAL_TIM_ConfigClockSource+0xf4>
 800888c:	b430      	push	{r4, r5}
 800888e:	4603      	mov	r3, r0
 8008890:	2401      	movs	r4, #1
 8008892:	2202      	movs	r2, #2
 8008894:	6800      	ldr	r0, [r0, #0]
 8008896:	f883 4038 	strb.w	r4, [r3, #56]	; 0x38
 800889a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800889e:	6884      	ldr	r4, [r0, #8]
 80088a0:	680a      	ldr	r2, [r1, #0]
 80088a2:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 80088a6:	f024 0477 	bic.w	r4, r4, #119	; 0x77
 80088aa:	2a60      	cmp	r2, #96	; 0x60
 80088ac:	6084      	str	r4, [r0, #8]
 80088ae:	d065      	beq.n	800897c <HAL_TIM_ConfigClockSource+0xf8>
 80088b0:	d831      	bhi.n	8008916 <HAL_TIM_ConfigClockSource+0x92>
 80088b2:	2a40      	cmp	r2, #64	; 0x40
 80088b4:	d048      	beq.n	8008948 <HAL_TIM_ConfigClockSource+0xc4>
 80088b6:	d921      	bls.n	80088fc <HAL_TIM_ConfigClockSource+0x78>
 80088b8:	2a50      	cmp	r2, #80	; 0x50
 80088ba:	d116      	bne.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 80088bc:	684c      	ldr	r4, [r1, #4]
 80088be:	68cd      	ldr	r5, [r1, #12]
 80088c0:	6a01      	ldr	r1, [r0, #32]
 80088c2:	f021 010a 	bic.w	r1, r1, #10
 80088c6:	4321      	orrs	r1, r4
 80088c8:	6a04      	ldr	r4, [r0, #32]
 80088ca:	f024 0401 	bic.w	r4, r4, #1
 80088ce:	6204      	str	r4, [r0, #32]
 80088d0:	6982      	ldr	r2, [r0, #24]
 80088d2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80088d6:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 80088da:	6182      	str	r2, [r0, #24]
 80088dc:	6201      	str	r1, [r0, #32]
 80088de:	6882      	ldr	r2, [r0, #8]
 80088e0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80088e4:	f042 0257 	orr.w	r2, r2, #87	; 0x57
 80088e8:	6082      	str	r2, [r0, #8]
 80088ea:	2200      	movs	r2, #0
 80088ec:	2101      	movs	r1, #1
 80088ee:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80088f2:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 80088f6:	4610      	mov	r0, r2
 80088f8:	bc30      	pop	{r4, r5}
 80088fa:	4770      	bx	lr
 80088fc:	2a20      	cmp	r2, #32
 80088fe:	d002      	beq.n	8008906 <HAL_TIM_ConfigClockSource+0x82>
 8008900:	d91e      	bls.n	8008940 <HAL_TIM_ConfigClockSource+0xbc>
 8008902:	2a30      	cmp	r2, #48	; 0x30
 8008904:	d1f1      	bne.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008906:	6881      	ldr	r1, [r0, #8]
 8008908:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 800890c:	430a      	orrs	r2, r1
 800890e:	f042 0207 	orr.w	r2, r2, #7
 8008912:	6082      	str	r2, [r0, #8]
 8008914:	e7e9      	b.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008916:	2a70      	cmp	r2, #112	; 0x70
 8008918:	d049      	beq.n	80089ae <HAL_TIM_ConfigClockSource+0x12a>
 800891a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800891e:	d1e4      	bne.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008920:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 8008924:	6884      	ldr	r4, [r0, #8]
 8008926:	432a      	orrs	r2, r5
 8008928:	68cd      	ldr	r5, [r1, #12]
 800892a:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 800892e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8008932:	430a      	orrs	r2, r1
 8008934:	6082      	str	r2, [r0, #8]
 8008936:	6882      	ldr	r2, [r0, #8]
 8008938:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800893c:	6082      	str	r2, [r0, #8]
 800893e:	e7d4      	b.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008940:	f032 0110 	bics.w	r1, r2, #16
 8008944:	d1d1      	bne.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008946:	e7de      	b.n	8008906 <HAL_TIM_ConfigClockSource+0x82>
 8008948:	684c      	ldr	r4, [r1, #4]
 800894a:	68cd      	ldr	r5, [r1, #12]
 800894c:	6a01      	ldr	r1, [r0, #32]
 800894e:	f021 010a 	bic.w	r1, r1, #10
 8008952:	4321      	orrs	r1, r4
 8008954:	6a04      	ldr	r4, [r0, #32]
 8008956:	f024 0401 	bic.w	r4, r4, #1
 800895a:	6204      	str	r4, [r0, #32]
 800895c:	6982      	ldr	r2, [r0, #24]
 800895e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8008962:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 8008966:	6182      	str	r2, [r0, #24]
 8008968:	6201      	str	r1, [r0, #32]
 800896a:	6882      	ldr	r2, [r0, #8]
 800896c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008970:	f042 0247 	orr.w	r2, r2, #71	; 0x47
 8008974:	6082      	str	r2, [r0, #8]
 8008976:	e7b8      	b.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 8008978:	2002      	movs	r0, #2
 800897a:	4770      	bx	lr
 800897c:	6a04      	ldr	r4, [r0, #32]
 800897e:	68ca      	ldr	r2, [r1, #12]
 8008980:	f024 0410 	bic.w	r4, r4, #16
 8008984:	684d      	ldr	r5, [r1, #4]
 8008986:	6204      	str	r4, [r0, #32]
 8008988:	6981      	ldr	r1, [r0, #24]
 800898a:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 800898e:	ea41 3102 	orr.w	r1, r1, r2, lsl #12
 8008992:	6a02      	ldr	r2, [r0, #32]
 8008994:	6181      	str	r1, [r0, #24]
 8008996:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 800899a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
 800899e:	6202      	str	r2, [r0, #32]
 80089a0:	6882      	ldr	r2, [r0, #8]
 80089a2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80089a6:	f042 0267 	orr.w	r2, r2, #103	; 0x67
 80089aa:	6082      	str	r2, [r0, #8]
 80089ac:	e79d      	b.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 80089ae:	e9d1 5201 	ldrd	r5, r2, [r1, #4]
 80089b2:	6884      	ldr	r4, [r0, #8]
 80089b4:	432a      	orrs	r2, r5
 80089b6:	68cd      	ldr	r5, [r1, #12]
 80089b8:	f424 417f 	bic.w	r1, r4, #65280	; 0xff00
 80089bc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80089c0:	430a      	orrs	r2, r1
 80089c2:	6082      	str	r2, [r0, #8]
 80089c4:	6882      	ldr	r2, [r0, #8]
 80089c6:	f042 0277 	orr.w	r2, r2, #119	; 0x77
 80089ca:	6082      	str	r2, [r0, #8]
 80089cc:	e78d      	b.n	80088ea <HAL_TIM_ConfigClockSource+0x66>
 80089ce:	bf00      	nop

080089d0 <HAL_TIM_OC_DelayElapsedCallback>:
 80089d0:	4770      	bx	lr
 80089d2:	bf00      	nop

080089d4 <HAL_TIM_IC_CaptureCallback>:
 80089d4:	4770      	bx	lr
 80089d6:	bf00      	nop

080089d8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80089d8:	4770      	bx	lr
 80089da:	bf00      	nop

080089dc <HAL_TIM_TriggerCallback>:
 80089dc:	4770      	bx	lr
 80089de:	bf00      	nop

080089e0 <HAL_TIM_IRQHandler>:
 80089e0:	6803      	ldr	r3, [r0, #0]
 80089e2:	b510      	push	{r4, lr}
 80089e4:	691a      	ldr	r2, [r3, #16]
 80089e6:	4604      	mov	r4, r0
 80089e8:	0791      	lsls	r1, r2, #30
 80089ea:	d502      	bpl.n	80089f2 <HAL_TIM_IRQHandler+0x12>
 80089ec:	68da      	ldr	r2, [r3, #12]
 80089ee:	0792      	lsls	r2, r2, #30
 80089f0:	d450      	bmi.n	8008a94 <HAL_TIM_IRQHandler+0xb4>
 80089f2:	691a      	ldr	r2, [r3, #16]
 80089f4:	0752      	lsls	r2, r2, #29
 80089f6:	d502      	bpl.n	80089fe <HAL_TIM_IRQHandler+0x1e>
 80089f8:	68da      	ldr	r2, [r3, #12]
 80089fa:	0750      	lsls	r0, r2, #29
 80089fc:	d437      	bmi.n	8008a6e <HAL_TIM_IRQHandler+0x8e>
 80089fe:	691a      	ldr	r2, [r3, #16]
 8008a00:	0711      	lsls	r1, r2, #28
 8008a02:	d502      	bpl.n	8008a0a <HAL_TIM_IRQHandler+0x2a>
 8008a04:	68da      	ldr	r2, [r3, #12]
 8008a06:	0712      	lsls	r2, r2, #28
 8008a08:	d422      	bmi.n	8008a50 <HAL_TIM_IRQHandler+0x70>
 8008a0a:	691a      	ldr	r2, [r3, #16]
 8008a0c:	06d0      	lsls	r0, r2, #27
 8008a0e:	d502      	bpl.n	8008a16 <HAL_TIM_IRQHandler+0x36>
 8008a10:	68da      	ldr	r2, [r3, #12]
 8008a12:	06d1      	lsls	r1, r2, #27
 8008a14:	d40c      	bmi.n	8008a30 <HAL_TIM_IRQHandler+0x50>
 8008a16:	691a      	ldr	r2, [r3, #16]
 8008a18:	07d2      	lsls	r2, r2, #31
 8008a1a:	d502      	bpl.n	8008a22 <HAL_TIM_IRQHandler+0x42>
 8008a1c:	68da      	ldr	r2, [r3, #12]
 8008a1e:	07d0      	lsls	r0, r2, #31
 8008a20:	d450      	bmi.n	8008ac4 <HAL_TIM_IRQHandler+0xe4>
 8008a22:	691a      	ldr	r2, [r3, #16]
 8008a24:	0651      	lsls	r1, r2, #25
 8008a26:	d502      	bpl.n	8008a2e <HAL_TIM_IRQHandler+0x4e>
 8008a28:	68da      	ldr	r2, [r3, #12]
 8008a2a:	0652      	lsls	r2, r2, #25
 8008a2c:	d443      	bmi.n	8008ab6 <HAL_TIM_IRQHandler+0xd6>
 8008a2e:	bd10      	pop	{r4, pc}
 8008a30:	f06f 0110 	mvn.w	r1, #16
 8008a34:	2208      	movs	r2, #8
 8008a36:	6119      	str	r1, [r3, #16]
 8008a38:	7622      	strb	r2, [r4, #24]
 8008a3a:	69db      	ldr	r3, [r3, #28]
 8008a3c:	4620      	mov	r0, r4
 8008a3e:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008a42:	d047      	beq.n	8008ad4 <HAL_TIM_IRQHandler+0xf4>
 8008a44:	f7ff ffc6 	bl	80089d4 <HAL_TIM_IC_CaptureCallback>
 8008a48:	2200      	movs	r2, #0
 8008a4a:	6823      	ldr	r3, [r4, #0]
 8008a4c:	7622      	strb	r2, [r4, #24]
 8008a4e:	e7e2      	b.n	8008a16 <HAL_TIM_IRQHandler+0x36>
 8008a50:	f06f 0108 	mvn.w	r1, #8
 8008a54:	2204      	movs	r2, #4
 8008a56:	6119      	str	r1, [r3, #16]
 8008a58:	7622      	strb	r2, [r4, #24]
 8008a5a:	69db      	ldr	r3, [r3, #28]
 8008a5c:	4620      	mov	r0, r4
 8008a5e:	079b      	lsls	r3, r3, #30
 8008a60:	d044      	beq.n	8008aec <HAL_TIM_IRQHandler+0x10c>
 8008a62:	f7ff ffb7 	bl	80089d4 <HAL_TIM_IC_CaptureCallback>
 8008a66:	2200      	movs	r2, #0
 8008a68:	6823      	ldr	r3, [r4, #0]
 8008a6a:	7622      	strb	r2, [r4, #24]
 8008a6c:	e7cd      	b.n	8008a0a <HAL_TIM_IRQHandler+0x2a>
 8008a6e:	f06f 0104 	mvn.w	r1, #4
 8008a72:	2202      	movs	r2, #2
 8008a74:	6119      	str	r1, [r3, #16]
 8008a76:	7622      	strb	r2, [r4, #24]
 8008a78:	699b      	ldr	r3, [r3, #24]
 8008a7a:	4620      	mov	r0, r4
 8008a7c:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008a80:	d131      	bne.n	8008ae6 <HAL_TIM_IRQHandler+0x106>
 8008a82:	f7ff ffa5 	bl	80089d0 <HAL_TIM_OC_DelayElapsedCallback>
 8008a86:	4620      	mov	r0, r4
 8008a88:	f7ff ffa6 	bl	80089d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8008a8c:	2200      	movs	r2, #0
 8008a8e:	6823      	ldr	r3, [r4, #0]
 8008a90:	7622      	strb	r2, [r4, #24]
 8008a92:	e7b4      	b.n	80089fe <HAL_TIM_IRQHandler+0x1e>
 8008a94:	f06f 0102 	mvn.w	r1, #2
 8008a98:	2201      	movs	r2, #1
 8008a9a:	6119      	str	r1, [r3, #16]
 8008a9c:	7602      	strb	r2, [r0, #24]
 8008a9e:	699b      	ldr	r3, [r3, #24]
 8008aa0:	0799      	lsls	r1, r3, #30
 8008aa2:	d11d      	bne.n	8008ae0 <HAL_TIM_IRQHandler+0x100>
 8008aa4:	f7ff ff94 	bl	80089d0 <HAL_TIM_OC_DelayElapsedCallback>
 8008aa8:	4620      	mov	r0, r4
 8008aaa:	f7ff ff95 	bl	80089d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8008aae:	2200      	movs	r2, #0
 8008ab0:	6823      	ldr	r3, [r4, #0]
 8008ab2:	7622      	strb	r2, [r4, #24]
 8008ab4:	e79d      	b.n	80089f2 <HAL_TIM_IRQHandler+0x12>
 8008ab6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008aba:	4620      	mov	r0, r4
 8008abc:	611a      	str	r2, [r3, #16]
 8008abe:	f7ff ff8d 	bl	80089dc <HAL_TIM_TriggerCallback>
 8008ac2:	bd10      	pop	{r4, pc}
 8008ac4:	f06f 0201 	mvn.w	r2, #1
 8008ac8:	4620      	mov	r0, r4
 8008aca:	611a      	str	r2, [r3, #16]
 8008acc:	f7fb fa10 	bl	8003ef0 <HAL_TIM_PeriodElapsedCallback>
 8008ad0:	6823      	ldr	r3, [r4, #0]
 8008ad2:	e7a6      	b.n	8008a22 <HAL_TIM_IRQHandler+0x42>
 8008ad4:	f7ff ff7c 	bl	80089d0 <HAL_TIM_OC_DelayElapsedCallback>
 8008ad8:	4620      	mov	r0, r4
 8008ada:	f7ff ff7d 	bl	80089d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8008ade:	e7b3      	b.n	8008a48 <HAL_TIM_IRQHandler+0x68>
 8008ae0:	f7ff ff78 	bl	80089d4 <HAL_TIM_IC_CaptureCallback>
 8008ae4:	e7e3      	b.n	8008aae <HAL_TIM_IRQHandler+0xce>
 8008ae6:	f7ff ff75 	bl	80089d4 <HAL_TIM_IC_CaptureCallback>
 8008aea:	e7cf      	b.n	8008a8c <HAL_TIM_IRQHandler+0xac>
 8008aec:	f7ff ff70 	bl	80089d0 <HAL_TIM_OC_DelayElapsedCallback>
 8008af0:	4620      	mov	r0, r4
 8008af2:	f7ff ff71 	bl	80089d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8008af6:	e7b6      	b.n	8008a66 <HAL_TIM_IRQHandler+0x86>

08008af8 <HAL_TIMEx_MasterConfigSynchronization>:
 8008af8:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8008afc:	2a01      	cmp	r2, #1
 8008afe:	d028      	beq.n	8008b52 <HAL_TIMEx_MasterConfigSynchronization+0x5a>
 8008b00:	4603      	mov	r3, r0
 8008b02:	2002      	movs	r0, #2
 8008b04:	681a      	ldr	r2, [r3, #0]
 8008b06:	b430      	push	{r4, r5}
 8008b08:	f883 0039 	strb.w	r0, [r3, #57]	; 0x39
 8008b0c:	6850      	ldr	r0, [r2, #4]
 8008b0e:	680d      	ldr	r5, [r1, #0]
 8008b10:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 8008b14:	4328      	orrs	r0, r5
 8008b16:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008b1a:	6894      	ldr	r4, [r2, #8]
 8008b1c:	6050      	str	r0, [r2, #4]
 8008b1e:	d00a      	beq.n	8008b36 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008b20:	480d      	ldr	r0, [pc, #52]	; (8008b58 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 8008b22:	4282      	cmp	r2, r0
 8008b24:	d007      	beq.n	8008b36 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008b26:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8008b2a:	4282      	cmp	r2, r0
 8008b2c:	d003      	beq.n	8008b36 <HAL_TIMEx_MasterConfigSynchronization+0x3e>
 8008b2e:	f500 3080 	add.w	r0, r0, #65536	; 0x10000
 8008b32:	4282      	cmp	r2, r0
 8008b34:	d104      	bne.n	8008b40 <HAL_TIMEx_MasterConfigSynchronization+0x48>
 8008b36:	6849      	ldr	r1, [r1, #4]
 8008b38:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8008b3c:	430c      	orrs	r4, r1
 8008b3e:	6094      	str	r4, [r2, #8]
 8008b40:	2200      	movs	r2, #0
 8008b42:	2101      	movs	r1, #1
 8008b44:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008b48:	f883 1039 	strb.w	r1, [r3, #57]	; 0x39
 8008b4c:	4610      	mov	r0, r2
 8008b4e:	bc30      	pop	{r4, r5}
 8008b50:	4770      	bx	lr
 8008b52:	2002      	movs	r0, #2
 8008b54:	4770      	bx	lr
 8008b56:	bf00      	nop
 8008b58:	40000400 	.word	0x40000400

08008b5c <USB_EnableGlobalInt>:
 8008b5c:	4603      	mov	r3, r0
 8008b5e:	2200      	movs	r2, #0
 8008b60:	f44f 413f 	mov.w	r1, #48896	; 0xbf00
 8008b64:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008b68:	4610      	mov	r0, r2
 8008b6a:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008b6e:	4770      	bx	lr

08008b70 <USB_DisableGlobalInt>:
 8008b70:	4603      	mov	r3, r0
 8008b72:	f244 02ff 	movw	r2, #16639	; 0x40ff
 8008b76:	f8b3 1040 	ldrh.w	r1, [r3, #64]	; 0x40
 8008b7a:	2000      	movs	r0, #0
 8008b7c:	400a      	ands	r2, r1
 8008b7e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008b82:	4770      	bx	lr

08008b84 <USB_DevInit>:
 8008b84:	b084      	sub	sp, #16
 8008b86:	f10d 0c04 	add.w	ip, sp, #4
 8008b8a:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 8008b8e:	4603      	mov	r3, r0
 8008b90:	2200      	movs	r2, #0
 8008b92:	2101      	movs	r1, #1
 8008b94:	4610      	mov	r0, r2
 8008b96:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 8008b9a:	b004      	add	sp, #16
 8008b9c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8008ba0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8008ba4:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8008ba8:	4770      	bx	lr
 8008baa:	bf00      	nop

08008bac <USB_ActivateEndpoint>:
 8008bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008bae:	780a      	ldrb	r2, [r1, #0]
 8008bb0:	f891 e003 	ldrb.w	lr, [r1, #3]
 8008bb4:	f830 c022 	ldrh.w	ip, [r0, r2, lsl #2]
 8008bb8:	4603      	mov	r3, r0
 8008bba:	f42c 4cec 	bic.w	ip, ip, #30208	; 0x7600
 8008bbe:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 8008bc2:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8008bc6:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8008bca:	f1be 0f03 	cmp.w	lr, #3
 8008bce:	f200 815a 	bhi.w	8008e86 <USB_ActivateEndpoint+0x2da>
 8008bd2:	e8df f00e 	tbb	[pc, lr]
 8008bd6:	4e52      	.short	0x4e52
 8008bd8:	0204      	.short	0x0204
 8008bda:	f44c 6cc0 	orr.w	ip, ip, #1536	; 0x600
 8008bde:	2000      	movs	r0, #0
 8008be0:	f248 0580 	movw	r5, #32896	; 0x8080
 8008be4:	ea4c 0c05 	orr.w	ip, ip, r5
 8008be8:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8008bec:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8008bf0:	4ca6      	ldr	r4, [pc, #664]	; (8008e8c <USB_ActivateEndpoint+0x2e0>)
 8008bf2:	fa1f fc8c 	uxth.w	ip, ip
 8008bf6:	ea0c 0c04 	and.w	ip, ip, r4
 8008bfa:	ea4c 0c02 	orr.w	ip, ip, r2
 8008bfe:	ea45 050c 	orr.w	r5, r5, ip
 8008c02:	f823 5022 	strh.w	r5, [r3, r2, lsl #2]
 8008c06:	7b0d      	ldrb	r5, [r1, #12]
 8008c08:	2d00      	cmp	r5, #0
 8008c0a:	d17e      	bne.n	8008d0a <USB_ActivateEndpoint+0x15e>
 8008c0c:	784d      	ldrb	r5, [r1, #1]
 8008c0e:	2d00      	cmp	r5, #0
 8008c10:	f000 80dd 	beq.w	8008dce <USB_ActivateEndpoint+0x222>
 8008c14:	88c9      	ldrh	r1, [r1, #6]
 8008c16:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8008c1a:	0849      	lsrs	r1, r1, #1
 8008c1c:	eb03 1602 	add.w	r6, r3, r2, lsl #4
 8008c20:	0049      	lsls	r1, r1, #1
 8008c22:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8008c26:	b2ad      	uxth	r5, r5
 8008c28:	5371      	strh	r1, [r6, r5]
 8008c2a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c2e:	064e      	lsls	r6, r1, #25
 8008c30:	d509      	bpl.n	8008c46 <USB_ActivateEndpoint+0x9a>
 8008c32:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c36:	b289      	uxth	r1, r1
 8008c38:	400c      	ands	r4, r1
 8008c3a:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8008c3e:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
 8008c42:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008c46:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c4a:	f1be 0f01 	cmp.w	lr, #1
 8008c4e:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008c52:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008c56:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8008c5a:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8008c5e:	d04d      	beq.n	8008cfc <USB_ActivateEndpoint+0x150>
 8008c60:	f081 0120 	eor.w	r1, r1, #32
 8008c64:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008c68:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008c6c:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008c70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008c72:	2000      	movs	r0, #0
 8008c74:	f44c 6c80 	orr.w	ip, ip, #1024	; 0x400
 8008c78:	e7b2      	b.n	8008be0 <USB_ActivateEndpoint+0x34>
 8008c7a:	4670      	mov	r0, lr
 8008c7c:	f44c 7c00 	orr.w	ip, ip, #512	; 0x200
 8008c80:	e7ae      	b.n	8008be0 <USB_ActivateEndpoint+0x34>
 8008c82:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c86:	044d      	lsls	r5, r1, #17
 8008c88:	d509      	bpl.n	8008c9e <USB_ActivateEndpoint+0xf2>
 8008c8a:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008c8e:	b289      	uxth	r1, r1
 8008c90:	400c      	ands	r4, r1
 8008c92:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8008c96:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8008c9a:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008c9e:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008ca2:	0649      	lsls	r1, r1, #25
 8008ca4:	d50d      	bpl.n	8008cc2 <USB_ActivateEndpoint+0x116>
 8008ca6:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008caa:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008cae:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008cb2:	0409      	lsls	r1, r1, #16
 8008cb4:	0c09      	lsrs	r1, r1, #16
 8008cb6:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008cba:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8008cbe:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008cc2:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cc6:	f1be 0f01 	cmp.w	lr, #1
 8008cca:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008cce:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008cd2:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8008cd6:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8008cda:	bf18      	it	ne
 8008cdc:	f081 0120 	eorne.w	r1, r1, #32
 8008ce0:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008ce4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008ce8:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008cec:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008cf0:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008cf4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008cf8:	0409      	lsls	r1, r1, #16
 8008cfa:	0c09      	lsrs	r1, r1, #16
 8008cfc:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008d00:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008d04:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008d08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d0a:	f833 c022 	ldrh.w	ip, [r3, r2, lsl #2]
 8008d0e:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 8008d12:	fa1f fc8c 	uxth.w	ip, ip
 8008d16:	ea0c 0c04 	and.w	ip, ip, r4
 8008d1a:	f44c 4c01 	orr.w	ip, ip, #33024	; 0x8100
 8008d1e:	f04c 0c80 	orr.w	ip, ip, #128	; 0x80
 8008d22:	f823 c022 	strh.w	ip, [r3, r2, lsl #2]
 8008d26:	f8b3 c050 	ldrh.w	ip, [r3, #80]	; 0x50
 8008d2a:	890e      	ldrh	r6, [r1, #8]
 8008d2c:	fa1f fc8c 	uxth.w	ip, ip
 8008d30:	0876      	lsrs	r6, r6, #1
 8008d32:	44bc      	add	ip, r7
 8008d34:	0076      	lsls	r6, r6, #1
 8008d36:	f8ac 6400 	strh.w	r6, [ip, #1024]	; 0x400
 8008d3a:	f8b1 c00a 	ldrh.w	ip, [r1, #10]
 8008d3e:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8008d42:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8008d46:	b2ad      	uxth	r5, r5
 8008d48:	443d      	add	r5, r7
 8008d4a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8008d4e:	f8a5 c408 	strh.w	ip, [r5, #1032]	; 0x408
 8008d52:	7849      	ldrb	r1, [r1, #1]
 8008d54:	2900      	cmp	r1, #0
 8008d56:	d194      	bne.n	8008c82 <USB_ActivateEndpoint+0xd6>
 8008d58:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d5c:	044f      	lsls	r7, r1, #17
 8008d5e:	d509      	bpl.n	8008d74 <USB_ActivateEndpoint+0x1c8>
 8008d60:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d64:	b289      	uxth	r1, r1
 8008d66:	400c      	ands	r4, r1
 8008d68:	f444 4440 	orr.w	r4, r4, #49152	; 0xc000
 8008d6c:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8008d70:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 8008d74:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d78:	064e      	lsls	r6, r1, #25
 8008d7a:	d50d      	bpl.n	8008d98 <USB_ActivateEndpoint+0x1ec>
 8008d7c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008d80:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008d84:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008d88:	0409      	lsls	r1, r1, #16
 8008d8a:	0c09      	lsrs	r1, r1, #16
 8008d8c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008d90:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8008d94:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008d98:	f248 0480 	movw	r4, #32896	; 0x8080
 8008d9c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008da0:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008da4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008da8:	0409      	lsls	r1, r1, #16
 8008daa:	0c09      	lsrs	r1, r1, #16
 8008dac:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8008db0:	4321      	orrs	r1, r4
 8008db2:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008db6:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008dba:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008dbe:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8008dc2:	0409      	lsls	r1, r1, #16
 8008dc4:	0c09      	lsrs	r1, r1, #16
 8008dc6:	4321      	orrs	r1, r4
 8008dc8:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008dcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008dce:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 8008dd2:	88cd      	ldrh	r5, [r1, #6]
 8008dd4:	eb03 1702 	add.w	r7, r3, r2, lsl #4
 8008dd8:	b2a4      	uxth	r4, r4
 8008dda:	086d      	lsrs	r5, r5, #1
 8008ddc:	006d      	lsls	r5, r5, #1
 8008dde:	443c      	add	r4, r7
 8008de0:	690e      	ldr	r6, [r1, #16]
 8008de2:	f8a4 5408 	strh.w	r5, [r4, #1032]	; 0x408
 8008de6:	f8b3 1050 	ldrh.w	r1, [r3, #80]	; 0x50
 8008dea:	b289      	uxth	r1, r1
 8008dec:	4439      	add	r1, r7
 8008dee:	b366      	cbz	r6, 8008e4a <USB_ActivateEndpoint+0x29e>
 8008df0:	2e3e      	cmp	r6, #62	; 0x3e
 8008df2:	d83c      	bhi.n	8008e6e <USB_ActivateEndpoint+0x2c2>
 8008df4:	0874      	lsrs	r4, r6, #1
 8008df6:	07f5      	lsls	r5, r6, #31
 8008df8:	bf48      	it	mi
 8008dfa:	3401      	addmi	r4, #1
 8008dfc:	02a4      	lsls	r4, r4, #10
 8008dfe:	b2a4      	uxth	r4, r4
 8008e00:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008e04:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008e08:	0449      	lsls	r1, r1, #17
 8008e0a:	d50d      	bpl.n	8008e28 <USB_ActivateEndpoint+0x27c>
 8008e0c:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008e10:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
 8008e14:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008e18:	0409      	lsls	r1, r1, #16
 8008e1a:	0c09      	lsrs	r1, r1, #16
 8008e1c:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8008e20:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008e24:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008e28:	f833 1022 	ldrh.w	r1, [r3, r2, lsl #2]
 8008e2c:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 8008e30:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 8008e34:	0409      	lsls	r1, r1, #16
 8008e36:	0c09      	lsrs	r1, r1, #16
 8008e38:	f481 5140 	eor.w	r1, r1, #12288	; 0x3000
 8008e3c:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8008e40:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8008e44:	f823 1022 	strh.w	r1, [r3, r2, lsl #2]
 8008e48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e4a:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8008e4e:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8008e52:	0424      	lsls	r4, r4, #16
 8008e54:	0c24      	lsrs	r4, r4, #16
 8008e56:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008e5a:	f8b1 440c 	ldrh.w	r4, [r1, #1036]	; 0x40c
 8008e5e:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 8008e62:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8008e66:	b2a4      	uxth	r4, r4
 8008e68:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008e6c:	e7ca      	b.n	8008e04 <USB_ActivateEndpoint+0x258>
 8008e6e:	0975      	lsrs	r5, r6, #5
 8008e70:	06f4      	lsls	r4, r6, #27
 8008e72:	4c07      	ldr	r4, [pc, #28]	; (8008e90 <USB_ActivateEndpoint+0x2e4>)
 8008e74:	bf08      	it	eq
 8008e76:	f105 35ff 	addeq.w	r5, r5, #4294967295
 8008e7a:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
 8008e7e:	b2a4      	uxth	r4, r4
 8008e80:	f8a1 440c 	strh.w	r4, [r1, #1036]	; 0x40c
 8008e84:	e7be      	b.n	8008e04 <USB_ActivateEndpoint+0x258>
 8008e86:	2001      	movs	r0, #1
 8008e88:	e6aa      	b.n	8008be0 <USB_ActivateEndpoint+0x34>
 8008e8a:	bf00      	nop
 8008e8c:	ffff8f8f 	.word	0xffff8f8f
 8008e90:	ffff8000 	.word	0xffff8000

08008e94 <USB_DeactivateEndpoint>:
 8008e94:	7b0b      	ldrb	r3, [r1, #12]
 8008e96:	b9cb      	cbnz	r3, 8008ecc <USB_DeactivateEndpoint+0x38>
 8008e98:	784b      	ldrb	r3, [r1, #1]
 8008e9a:	780a      	ldrb	r2, [r1, #0]
 8008e9c:	2b00      	cmp	r3, #0
 8008e9e:	f000 80b1 	beq.w	8009004 <USB_DeactivateEndpoint+0x170>
 8008ea2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ea6:	0659      	lsls	r1, r3, #25
 8008ea8:	f100 80c5 	bmi.w	8009036 <USB_DeactivateEndpoint+0x1a2>
 8008eac:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008eb0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008eb4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008eb8:	041b      	lsls	r3, r3, #16
 8008eba:	0c1b      	lsrs	r3, r3, #16
 8008ebc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008ec0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008ec4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008ec8:	2000      	movs	r0, #0
 8008eca:	4770      	bx	lr
 8008ecc:	784b      	ldrb	r3, [r1, #1]
 8008ece:	780a      	ldrb	r2, [r1, #0]
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d14b      	bne.n	8008f6c <USB_DeactivateEndpoint+0xd8>
 8008ed4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ed8:	0459      	lsls	r1, r3, #17
 8008eda:	d50d      	bpl.n	8008ef8 <USB_DeactivateEndpoint+0x64>
 8008edc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008ee0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008ee4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008ee8:	041b      	lsls	r3, r3, #16
 8008eea:	0c1b      	lsrs	r3, r3, #16
 8008eec:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008ef0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008ef4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008ef8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008efc:	065b      	lsls	r3, r3, #25
 8008efe:	d50d      	bpl.n	8008f1c <USB_DeactivateEndpoint+0x88>
 8008f00:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f04:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f0c:	041b      	lsls	r3, r3, #16
 8008f0e:	0c1b      	lsrs	r3, r3, #16
 8008f10:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008f14:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008f18:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f1c:	f248 0180 	movw	r1, #32896	; 0x8080
 8008f20:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f24:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f2c:	041b      	lsls	r3, r3, #16
 8008f2e:	0c1b      	lsrs	r3, r3, #16
 8008f30:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008f34:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008f38:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f3c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f40:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008f44:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f48:	041b      	lsls	r3, r3, #16
 8008f4a:	0c1b      	lsrs	r3, r3, #16
 8008f4c:	430b      	orrs	r3, r1
 8008f4e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f52:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f56:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f5a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008f5e:	041b      	lsls	r3, r3, #16
 8008f60:	0c1b      	lsrs	r3, r3, #16
 8008f62:	430b      	orrs	r3, r1
 8008f64:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f68:	2000      	movs	r0, #0
 8008f6a:	4770      	bx	lr
 8008f6c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f70:	0459      	lsls	r1, r3, #17
 8008f72:	d50d      	bpl.n	8008f90 <USB_DeactivateEndpoint+0xfc>
 8008f74:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f78:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f7c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008f80:	041b      	lsls	r3, r3, #16
 8008f82:	0c1b      	lsrs	r3, r3, #16
 8008f84:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008f88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008f8c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008f90:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f94:	065b      	lsls	r3, r3, #25
 8008f96:	d50d      	bpl.n	8008fb4 <USB_DeactivateEndpoint+0x120>
 8008f98:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008f9c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008fa0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008fa4:	041b      	lsls	r3, r3, #16
 8008fa6:	0c1b      	lsrs	r3, r3, #16
 8008fa8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008fac:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8008fb0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008fb4:	f248 0180 	movw	r1, #32896	; 0x8080
 8008fb8:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008fbc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008fc0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008fc4:	041b      	lsls	r3, r3, #16
 8008fc6:	0c1b      	lsrs	r3, r3, #16
 8008fc8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008fcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008fd0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008fd4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008fd8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008fdc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008fe0:	041b      	lsls	r3, r3, #16
 8008fe2:	0c1b      	lsrs	r3, r3, #16
 8008fe4:	430b      	orrs	r3, r1
 8008fe6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8008fea:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8008fee:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008ff2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008ff6:	041b      	lsls	r3, r3, #16
 8008ff8:	0c1b      	lsrs	r3, r3, #16
 8008ffa:	430b      	orrs	r3, r1
 8008ffc:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009000:	2000      	movs	r0, #0
 8009002:	4770      	bx	lr
 8009004:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009008:	045b      	lsls	r3, r3, #17
 800900a:	d50d      	bpl.n	8009028 <USB_DeactivateEndpoint+0x194>
 800900c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009010:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009014:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009018:	041b      	lsls	r3, r3, #16
 800901a:	0c1b      	lsrs	r3, r3, #16
 800901c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009020:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009024:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009028:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800902c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009030:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009034:	e740      	b.n	8008eb8 <USB_DeactivateEndpoint+0x24>
 8009036:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800903a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800903e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009042:	041b      	lsls	r3, r3, #16
 8009044:	0c1b      	lsrs	r3, r3, #16
 8009046:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800904a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800904e:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009052:	e72b      	b.n	8008eac <USB_DeactivateEndpoint+0x18>

08009054 <USB_EPStartXfer>:
 8009054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009058:	784b      	ldrb	r3, [r1, #1]
 800905a:	4602      	mov	r2, r0
 800905c:	2b01      	cmp	r3, #1
 800905e:	d06b      	beq.n	8009138 <USB_EPStartXfer+0xe4>
 8009060:	7b08      	ldrb	r0, [r1, #12]
 8009062:	2800      	cmp	r0, #0
 8009064:	d037      	beq.n	80090d6 <USB_EPStartXfer+0x82>
 8009066:	78c8      	ldrb	r0, [r1, #3]
 8009068:	2802      	cmp	r0, #2
 800906a:	f000 812d 	beq.w	80092c8 <USB_EPStartXfer+0x274>
 800906e:	2801      	cmp	r0, #1
 8009070:	f040 810a 	bne.w	8009288 <USB_EPStartXfer+0x234>
 8009074:	6988      	ldr	r0, [r1, #24]
 8009076:	690c      	ldr	r4, [r1, #16]
 8009078:	42a0      	cmp	r0, r4
 800907a:	bf94      	ite	ls
 800907c:	2500      	movls	r5, #0
 800907e:	1b05      	subhi	r5, r0, r4
 8009080:	618d      	str	r5, [r1, #24]
 8009082:	bf88      	it	hi
 8009084:	4620      	movhi	r0, r4
 8009086:	2b00      	cmp	r3, #0
 8009088:	f040 811b 	bne.w	80092c2 <USB_EPStartXfer+0x26e>
 800908c:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009090:	780b      	ldrb	r3, [r1, #0]
 8009092:	b2a4      	uxth	r4, r4
 8009094:	f202 4504 	addw	r5, r2, #1028	; 0x404
 8009098:	011b      	lsls	r3, r3, #4
 800909a:	442c      	add	r4, r5
 800909c:	2800      	cmp	r0, #0
 800909e:	f000 8251 	beq.w	8009544 <USB_EPStartXfer+0x4f0>
 80090a2:	283e      	cmp	r0, #62	; 0x3e
 80090a4:	f200 80f3 	bhi.w	800928e <USB_EPStartXfer+0x23a>
 80090a8:	0845      	lsrs	r5, r0, #1
 80090aa:	462e      	mov	r6, r5
 80090ac:	f010 0001 	ands.w	r0, r0, #1
 80090b0:	bf18      	it	ne
 80090b2:	1c6e      	addne	r6, r5, #1
 80090b4:	02b6      	lsls	r6, r6, #10
 80090b6:	b2b6      	uxth	r6, r6
 80090b8:	52e6      	strh	r6, [r4, r3]
 80090ba:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80090be:	b2a6      	uxth	r6, r4
 80090c0:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80090c4:	4434      	add	r4, r6
 80090c6:	b100      	cbz	r0, 80090ca <USB_EPStartXfer+0x76>
 80090c8:	3501      	adds	r5, #1
 80090ca:	02ad      	lsls	r5, r5, #10
 80090cc:	b2a8      	uxth	r0, r5
 80090ce:	52e0      	strh	r0, [r4, r3]
 80090d0:	f891 c000 	ldrb.w	ip, [r1]
 80090d4:	e01d      	b.n	8009112 <USB_EPStartXfer+0xbe>
 80090d6:	698c      	ldr	r4, [r1, #24]
 80090d8:	690b      	ldr	r3, [r1, #16]
 80090da:	780d      	ldrb	r5, [r1, #0]
 80090dc:	429c      	cmp	r4, r3
 80090de:	bf84      	itt	hi
 80090e0:	1ae0      	subhi	r0, r4, r3
 80090e2:	461c      	movhi	r4, r3
 80090e4:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80090e8:	6188      	str	r0, [r1, #24]
 80090ea:	b29b      	uxth	r3, r3
 80090ec:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 80090f0:	012d      	lsls	r5, r5, #4
 80090f2:	4403      	add	r3, r0
 80090f4:	2c00      	cmp	r4, #0
 80090f6:	f000 80b7 	beq.w	8009268 <USB_EPStartXfer+0x214>
 80090fa:	2c3e      	cmp	r4, #62	; 0x3e
 80090fc:	f200 8129 	bhi.w	8009352 <USB_EPStartXfer+0x2fe>
 8009100:	0860      	lsrs	r0, r4, #1
 8009102:	07e4      	lsls	r4, r4, #31
 8009104:	bf48      	it	mi
 8009106:	3001      	addmi	r0, #1
 8009108:	0280      	lsls	r0, r0, #10
 800910a:	b280      	uxth	r0, r0
 800910c:	52e8      	strh	r0, [r5, r3]
 800910e:	f891 c000 	ldrb.w	ip, [r1]
 8009112:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 8009116:	2000      	movs	r0, #0
 8009118:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800911c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009120:	041b      	lsls	r3, r3, #16
 8009122:	0c1b      	lsrs	r3, r3, #16
 8009124:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009128:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800912c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009130:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 8009134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009138:	690d      	ldr	r5, [r1, #16]
 800913a:	6988      	ldr	r0, [r1, #24]
 800913c:	7b0b      	ldrb	r3, [r1, #12]
 800913e:	42a8      	cmp	r0, r5
 8009140:	bf28      	it	cs
 8009142:	4628      	movcs	r0, r5
 8009144:	2b00      	cmp	r3, #0
 8009146:	d05d      	beq.n	8009204 <USB_EPStartXfer+0x1b0>
 8009148:	78cb      	ldrb	r3, [r1, #3]
 800914a:	2b02      	cmp	r3, #2
 800914c:	f000 810e 	beq.w	800936c <USB_EPStartXfer+0x318>
 8009150:	f891 8000 	ldrb.w	r8, [r1]
 8009154:	6a0b      	ldr	r3, [r1, #32]
 8009156:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 800915a:	1a1b      	subs	r3, r3, r0
 800915c:	f424 44e0 	bic.w	r4, r4, #28672	; 0x7000
 8009160:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 8009164:	0424      	lsls	r4, r4, #16
 8009166:	0c24      	lsrs	r4, r4, #16
 8009168:	f444 4401 	orr.w	r4, r4, #33024	; 0x8100
 800916c:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 8009170:	f822 4028 	strh.w	r4, [r2, r8, lsl #2]
 8009174:	f832 4028 	ldrh.w	r4, [r2, r8, lsl #2]
 8009178:	620b      	str	r3, [r1, #32]
 800917a:	f014 0f40 	tst.w	r4, #64	; 0x40
 800917e:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009182:	ea4f 1808 	mov.w	r8, r8, lsl #4
 8009186:	b2a6      	uxth	r6, r4
 8009188:	f000 814a 	beq.w	8009420 <USB_EPStartXfer+0x3cc>
 800918c:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009190:	4434      	add	r4, r6
 8009192:	b286      	uxth	r6, r0
 8009194:	f824 6008 	strh.w	r6, [r4, r8]
 8009198:	894c      	ldrh	r4, [r1, #10]
 800919a:	3601      	adds	r6, #1
 800919c:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 80091a0:	0876      	lsrs	r6, r6, #1
 80091a2:	f8d1 9014 	ldr.w	r9, [r1, #20]
 80091a6:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80091aa:	d008      	beq.n	80091be <USB_EPStartXfer+0x16a>
 80091ac:	46cc      	mov	ip, r9
 80091ae:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80091b2:	f83c eb02 	ldrh.w	lr, [ip], #2
 80091b6:	f824 eb04 	strh.w	lr, [r4], #4
 80091ba:	42a6      	cmp	r6, r4
 80091bc:	d1f9      	bne.n	80091b2 <USB_EPStartXfer+0x15e>
 80091be:	eb09 0400 	add.w	r4, r9, r0
 80091c2:	429d      	cmp	r5, r3
 80091c4:	614c      	str	r4, [r1, #20]
 80091c6:	f0c0 81b7 	bcc.w	8009538 <USB_EPStartXfer+0x4e4>
 80091ca:	2500      	movs	r5, #0
 80091cc:	620d      	str	r5, [r1, #32]
 80091ce:	2b00      	cmp	r3, #0
 80091d0:	d036      	beq.n	8009240 <USB_EPStartXfer+0x1ec>
 80091d2:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80091d6:	b285      	uxth	r5, r0
 80091d8:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80091dc:	4428      	add	r0, r5
 80091de:	b29d      	uxth	r5, r3
 80091e0:	462b      	mov	r3, r5
 80091e2:	f820 5008 	strh.w	r5, [r0, r8]
 80091e6:	8908      	ldrh	r0, [r1, #8]
 80091e8:	3301      	adds	r3, #1
 80091ea:	085b      	lsrs	r3, r3, #1
 80091ec:	eb07 0040 	add.w	r0, r7, r0, lsl #1
 80091f0:	d026      	beq.n	8009240 <USB_EPStartXfer+0x1ec>
 80091f2:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 80091f6:	f834 3b02 	ldrh.w	r3, [r4], #2
 80091fa:	f820 3b04 	strh.w	r3, [r0], #4
 80091fe:	4285      	cmp	r5, r0
 8009200:	d1f9      	bne.n	80091f6 <USB_EPStartXfer+0x1a2>
 8009202:	e01d      	b.n	8009240 <USB_EPStartXfer+0x1ec>
 8009204:	b284      	uxth	r4, r0
 8009206:	694b      	ldr	r3, [r1, #20]
 8009208:	88cd      	ldrh	r5, [r1, #6]
 800920a:	f104 0e01 	add.w	lr, r4, #1
 800920e:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 8009212:	ea5f 0e5e 	movs.w	lr, lr, lsr #1
 8009216:	eb00 0045 	add.w	r0, r0, r5, lsl #1
 800921a:	bf18      	it	ne
 800921c:	eb03 0e4e 	addne.w	lr, r3, lr, lsl #1
 8009220:	d005      	beq.n	800922e <USB_EPStartXfer+0x1da>
 8009222:	f833 cb02 	ldrh.w	ip, [r3], #2
 8009226:	4573      	cmp	r3, lr
 8009228:	f820 cb04 	strh.w	ip, [r0], #4
 800922c:	d1f9      	bne.n	8009222 <USB_EPStartXfer+0x1ce>
 800922e:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 8009232:	7808      	ldrb	r0, [r1, #0]
 8009234:	b29d      	uxth	r5, r3
 8009236:	f202 4304 	addw	r3, r2, #1028	; 0x404
 800923a:	0100      	lsls	r0, r0, #4
 800923c:	442b      	add	r3, r5
 800923e:	52c4      	strh	r4, [r0, r3]
 8009240:	7809      	ldrb	r1, [r1, #0]
 8009242:	2000      	movs	r0, #0
 8009244:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8009248:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800924c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009250:	041b      	lsls	r3, r3, #16
 8009252:	0c1b      	lsrs	r3, r3, #16
 8009254:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 8009258:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800925c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009260:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 8009264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009268:	5ae8      	ldrh	r0, [r5, r3]
 800926a:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 800926e:	0400      	lsls	r0, r0, #16
 8009270:	0c00      	lsrs	r0, r0, #16
 8009272:	52e8      	strh	r0, [r5, r3]
 8009274:	5ae8      	ldrh	r0, [r5, r3]
 8009276:	ea6f 4040 	mvn.w	r0, r0, lsl #17
 800927a:	ea6f 4050 	mvn.w	r0, r0, lsr #17
 800927e:	b280      	uxth	r0, r0
 8009280:	52e8      	strh	r0, [r5, r3]
 8009282:	f891 c000 	ldrb.w	ip, [r1]
 8009286:	e744      	b.n	8009112 <USB_EPStartXfer+0xbe>
 8009288:	2001      	movs	r0, #1
 800928a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800928e:	0945      	lsrs	r5, r0, #5
 8009290:	462f      	mov	r7, r5
 8009292:	f010 001f 	ands.w	r0, r0, #31
 8009296:	bf08      	it	eq
 8009298:	f105 37ff 	addeq.w	r7, r5, #4294967295
 800929c:	462e      	mov	r6, r5
 800929e:	4dbb      	ldr	r5, [pc, #748]	; (800958c <USB_EPStartXfer+0x538>)
 80092a0:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 80092a4:	b2ad      	uxth	r5, r5
 80092a6:	52e5      	strh	r5, [r4, r3]
 80092a8:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 80092ac:	b2a5      	uxth	r5, r4
 80092ae:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 80092b2:	442c      	add	r4, r5
 80092b4:	b900      	cbnz	r0, 80092b8 <USB_EPStartXfer+0x264>
 80092b6:	3e01      	subs	r6, #1
 80092b8:	48b4      	ldr	r0, [pc, #720]	; (800958c <USB_EPStartXfer+0x538>)
 80092ba:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 80092be:	b280      	uxth	r0, r0
 80092c0:	52e0      	strh	r0, [r4, r3]
 80092c2:	f891 c000 	ldrb.w	ip, [r1]
 80092c6:	e724      	b.n	8009112 <USB_EPStartXfer+0xbe>
 80092c8:	bb13      	cbnz	r3, 8009310 <USB_EPStartXfer+0x2bc>
 80092ca:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80092ce:	780b      	ldrb	r3, [r1, #0]
 80092d0:	b284      	uxth	r4, r0
 80092d2:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80092d6:	4420      	add	r0, r4
 80092d8:	690c      	ldr	r4, [r1, #16]
 80092da:	011b      	lsls	r3, r3, #4
 80092dc:	2c00      	cmp	r4, #0
 80092de:	f000 8109 	beq.w	80094f4 <USB_EPStartXfer+0x4a0>
 80092e2:	2c3e      	cmp	r4, #62	; 0x3e
 80092e4:	f200 818e 	bhi.w	8009604 <USB_EPStartXfer+0x5b0>
 80092e8:	0865      	lsrs	r5, r4, #1
 80092ea:	462e      	mov	r6, r5
 80092ec:	f014 0401 	ands.w	r4, r4, #1
 80092f0:	bf18      	it	ne
 80092f2:	1c6e      	addne	r6, r5, #1
 80092f4:	02b6      	lsls	r6, r6, #10
 80092f6:	b2b6      	uxth	r6, r6
 80092f8:	52c6      	strh	r6, [r0, r3]
 80092fa:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80092fe:	f202 460c 	addw	r6, r2, #1036	; 0x40c
 8009302:	b280      	uxth	r0, r0
 8009304:	4406      	add	r6, r0
 8009306:	b104      	cbz	r4, 800930a <USB_EPStartXfer+0x2b6>
 8009308:	3501      	adds	r5, #1
 800930a:	02ad      	lsls	r5, r5, #10
 800930c:	b2a8      	uxth	r0, r5
 800930e:	52f0      	strh	r0, [r6, r3]
 8009310:	69cb      	ldr	r3, [r1, #28]
 8009312:	2b00      	cmp	r3, #0
 8009314:	d0d5      	beq.n	80092c2 <USB_EPStartXfer+0x26e>
 8009316:	f244 0340 	movw	r3, #16448	; 0x4040
 800931a:	f891 c000 	ldrb.w	ip, [r1]
 800931e:	f832 002c 	ldrh.w	r0, [r2, ip, lsl #2]
 8009322:	ea03 0400 	and.w	r4, r3, r0
 8009326:	4383      	bics	r3, r0
 8009328:	d002      	beq.n	8009330 <USB_EPStartXfer+0x2dc>
 800932a:	2c00      	cmp	r4, #0
 800932c:	f47f aef1 	bne.w	8009112 <USB_EPStartXfer+0xbe>
 8009330:	f832 302c 	ldrh.w	r3, [r2, ip, lsl #2]
 8009334:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009338:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800933c:	041b      	lsls	r3, r3, #16
 800933e:	0c1b      	lsrs	r3, r3, #16
 8009340:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009344:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8009348:	f822 302c 	strh.w	r3, [r2, ip, lsl #2]
 800934c:	f891 c000 	ldrb.w	ip, [r1]
 8009350:	e6df      	b.n	8009112 <USB_EPStartXfer+0xbe>
 8009352:	0966      	lsrs	r6, r4, #5
 8009354:	06e0      	lsls	r0, r4, #27
 8009356:	488d      	ldr	r0, [pc, #564]	; (800958c <USB_EPStartXfer+0x538>)
 8009358:	bf08      	it	eq
 800935a:	f106 36ff 	addeq.w	r6, r6, #4294967295
 800935e:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009362:	b280      	uxth	r0, r0
 8009364:	52e8      	strh	r0, [r5, r3]
 8009366:	f891 c000 	ldrb.w	ip, [r1]
 800936a:	e6d2      	b.n	8009112 <USB_EPStartXfer+0xbe>
 800936c:	6a0c      	ldr	r4, [r1, #32]
 800936e:	42a5      	cmp	r5, r4
 8009370:	f080 8094 	bcs.w	800949c <USB_EPStartXfer+0x448>
 8009374:	780e      	ldrb	r6, [r1, #0]
 8009376:	1a24      	subs	r4, r4, r0
 8009378:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 800937c:	ea4f 1906 	mov.w	r9, r6, lsl #4
 8009380:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009384:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009388:	041b      	lsls	r3, r3, #16
 800938a:	0c1b      	lsrs	r3, r3, #16
 800938c:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8009390:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009394:	f822 3026 	strh.w	r3, [r2, r6, lsl #2]
 8009398:	f832 3026 	ldrh.w	r3, [r2, r6, lsl #2]
 800939c:	620c      	str	r4, [r1, #32]
 800939e:	f013 0f40 	tst.w	r3, #64	; 0x40
 80093a2:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80093a6:	b29e      	uxth	r6, r3
 80093a8:	f000 80f2 	beq.w	8009590 <USB_EPStartXfer+0x53c>
 80093ac:	f202 430c 	addw	r3, r2, #1036	; 0x40c
 80093b0:	4433      	add	r3, r6
 80093b2:	fa1f fa80 	uxth.w	sl, r0
 80093b6:	f823 a009 	strh.w	sl, [r3, r9]
 80093ba:	894e      	ldrh	r6, [r1, #10]
 80093bc:	f10a 0801 	add.w	r8, sl, #1
 80093c0:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 80093c4:	ea5f 0858 	movs.w	r8, r8, lsr #1
 80093c8:	694f      	ldr	r7, [r1, #20]
 80093ca:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 80093ce:	d008      	beq.n	80093e2 <USB_EPStartXfer+0x38e>
 80093d0:	46bc      	mov	ip, r7
 80093d2:	eb06 0b88 	add.w	fp, r6, r8, lsl #2
 80093d6:	f83c eb02 	ldrh.w	lr, [ip], #2
 80093da:	f826 eb04 	strh.w	lr, [r6], #4
 80093de:	45b3      	cmp	fp, r6
 80093e0:	d1f9      	bne.n	80093d6 <USB_EPStartXfer+0x382>
 80093e2:	4407      	add	r7, r0
 80093e4:	42a5      	cmp	r5, r4
 80093e6:	614f      	str	r7, [r1, #20]
 80093e8:	f080 8127 	bcs.w	800963a <USB_EPStartXfer+0x5e6>
 80093ec:	1a24      	subs	r4, r4, r0
 80093ee:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80093f2:	620c      	str	r4, [r1, #32]
 80093f4:	b284      	uxth	r4, r0
 80093f6:	f202 4004 	addw	r0, r2, #1028	; 0x404
 80093fa:	4420      	add	r0, r4
 80093fc:	f820 a009 	strh.w	sl, [r0, r9]
 8009400:	8908      	ldrh	r0, [r1, #8]
 8009402:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8009406:	f1b8 0f00 	cmp.w	r8, #0
 800940a:	f43f af19 	beq.w	8009240 <USB_EPStartXfer+0x1ec>
 800940e:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 8009412:	f837 0b02 	ldrh.w	r0, [r7], #2
 8009416:	f823 0b04 	strh.w	r0, [r3], #4
 800941a:	429c      	cmp	r4, r3
 800941c:	d1f9      	bne.n	8009412 <USB_EPStartXfer+0x3be>
 800941e:	e70f      	b.n	8009240 <USB_EPStartXfer+0x1ec>
 8009420:	f202 4404 	addw	r4, r2, #1028	; 0x404
 8009424:	4434      	add	r4, r6
 8009426:	b286      	uxth	r6, r0
 8009428:	f824 6008 	strh.w	r6, [r4, r8]
 800942c:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 8009430:	3601      	adds	r6, #1
 8009432:	f502 6780 	add.w	r7, r2, #1024	; 0x400
 8009436:	0876      	lsrs	r6, r6, #1
 8009438:	f8d1 9014 	ldr.w	r9, [r1, #20]
 800943c:	eb07 0c4c 	add.w	ip, r7, ip, lsl #1
 8009440:	d008      	beq.n	8009454 <USB_EPStartXfer+0x400>
 8009442:	464c      	mov	r4, r9
 8009444:	eb09 0646 	add.w	r6, r9, r6, lsl #1
 8009448:	f834 eb02 	ldrh.w	lr, [r4], #2
 800944c:	42b4      	cmp	r4, r6
 800944e:	f82c eb04 	strh.w	lr, [ip], #4
 8009452:	d1f9      	bne.n	8009448 <USB_EPStartXfer+0x3f4>
 8009454:	eb09 0400 	add.w	r4, r9, r0
 8009458:	429d      	cmp	r5, r3
 800945a:	614c      	str	r4, [r1, #20]
 800945c:	d36f      	bcc.n	800953e <USB_EPStartXfer+0x4ea>
 800945e:	2500      	movs	r5, #0
 8009460:	620d      	str	r5, [r1, #32]
 8009462:	2b00      	cmp	r3, #0
 8009464:	f43f aeec 	beq.w	8009240 <USB_EPStartXfer+0x1ec>
 8009468:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 800946c:	b285      	uxth	r5, r0
 800946e:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009472:	4428      	add	r0, r5
 8009474:	b29d      	uxth	r5, r3
 8009476:	462b      	mov	r3, r5
 8009478:	f820 5008 	strh.w	r5, [r0, r8]
 800947c:	8948      	ldrh	r0, [r1, #10]
 800947e:	3301      	adds	r3, #1
 8009480:	085b      	lsrs	r3, r3, #1
 8009482:	eb07 0740 	add.w	r7, r7, r0, lsl #1
 8009486:	f43f aedb 	beq.w	8009240 <USB_EPStartXfer+0x1ec>
 800948a:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800948e:	f834 0b02 	ldrh.w	r0, [r4], #2
 8009492:	f827 0b04 	strh.w	r0, [r7], #4
 8009496:	429f      	cmp	r7, r3
 8009498:	d1f9      	bne.n	800948e <USB_EPStartXfer+0x43a>
 800949a:	e6d1      	b.n	8009240 <USB_EPStartXfer+0x1ec>
 800949c:	7808      	ldrb	r0, [r1, #0]
 800949e:	f832 3020 	ldrh.w	r3, [r2, r0, lsl #2]
 80094a2:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 80094a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80094aa:	041b      	lsls	r3, r3, #16
 80094ac:	0c1b      	lsrs	r3, r3, #16
 80094ae:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80094b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80094b6:	f822 3020 	strh.w	r3, [r2, r0, lsl #2]
 80094ba:	f8b2 3050 	ldrh.w	r3, [r2, #80]	; 0x50
 80094be:	0100      	lsls	r0, r0, #4
 80094c0:	b29d      	uxth	r5, r3
 80094c2:	f202 4304 	addw	r3, r2, #1028	; 0x404
 80094c6:	442b      	add	r3, r5
 80094c8:	b2a5      	uxth	r5, r4
 80094ca:	521d      	strh	r5, [r3, r0]
 80094cc:	b2a0      	uxth	r0, r4
 80094ce:	890d      	ldrh	r5, [r1, #8]
 80094d0:	3001      	adds	r0, #1
 80094d2:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 80094d6:	0840      	lsrs	r0, r0, #1
 80094d8:	694c      	ldr	r4, [r1, #20]
 80094da:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80094de:	f43f aeaf 	beq.w	8009240 <USB_EPStartXfer+0x1ec>
 80094e2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80094e6:	f834 5b02 	ldrh.w	r5, [r4], #2
 80094ea:	f823 5b04 	strh.w	r5, [r3], #4
 80094ee:	4298      	cmp	r0, r3
 80094f0:	d1f9      	bne.n	80094e6 <USB_EPStartXfer+0x492>
 80094f2:	e6a5      	b.n	8009240 <USB_EPStartXfer+0x1ec>
 80094f4:	5ac4      	ldrh	r4, [r0, r3]
 80094f6:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 80094fa:	0424      	lsls	r4, r4, #16
 80094fc:	0c24      	lsrs	r4, r4, #16
 80094fe:	52c4      	strh	r4, [r0, r3]
 8009500:	5ac5      	ldrh	r5, [r0, r3]
 8009502:	f202 440c 	addw	r4, r2, #1036	; 0x40c
 8009506:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 800950a:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 800950e:	b2ad      	uxth	r5, r5
 8009510:	52c5      	strh	r5, [r0, r3]
 8009512:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009516:	b285      	uxth	r5, r0
 8009518:	4620      	mov	r0, r4
 800951a:	4428      	add	r0, r5
 800951c:	5ac4      	ldrh	r4, [r0, r3]
 800951e:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009522:	0424      	lsls	r4, r4, #16
 8009524:	0c24      	lsrs	r4, r4, #16
 8009526:	52c4      	strh	r4, [r0, r3]
 8009528:	5ac4      	ldrh	r4, [r0, r3]
 800952a:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 800952e:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8009532:	b2a4      	uxth	r4, r4
 8009534:	52c4      	strh	r4, [r0, r3]
 8009536:	e6eb      	b.n	8009310 <USB_EPStartXfer+0x2bc>
 8009538:	1a1d      	subs	r5, r3, r0
 800953a:	4603      	mov	r3, r0
 800953c:	e646      	b.n	80091cc <USB_EPStartXfer+0x178>
 800953e:	1a1d      	subs	r5, r3, r0
 8009540:	4603      	mov	r3, r0
 8009542:	e78d      	b.n	8009460 <USB_EPStartXfer+0x40c>
 8009544:	5ae0      	ldrh	r0, [r4, r3]
 8009546:	f420 40f8 	bic.w	r0, r0, #31744	; 0x7c00
 800954a:	0400      	lsls	r0, r0, #16
 800954c:	0c00      	lsrs	r0, r0, #16
 800954e:	52e0      	strh	r0, [r4, r3]
 8009550:	5ae5      	ldrh	r5, [r4, r3]
 8009552:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 8009556:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 800955a:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 800955e:	b2ad      	uxth	r5, r5
 8009560:	52e5      	strh	r5, [r4, r3]
 8009562:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 8009566:	b2a4      	uxth	r4, r4
 8009568:	4420      	add	r0, r4
 800956a:	5ac4      	ldrh	r4, [r0, r3]
 800956c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
 8009570:	0424      	lsls	r4, r4, #16
 8009572:	0c24      	lsrs	r4, r4, #16
 8009574:	52c4      	strh	r4, [r0, r3]
 8009576:	5ac4      	ldrh	r4, [r0, r3]
 8009578:	ea6f 4444 	mvn.w	r4, r4, lsl #17
 800957c:	ea6f 4454 	mvn.w	r4, r4, lsr #17
 8009580:	b2a4      	uxth	r4, r4
 8009582:	52c4      	strh	r4, [r0, r3]
 8009584:	f891 c000 	ldrb.w	ip, [r1]
 8009588:	e5c3      	b.n	8009112 <USB_EPStartXfer+0xbe>
 800958a:	bf00      	nop
 800958c:	ffff8000 	.word	0xffff8000
 8009590:	f202 4304 	addw	r3, r2, #1028	; 0x404
 8009594:	4433      	add	r3, r6
 8009596:	fa1f fa80 	uxth.w	sl, r0
 800959a:	f823 a009 	strh.w	sl, [r3, r9]
 800959e:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 80095a2:	f10a 0801 	add.w	r8, sl, #1
 80095a6:	f502 6380 	add.w	r3, r2, #1024	; 0x400
 80095aa:	ea5f 0858 	movs.w	r8, r8, lsr #1
 80095ae:	694f      	ldr	r7, [r1, #20]
 80095b0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80095b4:	d008      	beq.n	80095c8 <USB_EPStartXfer+0x574>
 80095b6:	463e      	mov	r6, r7
 80095b8:	eb07 0b48 	add.w	fp, r7, r8, lsl #1
 80095bc:	f836 eb02 	ldrh.w	lr, [r6], #2
 80095c0:	45b3      	cmp	fp, r6
 80095c2:	f82c eb04 	strh.w	lr, [ip], #4
 80095c6:	d1f9      	bne.n	80095bc <USB_EPStartXfer+0x568>
 80095c8:	4407      	add	r7, r0
 80095ca:	42a5      	cmp	r5, r4
 80095cc:	614f      	str	r7, [r1, #20]
 80095ce:	d23e      	bcs.n	800964e <USB_EPStartXfer+0x5fa>
 80095d0:	1a24      	subs	r4, r4, r0
 80095d2:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 80095d6:	620c      	str	r4, [r1, #32]
 80095d8:	b284      	uxth	r4, r0
 80095da:	f202 400c 	addw	r0, r2, #1036	; 0x40c
 80095de:	4420      	add	r0, r4
 80095e0:	f820 a009 	strh.w	sl, [r0, r9]
 80095e4:	8948      	ldrh	r0, [r1, #10]
 80095e6:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80095ea:	f1b8 0f00 	cmp.w	r8, #0
 80095ee:	f43f ae27 	beq.w	8009240 <USB_EPStartXfer+0x1ec>
 80095f2:	eb03 0488 	add.w	r4, r3, r8, lsl #2
 80095f6:	f837 0b02 	ldrh.w	r0, [r7], #2
 80095fa:	f823 0b04 	strh.w	r0, [r3], #4
 80095fe:	429c      	cmp	r4, r3
 8009600:	d1f9      	bne.n	80095f6 <USB_EPStartXfer+0x5a2>
 8009602:	e61d      	b.n	8009240 <USB_EPStartXfer+0x1ec>
 8009604:	0965      	lsrs	r5, r4, #5
 8009606:	462f      	mov	r7, r5
 8009608:	f014 041f 	ands.w	r4, r4, #31
 800960c:	bf08      	it	eq
 800960e:	f105 37ff 	addeq.w	r7, r5, #4294967295
 8009612:	462e      	mov	r6, r5
 8009614:	4d13      	ldr	r5, [pc, #76]	; (8009664 <USB_EPStartXfer+0x610>)
 8009616:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 800961a:	b2ad      	uxth	r5, r5
 800961c:	52c5      	strh	r5, [r0, r3]
 800961e:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8009622:	f202 450c 	addw	r5, r2, #1036	; 0x40c
 8009626:	b280      	uxth	r0, r0
 8009628:	4405      	add	r5, r0
 800962a:	b904      	cbnz	r4, 800962e <USB_EPStartXfer+0x5da>
 800962c:	3e01      	subs	r6, #1
 800962e:	480d      	ldr	r0, [pc, #52]	; (8009664 <USB_EPStartXfer+0x610>)
 8009630:	ea40 2086 	orr.w	r0, r0, r6, lsl #10
 8009634:	b280      	uxth	r0, r0
 8009636:	52e8      	strh	r0, [r5, r3]
 8009638:	e66a      	b.n	8009310 <USB_EPStartXfer+0x2bc>
 800963a:	fa1f f884 	uxth.w	r8, r4
 800963e:	f108 0801 	add.w	r8, r8, #1
 8009642:	fa1f fa84 	uxth.w	sl, r4
 8009646:	ea4f 0858 	mov.w	r8, r8, lsr #1
 800964a:	2400      	movs	r4, #0
 800964c:	e6cf      	b.n	80093ee <USB_EPStartXfer+0x39a>
 800964e:	fa1f f884 	uxth.w	r8, r4
 8009652:	f108 0801 	add.w	r8, r8, #1
 8009656:	fa1f fa84 	uxth.w	sl, r4
 800965a:	ea4f 0858 	mov.w	r8, r8, lsr #1
 800965e:	2400      	movs	r4, #0
 8009660:	e7b7      	b.n	80095d2 <USB_EPStartXfer+0x57e>
 8009662:	bf00      	nop
 8009664:	ffff8000 	.word	0xffff8000

08009668 <USB_EPSetStall>:
 8009668:	784b      	ldrb	r3, [r1, #1]
 800966a:	780a      	ldrb	r2, [r1, #0]
 800966c:	b18b      	cbz	r3, 8009692 <USB_EPSetStall+0x2a>
 800966e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009672:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009676:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800967a:	041b      	lsls	r3, r3, #16
 800967c:	0c1b      	lsrs	r3, r3, #16
 800967e:	f083 0310 	eor.w	r3, r3, #16
 8009682:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009686:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800968a:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800968e:	2000      	movs	r0, #0
 8009690:	4770      	bx	lr
 8009692:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009696:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800969a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800969e:	041b      	lsls	r3, r3, #16
 80096a0:	0c1b      	lsrs	r3, r3, #16
 80096a2:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80096a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80096aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80096ae:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80096b2:	2000      	movs	r0, #0
 80096b4:	4770      	bx	lr
 80096b6:	bf00      	nop

080096b8 <USB_EPClearStall>:
 80096b8:	7b0b      	ldrb	r3, [r1, #12]
 80096ba:	bb3b      	cbnz	r3, 800970c <USB_EPClearStall+0x54>
 80096bc:	784b      	ldrb	r3, [r1, #1]
 80096be:	780a      	ldrb	r2, [r1, #0]
 80096c0:	b333      	cbz	r3, 8009710 <USB_EPClearStall+0x58>
 80096c2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096c6:	065b      	lsls	r3, r3, #25
 80096c8:	d50d      	bpl.n	80096e6 <USB_EPClearStall+0x2e>
 80096ca:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096ce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80096d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80096d6:	041b      	lsls	r3, r3, #16
 80096d8:	0c1b      	lsrs	r3, r3, #16
 80096da:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80096de:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80096e2:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80096e6:	78cb      	ldrb	r3, [r1, #3]
 80096e8:	2b01      	cmp	r3, #1
 80096ea:	d00f      	beq.n	800970c <USB_EPClearStall+0x54>
 80096ec:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80096f0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80096f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80096f8:	041b      	lsls	r3, r3, #16
 80096fa:	0c1b      	lsrs	r3, r3, #16
 80096fc:	f083 0320 	eor.w	r3, r3, #32
 8009700:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009704:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009708:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800970c:	2000      	movs	r0, #0
 800970e:	4770      	bx	lr
 8009710:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009714:	045b      	lsls	r3, r3, #17
 8009716:	d50d      	bpl.n	8009734 <USB_EPClearStall+0x7c>
 8009718:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800971c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009720:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009724:	041b      	lsls	r3, r3, #16
 8009726:	0c1b      	lsrs	r3, r3, #16
 8009728:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800972c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009730:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009734:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8009738:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800973c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009740:	041b      	lsls	r3, r3, #16
 8009742:	0c1b      	lsrs	r3, r3, #16
 8009744:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8009748:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800974c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009750:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8009754:	2000      	movs	r0, #0
 8009756:	4770      	bx	lr

08009758 <USB_SetDevAddress>:
 8009758:	b911      	cbnz	r1, 8009760 <USB_SetDevAddress+0x8>
 800975a:	2380      	movs	r3, #128	; 0x80
 800975c:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 8009760:	2000      	movs	r0, #0
 8009762:	4770      	bx	lr

08009764 <USB_DevConnect>:
 8009764:	2000      	movs	r0, #0
 8009766:	4770      	bx	lr

08009768 <USB_ReadInterrupts>:
 8009768:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 800976c:	b280      	uxth	r0, r0
 800976e:	4770      	bx	lr

08009770 <USB_WritePMA>:
 8009770:	3301      	adds	r3, #1
 8009772:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8009776:	085b      	lsrs	r3, r3, #1
 8009778:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800977c:	d007      	beq.n	800978e <USB_WritePMA+0x1e>
 800977e:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8009782:	f831 3b02 	ldrh.w	r3, [r1], #2
 8009786:	f822 3b04 	strh.w	r3, [r2], #4
 800978a:	4282      	cmp	r2, r0
 800978c:	d1f9      	bne.n	8009782 <USB_WritePMA+0x12>
 800978e:	4770      	bx	lr

08009790 <USB_ReadPMA>:
 8009790:	b570      	push	{r4, r5, r6, lr}
 8009792:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8009796:	085e      	lsrs	r6, r3, #1
 8009798:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800979c:	d012      	beq.n	80097c4 <USB_ReadPMA+0x34>
 800979e:	46ae      	mov	lr, r5
 80097a0:	46b4      	mov	ip, r6
 80097a2:	1c88      	adds	r0, r1, #2
 80097a4:	f83e 2b04 	ldrh.w	r2, [lr], #4
 80097a8:	3002      	adds	r0, #2
 80097aa:	b292      	uxth	r2, r2
 80097ac:	0a14      	lsrs	r4, r2, #8
 80097ae:	f1bc 0c01 	subs.w	ip, ip, #1
 80097b2:	f800 2c04 	strb.w	r2, [r0, #-4]
 80097b6:	f800 4c03 	strb.w	r4, [r0, #-3]
 80097ba:	d1f3      	bne.n	80097a4 <USB_ReadPMA+0x14>
 80097bc:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 80097c0:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 80097c4:	07db      	lsls	r3, r3, #31
 80097c6:	bf44      	itt	mi
 80097c8:	882b      	ldrhmi	r3, [r5, #0]
 80097ca:	700b      	strbmi	r3, [r1, #0]
 80097cc:	bd70      	pop	{r4, r5, r6, pc}
 80097ce:	bf00      	nop

080097d0 <USBD_CDC_EP0_RxReady>:
 80097d0:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 80097d4:	b183      	cbz	r3, 80097f8 <USBD_CDC_EP0_RxReady+0x28>
 80097d6:	b510      	push	{r4, lr}
 80097d8:	f8d0 4290 	ldr.w	r4, [r0, #656]	; 0x290
 80097dc:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 80097e0:	28ff      	cmp	r0, #255	; 0xff
 80097e2:	d007      	beq.n	80097f4 <USBD_CDC_EP0_RxReady+0x24>
 80097e4:	689b      	ldr	r3, [r3, #8]
 80097e6:	4621      	mov	r1, r4
 80097e8:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 80097ec:	4798      	blx	r3
 80097ee:	23ff      	movs	r3, #255	; 0xff
 80097f0:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 80097f4:	2000      	movs	r0, #0
 80097f6:	bd10      	pop	{r4, pc}
 80097f8:	2000      	movs	r0, #0
 80097fa:	4770      	bx	lr

080097fc <USBD_CDC_GetFSCfgDesc>:
 80097fc:	4603      	mov	r3, r0
 80097fe:	2243      	movs	r2, #67	; 0x43
 8009800:	4801      	ldr	r0, [pc, #4]	; (8009808 <USBD_CDC_GetFSCfgDesc+0xc>)
 8009802:	801a      	strh	r2, [r3, #0]
 8009804:	4770      	bx	lr
 8009806:	bf00      	nop
 8009808:	20000068 	.word	0x20000068

0800980c <USBD_CDC_GetHSCfgDesc>:
 800980c:	4603      	mov	r3, r0
 800980e:	2243      	movs	r2, #67	; 0x43
 8009810:	4801      	ldr	r0, [pc, #4]	; (8009818 <USBD_CDC_GetHSCfgDesc+0xc>)
 8009812:	801a      	strh	r2, [r3, #0]
 8009814:	4770      	bx	lr
 8009816:	bf00      	nop
 8009818:	200000ac 	.word	0x200000ac

0800981c <USBD_CDC_GetOtherSpeedCfgDesc>:
 800981c:	4603      	mov	r3, r0
 800981e:	2243      	movs	r2, #67	; 0x43
 8009820:	4801      	ldr	r0, [pc, #4]	; (8009828 <USBD_CDC_GetOtherSpeedCfgDesc+0xc>)
 8009822:	801a      	strh	r2, [r3, #0]
 8009824:	4770      	bx	lr
 8009826:	bf00      	nop
 8009828:	200000fc 	.word	0x200000fc

0800982c <USBD_CDC_GetDeviceQualifierDescriptor>:
 800982c:	4603      	mov	r3, r0
 800982e:	220a      	movs	r2, #10
 8009830:	4801      	ldr	r0, [pc, #4]	; (8009838 <USBD_CDC_GetDeviceQualifierDescriptor+0xc>)
 8009832:	801a      	strh	r2, [r3, #0]
 8009834:	4770      	bx	lr
 8009836:	bf00      	nop
 8009838:	200000f0 	.word	0x200000f0

0800983c <USBD_CDC_DataOut>:
 800983c:	b538      	push	{r3, r4, r5, lr}
 800983e:	4604      	mov	r4, r0
 8009840:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009844:	f001 f84c 	bl	800a8e0 <USBD_LL_GetRxDataSize>
 8009848:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800984c:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
 8009850:	b14b      	cbz	r3, 8009866 <USBD_CDC_DataOut+0x2a>
 8009852:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009856:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 800985a:	68db      	ldr	r3, [r3, #12]
 800985c:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 8009860:	4798      	blx	r3
 8009862:	2000      	movs	r0, #0
 8009864:	bd38      	pop	{r3, r4, r5, pc}
 8009866:	2002      	movs	r0, #2
 8009868:	bd38      	pop	{r3, r4, r5, pc}
 800986a:	bf00      	nop

0800986c <USBD_CDC_DataIn>:
 800986c:	b538      	push	{r3, r4, r5, lr}
 800986e:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009872:	b1ed      	cbz	r5, 80098b0 <USBD_CDC_DataIn+0x44>
 8009874:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 8009878:	eb00 0c83 	add.w	ip, r0, r3, lsl #2
 800987c:	f8dc 201c 	ldr.w	r2, [ip, #28]
 8009880:	b14a      	cbz	r2, 8009896 <USBD_CDC_DataIn+0x2a>
 8009882:	f8d0 4298 	ldr.w	r4, [r0, #664]	; 0x298
 8009886:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 800988a:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800988c:	fbb2 f3f4 	udiv	r3, r2, r4
 8009890:	fb04 2413 	mls	r4, r4, r3, r2
 8009894:	b124      	cbz	r4, 80098a0 <USBD_CDC_DataIn+0x34>
 8009896:	2300      	movs	r3, #0
 8009898:	4618      	mov	r0, r3
 800989a:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
 800989e:	bd38      	pop	{r3, r4, r5, pc}
 80098a0:	4623      	mov	r3, r4
 80098a2:	4622      	mov	r2, r4
 80098a4:	f8cc 401c 	str.w	r4, [ip, #28]
 80098a8:	f000 fffe 	bl	800a8a8 <USBD_LL_Transmit>
 80098ac:	4620      	mov	r0, r4
 80098ae:	bd38      	pop	{r3, r4, r5, pc}
 80098b0:	2002      	movs	r0, #2
 80098b2:	bd38      	pop	{r3, r4, r5, pc}

080098b4 <USBD_CDC_Setup>:
 80098b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098b8:	2700      	movs	r7, #0
 80098ba:	780b      	ldrb	r3, [r1, #0]
 80098bc:	b082      	sub	sp, #8
 80098be:	f013 0660 	ands.w	r6, r3, #96	; 0x60
 80098c2:	460c      	mov	r4, r1
 80098c4:	4605      	mov	r5, r0
 80098c6:	f8d0 8290 	ldr.w	r8, [r0, #656]	; 0x290
 80098ca:	f88d 7005 	strb.w	r7, [sp, #5]
 80098ce:	f8ad 7006 	strh.w	r7, [sp, #6]
 80098d2:	d013      	beq.n	80098fc <USBD_CDC_Setup+0x48>
 80098d4:	2e20      	cmp	r6, #32
 80098d6:	d117      	bne.n	8009908 <USBD_CDC_Setup+0x54>
 80098d8:	88ce      	ldrh	r6, [r1, #6]
 80098da:	b1f6      	cbz	r6, 800991a <USBD_CDC_Setup+0x66>
 80098dc:	061b      	lsls	r3, r3, #24
 80098de:	d53f      	bpl.n	8009960 <USBD_CDC_Setup+0xac>
 80098e0:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 80098e4:	4632      	mov	r2, r6
 80098e6:	4641      	mov	r1, r8
 80098e8:	689b      	ldr	r3, [r3, #8]
 80098ea:	7860      	ldrb	r0, [r4, #1]
 80098ec:	4798      	blx	r3
 80098ee:	4641      	mov	r1, r8
 80098f0:	4628      	mov	r0, r5
 80098f2:	88e2      	ldrh	r2, [r4, #6]
 80098f4:	463e      	mov	r6, r7
 80098f6:	f000 fcef 	bl	800a2d8 <USBD_CtlSendData>
 80098fa:	e00a      	b.n	8009912 <USBD_CDC_Setup+0x5e>
 80098fc:	784b      	ldrb	r3, [r1, #1]
 80098fe:	2b0a      	cmp	r3, #10
 8009900:	d01f      	beq.n	8009942 <USBD_CDC_Setup+0x8e>
 8009902:	2b0b      	cmp	r3, #11
 8009904:	d027      	beq.n	8009956 <USBD_CDC_Setup+0xa2>
 8009906:	b193      	cbz	r3, 800992e <USBD_CDC_Setup+0x7a>
 8009908:	4621      	mov	r1, r4
 800990a:	4628      	mov	r0, r5
 800990c:	f000 fcae 	bl	800a26c <USBD_CtlError>
 8009910:	2602      	movs	r6, #2
 8009912:	4630      	mov	r0, r6
 8009914:	b002      	add	sp, #8
 8009916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800991a:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 800991e:	4632      	mov	r2, r6
 8009920:	689b      	ldr	r3, [r3, #8]
 8009922:	7848      	ldrb	r0, [r1, #1]
 8009924:	4798      	blx	r3
 8009926:	4630      	mov	r0, r6
 8009928:	b002      	add	sp, #8
 800992a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800992e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009932:	2b03      	cmp	r3, #3
 8009934:	d1e8      	bne.n	8009908 <USBD_CDC_Setup+0x54>
 8009936:	2202      	movs	r2, #2
 8009938:	f10d 0106 	add.w	r1, sp, #6
 800993c:	f000 fccc 	bl	800a2d8 <USBD_CtlSendData>
 8009940:	e7e7      	b.n	8009912 <USBD_CDC_Setup+0x5e>
 8009942:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009946:	2b03      	cmp	r3, #3
 8009948:	d1de      	bne.n	8009908 <USBD_CDC_Setup+0x54>
 800994a:	2201      	movs	r2, #1
 800994c:	f10d 0105 	add.w	r1, sp, #5
 8009950:	f000 fcc2 	bl	800a2d8 <USBD_CtlSendData>
 8009954:	e7dd      	b.n	8009912 <USBD_CDC_Setup+0x5e>
 8009956:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800995a:	2b03      	cmp	r3, #3
 800995c:	d0d9      	beq.n	8009912 <USBD_CDC_Setup+0x5e>
 800995e:	e7d3      	b.n	8009908 <USBD_CDC_Setup+0x54>
 8009960:	784b      	ldrb	r3, [r1, #1]
 8009962:	4632      	mov	r2, r6
 8009964:	f888 6201 	strb.w	r6, [r8, #513]	; 0x201
 8009968:	4641      	mov	r1, r8
 800996a:	f888 3200 	strb.w	r3, [r8, #512]	; 0x200
 800996e:	f000 fccb 	bl	800a308 <USBD_CtlPrepareRx>
 8009972:	463e      	mov	r6, r7
 8009974:	e7cd      	b.n	8009912 <USBD_CDC_Setup+0x5e>
 8009976:	bf00      	nop

08009978 <USBD_CDC_DeInit>:
 8009978:	b538      	push	{r3, r4, r5, lr}
 800997a:	4604      	mov	r4, r0
 800997c:	2500      	movs	r5, #0
 800997e:	2181      	movs	r1, #129	; 0x81
 8009980:	f000 ff46 	bl	800a810 <USBD_LL_CloseEP>
 8009984:	2101      	movs	r1, #1
 8009986:	4620      	mov	r0, r4
 8009988:	62e5      	str	r5, [r4, #44]	; 0x2c
 800998a:	f000 ff41 	bl	800a810 <USBD_LL_CloseEP>
 800998e:	2182      	movs	r1, #130	; 0x82
 8009990:	4620      	mov	r0, r4
 8009992:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 8009996:	f000 ff3b 	bl	800a810 <USBD_LL_CloseEP>
 800999a:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800999e:	6425      	str	r5, [r4, #64]	; 0x40
 80099a0:	b14b      	cbz	r3, 80099b6 <USBD_CDC_DeInit+0x3e>
 80099a2:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 80099a6:	685b      	ldr	r3, [r3, #4]
 80099a8:	4798      	blx	r3
 80099aa:	f8d4 0290 	ldr.w	r0, [r4, #656]	; 0x290
 80099ae:	f000 ff9f 	bl	800a8f0 <USBD_static_free>
 80099b2:	f8c4 5290 	str.w	r5, [r4, #656]	; 0x290
 80099b6:	2000      	movs	r0, #0
 80099b8:	bd38      	pop	{r3, r4, r5, pc}
 80099ba:	bf00      	nop

080099bc <USBD_CDC_Init>:
 80099bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099c0:	7c03      	ldrb	r3, [r0, #16]
 80099c2:	4604      	mov	r4, r0
 80099c4:	bbbb      	cbnz	r3, 8009a36 <USBD_CDC_Init+0x7a>
 80099c6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80099ca:	2202      	movs	r2, #2
 80099cc:	2181      	movs	r1, #129	; 0x81
 80099ce:	f000 ff0f 	bl	800a7f0 <USBD_LL_OpenEP>
 80099d2:	2501      	movs	r5, #1
 80099d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80099d8:	2701      	movs	r7, #1
 80099da:	4629      	mov	r1, r5
 80099dc:	2202      	movs	r2, #2
 80099de:	62e5      	str	r5, [r4, #44]	; 0x2c
 80099e0:	4620      	mov	r0, r4
 80099e2:	f000 ff05 	bl	800a7f0 <USBD_LL_OpenEP>
 80099e6:	2308      	movs	r3, #8
 80099e8:	2203      	movs	r2, #3
 80099ea:	2182      	movs	r1, #130	; 0x82
 80099ec:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 80099f0:	4620      	mov	r0, r4
 80099f2:	f000 fefd 	bl	800a7f0 <USBD_LL_OpenEP>
 80099f6:	f44f 7007 	mov.w	r0, #540	; 0x21c
 80099fa:	6427      	str	r7, [r4, #64]	; 0x40
 80099fc:	f000 ff74 	bl	800a8e8 <USBD_static_malloc>
 8009a00:	4605      	mov	r5, r0
 8009a02:	f8c4 0290 	str.w	r0, [r4, #656]	; 0x290
 8009a06:	b348      	cbz	r0, 8009a5c <USBD_CDC_Init+0xa0>
 8009a08:	f04f 0800 	mov.w	r8, #0
 8009a0c:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	4798      	blx	r3
 8009a14:	f8c5 8214 	str.w	r8, [r5, #532]	; 0x214
 8009a18:	f8c5 8218 	str.w	r8, [r5, #536]	; 0x218
 8009a1c:	7c26      	ldrb	r6, [r4, #16]
 8009a1e:	b196      	cbz	r6, 8009a46 <USBD_CDC_Init+0x8a>
 8009a20:	4646      	mov	r6, r8
 8009a22:	2340      	movs	r3, #64	; 0x40
 8009a24:	4639      	mov	r1, r7
 8009a26:	4620      	mov	r0, r4
 8009a28:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8009a2c:	f000 ff4a 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009a30:	4630      	mov	r0, r6
 8009a32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a36:	2340      	movs	r3, #64	; 0x40
 8009a38:	2202      	movs	r2, #2
 8009a3a:	2181      	movs	r1, #129	; 0x81
 8009a3c:	f000 fed8 	bl	800a7f0 <USBD_LL_OpenEP>
 8009a40:	2501      	movs	r5, #1
 8009a42:	2340      	movs	r3, #64	; 0x40
 8009a44:	e7c8      	b.n	80099d8 <USBD_CDC_Init+0x1c>
 8009a46:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009a4a:	4639      	mov	r1, r7
 8009a4c:	4620      	mov	r0, r4
 8009a4e:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8009a52:	f000 ff37 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009a56:	4630      	mov	r0, r6
 8009a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a5c:	463e      	mov	r6, r7
 8009a5e:	4630      	mov	r0, r6
 8009a60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009a64 <USBD_CDC_RegisterInterface>:
 8009a64:	4603      	mov	r3, r0
 8009a66:	b119      	cbz	r1, 8009a70 <USBD_CDC_RegisterInterface+0xc>
 8009a68:	2000      	movs	r0, #0
 8009a6a:	f8c3 1294 	str.w	r1, [r3, #660]	; 0x294
 8009a6e:	4770      	bx	lr
 8009a70:	2002      	movs	r0, #2
 8009a72:	4770      	bx	lr

08009a74 <USBD_CDC_SetTxBuffer>:
 8009a74:	4603      	mov	r3, r0
 8009a76:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 8009a7a:	2000      	movs	r0, #0
 8009a7c:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 8009a80:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8009a84:	4770      	bx	lr
 8009a86:	bf00      	nop

08009a88 <USBD_CDC_SetRxBuffer>:
 8009a88:	4603      	mov	r3, r0
 8009a8a:	f8d3 3290 	ldr.w	r3, [r3, #656]	; 0x290
 8009a8e:	2000      	movs	r0, #0
 8009a90:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8009a94:	4770      	bx	lr
 8009a96:	bf00      	nop

08009a98 <USBD_CDC_TransmitPacket>:
 8009a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a9a:	f8d0 5290 	ldr.w	r5, [r0, #656]	; 0x290
 8009a9e:	b195      	cbz	r5, 8009ac6 <USBD_CDC_TransmitPacket+0x2e>
 8009aa0:	f8d5 4214 	ldr.w	r4, [r5, #532]	; 0x214
 8009aa4:	b10c      	cbz	r4, 8009aaa <USBD_CDC_TransmitPacket+0x12>
 8009aa6:	2001      	movs	r0, #1
 8009aa8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009aaa:	2701      	movs	r7, #1
 8009aac:	f8d5 6210 	ldr.w	r6, [r5, #528]	; 0x210
 8009ab0:	f8d5 2208 	ldr.w	r2, [r5, #520]	; 0x208
 8009ab4:	f8c5 7214 	str.w	r7, [r5, #532]	; 0x214
 8009ab8:	2181      	movs	r1, #129	; 0x81
 8009aba:	b2b3      	uxth	r3, r6
 8009abc:	6306      	str	r6, [r0, #48]	; 0x30
 8009abe:	f000 fef3 	bl	800a8a8 <USBD_LL_Transmit>
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009ac6:	2002      	movs	r0, #2
 8009ac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009aca:	bf00      	nop

08009acc <USBD_CDC_ReceivePacket>:
 8009acc:	f8d0 2290 	ldr.w	r2, [r0, #656]	; 0x290
 8009ad0:	b510      	push	{r4, lr}
 8009ad2:	b19a      	cbz	r2, 8009afc <USBD_CDC_ReceivePacket+0x30>
 8009ad4:	7c04      	ldrb	r4, [r0, #16]
 8009ad6:	b144      	cbz	r4, 8009aea <USBD_CDC_ReceivePacket+0x1e>
 8009ad8:	2400      	movs	r4, #0
 8009ada:	2340      	movs	r3, #64	; 0x40
 8009adc:	2101      	movs	r1, #1
 8009ade:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009ae2:	f000 feef 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009ae6:	4620      	mov	r0, r4
 8009ae8:	bd10      	pop	{r4, pc}
 8009aea:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009aee:	2101      	movs	r1, #1
 8009af0:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8009af4:	f000 fee6 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009af8:	4620      	mov	r0, r4
 8009afa:	bd10      	pop	{r4, pc}
 8009afc:	2402      	movs	r4, #2
 8009afe:	4620      	mov	r0, r4
 8009b00:	bd10      	pop	{r4, pc}
 8009b02:	bf00      	nop

08009b04 <USBD_Init>:
 8009b04:	b188      	cbz	r0, 8009b2a <USBD_Init+0x26>
 8009b06:	b508      	push	{r3, lr}
 8009b08:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009b0c:	b113      	cbz	r3, 8009b14 <USBD_Init+0x10>
 8009b0e:	2300      	movs	r3, #0
 8009b10:	f8c0 328c 	str.w	r3, [r0, #652]	; 0x28c
 8009b14:	b109      	cbz	r1, 8009b1a <USBD_Init+0x16>
 8009b16:	f8c0 1288 	str.w	r1, [r0, #648]	; 0x288
 8009b1a:	2301      	movs	r3, #1
 8009b1c:	7002      	strb	r2, [r0, #0]
 8009b1e:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 8009b22:	f000 fe13 	bl	800a74c <USBD_LL_Init>
 8009b26:	2000      	movs	r0, #0
 8009b28:	bd08      	pop	{r3, pc}
 8009b2a:	2002      	movs	r0, #2
 8009b2c:	4770      	bx	lr
 8009b2e:	bf00      	nop

08009b30 <USBD_RegisterClass>:
 8009b30:	4603      	mov	r3, r0
 8009b32:	b119      	cbz	r1, 8009b3c <USBD_RegisterClass+0xc>
 8009b34:	2000      	movs	r0, #0
 8009b36:	f8c3 128c 	str.w	r1, [r3, #652]	; 0x28c
 8009b3a:	4770      	bx	lr
 8009b3c:	2002      	movs	r0, #2
 8009b3e:	4770      	bx	lr

08009b40 <USBD_Start>:
 8009b40:	b508      	push	{r3, lr}
 8009b42:	f000 fe47 	bl	800a7d4 <USBD_LL_Start>
 8009b46:	2000      	movs	r0, #0
 8009b48:	bd08      	pop	{r3, pc}
 8009b4a:	bf00      	nop

08009b4c <USBD_SetClassConfig>:
 8009b4c:	b508      	push	{r3, lr}
 8009b4e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009b52:	b11b      	cbz	r3, 8009b5c <USBD_SetClassConfig+0x10>
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	4798      	blx	r3
 8009b58:	b900      	cbnz	r0, 8009b5c <USBD_SetClassConfig+0x10>
 8009b5a:	bd08      	pop	{r3, pc}
 8009b5c:	2002      	movs	r0, #2
 8009b5e:	bd08      	pop	{r3, pc}

08009b60 <USBD_ClrClassConfig>:
 8009b60:	b508      	push	{r3, lr}
 8009b62:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009b66:	685b      	ldr	r3, [r3, #4]
 8009b68:	4798      	blx	r3
 8009b6a:	2000      	movs	r0, #0
 8009b6c:	bd08      	pop	{r3, pc}
 8009b6e:	bf00      	nop

08009b70 <USBD_LL_SetupStage>:
 8009b70:	b538      	push	{r3, r4, r5, lr}
 8009b72:	4604      	mov	r4, r0
 8009b74:	f500 7520 	add.w	r5, r0, #640	; 0x280
 8009b78:	4628      	mov	r0, r5
 8009b7a:	f000 fb63 	bl	800a244 <USBD_ParseSetupRequest>
 8009b7e:	2201      	movs	r2, #1
 8009b80:	f8b4 3286 	ldrh.w	r3, [r4, #646]	; 0x286
 8009b84:	f894 1280 	ldrb.w	r1, [r4, #640]	; 0x280
 8009b88:	f8c4 3270 	str.w	r3, [r4, #624]	; 0x270
 8009b8c:	f001 031f 	and.w	r3, r1, #31
 8009b90:	4293      	cmp	r3, r2
 8009b92:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
 8009b96:	d009      	beq.n	8009bac <USBD_LL_SetupStage+0x3c>
 8009b98:	2b02      	cmp	r3, #2
 8009b9a:	d013      	beq.n	8009bc4 <USBD_LL_SetupStage+0x54>
 8009b9c:	b163      	cbz	r3, 8009bb8 <USBD_LL_SetupStage+0x48>
 8009b9e:	4620      	mov	r0, r4
 8009ba0:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8009ba4:	f000 fe42 	bl	800a82c <USBD_LL_StallEP>
 8009ba8:	2000      	movs	r0, #0
 8009baa:	bd38      	pop	{r3, r4, r5, pc}
 8009bac:	4629      	mov	r1, r5
 8009bae:	4620      	mov	r0, r4
 8009bb0:	f000 fa78 	bl	800a0a4 <USBD_StdItfReq>
 8009bb4:	2000      	movs	r0, #0
 8009bb6:	bd38      	pop	{r3, r4, r5, pc}
 8009bb8:	4629      	mov	r1, r5
 8009bba:	4620      	mov	r0, r4
 8009bbc:	f000 f8f8 	bl	8009db0 <USBD_StdDevReq>
 8009bc0:	2000      	movs	r0, #0
 8009bc2:	bd38      	pop	{r3, r4, r5, pc}
 8009bc4:	4629      	mov	r1, r5
 8009bc6:	4620      	mov	r0, r4
 8009bc8:	f000 faa0 	bl	800a10c <USBD_StdEPReq>
 8009bcc:	2000      	movs	r0, #0
 8009bce:	bd38      	pop	{r3, r4, r5, pc}

08009bd0 <USBD_LL_DataOutStage>:
 8009bd0:	b538      	push	{r3, r4, r5, lr}
 8009bd2:	4605      	mov	r5, r0
 8009bd4:	b969      	cbnz	r1, 8009bf2 <USBD_LL_DataOutStage+0x22>
 8009bd6:	4613      	mov	r3, r2
 8009bd8:	f8d0 226c 	ldr.w	r2, [r0, #620]	; 0x26c
 8009bdc:	2a03      	cmp	r2, #3
 8009bde:	d015      	beq.n	8009c0c <USBD_LL_DataOutStage+0x3c>
 8009be0:	2a05      	cmp	r2, #5
 8009be2:	460c      	mov	r4, r1
 8009be4:	d10e      	bne.n	8009c04 <USBD_LL_DataOutStage+0x34>
 8009be6:	f8c5 126c 	str.w	r1, [r5, #620]	; 0x26c
 8009bea:	f000 fe1f 	bl	800a82c <USBD_LL_StallEP>
 8009bee:	4620      	mov	r0, r4
 8009bf0:	bd38      	pop	{r3, r4, r5, pc}
 8009bf2:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009bf6:	699b      	ldr	r3, [r3, #24]
 8009bf8:	b133      	cbz	r3, 8009c08 <USBD_LL_DataOutStage+0x38>
 8009bfa:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009bfe:	2a03      	cmp	r2, #3
 8009c00:	d102      	bne.n	8009c08 <USBD_LL_DataOutStage+0x38>
 8009c02:	4798      	blx	r3
 8009c04:	2000      	movs	r0, #0
 8009c06:	bd38      	pop	{r3, r4, r5, pc}
 8009c08:	2002      	movs	r0, #2
 8009c0a:	bd38      	pop	{r3, r4, r5, pc}
 8009c0c:	e9d0 1253 	ldrd	r1, r2, [r0, #332]	; 0x14c
 8009c10:	4291      	cmp	r1, r2
 8009c12:	d90c      	bls.n	8009c2e <USBD_LL_DataOutStage+0x5e>
 8009c14:	1a89      	subs	r1, r1, r2
 8009c16:	428a      	cmp	r2, r1
 8009c18:	bf88      	it	hi
 8009c1a:	b28a      	uxthhi	r2, r1
 8009c1c:	f8c0 114c 	str.w	r1, [r0, #332]	; 0x14c
 8009c20:	bf98      	it	ls
 8009c22:	b292      	uxthls	r2, r2
 8009c24:	4619      	mov	r1, r3
 8009c26:	f000 fb7d 	bl	800a324 <USBD_CtlContinueRx>
 8009c2a:	2000      	movs	r0, #0
 8009c2c:	bd38      	pop	{r3, r4, r5, pc}
 8009c2e:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009c32:	691b      	ldr	r3, [r3, #16]
 8009c34:	b11b      	cbz	r3, 8009c3e <USBD_LL_DataOutStage+0x6e>
 8009c36:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009c3a:	2a03      	cmp	r2, #3
 8009c3c:	d004      	beq.n	8009c48 <USBD_LL_DataOutStage+0x78>
 8009c3e:	4628      	mov	r0, r5
 8009c40:	f000 fb7a 	bl	800a338 <USBD_CtlSendStatus>
 8009c44:	2000      	movs	r0, #0
 8009c46:	bd38      	pop	{r3, r4, r5, pc}
 8009c48:	4798      	blx	r3
 8009c4a:	e7f8      	b.n	8009c3e <USBD_LL_DataOutStage+0x6e>

08009c4c <USBD_LL_DataInStage>:
 8009c4c:	b570      	push	{r4, r5, r6, lr}
 8009c4e:	4604      	mov	r4, r0
 8009c50:	b961      	cbnz	r1, 8009c6c <USBD_LL_DataInStage+0x20>
 8009c52:	f8d0 326c 	ldr.w	r3, [r0, #620]	; 0x26c
 8009c56:	2b02      	cmp	r3, #2
 8009c58:	d015      	beq.n	8009c86 <USBD_LL_DataInStage+0x3a>
 8009c5a:	f033 0304 	bics.w	r3, r3, #4
 8009c5e:	d02e      	beq.n	8009cbe <USBD_LL_DataInStage+0x72>
 8009c60:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 8009c64:	2b01      	cmp	r3, #1
 8009c66:	d031      	beq.n	8009ccc <USBD_LL_DataInStage+0x80>
 8009c68:	2000      	movs	r0, #0
 8009c6a:	bd70      	pop	{r4, r5, r6, pc}
 8009c6c:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009c70:	695b      	ldr	r3, [r3, #20]
 8009c72:	b133      	cbz	r3, 8009c82 <USBD_LL_DataInStage+0x36>
 8009c74:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009c78:	2a03      	cmp	r2, #3
 8009c7a:	d102      	bne.n	8009c82 <USBD_LL_DataInStage+0x36>
 8009c7c:	4798      	blx	r3
 8009c7e:	2000      	movs	r0, #0
 8009c80:	bd70      	pop	{r4, r5, r6, pc}
 8009c82:	2002      	movs	r0, #2
 8009c84:	bd70      	pop	{r4, r5, r6, pc}
 8009c86:	e9d0 6308 	ldrd	r6, r3, [r0, #32]
 8009c8a:	429e      	cmp	r6, r3
 8009c8c:	d833      	bhi.n	8009cf6 <USBD_LL_DataInStage+0xaa>
 8009c8e:	69c2      	ldr	r2, [r0, #28]
 8009c90:	fbb2 f5f3 	udiv	r5, r2, r3
 8009c94:	fb03 2515 	mls	r5, r3, r5, r2
 8009c98:	b9ed      	cbnz	r5, 8009cd6 <USBD_LL_DataInStage+0x8a>
 8009c9a:	4293      	cmp	r3, r2
 8009c9c:	d81b      	bhi.n	8009cd6 <USBD_LL_DataInStage+0x8a>
 8009c9e:	f8d0 3270 	ldr.w	r3, [r0, #624]	; 0x270
 8009ca2:	429a      	cmp	r2, r3
 8009ca4:	d217      	bcs.n	8009cd6 <USBD_LL_DataInStage+0x8a>
 8009ca6:	462a      	mov	r2, r5
 8009ca8:	f000 fb24 	bl	800a2f4 <USBD_CtlContinueSendData>
 8009cac:	462b      	mov	r3, r5
 8009cae:	462a      	mov	r2, r5
 8009cb0:	4629      	mov	r1, r5
 8009cb2:	4620      	mov	r0, r4
 8009cb4:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
 8009cb8:	f000 fe04 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009cbc:	e7d0      	b.n	8009c60 <USBD_LL_DataInStage+0x14>
 8009cbe:	2180      	movs	r1, #128	; 0x80
 8009cc0:	f000 fdb4 	bl	800a82c <USBD_LL_StallEP>
 8009cc4:	f894 3278 	ldrb.w	r3, [r4, #632]	; 0x278
 8009cc8:	2b01      	cmp	r3, #1
 8009cca:	d1cd      	bne.n	8009c68 <USBD_LL_DataInStage+0x1c>
 8009ccc:	2300      	movs	r3, #0
 8009cce:	f884 3278 	strb.w	r3, [r4, #632]	; 0x278
 8009cd2:	4618      	mov	r0, r3
 8009cd4:	bd70      	pop	{r4, r5, r6, pc}
 8009cd6:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009cda:	68db      	ldr	r3, [r3, #12]
 8009cdc:	b11b      	cbz	r3, 8009ce6 <USBD_LL_DataInStage+0x9a>
 8009cde:	f894 2274 	ldrb.w	r2, [r4, #628]	; 0x274
 8009ce2:	2a03      	cmp	r2, #3
 8009ce4:	d015      	beq.n	8009d12 <USBD_LL_DataInStage+0xc6>
 8009ce6:	2180      	movs	r1, #128	; 0x80
 8009ce8:	4620      	mov	r0, r4
 8009cea:	f000 fd9f 	bl	800a82c <USBD_LL_StallEP>
 8009cee:	4620      	mov	r0, r4
 8009cf0:	f000 fb2e 	bl	800a350 <USBD_CtlReceiveStatus>
 8009cf4:	e7b4      	b.n	8009c60 <USBD_LL_DataInStage+0x14>
 8009cf6:	460d      	mov	r5, r1
 8009cf8:	1af3      	subs	r3, r6, r3
 8009cfa:	4611      	mov	r1, r2
 8009cfc:	6203      	str	r3, [r0, #32]
 8009cfe:	b29a      	uxth	r2, r3
 8009d00:	f000 faf8 	bl	800a2f4 <USBD_CtlContinueSendData>
 8009d04:	462b      	mov	r3, r5
 8009d06:	462a      	mov	r2, r5
 8009d08:	4629      	mov	r1, r5
 8009d0a:	4620      	mov	r0, r4
 8009d0c:	f000 fdda 	bl	800a8c4 <USBD_LL_PrepareReceive>
 8009d10:	e7a6      	b.n	8009c60 <USBD_LL_DataInStage+0x14>
 8009d12:	4620      	mov	r0, r4
 8009d14:	4798      	blx	r3
 8009d16:	e7e6      	b.n	8009ce6 <USBD_LL_DataInStage+0x9a>

08009d18 <USBD_LL_Reset>:
 8009d18:	b570      	push	{r4, r5, r6, lr}
 8009d1a:	2200      	movs	r2, #0
 8009d1c:	2640      	movs	r6, #64	; 0x40
 8009d1e:	4604      	mov	r4, r0
 8009d20:	2501      	movs	r5, #1
 8009d22:	4611      	mov	r1, r2
 8009d24:	4633      	mov	r3, r6
 8009d26:	f000 fd63 	bl	800a7f0 <USBD_LL_OpenEP>
 8009d2a:	4633      	mov	r3, r6
 8009d2c:	2180      	movs	r1, #128	; 0x80
 8009d2e:	2200      	movs	r2, #0
 8009d30:	4620      	mov	r0, r4
 8009d32:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 8009d36:	f8c4 6150 	str.w	r6, [r4, #336]	; 0x150
 8009d3a:	f000 fd59 	bl	800a7f0 <USBD_LL_OpenEP>
 8009d3e:	2100      	movs	r1, #0
 8009d40:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 8009d44:	61a5      	str	r5, [r4, #24]
 8009d46:	6266      	str	r6, [r4, #36]	; 0x24
 8009d48:	f884 5274 	strb.w	r5, [r4, #628]	; 0x274
 8009d4c:	f8c4 126c 	str.w	r1, [r4, #620]	; 0x26c
 8009d50:	6061      	str	r1, [r4, #4]
 8009d52:	f8c4 127c 	str.w	r1, [r4, #636]	; 0x27c
 8009d56:	b123      	cbz	r3, 8009d62 <USBD_LL_Reset+0x4a>
 8009d58:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	685b      	ldr	r3, [r3, #4]
 8009d60:	4798      	blx	r3
 8009d62:	2000      	movs	r0, #0
 8009d64:	bd70      	pop	{r4, r5, r6, pc}
 8009d66:	bf00      	nop

08009d68 <USBD_LL_SetSpeed>:
 8009d68:	4603      	mov	r3, r0
 8009d6a:	2000      	movs	r0, #0
 8009d6c:	7419      	strb	r1, [r3, #16]
 8009d6e:	4770      	bx	lr

08009d70 <USBD_LL_Suspend>:
 8009d70:	4603      	mov	r3, r0
 8009d72:	2104      	movs	r1, #4
 8009d74:	f893 2274 	ldrb.w	r2, [r3, #628]	; 0x274
 8009d78:	2000      	movs	r0, #0
 8009d7a:	f883 1274 	strb.w	r1, [r3, #628]	; 0x274
 8009d7e:	f883 2275 	strb.w	r2, [r3, #629]	; 0x275
 8009d82:	4770      	bx	lr

08009d84 <USBD_LL_Resume>:
 8009d84:	4603      	mov	r3, r0
 8009d86:	f893 2275 	ldrb.w	r2, [r3, #629]	; 0x275
 8009d8a:	2000      	movs	r0, #0
 8009d8c:	f883 2274 	strb.w	r2, [r3, #628]	; 0x274
 8009d90:	4770      	bx	lr
 8009d92:	bf00      	nop

08009d94 <USBD_LL_SOF>:
 8009d94:	f890 2274 	ldrb.w	r2, [r0, #628]	; 0x274
 8009d98:	2a03      	cmp	r2, #3
 8009d9a:	d001      	beq.n	8009da0 <USBD_LL_SOF+0xc>
 8009d9c:	2000      	movs	r0, #0
 8009d9e:	4770      	bx	lr
 8009da0:	b508      	push	{r3, lr}
 8009da2:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009da6:	69db      	ldr	r3, [r3, #28]
 8009da8:	b103      	cbz	r3, 8009dac <USBD_LL_SOF+0x18>
 8009daa:	4798      	blx	r3
 8009dac:	2000      	movs	r0, #0
 8009dae:	bd08      	pop	{r3, pc}

08009db0 <USBD_StdDevReq>:
 8009db0:	b530      	push	{r4, r5, lr}
 8009db2:	780b      	ldrb	r3, [r1, #0]
 8009db4:	460d      	mov	r5, r1
 8009db6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8009dba:	2b20      	cmp	r3, #32
 8009dbc:	4604      	mov	r4, r0
 8009dbe:	b083      	sub	sp, #12
 8009dc0:	d00d      	beq.n	8009dde <USBD_StdDevReq+0x2e>
 8009dc2:	2b40      	cmp	r3, #64	; 0x40
 8009dc4:	d00b      	beq.n	8009dde <USBD_StdDevReq+0x2e>
 8009dc6:	b19b      	cbz	r3, 8009df0 <USBD_StdDevReq+0x40>
 8009dc8:	2180      	movs	r1, #128	; 0x80
 8009dca:	4620      	mov	r0, r4
 8009dcc:	f000 fd2e 	bl	800a82c <USBD_LL_StallEP>
 8009dd0:	2100      	movs	r1, #0
 8009dd2:	4620      	mov	r0, r4
 8009dd4:	f000 fd2a 	bl	800a82c <USBD_LL_StallEP>
 8009dd8:	2000      	movs	r0, #0
 8009dda:	b003      	add	sp, #12
 8009ddc:	bd30      	pop	{r4, r5, pc}
 8009dde:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 8009de2:	4629      	mov	r1, r5
 8009de4:	4620      	mov	r0, r4
 8009de6:	689b      	ldr	r3, [r3, #8]
 8009de8:	4798      	blx	r3
 8009dea:	2000      	movs	r0, #0
 8009dec:	b003      	add	sp, #12
 8009dee:	bd30      	pop	{r4, r5, pc}
 8009df0:	784b      	ldrb	r3, [r1, #1]
 8009df2:	2b09      	cmp	r3, #9
 8009df4:	d8e8      	bhi.n	8009dc8 <USBD_StdDevReq+0x18>
 8009df6:	a201      	add	r2, pc, #4	; (adr r2, 8009dfc <USBD_StdDevReq+0x4c>)
 8009df8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009dfc:	08009e57 	.word	0x08009e57
 8009e00:	08009e83 	.word	0x08009e83
 8009e04:	08009dc9 	.word	0x08009dc9
 8009e08:	08009ea1 	.word	0x08009ea1
 8009e0c:	08009dc9 	.word	0x08009dc9
 8009e10:	08009ea9 	.word	0x08009ea9
 8009e14:	08009ee1 	.word	0x08009ee1
 8009e18:	08009dc9 	.word	0x08009dc9
 8009e1c:	08009f11 	.word	0x08009f11
 8009e20:	08009e25 	.word	0x08009e25
 8009e24:	7889      	ldrb	r1, [r1, #2]
 8009e26:	4d9e      	ldr	r5, [pc, #632]	; (800a0a0 <USBD_StdDevReq+0x2f0>)
 8009e28:	2901      	cmp	r1, #1
 8009e2a:	7029      	strb	r1, [r5, #0]
 8009e2c:	d8cc      	bhi.n	8009dc8 <USBD_StdDevReq+0x18>
 8009e2e:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009e32:	2b02      	cmp	r3, #2
 8009e34:	f000 8111 	beq.w	800a05a <USBD_StdDevReq+0x2aa>
 8009e38:	2b03      	cmp	r3, #3
 8009e3a:	f000 80ff 	beq.w	800a03c <USBD_StdDevReq+0x28c>
 8009e3e:	2180      	movs	r1, #128	; 0x80
 8009e40:	f000 fcf4 	bl	800a82c <USBD_LL_StallEP>
 8009e44:	2100      	movs	r1, #0
 8009e46:	4620      	mov	r0, r4
 8009e48:	f000 fcf0 	bl	800a82c <USBD_LL_StallEP>
 8009e4c:	4620      	mov	r0, r4
 8009e4e:	7829      	ldrb	r1, [r5, #0]
 8009e50:	f7ff fe86 	bl	8009b60 <USBD_ClrClassConfig>
 8009e54:	e7c0      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009e56:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009e5a:	3b01      	subs	r3, #1
 8009e5c:	2b02      	cmp	r3, #2
 8009e5e:	d8b3      	bhi.n	8009dc8 <USBD_StdDevReq+0x18>
 8009e60:	88cb      	ldrh	r3, [r1, #6]
 8009e62:	2b02      	cmp	r3, #2
 8009e64:	d1b0      	bne.n	8009dc8 <USBD_StdDevReq+0x18>
 8009e66:	2201      	movs	r2, #1
 8009e68:	f8d0 327c 	ldr.w	r3, [r0, #636]	; 0x27c
 8009e6c:	60c2      	str	r2, [r0, #12]
 8009e6e:	b10b      	cbz	r3, 8009e74 <USBD_StdDevReq+0xc4>
 8009e70:	2303      	movs	r3, #3
 8009e72:	60c3      	str	r3, [r0, #12]
 8009e74:	2202      	movs	r2, #2
 8009e76:	4620      	mov	r0, r4
 8009e78:	f104 010c 	add.w	r1, r4, #12
 8009e7c:	f000 fa2c 	bl	800a2d8 <USBD_CtlSendData>
 8009e80:	e7aa      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009e82:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009e86:	3b01      	subs	r3, #1
 8009e88:	2b02      	cmp	r3, #2
 8009e8a:	d89d      	bhi.n	8009dc8 <USBD_StdDevReq+0x18>
 8009e8c:	884b      	ldrh	r3, [r1, #2]
 8009e8e:	2b01      	cmp	r3, #1
 8009e90:	d1a2      	bne.n	8009dd8 <USBD_StdDevReq+0x28>
 8009e92:	2300      	movs	r3, #0
 8009e94:	4620      	mov	r0, r4
 8009e96:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
 8009e9a:	f000 fa4d 	bl	800a338 <USBD_CtlSendStatus>
 8009e9e:	e79b      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009ea0:	884b      	ldrh	r3, [r1, #2]
 8009ea2:	2b01      	cmp	r3, #1
 8009ea4:	d198      	bne.n	8009dd8 <USBD_StdDevReq+0x28>
 8009ea6:	e7f5      	b.n	8009e94 <USBD_StdDevReq+0xe4>
 8009ea8:	888b      	ldrh	r3, [r1, #4]
 8009eaa:	2b00      	cmp	r3, #0
 8009eac:	d18c      	bne.n	8009dc8 <USBD_StdDevReq+0x18>
 8009eae:	88cb      	ldrh	r3, [r1, #6]
 8009eb0:	2b00      	cmp	r3, #0
 8009eb2:	d189      	bne.n	8009dc8 <USBD_StdDevReq+0x18>
 8009eb4:	884d      	ldrh	r5, [r1, #2]
 8009eb6:	2d7f      	cmp	r5, #127	; 0x7f
 8009eb8:	d886      	bhi.n	8009dc8 <USBD_StdDevReq+0x18>
 8009eba:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009ebe:	2b03      	cmp	r3, #3
 8009ec0:	d082      	beq.n	8009dc8 <USBD_StdDevReq+0x18>
 8009ec2:	b2e9      	uxtb	r1, r5
 8009ec4:	f880 1276 	strb.w	r1, [r0, #630]	; 0x276
 8009ec8:	f000 fce0 	bl	800a88c <USBD_LL_SetUSBAddress>
 8009ecc:	4620      	mov	r0, r4
 8009ece:	f000 fa33 	bl	800a338 <USBD_CtlSendStatus>
 8009ed2:	2d00      	cmp	r5, #0
 8009ed4:	f000 80df 	beq.w	800a096 <USBD_StdDevReq+0x2e6>
 8009ed8:	2302      	movs	r3, #2
 8009eda:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 8009ede:	e77b      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009ee0:	884a      	ldrh	r2, [r1, #2]
 8009ee2:	0a13      	lsrs	r3, r2, #8
 8009ee4:	3b01      	subs	r3, #1
 8009ee6:	2b06      	cmp	r3, #6
 8009ee8:	f63f af6e 	bhi.w	8009dc8 <USBD_StdDevReq+0x18>
 8009eec:	a101      	add	r1, pc, #4	; (adr r1, 8009ef4 <USBD_StdDevReq+0x144>)
 8009eee:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009ef2:	bf00      	nop
 8009ef4:	08009fa3 	.word	0x08009fa3
 8009ef8:	08009f8b 	.word	0x08009f8b
 8009efc:	08009f79 	.word	0x08009f79
 8009f00:	08009dc9 	.word	0x08009dc9
 8009f04:	08009dc9 	.word	0x08009dc9
 8009f08:	08009f63 	.word	0x08009f63
 8009f0c:	08009f35 	.word	0x08009f35
 8009f10:	88ca      	ldrh	r2, [r1, #6]
 8009f12:	2a01      	cmp	r2, #1
 8009f14:	f47f af58 	bne.w	8009dc8 <USBD_StdDevReq+0x18>
 8009f18:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 8009f1c:	2b02      	cmp	r3, #2
 8009f1e:	d878      	bhi.n	800a012 <USBD_StdDevReq+0x262>
 8009f20:	2b00      	cmp	r3, #0
 8009f22:	f43f af51 	beq.w	8009dc8 <USBD_StdDevReq+0x18>
 8009f26:	4601      	mov	r1, r0
 8009f28:	2300      	movs	r3, #0
 8009f2a:	f841 3f08 	str.w	r3, [r1, #8]!
 8009f2e:	f000 f9d3 	bl	800a2d8 <USBD_CtlSendData>
 8009f32:	e751      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009f34:	7c03      	ldrb	r3, [r0, #16]
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	f47f af46 	bne.w	8009dc8 <USBD_StdDevReq+0x18>
 8009f3c:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009f40:	f10d 0006 	add.w	r0, sp, #6
 8009f44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f46:	4798      	blx	r3
 8009f48:	2307      	movs	r3, #7
 8009f4a:	7043      	strb	r3, [r0, #1]
 8009f4c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8009f50:	2a00      	cmp	r2, #0
 8009f52:	d06e      	beq.n	800a032 <USBD_StdDevReq+0x282>
 8009f54:	88eb      	ldrh	r3, [r5, #6]
 8009f56:	2b00      	cmp	r3, #0
 8009f58:	d162      	bne.n	800a020 <USBD_StdDevReq+0x270>
 8009f5a:	4620      	mov	r0, r4
 8009f5c:	f000 f9ec 	bl	800a338 <USBD_CtlSendStatus>
 8009f60:	e73a      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 8009f62:	7c03      	ldrb	r3, [r0, #16]
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	f47f af2f 	bne.w	8009dc8 <USBD_StdDevReq+0x18>
 8009f6a:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009f6e:	f10d 0006 	add.w	r0, sp, #6
 8009f72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f74:	4798      	blx	r3
 8009f76:	e7e9      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009f78:	b2d2      	uxtb	r2, r2
 8009f7a:	2a05      	cmp	r2, #5
 8009f7c:	f63f af24 	bhi.w	8009dc8 <USBD_StdDevReq+0x18>
 8009f80:	e8df f002 	tbb	[pc, r2]
 8009f84:	272f373f 	.word	0x272f373f
 8009f88:	171f      	.short	0x171f
 8009f8a:	7c03      	ldrb	r3, [r0, #16]
 8009f8c:	2b00      	cmp	r3, #0
 8009f8e:	d172      	bne.n	800a076 <USBD_StdDevReq+0x2c6>
 8009f90:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 8009f94:	f10d 0006 	add.w	r0, sp, #6
 8009f98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f9a:	4798      	blx	r3
 8009f9c:	2302      	movs	r3, #2
 8009f9e:	7043      	strb	r3, [r0, #1]
 8009fa0:	e7d4      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009fa2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009fa6:	f10d 0106 	add.w	r1, sp, #6
 8009faa:	681b      	ldr	r3, [r3, #0]
 8009fac:	7c00      	ldrb	r0, [r0, #16]
 8009fae:	4798      	blx	r3
 8009fb0:	e7cc      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009fb2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009fb6:	f10d 0106 	add.w	r1, sp, #6
 8009fba:	699b      	ldr	r3, [r3, #24]
 8009fbc:	7c00      	ldrb	r0, [r0, #16]
 8009fbe:	4798      	blx	r3
 8009fc0:	e7c4      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009fc2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009fc6:	f10d 0106 	add.w	r1, sp, #6
 8009fca:	695b      	ldr	r3, [r3, #20]
 8009fcc:	7c00      	ldrb	r0, [r0, #16]
 8009fce:	4798      	blx	r3
 8009fd0:	e7bc      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009fd2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009fd6:	f10d 0106 	add.w	r1, sp, #6
 8009fda:	691b      	ldr	r3, [r3, #16]
 8009fdc:	7c00      	ldrb	r0, [r0, #16]
 8009fde:	4798      	blx	r3
 8009fe0:	e7b4      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009fe2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009fe6:	f10d 0106 	add.w	r1, sp, #6
 8009fea:	68db      	ldr	r3, [r3, #12]
 8009fec:	7c00      	ldrb	r0, [r0, #16]
 8009fee:	4798      	blx	r3
 8009ff0:	e7ac      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 8009ff2:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 8009ff6:	f10d 0106 	add.w	r1, sp, #6
 8009ffa:	689b      	ldr	r3, [r3, #8]
 8009ffc:	7c00      	ldrb	r0, [r0, #16]
 8009ffe:	4798      	blx	r3
 800a000:	e7a4      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 800a002:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
 800a006:	f10d 0106 	add.w	r1, sp, #6
 800a00a:	685b      	ldr	r3, [r3, #4]
 800a00c:	7c00      	ldrb	r0, [r0, #16]
 800a00e:	4798      	blx	r3
 800a010:	e79c      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 800a012:	2b03      	cmp	r3, #3
 800a014:	f47f aed8 	bne.w	8009dc8 <USBD_StdDevReq+0x18>
 800a018:	1d01      	adds	r1, r0, #4
 800a01a:	f000 f95d 	bl	800a2d8 <USBD_CtlSendData>
 800a01e:	e6db      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 800a020:	429a      	cmp	r2, r3
 800a022:	bf28      	it	cs
 800a024:	461a      	movcs	r2, r3
 800a026:	4601      	mov	r1, r0
 800a028:	4620      	mov	r0, r4
 800a02a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800a02e:	f000 f953 	bl	800a2d8 <USBD_CtlSendData>
 800a032:	88eb      	ldrh	r3, [r5, #6]
 800a034:	2b00      	cmp	r3, #0
 800a036:	f47f aecf 	bne.w	8009dd8 <USBD_StdDevReq+0x28>
 800a03a:	e78e      	b.n	8009f5a <USBD_StdDevReq+0x1aa>
 800a03c:	b321      	cbz	r1, 800a088 <USBD_StdDevReq+0x2d8>
 800a03e:	6841      	ldr	r1, [r0, #4]
 800a040:	2901      	cmp	r1, #1
 800a042:	d08a      	beq.n	8009f5a <USBD_StdDevReq+0x1aa>
 800a044:	b2c9      	uxtb	r1, r1
 800a046:	f7ff fd8b 	bl	8009b60 <USBD_ClrClassConfig>
 800a04a:	7829      	ldrb	r1, [r5, #0]
 800a04c:	4620      	mov	r0, r4
 800a04e:	6061      	str	r1, [r4, #4]
 800a050:	f7ff fd7c 	bl	8009b4c <USBD_SetClassConfig>
 800a054:	2802      	cmp	r0, #2
 800a056:	d180      	bne.n	8009f5a <USBD_StdDevReq+0x1aa>
 800a058:	e6b6      	b.n	8009dc8 <USBD_StdDevReq+0x18>
 800a05a:	2900      	cmp	r1, #0
 800a05c:	f43f af7d 	beq.w	8009f5a <USBD_StdDevReq+0x1aa>
 800a060:	2101      	movs	r1, #1
 800a062:	2303      	movs	r3, #3
 800a064:	6041      	str	r1, [r0, #4]
 800a066:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a06a:	f7ff fd6f 	bl	8009b4c <USBD_SetClassConfig>
 800a06e:	2802      	cmp	r0, #2
 800a070:	f47f af73 	bne.w	8009f5a <USBD_StdDevReq+0x1aa>
 800a074:	e6a8      	b.n	8009dc8 <USBD_StdDevReq+0x18>
 800a076:	f8d0 328c 	ldr.w	r3, [r0, #652]	; 0x28c
 800a07a:	f10d 0006 	add.w	r0, sp, #6
 800a07e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a080:	4798      	blx	r3
 800a082:	2302      	movs	r3, #2
 800a084:	7043      	strb	r3, [r0, #1]
 800a086:	e761      	b.n	8009f4c <USBD_StdDevReq+0x19c>
 800a088:	2302      	movs	r3, #2
 800a08a:	6041      	str	r1, [r0, #4]
 800a08c:	f880 3274 	strb.w	r3, [r0, #628]	; 0x274
 800a090:	f7ff fd66 	bl	8009b60 <USBD_ClrClassConfig>
 800a094:	e761      	b.n	8009f5a <USBD_StdDevReq+0x1aa>
 800a096:	2301      	movs	r3, #1
 800a098:	f884 3274 	strb.w	r3, [r4, #628]	; 0x274
 800a09c:	e69c      	b.n	8009dd8 <USBD_StdDevReq+0x28>
 800a09e:	bf00      	nop
 800a0a0:	20000924 	.word	0x20000924

0800a0a4 <USBD_StdItfReq>:
 800a0a4:	b538      	push	{r3, r4, r5, lr}
 800a0a6:	780b      	ldrb	r3, [r1, #0]
 800a0a8:	460d      	mov	r5, r1
 800a0aa:	f003 0260 	and.w	r2, r3, #96	; 0x60
 800a0ae:	2a40      	cmp	r2, #64	; 0x40
 800a0b0:	4604      	mov	r4, r0
 800a0b2:	d00a      	beq.n	800a0ca <USBD_StdItfReq+0x26>
 800a0b4:	065b      	lsls	r3, r3, #25
 800a0b6:	d508      	bpl.n	800a0ca <USBD_StdItfReq+0x26>
 800a0b8:	2180      	movs	r1, #128	; 0x80
 800a0ba:	f000 fbb7 	bl	800a82c <USBD_LL_StallEP>
 800a0be:	2100      	movs	r1, #0
 800a0c0:	4620      	mov	r0, r4
 800a0c2:	f000 fbb3 	bl	800a82c <USBD_LL_StallEP>
 800a0c6:	2000      	movs	r0, #0
 800a0c8:	bd38      	pop	{r3, r4, r5, pc}
 800a0ca:	f894 3274 	ldrb.w	r3, [r4, #628]	; 0x274
 800a0ce:	3b01      	subs	r3, #1
 800a0d0:	2b02      	cmp	r3, #2
 800a0d2:	d811      	bhi.n	800a0f8 <USBD_StdItfReq+0x54>
 800a0d4:	792b      	ldrb	r3, [r5, #4]
 800a0d6:	2b01      	cmp	r3, #1
 800a0d8:	d80e      	bhi.n	800a0f8 <USBD_StdItfReq+0x54>
 800a0da:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a0de:	4629      	mov	r1, r5
 800a0e0:	689b      	ldr	r3, [r3, #8]
 800a0e2:	4620      	mov	r0, r4
 800a0e4:	4798      	blx	r3
 800a0e6:	88eb      	ldrh	r3, [r5, #6]
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d1ec      	bne.n	800a0c6 <USBD_StdItfReq+0x22>
 800a0ec:	2800      	cmp	r0, #0
 800a0ee:	d1ea      	bne.n	800a0c6 <USBD_StdItfReq+0x22>
 800a0f0:	4620      	mov	r0, r4
 800a0f2:	f000 f921 	bl	800a338 <USBD_CtlSendStatus>
 800a0f6:	e7e6      	b.n	800a0c6 <USBD_StdItfReq+0x22>
 800a0f8:	2180      	movs	r1, #128	; 0x80
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f000 fb96 	bl	800a82c <USBD_LL_StallEP>
 800a100:	2100      	movs	r1, #0
 800a102:	4620      	mov	r0, r4
 800a104:	f000 fb92 	bl	800a82c <USBD_LL_StallEP>
 800a108:	2000      	movs	r0, #0
 800a10a:	bd38      	pop	{r3, r4, r5, pc}

0800a10c <USBD_StdEPReq>:
 800a10c:	b538      	push	{r3, r4, r5, lr}
 800a10e:	780b      	ldrb	r3, [r1, #0]
 800a110:	4604      	mov	r4, r0
 800a112:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800a116:	2b20      	cmp	r3, #32
 800a118:	d00c      	beq.n	800a134 <USBD_StdEPReq+0x28>
 800a11a:	2b40      	cmp	r3, #64	; 0x40
 800a11c:	d00a      	beq.n	800a134 <USBD_StdEPReq+0x28>
 800a11e:	b183      	cbz	r3, 800a142 <USBD_StdEPReq+0x36>
 800a120:	2180      	movs	r1, #128	; 0x80
 800a122:	4620      	mov	r0, r4
 800a124:	f000 fb82 	bl	800a82c <USBD_LL_StallEP>
 800a128:	2100      	movs	r1, #0
 800a12a:	4620      	mov	r0, r4
 800a12c:	f000 fb7e 	bl	800a82c <USBD_LL_StallEP>
 800a130:	2000      	movs	r0, #0
 800a132:	bd38      	pop	{r3, r4, r5, pc}
 800a134:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
 800a138:	4620      	mov	r0, r4
 800a13a:	689b      	ldr	r3, [r3, #8]
 800a13c:	4798      	blx	r3
 800a13e:	2000      	movs	r0, #0
 800a140:	bd38      	pop	{r3, r4, r5, pc}
 800a142:	784b      	ldrb	r3, [r1, #1]
 800a144:	888a      	ldrh	r2, [r1, #4]
 800a146:	2b01      	cmp	r3, #1
 800a148:	fa5f fc82 	uxtb.w	ip, r2
 800a14c:	d03e      	beq.n	800a1cc <USBD_StdEPReq+0xc0>
 800a14e:	2b03      	cmp	r3, #3
 800a150:	d02a      	beq.n	800a1a8 <USBD_StdEPReq+0x9c>
 800a152:	2b00      	cmp	r3, #0
 800a154:	d1e4      	bne.n	800a120 <USBD_StdEPReq+0x14>
 800a156:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a15a:	2b02      	cmp	r3, #2
 800a15c:	d051      	beq.n	800a202 <USBD_StdEPReq+0xf6>
 800a15e:	2b03      	cmp	r3, #3
 800a160:	d1de      	bne.n	800a120 <USBD_StdEPReq+0x14>
 800a162:	f00c 030f 	and.w	r3, ip, #15
 800a166:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a16a:	0612      	lsls	r2, r2, #24
 800a16c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800a170:	d456      	bmi.n	800a220 <USBD_StdEPReq+0x114>
 800a172:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 800a176:	2b00      	cmp	r3, #0
 800a178:	d0d2      	beq.n	800a120 <USBD_StdEPReq+0x14>
 800a17a:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a17e:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 800a182:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a186:	f505 75a0 	add.w	r5, r5, #320	; 0x140
 800a18a:	b133      	cbz	r3, 800a19a <USBD_StdEPReq+0x8e>
 800a18c:	4661      	mov	r1, ip
 800a18e:	4620      	mov	r0, r4
 800a190:	f000 fb68 	bl	800a864 <USBD_LL_IsStallEP>
 800a194:	2800      	cmp	r0, #0
 800a196:	d04f      	beq.n	800a238 <USBD_StdEPReq+0x12c>
 800a198:	2301      	movs	r3, #1
 800a19a:	602b      	str	r3, [r5, #0]
 800a19c:	2202      	movs	r2, #2
 800a19e:	4629      	mov	r1, r5
 800a1a0:	4620      	mov	r0, r4
 800a1a2:	f000 f899 	bl	800a2d8 <USBD_CtlSendData>
 800a1a6:	e7c3      	b.n	800a130 <USBD_StdEPReq+0x24>
 800a1a8:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a1ac:	2b02      	cmp	r3, #2
 800a1ae:	d01d      	beq.n	800a1ec <USBD_StdEPReq+0xe0>
 800a1b0:	2b03      	cmp	r3, #3
 800a1b2:	d1b5      	bne.n	800a120 <USBD_StdEPReq+0x14>
 800a1b4:	884b      	ldrh	r3, [r1, #2]
 800a1b6:	b92b      	cbnz	r3, 800a1c4 <USBD_StdEPReq+0xb8>
 800a1b8:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a1bc:	d002      	beq.n	800a1c4 <USBD_StdEPReq+0xb8>
 800a1be:	88cb      	ldrh	r3, [r1, #6]
 800a1c0:	2b00      	cmp	r3, #0
 800a1c2:	d03b      	beq.n	800a23c <USBD_StdEPReq+0x130>
 800a1c4:	4620      	mov	r0, r4
 800a1c6:	f000 f8b7 	bl	800a338 <USBD_CtlSendStatus>
 800a1ca:	e7b1      	b.n	800a130 <USBD_StdEPReq+0x24>
 800a1cc:	f890 3274 	ldrb.w	r3, [r0, #628]	; 0x274
 800a1d0:	2b02      	cmp	r3, #2
 800a1d2:	d00b      	beq.n	800a1ec <USBD_StdEPReq+0xe0>
 800a1d4:	2b03      	cmp	r3, #3
 800a1d6:	d1a3      	bne.n	800a120 <USBD_StdEPReq+0x14>
 800a1d8:	884b      	ldrh	r3, [r1, #2]
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d1a8      	bne.n	800a130 <USBD_StdEPReq+0x24>
 800a1de:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a1e2:	d0ef      	beq.n	800a1c4 <USBD_StdEPReq+0xb8>
 800a1e4:	4661      	mov	r1, ip
 800a1e6:	f000 fb2f 	bl	800a848 <USBD_LL_ClearStallEP>
 800a1ea:	e7eb      	b.n	800a1c4 <USBD_StdEPReq+0xb8>
 800a1ec:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a1f0:	d096      	beq.n	800a120 <USBD_StdEPReq+0x14>
 800a1f2:	4661      	mov	r1, ip
 800a1f4:	f000 fb1a 	bl	800a82c <USBD_LL_StallEP>
 800a1f8:	2180      	movs	r1, #128	; 0x80
 800a1fa:	4620      	mov	r0, r4
 800a1fc:	f000 fb16 	bl	800a82c <USBD_LL_StallEP>
 800a200:	e796      	b.n	800a130 <USBD_StdEPReq+0x24>
 800a202:	f01c 0f7f 	tst.w	ip, #127	; 0x7f
 800a206:	d18b      	bne.n	800a120 <USBD_StdEPReq+0x14>
 800a208:	2300      	movs	r3, #0
 800a20a:	0611      	lsls	r1, r2, #24
 800a20c:	bf4c      	ite	mi
 800a20e:	f100 0114 	addmi.w	r1, r0, #20
 800a212:	f500 71a0 	addpl.w	r1, r0, #320	; 0x140
 800a216:	2202      	movs	r2, #2
 800a218:	600b      	str	r3, [r1, #0]
 800a21a:	f000 f85d 	bl	800a2d8 <USBD_CtlSendData>
 800a21e:	e787      	b.n	800a130 <USBD_StdEPReq+0x24>
 800a220:	699b      	ldr	r3, [r3, #24]
 800a222:	2b00      	cmp	r3, #0
 800a224:	f43f af7c 	beq.w	800a120 <USBD_StdEPReq+0x14>
 800a228:	f00c 037f 	and.w	r3, ip, #127	; 0x7f
 800a22c:	1c5d      	adds	r5, r3, #1
 800a22e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a232:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800a236:	e7a8      	b.n	800a18a <USBD_StdEPReq+0x7e>
 800a238:	6028      	str	r0, [r5, #0]
 800a23a:	e7af      	b.n	800a19c <USBD_StdEPReq+0x90>
 800a23c:	4661      	mov	r1, ip
 800a23e:	f000 faf5 	bl	800a82c <USBD_LL_StallEP>
 800a242:	e7bf      	b.n	800a1c4 <USBD_StdEPReq+0xb8>

0800a244 <USBD_ParseSetupRequest>:
 800a244:	780b      	ldrb	r3, [r1, #0]
 800a246:	7003      	strb	r3, [r0, #0]
 800a248:	784b      	ldrb	r3, [r1, #1]
 800a24a:	7043      	strb	r3, [r0, #1]
 800a24c:	78ca      	ldrb	r2, [r1, #3]
 800a24e:	788b      	ldrb	r3, [r1, #2]
 800a250:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a254:	8043      	strh	r3, [r0, #2]
 800a256:	794a      	ldrb	r2, [r1, #5]
 800a258:	790b      	ldrb	r3, [r1, #4]
 800a25a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a25e:	8083      	strh	r3, [r0, #4]
 800a260:	79ca      	ldrb	r2, [r1, #7]
 800a262:	798b      	ldrb	r3, [r1, #6]
 800a264:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a268:	80c3      	strh	r3, [r0, #6]
 800a26a:	4770      	bx	lr

0800a26c <USBD_CtlError>:
 800a26c:	b510      	push	{r4, lr}
 800a26e:	4604      	mov	r4, r0
 800a270:	2180      	movs	r1, #128	; 0x80
 800a272:	f000 fadb 	bl	800a82c <USBD_LL_StallEP>
 800a276:	4620      	mov	r0, r4
 800a278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a27c:	2100      	movs	r1, #0
 800a27e:	f000 bad5 	b.w	800a82c <USBD_LL_StallEP>
 800a282:	bf00      	nop

0800a284 <USBD_GetString>:
 800a284:	b318      	cbz	r0, 800a2ce <USBD_GetString+0x4a>
 800a286:	7803      	ldrb	r3, [r0, #0]
 800a288:	b430      	push	{r4, r5}
 800a28a:	b30b      	cbz	r3, 800a2d0 <USBD_GetString+0x4c>
 800a28c:	4604      	mov	r4, r0
 800a28e:	f1c0 0c01 	rsb	ip, r0, #1
 800a292:	eb04 030c 	add.w	r3, r4, ip
 800a296:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a29a:	b2db      	uxtb	r3, r3
 800a29c:	2d00      	cmp	r5, #0
 800a29e:	d1f8      	bne.n	800a292 <USBD_GetString+0xe>
 800a2a0:	3301      	adds	r3, #1
 800a2a2:	005b      	lsls	r3, r3, #1
 800a2a4:	b2dc      	uxtb	r4, r3
 800a2a6:	8013      	strh	r3, [r2, #0]
 800a2a8:	2303      	movs	r3, #3
 800a2aa:	700c      	strb	r4, [r1, #0]
 800a2ac:	704b      	strb	r3, [r1, #1]
 800a2ae:	7804      	ldrb	r4, [r0, #0]
 800a2b0:	b15c      	cbz	r4, 800a2ca <USBD_GetString+0x46>
 800a2b2:	2302      	movs	r3, #2
 800a2b4:	2500      	movs	r5, #0
 800a2b6:	1c5a      	adds	r2, r3, #1
 800a2b8:	b2d2      	uxtb	r2, r2
 800a2ba:	54cc      	strb	r4, [r1, r3]
 800a2bc:	548d      	strb	r5, [r1, r2]
 800a2be:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800a2c2:	3302      	adds	r3, #2
 800a2c4:	b2db      	uxtb	r3, r3
 800a2c6:	2c00      	cmp	r4, #0
 800a2c8:	d1f5      	bne.n	800a2b6 <USBD_GetString+0x32>
 800a2ca:	bc30      	pop	{r4, r5}
 800a2cc:	4770      	bx	lr
 800a2ce:	4770      	bx	lr
 800a2d0:	2402      	movs	r4, #2
 800a2d2:	4623      	mov	r3, r4
 800a2d4:	e7e7      	b.n	800a2a6 <USBD_GetString+0x22>
 800a2d6:	bf00      	nop

0800a2d8 <USBD_CtlSendData>:
 800a2d8:	b510      	push	{r4, lr}
 800a2da:	4613      	mov	r3, r2
 800a2dc:	2402      	movs	r4, #2
 800a2de:	460a      	mov	r2, r1
 800a2e0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a2e4:	2100      	movs	r1, #0
 800a2e6:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a2ea:	f000 fadd 	bl	800a8a8 <USBD_LL_Transmit>
 800a2ee:	2000      	movs	r0, #0
 800a2f0:	bd10      	pop	{r4, pc}
 800a2f2:	bf00      	nop

0800a2f4 <USBD_CtlContinueSendData>:
 800a2f4:	468c      	mov	ip, r1
 800a2f6:	b508      	push	{r3, lr}
 800a2f8:	2100      	movs	r1, #0
 800a2fa:	4613      	mov	r3, r2
 800a2fc:	4662      	mov	r2, ip
 800a2fe:	f000 fad3 	bl	800a8a8 <USBD_LL_Transmit>
 800a302:	2000      	movs	r0, #0
 800a304:	bd08      	pop	{r3, pc}
 800a306:	bf00      	nop

0800a308 <USBD_CtlPrepareRx>:
 800a308:	b510      	push	{r4, lr}
 800a30a:	4613      	mov	r3, r2
 800a30c:	2403      	movs	r4, #3
 800a30e:	460a      	mov	r2, r1
 800a310:	e9c0 3352 	strd	r3, r3, [r0, #328]	; 0x148
 800a314:	2100      	movs	r1, #0
 800a316:	f8c0 426c 	str.w	r4, [r0, #620]	; 0x26c
 800a31a:	f000 fad3 	bl	800a8c4 <USBD_LL_PrepareReceive>
 800a31e:	2000      	movs	r0, #0
 800a320:	bd10      	pop	{r4, pc}
 800a322:	bf00      	nop

0800a324 <USBD_CtlContinueRx>:
 800a324:	468c      	mov	ip, r1
 800a326:	b508      	push	{r3, lr}
 800a328:	2100      	movs	r1, #0
 800a32a:	4613      	mov	r3, r2
 800a32c:	4662      	mov	r2, ip
 800a32e:	f000 fac9 	bl	800a8c4 <USBD_LL_PrepareReceive>
 800a332:	2000      	movs	r0, #0
 800a334:	bd08      	pop	{r3, pc}
 800a336:	bf00      	nop

0800a338 <USBD_CtlSendStatus>:
 800a338:	b508      	push	{r3, lr}
 800a33a:	2104      	movs	r1, #4
 800a33c:	2300      	movs	r3, #0
 800a33e:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a342:	461a      	mov	r2, r3
 800a344:	4619      	mov	r1, r3
 800a346:	f000 faaf 	bl	800a8a8 <USBD_LL_Transmit>
 800a34a:	2000      	movs	r0, #0
 800a34c:	bd08      	pop	{r3, pc}
 800a34e:	bf00      	nop

0800a350 <USBD_CtlReceiveStatus>:
 800a350:	b508      	push	{r3, lr}
 800a352:	2105      	movs	r1, #5
 800a354:	2300      	movs	r3, #0
 800a356:	f8c0 126c 	str.w	r1, [r0, #620]	; 0x26c
 800a35a:	461a      	mov	r2, r3
 800a35c:	4619      	mov	r1, r3
 800a35e:	f000 fab1 	bl	800a8c4 <USBD_LL_PrepareReceive>
 800a362:	2000      	movs	r0, #0
 800a364:	bd08      	pop	{r3, pc}
 800a366:	bf00      	nop

0800a368 <MX_USB_DEVICE_Init>:
 800a368:	b508      	push	{r3, lr}
 800a36a:	2200      	movs	r2, #0
 800a36c:	4917      	ldr	r1, [pc, #92]	; (800a3cc <MX_USB_DEVICE_Init+0x64>)
 800a36e:	4818      	ldr	r0, [pc, #96]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a370:	f7ff fbc8 	bl	8009b04 <USBD_Init>
 800a374:	b970      	cbnz	r0, 800a394 <MX_USB_DEVICE_Init+0x2c>
 800a376:	4917      	ldr	r1, [pc, #92]	; (800a3d4 <MX_USB_DEVICE_Init+0x6c>)
 800a378:	4815      	ldr	r0, [pc, #84]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a37a:	f7ff fbd9 	bl	8009b30 <USBD_RegisterClass>
 800a37e:	b988      	cbnz	r0, 800a3a4 <MX_USB_DEVICE_Init+0x3c>
 800a380:	4915      	ldr	r1, [pc, #84]	; (800a3d8 <MX_USB_DEVICE_Init+0x70>)
 800a382:	4813      	ldr	r0, [pc, #76]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a384:	f7ff fb6e 	bl	8009a64 <USBD_CDC_RegisterInterface>
 800a388:	b9a0      	cbnz	r0, 800a3b4 <MX_USB_DEVICE_Init+0x4c>
 800a38a:	4811      	ldr	r0, [pc, #68]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a38c:	f7ff fbd8 	bl	8009b40 <USBD_Start>
 800a390:	b9b8      	cbnz	r0, 800a3c2 <MX_USB_DEVICE_Init+0x5a>
 800a392:	bd08      	pop	{r3, pc}
 800a394:	f7fa fc0c 	bl	8004bb0 <Error_Handler>
 800a398:	490e      	ldr	r1, [pc, #56]	; (800a3d4 <MX_USB_DEVICE_Init+0x6c>)
 800a39a:	480d      	ldr	r0, [pc, #52]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a39c:	f7ff fbc8 	bl	8009b30 <USBD_RegisterClass>
 800a3a0:	2800      	cmp	r0, #0
 800a3a2:	d0ed      	beq.n	800a380 <MX_USB_DEVICE_Init+0x18>
 800a3a4:	f7fa fc04 	bl	8004bb0 <Error_Handler>
 800a3a8:	490b      	ldr	r1, [pc, #44]	; (800a3d8 <MX_USB_DEVICE_Init+0x70>)
 800a3aa:	4809      	ldr	r0, [pc, #36]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a3ac:	f7ff fb5a 	bl	8009a64 <USBD_CDC_RegisterInterface>
 800a3b0:	2800      	cmp	r0, #0
 800a3b2:	d0ea      	beq.n	800a38a <MX_USB_DEVICE_Init+0x22>
 800a3b4:	f7fa fbfc 	bl	8004bb0 <Error_Handler>
 800a3b8:	4805      	ldr	r0, [pc, #20]	; (800a3d0 <MX_USB_DEVICE_Init+0x68>)
 800a3ba:	f7ff fbc1 	bl	8009b40 <USBD_Start>
 800a3be:	2800      	cmp	r0, #0
 800a3c0:	d0e7      	beq.n	800a392 <MX_USB_DEVICE_Init+0x2a>
 800a3c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a3c6:	f7fa bbf3 	b.w	8004bb0 <Error_Handler>
 800a3ca:	bf00      	nop
 800a3cc:	20000150 	.word	0x20000150
 800a3d0:	20000928 	.word	0x20000928
 800a3d4:	20000030 	.word	0x20000030
 800a3d8:	20000140 	.word	0x20000140

0800a3dc <CDC_DeInit_FS>:
 800a3dc:	2000      	movs	r0, #0
 800a3de:	4770      	bx	lr

0800a3e0 <CDC_Init_FS>:
 800a3e0:	b510      	push	{r4, lr}
 800a3e2:	4c06      	ldr	r4, [pc, #24]	; (800a3fc <CDC_Init_FS+0x1c>)
 800a3e4:	2200      	movs	r2, #0
 800a3e6:	4620      	mov	r0, r4
 800a3e8:	4905      	ldr	r1, [pc, #20]	; (800a400 <CDC_Init_FS+0x20>)
 800a3ea:	f7ff fb43 	bl	8009a74 <USBD_CDC_SetTxBuffer>
 800a3ee:	4620      	mov	r0, r4
 800a3f0:	4904      	ldr	r1, [pc, #16]	; (800a404 <CDC_Init_FS+0x24>)
 800a3f2:	f7ff fb49 	bl	8009a88 <USBD_CDC_SetRxBuffer>
 800a3f6:	2000      	movs	r0, #0
 800a3f8:	bd10      	pop	{r4, pc}
 800a3fa:	bf00      	nop
 800a3fc:	20000928 	.word	0x20000928
 800a400:	20000c44 	.word	0x20000c44
 800a404:	20000bc4 	.word	0x20000bc4

0800a408 <CDC_Control_FS>:
 800a408:	2821      	cmp	r0, #33	; 0x21
 800a40a:	d106      	bne.n	800a41a <CDC_Control_FS+0x12>
 800a40c:	2300      	movs	r3, #0
 800a40e:	2208      	movs	r2, #8
 800a410:	4803      	ldr	r0, [pc, #12]	; (800a420 <CDC_Control_FS+0x18>)
 800a412:	710b      	strb	r3, [r1, #4]
 800a414:	6008      	str	r0, [r1, #0]
 800a416:	714b      	strb	r3, [r1, #5]
 800a418:	718a      	strb	r2, [r1, #6]
 800a41a:	2000      	movs	r0, #0
 800a41c:	4770      	bx	lr
 800a41e:	bf00      	nop
 800a420:	0001c220 	.word	0x0001c220

0800a424 <CDC_Receive_FS>:
 800a424:	680a      	ldr	r2, [r1, #0]
 800a426:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a42a:	4605      	mov	r5, r0
 800a42c:	b1d2      	cbz	r2, 800a464 <CDC_Receive_FS+0x40>
 800a42e:	460e      	mov	r6, r1
 800a430:	f04f 0801 	mov.w	r8, #1
 800a434:	4f17      	ldr	r7, [pc, #92]	; (800a494 <CDC_Receive_FS+0x70>)
 800a436:	f100 39ff 	add.w	r9, r0, #4294967295
 800a43a:	e008      	b.n	800a44e <CDC_Receive_FS+0x2a>
 800a43c:	280d      	cmp	r0, #13
 800a43e:	d00b      	beq.n	800a458 <CDC_Receive_FS+0x34>
 800a440:	f7fa fb9e 	bl	8004b80 <Write_to_circ_buffer>
 800a444:	3402      	adds	r4, #2
 800a446:	6832      	ldr	r2, [r6, #0]
 800a448:	1b64      	subs	r4, r4, r5
 800a44a:	42a2      	cmp	r2, r4
 800a44c:	d909      	bls.n	800a462 <CDC_Receive_FS+0x3e>
 800a44e:	464c      	mov	r4, r9
 800a450:	f819 0f01 	ldrb.w	r0, [r9, #1]!
 800a454:	280a      	cmp	r0, #10
 800a456:	d1f1      	bne.n	800a43c <CDC_Receive_FS+0x18>
 800a458:	f887 8000 	strb.w	r8, [r7]
 800a45c:	f899 0000 	ldrb.w	r0, [r9]
 800a460:	e7ee      	b.n	800a440 <CDC_Receive_FS+0x1c>
 800a462:	b292      	uxth	r2, r2
 800a464:	4c0c      	ldr	r4, [pc, #48]	; (800a498 <CDC_Receive_FS+0x74>)
 800a466:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a46a:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a46e:	b933      	cbnz	r3, 800a47e <CDC_Receive_FS+0x5a>
 800a470:	4629      	mov	r1, r5
 800a472:	4620      	mov	r0, r4
 800a474:	f7ff fafe 	bl	8009a74 <USBD_CDC_SetTxBuffer>
 800a478:	4620      	mov	r0, r4
 800a47a:	f7ff fb0d 	bl	8009a98 <USBD_CDC_TransmitPacket>
 800a47e:	4629      	mov	r1, r5
 800a480:	4805      	ldr	r0, [pc, #20]	; (800a498 <CDC_Receive_FS+0x74>)
 800a482:	f7ff fb01 	bl	8009a88 <USBD_CDC_SetRxBuffer>
 800a486:	4804      	ldr	r0, [pc, #16]	; (800a498 <CDC_Receive_FS+0x74>)
 800a488:	f7ff fb20 	bl	8009acc <USBD_CDC_ReceivePacket>
 800a48c:	2000      	movs	r0, #0
 800a48e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a492:	bf00      	nop
 800a494:	2000064c 	.word	0x2000064c
 800a498:	20000928 	.word	0x20000928

0800a49c <CDC_Transmit_FS>:
 800a49c:	b510      	push	{r4, lr}
 800a49e:	4c09      	ldr	r4, [pc, #36]	; (800a4c4 <CDC_Transmit_FS+0x28>)
 800a4a0:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
 800a4a4:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a4a8:	b10b      	cbz	r3, 800a4ae <CDC_Transmit_FS+0x12>
 800a4aa:	2001      	movs	r0, #1
 800a4ac:	bd10      	pop	{r4, pc}
 800a4ae:	460a      	mov	r2, r1
 800a4b0:	4601      	mov	r1, r0
 800a4b2:	4620      	mov	r0, r4
 800a4b4:	f7ff fade 	bl	8009a74 <USBD_CDC_SetTxBuffer>
 800a4b8:	4620      	mov	r0, r4
 800a4ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4be:	f7ff baeb 	b.w	8009a98 <USBD_CDC_TransmitPacket>
 800a4c2:	bf00      	nop
 800a4c4:	20000928 	.word	0x20000928

0800a4c8 <USBD_FS_DeviceDescriptor>:
 800a4c8:	2312      	movs	r3, #18
 800a4ca:	4801      	ldr	r0, [pc, #4]	; (800a4d0 <USBD_FS_DeviceDescriptor+0x8>)
 800a4cc:	800b      	strh	r3, [r1, #0]
 800a4ce:	4770      	bx	lr
 800a4d0:	2000016c 	.word	0x2000016c

0800a4d4 <USBD_FS_LangIDStrDescriptor>:
 800a4d4:	2304      	movs	r3, #4
 800a4d6:	4801      	ldr	r0, [pc, #4]	; (800a4dc <USBD_FS_LangIDStrDescriptor+0x8>)
 800a4d8:	800b      	strh	r3, [r1, #0]
 800a4da:	4770      	bx	lr
 800a4dc:	20000180 	.word	0x20000180

0800a4e0 <USBD_FS_ManufacturerStrDescriptor>:
 800a4e0:	b510      	push	{r4, lr}
 800a4e2:	4c04      	ldr	r4, [pc, #16]	; (800a4f4 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 800a4e4:	460a      	mov	r2, r1
 800a4e6:	4804      	ldr	r0, [pc, #16]	; (800a4f8 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 800a4e8:	4621      	mov	r1, r4
 800a4ea:	f7ff fecb 	bl	800a284 <USBD_GetString>
 800a4ee:	4620      	mov	r0, r4
 800a4f0:	bd10      	pop	{r4, pc}
 800a4f2:	bf00      	nop
 800a4f4:	20000d44 	.word	0x20000d44
 800a4f8:	0801083c 	.word	0x0801083c

0800a4fc <USBD_FS_ProductStrDescriptor>:
 800a4fc:	b510      	push	{r4, lr}
 800a4fe:	4c04      	ldr	r4, [pc, #16]	; (800a510 <USBD_FS_ProductStrDescriptor+0x14>)
 800a500:	460a      	mov	r2, r1
 800a502:	4804      	ldr	r0, [pc, #16]	; (800a514 <USBD_FS_ProductStrDescriptor+0x18>)
 800a504:	4621      	mov	r1, r4
 800a506:	f7ff febd 	bl	800a284 <USBD_GetString>
 800a50a:	4620      	mov	r0, r4
 800a50c:	bd10      	pop	{r4, pc}
 800a50e:	bf00      	nop
 800a510:	20000d44 	.word	0x20000d44
 800a514:	0801084c 	.word	0x0801084c

0800a518 <USBD_FS_ConfigStrDescriptor>:
 800a518:	b510      	push	{r4, lr}
 800a51a:	4c04      	ldr	r4, [pc, #16]	; (800a52c <USBD_FS_ConfigStrDescriptor+0x14>)
 800a51c:	460a      	mov	r2, r1
 800a51e:	4804      	ldr	r0, [pc, #16]	; (800a530 <USBD_FS_ConfigStrDescriptor+0x18>)
 800a520:	4621      	mov	r1, r4
 800a522:	f7ff feaf 	bl	800a284 <USBD_GetString>
 800a526:	4620      	mov	r0, r4
 800a528:	bd10      	pop	{r4, pc}
 800a52a:	bf00      	nop
 800a52c:	20000d44 	.word	0x20000d44
 800a530:	08010858 	.word	0x08010858

0800a534 <USBD_FS_InterfaceStrDescriptor>:
 800a534:	b510      	push	{r4, lr}
 800a536:	4c04      	ldr	r4, [pc, #16]	; (800a548 <USBD_FS_InterfaceStrDescriptor+0x14>)
 800a538:	460a      	mov	r2, r1
 800a53a:	4804      	ldr	r0, [pc, #16]	; (800a54c <USBD_FS_InterfaceStrDescriptor+0x18>)
 800a53c:	4621      	mov	r1, r4
 800a53e:	f7ff fea1 	bl	800a284 <USBD_GetString>
 800a542:	4620      	mov	r0, r4
 800a544:	bd10      	pop	{r4, pc}
 800a546:	bf00      	nop
 800a548:	20000d44 	.word	0x20000d44
 800a54c:	08010864 	.word	0x08010864

0800a550 <USBD_FS_SerialStrDescriptor>:
 800a550:	f04f 0c1a 	mov.w	ip, #26
 800a554:	4a42      	ldr	r2, [pc, #264]	; (800a660 <USBD_FS_SerialStrDescriptor+0x110>)
 800a556:	6d10      	ldr	r0, [r2, #80]	; 0x50
 800a558:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800a55a:	f8a1 c000 	strh.w	ip, [r1]
 800a55e:	18c3      	adds	r3, r0, r3
 800a560:	d101      	bne.n	800a566 <USBD_FS_SerialStrDescriptor+0x16>
 800a562:	4840      	ldr	r0, [pc, #256]	; (800a664 <USBD_FS_SerialStrDescriptor+0x114>)
 800a564:	4770      	bx	lr
 800a566:	f04f 0c00 	mov.w	ip, #0
 800a56a:	6d51      	ldr	r1, [r2, #84]	; 0x54
 800a56c:	0f18      	lsrs	r0, r3, #28
 800a56e:	4a3d      	ldr	r2, [pc, #244]	; (800a664 <USBD_FS_SerialStrDescriptor+0x114>)
 800a570:	f1b3 4f20 	cmp.w	r3, #2684354560	; 0xa0000000
 800a574:	bf2c      	ite	cs
 800a576:	3037      	addcs	r0, #55	; 0x37
 800a578:	3030      	addcc	r0, #48	; 0x30
 800a57a:	7090      	strb	r0, [r2, #2]
 800a57c:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800a580:	2809      	cmp	r0, #9
 800a582:	bf8c      	ite	hi
 800a584:	3037      	addhi	r0, #55	; 0x37
 800a586:	3030      	addls	r0, #48	; 0x30
 800a588:	7110      	strb	r0, [r2, #4]
 800a58a:	f3c3 5003 	ubfx	r0, r3, #20, #4
 800a58e:	2809      	cmp	r0, #9
 800a590:	bf8c      	ite	hi
 800a592:	3037      	addhi	r0, #55	; 0x37
 800a594:	3030      	addls	r0, #48	; 0x30
 800a596:	7190      	strb	r0, [r2, #6]
 800a598:	f3c3 4003 	ubfx	r0, r3, #16, #4
 800a59c:	2809      	cmp	r0, #9
 800a59e:	bf8c      	ite	hi
 800a5a0:	3037      	addhi	r0, #55	; 0x37
 800a5a2:	3030      	addls	r0, #48	; 0x30
 800a5a4:	7210      	strb	r0, [r2, #8]
 800a5a6:	f3c3 3003 	ubfx	r0, r3, #12, #4
 800a5aa:	2809      	cmp	r0, #9
 800a5ac:	bf8c      	ite	hi
 800a5ae:	3037      	addhi	r0, #55	; 0x37
 800a5b0:	3030      	addls	r0, #48	; 0x30
 800a5b2:	7290      	strb	r0, [r2, #10]
 800a5b4:	f3c3 2003 	ubfx	r0, r3, #8, #4
 800a5b8:	2809      	cmp	r0, #9
 800a5ba:	bf8c      	ite	hi
 800a5bc:	3037      	addhi	r0, #55	; 0x37
 800a5be:	3030      	addls	r0, #48	; 0x30
 800a5c0:	7310      	strb	r0, [r2, #12]
 800a5c2:	f3c3 1003 	ubfx	r0, r3, #4, #4
 800a5c6:	2809      	cmp	r0, #9
 800a5c8:	bf8c      	ite	hi
 800a5ca:	3037      	addhi	r0, #55	; 0x37
 800a5cc:	3030      	addls	r0, #48	; 0x30
 800a5ce:	f882 c003 	strb.w	ip, [r2, #3]
 800a5d2:	7390      	strb	r0, [r2, #14]
 800a5d4:	f04f 0c00 	mov.w	ip, #0
 800a5d8:	2000      	movs	r0, #0
 800a5da:	f882 c005 	strb.w	ip, [r2, #5]
 800a5de:	73d0      	strb	r0, [r2, #15]
 800a5e0:	f04f 0c00 	mov.w	ip, #0
 800a5e4:	2000      	movs	r0, #0
 800a5e6:	f882 c007 	strb.w	ip, [r2, #7]
 800a5ea:	7450      	strb	r0, [r2, #17]
 800a5ec:	f04f 0c00 	mov.w	ip, #0
 800a5f0:	2000      	movs	r0, #0
 800a5f2:	f882 c009 	strb.w	ip, [r2, #9]
 800a5f6:	74d0      	strb	r0, [r2, #19]
 800a5f8:	f04f 0c00 	mov.w	ip, #0
 800a5fc:	2000      	movs	r0, #0
 800a5fe:	f003 030f 	and.w	r3, r3, #15
 800a602:	2b09      	cmp	r3, #9
 800a604:	bf94      	ite	ls
 800a606:	3330      	addls	r3, #48	; 0x30
 800a608:	3337      	addhi	r3, #55	; 0x37
 800a60a:	7413      	strb	r3, [r2, #16]
 800a60c:	f1b1 4f20 	cmp.w	r1, #2684354560	; 0xa0000000
 800a610:	ea4f 7311 	mov.w	r3, r1, lsr #28
 800a614:	bf2c      	ite	cs
 800a616:	3337      	addcs	r3, #55	; 0x37
 800a618:	3330      	addcc	r3, #48	; 0x30
 800a61a:	7493      	strb	r3, [r2, #18]
 800a61c:	f3c1 6303 	ubfx	r3, r1, #24, #4
 800a620:	2b09      	cmp	r3, #9
 800a622:	bf8c      	ite	hi
 800a624:	3337      	addhi	r3, #55	; 0x37
 800a626:	3330      	addls	r3, #48	; 0x30
 800a628:	7513      	strb	r3, [r2, #20]
 800a62a:	f3c1 5303 	ubfx	r3, r1, #20, #4
 800a62e:	2b09      	cmp	r3, #9
 800a630:	bf8c      	ite	hi
 800a632:	3337      	addhi	r3, #55	; 0x37
 800a634:	3330      	addls	r3, #48	; 0x30
 800a636:	7593      	strb	r3, [r2, #22]
 800a638:	f3c1 4303 	ubfx	r3, r1, #16, #4
 800a63c:	2b09      	cmp	r3, #9
 800a63e:	bf94      	ite	ls
 800a640:	3330      	addls	r3, #48	; 0x30
 800a642:	3337      	addhi	r3, #55	; 0x37
 800a644:	f882 c00b 	strb.w	ip, [r2, #11]
 800a648:	7550      	strb	r0, [r2, #21]
 800a64a:	f04f 0c00 	mov.w	ip, #0
 800a64e:	2000      	movs	r0, #0
 800a650:	7613      	strb	r3, [r2, #24]
 800a652:	2300      	movs	r3, #0
 800a654:	75d0      	strb	r0, [r2, #23]
 800a656:	f882 c00d 	strb.w	ip, [r2, #13]
 800a65a:	4802      	ldr	r0, [pc, #8]	; (800a664 <USBD_FS_SerialStrDescriptor+0x114>)
 800a65c:	7653      	strb	r3, [r2, #25]
 800a65e:	4770      	bx	lr
 800a660:	1ff80000 	.word	0x1ff80000
 800a664:	20000184 	.word	0x20000184

0800a668 <HAL_PCDEx_SetConnectionState>:
 800a668:	4a04      	ldr	r2, [pc, #16]	; (800a67c <HAL_PCDEx_SetConnectionState+0x14>)
 800a66a:	2901      	cmp	r1, #1
 800a66c:	6853      	ldr	r3, [r2, #4]
 800a66e:	bf0c      	ite	eq
 800a670:	f043 0301 	orreq.w	r3, r3, #1
 800a674:	f023 0301 	bicne.w	r3, r3, #1
 800a678:	6053      	str	r3, [r2, #4]
 800a67a:	4770      	bx	lr
 800a67c:	40010000 	.word	0x40010000

0800a680 <HAL_PCD_MspInit>:
 800a680:	4b0e      	ldr	r3, [pc, #56]	; (800a6bc <HAL_PCD_MspInit+0x3c>)
 800a682:	6802      	ldr	r2, [r0, #0]
 800a684:	429a      	cmp	r2, r3
 800a686:	d000      	beq.n	800a68a <HAL_PCD_MspInit+0xa>
 800a688:	4770      	bx	lr
 800a68a:	f503 33ee 	add.w	r3, r3, #121856	; 0x1dc00
 800a68e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a690:	b500      	push	{lr}
 800a692:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800a696:	6259      	str	r1, [r3, #36]	; 0x24
 800a698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a69a:	b083      	sub	sp, #12
 800a69c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a6a0:	9301      	str	r3, [sp, #4]
 800a6a2:	2014      	movs	r0, #20
 800a6a4:	2200      	movs	r2, #0
 800a6a6:	2101      	movs	r1, #1
 800a6a8:	9b01      	ldr	r3, [sp, #4]
 800a6aa:	f7fa ff8b 	bl	80055c4 <HAL_NVIC_SetPriority>
 800a6ae:	2014      	movs	r0, #20
 800a6b0:	b003      	add	sp, #12
 800a6b2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a6b6:	f7fa bfc3 	b.w	8005640 <HAL_NVIC_EnableIRQ>
 800a6ba:	bf00      	nop
 800a6bc:	40005c00 	.word	0x40005c00

0800a6c0 <HAL_PCD_SetupStageCallback>:
 800a6c0:	4601      	mov	r1, r0
 800a6c2:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a6c6:	f501 712c 	add.w	r1, r1, #688	; 0x2b0
 800a6ca:	f7ff ba51 	b.w	8009b70 <USBD_LL_SetupStage>
 800a6ce:	bf00      	nop

0800a6d0 <HAL_PCD_DataOutStageCallback>:
 800a6d0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800a6d4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800a6d8:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800a6dc:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a6e0:	f7ff ba76 	b.w	8009bd0 <USBD_LL_DataOutStage>

0800a6e4 <HAL_PCD_DataInStageCallback>:
 800a6e4:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 800a6e8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800a6ec:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a6ee:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a6f2:	f7ff baab 	b.w	8009c4c <USBD_LL_DataInStage>
 800a6f6:	bf00      	nop

0800a6f8 <HAL_PCD_SOFCallback>:
 800a6f8:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a6fc:	f7ff bb4a 	b.w	8009d94 <USBD_LL_SOF>

0800a700 <HAL_PCD_ResetCallback>:
 800a700:	6883      	ldr	r3, [r0, #8]
 800a702:	b510      	push	{r4, lr}
 800a704:	2b02      	cmp	r3, #2
 800a706:	4604      	mov	r4, r0
 800a708:	d001      	beq.n	800a70e <HAL_PCD_ResetCallback+0xe>
 800a70a:	f7fa fa51 	bl	8004bb0 <Error_Handler>
 800a70e:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a712:	2101      	movs	r1, #1
 800a714:	f7ff fb28 	bl	8009d68 <USBD_LL_SetSpeed>
 800a718:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a71c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a720:	f7ff bafa 	b.w	8009d18 <USBD_LL_Reset>

0800a724 <HAL_PCD_SuspendCallback>:
 800a724:	b510      	push	{r4, lr}
 800a726:	4604      	mov	r4, r0
 800a728:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a72c:	f7ff fb20 	bl	8009d70 <USBD_LL_Suspend>
 800a730:	69a3      	ldr	r3, [r4, #24]
 800a732:	b123      	cbz	r3, 800a73e <HAL_PCD_SuspendCallback+0x1a>
 800a734:	4a02      	ldr	r2, [pc, #8]	; (800a740 <HAL_PCD_SuspendCallback+0x1c>)
 800a736:	6913      	ldr	r3, [r2, #16]
 800a738:	f043 0306 	orr.w	r3, r3, #6
 800a73c:	6113      	str	r3, [r2, #16]
 800a73e:	bd10      	pop	{r4, pc}
 800a740:	e000ed00 	.word	0xe000ed00

0800a744 <HAL_PCD_ResumeCallback>:
 800a744:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a748:	f7ff bb1c 	b.w	8009d84 <USBD_LL_Resume>

0800a74c <USBD_LL_Init>:
 800a74c:	b510      	push	{r4, lr}
 800a74e:	2408      	movs	r4, #8
 800a750:	4b1e      	ldr	r3, [pc, #120]	; (800a7cc <USBD_LL_Init+0x80>)
 800a752:	2200      	movs	r2, #0
 800a754:	605c      	str	r4, [r3, #4]
 800a756:	4604      	mov	r4, r0
 800a758:	2102      	movs	r1, #2
 800a75a:	619a      	str	r2, [r3, #24]
 800a75c:	621a      	str	r2, [r3, #32]
 800a75e:	4a1c      	ldr	r2, [pc, #112]	; (800a7d0 <USBD_LL_Init+0x84>)
 800a760:	f8c3 42e8 	str.w	r4, [r3, #744]	; 0x2e8
 800a764:	4618      	mov	r0, r3
 800a766:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 800a76a:	6099      	str	r1, [r3, #8]
 800a76c:	6119      	str	r1, [r3, #16]
 800a76e:	601a      	str	r2, [r3, #0]
 800a770:	f7fb ff36 	bl	80065e0 <HAL_PCD_Init>
 800a774:	bb30      	cbnz	r0, 800a7c4 <USBD_LL_Init+0x78>
 800a776:	2200      	movs	r2, #0
 800a778:	2318      	movs	r3, #24
 800a77a:	4611      	mov	r1, r2
 800a77c:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a780:	f7fc fe2e 	bl	80073e0 <HAL_PCDEx_PMAConfig>
 800a784:	2358      	movs	r3, #88	; 0x58
 800a786:	2200      	movs	r2, #0
 800a788:	2180      	movs	r1, #128	; 0x80
 800a78a:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a78e:	f7fc fe27 	bl	80073e0 <HAL_PCDEx_PMAConfig>
 800a792:	23c0      	movs	r3, #192	; 0xc0
 800a794:	2200      	movs	r2, #0
 800a796:	2181      	movs	r1, #129	; 0x81
 800a798:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a79c:	f7fc fe20 	bl	80073e0 <HAL_PCDEx_PMAConfig>
 800a7a0:	f44f 7388 	mov.w	r3, #272	; 0x110
 800a7a4:	2200      	movs	r2, #0
 800a7a6:	2101      	movs	r1, #1
 800a7a8:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a7ac:	f7fc fe18 	bl	80073e0 <HAL_PCDEx_PMAConfig>
 800a7b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a7b4:	2200      	movs	r2, #0
 800a7b6:	2182      	movs	r1, #130	; 0x82
 800a7b8:	f8d4 0298 	ldr.w	r0, [r4, #664]	; 0x298
 800a7bc:	f7fc fe10 	bl	80073e0 <HAL_PCDEx_PMAConfig>
 800a7c0:	2000      	movs	r0, #0
 800a7c2:	bd10      	pop	{r4, pc}
 800a7c4:	f7fa f9f4 	bl	8004bb0 <Error_Handler>
 800a7c8:	e7d5      	b.n	800a776 <USBD_LL_Init+0x2a>
 800a7ca:	bf00      	nop
 800a7cc:	20000f44 	.word	0x20000f44
 800a7d0:	40005c00 	.word	0x40005c00

0800a7d4 <USBD_LL_Start>:
 800a7d4:	b508      	push	{r3, lr}
 800a7d6:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a7da:	f7fb ff63 	bl	80066a4 <HAL_PCD_Start>
 800a7de:	2803      	cmp	r0, #3
 800a7e0:	bf96      	itet	ls
 800a7e2:	4b02      	ldrls	r3, [pc, #8]	; (800a7ec <USBD_LL_Start+0x18>)
 800a7e4:	2002      	movhi	r0, #2
 800a7e6:	5c18      	ldrbls	r0, [r3, r0]
 800a7e8:	bd08      	pop	{r3, pc}
 800a7ea:	bf00      	nop
 800a7ec:	08010874 	.word	0x08010874

0800a7f0 <USBD_LL_OpenEP>:
 800a7f0:	4694      	mov	ip, r2
 800a7f2:	b508      	push	{r3, lr}
 800a7f4:	461a      	mov	r2, r3
 800a7f6:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a7fa:	4663      	mov	r3, ip
 800a7fc:	f7fc fcc6 	bl	800718c <HAL_PCD_EP_Open>
 800a800:	2803      	cmp	r0, #3
 800a802:	bf96      	itet	ls
 800a804:	4b01      	ldrls	r3, [pc, #4]	; (800a80c <USBD_LL_OpenEP+0x1c>)
 800a806:	2002      	movhi	r0, #2
 800a808:	5c18      	ldrbls	r0, [r3, r0]
 800a80a:	bd08      	pop	{r3, pc}
 800a80c:	08010874 	.word	0x08010874

0800a810 <USBD_LL_CloseEP>:
 800a810:	b508      	push	{r3, lr}
 800a812:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a816:	f7fc fcf7 	bl	8007208 <HAL_PCD_EP_Close>
 800a81a:	2803      	cmp	r0, #3
 800a81c:	bf96      	itet	ls
 800a81e:	4b02      	ldrls	r3, [pc, #8]	; (800a828 <USBD_LL_CloseEP+0x18>)
 800a820:	2002      	movhi	r0, #2
 800a822:	5c18      	ldrbls	r0, [r3, r0]
 800a824:	bd08      	pop	{r3, pc}
 800a826:	bf00      	nop
 800a828:	08010874 	.word	0x08010874

0800a82c <USBD_LL_StallEP>:
 800a82c:	b508      	push	{r3, lr}
 800a82e:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a832:	f7fc fd61 	bl	80072f8 <HAL_PCD_EP_SetStall>
 800a836:	2803      	cmp	r0, #3
 800a838:	bf96      	itet	ls
 800a83a:	4b02      	ldrls	r3, [pc, #8]	; (800a844 <USBD_LL_StallEP+0x18>)
 800a83c:	2002      	movhi	r0, #2
 800a83e:	5c18      	ldrbls	r0, [r3, r0]
 800a840:	bd08      	pop	{r3, pc}
 800a842:	bf00      	nop
 800a844:	08010874 	.word	0x08010874

0800a848 <USBD_LL_ClearStallEP>:
 800a848:	b508      	push	{r3, lr}
 800a84a:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a84e:	f7fc fd8b 	bl	8007368 <HAL_PCD_EP_ClrStall>
 800a852:	2803      	cmp	r0, #3
 800a854:	bf96      	itet	ls
 800a856:	4b02      	ldrls	r3, [pc, #8]	; (800a860 <USBD_LL_ClearStallEP+0x18>)
 800a858:	2002      	movhi	r0, #2
 800a85a:	5c18      	ldrbls	r0, [r3, r0]
 800a85c:	bd08      	pop	{r3, pc}
 800a85e:	bf00      	nop
 800a860:	08010874 	.word	0x08010874

0800a864 <USBD_LL_IsStallEP>:
 800a864:	060a      	lsls	r2, r1, #24
 800a866:	f8d0 3298 	ldr.w	r3, [r0, #664]	; 0x298
 800a86a:	d406      	bmi.n	800a87a <USBD_LL_IsStallEP+0x16>
 800a86c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a870:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800a874:	f891 016a 	ldrb.w	r0, [r1, #362]	; 0x16a
 800a878:	4770      	bx	lr
 800a87a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800a87e:	3101      	adds	r1, #1
 800a880:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a884:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800a888:	7888      	ldrb	r0, [r1, #2]
 800a88a:	4770      	bx	lr

0800a88c <USBD_LL_SetUSBAddress>:
 800a88c:	b508      	push	{r3, lr}
 800a88e:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a892:	f7fc fc65 	bl	8007160 <HAL_PCD_SetAddress>
 800a896:	2803      	cmp	r0, #3
 800a898:	bf96      	itet	ls
 800a89a:	4b02      	ldrls	r3, [pc, #8]	; (800a8a4 <USBD_LL_SetUSBAddress+0x18>)
 800a89c:	2002      	movhi	r0, #2
 800a89e:	5c18      	ldrbls	r0, [r3, r0]
 800a8a0:	bd08      	pop	{r3, pc}
 800a8a2:	bf00      	nop
 800a8a4:	08010874 	.word	0x08010874

0800a8a8 <USBD_LL_Transmit>:
 800a8a8:	b508      	push	{r3, lr}
 800a8aa:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a8ae:	f7fc fcff 	bl	80072b0 <HAL_PCD_EP_Transmit>
 800a8b2:	2803      	cmp	r0, #3
 800a8b4:	bf96      	itet	ls
 800a8b6:	4b02      	ldrls	r3, [pc, #8]	; (800a8c0 <USBD_LL_Transmit+0x18>)
 800a8b8:	2002      	movhi	r0, #2
 800a8ba:	5c18      	ldrbls	r0, [r3, r0]
 800a8bc:	bd08      	pop	{r3, pc}
 800a8be:	bf00      	nop
 800a8c0:	08010874 	.word	0x08010874

0800a8c4 <USBD_LL_PrepareReceive>:
 800a8c4:	b508      	push	{r3, lr}
 800a8c6:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a8ca:	f7fc fccf 	bl	800726c <HAL_PCD_EP_Receive>
 800a8ce:	2803      	cmp	r0, #3
 800a8d0:	bf96      	itet	ls
 800a8d2:	4b02      	ldrls	r3, [pc, #8]	; (800a8dc <USBD_LL_PrepareReceive+0x18>)
 800a8d4:	2002      	movhi	r0, #2
 800a8d6:	5c18      	ldrbls	r0, [r3, r0]
 800a8d8:	bd08      	pop	{r3, pc}
 800a8da:	bf00      	nop
 800a8dc:	08010874 	.word	0x08010874

0800a8e0 <USBD_LL_GetRxDataSize>:
 800a8e0:	f8d0 0298 	ldr.w	r0, [r0, #664]	; 0x298
 800a8e4:	f7fc bcda 	b.w	800729c <HAL_PCD_EP_GetRxCount>

0800a8e8 <USBD_static_malloc>:
 800a8e8:	4800      	ldr	r0, [pc, #0]	; (800a8ec <USBD_static_malloc+0x4>)
 800a8ea:	4770      	bx	lr
 800a8ec:	20001230 	.word	0x20001230

0800a8f0 <USBD_static_free>:
 800a8f0:	4770      	bx	lr
 800a8f2:	bf00      	nop
 800a8f4:	0000      	movs	r0, r0
	...

0800a8f8 <floor>:
 800a8f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a8fc:	f3c1 580a 	ubfx	r8, r1, #20, #11
 800a900:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 800a904:	2e13      	cmp	r6, #19
 800a906:	4602      	mov	r2, r0
 800a908:	460b      	mov	r3, r1
 800a90a:	4607      	mov	r7, r0
 800a90c:	460c      	mov	r4, r1
 800a90e:	4605      	mov	r5, r0
 800a910:	dc33      	bgt.n	800a97a <floor+0x82>
 800a912:	2e00      	cmp	r6, #0
 800a914:	da14      	bge.n	800a940 <floor+0x48>
 800a916:	a334      	add	r3, pc, #208	; (adr r3, 800a9e8 <floor+0xf0>)
 800a918:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a91c:	f7f5 fc48 	bl	80001b0 <__adddf3>
 800a920:	2200      	movs	r2, #0
 800a922:	2300      	movs	r3, #0
 800a924:	f7f6 f88a 	bl	8000a3c <__aeabi_dcmpgt>
 800a928:	b138      	cbz	r0, 800a93a <floor+0x42>
 800a92a:	2c00      	cmp	r4, #0
 800a92c:	da58      	bge.n	800a9e0 <floor+0xe8>
 800a92e:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800a932:	431d      	orrs	r5, r3
 800a934:	d001      	beq.n	800a93a <floor+0x42>
 800a936:	2500      	movs	r5, #0
 800a938:	4c2d      	ldr	r4, [pc, #180]	; (800a9f0 <floor+0xf8>)
 800a93a:	4623      	mov	r3, r4
 800a93c:	462f      	mov	r7, r5
 800a93e:	e025      	b.n	800a98c <floor+0x94>
 800a940:	4a2c      	ldr	r2, [pc, #176]	; (800a9f4 <floor+0xfc>)
 800a942:	fa42 f806 	asr.w	r8, r2, r6
 800a946:	ea01 0208 	and.w	r2, r1, r8
 800a94a:	4302      	orrs	r2, r0
 800a94c:	d01e      	beq.n	800a98c <floor+0x94>
 800a94e:	a326      	add	r3, pc, #152	; (adr r3, 800a9e8 <floor+0xf0>)
 800a950:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a954:	f7f5 fc2c 	bl	80001b0 <__adddf3>
 800a958:	2200      	movs	r2, #0
 800a95a:	2300      	movs	r3, #0
 800a95c:	f7f6 f86e 	bl	8000a3c <__aeabi_dcmpgt>
 800a960:	2800      	cmp	r0, #0
 800a962:	d0ea      	beq.n	800a93a <floor+0x42>
 800a964:	2c00      	cmp	r4, #0
 800a966:	bfbe      	ittt	lt
 800a968:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800a96c:	fa43 f606 	asrlt.w	r6, r3, r6
 800a970:	19a4      	addlt	r4, r4, r6
 800a972:	2500      	movs	r5, #0
 800a974:	ea24 0408 	bic.w	r4, r4, r8
 800a978:	e7df      	b.n	800a93a <floor+0x42>
 800a97a:	2e33      	cmp	r6, #51	; 0x33
 800a97c:	dd0a      	ble.n	800a994 <floor+0x9c>
 800a97e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800a982:	d103      	bne.n	800a98c <floor+0x94>
 800a984:	f7f5 fc14 	bl	80001b0 <__adddf3>
 800a988:	4607      	mov	r7, r0
 800a98a:	460b      	mov	r3, r1
 800a98c:	4638      	mov	r0, r7
 800a98e:	4619      	mov	r1, r3
 800a990:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a994:	f04f 32ff 	mov.w	r2, #4294967295
 800a998:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 800a99c:	fa22 f808 	lsr.w	r8, r2, r8
 800a9a0:	ea18 0f00 	tst.w	r8, r0
 800a9a4:	d0f2      	beq.n	800a98c <floor+0x94>
 800a9a6:	a310      	add	r3, pc, #64	; (adr r3, 800a9e8 <floor+0xf0>)
 800a9a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a9ac:	f7f5 fc00 	bl	80001b0 <__adddf3>
 800a9b0:	2200      	movs	r2, #0
 800a9b2:	2300      	movs	r3, #0
 800a9b4:	f7f6 f842 	bl	8000a3c <__aeabi_dcmpgt>
 800a9b8:	2800      	cmp	r0, #0
 800a9ba:	d0be      	beq.n	800a93a <floor+0x42>
 800a9bc:	2c00      	cmp	r4, #0
 800a9be:	da02      	bge.n	800a9c6 <floor+0xce>
 800a9c0:	2e14      	cmp	r6, #20
 800a9c2:	d103      	bne.n	800a9cc <floor+0xd4>
 800a9c4:	3401      	adds	r4, #1
 800a9c6:	ea25 0508 	bic.w	r5, r5, r8
 800a9ca:	e7b6      	b.n	800a93a <floor+0x42>
 800a9cc:	2301      	movs	r3, #1
 800a9ce:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800a9d2:	fa03 f606 	lsl.w	r6, r3, r6
 800a9d6:	4435      	add	r5, r6
 800a9d8:	42bd      	cmp	r5, r7
 800a9da:	bf38      	it	cc
 800a9dc:	18e4      	addcc	r4, r4, r3
 800a9de:	e7f2      	b.n	800a9c6 <floor+0xce>
 800a9e0:	2500      	movs	r5, #0
 800a9e2:	462c      	mov	r4, r5
 800a9e4:	e7a9      	b.n	800a93a <floor+0x42>
 800a9e6:	bf00      	nop
 800a9e8:	8800759c 	.word	0x8800759c
 800a9ec:	7e37e43c 	.word	0x7e37e43c
 800a9f0:	bff00000 	.word	0xbff00000
 800a9f4:	000fffff 	.word	0x000fffff

0800a9f8 <__errno>:
 800a9f8:	4b01      	ldr	r3, [pc, #4]	; (800aa00 <__errno+0x8>)
 800a9fa:	6818      	ldr	r0, [r3, #0]
 800a9fc:	4770      	bx	lr
 800a9fe:	bf00      	nop
 800aa00:	200001a0 	.word	0x200001a0

0800aa04 <__libc_init_array>:
 800aa04:	b570      	push	{r4, r5, r6, lr}
 800aa06:	2600      	movs	r6, #0
 800aa08:	4d0c      	ldr	r5, [pc, #48]	; (800aa3c <__libc_init_array+0x38>)
 800aa0a:	4c0d      	ldr	r4, [pc, #52]	; (800aa40 <__libc_init_array+0x3c>)
 800aa0c:	1b64      	subs	r4, r4, r5
 800aa0e:	10a4      	asrs	r4, r4, #2
 800aa10:	42a6      	cmp	r6, r4
 800aa12:	d109      	bne.n	800aa28 <__libc_init_array+0x24>
 800aa14:	f005 f886 	bl	800fb24 <_init>
 800aa18:	2600      	movs	r6, #0
 800aa1a:	4d0a      	ldr	r5, [pc, #40]	; (800aa44 <__libc_init_array+0x40>)
 800aa1c:	4c0a      	ldr	r4, [pc, #40]	; (800aa48 <__libc_init_array+0x44>)
 800aa1e:	1b64      	subs	r4, r4, r5
 800aa20:	10a4      	asrs	r4, r4, #2
 800aa22:	42a6      	cmp	r6, r4
 800aa24:	d105      	bne.n	800aa32 <__libc_init_array+0x2e>
 800aa26:	bd70      	pop	{r4, r5, r6, pc}
 800aa28:	f855 3b04 	ldr.w	r3, [r5], #4
 800aa2c:	4798      	blx	r3
 800aa2e:	3601      	adds	r6, #1
 800aa30:	e7ee      	b.n	800aa10 <__libc_init_array+0xc>
 800aa32:	f855 3b04 	ldr.w	r3, [r5], #4
 800aa36:	4798      	blx	r3
 800aa38:	3601      	adds	r6, #1
 800aa3a:	e7f2      	b.n	800aa22 <__libc_init_array+0x1e>
 800aa3c:	08010d3c 	.word	0x08010d3c
 800aa40:	08010d3c 	.word	0x08010d3c
 800aa44:	08010d3c 	.word	0x08010d3c
 800aa48:	08010d40 	.word	0x08010d40

0800aa4c <memcpy>:
 800aa4c:	440a      	add	r2, r1
 800aa4e:	4291      	cmp	r1, r2
 800aa50:	f100 33ff 	add.w	r3, r0, #4294967295
 800aa54:	d100      	bne.n	800aa58 <memcpy+0xc>
 800aa56:	4770      	bx	lr
 800aa58:	b510      	push	{r4, lr}
 800aa5a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800aa5e:	4291      	cmp	r1, r2
 800aa60:	f803 4f01 	strb.w	r4, [r3, #1]!
 800aa64:	d1f9      	bne.n	800aa5a <memcpy+0xe>
 800aa66:	bd10      	pop	{r4, pc}

0800aa68 <memset>:
 800aa68:	4603      	mov	r3, r0
 800aa6a:	4402      	add	r2, r0
 800aa6c:	4293      	cmp	r3, r2
 800aa6e:	d100      	bne.n	800aa72 <memset+0xa>
 800aa70:	4770      	bx	lr
 800aa72:	f803 1b01 	strb.w	r1, [r3], #1
 800aa76:	e7f9      	b.n	800aa6c <memset+0x4>

0800aa78 <__cvt>:
 800aa78:	2b00      	cmp	r3, #0
 800aa7a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa7e:	461f      	mov	r7, r3
 800aa80:	bfbb      	ittet	lt
 800aa82:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800aa86:	461f      	movlt	r7, r3
 800aa88:	2300      	movge	r3, #0
 800aa8a:	232d      	movlt	r3, #45	; 0x2d
 800aa8c:	b088      	sub	sp, #32
 800aa8e:	4614      	mov	r4, r2
 800aa90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800aa92:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800aa94:	7013      	strb	r3, [r2, #0]
 800aa96:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800aa98:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800aa9c:	f023 0820 	bic.w	r8, r3, #32
 800aaa0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800aaa4:	d005      	beq.n	800aab2 <__cvt+0x3a>
 800aaa6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800aaaa:	d100      	bne.n	800aaae <__cvt+0x36>
 800aaac:	3501      	adds	r5, #1
 800aaae:	2302      	movs	r3, #2
 800aab0:	e000      	b.n	800aab4 <__cvt+0x3c>
 800aab2:	2303      	movs	r3, #3
 800aab4:	aa07      	add	r2, sp, #28
 800aab6:	9204      	str	r2, [sp, #16]
 800aab8:	aa06      	add	r2, sp, #24
 800aaba:	e9cd a202 	strd	sl, r2, [sp, #8]
 800aabe:	e9cd 3500 	strd	r3, r5, [sp]
 800aac2:	4622      	mov	r2, r4
 800aac4:	463b      	mov	r3, r7
 800aac6:	f001 fe17 	bl	800c6f8 <_dtoa_r>
 800aaca:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800aace:	4606      	mov	r6, r0
 800aad0:	d102      	bne.n	800aad8 <__cvt+0x60>
 800aad2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800aad4:	07db      	lsls	r3, r3, #31
 800aad6:	d522      	bpl.n	800ab1e <__cvt+0xa6>
 800aad8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800aadc:	eb06 0905 	add.w	r9, r6, r5
 800aae0:	d110      	bne.n	800ab04 <__cvt+0x8c>
 800aae2:	7833      	ldrb	r3, [r6, #0]
 800aae4:	2b30      	cmp	r3, #48	; 0x30
 800aae6:	d10a      	bne.n	800aafe <__cvt+0x86>
 800aae8:	2200      	movs	r2, #0
 800aaea:	2300      	movs	r3, #0
 800aaec:	4620      	mov	r0, r4
 800aaee:	4639      	mov	r1, r7
 800aaf0:	f7f5 ff7c 	bl	80009ec <__aeabi_dcmpeq>
 800aaf4:	b918      	cbnz	r0, 800aafe <__cvt+0x86>
 800aaf6:	f1c5 0501 	rsb	r5, r5, #1
 800aafa:	f8ca 5000 	str.w	r5, [sl]
 800aafe:	f8da 3000 	ldr.w	r3, [sl]
 800ab02:	4499      	add	r9, r3
 800ab04:	2200      	movs	r2, #0
 800ab06:	2300      	movs	r3, #0
 800ab08:	4620      	mov	r0, r4
 800ab0a:	4639      	mov	r1, r7
 800ab0c:	f7f5 ff6e 	bl	80009ec <__aeabi_dcmpeq>
 800ab10:	b108      	cbz	r0, 800ab16 <__cvt+0x9e>
 800ab12:	f8cd 901c 	str.w	r9, [sp, #28]
 800ab16:	2230      	movs	r2, #48	; 0x30
 800ab18:	9b07      	ldr	r3, [sp, #28]
 800ab1a:	454b      	cmp	r3, r9
 800ab1c:	d307      	bcc.n	800ab2e <__cvt+0xb6>
 800ab1e:	4630      	mov	r0, r6
 800ab20:	9b07      	ldr	r3, [sp, #28]
 800ab22:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ab24:	1b9b      	subs	r3, r3, r6
 800ab26:	6013      	str	r3, [r2, #0]
 800ab28:	b008      	add	sp, #32
 800ab2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab2e:	1c59      	adds	r1, r3, #1
 800ab30:	9107      	str	r1, [sp, #28]
 800ab32:	701a      	strb	r2, [r3, #0]
 800ab34:	e7f0      	b.n	800ab18 <__cvt+0xa0>

0800ab36 <__exponent>:
 800ab36:	4603      	mov	r3, r0
 800ab38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab3a:	2900      	cmp	r1, #0
 800ab3c:	f803 2b02 	strb.w	r2, [r3], #2
 800ab40:	bfb6      	itet	lt
 800ab42:	222d      	movlt	r2, #45	; 0x2d
 800ab44:	222b      	movge	r2, #43	; 0x2b
 800ab46:	4249      	neglt	r1, r1
 800ab48:	2909      	cmp	r1, #9
 800ab4a:	7042      	strb	r2, [r0, #1]
 800ab4c:	dd2b      	ble.n	800aba6 <__exponent+0x70>
 800ab4e:	f10d 0407 	add.w	r4, sp, #7
 800ab52:	46a4      	mov	ip, r4
 800ab54:	270a      	movs	r7, #10
 800ab56:	fb91 f6f7 	sdiv	r6, r1, r7
 800ab5a:	460a      	mov	r2, r1
 800ab5c:	46a6      	mov	lr, r4
 800ab5e:	fb07 1516 	mls	r5, r7, r6, r1
 800ab62:	2a63      	cmp	r2, #99	; 0x63
 800ab64:	f105 0530 	add.w	r5, r5, #48	; 0x30
 800ab68:	4631      	mov	r1, r6
 800ab6a:	f104 34ff 	add.w	r4, r4, #4294967295
 800ab6e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800ab72:	dcf0      	bgt.n	800ab56 <__exponent+0x20>
 800ab74:	3130      	adds	r1, #48	; 0x30
 800ab76:	f1ae 0502 	sub.w	r5, lr, #2
 800ab7a:	f804 1c01 	strb.w	r1, [r4, #-1]
 800ab7e:	4629      	mov	r1, r5
 800ab80:	1c44      	adds	r4, r0, #1
 800ab82:	4561      	cmp	r1, ip
 800ab84:	d30a      	bcc.n	800ab9c <__exponent+0x66>
 800ab86:	f10d 0209 	add.w	r2, sp, #9
 800ab8a:	eba2 020e 	sub.w	r2, r2, lr
 800ab8e:	4565      	cmp	r5, ip
 800ab90:	bf88      	it	hi
 800ab92:	2200      	movhi	r2, #0
 800ab94:	4413      	add	r3, r2
 800ab96:	1a18      	subs	r0, r3, r0
 800ab98:	b003      	add	sp, #12
 800ab9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab9c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aba0:	f804 2f01 	strb.w	r2, [r4, #1]!
 800aba4:	e7ed      	b.n	800ab82 <__exponent+0x4c>
 800aba6:	2330      	movs	r3, #48	; 0x30
 800aba8:	3130      	adds	r1, #48	; 0x30
 800abaa:	7083      	strb	r3, [r0, #2]
 800abac:	70c1      	strb	r1, [r0, #3]
 800abae:	1d03      	adds	r3, r0, #4
 800abb0:	e7f1      	b.n	800ab96 <__exponent+0x60>
	...

0800abb4 <_printf_float>:
 800abb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abb8:	b091      	sub	sp, #68	; 0x44
 800abba:	460c      	mov	r4, r1
 800abbc:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800abc0:	4616      	mov	r6, r2
 800abc2:	461f      	mov	r7, r3
 800abc4:	4605      	mov	r5, r0
 800abc6:	f002 feeb 	bl	800d9a0 <_localeconv_r>
 800abca:	6803      	ldr	r3, [r0, #0]
 800abcc:	4618      	mov	r0, r3
 800abce:	9309      	str	r3, [sp, #36]	; 0x24
 800abd0:	f7f5 fae0 	bl	8000194 <strlen>
 800abd4:	2300      	movs	r3, #0
 800abd6:	930e      	str	r3, [sp, #56]	; 0x38
 800abd8:	f8d8 3000 	ldr.w	r3, [r8]
 800abdc:	900a      	str	r0, [sp, #40]	; 0x28
 800abde:	3307      	adds	r3, #7
 800abe0:	f023 0307 	bic.w	r3, r3, #7
 800abe4:	f103 0208 	add.w	r2, r3, #8
 800abe8:	f894 9018 	ldrb.w	r9, [r4, #24]
 800abec:	f8d4 b000 	ldr.w	fp, [r4]
 800abf0:	f8c8 2000 	str.w	r2, [r8]
 800abf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abf8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800abfc:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800ac00:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800ac04:	930b      	str	r3, [sp, #44]	; 0x2c
 800ac06:	f04f 32ff 	mov.w	r2, #4294967295
 800ac0a:	4640      	mov	r0, r8
 800ac0c:	4b9c      	ldr	r3, [pc, #624]	; (800ae80 <_printf_float+0x2cc>)
 800ac0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac10:	f7f5 ff1e 	bl	8000a50 <__aeabi_dcmpun>
 800ac14:	bb70      	cbnz	r0, 800ac74 <_printf_float+0xc0>
 800ac16:	f04f 32ff 	mov.w	r2, #4294967295
 800ac1a:	4640      	mov	r0, r8
 800ac1c:	4b98      	ldr	r3, [pc, #608]	; (800ae80 <_printf_float+0x2cc>)
 800ac1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac20:	f7f5 fef8 	bl	8000a14 <__aeabi_dcmple>
 800ac24:	bb30      	cbnz	r0, 800ac74 <_printf_float+0xc0>
 800ac26:	2200      	movs	r2, #0
 800ac28:	2300      	movs	r3, #0
 800ac2a:	4640      	mov	r0, r8
 800ac2c:	4651      	mov	r1, sl
 800ac2e:	f7f5 fee7 	bl	8000a00 <__aeabi_dcmplt>
 800ac32:	b110      	cbz	r0, 800ac3a <_printf_float+0x86>
 800ac34:	232d      	movs	r3, #45	; 0x2d
 800ac36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ac3a:	4b92      	ldr	r3, [pc, #584]	; (800ae84 <_printf_float+0x2d0>)
 800ac3c:	4892      	ldr	r0, [pc, #584]	; (800ae88 <_printf_float+0x2d4>)
 800ac3e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800ac42:	bf94      	ite	ls
 800ac44:	4698      	movls	r8, r3
 800ac46:	4680      	movhi	r8, r0
 800ac48:	2303      	movs	r3, #3
 800ac4a:	f04f 0a00 	mov.w	sl, #0
 800ac4e:	6123      	str	r3, [r4, #16]
 800ac50:	f02b 0304 	bic.w	r3, fp, #4
 800ac54:	6023      	str	r3, [r4, #0]
 800ac56:	4633      	mov	r3, r6
 800ac58:	4621      	mov	r1, r4
 800ac5a:	4628      	mov	r0, r5
 800ac5c:	9700      	str	r7, [sp, #0]
 800ac5e:	aa0f      	add	r2, sp, #60	; 0x3c
 800ac60:	f000 f9d4 	bl	800b00c <_printf_common>
 800ac64:	3001      	adds	r0, #1
 800ac66:	f040 8090 	bne.w	800ad8a <_printf_float+0x1d6>
 800ac6a:	f04f 30ff 	mov.w	r0, #4294967295
 800ac6e:	b011      	add	sp, #68	; 0x44
 800ac70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac74:	4642      	mov	r2, r8
 800ac76:	4653      	mov	r3, sl
 800ac78:	4640      	mov	r0, r8
 800ac7a:	4651      	mov	r1, sl
 800ac7c:	f7f5 fee8 	bl	8000a50 <__aeabi_dcmpun>
 800ac80:	b148      	cbz	r0, 800ac96 <_printf_float+0xe2>
 800ac82:	f1ba 0f00 	cmp.w	sl, #0
 800ac86:	bfb8      	it	lt
 800ac88:	232d      	movlt	r3, #45	; 0x2d
 800ac8a:	4880      	ldr	r0, [pc, #512]	; (800ae8c <_printf_float+0x2d8>)
 800ac8c:	bfb8      	it	lt
 800ac8e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800ac92:	4b7f      	ldr	r3, [pc, #508]	; (800ae90 <_printf_float+0x2dc>)
 800ac94:	e7d3      	b.n	800ac3e <_printf_float+0x8a>
 800ac96:	6863      	ldr	r3, [r4, #4]
 800ac98:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800ac9c:	1c5a      	adds	r2, r3, #1
 800ac9e:	d142      	bne.n	800ad26 <_printf_float+0x172>
 800aca0:	2306      	movs	r3, #6
 800aca2:	6063      	str	r3, [r4, #4]
 800aca4:	2200      	movs	r2, #0
 800aca6:	9206      	str	r2, [sp, #24]
 800aca8:	aa0e      	add	r2, sp, #56	; 0x38
 800acaa:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800acae:	aa0d      	add	r2, sp, #52	; 0x34
 800acb0:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800acb4:	9203      	str	r2, [sp, #12]
 800acb6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800acba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800acbe:	6023      	str	r3, [r4, #0]
 800acc0:	6863      	ldr	r3, [r4, #4]
 800acc2:	4642      	mov	r2, r8
 800acc4:	9300      	str	r3, [sp, #0]
 800acc6:	4628      	mov	r0, r5
 800acc8:	4653      	mov	r3, sl
 800acca:	910b      	str	r1, [sp, #44]	; 0x2c
 800accc:	f7ff fed4 	bl	800aa78 <__cvt>
 800acd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800acd2:	4680      	mov	r8, r0
 800acd4:	2947      	cmp	r1, #71	; 0x47
 800acd6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800acd8:	d108      	bne.n	800acec <_printf_float+0x138>
 800acda:	1cc8      	adds	r0, r1, #3
 800acdc:	db02      	blt.n	800ace4 <_printf_float+0x130>
 800acde:	6863      	ldr	r3, [r4, #4]
 800ace0:	4299      	cmp	r1, r3
 800ace2:	dd40      	ble.n	800ad66 <_printf_float+0x1b2>
 800ace4:	f1a9 0902 	sub.w	r9, r9, #2
 800ace8:	fa5f f989 	uxtb.w	r9, r9
 800acec:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800acf0:	d81f      	bhi.n	800ad32 <_printf_float+0x17e>
 800acf2:	464a      	mov	r2, r9
 800acf4:	3901      	subs	r1, #1
 800acf6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800acfa:	910d      	str	r1, [sp, #52]	; 0x34
 800acfc:	f7ff ff1b 	bl	800ab36 <__exponent>
 800ad00:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ad02:	4682      	mov	sl, r0
 800ad04:	1813      	adds	r3, r2, r0
 800ad06:	2a01      	cmp	r2, #1
 800ad08:	6123      	str	r3, [r4, #16]
 800ad0a:	dc02      	bgt.n	800ad12 <_printf_float+0x15e>
 800ad0c:	6822      	ldr	r2, [r4, #0]
 800ad0e:	07d2      	lsls	r2, r2, #31
 800ad10:	d501      	bpl.n	800ad16 <_printf_float+0x162>
 800ad12:	3301      	adds	r3, #1
 800ad14:	6123      	str	r3, [r4, #16]
 800ad16:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800ad1a:	2b00      	cmp	r3, #0
 800ad1c:	d09b      	beq.n	800ac56 <_printf_float+0xa2>
 800ad1e:	232d      	movs	r3, #45	; 0x2d
 800ad20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ad24:	e797      	b.n	800ac56 <_printf_float+0xa2>
 800ad26:	2947      	cmp	r1, #71	; 0x47
 800ad28:	d1bc      	bne.n	800aca4 <_printf_float+0xf0>
 800ad2a:	2b00      	cmp	r3, #0
 800ad2c:	d1ba      	bne.n	800aca4 <_printf_float+0xf0>
 800ad2e:	2301      	movs	r3, #1
 800ad30:	e7b7      	b.n	800aca2 <_printf_float+0xee>
 800ad32:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800ad36:	d118      	bne.n	800ad6a <_printf_float+0x1b6>
 800ad38:	2900      	cmp	r1, #0
 800ad3a:	6863      	ldr	r3, [r4, #4]
 800ad3c:	dd0b      	ble.n	800ad56 <_printf_float+0x1a2>
 800ad3e:	6121      	str	r1, [r4, #16]
 800ad40:	b913      	cbnz	r3, 800ad48 <_printf_float+0x194>
 800ad42:	6822      	ldr	r2, [r4, #0]
 800ad44:	07d0      	lsls	r0, r2, #31
 800ad46:	d502      	bpl.n	800ad4e <_printf_float+0x19a>
 800ad48:	3301      	adds	r3, #1
 800ad4a:	440b      	add	r3, r1
 800ad4c:	6123      	str	r3, [r4, #16]
 800ad4e:	f04f 0a00 	mov.w	sl, #0
 800ad52:	65a1      	str	r1, [r4, #88]	; 0x58
 800ad54:	e7df      	b.n	800ad16 <_printf_float+0x162>
 800ad56:	b913      	cbnz	r3, 800ad5e <_printf_float+0x1aa>
 800ad58:	6822      	ldr	r2, [r4, #0]
 800ad5a:	07d2      	lsls	r2, r2, #31
 800ad5c:	d501      	bpl.n	800ad62 <_printf_float+0x1ae>
 800ad5e:	3302      	adds	r3, #2
 800ad60:	e7f4      	b.n	800ad4c <_printf_float+0x198>
 800ad62:	2301      	movs	r3, #1
 800ad64:	e7f2      	b.n	800ad4c <_printf_float+0x198>
 800ad66:	f04f 0967 	mov.w	r9, #103	; 0x67
 800ad6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ad6c:	4299      	cmp	r1, r3
 800ad6e:	db05      	blt.n	800ad7c <_printf_float+0x1c8>
 800ad70:	6823      	ldr	r3, [r4, #0]
 800ad72:	6121      	str	r1, [r4, #16]
 800ad74:	07d8      	lsls	r0, r3, #31
 800ad76:	d5ea      	bpl.n	800ad4e <_printf_float+0x19a>
 800ad78:	1c4b      	adds	r3, r1, #1
 800ad7a:	e7e7      	b.n	800ad4c <_printf_float+0x198>
 800ad7c:	2900      	cmp	r1, #0
 800ad7e:	bfcc      	ite	gt
 800ad80:	2201      	movgt	r2, #1
 800ad82:	f1c1 0202 	rsble	r2, r1, #2
 800ad86:	4413      	add	r3, r2
 800ad88:	e7e0      	b.n	800ad4c <_printf_float+0x198>
 800ad8a:	6823      	ldr	r3, [r4, #0]
 800ad8c:	055a      	lsls	r2, r3, #21
 800ad8e:	d407      	bmi.n	800ada0 <_printf_float+0x1ec>
 800ad90:	6923      	ldr	r3, [r4, #16]
 800ad92:	4642      	mov	r2, r8
 800ad94:	4631      	mov	r1, r6
 800ad96:	4628      	mov	r0, r5
 800ad98:	47b8      	blx	r7
 800ad9a:	3001      	adds	r0, #1
 800ad9c:	d12b      	bne.n	800adf6 <_printf_float+0x242>
 800ad9e:	e764      	b.n	800ac6a <_printf_float+0xb6>
 800ada0:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800ada4:	f240 80dd 	bls.w	800af62 <_printf_float+0x3ae>
 800ada8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800adac:	2200      	movs	r2, #0
 800adae:	2300      	movs	r3, #0
 800adb0:	f7f5 fe1c 	bl	80009ec <__aeabi_dcmpeq>
 800adb4:	2800      	cmp	r0, #0
 800adb6:	d033      	beq.n	800ae20 <_printf_float+0x26c>
 800adb8:	2301      	movs	r3, #1
 800adba:	4631      	mov	r1, r6
 800adbc:	4628      	mov	r0, r5
 800adbe:	4a35      	ldr	r2, [pc, #212]	; (800ae94 <_printf_float+0x2e0>)
 800adc0:	47b8      	blx	r7
 800adc2:	3001      	adds	r0, #1
 800adc4:	f43f af51 	beq.w	800ac6a <_printf_float+0xb6>
 800adc8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800adcc:	429a      	cmp	r2, r3
 800adce:	db02      	blt.n	800add6 <_printf_float+0x222>
 800add0:	6823      	ldr	r3, [r4, #0]
 800add2:	07d8      	lsls	r0, r3, #31
 800add4:	d50f      	bpl.n	800adf6 <_printf_float+0x242>
 800add6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800adda:	4631      	mov	r1, r6
 800addc:	4628      	mov	r0, r5
 800adde:	47b8      	blx	r7
 800ade0:	3001      	adds	r0, #1
 800ade2:	f43f af42 	beq.w	800ac6a <_printf_float+0xb6>
 800ade6:	f04f 0800 	mov.w	r8, #0
 800adea:	f104 091a 	add.w	r9, r4, #26
 800adee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800adf0:	3b01      	subs	r3, #1
 800adf2:	4543      	cmp	r3, r8
 800adf4:	dc09      	bgt.n	800ae0a <_printf_float+0x256>
 800adf6:	6823      	ldr	r3, [r4, #0]
 800adf8:	079b      	lsls	r3, r3, #30
 800adfa:	f100 8102 	bmi.w	800b002 <_printf_float+0x44e>
 800adfe:	68e0      	ldr	r0, [r4, #12]
 800ae00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ae02:	4298      	cmp	r0, r3
 800ae04:	bfb8      	it	lt
 800ae06:	4618      	movlt	r0, r3
 800ae08:	e731      	b.n	800ac6e <_printf_float+0xba>
 800ae0a:	2301      	movs	r3, #1
 800ae0c:	464a      	mov	r2, r9
 800ae0e:	4631      	mov	r1, r6
 800ae10:	4628      	mov	r0, r5
 800ae12:	47b8      	blx	r7
 800ae14:	3001      	adds	r0, #1
 800ae16:	f43f af28 	beq.w	800ac6a <_printf_float+0xb6>
 800ae1a:	f108 0801 	add.w	r8, r8, #1
 800ae1e:	e7e6      	b.n	800adee <_printf_float+0x23a>
 800ae20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ae22:	2b00      	cmp	r3, #0
 800ae24:	dc38      	bgt.n	800ae98 <_printf_float+0x2e4>
 800ae26:	2301      	movs	r3, #1
 800ae28:	4631      	mov	r1, r6
 800ae2a:	4628      	mov	r0, r5
 800ae2c:	4a19      	ldr	r2, [pc, #100]	; (800ae94 <_printf_float+0x2e0>)
 800ae2e:	47b8      	blx	r7
 800ae30:	3001      	adds	r0, #1
 800ae32:	f43f af1a 	beq.w	800ac6a <_printf_float+0xb6>
 800ae36:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800ae3a:	4313      	orrs	r3, r2
 800ae3c:	d102      	bne.n	800ae44 <_printf_float+0x290>
 800ae3e:	6823      	ldr	r3, [r4, #0]
 800ae40:	07d9      	lsls	r1, r3, #31
 800ae42:	d5d8      	bpl.n	800adf6 <_printf_float+0x242>
 800ae44:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800ae48:	4631      	mov	r1, r6
 800ae4a:	4628      	mov	r0, r5
 800ae4c:	47b8      	blx	r7
 800ae4e:	3001      	adds	r0, #1
 800ae50:	f43f af0b 	beq.w	800ac6a <_printf_float+0xb6>
 800ae54:	f04f 0900 	mov.w	r9, #0
 800ae58:	f104 0a1a 	add.w	sl, r4, #26
 800ae5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ae5e:	425b      	negs	r3, r3
 800ae60:	454b      	cmp	r3, r9
 800ae62:	dc01      	bgt.n	800ae68 <_printf_float+0x2b4>
 800ae64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae66:	e794      	b.n	800ad92 <_printf_float+0x1de>
 800ae68:	2301      	movs	r3, #1
 800ae6a:	4652      	mov	r2, sl
 800ae6c:	4631      	mov	r1, r6
 800ae6e:	4628      	mov	r0, r5
 800ae70:	47b8      	blx	r7
 800ae72:	3001      	adds	r0, #1
 800ae74:	f43f aef9 	beq.w	800ac6a <_printf_float+0xb6>
 800ae78:	f109 0901 	add.w	r9, r9, #1
 800ae7c:	e7ee      	b.n	800ae5c <_printf_float+0x2a8>
 800ae7e:	bf00      	nop
 800ae80:	7fefffff 	.word	0x7fefffff
 800ae84:	0801087c 	.word	0x0801087c
 800ae88:	08010880 	.word	0x08010880
 800ae8c:	08010888 	.word	0x08010888
 800ae90:	08010884 	.word	0x08010884
 800ae94:	08010c81 	.word	0x08010c81
 800ae98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ae9a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800ae9c:	429a      	cmp	r2, r3
 800ae9e:	bfa8      	it	ge
 800aea0:	461a      	movge	r2, r3
 800aea2:	2a00      	cmp	r2, #0
 800aea4:	4691      	mov	r9, r2
 800aea6:	dc37      	bgt.n	800af18 <_printf_float+0x364>
 800aea8:	f04f 0b00 	mov.w	fp, #0
 800aeac:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800aeb0:	f104 021a 	add.w	r2, r4, #26
 800aeb4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800aeb8:	ebaa 0309 	sub.w	r3, sl, r9
 800aebc:	455b      	cmp	r3, fp
 800aebe:	dc33      	bgt.n	800af28 <_printf_float+0x374>
 800aec0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800aec4:	429a      	cmp	r2, r3
 800aec6:	db3b      	blt.n	800af40 <_printf_float+0x38c>
 800aec8:	6823      	ldr	r3, [r4, #0]
 800aeca:	07da      	lsls	r2, r3, #31
 800aecc:	d438      	bmi.n	800af40 <_printf_float+0x38c>
 800aece:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aed0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800aed2:	eba3 020a 	sub.w	r2, r3, sl
 800aed6:	eba3 0901 	sub.w	r9, r3, r1
 800aeda:	4591      	cmp	r9, r2
 800aedc:	bfa8      	it	ge
 800aede:	4691      	movge	r9, r2
 800aee0:	f1b9 0f00 	cmp.w	r9, #0
 800aee4:	dc34      	bgt.n	800af50 <_printf_float+0x39c>
 800aee6:	f04f 0800 	mov.w	r8, #0
 800aeea:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800aeee:	f104 0a1a 	add.w	sl, r4, #26
 800aef2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800aef6:	1a9b      	subs	r3, r3, r2
 800aef8:	eba3 0309 	sub.w	r3, r3, r9
 800aefc:	4543      	cmp	r3, r8
 800aefe:	f77f af7a 	ble.w	800adf6 <_printf_float+0x242>
 800af02:	2301      	movs	r3, #1
 800af04:	4652      	mov	r2, sl
 800af06:	4631      	mov	r1, r6
 800af08:	4628      	mov	r0, r5
 800af0a:	47b8      	blx	r7
 800af0c:	3001      	adds	r0, #1
 800af0e:	f43f aeac 	beq.w	800ac6a <_printf_float+0xb6>
 800af12:	f108 0801 	add.w	r8, r8, #1
 800af16:	e7ec      	b.n	800aef2 <_printf_float+0x33e>
 800af18:	4613      	mov	r3, r2
 800af1a:	4631      	mov	r1, r6
 800af1c:	4642      	mov	r2, r8
 800af1e:	4628      	mov	r0, r5
 800af20:	47b8      	blx	r7
 800af22:	3001      	adds	r0, #1
 800af24:	d1c0      	bne.n	800aea8 <_printf_float+0x2f4>
 800af26:	e6a0      	b.n	800ac6a <_printf_float+0xb6>
 800af28:	2301      	movs	r3, #1
 800af2a:	4631      	mov	r1, r6
 800af2c:	4628      	mov	r0, r5
 800af2e:	920b      	str	r2, [sp, #44]	; 0x2c
 800af30:	47b8      	blx	r7
 800af32:	3001      	adds	r0, #1
 800af34:	f43f ae99 	beq.w	800ac6a <_printf_float+0xb6>
 800af38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800af3a:	f10b 0b01 	add.w	fp, fp, #1
 800af3e:	e7b9      	b.n	800aeb4 <_printf_float+0x300>
 800af40:	4631      	mov	r1, r6
 800af42:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800af46:	4628      	mov	r0, r5
 800af48:	47b8      	blx	r7
 800af4a:	3001      	adds	r0, #1
 800af4c:	d1bf      	bne.n	800aece <_printf_float+0x31a>
 800af4e:	e68c      	b.n	800ac6a <_printf_float+0xb6>
 800af50:	464b      	mov	r3, r9
 800af52:	4631      	mov	r1, r6
 800af54:	4628      	mov	r0, r5
 800af56:	eb08 020a 	add.w	r2, r8, sl
 800af5a:	47b8      	blx	r7
 800af5c:	3001      	adds	r0, #1
 800af5e:	d1c2      	bne.n	800aee6 <_printf_float+0x332>
 800af60:	e683      	b.n	800ac6a <_printf_float+0xb6>
 800af62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800af64:	2a01      	cmp	r2, #1
 800af66:	dc01      	bgt.n	800af6c <_printf_float+0x3b8>
 800af68:	07db      	lsls	r3, r3, #31
 800af6a:	d537      	bpl.n	800afdc <_printf_float+0x428>
 800af6c:	2301      	movs	r3, #1
 800af6e:	4642      	mov	r2, r8
 800af70:	4631      	mov	r1, r6
 800af72:	4628      	mov	r0, r5
 800af74:	47b8      	blx	r7
 800af76:	3001      	adds	r0, #1
 800af78:	f43f ae77 	beq.w	800ac6a <_printf_float+0xb6>
 800af7c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800af80:	4631      	mov	r1, r6
 800af82:	4628      	mov	r0, r5
 800af84:	47b8      	blx	r7
 800af86:	3001      	adds	r0, #1
 800af88:	f43f ae6f 	beq.w	800ac6a <_printf_float+0xb6>
 800af8c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800af90:	2200      	movs	r2, #0
 800af92:	2300      	movs	r3, #0
 800af94:	f7f5 fd2a 	bl	80009ec <__aeabi_dcmpeq>
 800af98:	b9d8      	cbnz	r0, 800afd2 <_printf_float+0x41e>
 800af9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800af9c:	f108 0201 	add.w	r2, r8, #1
 800afa0:	3b01      	subs	r3, #1
 800afa2:	4631      	mov	r1, r6
 800afa4:	4628      	mov	r0, r5
 800afa6:	47b8      	blx	r7
 800afa8:	3001      	adds	r0, #1
 800afaa:	d10e      	bne.n	800afca <_printf_float+0x416>
 800afac:	e65d      	b.n	800ac6a <_printf_float+0xb6>
 800afae:	2301      	movs	r3, #1
 800afb0:	464a      	mov	r2, r9
 800afb2:	4631      	mov	r1, r6
 800afb4:	4628      	mov	r0, r5
 800afb6:	47b8      	blx	r7
 800afb8:	3001      	adds	r0, #1
 800afba:	f43f ae56 	beq.w	800ac6a <_printf_float+0xb6>
 800afbe:	f108 0801 	add.w	r8, r8, #1
 800afc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800afc4:	3b01      	subs	r3, #1
 800afc6:	4543      	cmp	r3, r8
 800afc8:	dcf1      	bgt.n	800afae <_printf_float+0x3fa>
 800afca:	4653      	mov	r3, sl
 800afcc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800afd0:	e6e0      	b.n	800ad94 <_printf_float+0x1e0>
 800afd2:	f04f 0800 	mov.w	r8, #0
 800afd6:	f104 091a 	add.w	r9, r4, #26
 800afda:	e7f2      	b.n	800afc2 <_printf_float+0x40e>
 800afdc:	2301      	movs	r3, #1
 800afde:	4642      	mov	r2, r8
 800afe0:	e7df      	b.n	800afa2 <_printf_float+0x3ee>
 800afe2:	2301      	movs	r3, #1
 800afe4:	464a      	mov	r2, r9
 800afe6:	4631      	mov	r1, r6
 800afe8:	4628      	mov	r0, r5
 800afea:	47b8      	blx	r7
 800afec:	3001      	adds	r0, #1
 800afee:	f43f ae3c 	beq.w	800ac6a <_printf_float+0xb6>
 800aff2:	f108 0801 	add.w	r8, r8, #1
 800aff6:	68e3      	ldr	r3, [r4, #12]
 800aff8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800affa:	1a5b      	subs	r3, r3, r1
 800affc:	4543      	cmp	r3, r8
 800affe:	dcf0      	bgt.n	800afe2 <_printf_float+0x42e>
 800b000:	e6fd      	b.n	800adfe <_printf_float+0x24a>
 800b002:	f04f 0800 	mov.w	r8, #0
 800b006:	f104 0919 	add.w	r9, r4, #25
 800b00a:	e7f4      	b.n	800aff6 <_printf_float+0x442>

0800b00c <_printf_common>:
 800b00c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b010:	4616      	mov	r6, r2
 800b012:	4699      	mov	r9, r3
 800b014:	688a      	ldr	r2, [r1, #8]
 800b016:	690b      	ldr	r3, [r1, #16]
 800b018:	4607      	mov	r7, r0
 800b01a:	4293      	cmp	r3, r2
 800b01c:	bfb8      	it	lt
 800b01e:	4613      	movlt	r3, r2
 800b020:	6033      	str	r3, [r6, #0]
 800b022:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800b026:	460c      	mov	r4, r1
 800b028:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800b02c:	b10a      	cbz	r2, 800b032 <_printf_common+0x26>
 800b02e:	3301      	adds	r3, #1
 800b030:	6033      	str	r3, [r6, #0]
 800b032:	6823      	ldr	r3, [r4, #0]
 800b034:	0699      	lsls	r1, r3, #26
 800b036:	bf42      	ittt	mi
 800b038:	6833      	ldrmi	r3, [r6, #0]
 800b03a:	3302      	addmi	r3, #2
 800b03c:	6033      	strmi	r3, [r6, #0]
 800b03e:	6825      	ldr	r5, [r4, #0]
 800b040:	f015 0506 	ands.w	r5, r5, #6
 800b044:	d106      	bne.n	800b054 <_printf_common+0x48>
 800b046:	f104 0a19 	add.w	sl, r4, #25
 800b04a:	68e3      	ldr	r3, [r4, #12]
 800b04c:	6832      	ldr	r2, [r6, #0]
 800b04e:	1a9b      	subs	r3, r3, r2
 800b050:	42ab      	cmp	r3, r5
 800b052:	dc28      	bgt.n	800b0a6 <_printf_common+0x9a>
 800b054:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800b058:	1e13      	subs	r3, r2, #0
 800b05a:	6822      	ldr	r2, [r4, #0]
 800b05c:	bf18      	it	ne
 800b05e:	2301      	movne	r3, #1
 800b060:	0692      	lsls	r2, r2, #26
 800b062:	d42d      	bmi.n	800b0c0 <_printf_common+0xb4>
 800b064:	4649      	mov	r1, r9
 800b066:	4638      	mov	r0, r7
 800b068:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800b06c:	47c0      	blx	r8
 800b06e:	3001      	adds	r0, #1
 800b070:	d020      	beq.n	800b0b4 <_printf_common+0xa8>
 800b072:	6823      	ldr	r3, [r4, #0]
 800b074:	68e5      	ldr	r5, [r4, #12]
 800b076:	f003 0306 	and.w	r3, r3, #6
 800b07a:	2b04      	cmp	r3, #4
 800b07c:	bf18      	it	ne
 800b07e:	2500      	movne	r5, #0
 800b080:	6832      	ldr	r2, [r6, #0]
 800b082:	f04f 0600 	mov.w	r6, #0
 800b086:	68a3      	ldr	r3, [r4, #8]
 800b088:	bf08      	it	eq
 800b08a:	1aad      	subeq	r5, r5, r2
 800b08c:	6922      	ldr	r2, [r4, #16]
 800b08e:	bf08      	it	eq
 800b090:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b094:	4293      	cmp	r3, r2
 800b096:	bfc4      	itt	gt
 800b098:	1a9b      	subgt	r3, r3, r2
 800b09a:	18ed      	addgt	r5, r5, r3
 800b09c:	341a      	adds	r4, #26
 800b09e:	42b5      	cmp	r5, r6
 800b0a0:	d11a      	bne.n	800b0d8 <_printf_common+0xcc>
 800b0a2:	2000      	movs	r0, #0
 800b0a4:	e008      	b.n	800b0b8 <_printf_common+0xac>
 800b0a6:	2301      	movs	r3, #1
 800b0a8:	4652      	mov	r2, sl
 800b0aa:	4649      	mov	r1, r9
 800b0ac:	4638      	mov	r0, r7
 800b0ae:	47c0      	blx	r8
 800b0b0:	3001      	adds	r0, #1
 800b0b2:	d103      	bne.n	800b0bc <_printf_common+0xb0>
 800b0b4:	f04f 30ff 	mov.w	r0, #4294967295
 800b0b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b0bc:	3501      	adds	r5, #1
 800b0be:	e7c4      	b.n	800b04a <_printf_common+0x3e>
 800b0c0:	2030      	movs	r0, #48	; 0x30
 800b0c2:	18e1      	adds	r1, r4, r3
 800b0c4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b0c8:	1c5a      	adds	r2, r3, #1
 800b0ca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b0ce:	4422      	add	r2, r4
 800b0d0:	3302      	adds	r3, #2
 800b0d2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b0d6:	e7c5      	b.n	800b064 <_printf_common+0x58>
 800b0d8:	2301      	movs	r3, #1
 800b0da:	4622      	mov	r2, r4
 800b0dc:	4649      	mov	r1, r9
 800b0de:	4638      	mov	r0, r7
 800b0e0:	47c0      	blx	r8
 800b0e2:	3001      	adds	r0, #1
 800b0e4:	d0e6      	beq.n	800b0b4 <_printf_common+0xa8>
 800b0e6:	3601      	adds	r6, #1
 800b0e8:	e7d9      	b.n	800b09e <_printf_common+0x92>
	...

0800b0ec <_printf_i>:
 800b0ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b0f0:	7e0f      	ldrb	r7, [r1, #24]
 800b0f2:	4691      	mov	r9, r2
 800b0f4:	2f78      	cmp	r7, #120	; 0x78
 800b0f6:	4680      	mov	r8, r0
 800b0f8:	460c      	mov	r4, r1
 800b0fa:	469a      	mov	sl, r3
 800b0fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b0fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b102:	d807      	bhi.n	800b114 <_printf_i+0x28>
 800b104:	2f62      	cmp	r7, #98	; 0x62
 800b106:	d80a      	bhi.n	800b11e <_printf_i+0x32>
 800b108:	2f00      	cmp	r7, #0
 800b10a:	f000 80d9 	beq.w	800b2c0 <_printf_i+0x1d4>
 800b10e:	2f58      	cmp	r7, #88	; 0x58
 800b110:	f000 80a4 	beq.w	800b25c <_printf_i+0x170>
 800b114:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b118:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b11c:	e03a      	b.n	800b194 <_printf_i+0xa8>
 800b11e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b122:	2b15      	cmp	r3, #21
 800b124:	d8f6      	bhi.n	800b114 <_printf_i+0x28>
 800b126:	a101      	add	r1, pc, #4	; (adr r1, 800b12c <_printf_i+0x40>)
 800b128:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b12c:	0800b185 	.word	0x0800b185
 800b130:	0800b199 	.word	0x0800b199
 800b134:	0800b115 	.word	0x0800b115
 800b138:	0800b115 	.word	0x0800b115
 800b13c:	0800b115 	.word	0x0800b115
 800b140:	0800b115 	.word	0x0800b115
 800b144:	0800b199 	.word	0x0800b199
 800b148:	0800b115 	.word	0x0800b115
 800b14c:	0800b115 	.word	0x0800b115
 800b150:	0800b115 	.word	0x0800b115
 800b154:	0800b115 	.word	0x0800b115
 800b158:	0800b2a7 	.word	0x0800b2a7
 800b15c:	0800b1c9 	.word	0x0800b1c9
 800b160:	0800b289 	.word	0x0800b289
 800b164:	0800b115 	.word	0x0800b115
 800b168:	0800b115 	.word	0x0800b115
 800b16c:	0800b2c9 	.word	0x0800b2c9
 800b170:	0800b115 	.word	0x0800b115
 800b174:	0800b1c9 	.word	0x0800b1c9
 800b178:	0800b115 	.word	0x0800b115
 800b17c:	0800b115 	.word	0x0800b115
 800b180:	0800b291 	.word	0x0800b291
 800b184:	682b      	ldr	r3, [r5, #0]
 800b186:	1d1a      	adds	r2, r3, #4
 800b188:	681b      	ldr	r3, [r3, #0]
 800b18a:	602a      	str	r2, [r5, #0]
 800b18c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b190:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b194:	2301      	movs	r3, #1
 800b196:	e0a4      	b.n	800b2e2 <_printf_i+0x1f6>
 800b198:	6820      	ldr	r0, [r4, #0]
 800b19a:	6829      	ldr	r1, [r5, #0]
 800b19c:	0606      	lsls	r6, r0, #24
 800b19e:	f101 0304 	add.w	r3, r1, #4
 800b1a2:	d50a      	bpl.n	800b1ba <_printf_i+0xce>
 800b1a4:	680e      	ldr	r6, [r1, #0]
 800b1a6:	602b      	str	r3, [r5, #0]
 800b1a8:	2e00      	cmp	r6, #0
 800b1aa:	da03      	bge.n	800b1b4 <_printf_i+0xc8>
 800b1ac:	232d      	movs	r3, #45	; 0x2d
 800b1ae:	4276      	negs	r6, r6
 800b1b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b1b4:	230a      	movs	r3, #10
 800b1b6:	485e      	ldr	r0, [pc, #376]	; (800b330 <_printf_i+0x244>)
 800b1b8:	e019      	b.n	800b1ee <_printf_i+0x102>
 800b1ba:	680e      	ldr	r6, [r1, #0]
 800b1bc:	f010 0f40 	tst.w	r0, #64	; 0x40
 800b1c0:	602b      	str	r3, [r5, #0]
 800b1c2:	bf18      	it	ne
 800b1c4:	b236      	sxthne	r6, r6
 800b1c6:	e7ef      	b.n	800b1a8 <_printf_i+0xbc>
 800b1c8:	682b      	ldr	r3, [r5, #0]
 800b1ca:	6820      	ldr	r0, [r4, #0]
 800b1cc:	1d19      	adds	r1, r3, #4
 800b1ce:	6029      	str	r1, [r5, #0]
 800b1d0:	0601      	lsls	r1, r0, #24
 800b1d2:	d501      	bpl.n	800b1d8 <_printf_i+0xec>
 800b1d4:	681e      	ldr	r6, [r3, #0]
 800b1d6:	e002      	b.n	800b1de <_printf_i+0xf2>
 800b1d8:	0646      	lsls	r6, r0, #25
 800b1da:	d5fb      	bpl.n	800b1d4 <_printf_i+0xe8>
 800b1dc:	881e      	ldrh	r6, [r3, #0]
 800b1de:	2f6f      	cmp	r7, #111	; 0x6f
 800b1e0:	bf0c      	ite	eq
 800b1e2:	2308      	moveq	r3, #8
 800b1e4:	230a      	movne	r3, #10
 800b1e6:	4852      	ldr	r0, [pc, #328]	; (800b330 <_printf_i+0x244>)
 800b1e8:	2100      	movs	r1, #0
 800b1ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800b1ee:	6865      	ldr	r5, [r4, #4]
 800b1f0:	2d00      	cmp	r5, #0
 800b1f2:	bfa8      	it	ge
 800b1f4:	6821      	ldrge	r1, [r4, #0]
 800b1f6:	60a5      	str	r5, [r4, #8]
 800b1f8:	bfa4      	itt	ge
 800b1fa:	f021 0104 	bicge.w	r1, r1, #4
 800b1fe:	6021      	strge	r1, [r4, #0]
 800b200:	b90e      	cbnz	r6, 800b206 <_printf_i+0x11a>
 800b202:	2d00      	cmp	r5, #0
 800b204:	d04d      	beq.n	800b2a2 <_printf_i+0x1b6>
 800b206:	4615      	mov	r5, r2
 800b208:	fbb6 f1f3 	udiv	r1, r6, r3
 800b20c:	fb03 6711 	mls	r7, r3, r1, r6
 800b210:	5dc7      	ldrb	r7, [r0, r7]
 800b212:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800b216:	4637      	mov	r7, r6
 800b218:	42bb      	cmp	r3, r7
 800b21a:	460e      	mov	r6, r1
 800b21c:	d9f4      	bls.n	800b208 <_printf_i+0x11c>
 800b21e:	2b08      	cmp	r3, #8
 800b220:	d10b      	bne.n	800b23a <_printf_i+0x14e>
 800b222:	6823      	ldr	r3, [r4, #0]
 800b224:	07de      	lsls	r6, r3, #31
 800b226:	d508      	bpl.n	800b23a <_printf_i+0x14e>
 800b228:	6923      	ldr	r3, [r4, #16]
 800b22a:	6861      	ldr	r1, [r4, #4]
 800b22c:	4299      	cmp	r1, r3
 800b22e:	bfde      	ittt	le
 800b230:	2330      	movle	r3, #48	; 0x30
 800b232:	f805 3c01 	strble.w	r3, [r5, #-1]
 800b236:	f105 35ff 	addle.w	r5, r5, #4294967295
 800b23a:	1b52      	subs	r2, r2, r5
 800b23c:	6122      	str	r2, [r4, #16]
 800b23e:	464b      	mov	r3, r9
 800b240:	4621      	mov	r1, r4
 800b242:	4640      	mov	r0, r8
 800b244:	f8cd a000 	str.w	sl, [sp]
 800b248:	aa03      	add	r2, sp, #12
 800b24a:	f7ff fedf 	bl	800b00c <_printf_common>
 800b24e:	3001      	adds	r0, #1
 800b250:	d14c      	bne.n	800b2ec <_printf_i+0x200>
 800b252:	f04f 30ff 	mov.w	r0, #4294967295
 800b256:	b004      	add	sp, #16
 800b258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b25c:	4834      	ldr	r0, [pc, #208]	; (800b330 <_printf_i+0x244>)
 800b25e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800b262:	6829      	ldr	r1, [r5, #0]
 800b264:	6823      	ldr	r3, [r4, #0]
 800b266:	f851 6b04 	ldr.w	r6, [r1], #4
 800b26a:	6029      	str	r1, [r5, #0]
 800b26c:	061d      	lsls	r5, r3, #24
 800b26e:	d514      	bpl.n	800b29a <_printf_i+0x1ae>
 800b270:	07df      	lsls	r7, r3, #31
 800b272:	bf44      	itt	mi
 800b274:	f043 0320 	orrmi.w	r3, r3, #32
 800b278:	6023      	strmi	r3, [r4, #0]
 800b27a:	b91e      	cbnz	r6, 800b284 <_printf_i+0x198>
 800b27c:	6823      	ldr	r3, [r4, #0]
 800b27e:	f023 0320 	bic.w	r3, r3, #32
 800b282:	6023      	str	r3, [r4, #0]
 800b284:	2310      	movs	r3, #16
 800b286:	e7af      	b.n	800b1e8 <_printf_i+0xfc>
 800b288:	6823      	ldr	r3, [r4, #0]
 800b28a:	f043 0320 	orr.w	r3, r3, #32
 800b28e:	6023      	str	r3, [r4, #0]
 800b290:	2378      	movs	r3, #120	; 0x78
 800b292:	4828      	ldr	r0, [pc, #160]	; (800b334 <_printf_i+0x248>)
 800b294:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b298:	e7e3      	b.n	800b262 <_printf_i+0x176>
 800b29a:	0659      	lsls	r1, r3, #25
 800b29c:	bf48      	it	mi
 800b29e:	b2b6      	uxthmi	r6, r6
 800b2a0:	e7e6      	b.n	800b270 <_printf_i+0x184>
 800b2a2:	4615      	mov	r5, r2
 800b2a4:	e7bb      	b.n	800b21e <_printf_i+0x132>
 800b2a6:	682b      	ldr	r3, [r5, #0]
 800b2a8:	6826      	ldr	r6, [r4, #0]
 800b2aa:	1d18      	adds	r0, r3, #4
 800b2ac:	6961      	ldr	r1, [r4, #20]
 800b2ae:	6028      	str	r0, [r5, #0]
 800b2b0:	0635      	lsls	r5, r6, #24
 800b2b2:	681b      	ldr	r3, [r3, #0]
 800b2b4:	d501      	bpl.n	800b2ba <_printf_i+0x1ce>
 800b2b6:	6019      	str	r1, [r3, #0]
 800b2b8:	e002      	b.n	800b2c0 <_printf_i+0x1d4>
 800b2ba:	0670      	lsls	r0, r6, #25
 800b2bc:	d5fb      	bpl.n	800b2b6 <_printf_i+0x1ca>
 800b2be:	8019      	strh	r1, [r3, #0]
 800b2c0:	2300      	movs	r3, #0
 800b2c2:	4615      	mov	r5, r2
 800b2c4:	6123      	str	r3, [r4, #16]
 800b2c6:	e7ba      	b.n	800b23e <_printf_i+0x152>
 800b2c8:	682b      	ldr	r3, [r5, #0]
 800b2ca:	2100      	movs	r1, #0
 800b2cc:	1d1a      	adds	r2, r3, #4
 800b2ce:	602a      	str	r2, [r5, #0]
 800b2d0:	681d      	ldr	r5, [r3, #0]
 800b2d2:	6862      	ldr	r2, [r4, #4]
 800b2d4:	4628      	mov	r0, r5
 800b2d6:	f002 fb93 	bl	800da00 <memchr>
 800b2da:	b108      	cbz	r0, 800b2e0 <_printf_i+0x1f4>
 800b2dc:	1b40      	subs	r0, r0, r5
 800b2de:	6060      	str	r0, [r4, #4]
 800b2e0:	6863      	ldr	r3, [r4, #4]
 800b2e2:	6123      	str	r3, [r4, #16]
 800b2e4:	2300      	movs	r3, #0
 800b2e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b2ea:	e7a8      	b.n	800b23e <_printf_i+0x152>
 800b2ec:	462a      	mov	r2, r5
 800b2ee:	4649      	mov	r1, r9
 800b2f0:	4640      	mov	r0, r8
 800b2f2:	6923      	ldr	r3, [r4, #16]
 800b2f4:	47d0      	blx	sl
 800b2f6:	3001      	adds	r0, #1
 800b2f8:	d0ab      	beq.n	800b252 <_printf_i+0x166>
 800b2fa:	6823      	ldr	r3, [r4, #0]
 800b2fc:	079b      	lsls	r3, r3, #30
 800b2fe:	d413      	bmi.n	800b328 <_printf_i+0x23c>
 800b300:	68e0      	ldr	r0, [r4, #12]
 800b302:	9b03      	ldr	r3, [sp, #12]
 800b304:	4298      	cmp	r0, r3
 800b306:	bfb8      	it	lt
 800b308:	4618      	movlt	r0, r3
 800b30a:	e7a4      	b.n	800b256 <_printf_i+0x16a>
 800b30c:	2301      	movs	r3, #1
 800b30e:	4632      	mov	r2, r6
 800b310:	4649      	mov	r1, r9
 800b312:	4640      	mov	r0, r8
 800b314:	47d0      	blx	sl
 800b316:	3001      	adds	r0, #1
 800b318:	d09b      	beq.n	800b252 <_printf_i+0x166>
 800b31a:	3501      	adds	r5, #1
 800b31c:	68e3      	ldr	r3, [r4, #12]
 800b31e:	9903      	ldr	r1, [sp, #12]
 800b320:	1a5b      	subs	r3, r3, r1
 800b322:	42ab      	cmp	r3, r5
 800b324:	dcf2      	bgt.n	800b30c <_printf_i+0x220>
 800b326:	e7eb      	b.n	800b300 <_printf_i+0x214>
 800b328:	2500      	movs	r5, #0
 800b32a:	f104 0619 	add.w	r6, r4, #25
 800b32e:	e7f5      	b.n	800b31c <_printf_i+0x230>
 800b330:	0801088c 	.word	0x0801088c
 800b334:	0801089d 	.word	0x0801089d

0800b338 <_scanf_float>:
 800b338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b33c:	b087      	sub	sp, #28
 800b33e:	9303      	str	r3, [sp, #12]
 800b340:	688b      	ldr	r3, [r1, #8]
 800b342:	4617      	mov	r7, r2
 800b344:	1e5a      	subs	r2, r3, #1
 800b346:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800b34a:	bf85      	ittet	hi
 800b34c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800b350:	195b      	addhi	r3, r3, r5
 800b352:	2300      	movls	r3, #0
 800b354:	9302      	strhi	r3, [sp, #8]
 800b356:	bf88      	it	hi
 800b358:	f240 135d 	movwhi	r3, #349	; 0x15d
 800b35c:	468b      	mov	fp, r1
 800b35e:	f04f 0500 	mov.w	r5, #0
 800b362:	bf8c      	ite	hi
 800b364:	608b      	strhi	r3, [r1, #8]
 800b366:	9302      	strls	r3, [sp, #8]
 800b368:	680b      	ldr	r3, [r1, #0]
 800b36a:	4680      	mov	r8, r0
 800b36c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800b370:	f84b 3b1c 	str.w	r3, [fp], #28
 800b374:	460c      	mov	r4, r1
 800b376:	465e      	mov	r6, fp
 800b378:	46aa      	mov	sl, r5
 800b37a:	46a9      	mov	r9, r5
 800b37c:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b380:	9501      	str	r5, [sp, #4]
 800b382:	68a2      	ldr	r2, [r4, #8]
 800b384:	b152      	cbz	r2, 800b39c <_scanf_float+0x64>
 800b386:	683b      	ldr	r3, [r7, #0]
 800b388:	781b      	ldrb	r3, [r3, #0]
 800b38a:	2b4e      	cmp	r3, #78	; 0x4e
 800b38c:	d864      	bhi.n	800b458 <_scanf_float+0x120>
 800b38e:	2b40      	cmp	r3, #64	; 0x40
 800b390:	d83c      	bhi.n	800b40c <_scanf_float+0xd4>
 800b392:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800b396:	b2c8      	uxtb	r0, r1
 800b398:	280e      	cmp	r0, #14
 800b39a:	d93a      	bls.n	800b412 <_scanf_float+0xda>
 800b39c:	f1b9 0f00 	cmp.w	r9, #0
 800b3a0:	d003      	beq.n	800b3aa <_scanf_float+0x72>
 800b3a2:	6823      	ldr	r3, [r4, #0]
 800b3a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b3a8:	6023      	str	r3, [r4, #0]
 800b3aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b3ae:	f1ba 0f01 	cmp.w	sl, #1
 800b3b2:	f200 8113 	bhi.w	800b5dc <_scanf_float+0x2a4>
 800b3b6:	455e      	cmp	r6, fp
 800b3b8:	f200 8105 	bhi.w	800b5c6 <_scanf_float+0x28e>
 800b3bc:	2501      	movs	r5, #1
 800b3be:	4628      	mov	r0, r5
 800b3c0:	b007      	add	sp, #28
 800b3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3c6:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800b3ca:	2a0d      	cmp	r2, #13
 800b3cc:	d8e6      	bhi.n	800b39c <_scanf_float+0x64>
 800b3ce:	a101      	add	r1, pc, #4	; (adr r1, 800b3d4 <_scanf_float+0x9c>)
 800b3d0:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800b3d4:	0800b513 	.word	0x0800b513
 800b3d8:	0800b39d 	.word	0x0800b39d
 800b3dc:	0800b39d 	.word	0x0800b39d
 800b3e0:	0800b39d 	.word	0x0800b39d
 800b3e4:	0800b573 	.word	0x0800b573
 800b3e8:	0800b54b 	.word	0x0800b54b
 800b3ec:	0800b39d 	.word	0x0800b39d
 800b3f0:	0800b39d 	.word	0x0800b39d
 800b3f4:	0800b521 	.word	0x0800b521
 800b3f8:	0800b39d 	.word	0x0800b39d
 800b3fc:	0800b39d 	.word	0x0800b39d
 800b400:	0800b39d 	.word	0x0800b39d
 800b404:	0800b39d 	.word	0x0800b39d
 800b408:	0800b4d9 	.word	0x0800b4d9
 800b40c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800b410:	e7db      	b.n	800b3ca <_scanf_float+0x92>
 800b412:	290e      	cmp	r1, #14
 800b414:	d8c2      	bhi.n	800b39c <_scanf_float+0x64>
 800b416:	a001      	add	r0, pc, #4	; (adr r0, 800b41c <_scanf_float+0xe4>)
 800b418:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800b41c:	0800b4cb 	.word	0x0800b4cb
 800b420:	0800b39d 	.word	0x0800b39d
 800b424:	0800b4cb 	.word	0x0800b4cb
 800b428:	0800b55f 	.word	0x0800b55f
 800b42c:	0800b39d 	.word	0x0800b39d
 800b430:	0800b479 	.word	0x0800b479
 800b434:	0800b4b5 	.word	0x0800b4b5
 800b438:	0800b4b5 	.word	0x0800b4b5
 800b43c:	0800b4b5 	.word	0x0800b4b5
 800b440:	0800b4b5 	.word	0x0800b4b5
 800b444:	0800b4b5 	.word	0x0800b4b5
 800b448:	0800b4b5 	.word	0x0800b4b5
 800b44c:	0800b4b5 	.word	0x0800b4b5
 800b450:	0800b4b5 	.word	0x0800b4b5
 800b454:	0800b4b5 	.word	0x0800b4b5
 800b458:	2b6e      	cmp	r3, #110	; 0x6e
 800b45a:	d809      	bhi.n	800b470 <_scanf_float+0x138>
 800b45c:	2b60      	cmp	r3, #96	; 0x60
 800b45e:	d8b2      	bhi.n	800b3c6 <_scanf_float+0x8e>
 800b460:	2b54      	cmp	r3, #84	; 0x54
 800b462:	d077      	beq.n	800b554 <_scanf_float+0x21c>
 800b464:	2b59      	cmp	r3, #89	; 0x59
 800b466:	d199      	bne.n	800b39c <_scanf_float+0x64>
 800b468:	2d07      	cmp	r5, #7
 800b46a:	d197      	bne.n	800b39c <_scanf_float+0x64>
 800b46c:	2508      	movs	r5, #8
 800b46e:	e029      	b.n	800b4c4 <_scanf_float+0x18c>
 800b470:	2b74      	cmp	r3, #116	; 0x74
 800b472:	d06f      	beq.n	800b554 <_scanf_float+0x21c>
 800b474:	2b79      	cmp	r3, #121	; 0x79
 800b476:	e7f6      	b.n	800b466 <_scanf_float+0x12e>
 800b478:	6821      	ldr	r1, [r4, #0]
 800b47a:	05c8      	lsls	r0, r1, #23
 800b47c:	d51a      	bpl.n	800b4b4 <_scanf_float+0x17c>
 800b47e:	9b02      	ldr	r3, [sp, #8]
 800b480:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800b484:	6021      	str	r1, [r4, #0]
 800b486:	f109 0901 	add.w	r9, r9, #1
 800b48a:	b11b      	cbz	r3, 800b494 <_scanf_float+0x15c>
 800b48c:	3b01      	subs	r3, #1
 800b48e:	3201      	adds	r2, #1
 800b490:	9302      	str	r3, [sp, #8]
 800b492:	60a2      	str	r2, [r4, #8]
 800b494:	68a3      	ldr	r3, [r4, #8]
 800b496:	3b01      	subs	r3, #1
 800b498:	60a3      	str	r3, [r4, #8]
 800b49a:	6923      	ldr	r3, [r4, #16]
 800b49c:	3301      	adds	r3, #1
 800b49e:	6123      	str	r3, [r4, #16]
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	3b01      	subs	r3, #1
 800b4a4:	2b00      	cmp	r3, #0
 800b4a6:	607b      	str	r3, [r7, #4]
 800b4a8:	f340 8084 	ble.w	800b5b4 <_scanf_float+0x27c>
 800b4ac:	683b      	ldr	r3, [r7, #0]
 800b4ae:	3301      	adds	r3, #1
 800b4b0:	603b      	str	r3, [r7, #0]
 800b4b2:	e766      	b.n	800b382 <_scanf_float+0x4a>
 800b4b4:	eb1a 0f05 	cmn.w	sl, r5
 800b4b8:	f47f af70 	bne.w	800b39c <_scanf_float+0x64>
 800b4bc:	6822      	ldr	r2, [r4, #0]
 800b4be:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800b4c2:	6022      	str	r2, [r4, #0]
 800b4c4:	f806 3b01 	strb.w	r3, [r6], #1
 800b4c8:	e7e4      	b.n	800b494 <_scanf_float+0x15c>
 800b4ca:	6822      	ldr	r2, [r4, #0]
 800b4cc:	0610      	lsls	r0, r2, #24
 800b4ce:	f57f af65 	bpl.w	800b39c <_scanf_float+0x64>
 800b4d2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b4d6:	e7f4      	b.n	800b4c2 <_scanf_float+0x18a>
 800b4d8:	f1ba 0f00 	cmp.w	sl, #0
 800b4dc:	d10e      	bne.n	800b4fc <_scanf_float+0x1c4>
 800b4de:	f1b9 0f00 	cmp.w	r9, #0
 800b4e2:	d10e      	bne.n	800b502 <_scanf_float+0x1ca>
 800b4e4:	6822      	ldr	r2, [r4, #0]
 800b4e6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b4ea:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b4ee:	d108      	bne.n	800b502 <_scanf_float+0x1ca>
 800b4f0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b4f4:	f04f 0a01 	mov.w	sl, #1
 800b4f8:	6022      	str	r2, [r4, #0]
 800b4fa:	e7e3      	b.n	800b4c4 <_scanf_float+0x18c>
 800b4fc:	f1ba 0f02 	cmp.w	sl, #2
 800b500:	d055      	beq.n	800b5ae <_scanf_float+0x276>
 800b502:	2d01      	cmp	r5, #1
 800b504:	d002      	beq.n	800b50c <_scanf_float+0x1d4>
 800b506:	2d04      	cmp	r5, #4
 800b508:	f47f af48 	bne.w	800b39c <_scanf_float+0x64>
 800b50c:	3501      	adds	r5, #1
 800b50e:	b2ed      	uxtb	r5, r5
 800b510:	e7d8      	b.n	800b4c4 <_scanf_float+0x18c>
 800b512:	f1ba 0f01 	cmp.w	sl, #1
 800b516:	f47f af41 	bne.w	800b39c <_scanf_float+0x64>
 800b51a:	f04f 0a02 	mov.w	sl, #2
 800b51e:	e7d1      	b.n	800b4c4 <_scanf_float+0x18c>
 800b520:	b97d      	cbnz	r5, 800b542 <_scanf_float+0x20a>
 800b522:	f1b9 0f00 	cmp.w	r9, #0
 800b526:	f47f af3c 	bne.w	800b3a2 <_scanf_float+0x6a>
 800b52a:	6822      	ldr	r2, [r4, #0]
 800b52c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800b530:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800b534:	f47f af39 	bne.w	800b3aa <_scanf_float+0x72>
 800b538:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b53c:	2501      	movs	r5, #1
 800b53e:	6022      	str	r2, [r4, #0]
 800b540:	e7c0      	b.n	800b4c4 <_scanf_float+0x18c>
 800b542:	2d03      	cmp	r5, #3
 800b544:	d0e2      	beq.n	800b50c <_scanf_float+0x1d4>
 800b546:	2d05      	cmp	r5, #5
 800b548:	e7de      	b.n	800b508 <_scanf_float+0x1d0>
 800b54a:	2d02      	cmp	r5, #2
 800b54c:	f47f af26 	bne.w	800b39c <_scanf_float+0x64>
 800b550:	2503      	movs	r5, #3
 800b552:	e7b7      	b.n	800b4c4 <_scanf_float+0x18c>
 800b554:	2d06      	cmp	r5, #6
 800b556:	f47f af21 	bne.w	800b39c <_scanf_float+0x64>
 800b55a:	2507      	movs	r5, #7
 800b55c:	e7b2      	b.n	800b4c4 <_scanf_float+0x18c>
 800b55e:	6822      	ldr	r2, [r4, #0]
 800b560:	0591      	lsls	r1, r2, #22
 800b562:	f57f af1b 	bpl.w	800b39c <_scanf_float+0x64>
 800b566:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800b56a:	6022      	str	r2, [r4, #0]
 800b56c:	f8cd 9004 	str.w	r9, [sp, #4]
 800b570:	e7a8      	b.n	800b4c4 <_scanf_float+0x18c>
 800b572:	6822      	ldr	r2, [r4, #0]
 800b574:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800b578:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800b57c:	d006      	beq.n	800b58c <_scanf_float+0x254>
 800b57e:	0550      	lsls	r0, r2, #21
 800b580:	f57f af0c 	bpl.w	800b39c <_scanf_float+0x64>
 800b584:	f1b9 0f00 	cmp.w	r9, #0
 800b588:	f43f af0f 	beq.w	800b3aa <_scanf_float+0x72>
 800b58c:	0591      	lsls	r1, r2, #22
 800b58e:	bf58      	it	pl
 800b590:	9901      	ldrpl	r1, [sp, #4]
 800b592:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800b596:	bf58      	it	pl
 800b598:	eba9 0101 	subpl.w	r1, r9, r1
 800b59c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800b5a0:	f04f 0900 	mov.w	r9, #0
 800b5a4:	bf58      	it	pl
 800b5a6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800b5aa:	6022      	str	r2, [r4, #0]
 800b5ac:	e78a      	b.n	800b4c4 <_scanf_float+0x18c>
 800b5ae:	f04f 0a03 	mov.w	sl, #3
 800b5b2:	e787      	b.n	800b4c4 <_scanf_float+0x18c>
 800b5b4:	4639      	mov	r1, r7
 800b5b6:	4640      	mov	r0, r8
 800b5b8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800b5bc:	4798      	blx	r3
 800b5be:	2800      	cmp	r0, #0
 800b5c0:	f43f aedf 	beq.w	800b382 <_scanf_float+0x4a>
 800b5c4:	e6ea      	b.n	800b39c <_scanf_float+0x64>
 800b5c6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b5ca:	463a      	mov	r2, r7
 800b5cc:	4640      	mov	r0, r8
 800b5ce:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b5d2:	4798      	blx	r3
 800b5d4:	6923      	ldr	r3, [r4, #16]
 800b5d6:	3b01      	subs	r3, #1
 800b5d8:	6123      	str	r3, [r4, #16]
 800b5da:	e6ec      	b.n	800b3b6 <_scanf_float+0x7e>
 800b5dc:	1e6b      	subs	r3, r5, #1
 800b5de:	2b06      	cmp	r3, #6
 800b5e0:	d825      	bhi.n	800b62e <_scanf_float+0x2f6>
 800b5e2:	2d02      	cmp	r5, #2
 800b5e4:	d836      	bhi.n	800b654 <_scanf_float+0x31c>
 800b5e6:	455e      	cmp	r6, fp
 800b5e8:	f67f aee8 	bls.w	800b3bc <_scanf_float+0x84>
 800b5ec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b5f0:	463a      	mov	r2, r7
 800b5f2:	4640      	mov	r0, r8
 800b5f4:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b5f8:	4798      	blx	r3
 800b5fa:	6923      	ldr	r3, [r4, #16]
 800b5fc:	3b01      	subs	r3, #1
 800b5fe:	6123      	str	r3, [r4, #16]
 800b600:	e7f1      	b.n	800b5e6 <_scanf_float+0x2ae>
 800b602:	9802      	ldr	r0, [sp, #8]
 800b604:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b608:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800b60c:	463a      	mov	r2, r7
 800b60e:	9002      	str	r0, [sp, #8]
 800b610:	4640      	mov	r0, r8
 800b612:	4798      	blx	r3
 800b614:	6923      	ldr	r3, [r4, #16]
 800b616:	3b01      	subs	r3, #1
 800b618:	6123      	str	r3, [r4, #16]
 800b61a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b61e:	fa5f fa8a 	uxtb.w	sl, sl
 800b622:	f1ba 0f02 	cmp.w	sl, #2
 800b626:	d1ec      	bne.n	800b602 <_scanf_float+0x2ca>
 800b628:	3d03      	subs	r5, #3
 800b62a:	b2ed      	uxtb	r5, r5
 800b62c:	1b76      	subs	r6, r6, r5
 800b62e:	6823      	ldr	r3, [r4, #0]
 800b630:	05da      	lsls	r2, r3, #23
 800b632:	d52f      	bpl.n	800b694 <_scanf_float+0x35c>
 800b634:	055b      	lsls	r3, r3, #21
 800b636:	d510      	bpl.n	800b65a <_scanf_float+0x322>
 800b638:	455e      	cmp	r6, fp
 800b63a:	f67f aebf 	bls.w	800b3bc <_scanf_float+0x84>
 800b63e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b642:	463a      	mov	r2, r7
 800b644:	4640      	mov	r0, r8
 800b646:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b64a:	4798      	blx	r3
 800b64c:	6923      	ldr	r3, [r4, #16]
 800b64e:	3b01      	subs	r3, #1
 800b650:	6123      	str	r3, [r4, #16]
 800b652:	e7f1      	b.n	800b638 <_scanf_float+0x300>
 800b654:	46aa      	mov	sl, r5
 800b656:	9602      	str	r6, [sp, #8]
 800b658:	e7df      	b.n	800b61a <_scanf_float+0x2e2>
 800b65a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800b65e:	6923      	ldr	r3, [r4, #16]
 800b660:	2965      	cmp	r1, #101	; 0x65
 800b662:	f103 33ff 	add.w	r3, r3, #4294967295
 800b666:	f106 35ff 	add.w	r5, r6, #4294967295
 800b66a:	6123      	str	r3, [r4, #16]
 800b66c:	d00c      	beq.n	800b688 <_scanf_float+0x350>
 800b66e:	2945      	cmp	r1, #69	; 0x45
 800b670:	d00a      	beq.n	800b688 <_scanf_float+0x350>
 800b672:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b676:	463a      	mov	r2, r7
 800b678:	4640      	mov	r0, r8
 800b67a:	4798      	blx	r3
 800b67c:	6923      	ldr	r3, [r4, #16]
 800b67e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800b682:	3b01      	subs	r3, #1
 800b684:	1eb5      	subs	r5, r6, #2
 800b686:	6123      	str	r3, [r4, #16]
 800b688:	463a      	mov	r2, r7
 800b68a:	4640      	mov	r0, r8
 800b68c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b690:	4798      	blx	r3
 800b692:	462e      	mov	r6, r5
 800b694:	6825      	ldr	r5, [r4, #0]
 800b696:	f015 0510 	ands.w	r5, r5, #16
 800b69a:	d155      	bne.n	800b748 <_scanf_float+0x410>
 800b69c:	7035      	strb	r5, [r6, #0]
 800b69e:	6823      	ldr	r3, [r4, #0]
 800b6a0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800b6a4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b6a8:	d11b      	bne.n	800b6e2 <_scanf_float+0x3aa>
 800b6aa:	9b01      	ldr	r3, [sp, #4]
 800b6ac:	454b      	cmp	r3, r9
 800b6ae:	eba3 0209 	sub.w	r2, r3, r9
 800b6b2:	d123      	bne.n	800b6fc <_scanf_float+0x3c4>
 800b6b4:	2200      	movs	r2, #0
 800b6b6:	4659      	mov	r1, fp
 800b6b8:	4640      	mov	r0, r8
 800b6ba:	f000 fee9 	bl	800c490 <_strtod_r>
 800b6be:	6822      	ldr	r2, [r4, #0]
 800b6c0:	9b03      	ldr	r3, [sp, #12]
 800b6c2:	f012 0f02 	tst.w	r2, #2
 800b6c6:	4606      	mov	r6, r0
 800b6c8:	460f      	mov	r7, r1
 800b6ca:	681b      	ldr	r3, [r3, #0]
 800b6cc:	d021      	beq.n	800b712 <_scanf_float+0x3da>
 800b6ce:	1d1a      	adds	r2, r3, #4
 800b6d0:	9903      	ldr	r1, [sp, #12]
 800b6d2:	600a      	str	r2, [r1, #0]
 800b6d4:	681b      	ldr	r3, [r3, #0]
 800b6d6:	e9c3 6700 	strd	r6, r7, [r3]
 800b6da:	68e3      	ldr	r3, [r4, #12]
 800b6dc:	3301      	adds	r3, #1
 800b6de:	60e3      	str	r3, [r4, #12]
 800b6e0:	e66d      	b.n	800b3be <_scanf_float+0x86>
 800b6e2:	9b04      	ldr	r3, [sp, #16]
 800b6e4:	2b00      	cmp	r3, #0
 800b6e6:	d0e5      	beq.n	800b6b4 <_scanf_float+0x37c>
 800b6e8:	9905      	ldr	r1, [sp, #20]
 800b6ea:	230a      	movs	r3, #10
 800b6ec:	462a      	mov	r2, r5
 800b6ee:	4640      	mov	r0, r8
 800b6f0:	3101      	adds	r1, #1
 800b6f2:	f000 ff4f 	bl	800c594 <_strtol_r>
 800b6f6:	9b04      	ldr	r3, [sp, #16]
 800b6f8:	9e05      	ldr	r6, [sp, #20]
 800b6fa:	1ac2      	subs	r2, r0, r3
 800b6fc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800b700:	429e      	cmp	r6, r3
 800b702:	bf28      	it	cs
 800b704:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800b708:	4630      	mov	r0, r6
 800b70a:	4910      	ldr	r1, [pc, #64]	; (800b74c <_scanf_float+0x414>)
 800b70c:	f000 f826 	bl	800b75c <siprintf>
 800b710:	e7d0      	b.n	800b6b4 <_scanf_float+0x37c>
 800b712:	f012 0f04 	tst.w	r2, #4
 800b716:	f103 0204 	add.w	r2, r3, #4
 800b71a:	d1d9      	bne.n	800b6d0 <_scanf_float+0x398>
 800b71c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800b720:	f8cc 2000 	str.w	r2, [ip]
 800b724:	f8d3 8000 	ldr.w	r8, [r3]
 800b728:	4602      	mov	r2, r0
 800b72a:	460b      	mov	r3, r1
 800b72c:	f7f5 f990 	bl	8000a50 <__aeabi_dcmpun>
 800b730:	b128      	cbz	r0, 800b73e <_scanf_float+0x406>
 800b732:	4807      	ldr	r0, [pc, #28]	; (800b750 <_scanf_float+0x418>)
 800b734:	f000 f80e 	bl	800b754 <nanf>
 800b738:	f8c8 0000 	str.w	r0, [r8]
 800b73c:	e7cd      	b.n	800b6da <_scanf_float+0x3a2>
 800b73e:	4630      	mov	r0, r6
 800b740:	4639      	mov	r1, r7
 800b742:	f7f5 f9e3 	bl	8000b0c <__aeabi_d2f>
 800b746:	e7f7      	b.n	800b738 <_scanf_float+0x400>
 800b748:	2500      	movs	r5, #0
 800b74a:	e638      	b.n	800b3be <_scanf_float+0x86>
 800b74c:	080108ae 	.word	0x080108ae
 800b750:	08010cd3 	.word	0x08010cd3

0800b754 <nanf>:
 800b754:	4800      	ldr	r0, [pc, #0]	; (800b758 <nanf+0x4>)
 800b756:	4770      	bx	lr
 800b758:	7fc00000 	.word	0x7fc00000

0800b75c <siprintf>:
 800b75c:	b40e      	push	{r1, r2, r3}
 800b75e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800b762:	b500      	push	{lr}
 800b764:	b09c      	sub	sp, #112	; 0x70
 800b766:	ab1d      	add	r3, sp, #116	; 0x74
 800b768:	9002      	str	r0, [sp, #8]
 800b76a:	9006      	str	r0, [sp, #24]
 800b76c:	9107      	str	r1, [sp, #28]
 800b76e:	9104      	str	r1, [sp, #16]
 800b770:	4808      	ldr	r0, [pc, #32]	; (800b794 <siprintf+0x38>)
 800b772:	4909      	ldr	r1, [pc, #36]	; (800b798 <siprintf+0x3c>)
 800b774:	f853 2b04 	ldr.w	r2, [r3], #4
 800b778:	9105      	str	r1, [sp, #20]
 800b77a:	6800      	ldr	r0, [r0, #0]
 800b77c:	a902      	add	r1, sp, #8
 800b77e:	9301      	str	r3, [sp, #4]
 800b780:	f002 ff50 	bl	800e624 <_svfiprintf_r>
 800b784:	2200      	movs	r2, #0
 800b786:	9b02      	ldr	r3, [sp, #8]
 800b788:	701a      	strb	r2, [r3, #0]
 800b78a:	b01c      	add	sp, #112	; 0x70
 800b78c:	f85d eb04 	ldr.w	lr, [sp], #4
 800b790:	b003      	add	sp, #12
 800b792:	4770      	bx	lr
 800b794:	200001a0 	.word	0x200001a0
 800b798:	ffff0208 	.word	0xffff0208

0800b79c <siscanf>:
 800b79c:	b40e      	push	{r1, r2, r3}
 800b79e:	f44f 7201 	mov.w	r2, #516	; 0x204
 800b7a2:	b530      	push	{r4, r5, lr}
 800b7a4:	b09c      	sub	sp, #112	; 0x70
 800b7a6:	ac1f      	add	r4, sp, #124	; 0x7c
 800b7a8:	f854 5b04 	ldr.w	r5, [r4], #4
 800b7ac:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b7b0:	9002      	str	r0, [sp, #8]
 800b7b2:	9006      	str	r0, [sp, #24]
 800b7b4:	f7f4 fcee 	bl	8000194 <strlen>
 800b7b8:	4b0b      	ldr	r3, [pc, #44]	; (800b7e8 <siscanf+0x4c>)
 800b7ba:	9003      	str	r0, [sp, #12]
 800b7bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800b7be:	2300      	movs	r3, #0
 800b7c0:	930f      	str	r3, [sp, #60]	; 0x3c
 800b7c2:	9314      	str	r3, [sp, #80]	; 0x50
 800b7c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b7c8:	9007      	str	r0, [sp, #28]
 800b7ca:	4808      	ldr	r0, [pc, #32]	; (800b7ec <siscanf+0x50>)
 800b7cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b7d0:	462a      	mov	r2, r5
 800b7d2:	4623      	mov	r3, r4
 800b7d4:	a902      	add	r1, sp, #8
 800b7d6:	6800      	ldr	r0, [r0, #0]
 800b7d8:	9401      	str	r4, [sp, #4]
 800b7da:	f003 f87d 	bl	800e8d8 <__ssvfiscanf_r>
 800b7de:	b01c      	add	sp, #112	; 0x70
 800b7e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b7e4:	b003      	add	sp, #12
 800b7e6:	4770      	bx	lr
 800b7e8:	0800b813 	.word	0x0800b813
 800b7ec:	200001a0 	.word	0x200001a0

0800b7f0 <__sread>:
 800b7f0:	b510      	push	{r4, lr}
 800b7f2:	460c      	mov	r4, r1
 800b7f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b7f8:	f003 fb3a 	bl	800ee70 <_read_r>
 800b7fc:	2800      	cmp	r0, #0
 800b7fe:	bfab      	itete	ge
 800b800:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800b802:	89a3      	ldrhlt	r3, [r4, #12]
 800b804:	181b      	addge	r3, r3, r0
 800b806:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800b80a:	bfac      	ite	ge
 800b80c:	6563      	strge	r3, [r4, #84]	; 0x54
 800b80e:	81a3      	strhlt	r3, [r4, #12]
 800b810:	bd10      	pop	{r4, pc}

0800b812 <__seofread>:
 800b812:	2000      	movs	r0, #0
 800b814:	4770      	bx	lr

0800b816 <__swrite>:
 800b816:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b81a:	461f      	mov	r7, r3
 800b81c:	898b      	ldrh	r3, [r1, #12]
 800b81e:	4605      	mov	r5, r0
 800b820:	05db      	lsls	r3, r3, #23
 800b822:	460c      	mov	r4, r1
 800b824:	4616      	mov	r6, r2
 800b826:	d505      	bpl.n	800b834 <__swrite+0x1e>
 800b828:	2302      	movs	r3, #2
 800b82a:	2200      	movs	r2, #0
 800b82c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b830:	f002 f8ba 	bl	800d9a8 <_lseek_r>
 800b834:	89a3      	ldrh	r3, [r4, #12]
 800b836:	4632      	mov	r2, r6
 800b838:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b83c:	81a3      	strh	r3, [r4, #12]
 800b83e:	4628      	mov	r0, r5
 800b840:	463b      	mov	r3, r7
 800b842:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800b846:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b84a:	f000 bea5 	b.w	800c598 <_write_r>

0800b84e <__sseek>:
 800b84e:	b510      	push	{r4, lr}
 800b850:	460c      	mov	r4, r1
 800b852:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b856:	f002 f8a7 	bl	800d9a8 <_lseek_r>
 800b85a:	1c43      	adds	r3, r0, #1
 800b85c:	89a3      	ldrh	r3, [r4, #12]
 800b85e:	bf15      	itete	ne
 800b860:	6560      	strne	r0, [r4, #84]	; 0x54
 800b862:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800b866:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800b86a:	81a3      	strheq	r3, [r4, #12]
 800b86c:	bf18      	it	ne
 800b86e:	81a3      	strhne	r3, [r4, #12]
 800b870:	bd10      	pop	{r4, pc}

0800b872 <__sclose>:
 800b872:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b876:	f000 bea1 	b.w	800c5bc <_close_r>

0800b87a <sulp>:
 800b87a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b87e:	460f      	mov	r7, r1
 800b880:	4690      	mov	r8, r2
 800b882:	f002 fc3b 	bl	800e0fc <__ulp>
 800b886:	4604      	mov	r4, r0
 800b888:	460d      	mov	r5, r1
 800b88a:	f1b8 0f00 	cmp.w	r8, #0
 800b88e:	d011      	beq.n	800b8b4 <sulp+0x3a>
 800b890:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800b894:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800b898:	2b00      	cmp	r3, #0
 800b89a:	dd0b      	ble.n	800b8b4 <sulp+0x3a>
 800b89c:	2400      	movs	r4, #0
 800b89e:	051b      	lsls	r3, r3, #20
 800b8a0:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800b8a4:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800b8a8:	4622      	mov	r2, r4
 800b8aa:	462b      	mov	r3, r5
 800b8ac:	f7f4 fe36 	bl	800051c <__aeabi_dmul>
 800b8b0:	4604      	mov	r4, r0
 800b8b2:	460d      	mov	r5, r1
 800b8b4:	4620      	mov	r0, r4
 800b8b6:	4629      	mov	r1, r5
 800b8b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8bc:	0000      	movs	r0, r0
	...

0800b8c0 <_strtod_l>:
 800b8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8c4:	469b      	mov	fp, r3
 800b8c6:	2300      	movs	r3, #0
 800b8c8:	b09f      	sub	sp, #124	; 0x7c
 800b8ca:	931a      	str	r3, [sp, #104]	; 0x68
 800b8cc:	4b9e      	ldr	r3, [pc, #632]	; (800bb48 <_strtod_l+0x288>)
 800b8ce:	4682      	mov	sl, r0
 800b8d0:	681f      	ldr	r7, [r3, #0]
 800b8d2:	460e      	mov	r6, r1
 800b8d4:	4638      	mov	r0, r7
 800b8d6:	9215      	str	r2, [sp, #84]	; 0x54
 800b8d8:	f7f4 fc5c 	bl	8000194 <strlen>
 800b8dc:	f04f 0800 	mov.w	r8, #0
 800b8e0:	4604      	mov	r4, r0
 800b8e2:	f04f 0900 	mov.w	r9, #0
 800b8e6:	9619      	str	r6, [sp, #100]	; 0x64
 800b8e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b8ea:	781a      	ldrb	r2, [r3, #0]
 800b8ec:	2a2b      	cmp	r2, #43	; 0x2b
 800b8ee:	d04c      	beq.n	800b98a <_strtod_l+0xca>
 800b8f0:	d83a      	bhi.n	800b968 <_strtod_l+0xa8>
 800b8f2:	2a0d      	cmp	r2, #13
 800b8f4:	d833      	bhi.n	800b95e <_strtod_l+0x9e>
 800b8f6:	2a08      	cmp	r2, #8
 800b8f8:	d833      	bhi.n	800b962 <_strtod_l+0xa2>
 800b8fa:	2a00      	cmp	r2, #0
 800b8fc:	d03d      	beq.n	800b97a <_strtod_l+0xba>
 800b8fe:	2300      	movs	r3, #0
 800b900:	930a      	str	r3, [sp, #40]	; 0x28
 800b902:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b904:	782b      	ldrb	r3, [r5, #0]
 800b906:	2b30      	cmp	r3, #48	; 0x30
 800b908:	f040 80aa 	bne.w	800ba60 <_strtod_l+0x1a0>
 800b90c:	786b      	ldrb	r3, [r5, #1]
 800b90e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800b912:	2b58      	cmp	r3, #88	; 0x58
 800b914:	d166      	bne.n	800b9e4 <_strtod_l+0x124>
 800b916:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b918:	4650      	mov	r0, sl
 800b91a:	9301      	str	r3, [sp, #4]
 800b91c:	ab1a      	add	r3, sp, #104	; 0x68
 800b91e:	9300      	str	r3, [sp, #0]
 800b920:	4a8a      	ldr	r2, [pc, #552]	; (800bb4c <_strtod_l+0x28c>)
 800b922:	f8cd b008 	str.w	fp, [sp, #8]
 800b926:	ab1b      	add	r3, sp, #108	; 0x6c
 800b928:	a919      	add	r1, sp, #100	; 0x64
 800b92a:	f001 fd3b 	bl	800d3a4 <__gethex>
 800b92e:	f010 0607 	ands.w	r6, r0, #7
 800b932:	4604      	mov	r4, r0
 800b934:	d005      	beq.n	800b942 <_strtod_l+0x82>
 800b936:	2e06      	cmp	r6, #6
 800b938:	d129      	bne.n	800b98e <_strtod_l+0xce>
 800b93a:	2300      	movs	r3, #0
 800b93c:	3501      	adds	r5, #1
 800b93e:	9519      	str	r5, [sp, #100]	; 0x64
 800b940:	930a      	str	r3, [sp, #40]	; 0x28
 800b942:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b944:	2b00      	cmp	r3, #0
 800b946:	f040 858a 	bne.w	800c45e <_strtod_l+0xb9e>
 800b94a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b94c:	b1d3      	cbz	r3, 800b984 <_strtod_l+0xc4>
 800b94e:	4642      	mov	r2, r8
 800b950:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800b954:	4610      	mov	r0, r2
 800b956:	4619      	mov	r1, r3
 800b958:	b01f      	add	sp, #124	; 0x7c
 800b95a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b95e:	2a20      	cmp	r2, #32
 800b960:	d1cd      	bne.n	800b8fe <_strtod_l+0x3e>
 800b962:	3301      	adds	r3, #1
 800b964:	9319      	str	r3, [sp, #100]	; 0x64
 800b966:	e7bf      	b.n	800b8e8 <_strtod_l+0x28>
 800b968:	2a2d      	cmp	r2, #45	; 0x2d
 800b96a:	d1c8      	bne.n	800b8fe <_strtod_l+0x3e>
 800b96c:	2201      	movs	r2, #1
 800b96e:	920a      	str	r2, [sp, #40]	; 0x28
 800b970:	1c5a      	adds	r2, r3, #1
 800b972:	9219      	str	r2, [sp, #100]	; 0x64
 800b974:	785b      	ldrb	r3, [r3, #1]
 800b976:	2b00      	cmp	r3, #0
 800b978:	d1c3      	bne.n	800b902 <_strtod_l+0x42>
 800b97a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b97c:	9619      	str	r6, [sp, #100]	; 0x64
 800b97e:	2b00      	cmp	r3, #0
 800b980:	f040 856b 	bne.w	800c45a <_strtod_l+0xb9a>
 800b984:	4642      	mov	r2, r8
 800b986:	464b      	mov	r3, r9
 800b988:	e7e4      	b.n	800b954 <_strtod_l+0x94>
 800b98a:	2200      	movs	r2, #0
 800b98c:	e7ef      	b.n	800b96e <_strtod_l+0xae>
 800b98e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b990:	b13a      	cbz	r2, 800b9a2 <_strtod_l+0xe2>
 800b992:	2135      	movs	r1, #53	; 0x35
 800b994:	a81c      	add	r0, sp, #112	; 0x70
 800b996:	f002 fcb5 	bl	800e304 <__copybits>
 800b99a:	4650      	mov	r0, sl
 800b99c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b99e:	f002 f87d 	bl	800da9c <_Bfree>
 800b9a2:	3e01      	subs	r6, #1
 800b9a4:	2e04      	cmp	r6, #4
 800b9a6:	d806      	bhi.n	800b9b6 <_strtod_l+0xf6>
 800b9a8:	e8df f006 	tbb	[pc, r6]
 800b9ac:	1714030a 	.word	0x1714030a
 800b9b0:	0a          	.byte	0x0a
 800b9b1:	00          	.byte	0x00
 800b9b2:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 800b9b6:	0721      	lsls	r1, r4, #28
 800b9b8:	d5c3      	bpl.n	800b942 <_strtod_l+0x82>
 800b9ba:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800b9be:	e7c0      	b.n	800b942 <_strtod_l+0x82>
 800b9c0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800b9c2:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 800b9c6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800b9ca:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800b9ce:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800b9d2:	e7f0      	b.n	800b9b6 <_strtod_l+0xf6>
 800b9d4:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800bb50 <_strtod_l+0x290>
 800b9d8:	e7ed      	b.n	800b9b6 <_strtod_l+0xf6>
 800b9da:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800b9de:	f04f 38ff 	mov.w	r8, #4294967295
 800b9e2:	e7e8      	b.n	800b9b6 <_strtod_l+0xf6>
 800b9e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b9e6:	1c5a      	adds	r2, r3, #1
 800b9e8:	9219      	str	r2, [sp, #100]	; 0x64
 800b9ea:	785b      	ldrb	r3, [r3, #1]
 800b9ec:	2b30      	cmp	r3, #48	; 0x30
 800b9ee:	d0f9      	beq.n	800b9e4 <_strtod_l+0x124>
 800b9f0:	2b00      	cmp	r3, #0
 800b9f2:	d0a6      	beq.n	800b942 <_strtod_l+0x82>
 800b9f4:	2301      	movs	r3, #1
 800b9f6:	9307      	str	r3, [sp, #28]
 800b9f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b9fa:	220a      	movs	r2, #10
 800b9fc:	9308      	str	r3, [sp, #32]
 800b9fe:	2300      	movs	r3, #0
 800ba00:	469b      	mov	fp, r3
 800ba02:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800ba06:	9819      	ldr	r0, [sp, #100]	; 0x64
 800ba08:	7805      	ldrb	r5, [r0, #0]
 800ba0a:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800ba0e:	b2d9      	uxtb	r1, r3
 800ba10:	2909      	cmp	r1, #9
 800ba12:	d927      	bls.n	800ba64 <_strtod_l+0x1a4>
 800ba14:	4622      	mov	r2, r4
 800ba16:	4639      	mov	r1, r7
 800ba18:	f003 fa8a 	bl	800ef30 <strncmp>
 800ba1c:	2800      	cmp	r0, #0
 800ba1e:	d033      	beq.n	800ba88 <_strtod_l+0x1c8>
 800ba20:	2000      	movs	r0, #0
 800ba22:	462a      	mov	r2, r5
 800ba24:	465c      	mov	r4, fp
 800ba26:	4603      	mov	r3, r0
 800ba28:	9004      	str	r0, [sp, #16]
 800ba2a:	2a65      	cmp	r2, #101	; 0x65
 800ba2c:	d001      	beq.n	800ba32 <_strtod_l+0x172>
 800ba2e:	2a45      	cmp	r2, #69	; 0x45
 800ba30:	d114      	bne.n	800ba5c <_strtod_l+0x19c>
 800ba32:	b91c      	cbnz	r4, 800ba3c <_strtod_l+0x17c>
 800ba34:	9a07      	ldr	r2, [sp, #28]
 800ba36:	4302      	orrs	r2, r0
 800ba38:	d09f      	beq.n	800b97a <_strtod_l+0xba>
 800ba3a:	2400      	movs	r4, #0
 800ba3c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800ba3e:	1c72      	adds	r2, r6, #1
 800ba40:	9219      	str	r2, [sp, #100]	; 0x64
 800ba42:	7872      	ldrb	r2, [r6, #1]
 800ba44:	2a2b      	cmp	r2, #43	; 0x2b
 800ba46:	d079      	beq.n	800bb3c <_strtod_l+0x27c>
 800ba48:	2a2d      	cmp	r2, #45	; 0x2d
 800ba4a:	f000 8083 	beq.w	800bb54 <_strtod_l+0x294>
 800ba4e:	2700      	movs	r7, #0
 800ba50:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800ba54:	2909      	cmp	r1, #9
 800ba56:	f240 8083 	bls.w	800bb60 <_strtod_l+0x2a0>
 800ba5a:	9619      	str	r6, [sp, #100]	; 0x64
 800ba5c:	2500      	movs	r5, #0
 800ba5e:	e09f      	b.n	800bba0 <_strtod_l+0x2e0>
 800ba60:	2300      	movs	r3, #0
 800ba62:	e7c8      	b.n	800b9f6 <_strtod_l+0x136>
 800ba64:	f1bb 0f08 	cmp.w	fp, #8
 800ba68:	bfd5      	itete	le
 800ba6a:	9906      	ldrle	r1, [sp, #24]
 800ba6c:	9905      	ldrgt	r1, [sp, #20]
 800ba6e:	fb02 3301 	mlale	r3, r2, r1, r3
 800ba72:	fb02 3301 	mlagt	r3, r2, r1, r3
 800ba76:	f100 0001 	add.w	r0, r0, #1
 800ba7a:	bfd4      	ite	le
 800ba7c:	9306      	strle	r3, [sp, #24]
 800ba7e:	9305      	strgt	r3, [sp, #20]
 800ba80:	f10b 0b01 	add.w	fp, fp, #1
 800ba84:	9019      	str	r0, [sp, #100]	; 0x64
 800ba86:	e7be      	b.n	800ba06 <_strtod_l+0x146>
 800ba88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ba8a:	191a      	adds	r2, r3, r4
 800ba8c:	9219      	str	r2, [sp, #100]	; 0x64
 800ba8e:	5d1a      	ldrb	r2, [r3, r4]
 800ba90:	f1bb 0f00 	cmp.w	fp, #0
 800ba94:	d036      	beq.n	800bb04 <_strtod_l+0x244>
 800ba96:	465c      	mov	r4, fp
 800ba98:	9004      	str	r0, [sp, #16]
 800ba9a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800ba9e:	2b09      	cmp	r3, #9
 800baa0:	d912      	bls.n	800bac8 <_strtod_l+0x208>
 800baa2:	2301      	movs	r3, #1
 800baa4:	e7c1      	b.n	800ba2a <_strtod_l+0x16a>
 800baa6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800baa8:	3001      	adds	r0, #1
 800baaa:	1c5a      	adds	r2, r3, #1
 800baac:	9219      	str	r2, [sp, #100]	; 0x64
 800baae:	785a      	ldrb	r2, [r3, #1]
 800bab0:	2a30      	cmp	r2, #48	; 0x30
 800bab2:	d0f8      	beq.n	800baa6 <_strtod_l+0x1e6>
 800bab4:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800bab8:	2b08      	cmp	r3, #8
 800baba:	f200 84d5 	bhi.w	800c468 <_strtod_l+0xba8>
 800babe:	9004      	str	r0, [sp, #16]
 800bac0:	2000      	movs	r0, #0
 800bac2:	4604      	mov	r4, r0
 800bac4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bac6:	9308      	str	r3, [sp, #32]
 800bac8:	3a30      	subs	r2, #48	; 0x30
 800baca:	f100 0301 	add.w	r3, r0, #1
 800bace:	d013      	beq.n	800baf8 <_strtod_l+0x238>
 800bad0:	9904      	ldr	r1, [sp, #16]
 800bad2:	1905      	adds	r5, r0, r4
 800bad4:	4419      	add	r1, r3
 800bad6:	9104      	str	r1, [sp, #16]
 800bad8:	4623      	mov	r3, r4
 800bada:	210a      	movs	r1, #10
 800badc:	42ab      	cmp	r3, r5
 800bade:	d113      	bne.n	800bb08 <_strtod_l+0x248>
 800bae0:	1823      	adds	r3, r4, r0
 800bae2:	2b08      	cmp	r3, #8
 800bae4:	f104 0401 	add.w	r4, r4, #1
 800bae8:	4404      	add	r4, r0
 800baea:	dc1b      	bgt.n	800bb24 <_strtod_l+0x264>
 800baec:	230a      	movs	r3, #10
 800baee:	9906      	ldr	r1, [sp, #24]
 800baf0:	fb03 2301 	mla	r3, r3, r1, r2
 800baf4:	9306      	str	r3, [sp, #24]
 800baf6:	2300      	movs	r3, #0
 800baf8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bafa:	4618      	mov	r0, r3
 800bafc:	1c51      	adds	r1, r2, #1
 800bafe:	9119      	str	r1, [sp, #100]	; 0x64
 800bb00:	7852      	ldrb	r2, [r2, #1]
 800bb02:	e7ca      	b.n	800ba9a <_strtod_l+0x1da>
 800bb04:	4658      	mov	r0, fp
 800bb06:	e7d3      	b.n	800bab0 <_strtod_l+0x1f0>
 800bb08:	2b08      	cmp	r3, #8
 800bb0a:	dc04      	bgt.n	800bb16 <_strtod_l+0x256>
 800bb0c:	9f06      	ldr	r7, [sp, #24]
 800bb0e:	434f      	muls	r7, r1
 800bb10:	9706      	str	r7, [sp, #24]
 800bb12:	3301      	adds	r3, #1
 800bb14:	e7e2      	b.n	800badc <_strtod_l+0x21c>
 800bb16:	1c5f      	adds	r7, r3, #1
 800bb18:	2f10      	cmp	r7, #16
 800bb1a:	bfde      	ittt	le
 800bb1c:	9f05      	ldrle	r7, [sp, #20]
 800bb1e:	434f      	mulle	r7, r1
 800bb20:	9705      	strle	r7, [sp, #20]
 800bb22:	e7f6      	b.n	800bb12 <_strtod_l+0x252>
 800bb24:	2c10      	cmp	r4, #16
 800bb26:	bfdf      	itttt	le
 800bb28:	230a      	movle	r3, #10
 800bb2a:	9905      	ldrle	r1, [sp, #20]
 800bb2c:	fb03 2301 	mlale	r3, r3, r1, r2
 800bb30:	9305      	strle	r3, [sp, #20]
 800bb32:	e7e0      	b.n	800baf6 <_strtod_l+0x236>
 800bb34:	2300      	movs	r3, #0
 800bb36:	9304      	str	r3, [sp, #16]
 800bb38:	2301      	movs	r3, #1
 800bb3a:	e77b      	b.n	800ba34 <_strtod_l+0x174>
 800bb3c:	2700      	movs	r7, #0
 800bb3e:	1cb2      	adds	r2, r6, #2
 800bb40:	9219      	str	r2, [sp, #100]	; 0x64
 800bb42:	78b2      	ldrb	r2, [r6, #2]
 800bb44:	e784      	b.n	800ba50 <_strtod_l+0x190>
 800bb46:	bf00      	nop
 800bb48:	08010b00 	.word	0x08010b00
 800bb4c:	080108b4 	.word	0x080108b4
 800bb50:	7ff00000 	.word	0x7ff00000
 800bb54:	2701      	movs	r7, #1
 800bb56:	e7f2      	b.n	800bb3e <_strtod_l+0x27e>
 800bb58:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bb5a:	1c51      	adds	r1, r2, #1
 800bb5c:	9119      	str	r1, [sp, #100]	; 0x64
 800bb5e:	7852      	ldrb	r2, [r2, #1]
 800bb60:	2a30      	cmp	r2, #48	; 0x30
 800bb62:	d0f9      	beq.n	800bb58 <_strtod_l+0x298>
 800bb64:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800bb68:	2908      	cmp	r1, #8
 800bb6a:	f63f af77 	bhi.w	800ba5c <_strtod_l+0x19c>
 800bb6e:	f04f 0e0a 	mov.w	lr, #10
 800bb72:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800bb76:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bb78:	9209      	str	r2, [sp, #36]	; 0x24
 800bb7a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bb7c:	1c51      	adds	r1, r2, #1
 800bb7e:	9119      	str	r1, [sp, #100]	; 0x64
 800bb80:	7852      	ldrb	r2, [r2, #1]
 800bb82:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800bb86:	2d09      	cmp	r5, #9
 800bb88:	d935      	bls.n	800bbf6 <_strtod_l+0x336>
 800bb8a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800bb8c:	1b49      	subs	r1, r1, r5
 800bb8e:	2908      	cmp	r1, #8
 800bb90:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800bb94:	dc02      	bgt.n	800bb9c <_strtod_l+0x2dc>
 800bb96:	4565      	cmp	r5, ip
 800bb98:	bfa8      	it	ge
 800bb9a:	4665      	movge	r5, ip
 800bb9c:	b107      	cbz	r7, 800bba0 <_strtod_l+0x2e0>
 800bb9e:	426d      	negs	r5, r5
 800bba0:	2c00      	cmp	r4, #0
 800bba2:	d14c      	bne.n	800bc3e <_strtod_l+0x37e>
 800bba4:	9907      	ldr	r1, [sp, #28]
 800bba6:	4301      	orrs	r1, r0
 800bba8:	f47f aecb 	bne.w	800b942 <_strtod_l+0x82>
 800bbac:	2b00      	cmp	r3, #0
 800bbae:	f47f aee4 	bne.w	800b97a <_strtod_l+0xba>
 800bbb2:	2a69      	cmp	r2, #105	; 0x69
 800bbb4:	d026      	beq.n	800bc04 <_strtod_l+0x344>
 800bbb6:	dc23      	bgt.n	800bc00 <_strtod_l+0x340>
 800bbb8:	2a49      	cmp	r2, #73	; 0x49
 800bbba:	d023      	beq.n	800bc04 <_strtod_l+0x344>
 800bbbc:	2a4e      	cmp	r2, #78	; 0x4e
 800bbbe:	f47f aedc 	bne.w	800b97a <_strtod_l+0xba>
 800bbc2:	499d      	ldr	r1, [pc, #628]	; (800be38 <_strtod_l+0x578>)
 800bbc4:	a819      	add	r0, sp, #100	; 0x64
 800bbc6:	f001 fe3b 	bl	800d840 <__match>
 800bbca:	2800      	cmp	r0, #0
 800bbcc:	f43f aed5 	beq.w	800b97a <_strtod_l+0xba>
 800bbd0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bbd2:	781b      	ldrb	r3, [r3, #0]
 800bbd4:	2b28      	cmp	r3, #40	; 0x28
 800bbd6:	d12c      	bne.n	800bc32 <_strtod_l+0x372>
 800bbd8:	4998      	ldr	r1, [pc, #608]	; (800be3c <_strtod_l+0x57c>)
 800bbda:	aa1c      	add	r2, sp, #112	; 0x70
 800bbdc:	a819      	add	r0, sp, #100	; 0x64
 800bbde:	f001 fe43 	bl	800d868 <__hexnan>
 800bbe2:	2805      	cmp	r0, #5
 800bbe4:	d125      	bne.n	800bc32 <_strtod_l+0x372>
 800bbe6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800bbe8:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800bbec:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800bbf0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800bbf4:	e6a5      	b.n	800b942 <_strtod_l+0x82>
 800bbf6:	fb0e 2c0c 	mla	ip, lr, ip, r2
 800bbfa:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800bbfe:	e7bc      	b.n	800bb7a <_strtod_l+0x2ba>
 800bc00:	2a6e      	cmp	r2, #110	; 0x6e
 800bc02:	e7dc      	b.n	800bbbe <_strtod_l+0x2fe>
 800bc04:	498e      	ldr	r1, [pc, #568]	; (800be40 <_strtod_l+0x580>)
 800bc06:	a819      	add	r0, sp, #100	; 0x64
 800bc08:	f001 fe1a 	bl	800d840 <__match>
 800bc0c:	2800      	cmp	r0, #0
 800bc0e:	f43f aeb4 	beq.w	800b97a <_strtod_l+0xba>
 800bc12:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bc14:	498b      	ldr	r1, [pc, #556]	; (800be44 <_strtod_l+0x584>)
 800bc16:	3b01      	subs	r3, #1
 800bc18:	a819      	add	r0, sp, #100	; 0x64
 800bc1a:	9319      	str	r3, [sp, #100]	; 0x64
 800bc1c:	f001 fe10 	bl	800d840 <__match>
 800bc20:	b910      	cbnz	r0, 800bc28 <_strtod_l+0x368>
 800bc22:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bc24:	3301      	adds	r3, #1
 800bc26:	9319      	str	r3, [sp, #100]	; 0x64
 800bc28:	f04f 0800 	mov.w	r8, #0
 800bc2c:	f8df 9218 	ldr.w	r9, [pc, #536]	; 800be48 <_strtod_l+0x588>
 800bc30:	e687      	b.n	800b942 <_strtod_l+0x82>
 800bc32:	4886      	ldr	r0, [pc, #536]	; (800be4c <_strtod_l+0x58c>)
 800bc34:	f003 f92e 	bl	800ee94 <nan>
 800bc38:	4680      	mov	r8, r0
 800bc3a:	4689      	mov	r9, r1
 800bc3c:	e681      	b.n	800b942 <_strtod_l+0x82>
 800bc3e:	9b04      	ldr	r3, [sp, #16]
 800bc40:	f1bb 0f00 	cmp.w	fp, #0
 800bc44:	bf08      	it	eq
 800bc46:	46a3      	moveq	fp, r4
 800bc48:	1aeb      	subs	r3, r5, r3
 800bc4a:	2c10      	cmp	r4, #16
 800bc4c:	9806      	ldr	r0, [sp, #24]
 800bc4e:	4626      	mov	r6, r4
 800bc50:	9307      	str	r3, [sp, #28]
 800bc52:	bfa8      	it	ge
 800bc54:	2610      	movge	r6, #16
 800bc56:	f7f4 fbe7 	bl	8000428 <__aeabi_ui2d>
 800bc5a:	2c09      	cmp	r4, #9
 800bc5c:	4680      	mov	r8, r0
 800bc5e:	4689      	mov	r9, r1
 800bc60:	dd13      	ble.n	800bc8a <_strtod_l+0x3ca>
 800bc62:	4b7b      	ldr	r3, [pc, #492]	; (800be50 <_strtod_l+0x590>)
 800bc64:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800bc68:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800bc6c:	f7f4 fc56 	bl	800051c <__aeabi_dmul>
 800bc70:	4680      	mov	r8, r0
 800bc72:	9805      	ldr	r0, [sp, #20]
 800bc74:	4689      	mov	r9, r1
 800bc76:	f7f4 fbd7 	bl	8000428 <__aeabi_ui2d>
 800bc7a:	4602      	mov	r2, r0
 800bc7c:	460b      	mov	r3, r1
 800bc7e:	4640      	mov	r0, r8
 800bc80:	4649      	mov	r1, r9
 800bc82:	f7f4 fa95 	bl	80001b0 <__adddf3>
 800bc86:	4680      	mov	r8, r0
 800bc88:	4689      	mov	r9, r1
 800bc8a:	2c0f      	cmp	r4, #15
 800bc8c:	dc36      	bgt.n	800bcfc <_strtod_l+0x43c>
 800bc8e:	9b07      	ldr	r3, [sp, #28]
 800bc90:	2b00      	cmp	r3, #0
 800bc92:	f43f ae56 	beq.w	800b942 <_strtod_l+0x82>
 800bc96:	dd22      	ble.n	800bcde <_strtod_l+0x41e>
 800bc98:	2b16      	cmp	r3, #22
 800bc9a:	dc09      	bgt.n	800bcb0 <_strtod_l+0x3f0>
 800bc9c:	496c      	ldr	r1, [pc, #432]	; (800be50 <_strtod_l+0x590>)
 800bc9e:	4642      	mov	r2, r8
 800bca0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800bca4:	464b      	mov	r3, r9
 800bca6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bcaa:	f7f4 fc37 	bl	800051c <__aeabi_dmul>
 800bcae:	e7c3      	b.n	800bc38 <_strtod_l+0x378>
 800bcb0:	9a07      	ldr	r2, [sp, #28]
 800bcb2:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800bcb6:	4293      	cmp	r3, r2
 800bcb8:	db20      	blt.n	800bcfc <_strtod_l+0x43c>
 800bcba:	4d65      	ldr	r5, [pc, #404]	; (800be50 <_strtod_l+0x590>)
 800bcbc:	f1c4 040f 	rsb	r4, r4, #15
 800bcc0:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 800bcc4:	4642      	mov	r2, r8
 800bcc6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bcca:	464b      	mov	r3, r9
 800bccc:	f7f4 fc26 	bl	800051c <__aeabi_dmul>
 800bcd0:	9b07      	ldr	r3, [sp, #28]
 800bcd2:	1b1c      	subs	r4, r3, r4
 800bcd4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800bcd8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bcdc:	e7e5      	b.n	800bcaa <_strtod_l+0x3ea>
 800bcde:	9b07      	ldr	r3, [sp, #28]
 800bce0:	3316      	adds	r3, #22
 800bce2:	db0b      	blt.n	800bcfc <_strtod_l+0x43c>
 800bce4:	9b04      	ldr	r3, [sp, #16]
 800bce6:	4640      	mov	r0, r8
 800bce8:	1b5d      	subs	r5, r3, r5
 800bcea:	4b59      	ldr	r3, [pc, #356]	; (800be50 <_strtod_l+0x590>)
 800bcec:	4649      	mov	r1, r9
 800bcee:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800bcf2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bcf6:	f7f4 fd3b 	bl	8000770 <__aeabi_ddiv>
 800bcfa:	e79d      	b.n	800bc38 <_strtod_l+0x378>
 800bcfc:	9b07      	ldr	r3, [sp, #28]
 800bcfe:	1ba6      	subs	r6, r4, r6
 800bd00:	441e      	add	r6, r3
 800bd02:	2e00      	cmp	r6, #0
 800bd04:	dd74      	ble.n	800bdf0 <_strtod_l+0x530>
 800bd06:	f016 030f 	ands.w	r3, r6, #15
 800bd0a:	d00a      	beq.n	800bd22 <_strtod_l+0x462>
 800bd0c:	4950      	ldr	r1, [pc, #320]	; (800be50 <_strtod_l+0x590>)
 800bd0e:	4642      	mov	r2, r8
 800bd10:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800bd14:	e9d1 0100 	ldrd	r0, r1, [r1]
 800bd18:	464b      	mov	r3, r9
 800bd1a:	f7f4 fbff 	bl	800051c <__aeabi_dmul>
 800bd1e:	4680      	mov	r8, r0
 800bd20:	4689      	mov	r9, r1
 800bd22:	f036 060f 	bics.w	r6, r6, #15
 800bd26:	d052      	beq.n	800bdce <_strtod_l+0x50e>
 800bd28:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800bd2c:	dd27      	ble.n	800bd7e <_strtod_l+0x4be>
 800bd2e:	f04f 0b00 	mov.w	fp, #0
 800bd32:	f8cd b010 	str.w	fp, [sp, #16]
 800bd36:	f8cd b020 	str.w	fp, [sp, #32]
 800bd3a:	f8cd b018 	str.w	fp, [sp, #24]
 800bd3e:	2322      	movs	r3, #34	; 0x22
 800bd40:	f04f 0800 	mov.w	r8, #0
 800bd44:	f8df 9100 	ldr.w	r9, [pc, #256]	; 800be48 <_strtod_l+0x588>
 800bd48:	f8ca 3000 	str.w	r3, [sl]
 800bd4c:	9b08      	ldr	r3, [sp, #32]
 800bd4e:	2b00      	cmp	r3, #0
 800bd50:	f43f adf7 	beq.w	800b942 <_strtod_l+0x82>
 800bd54:	4650      	mov	r0, sl
 800bd56:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bd58:	f001 fea0 	bl	800da9c <_Bfree>
 800bd5c:	4650      	mov	r0, sl
 800bd5e:	9906      	ldr	r1, [sp, #24]
 800bd60:	f001 fe9c 	bl	800da9c <_Bfree>
 800bd64:	4650      	mov	r0, sl
 800bd66:	9904      	ldr	r1, [sp, #16]
 800bd68:	f001 fe98 	bl	800da9c <_Bfree>
 800bd6c:	4650      	mov	r0, sl
 800bd6e:	9908      	ldr	r1, [sp, #32]
 800bd70:	f001 fe94 	bl	800da9c <_Bfree>
 800bd74:	4659      	mov	r1, fp
 800bd76:	4650      	mov	r0, sl
 800bd78:	f001 fe90 	bl	800da9c <_Bfree>
 800bd7c:	e5e1      	b.n	800b942 <_strtod_l+0x82>
 800bd7e:	4b35      	ldr	r3, [pc, #212]	; (800be54 <_strtod_l+0x594>)
 800bd80:	4640      	mov	r0, r8
 800bd82:	9305      	str	r3, [sp, #20]
 800bd84:	2300      	movs	r3, #0
 800bd86:	4649      	mov	r1, r9
 800bd88:	461f      	mov	r7, r3
 800bd8a:	1136      	asrs	r6, r6, #4
 800bd8c:	2e01      	cmp	r6, #1
 800bd8e:	dc21      	bgt.n	800bdd4 <_strtod_l+0x514>
 800bd90:	b10b      	cbz	r3, 800bd96 <_strtod_l+0x4d6>
 800bd92:	4680      	mov	r8, r0
 800bd94:	4689      	mov	r9, r1
 800bd96:	4b2f      	ldr	r3, [pc, #188]	; (800be54 <_strtod_l+0x594>)
 800bd98:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800bd9c:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800bda0:	4642      	mov	r2, r8
 800bda2:	e9d7 0100 	ldrd	r0, r1, [r7]
 800bda6:	464b      	mov	r3, r9
 800bda8:	f7f4 fbb8 	bl	800051c <__aeabi_dmul>
 800bdac:	4b26      	ldr	r3, [pc, #152]	; (800be48 <_strtod_l+0x588>)
 800bdae:	460a      	mov	r2, r1
 800bdb0:	400b      	ands	r3, r1
 800bdb2:	4929      	ldr	r1, [pc, #164]	; (800be58 <_strtod_l+0x598>)
 800bdb4:	4680      	mov	r8, r0
 800bdb6:	428b      	cmp	r3, r1
 800bdb8:	d8b9      	bhi.n	800bd2e <_strtod_l+0x46e>
 800bdba:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800bdbe:	428b      	cmp	r3, r1
 800bdc0:	bf86      	itte	hi
 800bdc2:	f04f 38ff 	movhi.w	r8, #4294967295
 800bdc6:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 800be5c <_strtod_l+0x59c>
 800bdca:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800bdce:	2300      	movs	r3, #0
 800bdd0:	9305      	str	r3, [sp, #20]
 800bdd2:	e07f      	b.n	800bed4 <_strtod_l+0x614>
 800bdd4:	07f2      	lsls	r2, r6, #31
 800bdd6:	d505      	bpl.n	800bde4 <_strtod_l+0x524>
 800bdd8:	9b05      	ldr	r3, [sp, #20]
 800bdda:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bdde:	f7f4 fb9d 	bl	800051c <__aeabi_dmul>
 800bde2:	2301      	movs	r3, #1
 800bde4:	9a05      	ldr	r2, [sp, #20]
 800bde6:	3701      	adds	r7, #1
 800bde8:	3208      	adds	r2, #8
 800bdea:	1076      	asrs	r6, r6, #1
 800bdec:	9205      	str	r2, [sp, #20]
 800bdee:	e7cd      	b.n	800bd8c <_strtod_l+0x4cc>
 800bdf0:	d0ed      	beq.n	800bdce <_strtod_l+0x50e>
 800bdf2:	4276      	negs	r6, r6
 800bdf4:	f016 020f 	ands.w	r2, r6, #15
 800bdf8:	d00a      	beq.n	800be10 <_strtod_l+0x550>
 800bdfa:	4b15      	ldr	r3, [pc, #84]	; (800be50 <_strtod_l+0x590>)
 800bdfc:	4640      	mov	r0, r8
 800bdfe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800be02:	4649      	mov	r1, r9
 800be04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800be08:	f7f4 fcb2 	bl	8000770 <__aeabi_ddiv>
 800be0c:	4680      	mov	r8, r0
 800be0e:	4689      	mov	r9, r1
 800be10:	1136      	asrs	r6, r6, #4
 800be12:	d0dc      	beq.n	800bdce <_strtod_l+0x50e>
 800be14:	2e1f      	cmp	r6, #31
 800be16:	dd23      	ble.n	800be60 <_strtod_l+0x5a0>
 800be18:	f04f 0b00 	mov.w	fp, #0
 800be1c:	f8cd b010 	str.w	fp, [sp, #16]
 800be20:	f8cd b020 	str.w	fp, [sp, #32]
 800be24:	f8cd b018 	str.w	fp, [sp, #24]
 800be28:	2322      	movs	r3, #34	; 0x22
 800be2a:	f04f 0800 	mov.w	r8, #0
 800be2e:	f04f 0900 	mov.w	r9, #0
 800be32:	f8ca 3000 	str.w	r3, [sl]
 800be36:	e789      	b.n	800bd4c <_strtod_l+0x48c>
 800be38:	08010889 	.word	0x08010889
 800be3c:	080108c8 	.word	0x080108c8
 800be40:	08010881 	.word	0x08010881
 800be44:	08010a0c 	.word	0x08010a0c
 800be48:	7ff00000 	.word	0x7ff00000
 800be4c:	08010cd3 	.word	0x08010cd3
 800be50:	08010b98 	.word	0x08010b98
 800be54:	08010b70 	.word	0x08010b70
 800be58:	7ca00000 	.word	0x7ca00000
 800be5c:	7fefffff 	.word	0x7fefffff
 800be60:	f016 0310 	ands.w	r3, r6, #16
 800be64:	bf18      	it	ne
 800be66:	236a      	movne	r3, #106	; 0x6a
 800be68:	4640      	mov	r0, r8
 800be6a:	9305      	str	r3, [sp, #20]
 800be6c:	4649      	mov	r1, r9
 800be6e:	2300      	movs	r3, #0
 800be70:	4fb0      	ldr	r7, [pc, #704]	; (800c134 <_strtod_l+0x874>)
 800be72:	07f2      	lsls	r2, r6, #31
 800be74:	d504      	bpl.n	800be80 <_strtod_l+0x5c0>
 800be76:	e9d7 2300 	ldrd	r2, r3, [r7]
 800be7a:	f7f4 fb4f 	bl	800051c <__aeabi_dmul>
 800be7e:	2301      	movs	r3, #1
 800be80:	1076      	asrs	r6, r6, #1
 800be82:	f107 0708 	add.w	r7, r7, #8
 800be86:	d1f4      	bne.n	800be72 <_strtod_l+0x5b2>
 800be88:	b10b      	cbz	r3, 800be8e <_strtod_l+0x5ce>
 800be8a:	4680      	mov	r8, r0
 800be8c:	4689      	mov	r9, r1
 800be8e:	9b05      	ldr	r3, [sp, #20]
 800be90:	b1c3      	cbz	r3, 800bec4 <_strtod_l+0x604>
 800be92:	f3c9 520a 	ubfx	r2, r9, #20, #11
 800be96:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800be9a:	2b00      	cmp	r3, #0
 800be9c:	4649      	mov	r1, r9
 800be9e:	dd11      	ble.n	800bec4 <_strtod_l+0x604>
 800bea0:	2b1f      	cmp	r3, #31
 800bea2:	f340 8127 	ble.w	800c0f4 <_strtod_l+0x834>
 800bea6:	2b34      	cmp	r3, #52	; 0x34
 800bea8:	bfd8      	it	le
 800beaa:	f04f 33ff 	movle.w	r3, #4294967295
 800beae:	f04f 0800 	mov.w	r8, #0
 800beb2:	bfcf      	iteee	gt
 800beb4:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800beb8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800bebc:	fa03 f202 	lslle.w	r2, r3, r2
 800bec0:	ea02 0901 	andle.w	r9, r2, r1
 800bec4:	2200      	movs	r2, #0
 800bec6:	2300      	movs	r3, #0
 800bec8:	4640      	mov	r0, r8
 800beca:	4649      	mov	r1, r9
 800becc:	f7f4 fd8e 	bl	80009ec <__aeabi_dcmpeq>
 800bed0:	2800      	cmp	r0, #0
 800bed2:	d1a1      	bne.n	800be18 <_strtod_l+0x558>
 800bed4:	9b06      	ldr	r3, [sp, #24]
 800bed6:	465a      	mov	r2, fp
 800bed8:	9300      	str	r3, [sp, #0]
 800beda:	4650      	mov	r0, sl
 800bedc:	4623      	mov	r3, r4
 800bede:	9908      	ldr	r1, [sp, #32]
 800bee0:	f001 fe44 	bl	800db6c <__s2b>
 800bee4:	9008      	str	r0, [sp, #32]
 800bee6:	2800      	cmp	r0, #0
 800bee8:	f43f af21 	beq.w	800bd2e <_strtod_l+0x46e>
 800beec:	9b04      	ldr	r3, [sp, #16]
 800beee:	f04f 0b00 	mov.w	fp, #0
 800bef2:	1b5d      	subs	r5, r3, r5
 800bef4:	9b07      	ldr	r3, [sp, #28]
 800bef6:	f8cd b010 	str.w	fp, [sp, #16]
 800befa:	2b00      	cmp	r3, #0
 800befc:	bfb4      	ite	lt
 800befe:	462b      	movlt	r3, r5
 800bf00:	2300      	movge	r3, #0
 800bf02:	930e      	str	r3, [sp, #56]	; 0x38
 800bf04:	9b07      	ldr	r3, [sp, #28]
 800bf06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800bf0a:	9314      	str	r3, [sp, #80]	; 0x50
 800bf0c:	9b08      	ldr	r3, [sp, #32]
 800bf0e:	4650      	mov	r0, sl
 800bf10:	6859      	ldr	r1, [r3, #4]
 800bf12:	f001 fd83 	bl	800da1c <_Balloc>
 800bf16:	9006      	str	r0, [sp, #24]
 800bf18:	2800      	cmp	r0, #0
 800bf1a:	f43f af10 	beq.w	800bd3e <_strtod_l+0x47e>
 800bf1e:	9b08      	ldr	r3, [sp, #32]
 800bf20:	300c      	adds	r0, #12
 800bf22:	691a      	ldr	r2, [r3, #16]
 800bf24:	f103 010c 	add.w	r1, r3, #12
 800bf28:	3202      	adds	r2, #2
 800bf2a:	0092      	lsls	r2, r2, #2
 800bf2c:	f7fe fd8e 	bl	800aa4c <memcpy>
 800bf30:	ab1c      	add	r3, sp, #112	; 0x70
 800bf32:	9301      	str	r3, [sp, #4]
 800bf34:	ab1b      	add	r3, sp, #108	; 0x6c
 800bf36:	9300      	str	r3, [sp, #0]
 800bf38:	4642      	mov	r2, r8
 800bf3a:	464b      	mov	r3, r9
 800bf3c:	4650      	mov	r0, sl
 800bf3e:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 800bf42:	f002 f955 	bl	800e1f0 <__d2b>
 800bf46:	901a      	str	r0, [sp, #104]	; 0x68
 800bf48:	2800      	cmp	r0, #0
 800bf4a:	f43f aef8 	beq.w	800bd3e <_strtod_l+0x47e>
 800bf4e:	2101      	movs	r1, #1
 800bf50:	4650      	mov	r0, sl
 800bf52:	f001 fea3 	bl	800dc9c <__i2b>
 800bf56:	4603      	mov	r3, r0
 800bf58:	9004      	str	r0, [sp, #16]
 800bf5a:	2800      	cmp	r0, #0
 800bf5c:	f43f aeef 	beq.w	800bd3e <_strtod_l+0x47e>
 800bf60:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800bf62:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bf64:	2d00      	cmp	r5, #0
 800bf66:	bfab      	itete	ge
 800bf68:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 800bf6a:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 800bf6c:	18ee      	addge	r6, r5, r3
 800bf6e:	1b5c      	sublt	r4, r3, r5
 800bf70:	9b05      	ldr	r3, [sp, #20]
 800bf72:	bfa8      	it	ge
 800bf74:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 800bf76:	eba5 0503 	sub.w	r5, r5, r3
 800bf7a:	4415      	add	r5, r2
 800bf7c:	4b6e      	ldr	r3, [pc, #440]	; (800c138 <_strtod_l+0x878>)
 800bf7e:	f105 35ff 	add.w	r5, r5, #4294967295
 800bf82:	bfb8      	it	lt
 800bf84:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800bf86:	429d      	cmp	r5, r3
 800bf88:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800bf8c:	f280 80c4 	bge.w	800c118 <_strtod_l+0x858>
 800bf90:	1b5b      	subs	r3, r3, r5
 800bf92:	2b1f      	cmp	r3, #31
 800bf94:	f04f 0701 	mov.w	r7, #1
 800bf98:	eba2 0203 	sub.w	r2, r2, r3
 800bf9c:	f300 80b1 	bgt.w	800c102 <_strtod_l+0x842>
 800bfa0:	2500      	movs	r5, #0
 800bfa2:	fa07 f303 	lsl.w	r3, r7, r3
 800bfa6:	930f      	str	r3, [sp, #60]	; 0x3c
 800bfa8:	18b7      	adds	r7, r6, r2
 800bfaa:	9b05      	ldr	r3, [sp, #20]
 800bfac:	42be      	cmp	r6, r7
 800bfae:	4414      	add	r4, r2
 800bfb0:	441c      	add	r4, r3
 800bfb2:	4633      	mov	r3, r6
 800bfb4:	bfa8      	it	ge
 800bfb6:	463b      	movge	r3, r7
 800bfb8:	42a3      	cmp	r3, r4
 800bfba:	bfa8      	it	ge
 800bfbc:	4623      	movge	r3, r4
 800bfbe:	2b00      	cmp	r3, #0
 800bfc0:	bfc2      	ittt	gt
 800bfc2:	1aff      	subgt	r7, r7, r3
 800bfc4:	1ae4      	subgt	r4, r4, r3
 800bfc6:	1af6      	subgt	r6, r6, r3
 800bfc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	dd17      	ble.n	800bffe <_strtod_l+0x73e>
 800bfce:	461a      	mov	r2, r3
 800bfd0:	4650      	mov	r0, sl
 800bfd2:	9904      	ldr	r1, [sp, #16]
 800bfd4:	f001 ff20 	bl	800de18 <__pow5mult>
 800bfd8:	9004      	str	r0, [sp, #16]
 800bfda:	2800      	cmp	r0, #0
 800bfdc:	f43f aeaf 	beq.w	800bd3e <_strtod_l+0x47e>
 800bfe0:	4601      	mov	r1, r0
 800bfe2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800bfe4:	4650      	mov	r0, sl
 800bfe6:	f001 fe6f 	bl	800dcc8 <__multiply>
 800bfea:	9009      	str	r0, [sp, #36]	; 0x24
 800bfec:	2800      	cmp	r0, #0
 800bfee:	f43f aea6 	beq.w	800bd3e <_strtod_l+0x47e>
 800bff2:	4650      	mov	r0, sl
 800bff4:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bff6:	f001 fd51 	bl	800da9c <_Bfree>
 800bffa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bffc:	931a      	str	r3, [sp, #104]	; 0x68
 800bffe:	2f00      	cmp	r7, #0
 800c000:	f300 808e 	bgt.w	800c120 <_strtod_l+0x860>
 800c004:	9b07      	ldr	r3, [sp, #28]
 800c006:	2b00      	cmp	r3, #0
 800c008:	dd08      	ble.n	800c01c <_strtod_l+0x75c>
 800c00a:	4650      	mov	r0, sl
 800c00c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c00e:	9906      	ldr	r1, [sp, #24]
 800c010:	f001 ff02 	bl	800de18 <__pow5mult>
 800c014:	9006      	str	r0, [sp, #24]
 800c016:	2800      	cmp	r0, #0
 800c018:	f43f ae91 	beq.w	800bd3e <_strtod_l+0x47e>
 800c01c:	2c00      	cmp	r4, #0
 800c01e:	dd08      	ble.n	800c032 <_strtod_l+0x772>
 800c020:	4622      	mov	r2, r4
 800c022:	4650      	mov	r0, sl
 800c024:	9906      	ldr	r1, [sp, #24]
 800c026:	f001 ff51 	bl	800decc <__lshift>
 800c02a:	9006      	str	r0, [sp, #24]
 800c02c:	2800      	cmp	r0, #0
 800c02e:	f43f ae86 	beq.w	800bd3e <_strtod_l+0x47e>
 800c032:	2e00      	cmp	r6, #0
 800c034:	dd08      	ble.n	800c048 <_strtod_l+0x788>
 800c036:	4632      	mov	r2, r6
 800c038:	4650      	mov	r0, sl
 800c03a:	9904      	ldr	r1, [sp, #16]
 800c03c:	f001 ff46 	bl	800decc <__lshift>
 800c040:	9004      	str	r0, [sp, #16]
 800c042:	2800      	cmp	r0, #0
 800c044:	f43f ae7b 	beq.w	800bd3e <_strtod_l+0x47e>
 800c048:	4650      	mov	r0, sl
 800c04a:	9a06      	ldr	r2, [sp, #24]
 800c04c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c04e:	f001 ffc9 	bl	800dfe4 <__mdiff>
 800c052:	4683      	mov	fp, r0
 800c054:	2800      	cmp	r0, #0
 800c056:	f43f ae72 	beq.w	800bd3e <_strtod_l+0x47e>
 800c05a:	2400      	movs	r4, #0
 800c05c:	68c3      	ldr	r3, [r0, #12]
 800c05e:	9904      	ldr	r1, [sp, #16]
 800c060:	60c4      	str	r4, [r0, #12]
 800c062:	930b      	str	r3, [sp, #44]	; 0x2c
 800c064:	f001 ffa2 	bl	800dfac <__mcmp>
 800c068:	42a0      	cmp	r0, r4
 800c06a:	da6b      	bge.n	800c144 <_strtod_l+0x884>
 800c06c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c06e:	ea53 0308 	orrs.w	r3, r3, r8
 800c072:	f040 8091 	bne.w	800c198 <_strtod_l+0x8d8>
 800c076:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c07a:	2b00      	cmp	r3, #0
 800c07c:	f040 808c 	bne.w	800c198 <_strtod_l+0x8d8>
 800c080:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c084:	0d1b      	lsrs	r3, r3, #20
 800c086:	051b      	lsls	r3, r3, #20
 800c088:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800c08c:	f240 8084 	bls.w	800c198 <_strtod_l+0x8d8>
 800c090:	f8db 3014 	ldr.w	r3, [fp, #20]
 800c094:	b91b      	cbnz	r3, 800c09e <_strtod_l+0x7de>
 800c096:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c09a:	2b01      	cmp	r3, #1
 800c09c:	dd7c      	ble.n	800c198 <_strtod_l+0x8d8>
 800c09e:	4659      	mov	r1, fp
 800c0a0:	2201      	movs	r2, #1
 800c0a2:	4650      	mov	r0, sl
 800c0a4:	f001 ff12 	bl	800decc <__lshift>
 800c0a8:	9904      	ldr	r1, [sp, #16]
 800c0aa:	4683      	mov	fp, r0
 800c0ac:	f001 ff7e 	bl	800dfac <__mcmp>
 800c0b0:	2800      	cmp	r0, #0
 800c0b2:	dd71      	ble.n	800c198 <_strtod_l+0x8d8>
 800c0b4:	9905      	ldr	r1, [sp, #20]
 800c0b6:	464b      	mov	r3, r9
 800c0b8:	4a20      	ldr	r2, [pc, #128]	; (800c13c <_strtod_l+0x87c>)
 800c0ba:	2900      	cmp	r1, #0
 800c0bc:	f000 808c 	beq.w	800c1d8 <_strtod_l+0x918>
 800c0c0:	ea02 0109 	and.w	r1, r2, r9
 800c0c4:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800c0c8:	f300 8086 	bgt.w	800c1d8 <_strtod_l+0x918>
 800c0cc:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800c0d0:	f77f aeaa 	ble.w	800be28 <_strtod_l+0x568>
 800c0d4:	4640      	mov	r0, r8
 800c0d6:	4649      	mov	r1, r9
 800c0d8:	4b19      	ldr	r3, [pc, #100]	; (800c140 <_strtod_l+0x880>)
 800c0da:	2200      	movs	r2, #0
 800c0dc:	f7f4 fa1e 	bl	800051c <__aeabi_dmul>
 800c0e0:	460b      	mov	r3, r1
 800c0e2:	4303      	orrs	r3, r0
 800c0e4:	bf08      	it	eq
 800c0e6:	2322      	moveq	r3, #34	; 0x22
 800c0e8:	4680      	mov	r8, r0
 800c0ea:	4689      	mov	r9, r1
 800c0ec:	bf08      	it	eq
 800c0ee:	f8ca 3000 	streq.w	r3, [sl]
 800c0f2:	e62f      	b.n	800bd54 <_strtod_l+0x494>
 800c0f4:	f04f 32ff 	mov.w	r2, #4294967295
 800c0f8:	fa02 f303 	lsl.w	r3, r2, r3
 800c0fc:	ea03 0808 	and.w	r8, r3, r8
 800c100:	e6e0      	b.n	800bec4 <_strtod_l+0x604>
 800c102:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800c106:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800c10a:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800c10e:	35e2      	adds	r5, #226	; 0xe2
 800c110:	fa07 f505 	lsl.w	r5, r7, r5
 800c114:	970f      	str	r7, [sp, #60]	; 0x3c
 800c116:	e747      	b.n	800bfa8 <_strtod_l+0x6e8>
 800c118:	2301      	movs	r3, #1
 800c11a:	2500      	movs	r5, #0
 800c11c:	930f      	str	r3, [sp, #60]	; 0x3c
 800c11e:	e743      	b.n	800bfa8 <_strtod_l+0x6e8>
 800c120:	463a      	mov	r2, r7
 800c122:	4650      	mov	r0, sl
 800c124:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c126:	f001 fed1 	bl	800decc <__lshift>
 800c12a:	901a      	str	r0, [sp, #104]	; 0x68
 800c12c:	2800      	cmp	r0, #0
 800c12e:	f47f af69 	bne.w	800c004 <_strtod_l+0x744>
 800c132:	e604      	b.n	800bd3e <_strtod_l+0x47e>
 800c134:	080108e0 	.word	0x080108e0
 800c138:	fffffc02 	.word	0xfffffc02
 800c13c:	7ff00000 	.word	0x7ff00000
 800c140:	39500000 	.word	0x39500000
 800c144:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800c148:	d165      	bne.n	800c216 <_strtod_l+0x956>
 800c14a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c14c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c150:	b35a      	cbz	r2, 800c1aa <_strtod_l+0x8ea>
 800c152:	4a99      	ldr	r2, [pc, #612]	; (800c3b8 <_strtod_l+0xaf8>)
 800c154:	4293      	cmp	r3, r2
 800c156:	d12b      	bne.n	800c1b0 <_strtod_l+0x8f0>
 800c158:	9b05      	ldr	r3, [sp, #20]
 800c15a:	4641      	mov	r1, r8
 800c15c:	b303      	cbz	r3, 800c1a0 <_strtod_l+0x8e0>
 800c15e:	464a      	mov	r2, r9
 800c160:	4b96      	ldr	r3, [pc, #600]	; (800c3bc <_strtod_l+0xafc>)
 800c162:	4013      	ands	r3, r2
 800c164:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c168:	f04f 32ff 	mov.w	r2, #4294967295
 800c16c:	d81b      	bhi.n	800c1a6 <_strtod_l+0x8e6>
 800c16e:	0d1b      	lsrs	r3, r3, #20
 800c170:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800c174:	fa02 f303 	lsl.w	r3, r2, r3
 800c178:	4299      	cmp	r1, r3
 800c17a:	d119      	bne.n	800c1b0 <_strtod_l+0x8f0>
 800c17c:	4b90      	ldr	r3, [pc, #576]	; (800c3c0 <_strtod_l+0xb00>)
 800c17e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c180:	429a      	cmp	r2, r3
 800c182:	d102      	bne.n	800c18a <_strtod_l+0x8ca>
 800c184:	3101      	adds	r1, #1
 800c186:	f43f adda 	beq.w	800bd3e <_strtod_l+0x47e>
 800c18a:	f04f 0800 	mov.w	r8, #0
 800c18e:	4b8b      	ldr	r3, [pc, #556]	; (800c3bc <_strtod_l+0xafc>)
 800c190:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c192:	401a      	ands	r2, r3
 800c194:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 800c198:	9b05      	ldr	r3, [sp, #20]
 800c19a:	2b00      	cmp	r3, #0
 800c19c:	d19a      	bne.n	800c0d4 <_strtod_l+0x814>
 800c19e:	e5d9      	b.n	800bd54 <_strtod_l+0x494>
 800c1a0:	f04f 33ff 	mov.w	r3, #4294967295
 800c1a4:	e7e8      	b.n	800c178 <_strtod_l+0x8b8>
 800c1a6:	4613      	mov	r3, r2
 800c1a8:	e7e6      	b.n	800c178 <_strtod_l+0x8b8>
 800c1aa:	ea53 0308 	orrs.w	r3, r3, r8
 800c1ae:	d081      	beq.n	800c0b4 <_strtod_l+0x7f4>
 800c1b0:	b1e5      	cbz	r5, 800c1ec <_strtod_l+0x92c>
 800c1b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1b4:	421d      	tst	r5, r3
 800c1b6:	d0ef      	beq.n	800c198 <_strtod_l+0x8d8>
 800c1b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c1ba:	4640      	mov	r0, r8
 800c1bc:	4649      	mov	r1, r9
 800c1be:	9a05      	ldr	r2, [sp, #20]
 800c1c0:	b1c3      	cbz	r3, 800c1f4 <_strtod_l+0x934>
 800c1c2:	f7ff fb5a 	bl	800b87a <sulp>
 800c1c6:	4602      	mov	r2, r0
 800c1c8:	460b      	mov	r3, r1
 800c1ca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c1ce:	f7f3 ffef 	bl	80001b0 <__adddf3>
 800c1d2:	4680      	mov	r8, r0
 800c1d4:	4689      	mov	r9, r1
 800c1d6:	e7df      	b.n	800c198 <_strtod_l+0x8d8>
 800c1d8:	4013      	ands	r3, r2
 800c1da:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800c1de:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800c1e2:	f04f 38ff 	mov.w	r8, #4294967295
 800c1e6:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800c1ea:	e7d5      	b.n	800c198 <_strtod_l+0x8d8>
 800c1ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c1ee:	ea13 0f08 	tst.w	r3, r8
 800c1f2:	e7e0      	b.n	800c1b6 <_strtod_l+0x8f6>
 800c1f4:	f7ff fb41 	bl	800b87a <sulp>
 800c1f8:	4602      	mov	r2, r0
 800c1fa:	460b      	mov	r3, r1
 800c1fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c200:	f7f3 ffd4 	bl	80001ac <__aeabi_dsub>
 800c204:	2200      	movs	r2, #0
 800c206:	2300      	movs	r3, #0
 800c208:	4680      	mov	r8, r0
 800c20a:	4689      	mov	r9, r1
 800c20c:	f7f4 fbee 	bl	80009ec <__aeabi_dcmpeq>
 800c210:	2800      	cmp	r0, #0
 800c212:	d0c1      	beq.n	800c198 <_strtod_l+0x8d8>
 800c214:	e608      	b.n	800be28 <_strtod_l+0x568>
 800c216:	4658      	mov	r0, fp
 800c218:	9904      	ldr	r1, [sp, #16]
 800c21a:	f002 f845 	bl	800e2a8 <__ratio>
 800c21e:	2200      	movs	r2, #0
 800c220:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c224:	4606      	mov	r6, r0
 800c226:	460f      	mov	r7, r1
 800c228:	f7f4 fbf4 	bl	8000a14 <__aeabi_dcmple>
 800c22c:	2800      	cmp	r0, #0
 800c22e:	d070      	beq.n	800c312 <_strtod_l+0xa52>
 800c230:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c232:	2b00      	cmp	r3, #0
 800c234:	d042      	beq.n	800c2bc <_strtod_l+0x9fc>
 800c236:	2600      	movs	r6, #0
 800c238:	4f62      	ldr	r7, [pc, #392]	; (800c3c4 <_strtod_l+0xb04>)
 800c23a:	4d62      	ldr	r5, [pc, #392]	; (800c3c4 <_strtod_l+0xb04>)
 800c23c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c23e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800c242:	0d1b      	lsrs	r3, r3, #20
 800c244:	051b      	lsls	r3, r3, #20
 800c246:	930f      	str	r3, [sp, #60]	; 0x3c
 800c248:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c24a:	4b5f      	ldr	r3, [pc, #380]	; (800c3c8 <_strtod_l+0xb08>)
 800c24c:	429a      	cmp	r2, r3
 800c24e:	f040 80c3 	bne.w	800c3d8 <_strtod_l+0xb18>
 800c252:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c254:	4640      	mov	r0, r8
 800c256:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800c25a:	4649      	mov	r1, r9
 800c25c:	f001 ff4e 	bl	800e0fc <__ulp>
 800c260:	4602      	mov	r2, r0
 800c262:	460b      	mov	r3, r1
 800c264:	4630      	mov	r0, r6
 800c266:	4639      	mov	r1, r7
 800c268:	f7f4 f958 	bl	800051c <__aeabi_dmul>
 800c26c:	4642      	mov	r2, r8
 800c26e:	464b      	mov	r3, r9
 800c270:	f7f3 ff9e 	bl	80001b0 <__adddf3>
 800c274:	460b      	mov	r3, r1
 800c276:	4951      	ldr	r1, [pc, #324]	; (800c3bc <_strtod_l+0xafc>)
 800c278:	4a54      	ldr	r2, [pc, #336]	; (800c3cc <_strtod_l+0xb0c>)
 800c27a:	4019      	ands	r1, r3
 800c27c:	4291      	cmp	r1, r2
 800c27e:	4680      	mov	r8, r0
 800c280:	d95d      	bls.n	800c33e <_strtod_l+0xa7e>
 800c282:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c284:	4b4e      	ldr	r3, [pc, #312]	; (800c3c0 <_strtod_l+0xb00>)
 800c286:	429a      	cmp	r2, r3
 800c288:	d103      	bne.n	800c292 <_strtod_l+0x9d2>
 800c28a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c28c:	3301      	adds	r3, #1
 800c28e:	f43f ad56 	beq.w	800bd3e <_strtod_l+0x47e>
 800c292:	f04f 38ff 	mov.w	r8, #4294967295
 800c296:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800c3c0 <_strtod_l+0xb00>
 800c29a:	4650      	mov	r0, sl
 800c29c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c29e:	f001 fbfd 	bl	800da9c <_Bfree>
 800c2a2:	4650      	mov	r0, sl
 800c2a4:	9906      	ldr	r1, [sp, #24]
 800c2a6:	f001 fbf9 	bl	800da9c <_Bfree>
 800c2aa:	4650      	mov	r0, sl
 800c2ac:	9904      	ldr	r1, [sp, #16]
 800c2ae:	f001 fbf5 	bl	800da9c <_Bfree>
 800c2b2:	4659      	mov	r1, fp
 800c2b4:	4650      	mov	r0, sl
 800c2b6:	f001 fbf1 	bl	800da9c <_Bfree>
 800c2ba:	e627      	b.n	800bf0c <_strtod_l+0x64c>
 800c2bc:	f1b8 0f00 	cmp.w	r8, #0
 800c2c0:	d119      	bne.n	800c2f6 <_strtod_l+0xa36>
 800c2c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2c4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c2c8:	b9e3      	cbnz	r3, 800c304 <_strtod_l+0xa44>
 800c2ca:	2200      	movs	r2, #0
 800c2cc:	4630      	mov	r0, r6
 800c2ce:	4639      	mov	r1, r7
 800c2d0:	4b3c      	ldr	r3, [pc, #240]	; (800c3c4 <_strtod_l+0xb04>)
 800c2d2:	f7f4 fb95 	bl	8000a00 <__aeabi_dcmplt>
 800c2d6:	b9c8      	cbnz	r0, 800c30c <_strtod_l+0xa4c>
 800c2d8:	2200      	movs	r2, #0
 800c2da:	4630      	mov	r0, r6
 800c2dc:	4639      	mov	r1, r7
 800c2de:	4b3c      	ldr	r3, [pc, #240]	; (800c3d0 <_strtod_l+0xb10>)
 800c2e0:	f7f4 f91c 	bl	800051c <__aeabi_dmul>
 800c2e4:	4604      	mov	r4, r0
 800c2e6:	460d      	mov	r5, r1
 800c2e8:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800c2ec:	9416      	str	r4, [sp, #88]	; 0x58
 800c2ee:	9317      	str	r3, [sp, #92]	; 0x5c
 800c2f0:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800c2f4:	e7a2      	b.n	800c23c <_strtod_l+0x97c>
 800c2f6:	f1b8 0f01 	cmp.w	r8, #1
 800c2fa:	d103      	bne.n	800c304 <_strtod_l+0xa44>
 800c2fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2fe:	2b00      	cmp	r3, #0
 800c300:	f43f ad92 	beq.w	800be28 <_strtod_l+0x568>
 800c304:	2600      	movs	r6, #0
 800c306:	2400      	movs	r4, #0
 800c308:	4f32      	ldr	r7, [pc, #200]	; (800c3d4 <_strtod_l+0xb14>)
 800c30a:	e796      	b.n	800c23a <_strtod_l+0x97a>
 800c30c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c30e:	4d30      	ldr	r5, [pc, #192]	; (800c3d0 <_strtod_l+0xb10>)
 800c310:	e7ea      	b.n	800c2e8 <_strtod_l+0xa28>
 800c312:	4b2f      	ldr	r3, [pc, #188]	; (800c3d0 <_strtod_l+0xb10>)
 800c314:	2200      	movs	r2, #0
 800c316:	4630      	mov	r0, r6
 800c318:	4639      	mov	r1, r7
 800c31a:	f7f4 f8ff 	bl	800051c <__aeabi_dmul>
 800c31e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c320:	4604      	mov	r4, r0
 800c322:	460d      	mov	r5, r1
 800c324:	b933      	cbnz	r3, 800c334 <_strtod_l+0xa74>
 800c326:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c32a:	9010      	str	r0, [sp, #64]	; 0x40
 800c32c:	9311      	str	r3, [sp, #68]	; 0x44
 800c32e:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800c332:	e783      	b.n	800c23c <_strtod_l+0x97c>
 800c334:	4602      	mov	r2, r0
 800c336:	460b      	mov	r3, r1
 800c338:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800c33c:	e7f7      	b.n	800c32e <_strtod_l+0xa6e>
 800c33e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800c342:	9b05      	ldr	r3, [sp, #20]
 800c344:	2b00      	cmp	r3, #0
 800c346:	d1a8      	bne.n	800c29a <_strtod_l+0x9da>
 800c348:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c34c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c34e:	0d1b      	lsrs	r3, r3, #20
 800c350:	051b      	lsls	r3, r3, #20
 800c352:	429a      	cmp	r2, r3
 800c354:	d1a1      	bne.n	800c29a <_strtod_l+0x9da>
 800c356:	4620      	mov	r0, r4
 800c358:	4629      	mov	r1, r5
 800c35a:	f7f4 ff33 	bl	80011c4 <__aeabi_d2lz>
 800c35e:	f7f4 f8af 	bl	80004c0 <__aeabi_l2d>
 800c362:	4602      	mov	r2, r0
 800c364:	460b      	mov	r3, r1
 800c366:	4620      	mov	r0, r4
 800c368:	4629      	mov	r1, r5
 800c36a:	f7f3 ff1f 	bl	80001ac <__aeabi_dsub>
 800c36e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c370:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c374:	ea43 0308 	orr.w	r3, r3, r8
 800c378:	4313      	orrs	r3, r2
 800c37a:	4604      	mov	r4, r0
 800c37c:	460d      	mov	r5, r1
 800c37e:	d066      	beq.n	800c44e <_strtod_l+0xb8e>
 800c380:	a309      	add	r3, pc, #36	; (adr r3, 800c3a8 <_strtod_l+0xae8>)
 800c382:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c386:	f7f4 fb3b 	bl	8000a00 <__aeabi_dcmplt>
 800c38a:	2800      	cmp	r0, #0
 800c38c:	f47f ace2 	bne.w	800bd54 <_strtod_l+0x494>
 800c390:	a307      	add	r3, pc, #28	; (adr r3, 800c3b0 <_strtod_l+0xaf0>)
 800c392:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c396:	4620      	mov	r0, r4
 800c398:	4629      	mov	r1, r5
 800c39a:	f7f4 fb4f 	bl	8000a3c <__aeabi_dcmpgt>
 800c39e:	2800      	cmp	r0, #0
 800c3a0:	f43f af7b 	beq.w	800c29a <_strtod_l+0x9da>
 800c3a4:	e4d6      	b.n	800bd54 <_strtod_l+0x494>
 800c3a6:	bf00      	nop
 800c3a8:	94a03595 	.word	0x94a03595
 800c3ac:	3fdfffff 	.word	0x3fdfffff
 800c3b0:	35afe535 	.word	0x35afe535
 800c3b4:	3fe00000 	.word	0x3fe00000
 800c3b8:	000fffff 	.word	0x000fffff
 800c3bc:	7ff00000 	.word	0x7ff00000
 800c3c0:	7fefffff 	.word	0x7fefffff
 800c3c4:	3ff00000 	.word	0x3ff00000
 800c3c8:	7fe00000 	.word	0x7fe00000
 800c3cc:	7c9fffff 	.word	0x7c9fffff
 800c3d0:	3fe00000 	.word	0x3fe00000
 800c3d4:	bff00000 	.word	0xbff00000
 800c3d8:	9b05      	ldr	r3, [sp, #20]
 800c3da:	b313      	cbz	r3, 800c422 <_strtod_l+0xb62>
 800c3dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c3de:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c3e2:	d81e      	bhi.n	800c422 <_strtod_l+0xb62>
 800c3e4:	a326      	add	r3, pc, #152	; (adr r3, 800c480 <_strtod_l+0xbc0>)
 800c3e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c3ea:	4620      	mov	r0, r4
 800c3ec:	4629      	mov	r1, r5
 800c3ee:	f7f4 fb11 	bl	8000a14 <__aeabi_dcmple>
 800c3f2:	b190      	cbz	r0, 800c41a <_strtod_l+0xb5a>
 800c3f4:	4629      	mov	r1, r5
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	f7f4 fb68 	bl	8000acc <__aeabi_d2uiz>
 800c3fc:	2801      	cmp	r0, #1
 800c3fe:	bf38      	it	cc
 800c400:	2001      	movcc	r0, #1
 800c402:	f7f4 f811 	bl	8000428 <__aeabi_ui2d>
 800c406:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c408:	4604      	mov	r4, r0
 800c40a:	460d      	mov	r5, r1
 800c40c:	b9d3      	cbnz	r3, 800c444 <_strtod_l+0xb84>
 800c40e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c412:	9012      	str	r0, [sp, #72]	; 0x48
 800c414:	9313      	str	r3, [sp, #76]	; 0x4c
 800c416:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800c41a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c41c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 800c420:	1a9f      	subs	r7, r3, r2
 800c422:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c426:	f001 fe69 	bl	800e0fc <__ulp>
 800c42a:	4602      	mov	r2, r0
 800c42c:	460b      	mov	r3, r1
 800c42e:	4630      	mov	r0, r6
 800c430:	4639      	mov	r1, r7
 800c432:	f7f4 f873 	bl	800051c <__aeabi_dmul>
 800c436:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800c43a:	f7f3 feb9 	bl	80001b0 <__adddf3>
 800c43e:	4680      	mov	r8, r0
 800c440:	4689      	mov	r9, r1
 800c442:	e77e      	b.n	800c342 <_strtod_l+0xa82>
 800c444:	4602      	mov	r2, r0
 800c446:	460b      	mov	r3, r1
 800c448:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800c44c:	e7e3      	b.n	800c416 <_strtod_l+0xb56>
 800c44e:	a30e      	add	r3, pc, #56	; (adr r3, 800c488 <_strtod_l+0xbc8>)
 800c450:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c454:	f7f4 fad4 	bl	8000a00 <__aeabi_dcmplt>
 800c458:	e7a1      	b.n	800c39e <_strtod_l+0xade>
 800c45a:	2300      	movs	r3, #0
 800c45c:	930a      	str	r3, [sp, #40]	; 0x28
 800c45e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c460:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800c462:	6013      	str	r3, [r2, #0]
 800c464:	f7ff ba71 	b.w	800b94a <_strtod_l+0x8a>
 800c468:	2a65      	cmp	r2, #101	; 0x65
 800c46a:	f43f ab63 	beq.w	800bb34 <_strtod_l+0x274>
 800c46e:	2a45      	cmp	r2, #69	; 0x45
 800c470:	f43f ab60 	beq.w	800bb34 <_strtod_l+0x274>
 800c474:	2301      	movs	r3, #1
 800c476:	f7ff bb95 	b.w	800bba4 <_strtod_l+0x2e4>
 800c47a:	bf00      	nop
 800c47c:	f3af 8000 	nop.w
 800c480:	ffc00000 	.word	0xffc00000
 800c484:	41dfffff 	.word	0x41dfffff
 800c488:	94a03595 	.word	0x94a03595
 800c48c:	3fcfffff 	.word	0x3fcfffff

0800c490 <_strtod_r>:
 800c490:	4b01      	ldr	r3, [pc, #4]	; (800c498 <_strtod_r+0x8>)
 800c492:	f7ff ba15 	b.w	800b8c0 <_strtod_l>
 800c496:	bf00      	nop
 800c498:	20000208 	.word	0x20000208

0800c49c <_strtol_l.constprop.0>:
 800c49c:	2b01      	cmp	r3, #1
 800c49e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c4a2:	4680      	mov	r8, r0
 800c4a4:	d001      	beq.n	800c4aa <_strtol_l.constprop.0+0xe>
 800c4a6:	2b24      	cmp	r3, #36	; 0x24
 800c4a8:	d906      	bls.n	800c4b8 <_strtol_l.constprop.0+0x1c>
 800c4aa:	f7fe faa5 	bl	800a9f8 <__errno>
 800c4ae:	2316      	movs	r3, #22
 800c4b0:	6003      	str	r3, [r0, #0]
 800c4b2:	2000      	movs	r0, #0
 800c4b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c4b8:	460d      	mov	r5, r1
 800c4ba:	4f35      	ldr	r7, [pc, #212]	; (800c590 <_strtol_l.constprop.0+0xf4>)
 800c4bc:	4628      	mov	r0, r5
 800c4be:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c4c2:	5de6      	ldrb	r6, [r4, r7]
 800c4c4:	f016 0608 	ands.w	r6, r6, #8
 800c4c8:	d1f8      	bne.n	800c4bc <_strtol_l.constprop.0+0x20>
 800c4ca:	2c2d      	cmp	r4, #45	; 0x2d
 800c4cc:	d12f      	bne.n	800c52e <_strtol_l.constprop.0+0x92>
 800c4ce:	2601      	movs	r6, #1
 800c4d0:	782c      	ldrb	r4, [r5, #0]
 800c4d2:	1c85      	adds	r5, r0, #2
 800c4d4:	2b00      	cmp	r3, #0
 800c4d6:	d057      	beq.n	800c588 <_strtol_l.constprop.0+0xec>
 800c4d8:	2b10      	cmp	r3, #16
 800c4da:	d109      	bne.n	800c4f0 <_strtol_l.constprop.0+0x54>
 800c4dc:	2c30      	cmp	r4, #48	; 0x30
 800c4de:	d107      	bne.n	800c4f0 <_strtol_l.constprop.0+0x54>
 800c4e0:	7828      	ldrb	r0, [r5, #0]
 800c4e2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800c4e6:	2858      	cmp	r0, #88	; 0x58
 800c4e8:	d149      	bne.n	800c57e <_strtol_l.constprop.0+0xe2>
 800c4ea:	2310      	movs	r3, #16
 800c4ec:	786c      	ldrb	r4, [r5, #1]
 800c4ee:	3502      	adds	r5, #2
 800c4f0:	2700      	movs	r7, #0
 800c4f2:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800c4f6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c4fa:	fbbe f9f3 	udiv	r9, lr, r3
 800c4fe:	4638      	mov	r0, r7
 800c500:	fb03 ea19 	mls	sl, r3, r9, lr
 800c504:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800c508:	f1bc 0f09 	cmp.w	ip, #9
 800c50c:	d814      	bhi.n	800c538 <_strtol_l.constprop.0+0x9c>
 800c50e:	4664      	mov	r4, ip
 800c510:	42a3      	cmp	r3, r4
 800c512:	dd22      	ble.n	800c55a <_strtol_l.constprop.0+0xbe>
 800c514:	2f00      	cmp	r7, #0
 800c516:	db1d      	blt.n	800c554 <_strtol_l.constprop.0+0xb8>
 800c518:	4581      	cmp	r9, r0
 800c51a:	d31b      	bcc.n	800c554 <_strtol_l.constprop.0+0xb8>
 800c51c:	d101      	bne.n	800c522 <_strtol_l.constprop.0+0x86>
 800c51e:	45a2      	cmp	sl, r4
 800c520:	db18      	blt.n	800c554 <_strtol_l.constprop.0+0xb8>
 800c522:	2701      	movs	r7, #1
 800c524:	fb00 4003 	mla	r0, r0, r3, r4
 800c528:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c52c:	e7ea      	b.n	800c504 <_strtol_l.constprop.0+0x68>
 800c52e:	2c2b      	cmp	r4, #43	; 0x2b
 800c530:	bf04      	itt	eq
 800c532:	782c      	ldrbeq	r4, [r5, #0]
 800c534:	1c85      	addeq	r5, r0, #2
 800c536:	e7cd      	b.n	800c4d4 <_strtol_l.constprop.0+0x38>
 800c538:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800c53c:	f1bc 0f19 	cmp.w	ip, #25
 800c540:	d801      	bhi.n	800c546 <_strtol_l.constprop.0+0xaa>
 800c542:	3c37      	subs	r4, #55	; 0x37
 800c544:	e7e4      	b.n	800c510 <_strtol_l.constprop.0+0x74>
 800c546:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800c54a:	f1bc 0f19 	cmp.w	ip, #25
 800c54e:	d804      	bhi.n	800c55a <_strtol_l.constprop.0+0xbe>
 800c550:	3c57      	subs	r4, #87	; 0x57
 800c552:	e7dd      	b.n	800c510 <_strtol_l.constprop.0+0x74>
 800c554:	f04f 37ff 	mov.w	r7, #4294967295
 800c558:	e7e6      	b.n	800c528 <_strtol_l.constprop.0+0x8c>
 800c55a:	2f00      	cmp	r7, #0
 800c55c:	da07      	bge.n	800c56e <_strtol_l.constprop.0+0xd2>
 800c55e:	2322      	movs	r3, #34	; 0x22
 800c560:	4670      	mov	r0, lr
 800c562:	f8c8 3000 	str.w	r3, [r8]
 800c566:	2a00      	cmp	r2, #0
 800c568:	d0a4      	beq.n	800c4b4 <_strtol_l.constprop.0+0x18>
 800c56a:	1e69      	subs	r1, r5, #1
 800c56c:	e005      	b.n	800c57a <_strtol_l.constprop.0+0xde>
 800c56e:	b106      	cbz	r6, 800c572 <_strtol_l.constprop.0+0xd6>
 800c570:	4240      	negs	r0, r0
 800c572:	2a00      	cmp	r2, #0
 800c574:	d09e      	beq.n	800c4b4 <_strtol_l.constprop.0+0x18>
 800c576:	2f00      	cmp	r7, #0
 800c578:	d1f7      	bne.n	800c56a <_strtol_l.constprop.0+0xce>
 800c57a:	6011      	str	r1, [r2, #0]
 800c57c:	e79a      	b.n	800c4b4 <_strtol_l.constprop.0+0x18>
 800c57e:	2430      	movs	r4, #48	; 0x30
 800c580:	2b00      	cmp	r3, #0
 800c582:	d1b5      	bne.n	800c4f0 <_strtol_l.constprop.0+0x54>
 800c584:	2308      	movs	r3, #8
 800c586:	e7b3      	b.n	800c4f0 <_strtol_l.constprop.0+0x54>
 800c588:	2c30      	cmp	r4, #48	; 0x30
 800c58a:	d0a9      	beq.n	800c4e0 <_strtol_l.constprop.0+0x44>
 800c58c:	230a      	movs	r3, #10
 800c58e:	e7af      	b.n	800c4f0 <_strtol_l.constprop.0+0x54>
 800c590:	08010909 	.word	0x08010909

0800c594 <_strtol_r>:
 800c594:	f7ff bf82 	b.w	800c49c <_strtol_l.constprop.0>

0800c598 <_write_r>:
 800c598:	b538      	push	{r3, r4, r5, lr}
 800c59a:	4604      	mov	r4, r0
 800c59c:	4608      	mov	r0, r1
 800c59e:	4611      	mov	r1, r2
 800c5a0:	2200      	movs	r2, #0
 800c5a2:	4d05      	ldr	r5, [pc, #20]	; (800c5b8 <_write_r+0x20>)
 800c5a4:	602a      	str	r2, [r5, #0]
 800c5a6:	461a      	mov	r2, r3
 800c5a8:	f7f8 fce2 	bl	8004f70 <_write>
 800c5ac:	1c43      	adds	r3, r0, #1
 800c5ae:	d102      	bne.n	800c5b6 <_write_r+0x1e>
 800c5b0:	682b      	ldr	r3, [r5, #0]
 800c5b2:	b103      	cbz	r3, 800c5b6 <_write_r+0x1e>
 800c5b4:	6023      	str	r3, [r4, #0]
 800c5b6:	bd38      	pop	{r3, r4, r5, pc}
 800c5b8:	20001458 	.word	0x20001458

0800c5bc <_close_r>:
 800c5bc:	b538      	push	{r3, r4, r5, lr}
 800c5be:	2300      	movs	r3, #0
 800c5c0:	4d05      	ldr	r5, [pc, #20]	; (800c5d8 <_close_r+0x1c>)
 800c5c2:	4604      	mov	r4, r0
 800c5c4:	4608      	mov	r0, r1
 800c5c6:	602b      	str	r3, [r5, #0]
 800c5c8:	f7f8 fcee 	bl	8004fa8 <_close>
 800c5cc:	1c43      	adds	r3, r0, #1
 800c5ce:	d102      	bne.n	800c5d6 <_close_r+0x1a>
 800c5d0:	682b      	ldr	r3, [r5, #0]
 800c5d2:	b103      	cbz	r3, 800c5d6 <_close_r+0x1a>
 800c5d4:	6023      	str	r3, [r4, #0]
 800c5d6:	bd38      	pop	{r3, r4, r5, pc}
 800c5d8:	20001458 	.word	0x20001458

0800c5dc <quorem>:
 800c5dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e0:	6903      	ldr	r3, [r0, #16]
 800c5e2:	690c      	ldr	r4, [r1, #16]
 800c5e4:	4607      	mov	r7, r0
 800c5e6:	42a3      	cmp	r3, r4
 800c5e8:	f2c0 8082 	blt.w	800c6f0 <quorem+0x114>
 800c5ec:	3c01      	subs	r4, #1
 800c5ee:	f100 0514 	add.w	r5, r0, #20
 800c5f2:	f101 0814 	add.w	r8, r1, #20
 800c5f6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c5fa:	9301      	str	r3, [sp, #4]
 800c5fc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800c600:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c604:	3301      	adds	r3, #1
 800c606:	429a      	cmp	r2, r3
 800c608:	fbb2 f6f3 	udiv	r6, r2, r3
 800c60c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800c610:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800c614:	d331      	bcc.n	800c67a <quorem+0x9e>
 800c616:	f04f 0e00 	mov.w	lr, #0
 800c61a:	4640      	mov	r0, r8
 800c61c:	46ac      	mov	ip, r5
 800c61e:	46f2      	mov	sl, lr
 800c620:	f850 2b04 	ldr.w	r2, [r0], #4
 800c624:	b293      	uxth	r3, r2
 800c626:	fb06 e303 	mla	r3, r6, r3, lr
 800c62a:	0c12      	lsrs	r2, r2, #16
 800c62c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800c630:	b29b      	uxth	r3, r3
 800c632:	fb06 e202 	mla	r2, r6, r2, lr
 800c636:	ebaa 0303 	sub.w	r3, sl, r3
 800c63a:	f8dc a000 	ldr.w	sl, [ip]
 800c63e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800c642:	fa1f fa8a 	uxth.w	sl, sl
 800c646:	4453      	add	r3, sl
 800c648:	f8dc a000 	ldr.w	sl, [ip]
 800c64c:	b292      	uxth	r2, r2
 800c64e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800c652:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c656:	b29b      	uxth	r3, r3
 800c658:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c65c:	4581      	cmp	r9, r0
 800c65e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800c662:	f84c 3b04 	str.w	r3, [ip], #4
 800c666:	d2db      	bcs.n	800c620 <quorem+0x44>
 800c668:	f855 300b 	ldr.w	r3, [r5, fp]
 800c66c:	b92b      	cbnz	r3, 800c67a <quorem+0x9e>
 800c66e:	9b01      	ldr	r3, [sp, #4]
 800c670:	3b04      	subs	r3, #4
 800c672:	429d      	cmp	r5, r3
 800c674:	461a      	mov	r2, r3
 800c676:	d32f      	bcc.n	800c6d8 <quorem+0xfc>
 800c678:	613c      	str	r4, [r7, #16]
 800c67a:	4638      	mov	r0, r7
 800c67c:	f001 fc96 	bl	800dfac <__mcmp>
 800c680:	2800      	cmp	r0, #0
 800c682:	db25      	blt.n	800c6d0 <quorem+0xf4>
 800c684:	4628      	mov	r0, r5
 800c686:	f04f 0c00 	mov.w	ip, #0
 800c68a:	3601      	adds	r6, #1
 800c68c:	f858 1b04 	ldr.w	r1, [r8], #4
 800c690:	f8d0 e000 	ldr.w	lr, [r0]
 800c694:	b28b      	uxth	r3, r1
 800c696:	ebac 0303 	sub.w	r3, ip, r3
 800c69a:	fa1f f28e 	uxth.w	r2, lr
 800c69e:	4413      	add	r3, r2
 800c6a0:	0c0a      	lsrs	r2, r1, #16
 800c6a2:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800c6a6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800c6aa:	b29b      	uxth	r3, r3
 800c6ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c6b0:	45c1      	cmp	r9, r8
 800c6b2:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800c6b6:	f840 3b04 	str.w	r3, [r0], #4
 800c6ba:	d2e7      	bcs.n	800c68c <quorem+0xb0>
 800c6bc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c6c0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c6c4:	b922      	cbnz	r2, 800c6d0 <quorem+0xf4>
 800c6c6:	3b04      	subs	r3, #4
 800c6c8:	429d      	cmp	r5, r3
 800c6ca:	461a      	mov	r2, r3
 800c6cc:	d30a      	bcc.n	800c6e4 <quorem+0x108>
 800c6ce:	613c      	str	r4, [r7, #16]
 800c6d0:	4630      	mov	r0, r6
 800c6d2:	b003      	add	sp, #12
 800c6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6d8:	6812      	ldr	r2, [r2, #0]
 800c6da:	3b04      	subs	r3, #4
 800c6dc:	2a00      	cmp	r2, #0
 800c6de:	d1cb      	bne.n	800c678 <quorem+0x9c>
 800c6e0:	3c01      	subs	r4, #1
 800c6e2:	e7c6      	b.n	800c672 <quorem+0x96>
 800c6e4:	6812      	ldr	r2, [r2, #0]
 800c6e6:	3b04      	subs	r3, #4
 800c6e8:	2a00      	cmp	r2, #0
 800c6ea:	d1f0      	bne.n	800c6ce <quorem+0xf2>
 800c6ec:	3c01      	subs	r4, #1
 800c6ee:	e7eb      	b.n	800c6c8 <quorem+0xec>
 800c6f0:	2000      	movs	r0, #0
 800c6f2:	e7ee      	b.n	800c6d2 <quorem+0xf6>
 800c6f4:	0000      	movs	r0, r0
	...

0800c6f8 <_dtoa_r>:
 800c6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6fc:	4616      	mov	r6, r2
 800c6fe:	461f      	mov	r7, r3
 800c700:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800c702:	b099      	sub	sp, #100	; 0x64
 800c704:	4605      	mov	r5, r0
 800c706:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800c70a:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800c70e:	b974      	cbnz	r4, 800c72e <_dtoa_r+0x36>
 800c710:	2010      	movs	r0, #16
 800c712:	f001 f95b 	bl	800d9cc <malloc>
 800c716:	4602      	mov	r2, r0
 800c718:	6268      	str	r0, [r5, #36]	; 0x24
 800c71a:	b920      	cbnz	r0, 800c726 <_dtoa_r+0x2e>
 800c71c:	21ea      	movs	r1, #234	; 0xea
 800c71e:	4ba8      	ldr	r3, [pc, #672]	; (800c9c0 <_dtoa_r+0x2c8>)
 800c720:	48a8      	ldr	r0, [pc, #672]	; (800c9c4 <_dtoa_r+0x2cc>)
 800c722:	f002 fcd3 	bl	800f0cc <__assert_func>
 800c726:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c72a:	6004      	str	r4, [r0, #0]
 800c72c:	60c4      	str	r4, [r0, #12]
 800c72e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c730:	6819      	ldr	r1, [r3, #0]
 800c732:	b151      	cbz	r1, 800c74a <_dtoa_r+0x52>
 800c734:	685a      	ldr	r2, [r3, #4]
 800c736:	2301      	movs	r3, #1
 800c738:	4093      	lsls	r3, r2
 800c73a:	604a      	str	r2, [r1, #4]
 800c73c:	608b      	str	r3, [r1, #8]
 800c73e:	4628      	mov	r0, r5
 800c740:	f001 f9ac 	bl	800da9c <_Bfree>
 800c744:	2200      	movs	r2, #0
 800c746:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c748:	601a      	str	r2, [r3, #0]
 800c74a:	1e3b      	subs	r3, r7, #0
 800c74c:	bfaf      	iteee	ge
 800c74e:	2300      	movge	r3, #0
 800c750:	2201      	movlt	r2, #1
 800c752:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800c756:	9305      	strlt	r3, [sp, #20]
 800c758:	bfa8      	it	ge
 800c75a:	f8c8 3000 	strge.w	r3, [r8]
 800c75e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c762:	4b99      	ldr	r3, [pc, #612]	; (800c9c8 <_dtoa_r+0x2d0>)
 800c764:	bfb8      	it	lt
 800c766:	f8c8 2000 	strlt.w	r2, [r8]
 800c76a:	ea33 0309 	bics.w	r3, r3, r9
 800c76e:	d119      	bne.n	800c7a4 <_dtoa_r+0xac>
 800c770:	f242 730f 	movw	r3, #9999	; 0x270f
 800c774:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c776:	6013      	str	r3, [r2, #0]
 800c778:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c77c:	4333      	orrs	r3, r6
 800c77e:	f000 857f 	beq.w	800d280 <_dtoa_r+0xb88>
 800c782:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800c784:	b953      	cbnz	r3, 800c79c <_dtoa_r+0xa4>
 800c786:	4b91      	ldr	r3, [pc, #580]	; (800c9cc <_dtoa_r+0x2d4>)
 800c788:	e022      	b.n	800c7d0 <_dtoa_r+0xd8>
 800c78a:	4b91      	ldr	r3, [pc, #580]	; (800c9d0 <_dtoa_r+0x2d8>)
 800c78c:	9303      	str	r3, [sp, #12]
 800c78e:	3308      	adds	r3, #8
 800c790:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800c792:	6013      	str	r3, [r2, #0]
 800c794:	9803      	ldr	r0, [sp, #12]
 800c796:	b019      	add	sp, #100	; 0x64
 800c798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c79c:	4b8b      	ldr	r3, [pc, #556]	; (800c9cc <_dtoa_r+0x2d4>)
 800c79e:	9303      	str	r3, [sp, #12]
 800c7a0:	3303      	adds	r3, #3
 800c7a2:	e7f5      	b.n	800c790 <_dtoa_r+0x98>
 800c7a4:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800c7a8:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800c7ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c7b0:	2200      	movs	r2, #0
 800c7b2:	2300      	movs	r3, #0
 800c7b4:	f7f4 f91a 	bl	80009ec <__aeabi_dcmpeq>
 800c7b8:	4680      	mov	r8, r0
 800c7ba:	b158      	cbz	r0, 800c7d4 <_dtoa_r+0xdc>
 800c7bc:	2301      	movs	r3, #1
 800c7be:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800c7c0:	6013      	str	r3, [r2, #0]
 800c7c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800c7c4:	2b00      	cmp	r3, #0
 800c7c6:	f000 8558 	beq.w	800d27a <_dtoa_r+0xb82>
 800c7ca:	4882      	ldr	r0, [pc, #520]	; (800c9d4 <_dtoa_r+0x2dc>)
 800c7cc:	6018      	str	r0, [r3, #0]
 800c7ce:	1e43      	subs	r3, r0, #1
 800c7d0:	9303      	str	r3, [sp, #12]
 800c7d2:	e7df      	b.n	800c794 <_dtoa_r+0x9c>
 800c7d4:	ab16      	add	r3, sp, #88	; 0x58
 800c7d6:	9301      	str	r3, [sp, #4]
 800c7d8:	ab17      	add	r3, sp, #92	; 0x5c
 800c7da:	9300      	str	r3, [sp, #0]
 800c7dc:	4628      	mov	r0, r5
 800c7de:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800c7e2:	f001 fd05 	bl	800e1f0 <__d2b>
 800c7e6:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800c7ea:	4683      	mov	fp, r0
 800c7ec:	2c00      	cmp	r4, #0
 800c7ee:	d07f      	beq.n	800c8f0 <_dtoa_r+0x1f8>
 800c7f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c7f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c7f6:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800c7fa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c7fe:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800c802:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800c806:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800c80a:	2200      	movs	r2, #0
 800c80c:	4b72      	ldr	r3, [pc, #456]	; (800c9d8 <_dtoa_r+0x2e0>)
 800c80e:	f7f3 fccd 	bl	80001ac <__aeabi_dsub>
 800c812:	a365      	add	r3, pc, #404	; (adr r3, 800c9a8 <_dtoa_r+0x2b0>)
 800c814:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c818:	f7f3 fe80 	bl	800051c <__aeabi_dmul>
 800c81c:	a364      	add	r3, pc, #400	; (adr r3, 800c9b0 <_dtoa_r+0x2b8>)
 800c81e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c822:	f7f3 fcc5 	bl	80001b0 <__adddf3>
 800c826:	4606      	mov	r6, r0
 800c828:	4620      	mov	r0, r4
 800c82a:	460f      	mov	r7, r1
 800c82c:	f7f3 fe0c 	bl	8000448 <__aeabi_i2d>
 800c830:	a361      	add	r3, pc, #388	; (adr r3, 800c9b8 <_dtoa_r+0x2c0>)
 800c832:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c836:	f7f3 fe71 	bl	800051c <__aeabi_dmul>
 800c83a:	4602      	mov	r2, r0
 800c83c:	460b      	mov	r3, r1
 800c83e:	4630      	mov	r0, r6
 800c840:	4639      	mov	r1, r7
 800c842:	f7f3 fcb5 	bl	80001b0 <__adddf3>
 800c846:	4606      	mov	r6, r0
 800c848:	460f      	mov	r7, r1
 800c84a:	f7f4 f917 	bl	8000a7c <__aeabi_d2iz>
 800c84e:	2200      	movs	r2, #0
 800c850:	4682      	mov	sl, r0
 800c852:	2300      	movs	r3, #0
 800c854:	4630      	mov	r0, r6
 800c856:	4639      	mov	r1, r7
 800c858:	f7f4 f8d2 	bl	8000a00 <__aeabi_dcmplt>
 800c85c:	b148      	cbz	r0, 800c872 <_dtoa_r+0x17a>
 800c85e:	4650      	mov	r0, sl
 800c860:	f7f3 fdf2 	bl	8000448 <__aeabi_i2d>
 800c864:	4632      	mov	r2, r6
 800c866:	463b      	mov	r3, r7
 800c868:	f7f4 f8c0 	bl	80009ec <__aeabi_dcmpeq>
 800c86c:	b908      	cbnz	r0, 800c872 <_dtoa_r+0x17a>
 800c86e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800c872:	f1ba 0f16 	cmp.w	sl, #22
 800c876:	d858      	bhi.n	800c92a <_dtoa_r+0x232>
 800c878:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800c87c:	4b57      	ldr	r3, [pc, #348]	; (800c9dc <_dtoa_r+0x2e4>)
 800c87e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800c882:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c886:	f7f4 f8bb 	bl	8000a00 <__aeabi_dcmplt>
 800c88a:	2800      	cmp	r0, #0
 800c88c:	d04f      	beq.n	800c92e <_dtoa_r+0x236>
 800c88e:	2300      	movs	r3, #0
 800c890:	f10a 3aff 	add.w	sl, sl, #4294967295
 800c894:	930f      	str	r3, [sp, #60]	; 0x3c
 800c896:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800c898:	1b1c      	subs	r4, r3, r4
 800c89a:	1e63      	subs	r3, r4, #1
 800c89c:	9309      	str	r3, [sp, #36]	; 0x24
 800c89e:	bf49      	itett	mi
 800c8a0:	f1c4 0301 	rsbmi	r3, r4, #1
 800c8a4:	2300      	movpl	r3, #0
 800c8a6:	9306      	strmi	r3, [sp, #24]
 800c8a8:	2300      	movmi	r3, #0
 800c8aa:	bf54      	ite	pl
 800c8ac:	9306      	strpl	r3, [sp, #24]
 800c8ae:	9309      	strmi	r3, [sp, #36]	; 0x24
 800c8b0:	f1ba 0f00 	cmp.w	sl, #0
 800c8b4:	db3d      	blt.n	800c932 <_dtoa_r+0x23a>
 800c8b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c8b8:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800c8bc:	4453      	add	r3, sl
 800c8be:	9309      	str	r3, [sp, #36]	; 0x24
 800c8c0:	2300      	movs	r3, #0
 800c8c2:	930a      	str	r3, [sp, #40]	; 0x28
 800c8c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800c8c6:	2b09      	cmp	r3, #9
 800c8c8:	f200 808c 	bhi.w	800c9e4 <_dtoa_r+0x2ec>
 800c8cc:	2b05      	cmp	r3, #5
 800c8ce:	bfc4      	itt	gt
 800c8d0:	3b04      	subgt	r3, #4
 800c8d2:	9322      	strgt	r3, [sp, #136]	; 0x88
 800c8d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800c8d6:	bfc8      	it	gt
 800c8d8:	2400      	movgt	r4, #0
 800c8da:	f1a3 0302 	sub.w	r3, r3, #2
 800c8de:	bfd8      	it	le
 800c8e0:	2401      	movle	r4, #1
 800c8e2:	2b03      	cmp	r3, #3
 800c8e4:	f200 808a 	bhi.w	800c9fc <_dtoa_r+0x304>
 800c8e8:	e8df f003 	tbb	[pc, r3]
 800c8ec:	5b4d4f2d 	.word	0x5b4d4f2d
 800c8f0:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800c8f4:	441c      	add	r4, r3
 800c8f6:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800c8fa:	2b20      	cmp	r3, #32
 800c8fc:	bfc3      	ittte	gt
 800c8fe:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800c902:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800c906:	fa09 f303 	lslgt.w	r3, r9, r3
 800c90a:	f1c3 0320 	rsble	r3, r3, #32
 800c90e:	bfc6      	itte	gt
 800c910:	fa26 f000 	lsrgt.w	r0, r6, r0
 800c914:	4318      	orrgt	r0, r3
 800c916:	fa06 f003 	lslle.w	r0, r6, r3
 800c91a:	f7f3 fd85 	bl	8000428 <__aeabi_ui2d>
 800c91e:	2301      	movs	r3, #1
 800c920:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800c924:	3c01      	subs	r4, #1
 800c926:	9313      	str	r3, [sp, #76]	; 0x4c
 800c928:	e76f      	b.n	800c80a <_dtoa_r+0x112>
 800c92a:	2301      	movs	r3, #1
 800c92c:	e7b2      	b.n	800c894 <_dtoa_r+0x19c>
 800c92e:	900f      	str	r0, [sp, #60]	; 0x3c
 800c930:	e7b1      	b.n	800c896 <_dtoa_r+0x19e>
 800c932:	9b06      	ldr	r3, [sp, #24]
 800c934:	eba3 030a 	sub.w	r3, r3, sl
 800c938:	9306      	str	r3, [sp, #24]
 800c93a:	f1ca 0300 	rsb	r3, sl, #0
 800c93e:	930a      	str	r3, [sp, #40]	; 0x28
 800c940:	2300      	movs	r3, #0
 800c942:	930e      	str	r3, [sp, #56]	; 0x38
 800c944:	e7be      	b.n	800c8c4 <_dtoa_r+0x1cc>
 800c946:	2300      	movs	r3, #0
 800c948:	930b      	str	r3, [sp, #44]	; 0x2c
 800c94a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c94c:	2b00      	cmp	r3, #0
 800c94e:	dc58      	bgt.n	800ca02 <_dtoa_r+0x30a>
 800c950:	f04f 0901 	mov.w	r9, #1
 800c954:	464b      	mov	r3, r9
 800c956:	f8cd 9020 	str.w	r9, [sp, #32]
 800c95a:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800c95e:	2200      	movs	r2, #0
 800c960:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800c962:	6042      	str	r2, [r0, #4]
 800c964:	2204      	movs	r2, #4
 800c966:	f102 0614 	add.w	r6, r2, #20
 800c96a:	429e      	cmp	r6, r3
 800c96c:	6841      	ldr	r1, [r0, #4]
 800c96e:	d94e      	bls.n	800ca0e <_dtoa_r+0x316>
 800c970:	4628      	mov	r0, r5
 800c972:	f001 f853 	bl	800da1c <_Balloc>
 800c976:	9003      	str	r0, [sp, #12]
 800c978:	2800      	cmp	r0, #0
 800c97a:	d14c      	bne.n	800ca16 <_dtoa_r+0x31e>
 800c97c:	4602      	mov	r2, r0
 800c97e:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800c982:	4b17      	ldr	r3, [pc, #92]	; (800c9e0 <_dtoa_r+0x2e8>)
 800c984:	e6cc      	b.n	800c720 <_dtoa_r+0x28>
 800c986:	2301      	movs	r3, #1
 800c988:	e7de      	b.n	800c948 <_dtoa_r+0x250>
 800c98a:	2300      	movs	r3, #0
 800c98c:	930b      	str	r3, [sp, #44]	; 0x2c
 800c98e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c990:	eb0a 0903 	add.w	r9, sl, r3
 800c994:	f109 0301 	add.w	r3, r9, #1
 800c998:	2b01      	cmp	r3, #1
 800c99a:	9308      	str	r3, [sp, #32]
 800c99c:	bfb8      	it	lt
 800c99e:	2301      	movlt	r3, #1
 800c9a0:	e7dd      	b.n	800c95e <_dtoa_r+0x266>
 800c9a2:	2301      	movs	r3, #1
 800c9a4:	e7f2      	b.n	800c98c <_dtoa_r+0x294>
 800c9a6:	bf00      	nop
 800c9a8:	636f4361 	.word	0x636f4361
 800c9ac:	3fd287a7 	.word	0x3fd287a7
 800c9b0:	8b60c8b3 	.word	0x8b60c8b3
 800c9b4:	3fc68a28 	.word	0x3fc68a28
 800c9b8:	509f79fb 	.word	0x509f79fb
 800c9bc:	3fd34413 	.word	0x3fd34413
 800c9c0:	08010a16 	.word	0x08010a16
 800c9c4:	08010a2d 	.word	0x08010a2d
 800c9c8:	7ff00000 	.word	0x7ff00000
 800c9cc:	08010a12 	.word	0x08010a12
 800c9d0:	08010a09 	.word	0x08010a09
 800c9d4:	08010c82 	.word	0x08010c82
 800c9d8:	3ff80000 	.word	0x3ff80000
 800c9dc:	08010b98 	.word	0x08010b98
 800c9e0:	08010a88 	.word	0x08010a88
 800c9e4:	2401      	movs	r4, #1
 800c9e6:	2300      	movs	r3, #0
 800c9e8:	940b      	str	r4, [sp, #44]	; 0x2c
 800c9ea:	9322      	str	r3, [sp, #136]	; 0x88
 800c9ec:	f04f 39ff 	mov.w	r9, #4294967295
 800c9f0:	2200      	movs	r2, #0
 800c9f2:	2312      	movs	r3, #18
 800c9f4:	f8cd 9020 	str.w	r9, [sp, #32]
 800c9f8:	9223      	str	r2, [sp, #140]	; 0x8c
 800c9fa:	e7b0      	b.n	800c95e <_dtoa_r+0x266>
 800c9fc:	2301      	movs	r3, #1
 800c9fe:	930b      	str	r3, [sp, #44]	; 0x2c
 800ca00:	e7f4      	b.n	800c9ec <_dtoa_r+0x2f4>
 800ca02:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 800ca06:	464b      	mov	r3, r9
 800ca08:	f8cd 9020 	str.w	r9, [sp, #32]
 800ca0c:	e7a7      	b.n	800c95e <_dtoa_r+0x266>
 800ca0e:	3101      	adds	r1, #1
 800ca10:	6041      	str	r1, [r0, #4]
 800ca12:	0052      	lsls	r2, r2, #1
 800ca14:	e7a7      	b.n	800c966 <_dtoa_r+0x26e>
 800ca16:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800ca18:	9a03      	ldr	r2, [sp, #12]
 800ca1a:	601a      	str	r2, [r3, #0]
 800ca1c:	9b08      	ldr	r3, [sp, #32]
 800ca1e:	2b0e      	cmp	r3, #14
 800ca20:	f200 80a8 	bhi.w	800cb74 <_dtoa_r+0x47c>
 800ca24:	2c00      	cmp	r4, #0
 800ca26:	f000 80a5 	beq.w	800cb74 <_dtoa_r+0x47c>
 800ca2a:	f1ba 0f00 	cmp.w	sl, #0
 800ca2e:	dd34      	ble.n	800ca9a <_dtoa_r+0x3a2>
 800ca30:	4a9a      	ldr	r2, [pc, #616]	; (800cc9c <_dtoa_r+0x5a4>)
 800ca32:	f00a 030f 	and.w	r3, sl, #15
 800ca36:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ca3a:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800ca3e:	e9d3 3400 	ldrd	r3, r4, [r3]
 800ca42:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800ca46:	ea4f 142a 	mov.w	r4, sl, asr #4
 800ca4a:	d016      	beq.n	800ca7a <_dtoa_r+0x382>
 800ca4c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800ca50:	4b93      	ldr	r3, [pc, #588]	; (800cca0 <_dtoa_r+0x5a8>)
 800ca52:	2703      	movs	r7, #3
 800ca54:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ca58:	f7f3 fe8a 	bl	8000770 <__aeabi_ddiv>
 800ca5c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800ca60:	f004 040f 	and.w	r4, r4, #15
 800ca64:	4e8e      	ldr	r6, [pc, #568]	; (800cca0 <_dtoa_r+0x5a8>)
 800ca66:	b954      	cbnz	r4, 800ca7e <_dtoa_r+0x386>
 800ca68:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800ca6c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ca70:	f7f3 fe7e 	bl	8000770 <__aeabi_ddiv>
 800ca74:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800ca78:	e029      	b.n	800cace <_dtoa_r+0x3d6>
 800ca7a:	2702      	movs	r7, #2
 800ca7c:	e7f2      	b.n	800ca64 <_dtoa_r+0x36c>
 800ca7e:	07e1      	lsls	r1, r4, #31
 800ca80:	d508      	bpl.n	800ca94 <_dtoa_r+0x39c>
 800ca82:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ca86:	e9d6 2300 	ldrd	r2, r3, [r6]
 800ca8a:	f7f3 fd47 	bl	800051c <__aeabi_dmul>
 800ca8e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800ca92:	3701      	adds	r7, #1
 800ca94:	1064      	asrs	r4, r4, #1
 800ca96:	3608      	adds	r6, #8
 800ca98:	e7e5      	b.n	800ca66 <_dtoa_r+0x36e>
 800ca9a:	f000 80a5 	beq.w	800cbe8 <_dtoa_r+0x4f0>
 800ca9e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800caa2:	f1ca 0400 	rsb	r4, sl, #0
 800caa6:	4b7d      	ldr	r3, [pc, #500]	; (800cc9c <_dtoa_r+0x5a4>)
 800caa8:	f004 020f 	and.w	r2, r4, #15
 800caac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800cab0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cab4:	f7f3 fd32 	bl	800051c <__aeabi_dmul>
 800cab8:	2702      	movs	r7, #2
 800caba:	2300      	movs	r3, #0
 800cabc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cac0:	4e77      	ldr	r6, [pc, #476]	; (800cca0 <_dtoa_r+0x5a8>)
 800cac2:	1124      	asrs	r4, r4, #4
 800cac4:	2c00      	cmp	r4, #0
 800cac6:	f040 8084 	bne.w	800cbd2 <_dtoa_r+0x4da>
 800caca:	2b00      	cmp	r3, #0
 800cacc:	d1d2      	bne.n	800ca74 <_dtoa_r+0x37c>
 800cace:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cad0:	2b00      	cmp	r3, #0
 800cad2:	f000 808b 	beq.w	800cbec <_dtoa_r+0x4f4>
 800cad6:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800cada:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800cade:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cae2:	2200      	movs	r2, #0
 800cae4:	4b6f      	ldr	r3, [pc, #444]	; (800cca4 <_dtoa_r+0x5ac>)
 800cae6:	f7f3 ff8b 	bl	8000a00 <__aeabi_dcmplt>
 800caea:	2800      	cmp	r0, #0
 800caec:	d07e      	beq.n	800cbec <_dtoa_r+0x4f4>
 800caee:	9b08      	ldr	r3, [sp, #32]
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	d07b      	beq.n	800cbec <_dtoa_r+0x4f4>
 800caf4:	f1b9 0f00 	cmp.w	r9, #0
 800caf8:	dd38      	ble.n	800cb6c <_dtoa_r+0x474>
 800cafa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cafe:	2200      	movs	r2, #0
 800cb00:	4b69      	ldr	r3, [pc, #420]	; (800cca8 <_dtoa_r+0x5b0>)
 800cb02:	f7f3 fd0b 	bl	800051c <__aeabi_dmul>
 800cb06:	464c      	mov	r4, r9
 800cb08:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cb0c:	f10a 38ff 	add.w	r8, sl, #4294967295
 800cb10:	3701      	adds	r7, #1
 800cb12:	4638      	mov	r0, r7
 800cb14:	f7f3 fc98 	bl	8000448 <__aeabi_i2d>
 800cb18:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cb1c:	f7f3 fcfe 	bl	800051c <__aeabi_dmul>
 800cb20:	2200      	movs	r2, #0
 800cb22:	4b62      	ldr	r3, [pc, #392]	; (800ccac <_dtoa_r+0x5b4>)
 800cb24:	f7f3 fb44 	bl	80001b0 <__adddf3>
 800cb28:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800cb2c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cb30:	9611      	str	r6, [sp, #68]	; 0x44
 800cb32:	2c00      	cmp	r4, #0
 800cb34:	d15d      	bne.n	800cbf2 <_dtoa_r+0x4fa>
 800cb36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb3a:	2200      	movs	r2, #0
 800cb3c:	4b5c      	ldr	r3, [pc, #368]	; (800ccb0 <_dtoa_r+0x5b8>)
 800cb3e:	f7f3 fb35 	bl	80001ac <__aeabi_dsub>
 800cb42:	4602      	mov	r2, r0
 800cb44:	460b      	mov	r3, r1
 800cb46:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cb4a:	4633      	mov	r3, r6
 800cb4c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cb4e:	f7f3 ff75 	bl	8000a3c <__aeabi_dcmpgt>
 800cb52:	2800      	cmp	r0, #0
 800cb54:	f040 829c 	bne.w	800d090 <_dtoa_r+0x998>
 800cb58:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb5c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cb5e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800cb62:	f7f3 ff4d 	bl	8000a00 <__aeabi_dcmplt>
 800cb66:	2800      	cmp	r0, #0
 800cb68:	f040 8290 	bne.w	800d08c <_dtoa_r+0x994>
 800cb6c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800cb70:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800cb74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800cb76:	2b00      	cmp	r3, #0
 800cb78:	f2c0 8152 	blt.w	800ce20 <_dtoa_r+0x728>
 800cb7c:	f1ba 0f0e 	cmp.w	sl, #14
 800cb80:	f300 814e 	bgt.w	800ce20 <_dtoa_r+0x728>
 800cb84:	4b45      	ldr	r3, [pc, #276]	; (800cc9c <_dtoa_r+0x5a4>)
 800cb86:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800cb8a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800cb8e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800cb92:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cb94:	2b00      	cmp	r3, #0
 800cb96:	f280 80db 	bge.w	800cd50 <_dtoa_r+0x658>
 800cb9a:	9b08      	ldr	r3, [sp, #32]
 800cb9c:	2b00      	cmp	r3, #0
 800cb9e:	f300 80d7 	bgt.w	800cd50 <_dtoa_r+0x658>
 800cba2:	f040 8272 	bne.w	800d08a <_dtoa_r+0x992>
 800cba6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800cbaa:	2200      	movs	r2, #0
 800cbac:	4b40      	ldr	r3, [pc, #256]	; (800ccb0 <_dtoa_r+0x5b8>)
 800cbae:	f7f3 fcb5 	bl	800051c <__aeabi_dmul>
 800cbb2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cbb6:	f7f3 ff37 	bl	8000a28 <__aeabi_dcmpge>
 800cbba:	9c08      	ldr	r4, [sp, #32]
 800cbbc:	4626      	mov	r6, r4
 800cbbe:	2800      	cmp	r0, #0
 800cbc0:	f040 8248 	bne.w	800d054 <_dtoa_r+0x95c>
 800cbc4:	2331      	movs	r3, #49	; 0x31
 800cbc6:	9f03      	ldr	r7, [sp, #12]
 800cbc8:	f10a 0a01 	add.w	sl, sl, #1
 800cbcc:	f807 3b01 	strb.w	r3, [r7], #1
 800cbd0:	e244      	b.n	800d05c <_dtoa_r+0x964>
 800cbd2:	07e2      	lsls	r2, r4, #31
 800cbd4:	d505      	bpl.n	800cbe2 <_dtoa_r+0x4ea>
 800cbd6:	e9d6 2300 	ldrd	r2, r3, [r6]
 800cbda:	f7f3 fc9f 	bl	800051c <__aeabi_dmul>
 800cbde:	2301      	movs	r3, #1
 800cbe0:	3701      	adds	r7, #1
 800cbe2:	1064      	asrs	r4, r4, #1
 800cbe4:	3608      	adds	r6, #8
 800cbe6:	e76d      	b.n	800cac4 <_dtoa_r+0x3cc>
 800cbe8:	2702      	movs	r7, #2
 800cbea:	e770      	b.n	800cace <_dtoa_r+0x3d6>
 800cbec:	46d0      	mov	r8, sl
 800cbee:	9c08      	ldr	r4, [sp, #32]
 800cbf0:	e78f      	b.n	800cb12 <_dtoa_r+0x41a>
 800cbf2:	9903      	ldr	r1, [sp, #12]
 800cbf4:	4b29      	ldr	r3, [pc, #164]	; (800cc9c <_dtoa_r+0x5a4>)
 800cbf6:	4421      	add	r1, r4
 800cbf8:	9112      	str	r1, [sp, #72]	; 0x48
 800cbfa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800cbfc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800cc00:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800cc04:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800cc08:	2900      	cmp	r1, #0
 800cc0a:	d055      	beq.n	800ccb8 <_dtoa_r+0x5c0>
 800cc0c:	2000      	movs	r0, #0
 800cc0e:	4929      	ldr	r1, [pc, #164]	; (800ccb4 <_dtoa_r+0x5bc>)
 800cc10:	f7f3 fdae 	bl	8000770 <__aeabi_ddiv>
 800cc14:	463b      	mov	r3, r7
 800cc16:	4632      	mov	r2, r6
 800cc18:	f7f3 fac8 	bl	80001ac <__aeabi_dsub>
 800cc1c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cc20:	9f03      	ldr	r7, [sp, #12]
 800cc22:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc26:	f7f3 ff29 	bl	8000a7c <__aeabi_d2iz>
 800cc2a:	4604      	mov	r4, r0
 800cc2c:	f7f3 fc0c 	bl	8000448 <__aeabi_i2d>
 800cc30:	4602      	mov	r2, r0
 800cc32:	460b      	mov	r3, r1
 800cc34:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc38:	f7f3 fab8 	bl	80001ac <__aeabi_dsub>
 800cc3c:	4602      	mov	r2, r0
 800cc3e:	460b      	mov	r3, r1
 800cc40:	3430      	adds	r4, #48	; 0x30
 800cc42:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cc46:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cc4a:	f807 4b01 	strb.w	r4, [r7], #1
 800cc4e:	f7f3 fed7 	bl	8000a00 <__aeabi_dcmplt>
 800cc52:	2800      	cmp	r0, #0
 800cc54:	d174      	bne.n	800cd40 <_dtoa_r+0x648>
 800cc56:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cc5a:	2000      	movs	r0, #0
 800cc5c:	4911      	ldr	r1, [pc, #68]	; (800cca4 <_dtoa_r+0x5ac>)
 800cc5e:	f7f3 faa5 	bl	80001ac <__aeabi_dsub>
 800cc62:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cc66:	f7f3 fecb 	bl	8000a00 <__aeabi_dcmplt>
 800cc6a:	2800      	cmp	r0, #0
 800cc6c:	f040 80b7 	bne.w	800cdde <_dtoa_r+0x6e6>
 800cc70:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cc72:	429f      	cmp	r7, r3
 800cc74:	f43f af7a 	beq.w	800cb6c <_dtoa_r+0x474>
 800cc78:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800cc7c:	2200      	movs	r2, #0
 800cc7e:	4b0a      	ldr	r3, [pc, #40]	; (800cca8 <_dtoa_r+0x5b0>)
 800cc80:	f7f3 fc4c 	bl	800051c <__aeabi_dmul>
 800cc84:	2200      	movs	r2, #0
 800cc86:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800cc8a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc8e:	4b06      	ldr	r3, [pc, #24]	; (800cca8 <_dtoa_r+0x5b0>)
 800cc90:	f7f3 fc44 	bl	800051c <__aeabi_dmul>
 800cc94:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cc98:	e7c3      	b.n	800cc22 <_dtoa_r+0x52a>
 800cc9a:	bf00      	nop
 800cc9c:	08010b98 	.word	0x08010b98
 800cca0:	08010b70 	.word	0x08010b70
 800cca4:	3ff00000 	.word	0x3ff00000
 800cca8:	40240000 	.word	0x40240000
 800ccac:	401c0000 	.word	0x401c0000
 800ccb0:	40140000 	.word	0x40140000
 800ccb4:	3fe00000 	.word	0x3fe00000
 800ccb8:	4630      	mov	r0, r6
 800ccba:	4639      	mov	r1, r7
 800ccbc:	f7f3 fc2e 	bl	800051c <__aeabi_dmul>
 800ccc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ccc2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800ccc6:	9c03      	ldr	r4, [sp, #12]
 800ccc8:	9314      	str	r3, [sp, #80]	; 0x50
 800ccca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ccce:	f7f3 fed5 	bl	8000a7c <__aeabi_d2iz>
 800ccd2:	9015      	str	r0, [sp, #84]	; 0x54
 800ccd4:	f7f3 fbb8 	bl	8000448 <__aeabi_i2d>
 800ccd8:	4602      	mov	r2, r0
 800ccda:	460b      	mov	r3, r1
 800ccdc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cce0:	f7f3 fa64 	bl	80001ac <__aeabi_dsub>
 800cce4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cce6:	4606      	mov	r6, r0
 800cce8:	3330      	adds	r3, #48	; 0x30
 800ccea:	f804 3b01 	strb.w	r3, [r4], #1
 800ccee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ccf0:	460f      	mov	r7, r1
 800ccf2:	429c      	cmp	r4, r3
 800ccf4:	f04f 0200 	mov.w	r2, #0
 800ccf8:	d124      	bne.n	800cd44 <_dtoa_r+0x64c>
 800ccfa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800ccfe:	4bb0      	ldr	r3, [pc, #704]	; (800cfc0 <_dtoa_r+0x8c8>)
 800cd00:	f7f3 fa56 	bl	80001b0 <__adddf3>
 800cd04:	4602      	mov	r2, r0
 800cd06:	460b      	mov	r3, r1
 800cd08:	4630      	mov	r0, r6
 800cd0a:	4639      	mov	r1, r7
 800cd0c:	f7f3 fe96 	bl	8000a3c <__aeabi_dcmpgt>
 800cd10:	2800      	cmp	r0, #0
 800cd12:	d163      	bne.n	800cddc <_dtoa_r+0x6e4>
 800cd14:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cd18:	2000      	movs	r0, #0
 800cd1a:	49a9      	ldr	r1, [pc, #676]	; (800cfc0 <_dtoa_r+0x8c8>)
 800cd1c:	f7f3 fa46 	bl	80001ac <__aeabi_dsub>
 800cd20:	4602      	mov	r2, r0
 800cd22:	460b      	mov	r3, r1
 800cd24:	4630      	mov	r0, r6
 800cd26:	4639      	mov	r1, r7
 800cd28:	f7f3 fe6a 	bl	8000a00 <__aeabi_dcmplt>
 800cd2c:	2800      	cmp	r0, #0
 800cd2e:	f43f af1d 	beq.w	800cb6c <_dtoa_r+0x474>
 800cd32:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800cd34:	1e7b      	subs	r3, r7, #1
 800cd36:	9314      	str	r3, [sp, #80]	; 0x50
 800cd38:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800cd3c:	2b30      	cmp	r3, #48	; 0x30
 800cd3e:	d0f8      	beq.n	800cd32 <_dtoa_r+0x63a>
 800cd40:	46c2      	mov	sl, r8
 800cd42:	e03b      	b.n	800cdbc <_dtoa_r+0x6c4>
 800cd44:	4b9f      	ldr	r3, [pc, #636]	; (800cfc4 <_dtoa_r+0x8cc>)
 800cd46:	f7f3 fbe9 	bl	800051c <__aeabi_dmul>
 800cd4a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cd4e:	e7bc      	b.n	800ccca <_dtoa_r+0x5d2>
 800cd50:	9f03      	ldr	r7, [sp, #12]
 800cd52:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800cd56:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cd5a:	4640      	mov	r0, r8
 800cd5c:	4649      	mov	r1, r9
 800cd5e:	f7f3 fd07 	bl	8000770 <__aeabi_ddiv>
 800cd62:	f7f3 fe8b 	bl	8000a7c <__aeabi_d2iz>
 800cd66:	4604      	mov	r4, r0
 800cd68:	f7f3 fb6e 	bl	8000448 <__aeabi_i2d>
 800cd6c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cd70:	f7f3 fbd4 	bl	800051c <__aeabi_dmul>
 800cd74:	4602      	mov	r2, r0
 800cd76:	460b      	mov	r3, r1
 800cd78:	4640      	mov	r0, r8
 800cd7a:	4649      	mov	r1, r9
 800cd7c:	f7f3 fa16 	bl	80001ac <__aeabi_dsub>
 800cd80:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800cd84:	f807 6b01 	strb.w	r6, [r7], #1
 800cd88:	9e03      	ldr	r6, [sp, #12]
 800cd8a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800cd8e:	1bbe      	subs	r6, r7, r6
 800cd90:	45b4      	cmp	ip, r6
 800cd92:	4602      	mov	r2, r0
 800cd94:	460b      	mov	r3, r1
 800cd96:	d136      	bne.n	800ce06 <_dtoa_r+0x70e>
 800cd98:	f7f3 fa0a 	bl	80001b0 <__adddf3>
 800cd9c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cda0:	4680      	mov	r8, r0
 800cda2:	4689      	mov	r9, r1
 800cda4:	f7f3 fe4a 	bl	8000a3c <__aeabi_dcmpgt>
 800cda8:	bb58      	cbnz	r0, 800ce02 <_dtoa_r+0x70a>
 800cdaa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cdae:	4640      	mov	r0, r8
 800cdb0:	4649      	mov	r1, r9
 800cdb2:	f7f3 fe1b 	bl	80009ec <__aeabi_dcmpeq>
 800cdb6:	b108      	cbz	r0, 800cdbc <_dtoa_r+0x6c4>
 800cdb8:	07e1      	lsls	r1, r4, #31
 800cdba:	d422      	bmi.n	800ce02 <_dtoa_r+0x70a>
 800cdbc:	4628      	mov	r0, r5
 800cdbe:	4659      	mov	r1, fp
 800cdc0:	f000 fe6c 	bl	800da9c <_Bfree>
 800cdc4:	2300      	movs	r3, #0
 800cdc6:	703b      	strb	r3, [r7, #0]
 800cdc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800cdca:	f10a 0001 	add.w	r0, sl, #1
 800cdce:	6018      	str	r0, [r3, #0]
 800cdd0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	f43f acde 	beq.w	800c794 <_dtoa_r+0x9c>
 800cdd8:	601f      	str	r7, [r3, #0]
 800cdda:	e4db      	b.n	800c794 <_dtoa_r+0x9c>
 800cddc:	4627      	mov	r7, r4
 800cdde:	463b      	mov	r3, r7
 800cde0:	461f      	mov	r7, r3
 800cde2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800cde6:	2a39      	cmp	r2, #57	; 0x39
 800cde8:	d107      	bne.n	800cdfa <_dtoa_r+0x702>
 800cdea:	9a03      	ldr	r2, [sp, #12]
 800cdec:	429a      	cmp	r2, r3
 800cdee:	d1f7      	bne.n	800cde0 <_dtoa_r+0x6e8>
 800cdf0:	2230      	movs	r2, #48	; 0x30
 800cdf2:	9903      	ldr	r1, [sp, #12]
 800cdf4:	f108 0801 	add.w	r8, r8, #1
 800cdf8:	700a      	strb	r2, [r1, #0]
 800cdfa:	781a      	ldrb	r2, [r3, #0]
 800cdfc:	3201      	adds	r2, #1
 800cdfe:	701a      	strb	r2, [r3, #0]
 800ce00:	e79e      	b.n	800cd40 <_dtoa_r+0x648>
 800ce02:	46d0      	mov	r8, sl
 800ce04:	e7eb      	b.n	800cdde <_dtoa_r+0x6e6>
 800ce06:	2200      	movs	r2, #0
 800ce08:	4b6e      	ldr	r3, [pc, #440]	; (800cfc4 <_dtoa_r+0x8cc>)
 800ce0a:	f7f3 fb87 	bl	800051c <__aeabi_dmul>
 800ce0e:	2200      	movs	r2, #0
 800ce10:	2300      	movs	r3, #0
 800ce12:	4680      	mov	r8, r0
 800ce14:	4689      	mov	r9, r1
 800ce16:	f7f3 fde9 	bl	80009ec <__aeabi_dcmpeq>
 800ce1a:	2800      	cmp	r0, #0
 800ce1c:	d09b      	beq.n	800cd56 <_dtoa_r+0x65e>
 800ce1e:	e7cd      	b.n	800cdbc <_dtoa_r+0x6c4>
 800ce20:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ce22:	2a00      	cmp	r2, #0
 800ce24:	f000 80d0 	beq.w	800cfc8 <_dtoa_r+0x8d0>
 800ce28:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800ce2a:	2a01      	cmp	r2, #1
 800ce2c:	f300 80ae 	bgt.w	800cf8c <_dtoa_r+0x894>
 800ce30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ce32:	2a00      	cmp	r2, #0
 800ce34:	f000 80a6 	beq.w	800cf84 <_dtoa_r+0x88c>
 800ce38:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800ce3c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ce3e:	9f06      	ldr	r7, [sp, #24]
 800ce40:	9a06      	ldr	r2, [sp, #24]
 800ce42:	2101      	movs	r1, #1
 800ce44:	441a      	add	r2, r3
 800ce46:	9206      	str	r2, [sp, #24]
 800ce48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce4a:	4628      	mov	r0, r5
 800ce4c:	441a      	add	r2, r3
 800ce4e:	9209      	str	r2, [sp, #36]	; 0x24
 800ce50:	f000 ff24 	bl	800dc9c <__i2b>
 800ce54:	4606      	mov	r6, r0
 800ce56:	2f00      	cmp	r7, #0
 800ce58:	dd0c      	ble.n	800ce74 <_dtoa_r+0x77c>
 800ce5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce5c:	2b00      	cmp	r3, #0
 800ce5e:	dd09      	ble.n	800ce74 <_dtoa_r+0x77c>
 800ce60:	42bb      	cmp	r3, r7
 800ce62:	bfa8      	it	ge
 800ce64:	463b      	movge	r3, r7
 800ce66:	9a06      	ldr	r2, [sp, #24]
 800ce68:	1aff      	subs	r7, r7, r3
 800ce6a:	1ad2      	subs	r2, r2, r3
 800ce6c:	9206      	str	r2, [sp, #24]
 800ce6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce70:	1ad3      	subs	r3, r2, r3
 800ce72:	9309      	str	r3, [sp, #36]	; 0x24
 800ce74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ce76:	b1f3      	cbz	r3, 800ceb6 <_dtoa_r+0x7be>
 800ce78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ce7a:	2b00      	cmp	r3, #0
 800ce7c:	f000 80a8 	beq.w	800cfd0 <_dtoa_r+0x8d8>
 800ce80:	2c00      	cmp	r4, #0
 800ce82:	dd10      	ble.n	800cea6 <_dtoa_r+0x7ae>
 800ce84:	4631      	mov	r1, r6
 800ce86:	4622      	mov	r2, r4
 800ce88:	4628      	mov	r0, r5
 800ce8a:	f000 ffc5 	bl	800de18 <__pow5mult>
 800ce8e:	465a      	mov	r2, fp
 800ce90:	4601      	mov	r1, r0
 800ce92:	4606      	mov	r6, r0
 800ce94:	4628      	mov	r0, r5
 800ce96:	f000 ff17 	bl	800dcc8 <__multiply>
 800ce9a:	4680      	mov	r8, r0
 800ce9c:	4659      	mov	r1, fp
 800ce9e:	4628      	mov	r0, r5
 800cea0:	f000 fdfc 	bl	800da9c <_Bfree>
 800cea4:	46c3      	mov	fp, r8
 800cea6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cea8:	1b1a      	subs	r2, r3, r4
 800ceaa:	d004      	beq.n	800ceb6 <_dtoa_r+0x7be>
 800ceac:	4659      	mov	r1, fp
 800ceae:	4628      	mov	r0, r5
 800ceb0:	f000 ffb2 	bl	800de18 <__pow5mult>
 800ceb4:	4683      	mov	fp, r0
 800ceb6:	2101      	movs	r1, #1
 800ceb8:	4628      	mov	r0, r5
 800ceba:	f000 feef 	bl	800dc9c <__i2b>
 800cebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cec0:	4604      	mov	r4, r0
 800cec2:	2b00      	cmp	r3, #0
 800cec4:	f340 8086 	ble.w	800cfd4 <_dtoa_r+0x8dc>
 800cec8:	461a      	mov	r2, r3
 800ceca:	4601      	mov	r1, r0
 800cecc:	4628      	mov	r0, r5
 800cece:	f000 ffa3 	bl	800de18 <__pow5mult>
 800ced2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ced4:	4604      	mov	r4, r0
 800ced6:	2b01      	cmp	r3, #1
 800ced8:	dd7f      	ble.n	800cfda <_dtoa_r+0x8e2>
 800ceda:	f04f 0800 	mov.w	r8, #0
 800cede:	6923      	ldr	r3, [r4, #16]
 800cee0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800cee4:	6918      	ldr	r0, [r3, #16]
 800cee6:	f000 fe8b 	bl	800dc00 <__hi0bits>
 800ceea:	f1c0 0020 	rsb	r0, r0, #32
 800ceee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cef0:	4418      	add	r0, r3
 800cef2:	f010 001f 	ands.w	r0, r0, #31
 800cef6:	f000 8092 	beq.w	800d01e <_dtoa_r+0x926>
 800cefa:	f1c0 0320 	rsb	r3, r0, #32
 800cefe:	2b04      	cmp	r3, #4
 800cf00:	f340 808a 	ble.w	800d018 <_dtoa_r+0x920>
 800cf04:	f1c0 001c 	rsb	r0, r0, #28
 800cf08:	9b06      	ldr	r3, [sp, #24]
 800cf0a:	4407      	add	r7, r0
 800cf0c:	4403      	add	r3, r0
 800cf0e:	9306      	str	r3, [sp, #24]
 800cf10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf12:	4403      	add	r3, r0
 800cf14:	9309      	str	r3, [sp, #36]	; 0x24
 800cf16:	9b06      	ldr	r3, [sp, #24]
 800cf18:	2b00      	cmp	r3, #0
 800cf1a:	dd05      	ble.n	800cf28 <_dtoa_r+0x830>
 800cf1c:	4659      	mov	r1, fp
 800cf1e:	461a      	mov	r2, r3
 800cf20:	4628      	mov	r0, r5
 800cf22:	f000 ffd3 	bl	800decc <__lshift>
 800cf26:	4683      	mov	fp, r0
 800cf28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf2a:	2b00      	cmp	r3, #0
 800cf2c:	dd05      	ble.n	800cf3a <_dtoa_r+0x842>
 800cf2e:	4621      	mov	r1, r4
 800cf30:	461a      	mov	r2, r3
 800cf32:	4628      	mov	r0, r5
 800cf34:	f000 ffca 	bl	800decc <__lshift>
 800cf38:	4604      	mov	r4, r0
 800cf3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cf3c:	2b00      	cmp	r3, #0
 800cf3e:	d070      	beq.n	800d022 <_dtoa_r+0x92a>
 800cf40:	4621      	mov	r1, r4
 800cf42:	4658      	mov	r0, fp
 800cf44:	f001 f832 	bl	800dfac <__mcmp>
 800cf48:	2800      	cmp	r0, #0
 800cf4a:	da6a      	bge.n	800d022 <_dtoa_r+0x92a>
 800cf4c:	2300      	movs	r3, #0
 800cf4e:	4659      	mov	r1, fp
 800cf50:	220a      	movs	r2, #10
 800cf52:	4628      	mov	r0, r5
 800cf54:	f000 fdc4 	bl	800dae0 <__multadd>
 800cf58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cf5a:	4683      	mov	fp, r0
 800cf5c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800cf60:	2b00      	cmp	r3, #0
 800cf62:	f000 8194 	beq.w	800d28e <_dtoa_r+0xb96>
 800cf66:	4631      	mov	r1, r6
 800cf68:	2300      	movs	r3, #0
 800cf6a:	220a      	movs	r2, #10
 800cf6c:	4628      	mov	r0, r5
 800cf6e:	f000 fdb7 	bl	800dae0 <__multadd>
 800cf72:	f1b9 0f00 	cmp.w	r9, #0
 800cf76:	4606      	mov	r6, r0
 800cf78:	f300 8093 	bgt.w	800d0a2 <_dtoa_r+0x9aa>
 800cf7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cf7e:	2b02      	cmp	r3, #2
 800cf80:	dc57      	bgt.n	800d032 <_dtoa_r+0x93a>
 800cf82:	e08e      	b.n	800d0a2 <_dtoa_r+0x9aa>
 800cf84:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cf86:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800cf8a:	e757      	b.n	800ce3c <_dtoa_r+0x744>
 800cf8c:	9b08      	ldr	r3, [sp, #32]
 800cf8e:	1e5c      	subs	r4, r3, #1
 800cf90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cf92:	42a3      	cmp	r3, r4
 800cf94:	bfb7      	itett	lt
 800cf96:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800cf98:	1b1c      	subge	r4, r3, r4
 800cf9a:	1ae2      	sublt	r2, r4, r3
 800cf9c:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800cf9e:	bfbe      	ittt	lt
 800cfa0:	940a      	strlt	r4, [sp, #40]	; 0x28
 800cfa2:	189b      	addlt	r3, r3, r2
 800cfa4:	930e      	strlt	r3, [sp, #56]	; 0x38
 800cfa6:	9b08      	ldr	r3, [sp, #32]
 800cfa8:	bfb8      	it	lt
 800cfaa:	2400      	movlt	r4, #0
 800cfac:	2b00      	cmp	r3, #0
 800cfae:	bfbb      	ittet	lt
 800cfb0:	9b06      	ldrlt	r3, [sp, #24]
 800cfb2:	9a08      	ldrlt	r2, [sp, #32]
 800cfb4:	9f06      	ldrge	r7, [sp, #24]
 800cfb6:	1a9f      	sublt	r7, r3, r2
 800cfb8:	bfac      	ite	ge
 800cfba:	9b08      	ldrge	r3, [sp, #32]
 800cfbc:	2300      	movlt	r3, #0
 800cfbe:	e73f      	b.n	800ce40 <_dtoa_r+0x748>
 800cfc0:	3fe00000 	.word	0x3fe00000
 800cfc4:	40240000 	.word	0x40240000
 800cfc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cfca:	9f06      	ldr	r7, [sp, #24]
 800cfcc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800cfce:	e742      	b.n	800ce56 <_dtoa_r+0x75e>
 800cfd0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cfd2:	e76b      	b.n	800ceac <_dtoa_r+0x7b4>
 800cfd4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800cfd6:	2b01      	cmp	r3, #1
 800cfd8:	dc19      	bgt.n	800d00e <_dtoa_r+0x916>
 800cfda:	9b04      	ldr	r3, [sp, #16]
 800cfdc:	b9bb      	cbnz	r3, 800d00e <_dtoa_r+0x916>
 800cfde:	9b05      	ldr	r3, [sp, #20]
 800cfe0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cfe4:	b99b      	cbnz	r3, 800d00e <_dtoa_r+0x916>
 800cfe6:	9b05      	ldr	r3, [sp, #20]
 800cfe8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800cfec:	0d1b      	lsrs	r3, r3, #20
 800cfee:	051b      	lsls	r3, r3, #20
 800cff0:	b183      	cbz	r3, 800d014 <_dtoa_r+0x91c>
 800cff2:	f04f 0801 	mov.w	r8, #1
 800cff6:	9b06      	ldr	r3, [sp, #24]
 800cff8:	3301      	adds	r3, #1
 800cffa:	9306      	str	r3, [sp, #24]
 800cffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cffe:	3301      	adds	r3, #1
 800d000:	9309      	str	r3, [sp, #36]	; 0x24
 800d002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d004:	2b00      	cmp	r3, #0
 800d006:	f47f af6a 	bne.w	800cede <_dtoa_r+0x7e6>
 800d00a:	2001      	movs	r0, #1
 800d00c:	e76f      	b.n	800ceee <_dtoa_r+0x7f6>
 800d00e:	f04f 0800 	mov.w	r8, #0
 800d012:	e7f6      	b.n	800d002 <_dtoa_r+0x90a>
 800d014:	4698      	mov	r8, r3
 800d016:	e7f4      	b.n	800d002 <_dtoa_r+0x90a>
 800d018:	f43f af7d 	beq.w	800cf16 <_dtoa_r+0x81e>
 800d01c:	4618      	mov	r0, r3
 800d01e:	301c      	adds	r0, #28
 800d020:	e772      	b.n	800cf08 <_dtoa_r+0x810>
 800d022:	9b08      	ldr	r3, [sp, #32]
 800d024:	2b00      	cmp	r3, #0
 800d026:	dc36      	bgt.n	800d096 <_dtoa_r+0x99e>
 800d028:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d02a:	2b02      	cmp	r3, #2
 800d02c:	dd33      	ble.n	800d096 <_dtoa_r+0x99e>
 800d02e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d032:	f1b9 0f00 	cmp.w	r9, #0
 800d036:	d10d      	bne.n	800d054 <_dtoa_r+0x95c>
 800d038:	4621      	mov	r1, r4
 800d03a:	464b      	mov	r3, r9
 800d03c:	2205      	movs	r2, #5
 800d03e:	4628      	mov	r0, r5
 800d040:	f000 fd4e 	bl	800dae0 <__multadd>
 800d044:	4601      	mov	r1, r0
 800d046:	4604      	mov	r4, r0
 800d048:	4658      	mov	r0, fp
 800d04a:	f000 ffaf 	bl	800dfac <__mcmp>
 800d04e:	2800      	cmp	r0, #0
 800d050:	f73f adb8 	bgt.w	800cbc4 <_dtoa_r+0x4cc>
 800d054:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d056:	9f03      	ldr	r7, [sp, #12]
 800d058:	ea6f 0a03 	mvn.w	sl, r3
 800d05c:	f04f 0800 	mov.w	r8, #0
 800d060:	4621      	mov	r1, r4
 800d062:	4628      	mov	r0, r5
 800d064:	f000 fd1a 	bl	800da9c <_Bfree>
 800d068:	2e00      	cmp	r6, #0
 800d06a:	f43f aea7 	beq.w	800cdbc <_dtoa_r+0x6c4>
 800d06e:	f1b8 0f00 	cmp.w	r8, #0
 800d072:	d005      	beq.n	800d080 <_dtoa_r+0x988>
 800d074:	45b0      	cmp	r8, r6
 800d076:	d003      	beq.n	800d080 <_dtoa_r+0x988>
 800d078:	4641      	mov	r1, r8
 800d07a:	4628      	mov	r0, r5
 800d07c:	f000 fd0e 	bl	800da9c <_Bfree>
 800d080:	4631      	mov	r1, r6
 800d082:	4628      	mov	r0, r5
 800d084:	f000 fd0a 	bl	800da9c <_Bfree>
 800d088:	e698      	b.n	800cdbc <_dtoa_r+0x6c4>
 800d08a:	2400      	movs	r4, #0
 800d08c:	4626      	mov	r6, r4
 800d08e:	e7e1      	b.n	800d054 <_dtoa_r+0x95c>
 800d090:	46c2      	mov	sl, r8
 800d092:	4626      	mov	r6, r4
 800d094:	e596      	b.n	800cbc4 <_dtoa_r+0x4cc>
 800d096:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d098:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d09c:	2b00      	cmp	r3, #0
 800d09e:	f000 80fd 	beq.w	800d29c <_dtoa_r+0xba4>
 800d0a2:	2f00      	cmp	r7, #0
 800d0a4:	dd05      	ble.n	800d0b2 <_dtoa_r+0x9ba>
 800d0a6:	4631      	mov	r1, r6
 800d0a8:	463a      	mov	r2, r7
 800d0aa:	4628      	mov	r0, r5
 800d0ac:	f000 ff0e 	bl	800decc <__lshift>
 800d0b0:	4606      	mov	r6, r0
 800d0b2:	f1b8 0f00 	cmp.w	r8, #0
 800d0b6:	d05c      	beq.n	800d172 <_dtoa_r+0xa7a>
 800d0b8:	4628      	mov	r0, r5
 800d0ba:	6871      	ldr	r1, [r6, #4]
 800d0bc:	f000 fcae 	bl	800da1c <_Balloc>
 800d0c0:	4607      	mov	r7, r0
 800d0c2:	b928      	cbnz	r0, 800d0d0 <_dtoa_r+0x9d8>
 800d0c4:	4602      	mov	r2, r0
 800d0c6:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d0ca:	4b7f      	ldr	r3, [pc, #508]	; (800d2c8 <_dtoa_r+0xbd0>)
 800d0cc:	f7ff bb28 	b.w	800c720 <_dtoa_r+0x28>
 800d0d0:	6932      	ldr	r2, [r6, #16]
 800d0d2:	f106 010c 	add.w	r1, r6, #12
 800d0d6:	3202      	adds	r2, #2
 800d0d8:	0092      	lsls	r2, r2, #2
 800d0da:	300c      	adds	r0, #12
 800d0dc:	f7fd fcb6 	bl	800aa4c <memcpy>
 800d0e0:	2201      	movs	r2, #1
 800d0e2:	4639      	mov	r1, r7
 800d0e4:	4628      	mov	r0, r5
 800d0e6:	f000 fef1 	bl	800decc <__lshift>
 800d0ea:	46b0      	mov	r8, r6
 800d0ec:	4606      	mov	r6, r0
 800d0ee:	9b03      	ldr	r3, [sp, #12]
 800d0f0:	3301      	adds	r3, #1
 800d0f2:	9308      	str	r3, [sp, #32]
 800d0f4:	9b03      	ldr	r3, [sp, #12]
 800d0f6:	444b      	add	r3, r9
 800d0f8:	930a      	str	r3, [sp, #40]	; 0x28
 800d0fa:	9b04      	ldr	r3, [sp, #16]
 800d0fc:	f003 0301 	and.w	r3, r3, #1
 800d100:	9309      	str	r3, [sp, #36]	; 0x24
 800d102:	9b08      	ldr	r3, [sp, #32]
 800d104:	4621      	mov	r1, r4
 800d106:	3b01      	subs	r3, #1
 800d108:	4658      	mov	r0, fp
 800d10a:	9304      	str	r3, [sp, #16]
 800d10c:	f7ff fa66 	bl	800c5dc <quorem>
 800d110:	4603      	mov	r3, r0
 800d112:	4641      	mov	r1, r8
 800d114:	3330      	adds	r3, #48	; 0x30
 800d116:	9006      	str	r0, [sp, #24]
 800d118:	4658      	mov	r0, fp
 800d11a:	930b      	str	r3, [sp, #44]	; 0x2c
 800d11c:	f000 ff46 	bl	800dfac <__mcmp>
 800d120:	4632      	mov	r2, r6
 800d122:	4681      	mov	r9, r0
 800d124:	4621      	mov	r1, r4
 800d126:	4628      	mov	r0, r5
 800d128:	f000 ff5c 	bl	800dfe4 <__mdiff>
 800d12c:	68c2      	ldr	r2, [r0, #12]
 800d12e:	4607      	mov	r7, r0
 800d130:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d132:	bb02      	cbnz	r2, 800d176 <_dtoa_r+0xa7e>
 800d134:	4601      	mov	r1, r0
 800d136:	4658      	mov	r0, fp
 800d138:	f000 ff38 	bl	800dfac <__mcmp>
 800d13c:	4602      	mov	r2, r0
 800d13e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d140:	4639      	mov	r1, r7
 800d142:	4628      	mov	r0, r5
 800d144:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800d148:	f000 fca8 	bl	800da9c <_Bfree>
 800d14c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d14e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d150:	9f08      	ldr	r7, [sp, #32]
 800d152:	ea43 0102 	orr.w	r1, r3, r2
 800d156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d158:	430b      	orrs	r3, r1
 800d15a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d15c:	d10d      	bne.n	800d17a <_dtoa_r+0xa82>
 800d15e:	2b39      	cmp	r3, #57	; 0x39
 800d160:	d029      	beq.n	800d1b6 <_dtoa_r+0xabe>
 800d162:	f1b9 0f00 	cmp.w	r9, #0
 800d166:	dd01      	ble.n	800d16c <_dtoa_r+0xa74>
 800d168:	9b06      	ldr	r3, [sp, #24]
 800d16a:	3331      	adds	r3, #49	; 0x31
 800d16c:	9a04      	ldr	r2, [sp, #16]
 800d16e:	7013      	strb	r3, [r2, #0]
 800d170:	e776      	b.n	800d060 <_dtoa_r+0x968>
 800d172:	4630      	mov	r0, r6
 800d174:	e7b9      	b.n	800d0ea <_dtoa_r+0x9f2>
 800d176:	2201      	movs	r2, #1
 800d178:	e7e2      	b.n	800d140 <_dtoa_r+0xa48>
 800d17a:	f1b9 0f00 	cmp.w	r9, #0
 800d17e:	db06      	blt.n	800d18e <_dtoa_r+0xa96>
 800d180:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d182:	ea41 0909 	orr.w	r9, r1, r9
 800d186:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d188:	ea59 0101 	orrs.w	r1, r9, r1
 800d18c:	d120      	bne.n	800d1d0 <_dtoa_r+0xad8>
 800d18e:	2a00      	cmp	r2, #0
 800d190:	ddec      	ble.n	800d16c <_dtoa_r+0xa74>
 800d192:	4659      	mov	r1, fp
 800d194:	2201      	movs	r2, #1
 800d196:	4628      	mov	r0, r5
 800d198:	9308      	str	r3, [sp, #32]
 800d19a:	f000 fe97 	bl	800decc <__lshift>
 800d19e:	4621      	mov	r1, r4
 800d1a0:	4683      	mov	fp, r0
 800d1a2:	f000 ff03 	bl	800dfac <__mcmp>
 800d1a6:	2800      	cmp	r0, #0
 800d1a8:	9b08      	ldr	r3, [sp, #32]
 800d1aa:	dc02      	bgt.n	800d1b2 <_dtoa_r+0xaba>
 800d1ac:	d1de      	bne.n	800d16c <_dtoa_r+0xa74>
 800d1ae:	07da      	lsls	r2, r3, #31
 800d1b0:	d5dc      	bpl.n	800d16c <_dtoa_r+0xa74>
 800d1b2:	2b39      	cmp	r3, #57	; 0x39
 800d1b4:	d1d8      	bne.n	800d168 <_dtoa_r+0xa70>
 800d1b6:	2339      	movs	r3, #57	; 0x39
 800d1b8:	9a04      	ldr	r2, [sp, #16]
 800d1ba:	7013      	strb	r3, [r2, #0]
 800d1bc:	463b      	mov	r3, r7
 800d1be:	461f      	mov	r7, r3
 800d1c0:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800d1c4:	3b01      	subs	r3, #1
 800d1c6:	2a39      	cmp	r2, #57	; 0x39
 800d1c8:	d050      	beq.n	800d26c <_dtoa_r+0xb74>
 800d1ca:	3201      	adds	r2, #1
 800d1cc:	701a      	strb	r2, [r3, #0]
 800d1ce:	e747      	b.n	800d060 <_dtoa_r+0x968>
 800d1d0:	2a00      	cmp	r2, #0
 800d1d2:	dd03      	ble.n	800d1dc <_dtoa_r+0xae4>
 800d1d4:	2b39      	cmp	r3, #57	; 0x39
 800d1d6:	d0ee      	beq.n	800d1b6 <_dtoa_r+0xabe>
 800d1d8:	3301      	adds	r3, #1
 800d1da:	e7c7      	b.n	800d16c <_dtoa_r+0xa74>
 800d1dc:	9a08      	ldr	r2, [sp, #32]
 800d1de:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d1e0:	f802 3c01 	strb.w	r3, [r2, #-1]
 800d1e4:	428a      	cmp	r2, r1
 800d1e6:	d02a      	beq.n	800d23e <_dtoa_r+0xb46>
 800d1e8:	4659      	mov	r1, fp
 800d1ea:	2300      	movs	r3, #0
 800d1ec:	220a      	movs	r2, #10
 800d1ee:	4628      	mov	r0, r5
 800d1f0:	f000 fc76 	bl	800dae0 <__multadd>
 800d1f4:	45b0      	cmp	r8, r6
 800d1f6:	4683      	mov	fp, r0
 800d1f8:	f04f 0300 	mov.w	r3, #0
 800d1fc:	f04f 020a 	mov.w	r2, #10
 800d200:	4641      	mov	r1, r8
 800d202:	4628      	mov	r0, r5
 800d204:	d107      	bne.n	800d216 <_dtoa_r+0xb1e>
 800d206:	f000 fc6b 	bl	800dae0 <__multadd>
 800d20a:	4680      	mov	r8, r0
 800d20c:	4606      	mov	r6, r0
 800d20e:	9b08      	ldr	r3, [sp, #32]
 800d210:	3301      	adds	r3, #1
 800d212:	9308      	str	r3, [sp, #32]
 800d214:	e775      	b.n	800d102 <_dtoa_r+0xa0a>
 800d216:	f000 fc63 	bl	800dae0 <__multadd>
 800d21a:	4631      	mov	r1, r6
 800d21c:	4680      	mov	r8, r0
 800d21e:	2300      	movs	r3, #0
 800d220:	220a      	movs	r2, #10
 800d222:	4628      	mov	r0, r5
 800d224:	f000 fc5c 	bl	800dae0 <__multadd>
 800d228:	4606      	mov	r6, r0
 800d22a:	e7f0      	b.n	800d20e <_dtoa_r+0xb16>
 800d22c:	f1b9 0f00 	cmp.w	r9, #0
 800d230:	bfcc      	ite	gt
 800d232:	464f      	movgt	r7, r9
 800d234:	2701      	movle	r7, #1
 800d236:	f04f 0800 	mov.w	r8, #0
 800d23a:	9a03      	ldr	r2, [sp, #12]
 800d23c:	4417      	add	r7, r2
 800d23e:	4659      	mov	r1, fp
 800d240:	2201      	movs	r2, #1
 800d242:	4628      	mov	r0, r5
 800d244:	9308      	str	r3, [sp, #32]
 800d246:	f000 fe41 	bl	800decc <__lshift>
 800d24a:	4621      	mov	r1, r4
 800d24c:	4683      	mov	fp, r0
 800d24e:	f000 fead 	bl	800dfac <__mcmp>
 800d252:	2800      	cmp	r0, #0
 800d254:	dcb2      	bgt.n	800d1bc <_dtoa_r+0xac4>
 800d256:	d102      	bne.n	800d25e <_dtoa_r+0xb66>
 800d258:	9b08      	ldr	r3, [sp, #32]
 800d25a:	07db      	lsls	r3, r3, #31
 800d25c:	d4ae      	bmi.n	800d1bc <_dtoa_r+0xac4>
 800d25e:	463b      	mov	r3, r7
 800d260:	461f      	mov	r7, r3
 800d262:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d266:	2a30      	cmp	r2, #48	; 0x30
 800d268:	d0fa      	beq.n	800d260 <_dtoa_r+0xb68>
 800d26a:	e6f9      	b.n	800d060 <_dtoa_r+0x968>
 800d26c:	9a03      	ldr	r2, [sp, #12]
 800d26e:	429a      	cmp	r2, r3
 800d270:	d1a5      	bne.n	800d1be <_dtoa_r+0xac6>
 800d272:	2331      	movs	r3, #49	; 0x31
 800d274:	f10a 0a01 	add.w	sl, sl, #1
 800d278:	e779      	b.n	800d16e <_dtoa_r+0xa76>
 800d27a:	4b14      	ldr	r3, [pc, #80]	; (800d2cc <_dtoa_r+0xbd4>)
 800d27c:	f7ff baa8 	b.w	800c7d0 <_dtoa_r+0xd8>
 800d280:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d282:	2b00      	cmp	r3, #0
 800d284:	f47f aa81 	bne.w	800c78a <_dtoa_r+0x92>
 800d288:	4b11      	ldr	r3, [pc, #68]	; (800d2d0 <_dtoa_r+0xbd8>)
 800d28a:	f7ff baa1 	b.w	800c7d0 <_dtoa_r+0xd8>
 800d28e:	f1b9 0f00 	cmp.w	r9, #0
 800d292:	dc03      	bgt.n	800d29c <_dtoa_r+0xba4>
 800d294:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800d296:	2b02      	cmp	r3, #2
 800d298:	f73f aecb 	bgt.w	800d032 <_dtoa_r+0x93a>
 800d29c:	9f03      	ldr	r7, [sp, #12]
 800d29e:	4621      	mov	r1, r4
 800d2a0:	4658      	mov	r0, fp
 800d2a2:	f7ff f99b 	bl	800c5dc <quorem>
 800d2a6:	9a03      	ldr	r2, [sp, #12]
 800d2a8:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800d2ac:	f807 3b01 	strb.w	r3, [r7], #1
 800d2b0:	1aba      	subs	r2, r7, r2
 800d2b2:	4591      	cmp	r9, r2
 800d2b4:	ddba      	ble.n	800d22c <_dtoa_r+0xb34>
 800d2b6:	4659      	mov	r1, fp
 800d2b8:	2300      	movs	r3, #0
 800d2ba:	220a      	movs	r2, #10
 800d2bc:	4628      	mov	r0, r5
 800d2be:	f000 fc0f 	bl	800dae0 <__multadd>
 800d2c2:	4683      	mov	fp, r0
 800d2c4:	e7eb      	b.n	800d29e <_dtoa_r+0xba6>
 800d2c6:	bf00      	nop
 800d2c8:	08010a88 	.word	0x08010a88
 800d2cc:	08010c81 	.word	0x08010c81
 800d2d0:	08010a09 	.word	0x08010a09

0800d2d4 <rshift>:
 800d2d4:	6903      	ldr	r3, [r0, #16]
 800d2d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d2da:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800d2de:	f100 0414 	add.w	r4, r0, #20
 800d2e2:	ea4f 1261 	mov.w	r2, r1, asr #5
 800d2e6:	dd46      	ble.n	800d376 <rshift+0xa2>
 800d2e8:	f011 011f 	ands.w	r1, r1, #31
 800d2ec:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800d2f0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800d2f4:	d10c      	bne.n	800d310 <rshift+0x3c>
 800d2f6:	4629      	mov	r1, r5
 800d2f8:	f100 0710 	add.w	r7, r0, #16
 800d2fc:	42b1      	cmp	r1, r6
 800d2fe:	d335      	bcc.n	800d36c <rshift+0x98>
 800d300:	1a9b      	subs	r3, r3, r2
 800d302:	009b      	lsls	r3, r3, #2
 800d304:	1eea      	subs	r2, r5, #3
 800d306:	4296      	cmp	r6, r2
 800d308:	bf38      	it	cc
 800d30a:	2300      	movcc	r3, #0
 800d30c:	4423      	add	r3, r4
 800d30e:	e015      	b.n	800d33c <rshift+0x68>
 800d310:	46a1      	mov	r9, r4
 800d312:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800d316:	f1c1 0820 	rsb	r8, r1, #32
 800d31a:	40cf      	lsrs	r7, r1
 800d31c:	f105 0e04 	add.w	lr, r5, #4
 800d320:	4576      	cmp	r6, lr
 800d322:	46f4      	mov	ip, lr
 800d324:	d816      	bhi.n	800d354 <rshift+0x80>
 800d326:	1a9a      	subs	r2, r3, r2
 800d328:	0092      	lsls	r2, r2, #2
 800d32a:	3a04      	subs	r2, #4
 800d32c:	3501      	adds	r5, #1
 800d32e:	42ae      	cmp	r6, r5
 800d330:	bf38      	it	cc
 800d332:	2200      	movcc	r2, #0
 800d334:	18a3      	adds	r3, r4, r2
 800d336:	50a7      	str	r7, [r4, r2]
 800d338:	b107      	cbz	r7, 800d33c <rshift+0x68>
 800d33a:	3304      	adds	r3, #4
 800d33c:	42a3      	cmp	r3, r4
 800d33e:	eba3 0204 	sub.w	r2, r3, r4
 800d342:	bf08      	it	eq
 800d344:	2300      	moveq	r3, #0
 800d346:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800d34a:	6102      	str	r2, [r0, #16]
 800d34c:	bf08      	it	eq
 800d34e:	6143      	streq	r3, [r0, #20]
 800d350:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d354:	f8dc c000 	ldr.w	ip, [ip]
 800d358:	fa0c fc08 	lsl.w	ip, ip, r8
 800d35c:	ea4c 0707 	orr.w	r7, ip, r7
 800d360:	f849 7b04 	str.w	r7, [r9], #4
 800d364:	f85e 7b04 	ldr.w	r7, [lr], #4
 800d368:	40cf      	lsrs	r7, r1
 800d36a:	e7d9      	b.n	800d320 <rshift+0x4c>
 800d36c:	f851 cb04 	ldr.w	ip, [r1], #4
 800d370:	f847 cf04 	str.w	ip, [r7, #4]!
 800d374:	e7c2      	b.n	800d2fc <rshift+0x28>
 800d376:	4623      	mov	r3, r4
 800d378:	e7e0      	b.n	800d33c <rshift+0x68>

0800d37a <__hexdig_fun>:
 800d37a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800d37e:	2b09      	cmp	r3, #9
 800d380:	d802      	bhi.n	800d388 <__hexdig_fun+0xe>
 800d382:	3820      	subs	r0, #32
 800d384:	b2c0      	uxtb	r0, r0
 800d386:	4770      	bx	lr
 800d388:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800d38c:	2b05      	cmp	r3, #5
 800d38e:	d801      	bhi.n	800d394 <__hexdig_fun+0x1a>
 800d390:	3847      	subs	r0, #71	; 0x47
 800d392:	e7f7      	b.n	800d384 <__hexdig_fun+0xa>
 800d394:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800d398:	2b05      	cmp	r3, #5
 800d39a:	d801      	bhi.n	800d3a0 <__hexdig_fun+0x26>
 800d39c:	3827      	subs	r0, #39	; 0x27
 800d39e:	e7f1      	b.n	800d384 <__hexdig_fun+0xa>
 800d3a0:	2000      	movs	r0, #0
 800d3a2:	4770      	bx	lr

0800d3a4 <__gethex>:
 800d3a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3a8:	b08b      	sub	sp, #44	; 0x2c
 800d3aa:	9305      	str	r3, [sp, #20]
 800d3ac:	4bb2      	ldr	r3, [pc, #712]	; (800d678 <__gethex+0x2d4>)
 800d3ae:	9002      	str	r0, [sp, #8]
 800d3b0:	681b      	ldr	r3, [r3, #0]
 800d3b2:	468b      	mov	fp, r1
 800d3b4:	4618      	mov	r0, r3
 800d3b6:	4690      	mov	r8, r2
 800d3b8:	9303      	str	r3, [sp, #12]
 800d3ba:	f7f2 feeb 	bl	8000194 <strlen>
 800d3be:	4682      	mov	sl, r0
 800d3c0:	9b03      	ldr	r3, [sp, #12]
 800d3c2:	f8db 2000 	ldr.w	r2, [fp]
 800d3c6:	4403      	add	r3, r0
 800d3c8:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800d3cc:	9306      	str	r3, [sp, #24]
 800d3ce:	1c93      	adds	r3, r2, #2
 800d3d0:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800d3d4:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800d3d8:	32fe      	adds	r2, #254	; 0xfe
 800d3da:	18d1      	adds	r1, r2, r3
 800d3dc:	461f      	mov	r7, r3
 800d3de:	f813 0b01 	ldrb.w	r0, [r3], #1
 800d3e2:	9101      	str	r1, [sp, #4]
 800d3e4:	2830      	cmp	r0, #48	; 0x30
 800d3e6:	d0f8      	beq.n	800d3da <__gethex+0x36>
 800d3e8:	f7ff ffc7 	bl	800d37a <__hexdig_fun>
 800d3ec:	4604      	mov	r4, r0
 800d3ee:	2800      	cmp	r0, #0
 800d3f0:	d13a      	bne.n	800d468 <__gethex+0xc4>
 800d3f2:	4652      	mov	r2, sl
 800d3f4:	4638      	mov	r0, r7
 800d3f6:	9903      	ldr	r1, [sp, #12]
 800d3f8:	f001 fd9a 	bl	800ef30 <strncmp>
 800d3fc:	4605      	mov	r5, r0
 800d3fe:	2800      	cmp	r0, #0
 800d400:	d166      	bne.n	800d4d0 <__gethex+0x12c>
 800d402:	f817 000a 	ldrb.w	r0, [r7, sl]
 800d406:	eb07 060a 	add.w	r6, r7, sl
 800d40a:	f7ff ffb6 	bl	800d37a <__hexdig_fun>
 800d40e:	2800      	cmp	r0, #0
 800d410:	d060      	beq.n	800d4d4 <__gethex+0x130>
 800d412:	4633      	mov	r3, r6
 800d414:	7818      	ldrb	r0, [r3, #0]
 800d416:	461f      	mov	r7, r3
 800d418:	2830      	cmp	r0, #48	; 0x30
 800d41a:	f103 0301 	add.w	r3, r3, #1
 800d41e:	d0f9      	beq.n	800d414 <__gethex+0x70>
 800d420:	f7ff ffab 	bl	800d37a <__hexdig_fun>
 800d424:	2301      	movs	r3, #1
 800d426:	fab0 f480 	clz	r4, r0
 800d42a:	4635      	mov	r5, r6
 800d42c:	0964      	lsrs	r4, r4, #5
 800d42e:	9301      	str	r3, [sp, #4]
 800d430:	463a      	mov	r2, r7
 800d432:	4616      	mov	r6, r2
 800d434:	7830      	ldrb	r0, [r6, #0]
 800d436:	3201      	adds	r2, #1
 800d438:	f7ff ff9f 	bl	800d37a <__hexdig_fun>
 800d43c:	2800      	cmp	r0, #0
 800d43e:	d1f8      	bne.n	800d432 <__gethex+0x8e>
 800d440:	4652      	mov	r2, sl
 800d442:	4630      	mov	r0, r6
 800d444:	9903      	ldr	r1, [sp, #12]
 800d446:	f001 fd73 	bl	800ef30 <strncmp>
 800d44a:	b980      	cbnz	r0, 800d46e <__gethex+0xca>
 800d44c:	b94d      	cbnz	r5, 800d462 <__gethex+0xbe>
 800d44e:	eb06 050a 	add.w	r5, r6, sl
 800d452:	462a      	mov	r2, r5
 800d454:	4616      	mov	r6, r2
 800d456:	7830      	ldrb	r0, [r6, #0]
 800d458:	3201      	adds	r2, #1
 800d45a:	f7ff ff8e 	bl	800d37a <__hexdig_fun>
 800d45e:	2800      	cmp	r0, #0
 800d460:	d1f8      	bne.n	800d454 <__gethex+0xb0>
 800d462:	1bad      	subs	r5, r5, r6
 800d464:	00ad      	lsls	r5, r5, #2
 800d466:	e004      	b.n	800d472 <__gethex+0xce>
 800d468:	2400      	movs	r4, #0
 800d46a:	4625      	mov	r5, r4
 800d46c:	e7e0      	b.n	800d430 <__gethex+0x8c>
 800d46e:	2d00      	cmp	r5, #0
 800d470:	d1f7      	bne.n	800d462 <__gethex+0xbe>
 800d472:	7833      	ldrb	r3, [r6, #0]
 800d474:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800d478:	2b50      	cmp	r3, #80	; 0x50
 800d47a:	d139      	bne.n	800d4f0 <__gethex+0x14c>
 800d47c:	7873      	ldrb	r3, [r6, #1]
 800d47e:	2b2b      	cmp	r3, #43	; 0x2b
 800d480:	d02a      	beq.n	800d4d8 <__gethex+0x134>
 800d482:	2b2d      	cmp	r3, #45	; 0x2d
 800d484:	d02c      	beq.n	800d4e0 <__gethex+0x13c>
 800d486:	f04f 0900 	mov.w	r9, #0
 800d48a:	1c71      	adds	r1, r6, #1
 800d48c:	7808      	ldrb	r0, [r1, #0]
 800d48e:	f7ff ff74 	bl	800d37a <__hexdig_fun>
 800d492:	1e43      	subs	r3, r0, #1
 800d494:	b2db      	uxtb	r3, r3
 800d496:	2b18      	cmp	r3, #24
 800d498:	d82a      	bhi.n	800d4f0 <__gethex+0x14c>
 800d49a:	f1a0 0210 	sub.w	r2, r0, #16
 800d49e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d4a2:	f7ff ff6a 	bl	800d37a <__hexdig_fun>
 800d4a6:	1e43      	subs	r3, r0, #1
 800d4a8:	b2db      	uxtb	r3, r3
 800d4aa:	2b18      	cmp	r3, #24
 800d4ac:	d91b      	bls.n	800d4e6 <__gethex+0x142>
 800d4ae:	f1b9 0f00 	cmp.w	r9, #0
 800d4b2:	d000      	beq.n	800d4b6 <__gethex+0x112>
 800d4b4:	4252      	negs	r2, r2
 800d4b6:	4415      	add	r5, r2
 800d4b8:	f8cb 1000 	str.w	r1, [fp]
 800d4bc:	b1d4      	cbz	r4, 800d4f4 <__gethex+0x150>
 800d4be:	9b01      	ldr	r3, [sp, #4]
 800d4c0:	2b00      	cmp	r3, #0
 800d4c2:	bf14      	ite	ne
 800d4c4:	2700      	movne	r7, #0
 800d4c6:	2706      	moveq	r7, #6
 800d4c8:	4638      	mov	r0, r7
 800d4ca:	b00b      	add	sp, #44	; 0x2c
 800d4cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4d0:	463e      	mov	r6, r7
 800d4d2:	4625      	mov	r5, r4
 800d4d4:	2401      	movs	r4, #1
 800d4d6:	e7cc      	b.n	800d472 <__gethex+0xce>
 800d4d8:	f04f 0900 	mov.w	r9, #0
 800d4dc:	1cb1      	adds	r1, r6, #2
 800d4de:	e7d5      	b.n	800d48c <__gethex+0xe8>
 800d4e0:	f04f 0901 	mov.w	r9, #1
 800d4e4:	e7fa      	b.n	800d4dc <__gethex+0x138>
 800d4e6:	230a      	movs	r3, #10
 800d4e8:	fb03 0202 	mla	r2, r3, r2, r0
 800d4ec:	3a10      	subs	r2, #16
 800d4ee:	e7d6      	b.n	800d49e <__gethex+0xfa>
 800d4f0:	4631      	mov	r1, r6
 800d4f2:	e7e1      	b.n	800d4b8 <__gethex+0x114>
 800d4f4:	4621      	mov	r1, r4
 800d4f6:	1bf3      	subs	r3, r6, r7
 800d4f8:	3b01      	subs	r3, #1
 800d4fa:	2b07      	cmp	r3, #7
 800d4fc:	dc0a      	bgt.n	800d514 <__gethex+0x170>
 800d4fe:	9802      	ldr	r0, [sp, #8]
 800d500:	f000 fa8c 	bl	800da1c <_Balloc>
 800d504:	4604      	mov	r4, r0
 800d506:	b940      	cbnz	r0, 800d51a <__gethex+0x176>
 800d508:	4602      	mov	r2, r0
 800d50a:	21de      	movs	r1, #222	; 0xde
 800d50c:	4b5b      	ldr	r3, [pc, #364]	; (800d67c <__gethex+0x2d8>)
 800d50e:	485c      	ldr	r0, [pc, #368]	; (800d680 <__gethex+0x2dc>)
 800d510:	f001 fddc 	bl	800f0cc <__assert_func>
 800d514:	3101      	adds	r1, #1
 800d516:	105b      	asrs	r3, r3, #1
 800d518:	e7ef      	b.n	800d4fa <__gethex+0x156>
 800d51a:	f04f 0b00 	mov.w	fp, #0
 800d51e:	f100 0914 	add.w	r9, r0, #20
 800d522:	f1ca 0301 	rsb	r3, sl, #1
 800d526:	f8cd 9010 	str.w	r9, [sp, #16]
 800d52a:	f8cd b004 	str.w	fp, [sp, #4]
 800d52e:	9308      	str	r3, [sp, #32]
 800d530:	42b7      	cmp	r7, r6
 800d532:	d33f      	bcc.n	800d5b4 <__gethex+0x210>
 800d534:	9f04      	ldr	r7, [sp, #16]
 800d536:	9b01      	ldr	r3, [sp, #4]
 800d538:	f847 3b04 	str.w	r3, [r7], #4
 800d53c:	eba7 0709 	sub.w	r7, r7, r9
 800d540:	10bf      	asrs	r7, r7, #2
 800d542:	6127      	str	r7, [r4, #16]
 800d544:	4618      	mov	r0, r3
 800d546:	f000 fb5b 	bl	800dc00 <__hi0bits>
 800d54a:	017f      	lsls	r7, r7, #5
 800d54c:	f8d8 6000 	ldr.w	r6, [r8]
 800d550:	1a3f      	subs	r7, r7, r0
 800d552:	42b7      	cmp	r7, r6
 800d554:	dd62      	ble.n	800d61c <__gethex+0x278>
 800d556:	1bbf      	subs	r7, r7, r6
 800d558:	4639      	mov	r1, r7
 800d55a:	4620      	mov	r0, r4
 800d55c:	f000 fef5 	bl	800e34a <__any_on>
 800d560:	4682      	mov	sl, r0
 800d562:	b1a8      	cbz	r0, 800d590 <__gethex+0x1ec>
 800d564:	f04f 0a01 	mov.w	sl, #1
 800d568:	1e7b      	subs	r3, r7, #1
 800d56a:	1159      	asrs	r1, r3, #5
 800d56c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d570:	f003 021f 	and.w	r2, r3, #31
 800d574:	fa0a f202 	lsl.w	r2, sl, r2
 800d578:	420a      	tst	r2, r1
 800d57a:	d009      	beq.n	800d590 <__gethex+0x1ec>
 800d57c:	4553      	cmp	r3, sl
 800d57e:	dd05      	ble.n	800d58c <__gethex+0x1e8>
 800d580:	4620      	mov	r0, r4
 800d582:	1eb9      	subs	r1, r7, #2
 800d584:	f000 fee1 	bl	800e34a <__any_on>
 800d588:	2800      	cmp	r0, #0
 800d58a:	d144      	bne.n	800d616 <__gethex+0x272>
 800d58c:	f04f 0a02 	mov.w	sl, #2
 800d590:	4639      	mov	r1, r7
 800d592:	4620      	mov	r0, r4
 800d594:	f7ff fe9e 	bl	800d2d4 <rshift>
 800d598:	443d      	add	r5, r7
 800d59a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d59e:	42ab      	cmp	r3, r5
 800d5a0:	da4a      	bge.n	800d638 <__gethex+0x294>
 800d5a2:	4621      	mov	r1, r4
 800d5a4:	9802      	ldr	r0, [sp, #8]
 800d5a6:	f000 fa79 	bl	800da9c <_Bfree>
 800d5aa:	2300      	movs	r3, #0
 800d5ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d5ae:	27a3      	movs	r7, #163	; 0xa3
 800d5b0:	6013      	str	r3, [r2, #0]
 800d5b2:	e789      	b.n	800d4c8 <__gethex+0x124>
 800d5b4:	1e73      	subs	r3, r6, #1
 800d5b6:	9a06      	ldr	r2, [sp, #24]
 800d5b8:	9307      	str	r3, [sp, #28]
 800d5ba:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800d5be:	4293      	cmp	r3, r2
 800d5c0:	d019      	beq.n	800d5f6 <__gethex+0x252>
 800d5c2:	f1bb 0f20 	cmp.w	fp, #32
 800d5c6:	d107      	bne.n	800d5d8 <__gethex+0x234>
 800d5c8:	9b04      	ldr	r3, [sp, #16]
 800d5ca:	9a01      	ldr	r2, [sp, #4]
 800d5cc:	f843 2b04 	str.w	r2, [r3], #4
 800d5d0:	9304      	str	r3, [sp, #16]
 800d5d2:	2300      	movs	r3, #0
 800d5d4:	469b      	mov	fp, r3
 800d5d6:	9301      	str	r3, [sp, #4]
 800d5d8:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800d5dc:	f7ff fecd 	bl	800d37a <__hexdig_fun>
 800d5e0:	9b01      	ldr	r3, [sp, #4]
 800d5e2:	f000 000f 	and.w	r0, r0, #15
 800d5e6:	fa00 f00b 	lsl.w	r0, r0, fp
 800d5ea:	4303      	orrs	r3, r0
 800d5ec:	9301      	str	r3, [sp, #4]
 800d5ee:	f10b 0b04 	add.w	fp, fp, #4
 800d5f2:	9b07      	ldr	r3, [sp, #28]
 800d5f4:	e00d      	b.n	800d612 <__gethex+0x26e>
 800d5f6:	9a08      	ldr	r2, [sp, #32]
 800d5f8:	1e73      	subs	r3, r6, #1
 800d5fa:	4413      	add	r3, r2
 800d5fc:	42bb      	cmp	r3, r7
 800d5fe:	d3e0      	bcc.n	800d5c2 <__gethex+0x21e>
 800d600:	4618      	mov	r0, r3
 800d602:	4652      	mov	r2, sl
 800d604:	9903      	ldr	r1, [sp, #12]
 800d606:	9309      	str	r3, [sp, #36]	; 0x24
 800d608:	f001 fc92 	bl	800ef30 <strncmp>
 800d60c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d60e:	2800      	cmp	r0, #0
 800d610:	d1d7      	bne.n	800d5c2 <__gethex+0x21e>
 800d612:	461e      	mov	r6, r3
 800d614:	e78c      	b.n	800d530 <__gethex+0x18c>
 800d616:	f04f 0a03 	mov.w	sl, #3
 800d61a:	e7b9      	b.n	800d590 <__gethex+0x1ec>
 800d61c:	da09      	bge.n	800d632 <__gethex+0x28e>
 800d61e:	1bf7      	subs	r7, r6, r7
 800d620:	4621      	mov	r1, r4
 800d622:	463a      	mov	r2, r7
 800d624:	9802      	ldr	r0, [sp, #8]
 800d626:	f000 fc51 	bl	800decc <__lshift>
 800d62a:	4604      	mov	r4, r0
 800d62c:	1bed      	subs	r5, r5, r7
 800d62e:	f100 0914 	add.w	r9, r0, #20
 800d632:	f04f 0a00 	mov.w	sl, #0
 800d636:	e7b0      	b.n	800d59a <__gethex+0x1f6>
 800d638:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d63c:	42a8      	cmp	r0, r5
 800d63e:	dd72      	ble.n	800d726 <__gethex+0x382>
 800d640:	1b45      	subs	r5, r0, r5
 800d642:	42ae      	cmp	r6, r5
 800d644:	dc35      	bgt.n	800d6b2 <__gethex+0x30e>
 800d646:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d64a:	2b02      	cmp	r3, #2
 800d64c:	d029      	beq.n	800d6a2 <__gethex+0x2fe>
 800d64e:	2b03      	cmp	r3, #3
 800d650:	d02b      	beq.n	800d6aa <__gethex+0x306>
 800d652:	2b01      	cmp	r3, #1
 800d654:	d11c      	bne.n	800d690 <__gethex+0x2ec>
 800d656:	42ae      	cmp	r6, r5
 800d658:	d11a      	bne.n	800d690 <__gethex+0x2ec>
 800d65a:	2e01      	cmp	r6, #1
 800d65c:	d112      	bne.n	800d684 <__gethex+0x2e0>
 800d65e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d662:	9a05      	ldr	r2, [sp, #20]
 800d664:	2762      	movs	r7, #98	; 0x62
 800d666:	6013      	str	r3, [r2, #0]
 800d668:	2301      	movs	r3, #1
 800d66a:	6123      	str	r3, [r4, #16]
 800d66c:	f8c9 3000 	str.w	r3, [r9]
 800d670:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d672:	601c      	str	r4, [r3, #0]
 800d674:	e728      	b.n	800d4c8 <__gethex+0x124>
 800d676:	bf00      	nop
 800d678:	08010b00 	.word	0x08010b00
 800d67c:	08010a88 	.word	0x08010a88
 800d680:	08010a99 	.word	0x08010a99
 800d684:	4620      	mov	r0, r4
 800d686:	1e71      	subs	r1, r6, #1
 800d688:	f000 fe5f 	bl	800e34a <__any_on>
 800d68c:	2800      	cmp	r0, #0
 800d68e:	d1e6      	bne.n	800d65e <__gethex+0x2ba>
 800d690:	4621      	mov	r1, r4
 800d692:	9802      	ldr	r0, [sp, #8]
 800d694:	f000 fa02 	bl	800da9c <_Bfree>
 800d698:	2300      	movs	r3, #0
 800d69a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d69c:	2750      	movs	r7, #80	; 0x50
 800d69e:	6013      	str	r3, [r2, #0]
 800d6a0:	e712      	b.n	800d4c8 <__gethex+0x124>
 800d6a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d6a4:	2b00      	cmp	r3, #0
 800d6a6:	d1f3      	bne.n	800d690 <__gethex+0x2ec>
 800d6a8:	e7d9      	b.n	800d65e <__gethex+0x2ba>
 800d6aa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d6ac:	2b00      	cmp	r3, #0
 800d6ae:	d1d6      	bne.n	800d65e <__gethex+0x2ba>
 800d6b0:	e7ee      	b.n	800d690 <__gethex+0x2ec>
 800d6b2:	1e6f      	subs	r7, r5, #1
 800d6b4:	f1ba 0f00 	cmp.w	sl, #0
 800d6b8:	d132      	bne.n	800d720 <__gethex+0x37c>
 800d6ba:	b127      	cbz	r7, 800d6c6 <__gethex+0x322>
 800d6bc:	4639      	mov	r1, r7
 800d6be:	4620      	mov	r0, r4
 800d6c0:	f000 fe43 	bl	800e34a <__any_on>
 800d6c4:	4682      	mov	sl, r0
 800d6c6:	2101      	movs	r1, #1
 800d6c8:	117b      	asrs	r3, r7, #5
 800d6ca:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800d6ce:	f007 071f 	and.w	r7, r7, #31
 800d6d2:	fa01 f707 	lsl.w	r7, r1, r7
 800d6d6:	421f      	tst	r7, r3
 800d6d8:	f04f 0702 	mov.w	r7, #2
 800d6dc:	4629      	mov	r1, r5
 800d6de:	4620      	mov	r0, r4
 800d6e0:	bf18      	it	ne
 800d6e2:	f04a 0a02 	orrne.w	sl, sl, #2
 800d6e6:	1b76      	subs	r6, r6, r5
 800d6e8:	f7ff fdf4 	bl	800d2d4 <rshift>
 800d6ec:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d6f0:	f1ba 0f00 	cmp.w	sl, #0
 800d6f4:	d048      	beq.n	800d788 <__gethex+0x3e4>
 800d6f6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d6fa:	2b02      	cmp	r3, #2
 800d6fc:	d015      	beq.n	800d72a <__gethex+0x386>
 800d6fe:	2b03      	cmp	r3, #3
 800d700:	d017      	beq.n	800d732 <__gethex+0x38e>
 800d702:	2b01      	cmp	r3, #1
 800d704:	d109      	bne.n	800d71a <__gethex+0x376>
 800d706:	f01a 0f02 	tst.w	sl, #2
 800d70a:	d006      	beq.n	800d71a <__gethex+0x376>
 800d70c:	f8d9 0000 	ldr.w	r0, [r9]
 800d710:	ea4a 0a00 	orr.w	sl, sl, r0
 800d714:	f01a 0f01 	tst.w	sl, #1
 800d718:	d10e      	bne.n	800d738 <__gethex+0x394>
 800d71a:	f047 0710 	orr.w	r7, r7, #16
 800d71e:	e033      	b.n	800d788 <__gethex+0x3e4>
 800d720:	f04f 0a01 	mov.w	sl, #1
 800d724:	e7cf      	b.n	800d6c6 <__gethex+0x322>
 800d726:	2701      	movs	r7, #1
 800d728:	e7e2      	b.n	800d6f0 <__gethex+0x34c>
 800d72a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d72c:	f1c3 0301 	rsb	r3, r3, #1
 800d730:	9315      	str	r3, [sp, #84]	; 0x54
 800d732:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d734:	2b00      	cmp	r3, #0
 800d736:	d0f0      	beq.n	800d71a <__gethex+0x376>
 800d738:	f04f 0c00 	mov.w	ip, #0
 800d73c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d740:	f104 0314 	add.w	r3, r4, #20
 800d744:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d748:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d74c:	4618      	mov	r0, r3
 800d74e:	f853 2b04 	ldr.w	r2, [r3], #4
 800d752:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d756:	d01c      	beq.n	800d792 <__gethex+0x3ee>
 800d758:	3201      	adds	r2, #1
 800d75a:	6002      	str	r2, [r0, #0]
 800d75c:	2f02      	cmp	r7, #2
 800d75e:	f104 0314 	add.w	r3, r4, #20
 800d762:	d13d      	bne.n	800d7e0 <__gethex+0x43c>
 800d764:	f8d8 2000 	ldr.w	r2, [r8]
 800d768:	3a01      	subs	r2, #1
 800d76a:	42b2      	cmp	r2, r6
 800d76c:	d10a      	bne.n	800d784 <__gethex+0x3e0>
 800d76e:	2201      	movs	r2, #1
 800d770:	1171      	asrs	r1, r6, #5
 800d772:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d776:	f006 061f 	and.w	r6, r6, #31
 800d77a:	fa02 f606 	lsl.w	r6, r2, r6
 800d77e:	421e      	tst	r6, r3
 800d780:	bf18      	it	ne
 800d782:	4617      	movne	r7, r2
 800d784:	f047 0720 	orr.w	r7, r7, #32
 800d788:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d78a:	601c      	str	r4, [r3, #0]
 800d78c:	9b05      	ldr	r3, [sp, #20]
 800d78e:	601d      	str	r5, [r3, #0]
 800d790:	e69a      	b.n	800d4c8 <__gethex+0x124>
 800d792:	4299      	cmp	r1, r3
 800d794:	f843 cc04 	str.w	ip, [r3, #-4]
 800d798:	d8d8      	bhi.n	800d74c <__gethex+0x3a8>
 800d79a:	68a3      	ldr	r3, [r4, #8]
 800d79c:	459b      	cmp	fp, r3
 800d79e:	db17      	blt.n	800d7d0 <__gethex+0x42c>
 800d7a0:	6861      	ldr	r1, [r4, #4]
 800d7a2:	9802      	ldr	r0, [sp, #8]
 800d7a4:	3101      	adds	r1, #1
 800d7a6:	f000 f939 	bl	800da1c <_Balloc>
 800d7aa:	4681      	mov	r9, r0
 800d7ac:	b918      	cbnz	r0, 800d7b6 <__gethex+0x412>
 800d7ae:	4602      	mov	r2, r0
 800d7b0:	2184      	movs	r1, #132	; 0x84
 800d7b2:	4b19      	ldr	r3, [pc, #100]	; (800d818 <__gethex+0x474>)
 800d7b4:	e6ab      	b.n	800d50e <__gethex+0x16a>
 800d7b6:	6922      	ldr	r2, [r4, #16]
 800d7b8:	f104 010c 	add.w	r1, r4, #12
 800d7bc:	3202      	adds	r2, #2
 800d7be:	0092      	lsls	r2, r2, #2
 800d7c0:	300c      	adds	r0, #12
 800d7c2:	f7fd f943 	bl	800aa4c <memcpy>
 800d7c6:	4621      	mov	r1, r4
 800d7c8:	9802      	ldr	r0, [sp, #8]
 800d7ca:	f000 f967 	bl	800da9c <_Bfree>
 800d7ce:	464c      	mov	r4, r9
 800d7d0:	6923      	ldr	r3, [r4, #16]
 800d7d2:	1c5a      	adds	r2, r3, #1
 800d7d4:	6122      	str	r2, [r4, #16]
 800d7d6:	2201      	movs	r2, #1
 800d7d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d7dc:	615a      	str	r2, [r3, #20]
 800d7de:	e7bd      	b.n	800d75c <__gethex+0x3b8>
 800d7e0:	6922      	ldr	r2, [r4, #16]
 800d7e2:	455a      	cmp	r2, fp
 800d7e4:	dd0b      	ble.n	800d7fe <__gethex+0x45a>
 800d7e6:	2101      	movs	r1, #1
 800d7e8:	4620      	mov	r0, r4
 800d7ea:	f7ff fd73 	bl	800d2d4 <rshift>
 800d7ee:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d7f2:	3501      	adds	r5, #1
 800d7f4:	42ab      	cmp	r3, r5
 800d7f6:	f6ff aed4 	blt.w	800d5a2 <__gethex+0x1fe>
 800d7fa:	2701      	movs	r7, #1
 800d7fc:	e7c2      	b.n	800d784 <__gethex+0x3e0>
 800d7fe:	f016 061f 	ands.w	r6, r6, #31
 800d802:	d0fa      	beq.n	800d7fa <__gethex+0x456>
 800d804:	4453      	add	r3, sl
 800d806:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d80a:	f000 f9f9 	bl	800dc00 <__hi0bits>
 800d80e:	f1c6 0620 	rsb	r6, r6, #32
 800d812:	42b0      	cmp	r0, r6
 800d814:	dbe7      	blt.n	800d7e6 <__gethex+0x442>
 800d816:	e7f0      	b.n	800d7fa <__gethex+0x456>
 800d818:	08010a88 	.word	0x08010a88

0800d81c <L_shift>:
 800d81c:	f1c2 0208 	rsb	r2, r2, #8
 800d820:	0092      	lsls	r2, r2, #2
 800d822:	b570      	push	{r4, r5, r6, lr}
 800d824:	f1c2 0620 	rsb	r6, r2, #32
 800d828:	6843      	ldr	r3, [r0, #4]
 800d82a:	6804      	ldr	r4, [r0, #0]
 800d82c:	fa03 f506 	lsl.w	r5, r3, r6
 800d830:	432c      	orrs	r4, r5
 800d832:	40d3      	lsrs	r3, r2
 800d834:	6004      	str	r4, [r0, #0]
 800d836:	f840 3f04 	str.w	r3, [r0, #4]!
 800d83a:	4288      	cmp	r0, r1
 800d83c:	d3f4      	bcc.n	800d828 <L_shift+0xc>
 800d83e:	bd70      	pop	{r4, r5, r6, pc}

0800d840 <__match>:
 800d840:	b530      	push	{r4, r5, lr}
 800d842:	6803      	ldr	r3, [r0, #0]
 800d844:	3301      	adds	r3, #1
 800d846:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d84a:	b914      	cbnz	r4, 800d852 <__match+0x12>
 800d84c:	6003      	str	r3, [r0, #0]
 800d84e:	2001      	movs	r0, #1
 800d850:	bd30      	pop	{r4, r5, pc}
 800d852:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d856:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800d85a:	2d19      	cmp	r5, #25
 800d85c:	bf98      	it	ls
 800d85e:	3220      	addls	r2, #32
 800d860:	42a2      	cmp	r2, r4
 800d862:	d0f0      	beq.n	800d846 <__match+0x6>
 800d864:	2000      	movs	r0, #0
 800d866:	e7f3      	b.n	800d850 <__match+0x10>

0800d868 <__hexnan>:
 800d868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d86c:	2500      	movs	r5, #0
 800d86e:	680b      	ldr	r3, [r1, #0]
 800d870:	4682      	mov	sl, r0
 800d872:	115e      	asrs	r6, r3, #5
 800d874:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d878:	f013 031f 	ands.w	r3, r3, #31
 800d87c:	bf18      	it	ne
 800d87e:	3604      	addne	r6, #4
 800d880:	1f37      	subs	r7, r6, #4
 800d882:	46b9      	mov	r9, r7
 800d884:	463c      	mov	r4, r7
 800d886:	46ab      	mov	fp, r5
 800d888:	b087      	sub	sp, #28
 800d88a:	4690      	mov	r8, r2
 800d88c:	6802      	ldr	r2, [r0, #0]
 800d88e:	9301      	str	r3, [sp, #4]
 800d890:	f846 5c04 	str.w	r5, [r6, #-4]
 800d894:	9502      	str	r5, [sp, #8]
 800d896:	7851      	ldrb	r1, [r2, #1]
 800d898:	1c53      	adds	r3, r2, #1
 800d89a:	9303      	str	r3, [sp, #12]
 800d89c:	b341      	cbz	r1, 800d8f0 <__hexnan+0x88>
 800d89e:	4608      	mov	r0, r1
 800d8a0:	9205      	str	r2, [sp, #20]
 800d8a2:	9104      	str	r1, [sp, #16]
 800d8a4:	f7ff fd69 	bl	800d37a <__hexdig_fun>
 800d8a8:	2800      	cmp	r0, #0
 800d8aa:	d14f      	bne.n	800d94c <__hexnan+0xe4>
 800d8ac:	9904      	ldr	r1, [sp, #16]
 800d8ae:	9a05      	ldr	r2, [sp, #20]
 800d8b0:	2920      	cmp	r1, #32
 800d8b2:	d818      	bhi.n	800d8e6 <__hexnan+0x7e>
 800d8b4:	9b02      	ldr	r3, [sp, #8]
 800d8b6:	459b      	cmp	fp, r3
 800d8b8:	dd13      	ble.n	800d8e2 <__hexnan+0x7a>
 800d8ba:	454c      	cmp	r4, r9
 800d8bc:	d206      	bcs.n	800d8cc <__hexnan+0x64>
 800d8be:	2d07      	cmp	r5, #7
 800d8c0:	dc04      	bgt.n	800d8cc <__hexnan+0x64>
 800d8c2:	462a      	mov	r2, r5
 800d8c4:	4649      	mov	r1, r9
 800d8c6:	4620      	mov	r0, r4
 800d8c8:	f7ff ffa8 	bl	800d81c <L_shift>
 800d8cc:	4544      	cmp	r4, r8
 800d8ce:	d950      	bls.n	800d972 <__hexnan+0x10a>
 800d8d0:	2300      	movs	r3, #0
 800d8d2:	f1a4 0904 	sub.w	r9, r4, #4
 800d8d6:	f844 3c04 	str.w	r3, [r4, #-4]
 800d8da:	461d      	mov	r5, r3
 800d8dc:	464c      	mov	r4, r9
 800d8de:	f8cd b008 	str.w	fp, [sp, #8]
 800d8e2:	9a03      	ldr	r2, [sp, #12]
 800d8e4:	e7d7      	b.n	800d896 <__hexnan+0x2e>
 800d8e6:	2929      	cmp	r1, #41	; 0x29
 800d8e8:	d156      	bne.n	800d998 <__hexnan+0x130>
 800d8ea:	3202      	adds	r2, #2
 800d8ec:	f8ca 2000 	str.w	r2, [sl]
 800d8f0:	f1bb 0f00 	cmp.w	fp, #0
 800d8f4:	d050      	beq.n	800d998 <__hexnan+0x130>
 800d8f6:	454c      	cmp	r4, r9
 800d8f8:	d206      	bcs.n	800d908 <__hexnan+0xa0>
 800d8fa:	2d07      	cmp	r5, #7
 800d8fc:	dc04      	bgt.n	800d908 <__hexnan+0xa0>
 800d8fe:	462a      	mov	r2, r5
 800d900:	4649      	mov	r1, r9
 800d902:	4620      	mov	r0, r4
 800d904:	f7ff ff8a 	bl	800d81c <L_shift>
 800d908:	4544      	cmp	r4, r8
 800d90a:	d934      	bls.n	800d976 <__hexnan+0x10e>
 800d90c:	4623      	mov	r3, r4
 800d90e:	f1a8 0204 	sub.w	r2, r8, #4
 800d912:	f853 1b04 	ldr.w	r1, [r3], #4
 800d916:	429f      	cmp	r7, r3
 800d918:	f842 1f04 	str.w	r1, [r2, #4]!
 800d91c:	d2f9      	bcs.n	800d912 <__hexnan+0xaa>
 800d91e:	1b3b      	subs	r3, r7, r4
 800d920:	f023 0303 	bic.w	r3, r3, #3
 800d924:	3304      	adds	r3, #4
 800d926:	3401      	adds	r4, #1
 800d928:	3e03      	subs	r6, #3
 800d92a:	42b4      	cmp	r4, r6
 800d92c:	bf88      	it	hi
 800d92e:	2304      	movhi	r3, #4
 800d930:	2200      	movs	r2, #0
 800d932:	4443      	add	r3, r8
 800d934:	f843 2b04 	str.w	r2, [r3], #4
 800d938:	429f      	cmp	r7, r3
 800d93a:	d2fb      	bcs.n	800d934 <__hexnan+0xcc>
 800d93c:	683b      	ldr	r3, [r7, #0]
 800d93e:	b91b      	cbnz	r3, 800d948 <__hexnan+0xe0>
 800d940:	4547      	cmp	r7, r8
 800d942:	d127      	bne.n	800d994 <__hexnan+0x12c>
 800d944:	2301      	movs	r3, #1
 800d946:	603b      	str	r3, [r7, #0]
 800d948:	2005      	movs	r0, #5
 800d94a:	e026      	b.n	800d99a <__hexnan+0x132>
 800d94c:	3501      	adds	r5, #1
 800d94e:	2d08      	cmp	r5, #8
 800d950:	f10b 0b01 	add.w	fp, fp, #1
 800d954:	dd06      	ble.n	800d964 <__hexnan+0xfc>
 800d956:	4544      	cmp	r4, r8
 800d958:	d9c3      	bls.n	800d8e2 <__hexnan+0x7a>
 800d95a:	2300      	movs	r3, #0
 800d95c:	2501      	movs	r5, #1
 800d95e:	f844 3c04 	str.w	r3, [r4, #-4]
 800d962:	3c04      	subs	r4, #4
 800d964:	6822      	ldr	r2, [r4, #0]
 800d966:	f000 000f 	and.w	r0, r0, #15
 800d96a:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800d96e:	6022      	str	r2, [r4, #0]
 800d970:	e7b7      	b.n	800d8e2 <__hexnan+0x7a>
 800d972:	2508      	movs	r5, #8
 800d974:	e7b5      	b.n	800d8e2 <__hexnan+0x7a>
 800d976:	9b01      	ldr	r3, [sp, #4]
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d0df      	beq.n	800d93c <__hexnan+0xd4>
 800d97c:	f04f 32ff 	mov.w	r2, #4294967295
 800d980:	f1c3 0320 	rsb	r3, r3, #32
 800d984:	fa22 f303 	lsr.w	r3, r2, r3
 800d988:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800d98c:	401a      	ands	r2, r3
 800d98e:	f846 2c04 	str.w	r2, [r6, #-4]
 800d992:	e7d3      	b.n	800d93c <__hexnan+0xd4>
 800d994:	3f04      	subs	r7, #4
 800d996:	e7d1      	b.n	800d93c <__hexnan+0xd4>
 800d998:	2004      	movs	r0, #4
 800d99a:	b007      	add	sp, #28
 800d99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d9a0 <_localeconv_r>:
 800d9a0:	4800      	ldr	r0, [pc, #0]	; (800d9a4 <_localeconv_r+0x4>)
 800d9a2:	4770      	bx	lr
 800d9a4:	200002f8 	.word	0x200002f8

0800d9a8 <_lseek_r>:
 800d9a8:	b538      	push	{r3, r4, r5, lr}
 800d9aa:	4604      	mov	r4, r0
 800d9ac:	4608      	mov	r0, r1
 800d9ae:	4611      	mov	r1, r2
 800d9b0:	2200      	movs	r2, #0
 800d9b2:	4d05      	ldr	r5, [pc, #20]	; (800d9c8 <_lseek_r+0x20>)
 800d9b4:	602a      	str	r2, [r5, #0]
 800d9b6:	461a      	mov	r2, r3
 800d9b8:	f7f7 fb1a 	bl	8004ff0 <_lseek>
 800d9bc:	1c43      	adds	r3, r0, #1
 800d9be:	d102      	bne.n	800d9c6 <_lseek_r+0x1e>
 800d9c0:	682b      	ldr	r3, [r5, #0]
 800d9c2:	b103      	cbz	r3, 800d9c6 <_lseek_r+0x1e>
 800d9c4:	6023      	str	r3, [r4, #0]
 800d9c6:	bd38      	pop	{r3, r4, r5, pc}
 800d9c8:	20001458 	.word	0x20001458

0800d9cc <malloc>:
 800d9cc:	4b02      	ldr	r3, [pc, #8]	; (800d9d8 <malloc+0xc>)
 800d9ce:	4601      	mov	r1, r0
 800d9d0:	6818      	ldr	r0, [r3, #0]
 800d9d2:	f000 bd57 	b.w	800e484 <_malloc_r>
 800d9d6:	bf00      	nop
 800d9d8:	200001a0 	.word	0x200001a0

0800d9dc <__ascii_mbtowc>:
 800d9dc:	b082      	sub	sp, #8
 800d9de:	b901      	cbnz	r1, 800d9e2 <__ascii_mbtowc+0x6>
 800d9e0:	a901      	add	r1, sp, #4
 800d9e2:	b142      	cbz	r2, 800d9f6 <__ascii_mbtowc+0x1a>
 800d9e4:	b14b      	cbz	r3, 800d9fa <__ascii_mbtowc+0x1e>
 800d9e6:	7813      	ldrb	r3, [r2, #0]
 800d9e8:	600b      	str	r3, [r1, #0]
 800d9ea:	7812      	ldrb	r2, [r2, #0]
 800d9ec:	1e10      	subs	r0, r2, #0
 800d9ee:	bf18      	it	ne
 800d9f0:	2001      	movne	r0, #1
 800d9f2:	b002      	add	sp, #8
 800d9f4:	4770      	bx	lr
 800d9f6:	4610      	mov	r0, r2
 800d9f8:	e7fb      	b.n	800d9f2 <__ascii_mbtowc+0x16>
 800d9fa:	f06f 0001 	mvn.w	r0, #1
 800d9fe:	e7f8      	b.n	800d9f2 <__ascii_mbtowc+0x16>

0800da00 <memchr>:
 800da00:	4603      	mov	r3, r0
 800da02:	b510      	push	{r4, lr}
 800da04:	b2c9      	uxtb	r1, r1
 800da06:	4402      	add	r2, r0
 800da08:	4293      	cmp	r3, r2
 800da0a:	4618      	mov	r0, r3
 800da0c:	d101      	bne.n	800da12 <memchr+0x12>
 800da0e:	2000      	movs	r0, #0
 800da10:	e003      	b.n	800da1a <memchr+0x1a>
 800da12:	7804      	ldrb	r4, [r0, #0]
 800da14:	3301      	adds	r3, #1
 800da16:	428c      	cmp	r4, r1
 800da18:	d1f6      	bne.n	800da08 <memchr+0x8>
 800da1a:	bd10      	pop	{r4, pc}

0800da1c <_Balloc>:
 800da1c:	b570      	push	{r4, r5, r6, lr}
 800da1e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800da20:	4604      	mov	r4, r0
 800da22:	460d      	mov	r5, r1
 800da24:	b976      	cbnz	r6, 800da44 <_Balloc+0x28>
 800da26:	2010      	movs	r0, #16
 800da28:	f7ff ffd0 	bl	800d9cc <malloc>
 800da2c:	4602      	mov	r2, r0
 800da2e:	6260      	str	r0, [r4, #36]	; 0x24
 800da30:	b920      	cbnz	r0, 800da3c <_Balloc+0x20>
 800da32:	2166      	movs	r1, #102	; 0x66
 800da34:	4b17      	ldr	r3, [pc, #92]	; (800da94 <_Balloc+0x78>)
 800da36:	4818      	ldr	r0, [pc, #96]	; (800da98 <_Balloc+0x7c>)
 800da38:	f001 fb48 	bl	800f0cc <__assert_func>
 800da3c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800da40:	6006      	str	r6, [r0, #0]
 800da42:	60c6      	str	r6, [r0, #12]
 800da44:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800da46:	68f3      	ldr	r3, [r6, #12]
 800da48:	b183      	cbz	r3, 800da6c <_Balloc+0x50>
 800da4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800da4c:	68db      	ldr	r3, [r3, #12]
 800da4e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800da52:	b9b8      	cbnz	r0, 800da84 <_Balloc+0x68>
 800da54:	2101      	movs	r1, #1
 800da56:	fa01 f605 	lsl.w	r6, r1, r5
 800da5a:	1d72      	adds	r2, r6, #5
 800da5c:	4620      	mov	r0, r4
 800da5e:	0092      	lsls	r2, r2, #2
 800da60:	f000 fc94 	bl	800e38c <_calloc_r>
 800da64:	b160      	cbz	r0, 800da80 <_Balloc+0x64>
 800da66:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800da6a:	e00e      	b.n	800da8a <_Balloc+0x6e>
 800da6c:	2221      	movs	r2, #33	; 0x21
 800da6e:	2104      	movs	r1, #4
 800da70:	4620      	mov	r0, r4
 800da72:	f000 fc8b 	bl	800e38c <_calloc_r>
 800da76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800da78:	60f0      	str	r0, [r6, #12]
 800da7a:	68db      	ldr	r3, [r3, #12]
 800da7c:	2b00      	cmp	r3, #0
 800da7e:	d1e4      	bne.n	800da4a <_Balloc+0x2e>
 800da80:	2000      	movs	r0, #0
 800da82:	bd70      	pop	{r4, r5, r6, pc}
 800da84:	6802      	ldr	r2, [r0, #0]
 800da86:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800da8a:	2300      	movs	r3, #0
 800da8c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800da90:	e7f7      	b.n	800da82 <_Balloc+0x66>
 800da92:	bf00      	nop
 800da94:	08010a16 	.word	0x08010a16
 800da98:	08010b14 	.word	0x08010b14

0800da9c <_Bfree>:
 800da9c:	b570      	push	{r4, r5, r6, lr}
 800da9e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800daa0:	4605      	mov	r5, r0
 800daa2:	460c      	mov	r4, r1
 800daa4:	b976      	cbnz	r6, 800dac4 <_Bfree+0x28>
 800daa6:	2010      	movs	r0, #16
 800daa8:	f7ff ff90 	bl	800d9cc <malloc>
 800daac:	4602      	mov	r2, r0
 800daae:	6268      	str	r0, [r5, #36]	; 0x24
 800dab0:	b920      	cbnz	r0, 800dabc <_Bfree+0x20>
 800dab2:	218a      	movs	r1, #138	; 0x8a
 800dab4:	4b08      	ldr	r3, [pc, #32]	; (800dad8 <_Bfree+0x3c>)
 800dab6:	4809      	ldr	r0, [pc, #36]	; (800dadc <_Bfree+0x40>)
 800dab8:	f001 fb08 	bl	800f0cc <__assert_func>
 800dabc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800dac0:	6006      	str	r6, [r0, #0]
 800dac2:	60c6      	str	r6, [r0, #12]
 800dac4:	b13c      	cbz	r4, 800dad6 <_Bfree+0x3a>
 800dac6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800dac8:	6862      	ldr	r2, [r4, #4]
 800daca:	68db      	ldr	r3, [r3, #12]
 800dacc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800dad0:	6021      	str	r1, [r4, #0]
 800dad2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800dad6:	bd70      	pop	{r4, r5, r6, pc}
 800dad8:	08010a16 	.word	0x08010a16
 800dadc:	08010b14 	.word	0x08010b14

0800dae0 <__multadd>:
 800dae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dae4:	4607      	mov	r7, r0
 800dae6:	460c      	mov	r4, r1
 800dae8:	461e      	mov	r6, r3
 800daea:	2000      	movs	r0, #0
 800daec:	690d      	ldr	r5, [r1, #16]
 800daee:	f101 0c14 	add.w	ip, r1, #20
 800daf2:	f8dc 3000 	ldr.w	r3, [ip]
 800daf6:	3001      	adds	r0, #1
 800daf8:	b299      	uxth	r1, r3
 800dafa:	fb02 6101 	mla	r1, r2, r1, r6
 800dafe:	0c1e      	lsrs	r6, r3, #16
 800db00:	0c0b      	lsrs	r3, r1, #16
 800db02:	fb02 3306 	mla	r3, r2, r6, r3
 800db06:	b289      	uxth	r1, r1
 800db08:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800db0c:	4285      	cmp	r5, r0
 800db0e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800db12:	f84c 1b04 	str.w	r1, [ip], #4
 800db16:	dcec      	bgt.n	800daf2 <__multadd+0x12>
 800db18:	b30e      	cbz	r6, 800db5e <__multadd+0x7e>
 800db1a:	68a3      	ldr	r3, [r4, #8]
 800db1c:	42ab      	cmp	r3, r5
 800db1e:	dc19      	bgt.n	800db54 <__multadd+0x74>
 800db20:	6861      	ldr	r1, [r4, #4]
 800db22:	4638      	mov	r0, r7
 800db24:	3101      	adds	r1, #1
 800db26:	f7ff ff79 	bl	800da1c <_Balloc>
 800db2a:	4680      	mov	r8, r0
 800db2c:	b928      	cbnz	r0, 800db3a <__multadd+0x5a>
 800db2e:	4602      	mov	r2, r0
 800db30:	21b5      	movs	r1, #181	; 0xb5
 800db32:	4b0c      	ldr	r3, [pc, #48]	; (800db64 <__multadd+0x84>)
 800db34:	480c      	ldr	r0, [pc, #48]	; (800db68 <__multadd+0x88>)
 800db36:	f001 fac9 	bl	800f0cc <__assert_func>
 800db3a:	6922      	ldr	r2, [r4, #16]
 800db3c:	f104 010c 	add.w	r1, r4, #12
 800db40:	3202      	adds	r2, #2
 800db42:	0092      	lsls	r2, r2, #2
 800db44:	300c      	adds	r0, #12
 800db46:	f7fc ff81 	bl	800aa4c <memcpy>
 800db4a:	4621      	mov	r1, r4
 800db4c:	4638      	mov	r0, r7
 800db4e:	f7ff ffa5 	bl	800da9c <_Bfree>
 800db52:	4644      	mov	r4, r8
 800db54:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800db58:	3501      	adds	r5, #1
 800db5a:	615e      	str	r6, [r3, #20]
 800db5c:	6125      	str	r5, [r4, #16]
 800db5e:	4620      	mov	r0, r4
 800db60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db64:	08010a88 	.word	0x08010a88
 800db68:	08010b14 	.word	0x08010b14

0800db6c <__s2b>:
 800db6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800db70:	4615      	mov	r5, r2
 800db72:	2209      	movs	r2, #9
 800db74:	461f      	mov	r7, r3
 800db76:	3308      	adds	r3, #8
 800db78:	460c      	mov	r4, r1
 800db7a:	fb93 f3f2 	sdiv	r3, r3, r2
 800db7e:	4606      	mov	r6, r0
 800db80:	2201      	movs	r2, #1
 800db82:	2100      	movs	r1, #0
 800db84:	429a      	cmp	r2, r3
 800db86:	db09      	blt.n	800db9c <__s2b+0x30>
 800db88:	4630      	mov	r0, r6
 800db8a:	f7ff ff47 	bl	800da1c <_Balloc>
 800db8e:	b940      	cbnz	r0, 800dba2 <__s2b+0x36>
 800db90:	4602      	mov	r2, r0
 800db92:	21ce      	movs	r1, #206	; 0xce
 800db94:	4b18      	ldr	r3, [pc, #96]	; (800dbf8 <__s2b+0x8c>)
 800db96:	4819      	ldr	r0, [pc, #100]	; (800dbfc <__s2b+0x90>)
 800db98:	f001 fa98 	bl	800f0cc <__assert_func>
 800db9c:	0052      	lsls	r2, r2, #1
 800db9e:	3101      	adds	r1, #1
 800dba0:	e7f0      	b.n	800db84 <__s2b+0x18>
 800dba2:	9b08      	ldr	r3, [sp, #32]
 800dba4:	2d09      	cmp	r5, #9
 800dba6:	6143      	str	r3, [r0, #20]
 800dba8:	f04f 0301 	mov.w	r3, #1
 800dbac:	6103      	str	r3, [r0, #16]
 800dbae:	dd16      	ble.n	800dbde <__s2b+0x72>
 800dbb0:	f104 0909 	add.w	r9, r4, #9
 800dbb4:	46c8      	mov	r8, r9
 800dbb6:	442c      	add	r4, r5
 800dbb8:	f818 3b01 	ldrb.w	r3, [r8], #1
 800dbbc:	4601      	mov	r1, r0
 800dbbe:	220a      	movs	r2, #10
 800dbc0:	4630      	mov	r0, r6
 800dbc2:	3b30      	subs	r3, #48	; 0x30
 800dbc4:	f7ff ff8c 	bl	800dae0 <__multadd>
 800dbc8:	45a0      	cmp	r8, r4
 800dbca:	d1f5      	bne.n	800dbb8 <__s2b+0x4c>
 800dbcc:	f1a5 0408 	sub.w	r4, r5, #8
 800dbd0:	444c      	add	r4, r9
 800dbd2:	1b2d      	subs	r5, r5, r4
 800dbd4:	1963      	adds	r3, r4, r5
 800dbd6:	42bb      	cmp	r3, r7
 800dbd8:	db04      	blt.n	800dbe4 <__s2b+0x78>
 800dbda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dbde:	2509      	movs	r5, #9
 800dbe0:	340a      	adds	r4, #10
 800dbe2:	e7f6      	b.n	800dbd2 <__s2b+0x66>
 800dbe4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800dbe8:	4601      	mov	r1, r0
 800dbea:	220a      	movs	r2, #10
 800dbec:	4630      	mov	r0, r6
 800dbee:	3b30      	subs	r3, #48	; 0x30
 800dbf0:	f7ff ff76 	bl	800dae0 <__multadd>
 800dbf4:	e7ee      	b.n	800dbd4 <__s2b+0x68>
 800dbf6:	bf00      	nop
 800dbf8:	08010a88 	.word	0x08010a88
 800dbfc:	08010b14 	.word	0x08010b14

0800dc00 <__hi0bits>:
 800dc00:	0c02      	lsrs	r2, r0, #16
 800dc02:	0412      	lsls	r2, r2, #16
 800dc04:	4603      	mov	r3, r0
 800dc06:	b9ca      	cbnz	r2, 800dc3c <__hi0bits+0x3c>
 800dc08:	0403      	lsls	r3, r0, #16
 800dc0a:	2010      	movs	r0, #16
 800dc0c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800dc10:	bf04      	itt	eq
 800dc12:	021b      	lsleq	r3, r3, #8
 800dc14:	3008      	addeq	r0, #8
 800dc16:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800dc1a:	bf04      	itt	eq
 800dc1c:	011b      	lsleq	r3, r3, #4
 800dc1e:	3004      	addeq	r0, #4
 800dc20:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800dc24:	bf04      	itt	eq
 800dc26:	009b      	lsleq	r3, r3, #2
 800dc28:	3002      	addeq	r0, #2
 800dc2a:	2b00      	cmp	r3, #0
 800dc2c:	db05      	blt.n	800dc3a <__hi0bits+0x3a>
 800dc2e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800dc32:	f100 0001 	add.w	r0, r0, #1
 800dc36:	bf08      	it	eq
 800dc38:	2020      	moveq	r0, #32
 800dc3a:	4770      	bx	lr
 800dc3c:	2000      	movs	r0, #0
 800dc3e:	e7e5      	b.n	800dc0c <__hi0bits+0xc>

0800dc40 <__lo0bits>:
 800dc40:	6803      	ldr	r3, [r0, #0]
 800dc42:	4602      	mov	r2, r0
 800dc44:	f013 0007 	ands.w	r0, r3, #7
 800dc48:	d00b      	beq.n	800dc62 <__lo0bits+0x22>
 800dc4a:	07d9      	lsls	r1, r3, #31
 800dc4c:	d421      	bmi.n	800dc92 <__lo0bits+0x52>
 800dc4e:	0798      	lsls	r0, r3, #30
 800dc50:	bf49      	itett	mi
 800dc52:	085b      	lsrmi	r3, r3, #1
 800dc54:	089b      	lsrpl	r3, r3, #2
 800dc56:	2001      	movmi	r0, #1
 800dc58:	6013      	strmi	r3, [r2, #0]
 800dc5a:	bf5c      	itt	pl
 800dc5c:	2002      	movpl	r0, #2
 800dc5e:	6013      	strpl	r3, [r2, #0]
 800dc60:	4770      	bx	lr
 800dc62:	b299      	uxth	r1, r3
 800dc64:	b909      	cbnz	r1, 800dc6a <__lo0bits+0x2a>
 800dc66:	2010      	movs	r0, #16
 800dc68:	0c1b      	lsrs	r3, r3, #16
 800dc6a:	b2d9      	uxtb	r1, r3
 800dc6c:	b909      	cbnz	r1, 800dc72 <__lo0bits+0x32>
 800dc6e:	3008      	adds	r0, #8
 800dc70:	0a1b      	lsrs	r3, r3, #8
 800dc72:	0719      	lsls	r1, r3, #28
 800dc74:	bf04      	itt	eq
 800dc76:	091b      	lsreq	r3, r3, #4
 800dc78:	3004      	addeq	r0, #4
 800dc7a:	0799      	lsls	r1, r3, #30
 800dc7c:	bf04      	itt	eq
 800dc7e:	089b      	lsreq	r3, r3, #2
 800dc80:	3002      	addeq	r0, #2
 800dc82:	07d9      	lsls	r1, r3, #31
 800dc84:	d403      	bmi.n	800dc8e <__lo0bits+0x4e>
 800dc86:	085b      	lsrs	r3, r3, #1
 800dc88:	f100 0001 	add.w	r0, r0, #1
 800dc8c:	d003      	beq.n	800dc96 <__lo0bits+0x56>
 800dc8e:	6013      	str	r3, [r2, #0]
 800dc90:	4770      	bx	lr
 800dc92:	2000      	movs	r0, #0
 800dc94:	4770      	bx	lr
 800dc96:	2020      	movs	r0, #32
 800dc98:	4770      	bx	lr
	...

0800dc9c <__i2b>:
 800dc9c:	b510      	push	{r4, lr}
 800dc9e:	460c      	mov	r4, r1
 800dca0:	2101      	movs	r1, #1
 800dca2:	f7ff febb 	bl	800da1c <_Balloc>
 800dca6:	4602      	mov	r2, r0
 800dca8:	b928      	cbnz	r0, 800dcb6 <__i2b+0x1a>
 800dcaa:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800dcae:	4b04      	ldr	r3, [pc, #16]	; (800dcc0 <__i2b+0x24>)
 800dcb0:	4804      	ldr	r0, [pc, #16]	; (800dcc4 <__i2b+0x28>)
 800dcb2:	f001 fa0b 	bl	800f0cc <__assert_func>
 800dcb6:	2301      	movs	r3, #1
 800dcb8:	6144      	str	r4, [r0, #20]
 800dcba:	6103      	str	r3, [r0, #16]
 800dcbc:	bd10      	pop	{r4, pc}
 800dcbe:	bf00      	nop
 800dcc0:	08010a88 	.word	0x08010a88
 800dcc4:	08010b14 	.word	0x08010b14

0800dcc8 <__multiply>:
 800dcc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dccc:	4691      	mov	r9, r2
 800dcce:	690a      	ldr	r2, [r1, #16]
 800dcd0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dcd4:	460c      	mov	r4, r1
 800dcd6:	429a      	cmp	r2, r3
 800dcd8:	bfbe      	ittt	lt
 800dcda:	460b      	movlt	r3, r1
 800dcdc:	464c      	movlt	r4, r9
 800dcde:	4699      	movlt	r9, r3
 800dce0:	6927      	ldr	r7, [r4, #16]
 800dce2:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800dce6:	68a3      	ldr	r3, [r4, #8]
 800dce8:	6861      	ldr	r1, [r4, #4]
 800dcea:	eb07 060a 	add.w	r6, r7, sl
 800dcee:	42b3      	cmp	r3, r6
 800dcf0:	b085      	sub	sp, #20
 800dcf2:	bfb8      	it	lt
 800dcf4:	3101      	addlt	r1, #1
 800dcf6:	f7ff fe91 	bl	800da1c <_Balloc>
 800dcfa:	b930      	cbnz	r0, 800dd0a <__multiply+0x42>
 800dcfc:	4602      	mov	r2, r0
 800dcfe:	f240 115d 	movw	r1, #349	; 0x15d
 800dd02:	4b43      	ldr	r3, [pc, #268]	; (800de10 <__multiply+0x148>)
 800dd04:	4843      	ldr	r0, [pc, #268]	; (800de14 <__multiply+0x14c>)
 800dd06:	f001 f9e1 	bl	800f0cc <__assert_func>
 800dd0a:	f100 0514 	add.w	r5, r0, #20
 800dd0e:	462b      	mov	r3, r5
 800dd10:	2200      	movs	r2, #0
 800dd12:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800dd16:	4543      	cmp	r3, r8
 800dd18:	d321      	bcc.n	800dd5e <__multiply+0x96>
 800dd1a:	f104 0314 	add.w	r3, r4, #20
 800dd1e:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800dd22:	f109 0314 	add.w	r3, r9, #20
 800dd26:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800dd2a:	9202      	str	r2, [sp, #8]
 800dd2c:	1b3a      	subs	r2, r7, r4
 800dd2e:	3a15      	subs	r2, #21
 800dd30:	f022 0203 	bic.w	r2, r2, #3
 800dd34:	3204      	adds	r2, #4
 800dd36:	f104 0115 	add.w	r1, r4, #21
 800dd3a:	428f      	cmp	r7, r1
 800dd3c:	bf38      	it	cc
 800dd3e:	2204      	movcc	r2, #4
 800dd40:	9201      	str	r2, [sp, #4]
 800dd42:	9a02      	ldr	r2, [sp, #8]
 800dd44:	9303      	str	r3, [sp, #12]
 800dd46:	429a      	cmp	r2, r3
 800dd48:	d80c      	bhi.n	800dd64 <__multiply+0x9c>
 800dd4a:	2e00      	cmp	r6, #0
 800dd4c:	dd03      	ble.n	800dd56 <__multiply+0x8e>
 800dd4e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800dd52:	2b00      	cmp	r3, #0
 800dd54:	d059      	beq.n	800de0a <__multiply+0x142>
 800dd56:	6106      	str	r6, [r0, #16]
 800dd58:	b005      	add	sp, #20
 800dd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd5e:	f843 2b04 	str.w	r2, [r3], #4
 800dd62:	e7d8      	b.n	800dd16 <__multiply+0x4e>
 800dd64:	f8b3 a000 	ldrh.w	sl, [r3]
 800dd68:	f1ba 0f00 	cmp.w	sl, #0
 800dd6c:	d023      	beq.n	800ddb6 <__multiply+0xee>
 800dd6e:	46a9      	mov	r9, r5
 800dd70:	f04f 0c00 	mov.w	ip, #0
 800dd74:	f104 0e14 	add.w	lr, r4, #20
 800dd78:	f85e 2b04 	ldr.w	r2, [lr], #4
 800dd7c:	f8d9 1000 	ldr.w	r1, [r9]
 800dd80:	fa1f fb82 	uxth.w	fp, r2
 800dd84:	b289      	uxth	r1, r1
 800dd86:	fb0a 110b 	mla	r1, sl, fp, r1
 800dd8a:	4461      	add	r1, ip
 800dd8c:	f8d9 c000 	ldr.w	ip, [r9]
 800dd90:	0c12      	lsrs	r2, r2, #16
 800dd92:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800dd96:	fb0a c202 	mla	r2, sl, r2, ip
 800dd9a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800dd9e:	b289      	uxth	r1, r1
 800dda0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800dda4:	4577      	cmp	r7, lr
 800dda6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800ddaa:	f849 1b04 	str.w	r1, [r9], #4
 800ddae:	d8e3      	bhi.n	800dd78 <__multiply+0xb0>
 800ddb0:	9a01      	ldr	r2, [sp, #4]
 800ddb2:	f845 c002 	str.w	ip, [r5, r2]
 800ddb6:	9a03      	ldr	r2, [sp, #12]
 800ddb8:	3304      	adds	r3, #4
 800ddba:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800ddbe:	f1b9 0f00 	cmp.w	r9, #0
 800ddc2:	d020      	beq.n	800de06 <__multiply+0x13e>
 800ddc4:	46ae      	mov	lr, r5
 800ddc6:	f04f 0a00 	mov.w	sl, #0
 800ddca:	6829      	ldr	r1, [r5, #0]
 800ddcc:	f104 0c14 	add.w	ip, r4, #20
 800ddd0:	f8bc b000 	ldrh.w	fp, [ip]
 800ddd4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800ddd8:	b289      	uxth	r1, r1
 800ddda:	fb09 220b 	mla	r2, r9, fp, r2
 800ddde:	4492      	add	sl, r2
 800dde0:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800dde4:	f84e 1b04 	str.w	r1, [lr], #4
 800dde8:	f85c 2b04 	ldr.w	r2, [ip], #4
 800ddec:	f8be 1000 	ldrh.w	r1, [lr]
 800ddf0:	0c12      	lsrs	r2, r2, #16
 800ddf2:	fb09 1102 	mla	r1, r9, r2, r1
 800ddf6:	4567      	cmp	r7, ip
 800ddf8:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800ddfc:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800de00:	d8e6      	bhi.n	800ddd0 <__multiply+0x108>
 800de02:	9a01      	ldr	r2, [sp, #4]
 800de04:	50a9      	str	r1, [r5, r2]
 800de06:	3504      	adds	r5, #4
 800de08:	e79b      	b.n	800dd42 <__multiply+0x7a>
 800de0a:	3e01      	subs	r6, #1
 800de0c:	e79d      	b.n	800dd4a <__multiply+0x82>
 800de0e:	bf00      	nop
 800de10:	08010a88 	.word	0x08010a88
 800de14:	08010b14 	.word	0x08010b14

0800de18 <__pow5mult>:
 800de18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800de1c:	4615      	mov	r5, r2
 800de1e:	f012 0203 	ands.w	r2, r2, #3
 800de22:	4606      	mov	r6, r0
 800de24:	460f      	mov	r7, r1
 800de26:	d007      	beq.n	800de38 <__pow5mult+0x20>
 800de28:	4c25      	ldr	r4, [pc, #148]	; (800dec0 <__pow5mult+0xa8>)
 800de2a:	3a01      	subs	r2, #1
 800de2c:	2300      	movs	r3, #0
 800de2e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800de32:	f7ff fe55 	bl	800dae0 <__multadd>
 800de36:	4607      	mov	r7, r0
 800de38:	10ad      	asrs	r5, r5, #2
 800de3a:	d03d      	beq.n	800deb8 <__pow5mult+0xa0>
 800de3c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800de3e:	b97c      	cbnz	r4, 800de60 <__pow5mult+0x48>
 800de40:	2010      	movs	r0, #16
 800de42:	f7ff fdc3 	bl	800d9cc <malloc>
 800de46:	4602      	mov	r2, r0
 800de48:	6270      	str	r0, [r6, #36]	; 0x24
 800de4a:	b928      	cbnz	r0, 800de58 <__pow5mult+0x40>
 800de4c:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800de50:	4b1c      	ldr	r3, [pc, #112]	; (800dec4 <__pow5mult+0xac>)
 800de52:	481d      	ldr	r0, [pc, #116]	; (800dec8 <__pow5mult+0xb0>)
 800de54:	f001 f93a 	bl	800f0cc <__assert_func>
 800de58:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800de5c:	6004      	str	r4, [r0, #0]
 800de5e:	60c4      	str	r4, [r0, #12]
 800de60:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800de64:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800de68:	b94c      	cbnz	r4, 800de7e <__pow5mult+0x66>
 800de6a:	f240 2171 	movw	r1, #625	; 0x271
 800de6e:	4630      	mov	r0, r6
 800de70:	f7ff ff14 	bl	800dc9c <__i2b>
 800de74:	2300      	movs	r3, #0
 800de76:	4604      	mov	r4, r0
 800de78:	f8c8 0008 	str.w	r0, [r8, #8]
 800de7c:	6003      	str	r3, [r0, #0]
 800de7e:	f04f 0900 	mov.w	r9, #0
 800de82:	07eb      	lsls	r3, r5, #31
 800de84:	d50a      	bpl.n	800de9c <__pow5mult+0x84>
 800de86:	4639      	mov	r1, r7
 800de88:	4622      	mov	r2, r4
 800de8a:	4630      	mov	r0, r6
 800de8c:	f7ff ff1c 	bl	800dcc8 <__multiply>
 800de90:	4680      	mov	r8, r0
 800de92:	4639      	mov	r1, r7
 800de94:	4630      	mov	r0, r6
 800de96:	f7ff fe01 	bl	800da9c <_Bfree>
 800de9a:	4647      	mov	r7, r8
 800de9c:	106d      	asrs	r5, r5, #1
 800de9e:	d00b      	beq.n	800deb8 <__pow5mult+0xa0>
 800dea0:	6820      	ldr	r0, [r4, #0]
 800dea2:	b938      	cbnz	r0, 800deb4 <__pow5mult+0x9c>
 800dea4:	4622      	mov	r2, r4
 800dea6:	4621      	mov	r1, r4
 800dea8:	4630      	mov	r0, r6
 800deaa:	f7ff ff0d 	bl	800dcc8 <__multiply>
 800deae:	6020      	str	r0, [r4, #0]
 800deb0:	f8c0 9000 	str.w	r9, [r0]
 800deb4:	4604      	mov	r4, r0
 800deb6:	e7e4      	b.n	800de82 <__pow5mult+0x6a>
 800deb8:	4638      	mov	r0, r7
 800deba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800debe:	bf00      	nop
 800dec0:	08010c60 	.word	0x08010c60
 800dec4:	08010a16 	.word	0x08010a16
 800dec8:	08010b14 	.word	0x08010b14

0800decc <__lshift>:
 800decc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ded0:	460c      	mov	r4, r1
 800ded2:	4607      	mov	r7, r0
 800ded4:	4691      	mov	r9, r2
 800ded6:	6923      	ldr	r3, [r4, #16]
 800ded8:	6849      	ldr	r1, [r1, #4]
 800deda:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800dede:	68a3      	ldr	r3, [r4, #8]
 800dee0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800dee4:	f108 0601 	add.w	r6, r8, #1
 800dee8:	42b3      	cmp	r3, r6
 800deea:	db0b      	blt.n	800df04 <__lshift+0x38>
 800deec:	4638      	mov	r0, r7
 800deee:	f7ff fd95 	bl	800da1c <_Balloc>
 800def2:	4605      	mov	r5, r0
 800def4:	b948      	cbnz	r0, 800df0a <__lshift+0x3e>
 800def6:	4602      	mov	r2, r0
 800def8:	f240 11d9 	movw	r1, #473	; 0x1d9
 800defc:	4b29      	ldr	r3, [pc, #164]	; (800dfa4 <__lshift+0xd8>)
 800defe:	482a      	ldr	r0, [pc, #168]	; (800dfa8 <__lshift+0xdc>)
 800df00:	f001 f8e4 	bl	800f0cc <__assert_func>
 800df04:	3101      	adds	r1, #1
 800df06:	005b      	lsls	r3, r3, #1
 800df08:	e7ee      	b.n	800dee8 <__lshift+0x1c>
 800df0a:	2300      	movs	r3, #0
 800df0c:	f100 0114 	add.w	r1, r0, #20
 800df10:	f100 0210 	add.w	r2, r0, #16
 800df14:	4618      	mov	r0, r3
 800df16:	4553      	cmp	r3, sl
 800df18:	db37      	blt.n	800df8a <__lshift+0xbe>
 800df1a:	6920      	ldr	r0, [r4, #16]
 800df1c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800df20:	f104 0314 	add.w	r3, r4, #20
 800df24:	f019 091f 	ands.w	r9, r9, #31
 800df28:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800df2c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800df30:	d02f      	beq.n	800df92 <__lshift+0xc6>
 800df32:	468a      	mov	sl, r1
 800df34:	f04f 0c00 	mov.w	ip, #0
 800df38:	f1c9 0e20 	rsb	lr, r9, #32
 800df3c:	681a      	ldr	r2, [r3, #0]
 800df3e:	fa02 f209 	lsl.w	r2, r2, r9
 800df42:	ea42 020c 	orr.w	r2, r2, ip
 800df46:	f84a 2b04 	str.w	r2, [sl], #4
 800df4a:	f853 2b04 	ldr.w	r2, [r3], #4
 800df4e:	4298      	cmp	r0, r3
 800df50:	fa22 fc0e 	lsr.w	ip, r2, lr
 800df54:	d8f2      	bhi.n	800df3c <__lshift+0x70>
 800df56:	1b03      	subs	r3, r0, r4
 800df58:	3b15      	subs	r3, #21
 800df5a:	f023 0303 	bic.w	r3, r3, #3
 800df5e:	3304      	adds	r3, #4
 800df60:	f104 0215 	add.w	r2, r4, #21
 800df64:	4290      	cmp	r0, r2
 800df66:	bf38      	it	cc
 800df68:	2304      	movcc	r3, #4
 800df6a:	f841 c003 	str.w	ip, [r1, r3]
 800df6e:	f1bc 0f00 	cmp.w	ip, #0
 800df72:	d001      	beq.n	800df78 <__lshift+0xac>
 800df74:	f108 0602 	add.w	r6, r8, #2
 800df78:	3e01      	subs	r6, #1
 800df7a:	4638      	mov	r0, r7
 800df7c:	4621      	mov	r1, r4
 800df7e:	612e      	str	r6, [r5, #16]
 800df80:	f7ff fd8c 	bl	800da9c <_Bfree>
 800df84:	4628      	mov	r0, r5
 800df86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800df8a:	f842 0f04 	str.w	r0, [r2, #4]!
 800df8e:	3301      	adds	r3, #1
 800df90:	e7c1      	b.n	800df16 <__lshift+0x4a>
 800df92:	3904      	subs	r1, #4
 800df94:	f853 2b04 	ldr.w	r2, [r3], #4
 800df98:	4298      	cmp	r0, r3
 800df9a:	f841 2f04 	str.w	r2, [r1, #4]!
 800df9e:	d8f9      	bhi.n	800df94 <__lshift+0xc8>
 800dfa0:	e7ea      	b.n	800df78 <__lshift+0xac>
 800dfa2:	bf00      	nop
 800dfa4:	08010a88 	.word	0x08010a88
 800dfa8:	08010b14 	.word	0x08010b14

0800dfac <__mcmp>:
 800dfac:	4603      	mov	r3, r0
 800dfae:	690a      	ldr	r2, [r1, #16]
 800dfb0:	6900      	ldr	r0, [r0, #16]
 800dfb2:	b530      	push	{r4, r5, lr}
 800dfb4:	1a80      	subs	r0, r0, r2
 800dfb6:	d10d      	bne.n	800dfd4 <__mcmp+0x28>
 800dfb8:	3314      	adds	r3, #20
 800dfba:	3114      	adds	r1, #20
 800dfbc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800dfc0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800dfc4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800dfc8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800dfcc:	4295      	cmp	r5, r2
 800dfce:	d002      	beq.n	800dfd6 <__mcmp+0x2a>
 800dfd0:	d304      	bcc.n	800dfdc <__mcmp+0x30>
 800dfd2:	2001      	movs	r0, #1
 800dfd4:	bd30      	pop	{r4, r5, pc}
 800dfd6:	42a3      	cmp	r3, r4
 800dfd8:	d3f4      	bcc.n	800dfc4 <__mcmp+0x18>
 800dfda:	e7fb      	b.n	800dfd4 <__mcmp+0x28>
 800dfdc:	f04f 30ff 	mov.w	r0, #4294967295
 800dfe0:	e7f8      	b.n	800dfd4 <__mcmp+0x28>
	...

0800dfe4 <__mdiff>:
 800dfe4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfe8:	460d      	mov	r5, r1
 800dfea:	4607      	mov	r7, r0
 800dfec:	4611      	mov	r1, r2
 800dfee:	4628      	mov	r0, r5
 800dff0:	4614      	mov	r4, r2
 800dff2:	f7ff ffdb 	bl	800dfac <__mcmp>
 800dff6:	1e06      	subs	r6, r0, #0
 800dff8:	d111      	bne.n	800e01e <__mdiff+0x3a>
 800dffa:	4631      	mov	r1, r6
 800dffc:	4638      	mov	r0, r7
 800dffe:	f7ff fd0d 	bl	800da1c <_Balloc>
 800e002:	4602      	mov	r2, r0
 800e004:	b928      	cbnz	r0, 800e012 <__mdiff+0x2e>
 800e006:	f240 2132 	movw	r1, #562	; 0x232
 800e00a:	4b3a      	ldr	r3, [pc, #232]	; (800e0f4 <__mdiff+0x110>)
 800e00c:	483a      	ldr	r0, [pc, #232]	; (800e0f8 <__mdiff+0x114>)
 800e00e:	f001 f85d 	bl	800f0cc <__assert_func>
 800e012:	2301      	movs	r3, #1
 800e014:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800e018:	4610      	mov	r0, r2
 800e01a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e01e:	bfa4      	itt	ge
 800e020:	4623      	movge	r3, r4
 800e022:	462c      	movge	r4, r5
 800e024:	4638      	mov	r0, r7
 800e026:	6861      	ldr	r1, [r4, #4]
 800e028:	bfa6      	itte	ge
 800e02a:	461d      	movge	r5, r3
 800e02c:	2600      	movge	r6, #0
 800e02e:	2601      	movlt	r6, #1
 800e030:	f7ff fcf4 	bl	800da1c <_Balloc>
 800e034:	4602      	mov	r2, r0
 800e036:	b918      	cbnz	r0, 800e040 <__mdiff+0x5c>
 800e038:	f44f 7110 	mov.w	r1, #576	; 0x240
 800e03c:	4b2d      	ldr	r3, [pc, #180]	; (800e0f4 <__mdiff+0x110>)
 800e03e:	e7e5      	b.n	800e00c <__mdiff+0x28>
 800e040:	f102 0814 	add.w	r8, r2, #20
 800e044:	46c2      	mov	sl, r8
 800e046:	f04f 0c00 	mov.w	ip, #0
 800e04a:	6927      	ldr	r7, [r4, #16]
 800e04c:	60c6      	str	r6, [r0, #12]
 800e04e:	692e      	ldr	r6, [r5, #16]
 800e050:	f104 0014 	add.w	r0, r4, #20
 800e054:	f105 0914 	add.w	r9, r5, #20
 800e058:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 800e05c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800e060:	3410      	adds	r4, #16
 800e062:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800e066:	f859 3b04 	ldr.w	r3, [r9], #4
 800e06a:	fa1f f18b 	uxth.w	r1, fp
 800e06e:	448c      	add	ip, r1
 800e070:	b299      	uxth	r1, r3
 800e072:	0c1b      	lsrs	r3, r3, #16
 800e074:	ebac 0101 	sub.w	r1, ip, r1
 800e078:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800e07c:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800e080:	b289      	uxth	r1, r1
 800e082:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800e086:	454e      	cmp	r6, r9
 800e088:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800e08c:	f84a 3b04 	str.w	r3, [sl], #4
 800e090:	d8e7      	bhi.n	800e062 <__mdiff+0x7e>
 800e092:	1b73      	subs	r3, r6, r5
 800e094:	3b15      	subs	r3, #21
 800e096:	f023 0303 	bic.w	r3, r3, #3
 800e09a:	3515      	adds	r5, #21
 800e09c:	3304      	adds	r3, #4
 800e09e:	42ae      	cmp	r6, r5
 800e0a0:	bf38      	it	cc
 800e0a2:	2304      	movcc	r3, #4
 800e0a4:	4418      	add	r0, r3
 800e0a6:	4443      	add	r3, r8
 800e0a8:	461e      	mov	r6, r3
 800e0aa:	4605      	mov	r5, r0
 800e0ac:	4575      	cmp	r5, lr
 800e0ae:	d30e      	bcc.n	800e0ce <__mdiff+0xea>
 800e0b0:	f10e 0103 	add.w	r1, lr, #3
 800e0b4:	1a09      	subs	r1, r1, r0
 800e0b6:	f021 0103 	bic.w	r1, r1, #3
 800e0ba:	3803      	subs	r0, #3
 800e0bc:	4586      	cmp	lr, r0
 800e0be:	bf38      	it	cc
 800e0c0:	2100      	movcc	r1, #0
 800e0c2:	4419      	add	r1, r3
 800e0c4:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800e0c8:	b18b      	cbz	r3, 800e0ee <__mdiff+0x10a>
 800e0ca:	6117      	str	r7, [r2, #16]
 800e0cc:	e7a4      	b.n	800e018 <__mdiff+0x34>
 800e0ce:	f855 8b04 	ldr.w	r8, [r5], #4
 800e0d2:	fa1f f188 	uxth.w	r1, r8
 800e0d6:	4461      	add	r1, ip
 800e0d8:	140c      	asrs	r4, r1, #16
 800e0da:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800e0de:	b289      	uxth	r1, r1
 800e0e0:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800e0e4:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800e0e8:	f846 1b04 	str.w	r1, [r6], #4
 800e0ec:	e7de      	b.n	800e0ac <__mdiff+0xc8>
 800e0ee:	3f01      	subs	r7, #1
 800e0f0:	e7e8      	b.n	800e0c4 <__mdiff+0xe0>
 800e0f2:	bf00      	nop
 800e0f4:	08010a88 	.word	0x08010a88
 800e0f8:	08010b14 	.word	0x08010b14

0800e0fc <__ulp>:
 800e0fc:	4b11      	ldr	r3, [pc, #68]	; (800e144 <__ulp+0x48>)
 800e0fe:	400b      	ands	r3, r1
 800e100:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800e104:	2b00      	cmp	r3, #0
 800e106:	dd02      	ble.n	800e10e <__ulp+0x12>
 800e108:	2000      	movs	r0, #0
 800e10a:	4619      	mov	r1, r3
 800e10c:	4770      	bx	lr
 800e10e:	425b      	negs	r3, r3
 800e110:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800e114:	f04f 0000 	mov.w	r0, #0
 800e118:	f04f 0100 	mov.w	r1, #0
 800e11c:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e120:	da04      	bge.n	800e12c <__ulp+0x30>
 800e122:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800e126:	fa43 f102 	asr.w	r1, r3, r2
 800e12a:	4770      	bx	lr
 800e12c:	f1a2 0314 	sub.w	r3, r2, #20
 800e130:	2b1e      	cmp	r3, #30
 800e132:	bfd6      	itet	le
 800e134:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800e138:	2301      	movgt	r3, #1
 800e13a:	fa22 f303 	lsrle.w	r3, r2, r3
 800e13e:	4618      	mov	r0, r3
 800e140:	4770      	bx	lr
 800e142:	bf00      	nop
 800e144:	7ff00000 	.word	0x7ff00000

0800e148 <__b2d>:
 800e148:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e14c:	6907      	ldr	r7, [r0, #16]
 800e14e:	f100 0914 	add.w	r9, r0, #20
 800e152:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 800e156:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800e15a:	f1a7 0804 	sub.w	r8, r7, #4
 800e15e:	4630      	mov	r0, r6
 800e160:	f7ff fd4e 	bl	800dc00 <__hi0bits>
 800e164:	f1c0 0320 	rsb	r3, r0, #32
 800e168:	280a      	cmp	r0, #10
 800e16a:	600b      	str	r3, [r1, #0]
 800e16c:	491f      	ldr	r1, [pc, #124]	; (800e1ec <__b2d+0xa4>)
 800e16e:	dc17      	bgt.n	800e1a0 <__b2d+0x58>
 800e170:	45c1      	cmp	r9, r8
 800e172:	bf28      	it	cs
 800e174:	2200      	movcs	r2, #0
 800e176:	f1c0 0c0b 	rsb	ip, r0, #11
 800e17a:	fa26 f30c 	lsr.w	r3, r6, ip
 800e17e:	bf38      	it	cc
 800e180:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e184:	ea43 0501 	orr.w	r5, r3, r1
 800e188:	f100 0315 	add.w	r3, r0, #21
 800e18c:	fa06 f303 	lsl.w	r3, r6, r3
 800e190:	fa22 f20c 	lsr.w	r2, r2, ip
 800e194:	ea43 0402 	orr.w	r4, r3, r2
 800e198:	4620      	mov	r0, r4
 800e19a:	4629      	mov	r1, r5
 800e19c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e1a0:	45c1      	cmp	r9, r8
 800e1a2:	bf2e      	itee	cs
 800e1a4:	2200      	movcs	r2, #0
 800e1a6:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800e1aa:	f1a7 0808 	subcc.w	r8, r7, #8
 800e1ae:	f1b0 030b 	subs.w	r3, r0, #11
 800e1b2:	d016      	beq.n	800e1e2 <__b2d+0x9a>
 800e1b4:	f1c3 0720 	rsb	r7, r3, #32
 800e1b8:	fa22 f107 	lsr.w	r1, r2, r7
 800e1bc:	45c8      	cmp	r8, r9
 800e1be:	fa06 f603 	lsl.w	r6, r6, r3
 800e1c2:	ea46 0601 	orr.w	r6, r6, r1
 800e1c6:	bf94      	ite	ls
 800e1c8:	2100      	movls	r1, #0
 800e1ca:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800e1ce:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 800e1d2:	fa02 f003 	lsl.w	r0, r2, r3
 800e1d6:	40f9      	lsrs	r1, r7
 800e1d8:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800e1dc:	ea40 0401 	orr.w	r4, r0, r1
 800e1e0:	e7da      	b.n	800e198 <__b2d+0x50>
 800e1e2:	4614      	mov	r4, r2
 800e1e4:	ea46 0501 	orr.w	r5, r6, r1
 800e1e8:	e7d6      	b.n	800e198 <__b2d+0x50>
 800e1ea:	bf00      	nop
 800e1ec:	3ff00000 	.word	0x3ff00000

0800e1f0 <__d2b>:
 800e1f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e1f4:	2101      	movs	r1, #1
 800e1f6:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800e1fa:	4690      	mov	r8, r2
 800e1fc:	461d      	mov	r5, r3
 800e1fe:	f7ff fc0d 	bl	800da1c <_Balloc>
 800e202:	4604      	mov	r4, r0
 800e204:	b930      	cbnz	r0, 800e214 <__d2b+0x24>
 800e206:	4602      	mov	r2, r0
 800e208:	f240 310a 	movw	r1, #778	; 0x30a
 800e20c:	4b24      	ldr	r3, [pc, #144]	; (800e2a0 <__d2b+0xb0>)
 800e20e:	4825      	ldr	r0, [pc, #148]	; (800e2a4 <__d2b+0xb4>)
 800e210:	f000 ff5c 	bl	800f0cc <__assert_func>
 800e214:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800e218:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800e21c:	bb2d      	cbnz	r5, 800e26a <__d2b+0x7a>
 800e21e:	9301      	str	r3, [sp, #4]
 800e220:	f1b8 0300 	subs.w	r3, r8, #0
 800e224:	d026      	beq.n	800e274 <__d2b+0x84>
 800e226:	4668      	mov	r0, sp
 800e228:	9300      	str	r3, [sp, #0]
 800e22a:	f7ff fd09 	bl	800dc40 <__lo0bits>
 800e22e:	9900      	ldr	r1, [sp, #0]
 800e230:	b1f0      	cbz	r0, 800e270 <__d2b+0x80>
 800e232:	9a01      	ldr	r2, [sp, #4]
 800e234:	f1c0 0320 	rsb	r3, r0, #32
 800e238:	fa02 f303 	lsl.w	r3, r2, r3
 800e23c:	430b      	orrs	r3, r1
 800e23e:	40c2      	lsrs	r2, r0
 800e240:	6163      	str	r3, [r4, #20]
 800e242:	9201      	str	r2, [sp, #4]
 800e244:	9b01      	ldr	r3, [sp, #4]
 800e246:	2b00      	cmp	r3, #0
 800e248:	bf14      	ite	ne
 800e24a:	2102      	movne	r1, #2
 800e24c:	2101      	moveq	r1, #1
 800e24e:	61a3      	str	r3, [r4, #24]
 800e250:	6121      	str	r1, [r4, #16]
 800e252:	b1c5      	cbz	r5, 800e286 <__d2b+0x96>
 800e254:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800e258:	4405      	add	r5, r0
 800e25a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800e25e:	603d      	str	r5, [r7, #0]
 800e260:	6030      	str	r0, [r6, #0]
 800e262:	4620      	mov	r0, r4
 800e264:	b002      	add	sp, #8
 800e266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e26a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800e26e:	e7d6      	b.n	800e21e <__d2b+0x2e>
 800e270:	6161      	str	r1, [r4, #20]
 800e272:	e7e7      	b.n	800e244 <__d2b+0x54>
 800e274:	a801      	add	r0, sp, #4
 800e276:	f7ff fce3 	bl	800dc40 <__lo0bits>
 800e27a:	2101      	movs	r1, #1
 800e27c:	9b01      	ldr	r3, [sp, #4]
 800e27e:	6121      	str	r1, [r4, #16]
 800e280:	6163      	str	r3, [r4, #20]
 800e282:	3020      	adds	r0, #32
 800e284:	e7e5      	b.n	800e252 <__d2b+0x62>
 800e286:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e28a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800e28e:	6038      	str	r0, [r7, #0]
 800e290:	6918      	ldr	r0, [r3, #16]
 800e292:	f7ff fcb5 	bl	800dc00 <__hi0bits>
 800e296:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800e29a:	6031      	str	r1, [r6, #0]
 800e29c:	e7e1      	b.n	800e262 <__d2b+0x72>
 800e29e:	bf00      	nop
 800e2a0:	08010a88 	.word	0x08010a88
 800e2a4:	08010b14 	.word	0x08010b14

0800e2a8 <__ratio>:
 800e2a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ac:	4688      	mov	r8, r1
 800e2ae:	4669      	mov	r1, sp
 800e2b0:	4681      	mov	r9, r0
 800e2b2:	f7ff ff49 	bl	800e148 <__b2d>
 800e2b6:	460f      	mov	r7, r1
 800e2b8:	4604      	mov	r4, r0
 800e2ba:	460d      	mov	r5, r1
 800e2bc:	4640      	mov	r0, r8
 800e2be:	a901      	add	r1, sp, #4
 800e2c0:	f7ff ff42 	bl	800e148 <__b2d>
 800e2c4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e2c8:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800e2cc:	468b      	mov	fp, r1
 800e2ce:	eba3 0c02 	sub.w	ip, r3, r2
 800e2d2:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e2d6:	1a9b      	subs	r3, r3, r2
 800e2d8:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800e2dc:	2b00      	cmp	r3, #0
 800e2de:	bfd5      	itete	le
 800e2e0:	460a      	movle	r2, r1
 800e2e2:	462a      	movgt	r2, r5
 800e2e4:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800e2e8:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800e2ec:	bfd8      	it	le
 800e2ee:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800e2f2:	465b      	mov	r3, fp
 800e2f4:	4602      	mov	r2, r0
 800e2f6:	4639      	mov	r1, r7
 800e2f8:	4620      	mov	r0, r4
 800e2fa:	f7f2 fa39 	bl	8000770 <__aeabi_ddiv>
 800e2fe:	b003      	add	sp, #12
 800e300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e304 <__copybits>:
 800e304:	3901      	subs	r1, #1
 800e306:	b570      	push	{r4, r5, r6, lr}
 800e308:	1149      	asrs	r1, r1, #5
 800e30a:	6914      	ldr	r4, [r2, #16]
 800e30c:	3101      	adds	r1, #1
 800e30e:	f102 0314 	add.w	r3, r2, #20
 800e312:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e316:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e31a:	1f05      	subs	r5, r0, #4
 800e31c:	42a3      	cmp	r3, r4
 800e31e:	d30c      	bcc.n	800e33a <__copybits+0x36>
 800e320:	1aa3      	subs	r3, r4, r2
 800e322:	3b11      	subs	r3, #17
 800e324:	f023 0303 	bic.w	r3, r3, #3
 800e328:	3211      	adds	r2, #17
 800e32a:	42a2      	cmp	r2, r4
 800e32c:	bf88      	it	hi
 800e32e:	2300      	movhi	r3, #0
 800e330:	4418      	add	r0, r3
 800e332:	2300      	movs	r3, #0
 800e334:	4288      	cmp	r0, r1
 800e336:	d305      	bcc.n	800e344 <__copybits+0x40>
 800e338:	bd70      	pop	{r4, r5, r6, pc}
 800e33a:	f853 6b04 	ldr.w	r6, [r3], #4
 800e33e:	f845 6f04 	str.w	r6, [r5, #4]!
 800e342:	e7eb      	b.n	800e31c <__copybits+0x18>
 800e344:	f840 3b04 	str.w	r3, [r0], #4
 800e348:	e7f4      	b.n	800e334 <__copybits+0x30>

0800e34a <__any_on>:
 800e34a:	f100 0214 	add.w	r2, r0, #20
 800e34e:	6900      	ldr	r0, [r0, #16]
 800e350:	114b      	asrs	r3, r1, #5
 800e352:	4298      	cmp	r0, r3
 800e354:	b510      	push	{r4, lr}
 800e356:	db11      	blt.n	800e37c <__any_on+0x32>
 800e358:	dd0a      	ble.n	800e370 <__any_on+0x26>
 800e35a:	f011 011f 	ands.w	r1, r1, #31
 800e35e:	d007      	beq.n	800e370 <__any_on+0x26>
 800e360:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e364:	fa24 f001 	lsr.w	r0, r4, r1
 800e368:	fa00 f101 	lsl.w	r1, r0, r1
 800e36c:	428c      	cmp	r4, r1
 800e36e:	d10b      	bne.n	800e388 <__any_on+0x3e>
 800e370:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e374:	4293      	cmp	r3, r2
 800e376:	d803      	bhi.n	800e380 <__any_on+0x36>
 800e378:	2000      	movs	r0, #0
 800e37a:	bd10      	pop	{r4, pc}
 800e37c:	4603      	mov	r3, r0
 800e37e:	e7f7      	b.n	800e370 <__any_on+0x26>
 800e380:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e384:	2900      	cmp	r1, #0
 800e386:	d0f5      	beq.n	800e374 <__any_on+0x2a>
 800e388:	2001      	movs	r0, #1
 800e38a:	e7f6      	b.n	800e37a <__any_on+0x30>

0800e38c <_calloc_r>:
 800e38c:	b570      	push	{r4, r5, r6, lr}
 800e38e:	fba1 5402 	umull	r5, r4, r1, r2
 800e392:	b934      	cbnz	r4, 800e3a2 <_calloc_r+0x16>
 800e394:	4629      	mov	r1, r5
 800e396:	f000 f875 	bl	800e484 <_malloc_r>
 800e39a:	4606      	mov	r6, r0
 800e39c:	b928      	cbnz	r0, 800e3aa <_calloc_r+0x1e>
 800e39e:	4630      	mov	r0, r6
 800e3a0:	bd70      	pop	{r4, r5, r6, pc}
 800e3a2:	220c      	movs	r2, #12
 800e3a4:	2600      	movs	r6, #0
 800e3a6:	6002      	str	r2, [r0, #0]
 800e3a8:	e7f9      	b.n	800e39e <_calloc_r+0x12>
 800e3aa:	462a      	mov	r2, r5
 800e3ac:	4621      	mov	r1, r4
 800e3ae:	f7fc fb5b 	bl	800aa68 <memset>
 800e3b2:	e7f4      	b.n	800e39e <_calloc_r+0x12>

0800e3b4 <_free_r>:
 800e3b4:	b538      	push	{r3, r4, r5, lr}
 800e3b6:	4605      	mov	r5, r0
 800e3b8:	2900      	cmp	r1, #0
 800e3ba:	d040      	beq.n	800e43e <_free_r+0x8a>
 800e3bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e3c0:	1f0c      	subs	r4, r1, #4
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	bfb8      	it	lt
 800e3c6:	18e4      	addlt	r4, r4, r3
 800e3c8:	f001 f880 	bl	800f4cc <__malloc_lock>
 800e3cc:	4a1c      	ldr	r2, [pc, #112]	; (800e440 <_free_r+0x8c>)
 800e3ce:	6813      	ldr	r3, [r2, #0]
 800e3d0:	b933      	cbnz	r3, 800e3e0 <_free_r+0x2c>
 800e3d2:	6063      	str	r3, [r4, #4]
 800e3d4:	6014      	str	r4, [r2, #0]
 800e3d6:	4628      	mov	r0, r5
 800e3d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e3dc:	f001 b87c 	b.w	800f4d8 <__malloc_unlock>
 800e3e0:	42a3      	cmp	r3, r4
 800e3e2:	d908      	bls.n	800e3f6 <_free_r+0x42>
 800e3e4:	6820      	ldr	r0, [r4, #0]
 800e3e6:	1821      	adds	r1, r4, r0
 800e3e8:	428b      	cmp	r3, r1
 800e3ea:	bf01      	itttt	eq
 800e3ec:	6819      	ldreq	r1, [r3, #0]
 800e3ee:	685b      	ldreq	r3, [r3, #4]
 800e3f0:	1809      	addeq	r1, r1, r0
 800e3f2:	6021      	streq	r1, [r4, #0]
 800e3f4:	e7ed      	b.n	800e3d2 <_free_r+0x1e>
 800e3f6:	461a      	mov	r2, r3
 800e3f8:	685b      	ldr	r3, [r3, #4]
 800e3fa:	b10b      	cbz	r3, 800e400 <_free_r+0x4c>
 800e3fc:	42a3      	cmp	r3, r4
 800e3fe:	d9fa      	bls.n	800e3f6 <_free_r+0x42>
 800e400:	6811      	ldr	r1, [r2, #0]
 800e402:	1850      	adds	r0, r2, r1
 800e404:	42a0      	cmp	r0, r4
 800e406:	d10b      	bne.n	800e420 <_free_r+0x6c>
 800e408:	6820      	ldr	r0, [r4, #0]
 800e40a:	4401      	add	r1, r0
 800e40c:	1850      	adds	r0, r2, r1
 800e40e:	4283      	cmp	r3, r0
 800e410:	6011      	str	r1, [r2, #0]
 800e412:	d1e0      	bne.n	800e3d6 <_free_r+0x22>
 800e414:	6818      	ldr	r0, [r3, #0]
 800e416:	685b      	ldr	r3, [r3, #4]
 800e418:	4401      	add	r1, r0
 800e41a:	6011      	str	r1, [r2, #0]
 800e41c:	6053      	str	r3, [r2, #4]
 800e41e:	e7da      	b.n	800e3d6 <_free_r+0x22>
 800e420:	d902      	bls.n	800e428 <_free_r+0x74>
 800e422:	230c      	movs	r3, #12
 800e424:	602b      	str	r3, [r5, #0]
 800e426:	e7d6      	b.n	800e3d6 <_free_r+0x22>
 800e428:	6820      	ldr	r0, [r4, #0]
 800e42a:	1821      	adds	r1, r4, r0
 800e42c:	428b      	cmp	r3, r1
 800e42e:	bf01      	itttt	eq
 800e430:	6819      	ldreq	r1, [r3, #0]
 800e432:	685b      	ldreq	r3, [r3, #4]
 800e434:	1809      	addeq	r1, r1, r0
 800e436:	6021      	streq	r1, [r4, #0]
 800e438:	6063      	str	r3, [r4, #4]
 800e43a:	6054      	str	r4, [r2, #4]
 800e43c:	e7cb      	b.n	800e3d6 <_free_r+0x22>
 800e43e:	bd38      	pop	{r3, r4, r5, pc}
 800e440:	20001450 	.word	0x20001450

0800e444 <sbrk_aligned>:
 800e444:	b570      	push	{r4, r5, r6, lr}
 800e446:	4e0e      	ldr	r6, [pc, #56]	; (800e480 <sbrk_aligned+0x3c>)
 800e448:	460c      	mov	r4, r1
 800e44a:	6831      	ldr	r1, [r6, #0]
 800e44c:	4605      	mov	r5, r0
 800e44e:	b911      	cbnz	r1, 800e456 <sbrk_aligned+0x12>
 800e450:	f000 fd26 	bl	800eea0 <_sbrk_r>
 800e454:	6030      	str	r0, [r6, #0]
 800e456:	4621      	mov	r1, r4
 800e458:	4628      	mov	r0, r5
 800e45a:	f000 fd21 	bl	800eea0 <_sbrk_r>
 800e45e:	1c43      	adds	r3, r0, #1
 800e460:	d00a      	beq.n	800e478 <sbrk_aligned+0x34>
 800e462:	1cc4      	adds	r4, r0, #3
 800e464:	f024 0403 	bic.w	r4, r4, #3
 800e468:	42a0      	cmp	r0, r4
 800e46a:	d007      	beq.n	800e47c <sbrk_aligned+0x38>
 800e46c:	1a21      	subs	r1, r4, r0
 800e46e:	4628      	mov	r0, r5
 800e470:	f000 fd16 	bl	800eea0 <_sbrk_r>
 800e474:	3001      	adds	r0, #1
 800e476:	d101      	bne.n	800e47c <sbrk_aligned+0x38>
 800e478:	f04f 34ff 	mov.w	r4, #4294967295
 800e47c:	4620      	mov	r0, r4
 800e47e:	bd70      	pop	{r4, r5, r6, pc}
 800e480:	20001454 	.word	0x20001454

0800e484 <_malloc_r>:
 800e484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e488:	1ccd      	adds	r5, r1, #3
 800e48a:	f025 0503 	bic.w	r5, r5, #3
 800e48e:	3508      	adds	r5, #8
 800e490:	2d0c      	cmp	r5, #12
 800e492:	bf38      	it	cc
 800e494:	250c      	movcc	r5, #12
 800e496:	2d00      	cmp	r5, #0
 800e498:	4607      	mov	r7, r0
 800e49a:	db01      	blt.n	800e4a0 <_malloc_r+0x1c>
 800e49c:	42a9      	cmp	r1, r5
 800e49e:	d905      	bls.n	800e4ac <_malloc_r+0x28>
 800e4a0:	230c      	movs	r3, #12
 800e4a2:	2600      	movs	r6, #0
 800e4a4:	603b      	str	r3, [r7, #0]
 800e4a6:	4630      	mov	r0, r6
 800e4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4ac:	4e2e      	ldr	r6, [pc, #184]	; (800e568 <_malloc_r+0xe4>)
 800e4ae:	f001 f80d 	bl	800f4cc <__malloc_lock>
 800e4b2:	6833      	ldr	r3, [r6, #0]
 800e4b4:	461c      	mov	r4, r3
 800e4b6:	bb34      	cbnz	r4, 800e506 <_malloc_r+0x82>
 800e4b8:	4629      	mov	r1, r5
 800e4ba:	4638      	mov	r0, r7
 800e4bc:	f7ff ffc2 	bl	800e444 <sbrk_aligned>
 800e4c0:	1c43      	adds	r3, r0, #1
 800e4c2:	4604      	mov	r4, r0
 800e4c4:	d14d      	bne.n	800e562 <_malloc_r+0xde>
 800e4c6:	6834      	ldr	r4, [r6, #0]
 800e4c8:	4626      	mov	r6, r4
 800e4ca:	2e00      	cmp	r6, #0
 800e4cc:	d140      	bne.n	800e550 <_malloc_r+0xcc>
 800e4ce:	6823      	ldr	r3, [r4, #0]
 800e4d0:	4631      	mov	r1, r6
 800e4d2:	4638      	mov	r0, r7
 800e4d4:	eb04 0803 	add.w	r8, r4, r3
 800e4d8:	f000 fce2 	bl	800eea0 <_sbrk_r>
 800e4dc:	4580      	cmp	r8, r0
 800e4de:	d13a      	bne.n	800e556 <_malloc_r+0xd2>
 800e4e0:	6821      	ldr	r1, [r4, #0]
 800e4e2:	3503      	adds	r5, #3
 800e4e4:	1a6d      	subs	r5, r5, r1
 800e4e6:	f025 0503 	bic.w	r5, r5, #3
 800e4ea:	3508      	adds	r5, #8
 800e4ec:	2d0c      	cmp	r5, #12
 800e4ee:	bf38      	it	cc
 800e4f0:	250c      	movcc	r5, #12
 800e4f2:	4638      	mov	r0, r7
 800e4f4:	4629      	mov	r1, r5
 800e4f6:	f7ff ffa5 	bl	800e444 <sbrk_aligned>
 800e4fa:	3001      	adds	r0, #1
 800e4fc:	d02b      	beq.n	800e556 <_malloc_r+0xd2>
 800e4fe:	6823      	ldr	r3, [r4, #0]
 800e500:	442b      	add	r3, r5
 800e502:	6023      	str	r3, [r4, #0]
 800e504:	e00e      	b.n	800e524 <_malloc_r+0xa0>
 800e506:	6822      	ldr	r2, [r4, #0]
 800e508:	1b52      	subs	r2, r2, r5
 800e50a:	d41e      	bmi.n	800e54a <_malloc_r+0xc6>
 800e50c:	2a0b      	cmp	r2, #11
 800e50e:	d916      	bls.n	800e53e <_malloc_r+0xba>
 800e510:	1961      	adds	r1, r4, r5
 800e512:	42a3      	cmp	r3, r4
 800e514:	6025      	str	r5, [r4, #0]
 800e516:	bf18      	it	ne
 800e518:	6059      	strne	r1, [r3, #4]
 800e51a:	6863      	ldr	r3, [r4, #4]
 800e51c:	bf08      	it	eq
 800e51e:	6031      	streq	r1, [r6, #0]
 800e520:	5162      	str	r2, [r4, r5]
 800e522:	604b      	str	r3, [r1, #4]
 800e524:	4638      	mov	r0, r7
 800e526:	f104 060b 	add.w	r6, r4, #11
 800e52a:	f000 ffd5 	bl	800f4d8 <__malloc_unlock>
 800e52e:	f026 0607 	bic.w	r6, r6, #7
 800e532:	1d23      	adds	r3, r4, #4
 800e534:	1af2      	subs	r2, r6, r3
 800e536:	d0b6      	beq.n	800e4a6 <_malloc_r+0x22>
 800e538:	1b9b      	subs	r3, r3, r6
 800e53a:	50a3      	str	r3, [r4, r2]
 800e53c:	e7b3      	b.n	800e4a6 <_malloc_r+0x22>
 800e53e:	6862      	ldr	r2, [r4, #4]
 800e540:	42a3      	cmp	r3, r4
 800e542:	bf0c      	ite	eq
 800e544:	6032      	streq	r2, [r6, #0]
 800e546:	605a      	strne	r2, [r3, #4]
 800e548:	e7ec      	b.n	800e524 <_malloc_r+0xa0>
 800e54a:	4623      	mov	r3, r4
 800e54c:	6864      	ldr	r4, [r4, #4]
 800e54e:	e7b2      	b.n	800e4b6 <_malloc_r+0x32>
 800e550:	4634      	mov	r4, r6
 800e552:	6876      	ldr	r6, [r6, #4]
 800e554:	e7b9      	b.n	800e4ca <_malloc_r+0x46>
 800e556:	230c      	movs	r3, #12
 800e558:	4638      	mov	r0, r7
 800e55a:	603b      	str	r3, [r7, #0]
 800e55c:	f000 ffbc 	bl	800f4d8 <__malloc_unlock>
 800e560:	e7a1      	b.n	800e4a6 <_malloc_r+0x22>
 800e562:	6025      	str	r5, [r4, #0]
 800e564:	e7de      	b.n	800e524 <_malloc_r+0xa0>
 800e566:	bf00      	nop
 800e568:	20001450 	.word	0x20001450

0800e56c <__ssputs_r>:
 800e56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e570:	688e      	ldr	r6, [r1, #8]
 800e572:	4682      	mov	sl, r0
 800e574:	429e      	cmp	r6, r3
 800e576:	460c      	mov	r4, r1
 800e578:	4690      	mov	r8, r2
 800e57a:	461f      	mov	r7, r3
 800e57c:	d838      	bhi.n	800e5f0 <__ssputs_r+0x84>
 800e57e:	898a      	ldrh	r2, [r1, #12]
 800e580:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e584:	d032      	beq.n	800e5ec <__ssputs_r+0x80>
 800e586:	6825      	ldr	r5, [r4, #0]
 800e588:	6909      	ldr	r1, [r1, #16]
 800e58a:	3301      	adds	r3, #1
 800e58c:	eba5 0901 	sub.w	r9, r5, r1
 800e590:	6965      	ldr	r5, [r4, #20]
 800e592:	444b      	add	r3, r9
 800e594:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e598:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e59c:	106d      	asrs	r5, r5, #1
 800e59e:	429d      	cmp	r5, r3
 800e5a0:	bf38      	it	cc
 800e5a2:	461d      	movcc	r5, r3
 800e5a4:	0553      	lsls	r3, r2, #21
 800e5a6:	d531      	bpl.n	800e60c <__ssputs_r+0xa0>
 800e5a8:	4629      	mov	r1, r5
 800e5aa:	f7ff ff6b 	bl	800e484 <_malloc_r>
 800e5ae:	4606      	mov	r6, r0
 800e5b0:	b950      	cbnz	r0, 800e5c8 <__ssputs_r+0x5c>
 800e5b2:	230c      	movs	r3, #12
 800e5b4:	f04f 30ff 	mov.w	r0, #4294967295
 800e5b8:	f8ca 3000 	str.w	r3, [sl]
 800e5bc:	89a3      	ldrh	r3, [r4, #12]
 800e5be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e5c2:	81a3      	strh	r3, [r4, #12]
 800e5c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e5c8:	464a      	mov	r2, r9
 800e5ca:	6921      	ldr	r1, [r4, #16]
 800e5cc:	f7fc fa3e 	bl	800aa4c <memcpy>
 800e5d0:	89a3      	ldrh	r3, [r4, #12]
 800e5d2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e5d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e5da:	81a3      	strh	r3, [r4, #12]
 800e5dc:	6126      	str	r6, [r4, #16]
 800e5de:	444e      	add	r6, r9
 800e5e0:	6026      	str	r6, [r4, #0]
 800e5e2:	463e      	mov	r6, r7
 800e5e4:	6165      	str	r5, [r4, #20]
 800e5e6:	eba5 0509 	sub.w	r5, r5, r9
 800e5ea:	60a5      	str	r5, [r4, #8]
 800e5ec:	42be      	cmp	r6, r7
 800e5ee:	d900      	bls.n	800e5f2 <__ssputs_r+0x86>
 800e5f0:	463e      	mov	r6, r7
 800e5f2:	4632      	mov	r2, r6
 800e5f4:	4641      	mov	r1, r8
 800e5f6:	6820      	ldr	r0, [r4, #0]
 800e5f8:	f000 ff4e 	bl	800f498 <memmove>
 800e5fc:	68a3      	ldr	r3, [r4, #8]
 800e5fe:	2000      	movs	r0, #0
 800e600:	1b9b      	subs	r3, r3, r6
 800e602:	60a3      	str	r3, [r4, #8]
 800e604:	6823      	ldr	r3, [r4, #0]
 800e606:	4433      	add	r3, r6
 800e608:	6023      	str	r3, [r4, #0]
 800e60a:	e7db      	b.n	800e5c4 <__ssputs_r+0x58>
 800e60c:	462a      	mov	r2, r5
 800e60e:	f000 ff69 	bl	800f4e4 <_realloc_r>
 800e612:	4606      	mov	r6, r0
 800e614:	2800      	cmp	r0, #0
 800e616:	d1e1      	bne.n	800e5dc <__ssputs_r+0x70>
 800e618:	4650      	mov	r0, sl
 800e61a:	6921      	ldr	r1, [r4, #16]
 800e61c:	f7ff feca 	bl	800e3b4 <_free_r>
 800e620:	e7c7      	b.n	800e5b2 <__ssputs_r+0x46>
	...

0800e624 <_svfiprintf_r>:
 800e624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e628:	4698      	mov	r8, r3
 800e62a:	898b      	ldrh	r3, [r1, #12]
 800e62c:	4607      	mov	r7, r0
 800e62e:	061b      	lsls	r3, r3, #24
 800e630:	460d      	mov	r5, r1
 800e632:	4614      	mov	r4, r2
 800e634:	b09d      	sub	sp, #116	; 0x74
 800e636:	d50e      	bpl.n	800e656 <_svfiprintf_r+0x32>
 800e638:	690b      	ldr	r3, [r1, #16]
 800e63a:	b963      	cbnz	r3, 800e656 <_svfiprintf_r+0x32>
 800e63c:	2140      	movs	r1, #64	; 0x40
 800e63e:	f7ff ff21 	bl	800e484 <_malloc_r>
 800e642:	6028      	str	r0, [r5, #0]
 800e644:	6128      	str	r0, [r5, #16]
 800e646:	b920      	cbnz	r0, 800e652 <_svfiprintf_r+0x2e>
 800e648:	230c      	movs	r3, #12
 800e64a:	603b      	str	r3, [r7, #0]
 800e64c:	f04f 30ff 	mov.w	r0, #4294967295
 800e650:	e0d1      	b.n	800e7f6 <_svfiprintf_r+0x1d2>
 800e652:	2340      	movs	r3, #64	; 0x40
 800e654:	616b      	str	r3, [r5, #20]
 800e656:	2300      	movs	r3, #0
 800e658:	9309      	str	r3, [sp, #36]	; 0x24
 800e65a:	2320      	movs	r3, #32
 800e65c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e660:	2330      	movs	r3, #48	; 0x30
 800e662:	f04f 0901 	mov.w	r9, #1
 800e666:	f8cd 800c 	str.w	r8, [sp, #12]
 800e66a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800e810 <_svfiprintf_r+0x1ec>
 800e66e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e672:	4623      	mov	r3, r4
 800e674:	469a      	mov	sl, r3
 800e676:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e67a:	b10a      	cbz	r2, 800e680 <_svfiprintf_r+0x5c>
 800e67c:	2a25      	cmp	r2, #37	; 0x25
 800e67e:	d1f9      	bne.n	800e674 <_svfiprintf_r+0x50>
 800e680:	ebba 0b04 	subs.w	fp, sl, r4
 800e684:	d00b      	beq.n	800e69e <_svfiprintf_r+0x7a>
 800e686:	465b      	mov	r3, fp
 800e688:	4622      	mov	r2, r4
 800e68a:	4629      	mov	r1, r5
 800e68c:	4638      	mov	r0, r7
 800e68e:	f7ff ff6d 	bl	800e56c <__ssputs_r>
 800e692:	3001      	adds	r0, #1
 800e694:	f000 80aa 	beq.w	800e7ec <_svfiprintf_r+0x1c8>
 800e698:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e69a:	445a      	add	r2, fp
 800e69c:	9209      	str	r2, [sp, #36]	; 0x24
 800e69e:	f89a 3000 	ldrb.w	r3, [sl]
 800e6a2:	2b00      	cmp	r3, #0
 800e6a4:	f000 80a2 	beq.w	800e7ec <_svfiprintf_r+0x1c8>
 800e6a8:	2300      	movs	r3, #0
 800e6aa:	f04f 32ff 	mov.w	r2, #4294967295
 800e6ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e6b2:	f10a 0a01 	add.w	sl, sl, #1
 800e6b6:	9304      	str	r3, [sp, #16]
 800e6b8:	9307      	str	r3, [sp, #28]
 800e6ba:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e6be:	931a      	str	r3, [sp, #104]	; 0x68
 800e6c0:	4654      	mov	r4, sl
 800e6c2:	2205      	movs	r2, #5
 800e6c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e6c8:	4851      	ldr	r0, [pc, #324]	; (800e810 <_svfiprintf_r+0x1ec>)
 800e6ca:	f7ff f999 	bl	800da00 <memchr>
 800e6ce:	9a04      	ldr	r2, [sp, #16]
 800e6d0:	b9d8      	cbnz	r0, 800e70a <_svfiprintf_r+0xe6>
 800e6d2:	06d0      	lsls	r0, r2, #27
 800e6d4:	bf44      	itt	mi
 800e6d6:	2320      	movmi	r3, #32
 800e6d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e6dc:	0711      	lsls	r1, r2, #28
 800e6de:	bf44      	itt	mi
 800e6e0:	232b      	movmi	r3, #43	; 0x2b
 800e6e2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e6e6:	f89a 3000 	ldrb.w	r3, [sl]
 800e6ea:	2b2a      	cmp	r3, #42	; 0x2a
 800e6ec:	d015      	beq.n	800e71a <_svfiprintf_r+0xf6>
 800e6ee:	4654      	mov	r4, sl
 800e6f0:	2000      	movs	r0, #0
 800e6f2:	f04f 0c0a 	mov.w	ip, #10
 800e6f6:	9a07      	ldr	r2, [sp, #28]
 800e6f8:	4621      	mov	r1, r4
 800e6fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e6fe:	3b30      	subs	r3, #48	; 0x30
 800e700:	2b09      	cmp	r3, #9
 800e702:	d94e      	bls.n	800e7a2 <_svfiprintf_r+0x17e>
 800e704:	b1b0      	cbz	r0, 800e734 <_svfiprintf_r+0x110>
 800e706:	9207      	str	r2, [sp, #28]
 800e708:	e014      	b.n	800e734 <_svfiprintf_r+0x110>
 800e70a:	eba0 0308 	sub.w	r3, r0, r8
 800e70e:	fa09 f303 	lsl.w	r3, r9, r3
 800e712:	4313      	orrs	r3, r2
 800e714:	46a2      	mov	sl, r4
 800e716:	9304      	str	r3, [sp, #16]
 800e718:	e7d2      	b.n	800e6c0 <_svfiprintf_r+0x9c>
 800e71a:	9b03      	ldr	r3, [sp, #12]
 800e71c:	1d19      	adds	r1, r3, #4
 800e71e:	681b      	ldr	r3, [r3, #0]
 800e720:	9103      	str	r1, [sp, #12]
 800e722:	2b00      	cmp	r3, #0
 800e724:	bfbb      	ittet	lt
 800e726:	425b      	neglt	r3, r3
 800e728:	f042 0202 	orrlt.w	r2, r2, #2
 800e72c:	9307      	strge	r3, [sp, #28]
 800e72e:	9307      	strlt	r3, [sp, #28]
 800e730:	bfb8      	it	lt
 800e732:	9204      	strlt	r2, [sp, #16]
 800e734:	7823      	ldrb	r3, [r4, #0]
 800e736:	2b2e      	cmp	r3, #46	; 0x2e
 800e738:	d10c      	bne.n	800e754 <_svfiprintf_r+0x130>
 800e73a:	7863      	ldrb	r3, [r4, #1]
 800e73c:	2b2a      	cmp	r3, #42	; 0x2a
 800e73e:	d135      	bne.n	800e7ac <_svfiprintf_r+0x188>
 800e740:	9b03      	ldr	r3, [sp, #12]
 800e742:	3402      	adds	r4, #2
 800e744:	1d1a      	adds	r2, r3, #4
 800e746:	681b      	ldr	r3, [r3, #0]
 800e748:	9203      	str	r2, [sp, #12]
 800e74a:	2b00      	cmp	r3, #0
 800e74c:	bfb8      	it	lt
 800e74e:	f04f 33ff 	movlt.w	r3, #4294967295
 800e752:	9305      	str	r3, [sp, #20]
 800e754:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800e814 <_svfiprintf_r+0x1f0>
 800e758:	2203      	movs	r2, #3
 800e75a:	4650      	mov	r0, sl
 800e75c:	7821      	ldrb	r1, [r4, #0]
 800e75e:	f7ff f94f 	bl	800da00 <memchr>
 800e762:	b140      	cbz	r0, 800e776 <_svfiprintf_r+0x152>
 800e764:	2340      	movs	r3, #64	; 0x40
 800e766:	eba0 000a 	sub.w	r0, r0, sl
 800e76a:	fa03 f000 	lsl.w	r0, r3, r0
 800e76e:	9b04      	ldr	r3, [sp, #16]
 800e770:	3401      	adds	r4, #1
 800e772:	4303      	orrs	r3, r0
 800e774:	9304      	str	r3, [sp, #16]
 800e776:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e77a:	2206      	movs	r2, #6
 800e77c:	4826      	ldr	r0, [pc, #152]	; (800e818 <_svfiprintf_r+0x1f4>)
 800e77e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e782:	f7ff f93d 	bl	800da00 <memchr>
 800e786:	2800      	cmp	r0, #0
 800e788:	d038      	beq.n	800e7fc <_svfiprintf_r+0x1d8>
 800e78a:	4b24      	ldr	r3, [pc, #144]	; (800e81c <_svfiprintf_r+0x1f8>)
 800e78c:	bb1b      	cbnz	r3, 800e7d6 <_svfiprintf_r+0x1b2>
 800e78e:	9b03      	ldr	r3, [sp, #12]
 800e790:	3307      	adds	r3, #7
 800e792:	f023 0307 	bic.w	r3, r3, #7
 800e796:	3308      	adds	r3, #8
 800e798:	9303      	str	r3, [sp, #12]
 800e79a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e79c:	4433      	add	r3, r6
 800e79e:	9309      	str	r3, [sp, #36]	; 0x24
 800e7a0:	e767      	b.n	800e672 <_svfiprintf_r+0x4e>
 800e7a2:	460c      	mov	r4, r1
 800e7a4:	2001      	movs	r0, #1
 800e7a6:	fb0c 3202 	mla	r2, ip, r2, r3
 800e7aa:	e7a5      	b.n	800e6f8 <_svfiprintf_r+0xd4>
 800e7ac:	2300      	movs	r3, #0
 800e7ae:	f04f 0c0a 	mov.w	ip, #10
 800e7b2:	4619      	mov	r1, r3
 800e7b4:	3401      	adds	r4, #1
 800e7b6:	9305      	str	r3, [sp, #20]
 800e7b8:	4620      	mov	r0, r4
 800e7ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e7be:	3a30      	subs	r2, #48	; 0x30
 800e7c0:	2a09      	cmp	r2, #9
 800e7c2:	d903      	bls.n	800e7cc <_svfiprintf_r+0x1a8>
 800e7c4:	2b00      	cmp	r3, #0
 800e7c6:	d0c5      	beq.n	800e754 <_svfiprintf_r+0x130>
 800e7c8:	9105      	str	r1, [sp, #20]
 800e7ca:	e7c3      	b.n	800e754 <_svfiprintf_r+0x130>
 800e7cc:	4604      	mov	r4, r0
 800e7ce:	2301      	movs	r3, #1
 800e7d0:	fb0c 2101 	mla	r1, ip, r1, r2
 800e7d4:	e7f0      	b.n	800e7b8 <_svfiprintf_r+0x194>
 800e7d6:	ab03      	add	r3, sp, #12
 800e7d8:	9300      	str	r3, [sp, #0]
 800e7da:	462a      	mov	r2, r5
 800e7dc:	4638      	mov	r0, r7
 800e7de:	4b10      	ldr	r3, [pc, #64]	; (800e820 <_svfiprintf_r+0x1fc>)
 800e7e0:	a904      	add	r1, sp, #16
 800e7e2:	f7fc f9e7 	bl	800abb4 <_printf_float>
 800e7e6:	1c42      	adds	r2, r0, #1
 800e7e8:	4606      	mov	r6, r0
 800e7ea:	d1d6      	bne.n	800e79a <_svfiprintf_r+0x176>
 800e7ec:	89ab      	ldrh	r3, [r5, #12]
 800e7ee:	065b      	lsls	r3, r3, #25
 800e7f0:	f53f af2c 	bmi.w	800e64c <_svfiprintf_r+0x28>
 800e7f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e7f6:	b01d      	add	sp, #116	; 0x74
 800e7f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7fc:	ab03      	add	r3, sp, #12
 800e7fe:	9300      	str	r3, [sp, #0]
 800e800:	462a      	mov	r2, r5
 800e802:	4638      	mov	r0, r7
 800e804:	4b06      	ldr	r3, [pc, #24]	; (800e820 <_svfiprintf_r+0x1fc>)
 800e806:	a904      	add	r1, sp, #16
 800e808:	f7fc fc70 	bl	800b0ec <_printf_i>
 800e80c:	e7eb      	b.n	800e7e6 <_svfiprintf_r+0x1c2>
 800e80e:	bf00      	nop
 800e810:	08010c6c 	.word	0x08010c6c
 800e814:	08010c72 	.word	0x08010c72
 800e818:	08010c76 	.word	0x08010c76
 800e81c:	0800abb5 	.word	0x0800abb5
 800e820:	0800e56d 	.word	0x0800e56d

0800e824 <_sungetc_r>:
 800e824:	b538      	push	{r3, r4, r5, lr}
 800e826:	1c4b      	adds	r3, r1, #1
 800e828:	4614      	mov	r4, r2
 800e82a:	d103      	bne.n	800e834 <_sungetc_r+0x10>
 800e82c:	f04f 35ff 	mov.w	r5, #4294967295
 800e830:	4628      	mov	r0, r5
 800e832:	bd38      	pop	{r3, r4, r5, pc}
 800e834:	8993      	ldrh	r3, [r2, #12]
 800e836:	b2cd      	uxtb	r5, r1
 800e838:	f023 0320 	bic.w	r3, r3, #32
 800e83c:	8193      	strh	r3, [r2, #12]
 800e83e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e840:	6852      	ldr	r2, [r2, #4]
 800e842:	b18b      	cbz	r3, 800e868 <_sungetc_r+0x44>
 800e844:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e846:	4293      	cmp	r3, r2
 800e848:	dd08      	ble.n	800e85c <_sungetc_r+0x38>
 800e84a:	6823      	ldr	r3, [r4, #0]
 800e84c:	1e5a      	subs	r2, r3, #1
 800e84e:	6022      	str	r2, [r4, #0]
 800e850:	f803 5c01 	strb.w	r5, [r3, #-1]
 800e854:	6863      	ldr	r3, [r4, #4]
 800e856:	3301      	adds	r3, #1
 800e858:	6063      	str	r3, [r4, #4]
 800e85a:	e7e9      	b.n	800e830 <_sungetc_r+0xc>
 800e85c:	4621      	mov	r1, r4
 800e85e:	f000 fbef 	bl	800f040 <__submore>
 800e862:	2800      	cmp	r0, #0
 800e864:	d0f1      	beq.n	800e84a <_sungetc_r+0x26>
 800e866:	e7e1      	b.n	800e82c <_sungetc_r+0x8>
 800e868:	6921      	ldr	r1, [r4, #16]
 800e86a:	6823      	ldr	r3, [r4, #0]
 800e86c:	b151      	cbz	r1, 800e884 <_sungetc_r+0x60>
 800e86e:	4299      	cmp	r1, r3
 800e870:	d208      	bcs.n	800e884 <_sungetc_r+0x60>
 800e872:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 800e876:	42a9      	cmp	r1, r5
 800e878:	d104      	bne.n	800e884 <_sungetc_r+0x60>
 800e87a:	3b01      	subs	r3, #1
 800e87c:	3201      	adds	r2, #1
 800e87e:	6023      	str	r3, [r4, #0]
 800e880:	6062      	str	r2, [r4, #4]
 800e882:	e7d5      	b.n	800e830 <_sungetc_r+0xc>
 800e884:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 800e888:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e88c:	6363      	str	r3, [r4, #52]	; 0x34
 800e88e:	2303      	movs	r3, #3
 800e890:	63a3      	str	r3, [r4, #56]	; 0x38
 800e892:	4623      	mov	r3, r4
 800e894:	f803 5f46 	strb.w	r5, [r3, #70]!
 800e898:	6023      	str	r3, [r4, #0]
 800e89a:	2301      	movs	r3, #1
 800e89c:	e7dc      	b.n	800e858 <_sungetc_r+0x34>

0800e89e <__ssrefill_r>:
 800e89e:	b510      	push	{r4, lr}
 800e8a0:	460c      	mov	r4, r1
 800e8a2:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800e8a4:	b169      	cbz	r1, 800e8c2 <__ssrefill_r+0x24>
 800e8a6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e8aa:	4299      	cmp	r1, r3
 800e8ac:	d001      	beq.n	800e8b2 <__ssrefill_r+0x14>
 800e8ae:	f7ff fd81 	bl	800e3b4 <_free_r>
 800e8b2:	2000      	movs	r0, #0
 800e8b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e8b6:	6360      	str	r0, [r4, #52]	; 0x34
 800e8b8:	6063      	str	r3, [r4, #4]
 800e8ba:	b113      	cbz	r3, 800e8c2 <__ssrefill_r+0x24>
 800e8bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8be:	6023      	str	r3, [r4, #0]
 800e8c0:	bd10      	pop	{r4, pc}
 800e8c2:	6923      	ldr	r3, [r4, #16]
 800e8c4:	f04f 30ff 	mov.w	r0, #4294967295
 800e8c8:	6023      	str	r3, [r4, #0]
 800e8ca:	2300      	movs	r3, #0
 800e8cc:	6063      	str	r3, [r4, #4]
 800e8ce:	89a3      	ldrh	r3, [r4, #12]
 800e8d0:	f043 0320 	orr.w	r3, r3, #32
 800e8d4:	81a3      	strh	r3, [r4, #12]
 800e8d6:	e7f3      	b.n	800e8c0 <__ssrefill_r+0x22>

0800e8d8 <__ssvfiscanf_r>:
 800e8d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e8dc:	460c      	mov	r4, r1
 800e8de:	2100      	movs	r1, #0
 800e8e0:	4606      	mov	r6, r0
 800e8e2:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 800e8e6:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 800e8ea:	49a7      	ldr	r1, [pc, #668]	; (800eb88 <__ssvfiscanf_r+0x2b0>)
 800e8ec:	f10d 0804 	add.w	r8, sp, #4
 800e8f0:	91a0      	str	r1, [sp, #640]	; 0x280
 800e8f2:	49a6      	ldr	r1, [pc, #664]	; (800eb8c <__ssvfiscanf_r+0x2b4>)
 800e8f4:	4fa6      	ldr	r7, [pc, #664]	; (800eb90 <__ssvfiscanf_r+0x2b8>)
 800e8f6:	f8df 929c 	ldr.w	r9, [pc, #668]	; 800eb94 <__ssvfiscanf_r+0x2bc>
 800e8fa:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 800e8fe:	91a1      	str	r1, [sp, #644]	; 0x284
 800e900:	9300      	str	r3, [sp, #0]
 800e902:	7813      	ldrb	r3, [r2, #0]
 800e904:	2b00      	cmp	r3, #0
 800e906:	f000 815c 	beq.w	800ebc2 <__ssvfiscanf_r+0x2ea>
 800e90a:	5dd9      	ldrb	r1, [r3, r7]
 800e90c:	1c55      	adds	r5, r2, #1
 800e90e:	f011 0108 	ands.w	r1, r1, #8
 800e912:	d019      	beq.n	800e948 <__ssvfiscanf_r+0x70>
 800e914:	6863      	ldr	r3, [r4, #4]
 800e916:	2b00      	cmp	r3, #0
 800e918:	dd0f      	ble.n	800e93a <__ssvfiscanf_r+0x62>
 800e91a:	6823      	ldr	r3, [r4, #0]
 800e91c:	781a      	ldrb	r2, [r3, #0]
 800e91e:	5cba      	ldrb	r2, [r7, r2]
 800e920:	0712      	lsls	r2, r2, #28
 800e922:	d401      	bmi.n	800e928 <__ssvfiscanf_r+0x50>
 800e924:	462a      	mov	r2, r5
 800e926:	e7ec      	b.n	800e902 <__ssvfiscanf_r+0x2a>
 800e928:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800e92a:	3301      	adds	r3, #1
 800e92c:	3201      	adds	r2, #1
 800e92e:	9245      	str	r2, [sp, #276]	; 0x114
 800e930:	6862      	ldr	r2, [r4, #4]
 800e932:	6023      	str	r3, [r4, #0]
 800e934:	3a01      	subs	r2, #1
 800e936:	6062      	str	r2, [r4, #4]
 800e938:	e7ec      	b.n	800e914 <__ssvfiscanf_r+0x3c>
 800e93a:	4621      	mov	r1, r4
 800e93c:	4630      	mov	r0, r6
 800e93e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800e940:	4798      	blx	r3
 800e942:	2800      	cmp	r0, #0
 800e944:	d0e9      	beq.n	800e91a <__ssvfiscanf_r+0x42>
 800e946:	e7ed      	b.n	800e924 <__ssvfiscanf_r+0x4c>
 800e948:	2b25      	cmp	r3, #37	; 0x25
 800e94a:	d012      	beq.n	800e972 <__ssvfiscanf_r+0x9a>
 800e94c:	469a      	mov	sl, r3
 800e94e:	6863      	ldr	r3, [r4, #4]
 800e950:	2b00      	cmp	r3, #0
 800e952:	f340 8094 	ble.w	800ea7e <__ssvfiscanf_r+0x1a6>
 800e956:	6822      	ldr	r2, [r4, #0]
 800e958:	7813      	ldrb	r3, [r2, #0]
 800e95a:	4553      	cmp	r3, sl
 800e95c:	f040 8131 	bne.w	800ebc2 <__ssvfiscanf_r+0x2ea>
 800e960:	6863      	ldr	r3, [r4, #4]
 800e962:	3201      	adds	r2, #1
 800e964:	3b01      	subs	r3, #1
 800e966:	6063      	str	r3, [r4, #4]
 800e968:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800e96a:	6022      	str	r2, [r4, #0]
 800e96c:	3301      	adds	r3, #1
 800e96e:	9345      	str	r3, [sp, #276]	; 0x114
 800e970:	e7d8      	b.n	800e924 <__ssvfiscanf_r+0x4c>
 800e972:	9141      	str	r1, [sp, #260]	; 0x104
 800e974:	9143      	str	r1, [sp, #268]	; 0x10c
 800e976:	7853      	ldrb	r3, [r2, #1]
 800e978:	2b2a      	cmp	r3, #42	; 0x2a
 800e97a:	bf04      	itt	eq
 800e97c:	2310      	moveq	r3, #16
 800e97e:	1c95      	addeq	r5, r2, #2
 800e980:	f04f 020a 	mov.w	r2, #10
 800e984:	bf08      	it	eq
 800e986:	9341      	streq	r3, [sp, #260]	; 0x104
 800e988:	46aa      	mov	sl, r5
 800e98a:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800e98e:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800e992:	2b09      	cmp	r3, #9
 800e994:	d91d      	bls.n	800e9d2 <__ssvfiscanf_r+0xfa>
 800e996:	2203      	movs	r2, #3
 800e998:	487e      	ldr	r0, [pc, #504]	; (800eb94 <__ssvfiscanf_r+0x2bc>)
 800e99a:	f7ff f831 	bl	800da00 <memchr>
 800e99e:	b140      	cbz	r0, 800e9b2 <__ssvfiscanf_r+0xda>
 800e9a0:	2301      	movs	r3, #1
 800e9a2:	4655      	mov	r5, sl
 800e9a4:	eba0 0009 	sub.w	r0, r0, r9
 800e9a8:	fa03 f000 	lsl.w	r0, r3, r0
 800e9ac:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800e9ae:	4318      	orrs	r0, r3
 800e9b0:	9041      	str	r0, [sp, #260]	; 0x104
 800e9b2:	f815 3b01 	ldrb.w	r3, [r5], #1
 800e9b6:	2b78      	cmp	r3, #120	; 0x78
 800e9b8:	d806      	bhi.n	800e9c8 <__ssvfiscanf_r+0xf0>
 800e9ba:	2b57      	cmp	r3, #87	; 0x57
 800e9bc:	d810      	bhi.n	800e9e0 <__ssvfiscanf_r+0x108>
 800e9be:	2b25      	cmp	r3, #37	; 0x25
 800e9c0:	d0c4      	beq.n	800e94c <__ssvfiscanf_r+0x74>
 800e9c2:	d857      	bhi.n	800ea74 <__ssvfiscanf_r+0x19c>
 800e9c4:	2b00      	cmp	r3, #0
 800e9c6:	d065      	beq.n	800ea94 <__ssvfiscanf_r+0x1bc>
 800e9c8:	2303      	movs	r3, #3
 800e9ca:	9347      	str	r3, [sp, #284]	; 0x11c
 800e9cc:	230a      	movs	r3, #10
 800e9ce:	9342      	str	r3, [sp, #264]	; 0x108
 800e9d0:	e072      	b.n	800eab8 <__ssvfiscanf_r+0x1e0>
 800e9d2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800e9d4:	4655      	mov	r5, sl
 800e9d6:	fb02 1103 	mla	r1, r2, r3, r1
 800e9da:	3930      	subs	r1, #48	; 0x30
 800e9dc:	9143      	str	r1, [sp, #268]	; 0x10c
 800e9de:	e7d3      	b.n	800e988 <__ssvfiscanf_r+0xb0>
 800e9e0:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800e9e4:	2a20      	cmp	r2, #32
 800e9e6:	d8ef      	bhi.n	800e9c8 <__ssvfiscanf_r+0xf0>
 800e9e8:	a101      	add	r1, pc, #4	; (adr r1, 800e9f0 <__ssvfiscanf_r+0x118>)
 800e9ea:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800e9ee:	bf00      	nop
 800e9f0:	0800eaa3 	.word	0x0800eaa3
 800e9f4:	0800e9c9 	.word	0x0800e9c9
 800e9f8:	0800e9c9 	.word	0x0800e9c9
 800e9fc:	0800eb01 	.word	0x0800eb01
 800ea00:	0800e9c9 	.word	0x0800e9c9
 800ea04:	0800e9c9 	.word	0x0800e9c9
 800ea08:	0800e9c9 	.word	0x0800e9c9
 800ea0c:	0800e9c9 	.word	0x0800e9c9
 800ea10:	0800e9c9 	.word	0x0800e9c9
 800ea14:	0800e9c9 	.word	0x0800e9c9
 800ea18:	0800e9c9 	.word	0x0800e9c9
 800ea1c:	0800eb17 	.word	0x0800eb17
 800ea20:	0800eaed 	.word	0x0800eaed
 800ea24:	0800ea7b 	.word	0x0800ea7b
 800ea28:	0800ea7b 	.word	0x0800ea7b
 800ea2c:	0800ea7b 	.word	0x0800ea7b
 800ea30:	0800e9c9 	.word	0x0800e9c9
 800ea34:	0800eaf1 	.word	0x0800eaf1
 800ea38:	0800e9c9 	.word	0x0800e9c9
 800ea3c:	0800e9c9 	.word	0x0800e9c9
 800ea40:	0800e9c9 	.word	0x0800e9c9
 800ea44:	0800e9c9 	.word	0x0800e9c9
 800ea48:	0800eb27 	.word	0x0800eb27
 800ea4c:	0800eaf9 	.word	0x0800eaf9
 800ea50:	0800ea9b 	.word	0x0800ea9b
 800ea54:	0800e9c9 	.word	0x0800e9c9
 800ea58:	0800e9c9 	.word	0x0800e9c9
 800ea5c:	0800eb23 	.word	0x0800eb23
 800ea60:	0800e9c9 	.word	0x0800e9c9
 800ea64:	0800eaed 	.word	0x0800eaed
 800ea68:	0800e9c9 	.word	0x0800e9c9
 800ea6c:	0800e9c9 	.word	0x0800e9c9
 800ea70:	0800eaa3 	.word	0x0800eaa3
 800ea74:	3b45      	subs	r3, #69	; 0x45
 800ea76:	2b02      	cmp	r3, #2
 800ea78:	d8a6      	bhi.n	800e9c8 <__ssvfiscanf_r+0xf0>
 800ea7a:	2305      	movs	r3, #5
 800ea7c:	e01b      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800ea7e:	4621      	mov	r1, r4
 800ea80:	4630      	mov	r0, r6
 800ea82:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800ea84:	4798      	blx	r3
 800ea86:	2800      	cmp	r0, #0
 800ea88:	f43f af65 	beq.w	800e956 <__ssvfiscanf_r+0x7e>
 800ea8c:	9844      	ldr	r0, [sp, #272]	; 0x110
 800ea8e:	2800      	cmp	r0, #0
 800ea90:	f040 808d 	bne.w	800ebae <__ssvfiscanf_r+0x2d6>
 800ea94:	f04f 30ff 	mov.w	r0, #4294967295
 800ea98:	e08f      	b.n	800ebba <__ssvfiscanf_r+0x2e2>
 800ea9a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800ea9c:	f042 0220 	orr.w	r2, r2, #32
 800eaa0:	9241      	str	r2, [sp, #260]	; 0x104
 800eaa2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800eaa4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800eaa8:	9241      	str	r2, [sp, #260]	; 0x104
 800eaaa:	2210      	movs	r2, #16
 800eaac:	2b6f      	cmp	r3, #111	; 0x6f
 800eaae:	bf34      	ite	cc
 800eab0:	2303      	movcc	r3, #3
 800eab2:	2304      	movcs	r3, #4
 800eab4:	9242      	str	r2, [sp, #264]	; 0x108
 800eab6:	9347      	str	r3, [sp, #284]	; 0x11c
 800eab8:	6863      	ldr	r3, [r4, #4]
 800eaba:	2b00      	cmp	r3, #0
 800eabc:	dd42      	ble.n	800eb44 <__ssvfiscanf_r+0x26c>
 800eabe:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800eac0:	0659      	lsls	r1, r3, #25
 800eac2:	d404      	bmi.n	800eace <__ssvfiscanf_r+0x1f6>
 800eac4:	6823      	ldr	r3, [r4, #0]
 800eac6:	781a      	ldrb	r2, [r3, #0]
 800eac8:	5cba      	ldrb	r2, [r7, r2]
 800eaca:	0712      	lsls	r2, r2, #28
 800eacc:	d441      	bmi.n	800eb52 <__ssvfiscanf_r+0x27a>
 800eace:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 800ead0:	2b02      	cmp	r3, #2
 800ead2:	dc50      	bgt.n	800eb76 <__ssvfiscanf_r+0x29e>
 800ead4:	466b      	mov	r3, sp
 800ead6:	4622      	mov	r2, r4
 800ead8:	4630      	mov	r0, r6
 800eada:	a941      	add	r1, sp, #260	; 0x104
 800eadc:	f000 f876 	bl	800ebcc <_scanf_chars>
 800eae0:	2801      	cmp	r0, #1
 800eae2:	d06e      	beq.n	800ebc2 <__ssvfiscanf_r+0x2ea>
 800eae4:	2802      	cmp	r0, #2
 800eae6:	f47f af1d 	bne.w	800e924 <__ssvfiscanf_r+0x4c>
 800eaea:	e7cf      	b.n	800ea8c <__ssvfiscanf_r+0x1b4>
 800eaec:	220a      	movs	r2, #10
 800eaee:	e7dd      	b.n	800eaac <__ssvfiscanf_r+0x1d4>
 800eaf0:	2300      	movs	r3, #0
 800eaf2:	9342      	str	r3, [sp, #264]	; 0x108
 800eaf4:	2303      	movs	r3, #3
 800eaf6:	e7de      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800eaf8:	2308      	movs	r3, #8
 800eafa:	9342      	str	r3, [sp, #264]	; 0x108
 800eafc:	2304      	movs	r3, #4
 800eafe:	e7da      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800eb00:	4629      	mov	r1, r5
 800eb02:	4640      	mov	r0, r8
 800eb04:	f000 f9dc 	bl	800eec0 <__sccl>
 800eb08:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800eb0a:	4605      	mov	r5, r0
 800eb0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eb10:	9341      	str	r3, [sp, #260]	; 0x104
 800eb12:	2301      	movs	r3, #1
 800eb14:	e7cf      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800eb16:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800eb18:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eb1c:	9341      	str	r3, [sp, #260]	; 0x104
 800eb1e:	2300      	movs	r3, #0
 800eb20:	e7c9      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800eb22:	2302      	movs	r3, #2
 800eb24:	e7c7      	b.n	800eab6 <__ssvfiscanf_r+0x1de>
 800eb26:	9841      	ldr	r0, [sp, #260]	; 0x104
 800eb28:	06c3      	lsls	r3, r0, #27
 800eb2a:	f53f aefb 	bmi.w	800e924 <__ssvfiscanf_r+0x4c>
 800eb2e:	9b00      	ldr	r3, [sp, #0]
 800eb30:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800eb32:	1d19      	adds	r1, r3, #4
 800eb34:	9100      	str	r1, [sp, #0]
 800eb36:	681b      	ldr	r3, [r3, #0]
 800eb38:	f010 0f01 	tst.w	r0, #1
 800eb3c:	bf14      	ite	ne
 800eb3e:	801a      	strhne	r2, [r3, #0]
 800eb40:	601a      	streq	r2, [r3, #0]
 800eb42:	e6ef      	b.n	800e924 <__ssvfiscanf_r+0x4c>
 800eb44:	4621      	mov	r1, r4
 800eb46:	4630      	mov	r0, r6
 800eb48:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800eb4a:	4798      	blx	r3
 800eb4c:	2800      	cmp	r0, #0
 800eb4e:	d0b6      	beq.n	800eabe <__ssvfiscanf_r+0x1e6>
 800eb50:	e79c      	b.n	800ea8c <__ssvfiscanf_r+0x1b4>
 800eb52:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800eb54:	3201      	adds	r2, #1
 800eb56:	9245      	str	r2, [sp, #276]	; 0x114
 800eb58:	6862      	ldr	r2, [r4, #4]
 800eb5a:	3a01      	subs	r2, #1
 800eb5c:	2a00      	cmp	r2, #0
 800eb5e:	6062      	str	r2, [r4, #4]
 800eb60:	dd02      	ble.n	800eb68 <__ssvfiscanf_r+0x290>
 800eb62:	3301      	adds	r3, #1
 800eb64:	6023      	str	r3, [r4, #0]
 800eb66:	e7ad      	b.n	800eac4 <__ssvfiscanf_r+0x1ec>
 800eb68:	4621      	mov	r1, r4
 800eb6a:	4630      	mov	r0, r6
 800eb6c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800eb6e:	4798      	blx	r3
 800eb70:	2800      	cmp	r0, #0
 800eb72:	d0a7      	beq.n	800eac4 <__ssvfiscanf_r+0x1ec>
 800eb74:	e78a      	b.n	800ea8c <__ssvfiscanf_r+0x1b4>
 800eb76:	2b04      	cmp	r3, #4
 800eb78:	dc0e      	bgt.n	800eb98 <__ssvfiscanf_r+0x2c0>
 800eb7a:	466b      	mov	r3, sp
 800eb7c:	4622      	mov	r2, r4
 800eb7e:	4630      	mov	r0, r6
 800eb80:	a941      	add	r1, sp, #260	; 0x104
 800eb82:	f000 f87d 	bl	800ec80 <_scanf_i>
 800eb86:	e7ab      	b.n	800eae0 <__ssvfiscanf_r+0x208>
 800eb88:	0800e825 	.word	0x0800e825
 800eb8c:	0800e89f 	.word	0x0800e89f
 800eb90:	08010909 	.word	0x08010909
 800eb94:	08010c72 	.word	0x08010c72
 800eb98:	4b0b      	ldr	r3, [pc, #44]	; (800ebc8 <__ssvfiscanf_r+0x2f0>)
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	f43f aec2 	beq.w	800e924 <__ssvfiscanf_r+0x4c>
 800eba0:	466b      	mov	r3, sp
 800eba2:	4622      	mov	r2, r4
 800eba4:	4630      	mov	r0, r6
 800eba6:	a941      	add	r1, sp, #260	; 0x104
 800eba8:	f7fc fbc6 	bl	800b338 <_scanf_float>
 800ebac:	e798      	b.n	800eae0 <__ssvfiscanf_r+0x208>
 800ebae:	89a3      	ldrh	r3, [r4, #12]
 800ebb0:	f013 0f40 	tst.w	r3, #64	; 0x40
 800ebb4:	bf18      	it	ne
 800ebb6:	f04f 30ff 	movne.w	r0, #4294967295
 800ebba:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800ebbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ebc2:	9844      	ldr	r0, [sp, #272]	; 0x110
 800ebc4:	e7f9      	b.n	800ebba <__ssvfiscanf_r+0x2e2>
 800ebc6:	bf00      	nop
 800ebc8:	0800b339 	.word	0x0800b339

0800ebcc <_scanf_chars>:
 800ebcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ebd0:	4615      	mov	r5, r2
 800ebd2:	688a      	ldr	r2, [r1, #8]
 800ebd4:	4680      	mov	r8, r0
 800ebd6:	460c      	mov	r4, r1
 800ebd8:	b932      	cbnz	r2, 800ebe8 <_scanf_chars+0x1c>
 800ebda:	698a      	ldr	r2, [r1, #24]
 800ebdc:	2a00      	cmp	r2, #0
 800ebde:	bf0c      	ite	eq
 800ebe0:	2201      	moveq	r2, #1
 800ebe2:	f04f 32ff 	movne.w	r2, #4294967295
 800ebe6:	608a      	str	r2, [r1, #8]
 800ebe8:	2700      	movs	r7, #0
 800ebea:	6822      	ldr	r2, [r4, #0]
 800ebec:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ec7c <_scanf_chars+0xb0>
 800ebf0:	06d1      	lsls	r1, r2, #27
 800ebf2:	bf5f      	itttt	pl
 800ebf4:	681a      	ldrpl	r2, [r3, #0]
 800ebf6:	1d11      	addpl	r1, r2, #4
 800ebf8:	6019      	strpl	r1, [r3, #0]
 800ebfa:	6816      	ldrpl	r6, [r2, #0]
 800ebfc:	69a0      	ldr	r0, [r4, #24]
 800ebfe:	b188      	cbz	r0, 800ec24 <_scanf_chars+0x58>
 800ec00:	2801      	cmp	r0, #1
 800ec02:	d107      	bne.n	800ec14 <_scanf_chars+0x48>
 800ec04:	682b      	ldr	r3, [r5, #0]
 800ec06:	781a      	ldrb	r2, [r3, #0]
 800ec08:	6963      	ldr	r3, [r4, #20]
 800ec0a:	5c9b      	ldrb	r3, [r3, r2]
 800ec0c:	b953      	cbnz	r3, 800ec24 <_scanf_chars+0x58>
 800ec0e:	2f00      	cmp	r7, #0
 800ec10:	d031      	beq.n	800ec76 <_scanf_chars+0xaa>
 800ec12:	e022      	b.n	800ec5a <_scanf_chars+0x8e>
 800ec14:	2802      	cmp	r0, #2
 800ec16:	d120      	bne.n	800ec5a <_scanf_chars+0x8e>
 800ec18:	682b      	ldr	r3, [r5, #0]
 800ec1a:	781b      	ldrb	r3, [r3, #0]
 800ec1c:	f813 3009 	ldrb.w	r3, [r3, r9]
 800ec20:	071b      	lsls	r3, r3, #28
 800ec22:	d41a      	bmi.n	800ec5a <_scanf_chars+0x8e>
 800ec24:	6823      	ldr	r3, [r4, #0]
 800ec26:	3701      	adds	r7, #1
 800ec28:	06da      	lsls	r2, r3, #27
 800ec2a:	bf5e      	ittt	pl
 800ec2c:	682b      	ldrpl	r3, [r5, #0]
 800ec2e:	781b      	ldrbpl	r3, [r3, #0]
 800ec30:	f806 3b01 	strbpl.w	r3, [r6], #1
 800ec34:	682a      	ldr	r2, [r5, #0]
 800ec36:	686b      	ldr	r3, [r5, #4]
 800ec38:	3201      	adds	r2, #1
 800ec3a:	602a      	str	r2, [r5, #0]
 800ec3c:	68a2      	ldr	r2, [r4, #8]
 800ec3e:	3b01      	subs	r3, #1
 800ec40:	3a01      	subs	r2, #1
 800ec42:	606b      	str	r3, [r5, #4]
 800ec44:	60a2      	str	r2, [r4, #8]
 800ec46:	b142      	cbz	r2, 800ec5a <_scanf_chars+0x8e>
 800ec48:	2b00      	cmp	r3, #0
 800ec4a:	dcd7      	bgt.n	800ebfc <_scanf_chars+0x30>
 800ec4c:	4629      	mov	r1, r5
 800ec4e:	4640      	mov	r0, r8
 800ec50:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800ec54:	4798      	blx	r3
 800ec56:	2800      	cmp	r0, #0
 800ec58:	d0d0      	beq.n	800ebfc <_scanf_chars+0x30>
 800ec5a:	6823      	ldr	r3, [r4, #0]
 800ec5c:	f013 0310 	ands.w	r3, r3, #16
 800ec60:	d105      	bne.n	800ec6e <_scanf_chars+0xa2>
 800ec62:	68e2      	ldr	r2, [r4, #12]
 800ec64:	3201      	adds	r2, #1
 800ec66:	60e2      	str	r2, [r4, #12]
 800ec68:	69a2      	ldr	r2, [r4, #24]
 800ec6a:	b102      	cbz	r2, 800ec6e <_scanf_chars+0xa2>
 800ec6c:	7033      	strb	r3, [r6, #0]
 800ec6e:	2000      	movs	r0, #0
 800ec70:	6923      	ldr	r3, [r4, #16]
 800ec72:	443b      	add	r3, r7
 800ec74:	6123      	str	r3, [r4, #16]
 800ec76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ec7a:	bf00      	nop
 800ec7c:	08010909 	.word	0x08010909

0800ec80 <_scanf_i>:
 800ec80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec84:	460c      	mov	r4, r1
 800ec86:	4698      	mov	r8, r3
 800ec88:	4b75      	ldr	r3, [pc, #468]	; (800ee60 <_scanf_i+0x1e0>)
 800ec8a:	b087      	sub	sp, #28
 800ec8c:	4682      	mov	sl, r0
 800ec8e:	4616      	mov	r6, r2
 800ec90:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800ec94:	ab03      	add	r3, sp, #12
 800ec96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800ec9a:	4b72      	ldr	r3, [pc, #456]	; (800ee64 <_scanf_i+0x1e4>)
 800ec9c:	69a1      	ldr	r1, [r4, #24]
 800ec9e:	4a72      	ldr	r2, [pc, #456]	; (800ee68 <_scanf_i+0x1e8>)
 800eca0:	4627      	mov	r7, r4
 800eca2:	2903      	cmp	r1, #3
 800eca4:	bf18      	it	ne
 800eca6:	461a      	movne	r2, r3
 800eca8:	68a3      	ldr	r3, [r4, #8]
 800ecaa:	9201      	str	r2, [sp, #4]
 800ecac:	1e5a      	subs	r2, r3, #1
 800ecae:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800ecb2:	bf81      	itttt	hi
 800ecb4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800ecb8:	eb03 0905 	addhi.w	r9, r3, r5
 800ecbc:	f240 135d 	movwhi	r3, #349	; 0x15d
 800ecc0:	60a3      	strhi	r3, [r4, #8]
 800ecc2:	f857 3b1c 	ldr.w	r3, [r7], #28
 800ecc6:	bf98      	it	ls
 800ecc8:	f04f 0900 	movls.w	r9, #0
 800eccc:	463d      	mov	r5, r7
 800ecce:	f04f 0b00 	mov.w	fp, #0
 800ecd2:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 800ecd6:	6023      	str	r3, [r4, #0]
 800ecd8:	6831      	ldr	r1, [r6, #0]
 800ecda:	ab03      	add	r3, sp, #12
 800ecdc:	2202      	movs	r2, #2
 800ecde:	7809      	ldrb	r1, [r1, #0]
 800ece0:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 800ece4:	f7fe fe8c 	bl	800da00 <memchr>
 800ece8:	b328      	cbz	r0, 800ed36 <_scanf_i+0xb6>
 800ecea:	f1bb 0f01 	cmp.w	fp, #1
 800ecee:	d159      	bne.n	800eda4 <_scanf_i+0x124>
 800ecf0:	6862      	ldr	r2, [r4, #4]
 800ecf2:	b92a      	cbnz	r2, 800ed00 <_scanf_i+0x80>
 800ecf4:	2308      	movs	r3, #8
 800ecf6:	6822      	ldr	r2, [r4, #0]
 800ecf8:	6063      	str	r3, [r4, #4]
 800ecfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ecfe:	6022      	str	r2, [r4, #0]
 800ed00:	6822      	ldr	r2, [r4, #0]
 800ed02:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800ed06:	6022      	str	r2, [r4, #0]
 800ed08:	68a2      	ldr	r2, [r4, #8]
 800ed0a:	1e51      	subs	r1, r2, #1
 800ed0c:	60a1      	str	r1, [r4, #8]
 800ed0e:	b192      	cbz	r2, 800ed36 <_scanf_i+0xb6>
 800ed10:	6832      	ldr	r2, [r6, #0]
 800ed12:	1c51      	adds	r1, r2, #1
 800ed14:	6031      	str	r1, [r6, #0]
 800ed16:	7812      	ldrb	r2, [r2, #0]
 800ed18:	f805 2b01 	strb.w	r2, [r5], #1
 800ed1c:	6872      	ldr	r2, [r6, #4]
 800ed1e:	3a01      	subs	r2, #1
 800ed20:	2a00      	cmp	r2, #0
 800ed22:	6072      	str	r2, [r6, #4]
 800ed24:	dc07      	bgt.n	800ed36 <_scanf_i+0xb6>
 800ed26:	4631      	mov	r1, r6
 800ed28:	4650      	mov	r0, sl
 800ed2a:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 800ed2e:	4790      	blx	r2
 800ed30:	2800      	cmp	r0, #0
 800ed32:	f040 8085 	bne.w	800ee40 <_scanf_i+0x1c0>
 800ed36:	f10b 0b01 	add.w	fp, fp, #1
 800ed3a:	f1bb 0f03 	cmp.w	fp, #3
 800ed3e:	d1cb      	bne.n	800ecd8 <_scanf_i+0x58>
 800ed40:	6863      	ldr	r3, [r4, #4]
 800ed42:	b90b      	cbnz	r3, 800ed48 <_scanf_i+0xc8>
 800ed44:	230a      	movs	r3, #10
 800ed46:	6063      	str	r3, [r4, #4]
 800ed48:	6863      	ldr	r3, [r4, #4]
 800ed4a:	4948      	ldr	r1, [pc, #288]	; (800ee6c <_scanf_i+0x1ec>)
 800ed4c:	6960      	ldr	r0, [r4, #20]
 800ed4e:	1ac9      	subs	r1, r1, r3
 800ed50:	f000 f8b6 	bl	800eec0 <__sccl>
 800ed54:	f04f 0b00 	mov.w	fp, #0
 800ed58:	68a3      	ldr	r3, [r4, #8]
 800ed5a:	6822      	ldr	r2, [r4, #0]
 800ed5c:	2b00      	cmp	r3, #0
 800ed5e:	d03d      	beq.n	800eddc <_scanf_i+0x15c>
 800ed60:	6831      	ldr	r1, [r6, #0]
 800ed62:	6960      	ldr	r0, [r4, #20]
 800ed64:	f891 c000 	ldrb.w	ip, [r1]
 800ed68:	f810 000c 	ldrb.w	r0, [r0, ip]
 800ed6c:	2800      	cmp	r0, #0
 800ed6e:	d035      	beq.n	800eddc <_scanf_i+0x15c>
 800ed70:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800ed74:	d124      	bne.n	800edc0 <_scanf_i+0x140>
 800ed76:	0510      	lsls	r0, r2, #20
 800ed78:	d522      	bpl.n	800edc0 <_scanf_i+0x140>
 800ed7a:	f10b 0b01 	add.w	fp, fp, #1
 800ed7e:	f1b9 0f00 	cmp.w	r9, #0
 800ed82:	d003      	beq.n	800ed8c <_scanf_i+0x10c>
 800ed84:	3301      	adds	r3, #1
 800ed86:	f109 39ff 	add.w	r9, r9, #4294967295
 800ed8a:	60a3      	str	r3, [r4, #8]
 800ed8c:	6873      	ldr	r3, [r6, #4]
 800ed8e:	3b01      	subs	r3, #1
 800ed90:	2b00      	cmp	r3, #0
 800ed92:	6073      	str	r3, [r6, #4]
 800ed94:	dd1b      	ble.n	800edce <_scanf_i+0x14e>
 800ed96:	6833      	ldr	r3, [r6, #0]
 800ed98:	3301      	adds	r3, #1
 800ed9a:	6033      	str	r3, [r6, #0]
 800ed9c:	68a3      	ldr	r3, [r4, #8]
 800ed9e:	3b01      	subs	r3, #1
 800eda0:	60a3      	str	r3, [r4, #8]
 800eda2:	e7d9      	b.n	800ed58 <_scanf_i+0xd8>
 800eda4:	f1bb 0f02 	cmp.w	fp, #2
 800eda8:	d1ae      	bne.n	800ed08 <_scanf_i+0x88>
 800edaa:	6822      	ldr	r2, [r4, #0]
 800edac:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800edb0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800edb4:	d1bf      	bne.n	800ed36 <_scanf_i+0xb6>
 800edb6:	2310      	movs	r3, #16
 800edb8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800edbc:	6063      	str	r3, [r4, #4]
 800edbe:	e7a2      	b.n	800ed06 <_scanf_i+0x86>
 800edc0:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800edc4:	6022      	str	r2, [r4, #0]
 800edc6:	780b      	ldrb	r3, [r1, #0]
 800edc8:	f805 3b01 	strb.w	r3, [r5], #1
 800edcc:	e7de      	b.n	800ed8c <_scanf_i+0x10c>
 800edce:	4631      	mov	r1, r6
 800edd0:	4650      	mov	r0, sl
 800edd2:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800edd6:	4798      	blx	r3
 800edd8:	2800      	cmp	r0, #0
 800edda:	d0df      	beq.n	800ed9c <_scanf_i+0x11c>
 800eddc:	6823      	ldr	r3, [r4, #0]
 800edde:	05db      	lsls	r3, r3, #23
 800ede0:	d50d      	bpl.n	800edfe <_scanf_i+0x17e>
 800ede2:	42bd      	cmp	r5, r7
 800ede4:	d909      	bls.n	800edfa <_scanf_i+0x17a>
 800ede6:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800edea:	4632      	mov	r2, r6
 800edec:	4650      	mov	r0, sl
 800edee:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800edf2:	f105 39ff 	add.w	r9, r5, #4294967295
 800edf6:	4798      	blx	r3
 800edf8:	464d      	mov	r5, r9
 800edfa:	42bd      	cmp	r5, r7
 800edfc:	d02d      	beq.n	800ee5a <_scanf_i+0x1da>
 800edfe:	6822      	ldr	r2, [r4, #0]
 800ee00:	f012 0210 	ands.w	r2, r2, #16
 800ee04:	d113      	bne.n	800ee2e <_scanf_i+0x1ae>
 800ee06:	702a      	strb	r2, [r5, #0]
 800ee08:	4639      	mov	r1, r7
 800ee0a:	6863      	ldr	r3, [r4, #4]
 800ee0c:	4650      	mov	r0, sl
 800ee0e:	9e01      	ldr	r6, [sp, #4]
 800ee10:	47b0      	blx	r6
 800ee12:	6821      	ldr	r1, [r4, #0]
 800ee14:	f8d8 3000 	ldr.w	r3, [r8]
 800ee18:	f011 0f20 	tst.w	r1, #32
 800ee1c:	d013      	beq.n	800ee46 <_scanf_i+0x1c6>
 800ee1e:	1d1a      	adds	r2, r3, #4
 800ee20:	f8c8 2000 	str.w	r2, [r8]
 800ee24:	681b      	ldr	r3, [r3, #0]
 800ee26:	6018      	str	r0, [r3, #0]
 800ee28:	68e3      	ldr	r3, [r4, #12]
 800ee2a:	3301      	adds	r3, #1
 800ee2c:	60e3      	str	r3, [r4, #12]
 800ee2e:	2000      	movs	r0, #0
 800ee30:	1bed      	subs	r5, r5, r7
 800ee32:	44ab      	add	fp, r5
 800ee34:	6925      	ldr	r5, [r4, #16]
 800ee36:	445d      	add	r5, fp
 800ee38:	6125      	str	r5, [r4, #16]
 800ee3a:	b007      	add	sp, #28
 800ee3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee40:	f04f 0b00 	mov.w	fp, #0
 800ee44:	e7ca      	b.n	800eddc <_scanf_i+0x15c>
 800ee46:	1d1a      	adds	r2, r3, #4
 800ee48:	f8c8 2000 	str.w	r2, [r8]
 800ee4c:	681b      	ldr	r3, [r3, #0]
 800ee4e:	f011 0f01 	tst.w	r1, #1
 800ee52:	bf14      	ite	ne
 800ee54:	8018      	strhne	r0, [r3, #0]
 800ee56:	6018      	streq	r0, [r3, #0]
 800ee58:	e7e6      	b.n	800ee28 <_scanf_i+0x1a8>
 800ee5a:	2001      	movs	r0, #1
 800ee5c:	e7ed      	b.n	800ee3a <_scanf_i+0x1ba>
 800ee5e:	bf00      	nop
 800ee60:	0800ff20 	.word	0x0800ff20
 800ee64:	0800f03d 	.word	0x0800f03d
 800ee68:	0800c595 	.word	0x0800c595
 800ee6c:	08010c96 	.word	0x08010c96

0800ee70 <_read_r>:
 800ee70:	b538      	push	{r3, r4, r5, lr}
 800ee72:	4604      	mov	r4, r0
 800ee74:	4608      	mov	r0, r1
 800ee76:	4611      	mov	r1, r2
 800ee78:	2200      	movs	r2, #0
 800ee7a:	4d05      	ldr	r5, [pc, #20]	; (800ee90 <_read_r+0x20>)
 800ee7c:	602a      	str	r2, [r5, #0]
 800ee7e:	461a      	mov	r2, r3
 800ee80:	f7f6 f859 	bl	8004f36 <_read>
 800ee84:	1c43      	adds	r3, r0, #1
 800ee86:	d102      	bne.n	800ee8e <_read_r+0x1e>
 800ee88:	682b      	ldr	r3, [r5, #0]
 800ee8a:	b103      	cbz	r3, 800ee8e <_read_r+0x1e>
 800ee8c:	6023      	str	r3, [r4, #0]
 800ee8e:	bd38      	pop	{r3, r4, r5, pc}
 800ee90:	20001458 	.word	0x20001458

0800ee94 <nan>:
 800ee94:	2000      	movs	r0, #0
 800ee96:	4901      	ldr	r1, [pc, #4]	; (800ee9c <nan+0x8>)
 800ee98:	4770      	bx	lr
 800ee9a:	bf00      	nop
 800ee9c:	7ff80000 	.word	0x7ff80000

0800eea0 <_sbrk_r>:
 800eea0:	b538      	push	{r3, r4, r5, lr}
 800eea2:	2300      	movs	r3, #0
 800eea4:	4d05      	ldr	r5, [pc, #20]	; (800eebc <_sbrk_r+0x1c>)
 800eea6:	4604      	mov	r4, r0
 800eea8:	4608      	mov	r0, r1
 800eeaa:	602b      	str	r3, [r5, #0]
 800eeac:	f7f6 f8ac 	bl	8005008 <_sbrk>
 800eeb0:	1c43      	adds	r3, r0, #1
 800eeb2:	d102      	bne.n	800eeba <_sbrk_r+0x1a>
 800eeb4:	682b      	ldr	r3, [r5, #0]
 800eeb6:	b103      	cbz	r3, 800eeba <_sbrk_r+0x1a>
 800eeb8:	6023      	str	r3, [r4, #0]
 800eeba:	bd38      	pop	{r3, r4, r5, pc}
 800eebc:	20001458 	.word	0x20001458

0800eec0 <__sccl>:
 800eec0:	b570      	push	{r4, r5, r6, lr}
 800eec2:	780b      	ldrb	r3, [r1, #0]
 800eec4:	4604      	mov	r4, r0
 800eec6:	2b5e      	cmp	r3, #94	; 0x5e
 800eec8:	bf13      	iteet	ne
 800eeca:	2200      	movne	r2, #0
 800eecc:	2201      	moveq	r2, #1
 800eece:	784b      	ldrbeq	r3, [r1, #1]
 800eed0:	1c48      	addne	r0, r1, #1
 800eed2:	bf08      	it	eq
 800eed4:	1c88      	addeq	r0, r1, #2
 800eed6:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800eeda:	1e61      	subs	r1, r4, #1
 800eedc:	f801 2f01 	strb.w	r2, [r1, #1]!
 800eee0:	42a9      	cmp	r1, r5
 800eee2:	d1fb      	bne.n	800eedc <__sccl+0x1c>
 800eee4:	b90b      	cbnz	r3, 800eeea <__sccl+0x2a>
 800eee6:	3801      	subs	r0, #1
 800eee8:	bd70      	pop	{r4, r5, r6, pc}
 800eeea:	f082 0201 	eor.w	r2, r2, #1
 800eeee:	4605      	mov	r5, r0
 800eef0:	54e2      	strb	r2, [r4, r3]
 800eef2:	4628      	mov	r0, r5
 800eef4:	f810 1b01 	ldrb.w	r1, [r0], #1
 800eef8:	292d      	cmp	r1, #45	; 0x2d
 800eefa:	d006      	beq.n	800ef0a <__sccl+0x4a>
 800eefc:	295d      	cmp	r1, #93	; 0x5d
 800eefe:	d0f3      	beq.n	800eee8 <__sccl+0x28>
 800ef00:	b909      	cbnz	r1, 800ef06 <__sccl+0x46>
 800ef02:	4628      	mov	r0, r5
 800ef04:	e7f0      	b.n	800eee8 <__sccl+0x28>
 800ef06:	460b      	mov	r3, r1
 800ef08:	e7f1      	b.n	800eeee <__sccl+0x2e>
 800ef0a:	786e      	ldrb	r6, [r5, #1]
 800ef0c:	2e5d      	cmp	r6, #93	; 0x5d
 800ef0e:	d0fa      	beq.n	800ef06 <__sccl+0x46>
 800ef10:	42b3      	cmp	r3, r6
 800ef12:	dcf8      	bgt.n	800ef06 <__sccl+0x46>
 800ef14:	4619      	mov	r1, r3
 800ef16:	3502      	adds	r5, #2
 800ef18:	3101      	adds	r1, #1
 800ef1a:	428e      	cmp	r6, r1
 800ef1c:	5462      	strb	r2, [r4, r1]
 800ef1e:	dcfb      	bgt.n	800ef18 <__sccl+0x58>
 800ef20:	1af1      	subs	r1, r6, r3
 800ef22:	3901      	subs	r1, #1
 800ef24:	42b3      	cmp	r3, r6
 800ef26:	bfa8      	it	ge
 800ef28:	2100      	movge	r1, #0
 800ef2a:	1c58      	adds	r0, r3, #1
 800ef2c:	1843      	adds	r3, r0, r1
 800ef2e:	e7e0      	b.n	800eef2 <__sccl+0x32>

0800ef30 <strncmp>:
 800ef30:	4603      	mov	r3, r0
 800ef32:	b510      	push	{r4, lr}
 800ef34:	b172      	cbz	r2, 800ef54 <strncmp+0x24>
 800ef36:	3901      	subs	r1, #1
 800ef38:	1884      	adds	r4, r0, r2
 800ef3a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ef3e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ef42:	4290      	cmp	r0, r2
 800ef44:	d101      	bne.n	800ef4a <strncmp+0x1a>
 800ef46:	42a3      	cmp	r3, r4
 800ef48:	d101      	bne.n	800ef4e <strncmp+0x1e>
 800ef4a:	1a80      	subs	r0, r0, r2
 800ef4c:	bd10      	pop	{r4, pc}
 800ef4e:	2800      	cmp	r0, #0
 800ef50:	d1f3      	bne.n	800ef3a <strncmp+0xa>
 800ef52:	e7fa      	b.n	800ef4a <strncmp+0x1a>
 800ef54:	4610      	mov	r0, r2
 800ef56:	e7f9      	b.n	800ef4c <strncmp+0x1c>

0800ef58 <_strtoul_l.constprop.0>:
 800ef58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ef5c:	4686      	mov	lr, r0
 800ef5e:	460d      	mov	r5, r1
 800ef60:	4f35      	ldr	r7, [pc, #212]	; (800f038 <_strtoul_l.constprop.0+0xe0>)
 800ef62:	4628      	mov	r0, r5
 800ef64:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ef68:	5de6      	ldrb	r6, [r4, r7]
 800ef6a:	f016 0608 	ands.w	r6, r6, #8
 800ef6e:	d1f8      	bne.n	800ef62 <_strtoul_l.constprop.0+0xa>
 800ef70:	2c2d      	cmp	r4, #45	; 0x2d
 800ef72:	d12f      	bne.n	800efd4 <_strtoul_l.constprop.0+0x7c>
 800ef74:	2601      	movs	r6, #1
 800ef76:	782c      	ldrb	r4, [r5, #0]
 800ef78:	1c85      	adds	r5, r0, #2
 800ef7a:	2b00      	cmp	r3, #0
 800ef7c:	d057      	beq.n	800f02e <_strtoul_l.constprop.0+0xd6>
 800ef7e:	2b10      	cmp	r3, #16
 800ef80:	d109      	bne.n	800ef96 <_strtoul_l.constprop.0+0x3e>
 800ef82:	2c30      	cmp	r4, #48	; 0x30
 800ef84:	d107      	bne.n	800ef96 <_strtoul_l.constprop.0+0x3e>
 800ef86:	7828      	ldrb	r0, [r5, #0]
 800ef88:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800ef8c:	2858      	cmp	r0, #88	; 0x58
 800ef8e:	d149      	bne.n	800f024 <_strtoul_l.constprop.0+0xcc>
 800ef90:	2310      	movs	r3, #16
 800ef92:	786c      	ldrb	r4, [r5, #1]
 800ef94:	3502      	adds	r5, #2
 800ef96:	f04f 38ff 	mov.w	r8, #4294967295
 800ef9a:	fbb8 f8f3 	udiv	r8, r8, r3
 800ef9e:	2700      	movs	r7, #0
 800efa0:	fb03 f908 	mul.w	r9, r3, r8
 800efa4:	4638      	mov	r0, r7
 800efa6:	ea6f 0909 	mvn.w	r9, r9
 800efaa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800efae:	f1bc 0f09 	cmp.w	ip, #9
 800efb2:	d814      	bhi.n	800efde <_strtoul_l.constprop.0+0x86>
 800efb4:	4664      	mov	r4, ip
 800efb6:	42a3      	cmp	r3, r4
 800efb8:	dd22      	ble.n	800f000 <_strtoul_l.constprop.0+0xa8>
 800efba:	2f00      	cmp	r7, #0
 800efbc:	db1d      	blt.n	800effa <_strtoul_l.constprop.0+0xa2>
 800efbe:	4580      	cmp	r8, r0
 800efc0:	d31b      	bcc.n	800effa <_strtoul_l.constprop.0+0xa2>
 800efc2:	d101      	bne.n	800efc8 <_strtoul_l.constprop.0+0x70>
 800efc4:	45a1      	cmp	r9, r4
 800efc6:	db18      	blt.n	800effa <_strtoul_l.constprop.0+0xa2>
 800efc8:	2701      	movs	r7, #1
 800efca:	fb00 4003 	mla	r0, r0, r3, r4
 800efce:	f815 4b01 	ldrb.w	r4, [r5], #1
 800efd2:	e7ea      	b.n	800efaa <_strtoul_l.constprop.0+0x52>
 800efd4:	2c2b      	cmp	r4, #43	; 0x2b
 800efd6:	bf04      	itt	eq
 800efd8:	782c      	ldrbeq	r4, [r5, #0]
 800efda:	1c85      	addeq	r5, r0, #2
 800efdc:	e7cd      	b.n	800ef7a <_strtoul_l.constprop.0+0x22>
 800efde:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800efe2:	f1bc 0f19 	cmp.w	ip, #25
 800efe6:	d801      	bhi.n	800efec <_strtoul_l.constprop.0+0x94>
 800efe8:	3c37      	subs	r4, #55	; 0x37
 800efea:	e7e4      	b.n	800efb6 <_strtoul_l.constprop.0+0x5e>
 800efec:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800eff0:	f1bc 0f19 	cmp.w	ip, #25
 800eff4:	d804      	bhi.n	800f000 <_strtoul_l.constprop.0+0xa8>
 800eff6:	3c57      	subs	r4, #87	; 0x57
 800eff8:	e7dd      	b.n	800efb6 <_strtoul_l.constprop.0+0x5e>
 800effa:	f04f 37ff 	mov.w	r7, #4294967295
 800effe:	e7e6      	b.n	800efce <_strtoul_l.constprop.0+0x76>
 800f000:	2f00      	cmp	r7, #0
 800f002:	da07      	bge.n	800f014 <_strtoul_l.constprop.0+0xbc>
 800f004:	2322      	movs	r3, #34	; 0x22
 800f006:	f04f 30ff 	mov.w	r0, #4294967295
 800f00a:	f8ce 3000 	str.w	r3, [lr]
 800f00e:	b932      	cbnz	r2, 800f01e <_strtoul_l.constprop.0+0xc6>
 800f010:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f014:	b106      	cbz	r6, 800f018 <_strtoul_l.constprop.0+0xc0>
 800f016:	4240      	negs	r0, r0
 800f018:	2a00      	cmp	r2, #0
 800f01a:	d0f9      	beq.n	800f010 <_strtoul_l.constprop.0+0xb8>
 800f01c:	b107      	cbz	r7, 800f020 <_strtoul_l.constprop.0+0xc8>
 800f01e:	1e69      	subs	r1, r5, #1
 800f020:	6011      	str	r1, [r2, #0]
 800f022:	e7f5      	b.n	800f010 <_strtoul_l.constprop.0+0xb8>
 800f024:	2430      	movs	r4, #48	; 0x30
 800f026:	2b00      	cmp	r3, #0
 800f028:	d1b5      	bne.n	800ef96 <_strtoul_l.constprop.0+0x3e>
 800f02a:	2308      	movs	r3, #8
 800f02c:	e7b3      	b.n	800ef96 <_strtoul_l.constprop.0+0x3e>
 800f02e:	2c30      	cmp	r4, #48	; 0x30
 800f030:	d0a9      	beq.n	800ef86 <_strtoul_l.constprop.0+0x2e>
 800f032:	230a      	movs	r3, #10
 800f034:	e7af      	b.n	800ef96 <_strtoul_l.constprop.0+0x3e>
 800f036:	bf00      	nop
 800f038:	08010909 	.word	0x08010909

0800f03c <_strtoul_r>:
 800f03c:	f7ff bf8c 	b.w	800ef58 <_strtoul_l.constprop.0>

0800f040 <__submore>:
 800f040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f044:	460c      	mov	r4, r1
 800f046:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800f048:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f04c:	4299      	cmp	r1, r3
 800f04e:	d11b      	bne.n	800f088 <__submore+0x48>
 800f050:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800f054:	f7ff fa16 	bl	800e484 <_malloc_r>
 800f058:	b918      	cbnz	r0, 800f062 <__submore+0x22>
 800f05a:	f04f 30ff 	mov.w	r0, #4294967295
 800f05e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f062:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f066:	63a3      	str	r3, [r4, #56]	; 0x38
 800f068:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800f06c:	6360      	str	r0, [r4, #52]	; 0x34
 800f06e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800f072:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f076:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 800f07a:	7043      	strb	r3, [r0, #1]
 800f07c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f080:	7003      	strb	r3, [r0, #0]
 800f082:	6020      	str	r0, [r4, #0]
 800f084:	2000      	movs	r0, #0
 800f086:	e7ea      	b.n	800f05e <__submore+0x1e>
 800f088:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800f08a:	0077      	lsls	r7, r6, #1
 800f08c:	463a      	mov	r2, r7
 800f08e:	f000 fa29 	bl	800f4e4 <_realloc_r>
 800f092:	4605      	mov	r5, r0
 800f094:	2800      	cmp	r0, #0
 800f096:	d0e0      	beq.n	800f05a <__submore+0x1a>
 800f098:	eb00 0806 	add.w	r8, r0, r6
 800f09c:	4601      	mov	r1, r0
 800f09e:	4632      	mov	r2, r6
 800f0a0:	4640      	mov	r0, r8
 800f0a2:	f7fb fcd3 	bl	800aa4c <memcpy>
 800f0a6:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800f0aa:	f8c4 8000 	str.w	r8, [r4]
 800f0ae:	e7e9      	b.n	800f084 <__submore+0x44>

0800f0b0 <__ascii_wctomb>:
 800f0b0:	4603      	mov	r3, r0
 800f0b2:	4608      	mov	r0, r1
 800f0b4:	b141      	cbz	r1, 800f0c8 <__ascii_wctomb+0x18>
 800f0b6:	2aff      	cmp	r2, #255	; 0xff
 800f0b8:	d904      	bls.n	800f0c4 <__ascii_wctomb+0x14>
 800f0ba:	228a      	movs	r2, #138	; 0x8a
 800f0bc:	f04f 30ff 	mov.w	r0, #4294967295
 800f0c0:	601a      	str	r2, [r3, #0]
 800f0c2:	4770      	bx	lr
 800f0c4:	2001      	movs	r0, #1
 800f0c6:	700a      	strb	r2, [r1, #0]
 800f0c8:	4770      	bx	lr
	...

0800f0cc <__assert_func>:
 800f0cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f0ce:	4614      	mov	r4, r2
 800f0d0:	461a      	mov	r2, r3
 800f0d2:	4b09      	ldr	r3, [pc, #36]	; (800f0f8 <__assert_func+0x2c>)
 800f0d4:	4605      	mov	r5, r0
 800f0d6:	681b      	ldr	r3, [r3, #0]
 800f0d8:	68d8      	ldr	r0, [r3, #12]
 800f0da:	b14c      	cbz	r4, 800f0f0 <__assert_func+0x24>
 800f0dc:	4b07      	ldr	r3, [pc, #28]	; (800f0fc <__assert_func+0x30>)
 800f0de:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f0e2:	9100      	str	r1, [sp, #0]
 800f0e4:	462b      	mov	r3, r5
 800f0e6:	4906      	ldr	r1, [pc, #24]	; (800f100 <__assert_func+0x34>)
 800f0e8:	f000 f9a2 	bl	800f430 <fiprintf>
 800f0ec:	f000 fc40 	bl	800f970 <abort>
 800f0f0:	4b04      	ldr	r3, [pc, #16]	; (800f104 <__assert_func+0x38>)
 800f0f2:	461c      	mov	r4, r3
 800f0f4:	e7f3      	b.n	800f0de <__assert_func+0x12>
 800f0f6:	bf00      	nop
 800f0f8:	200001a0 	.word	0x200001a0
 800f0fc:	08010c98 	.word	0x08010c98
 800f100:	08010ca5 	.word	0x08010ca5
 800f104:	08010cd3 	.word	0x08010cd3

0800f108 <__sflush_r>:
 800f108:	898a      	ldrh	r2, [r1, #12]
 800f10a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f10c:	4605      	mov	r5, r0
 800f10e:	0710      	lsls	r0, r2, #28
 800f110:	460c      	mov	r4, r1
 800f112:	d457      	bmi.n	800f1c4 <__sflush_r+0xbc>
 800f114:	684b      	ldr	r3, [r1, #4]
 800f116:	2b00      	cmp	r3, #0
 800f118:	dc04      	bgt.n	800f124 <__sflush_r+0x1c>
 800f11a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f11c:	2b00      	cmp	r3, #0
 800f11e:	dc01      	bgt.n	800f124 <__sflush_r+0x1c>
 800f120:	2000      	movs	r0, #0
 800f122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f124:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f126:	2e00      	cmp	r6, #0
 800f128:	d0fa      	beq.n	800f120 <__sflush_r+0x18>
 800f12a:	2300      	movs	r3, #0
 800f12c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f130:	682f      	ldr	r7, [r5, #0]
 800f132:	602b      	str	r3, [r5, #0]
 800f134:	d032      	beq.n	800f19c <__sflush_r+0x94>
 800f136:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f138:	89a3      	ldrh	r3, [r4, #12]
 800f13a:	075a      	lsls	r2, r3, #29
 800f13c:	d505      	bpl.n	800f14a <__sflush_r+0x42>
 800f13e:	6863      	ldr	r3, [r4, #4]
 800f140:	1ac0      	subs	r0, r0, r3
 800f142:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f144:	b10b      	cbz	r3, 800f14a <__sflush_r+0x42>
 800f146:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f148:	1ac0      	subs	r0, r0, r3
 800f14a:	2300      	movs	r3, #0
 800f14c:	4602      	mov	r2, r0
 800f14e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f150:	4628      	mov	r0, r5
 800f152:	6a21      	ldr	r1, [r4, #32]
 800f154:	47b0      	blx	r6
 800f156:	1c43      	adds	r3, r0, #1
 800f158:	89a3      	ldrh	r3, [r4, #12]
 800f15a:	d106      	bne.n	800f16a <__sflush_r+0x62>
 800f15c:	6829      	ldr	r1, [r5, #0]
 800f15e:	291d      	cmp	r1, #29
 800f160:	d82c      	bhi.n	800f1bc <__sflush_r+0xb4>
 800f162:	4a29      	ldr	r2, [pc, #164]	; (800f208 <__sflush_r+0x100>)
 800f164:	40ca      	lsrs	r2, r1
 800f166:	07d6      	lsls	r6, r2, #31
 800f168:	d528      	bpl.n	800f1bc <__sflush_r+0xb4>
 800f16a:	2200      	movs	r2, #0
 800f16c:	6062      	str	r2, [r4, #4]
 800f16e:	6922      	ldr	r2, [r4, #16]
 800f170:	04d9      	lsls	r1, r3, #19
 800f172:	6022      	str	r2, [r4, #0]
 800f174:	d504      	bpl.n	800f180 <__sflush_r+0x78>
 800f176:	1c42      	adds	r2, r0, #1
 800f178:	d101      	bne.n	800f17e <__sflush_r+0x76>
 800f17a:	682b      	ldr	r3, [r5, #0]
 800f17c:	b903      	cbnz	r3, 800f180 <__sflush_r+0x78>
 800f17e:	6560      	str	r0, [r4, #84]	; 0x54
 800f180:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f182:	602f      	str	r7, [r5, #0]
 800f184:	2900      	cmp	r1, #0
 800f186:	d0cb      	beq.n	800f120 <__sflush_r+0x18>
 800f188:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f18c:	4299      	cmp	r1, r3
 800f18e:	d002      	beq.n	800f196 <__sflush_r+0x8e>
 800f190:	4628      	mov	r0, r5
 800f192:	f7ff f90f 	bl	800e3b4 <_free_r>
 800f196:	2000      	movs	r0, #0
 800f198:	6360      	str	r0, [r4, #52]	; 0x34
 800f19a:	e7c2      	b.n	800f122 <__sflush_r+0x1a>
 800f19c:	6a21      	ldr	r1, [r4, #32]
 800f19e:	2301      	movs	r3, #1
 800f1a0:	4628      	mov	r0, r5
 800f1a2:	47b0      	blx	r6
 800f1a4:	1c41      	adds	r1, r0, #1
 800f1a6:	d1c7      	bne.n	800f138 <__sflush_r+0x30>
 800f1a8:	682b      	ldr	r3, [r5, #0]
 800f1aa:	2b00      	cmp	r3, #0
 800f1ac:	d0c4      	beq.n	800f138 <__sflush_r+0x30>
 800f1ae:	2b1d      	cmp	r3, #29
 800f1b0:	d001      	beq.n	800f1b6 <__sflush_r+0xae>
 800f1b2:	2b16      	cmp	r3, #22
 800f1b4:	d101      	bne.n	800f1ba <__sflush_r+0xb2>
 800f1b6:	602f      	str	r7, [r5, #0]
 800f1b8:	e7b2      	b.n	800f120 <__sflush_r+0x18>
 800f1ba:	89a3      	ldrh	r3, [r4, #12]
 800f1bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f1c0:	81a3      	strh	r3, [r4, #12]
 800f1c2:	e7ae      	b.n	800f122 <__sflush_r+0x1a>
 800f1c4:	690f      	ldr	r7, [r1, #16]
 800f1c6:	2f00      	cmp	r7, #0
 800f1c8:	d0aa      	beq.n	800f120 <__sflush_r+0x18>
 800f1ca:	0793      	lsls	r3, r2, #30
 800f1cc:	bf18      	it	ne
 800f1ce:	2300      	movne	r3, #0
 800f1d0:	680e      	ldr	r6, [r1, #0]
 800f1d2:	bf08      	it	eq
 800f1d4:	694b      	ldreq	r3, [r1, #20]
 800f1d6:	1bf6      	subs	r6, r6, r7
 800f1d8:	600f      	str	r7, [r1, #0]
 800f1da:	608b      	str	r3, [r1, #8]
 800f1dc:	2e00      	cmp	r6, #0
 800f1de:	dd9f      	ble.n	800f120 <__sflush_r+0x18>
 800f1e0:	4633      	mov	r3, r6
 800f1e2:	463a      	mov	r2, r7
 800f1e4:	4628      	mov	r0, r5
 800f1e6:	6a21      	ldr	r1, [r4, #32]
 800f1e8:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800f1ec:	47e0      	blx	ip
 800f1ee:	2800      	cmp	r0, #0
 800f1f0:	dc06      	bgt.n	800f200 <__sflush_r+0xf8>
 800f1f2:	89a3      	ldrh	r3, [r4, #12]
 800f1f4:	f04f 30ff 	mov.w	r0, #4294967295
 800f1f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f1fc:	81a3      	strh	r3, [r4, #12]
 800f1fe:	e790      	b.n	800f122 <__sflush_r+0x1a>
 800f200:	4407      	add	r7, r0
 800f202:	1a36      	subs	r6, r6, r0
 800f204:	e7ea      	b.n	800f1dc <__sflush_r+0xd4>
 800f206:	bf00      	nop
 800f208:	20400001 	.word	0x20400001

0800f20c <_fflush_r>:
 800f20c:	b538      	push	{r3, r4, r5, lr}
 800f20e:	690b      	ldr	r3, [r1, #16]
 800f210:	4605      	mov	r5, r0
 800f212:	460c      	mov	r4, r1
 800f214:	b913      	cbnz	r3, 800f21c <_fflush_r+0x10>
 800f216:	2500      	movs	r5, #0
 800f218:	4628      	mov	r0, r5
 800f21a:	bd38      	pop	{r3, r4, r5, pc}
 800f21c:	b118      	cbz	r0, 800f226 <_fflush_r+0x1a>
 800f21e:	6983      	ldr	r3, [r0, #24]
 800f220:	b90b      	cbnz	r3, 800f226 <_fflush_r+0x1a>
 800f222:	f000 f887 	bl	800f334 <__sinit>
 800f226:	4b14      	ldr	r3, [pc, #80]	; (800f278 <_fflush_r+0x6c>)
 800f228:	429c      	cmp	r4, r3
 800f22a:	d11b      	bne.n	800f264 <_fflush_r+0x58>
 800f22c:	686c      	ldr	r4, [r5, #4]
 800f22e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f232:	2b00      	cmp	r3, #0
 800f234:	d0ef      	beq.n	800f216 <_fflush_r+0xa>
 800f236:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f238:	07d0      	lsls	r0, r2, #31
 800f23a:	d404      	bmi.n	800f246 <_fflush_r+0x3a>
 800f23c:	0599      	lsls	r1, r3, #22
 800f23e:	d402      	bmi.n	800f246 <_fflush_r+0x3a>
 800f240:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f242:	f000 f927 	bl	800f494 <__retarget_lock_acquire_recursive>
 800f246:	4628      	mov	r0, r5
 800f248:	4621      	mov	r1, r4
 800f24a:	f7ff ff5d 	bl	800f108 <__sflush_r>
 800f24e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f250:	4605      	mov	r5, r0
 800f252:	07da      	lsls	r2, r3, #31
 800f254:	d4e0      	bmi.n	800f218 <_fflush_r+0xc>
 800f256:	89a3      	ldrh	r3, [r4, #12]
 800f258:	059b      	lsls	r3, r3, #22
 800f25a:	d4dd      	bmi.n	800f218 <_fflush_r+0xc>
 800f25c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f25e:	f000 f91a 	bl	800f496 <__retarget_lock_release_recursive>
 800f262:	e7d9      	b.n	800f218 <_fflush_r+0xc>
 800f264:	4b05      	ldr	r3, [pc, #20]	; (800f27c <_fflush_r+0x70>)
 800f266:	429c      	cmp	r4, r3
 800f268:	d101      	bne.n	800f26e <_fflush_r+0x62>
 800f26a:	68ac      	ldr	r4, [r5, #8]
 800f26c:	e7df      	b.n	800f22e <_fflush_r+0x22>
 800f26e:	4b04      	ldr	r3, [pc, #16]	; (800f280 <_fflush_r+0x74>)
 800f270:	429c      	cmp	r4, r3
 800f272:	bf08      	it	eq
 800f274:	68ec      	ldreq	r4, [r5, #12]
 800f276:	e7da      	b.n	800f22e <_fflush_r+0x22>
 800f278:	08010cf4 	.word	0x08010cf4
 800f27c:	08010d14 	.word	0x08010d14
 800f280:	08010cd4 	.word	0x08010cd4

0800f284 <std>:
 800f284:	2300      	movs	r3, #0
 800f286:	b510      	push	{r4, lr}
 800f288:	4604      	mov	r4, r0
 800f28a:	e9c0 3300 	strd	r3, r3, [r0]
 800f28e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f292:	6083      	str	r3, [r0, #8]
 800f294:	8181      	strh	r1, [r0, #12]
 800f296:	6643      	str	r3, [r0, #100]	; 0x64
 800f298:	81c2      	strh	r2, [r0, #14]
 800f29a:	6183      	str	r3, [r0, #24]
 800f29c:	4619      	mov	r1, r3
 800f29e:	2208      	movs	r2, #8
 800f2a0:	305c      	adds	r0, #92	; 0x5c
 800f2a2:	f7fb fbe1 	bl	800aa68 <memset>
 800f2a6:	4b05      	ldr	r3, [pc, #20]	; (800f2bc <std+0x38>)
 800f2a8:	6224      	str	r4, [r4, #32]
 800f2aa:	6263      	str	r3, [r4, #36]	; 0x24
 800f2ac:	4b04      	ldr	r3, [pc, #16]	; (800f2c0 <std+0x3c>)
 800f2ae:	62a3      	str	r3, [r4, #40]	; 0x28
 800f2b0:	4b04      	ldr	r3, [pc, #16]	; (800f2c4 <std+0x40>)
 800f2b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f2b4:	4b04      	ldr	r3, [pc, #16]	; (800f2c8 <std+0x44>)
 800f2b6:	6323      	str	r3, [r4, #48]	; 0x30
 800f2b8:	bd10      	pop	{r4, pc}
 800f2ba:	bf00      	nop
 800f2bc:	0800b7f1 	.word	0x0800b7f1
 800f2c0:	0800b817 	.word	0x0800b817
 800f2c4:	0800b84f 	.word	0x0800b84f
 800f2c8:	0800b873 	.word	0x0800b873

0800f2cc <_cleanup_r>:
 800f2cc:	4901      	ldr	r1, [pc, #4]	; (800f2d4 <_cleanup_r+0x8>)
 800f2ce:	f000 b8c1 	b.w	800f454 <_fwalk_reent>
 800f2d2:	bf00      	nop
 800f2d4:	0800f20d 	.word	0x0800f20d

0800f2d8 <__sfmoreglue>:
 800f2d8:	2268      	movs	r2, #104	; 0x68
 800f2da:	b570      	push	{r4, r5, r6, lr}
 800f2dc:	1e4d      	subs	r5, r1, #1
 800f2de:	4355      	muls	r5, r2
 800f2e0:	460e      	mov	r6, r1
 800f2e2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f2e6:	f7ff f8cd 	bl	800e484 <_malloc_r>
 800f2ea:	4604      	mov	r4, r0
 800f2ec:	b140      	cbz	r0, 800f300 <__sfmoreglue+0x28>
 800f2ee:	2100      	movs	r1, #0
 800f2f0:	e9c0 1600 	strd	r1, r6, [r0]
 800f2f4:	300c      	adds	r0, #12
 800f2f6:	60a0      	str	r0, [r4, #8]
 800f2f8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f2fc:	f7fb fbb4 	bl	800aa68 <memset>
 800f300:	4620      	mov	r0, r4
 800f302:	bd70      	pop	{r4, r5, r6, pc}

0800f304 <__sfp_lock_acquire>:
 800f304:	4801      	ldr	r0, [pc, #4]	; (800f30c <__sfp_lock_acquire+0x8>)
 800f306:	f000 b8c5 	b.w	800f494 <__retarget_lock_acquire_recursive>
 800f30a:	bf00      	nop
 800f30c:	2000145d 	.word	0x2000145d

0800f310 <__sfp_lock_release>:
 800f310:	4801      	ldr	r0, [pc, #4]	; (800f318 <__sfp_lock_release+0x8>)
 800f312:	f000 b8c0 	b.w	800f496 <__retarget_lock_release_recursive>
 800f316:	bf00      	nop
 800f318:	2000145d 	.word	0x2000145d

0800f31c <__sinit_lock_acquire>:
 800f31c:	4801      	ldr	r0, [pc, #4]	; (800f324 <__sinit_lock_acquire+0x8>)
 800f31e:	f000 b8b9 	b.w	800f494 <__retarget_lock_acquire_recursive>
 800f322:	bf00      	nop
 800f324:	2000145e 	.word	0x2000145e

0800f328 <__sinit_lock_release>:
 800f328:	4801      	ldr	r0, [pc, #4]	; (800f330 <__sinit_lock_release+0x8>)
 800f32a:	f000 b8b4 	b.w	800f496 <__retarget_lock_release_recursive>
 800f32e:	bf00      	nop
 800f330:	2000145e 	.word	0x2000145e

0800f334 <__sinit>:
 800f334:	b510      	push	{r4, lr}
 800f336:	4604      	mov	r4, r0
 800f338:	f7ff fff0 	bl	800f31c <__sinit_lock_acquire>
 800f33c:	69a3      	ldr	r3, [r4, #24]
 800f33e:	b11b      	cbz	r3, 800f348 <__sinit+0x14>
 800f340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f344:	f7ff bff0 	b.w	800f328 <__sinit_lock_release>
 800f348:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f34c:	6523      	str	r3, [r4, #80]	; 0x50
 800f34e:	4b13      	ldr	r3, [pc, #76]	; (800f39c <__sinit+0x68>)
 800f350:	4a13      	ldr	r2, [pc, #76]	; (800f3a0 <__sinit+0x6c>)
 800f352:	681b      	ldr	r3, [r3, #0]
 800f354:	62a2      	str	r2, [r4, #40]	; 0x28
 800f356:	42a3      	cmp	r3, r4
 800f358:	bf08      	it	eq
 800f35a:	2301      	moveq	r3, #1
 800f35c:	4620      	mov	r0, r4
 800f35e:	bf08      	it	eq
 800f360:	61a3      	streq	r3, [r4, #24]
 800f362:	f000 f81f 	bl	800f3a4 <__sfp>
 800f366:	6060      	str	r0, [r4, #4]
 800f368:	4620      	mov	r0, r4
 800f36a:	f000 f81b 	bl	800f3a4 <__sfp>
 800f36e:	60a0      	str	r0, [r4, #8]
 800f370:	4620      	mov	r0, r4
 800f372:	f000 f817 	bl	800f3a4 <__sfp>
 800f376:	2200      	movs	r2, #0
 800f378:	2104      	movs	r1, #4
 800f37a:	60e0      	str	r0, [r4, #12]
 800f37c:	6860      	ldr	r0, [r4, #4]
 800f37e:	f7ff ff81 	bl	800f284 <std>
 800f382:	2201      	movs	r2, #1
 800f384:	2109      	movs	r1, #9
 800f386:	68a0      	ldr	r0, [r4, #8]
 800f388:	f7ff ff7c 	bl	800f284 <std>
 800f38c:	2202      	movs	r2, #2
 800f38e:	2112      	movs	r1, #18
 800f390:	68e0      	ldr	r0, [r4, #12]
 800f392:	f7ff ff77 	bl	800f284 <std>
 800f396:	2301      	movs	r3, #1
 800f398:	61a3      	str	r3, [r4, #24]
 800f39a:	e7d1      	b.n	800f340 <__sinit+0xc>
 800f39c:	08010878 	.word	0x08010878
 800f3a0:	0800f2cd 	.word	0x0800f2cd

0800f3a4 <__sfp>:
 800f3a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f3a6:	4607      	mov	r7, r0
 800f3a8:	f7ff ffac 	bl	800f304 <__sfp_lock_acquire>
 800f3ac:	4b1e      	ldr	r3, [pc, #120]	; (800f428 <__sfp+0x84>)
 800f3ae:	681e      	ldr	r6, [r3, #0]
 800f3b0:	69b3      	ldr	r3, [r6, #24]
 800f3b2:	b913      	cbnz	r3, 800f3ba <__sfp+0x16>
 800f3b4:	4630      	mov	r0, r6
 800f3b6:	f7ff ffbd 	bl	800f334 <__sinit>
 800f3ba:	3648      	adds	r6, #72	; 0x48
 800f3bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f3c0:	3b01      	subs	r3, #1
 800f3c2:	d503      	bpl.n	800f3cc <__sfp+0x28>
 800f3c4:	6833      	ldr	r3, [r6, #0]
 800f3c6:	b30b      	cbz	r3, 800f40c <__sfp+0x68>
 800f3c8:	6836      	ldr	r6, [r6, #0]
 800f3ca:	e7f7      	b.n	800f3bc <__sfp+0x18>
 800f3cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f3d0:	b9d5      	cbnz	r5, 800f408 <__sfp+0x64>
 800f3d2:	4b16      	ldr	r3, [pc, #88]	; (800f42c <__sfp+0x88>)
 800f3d4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f3d8:	60e3      	str	r3, [r4, #12]
 800f3da:	6665      	str	r5, [r4, #100]	; 0x64
 800f3dc:	f000 f859 	bl	800f492 <__retarget_lock_init_recursive>
 800f3e0:	f7ff ff96 	bl	800f310 <__sfp_lock_release>
 800f3e4:	2208      	movs	r2, #8
 800f3e6:	4629      	mov	r1, r5
 800f3e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f3ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f3f0:	6025      	str	r5, [r4, #0]
 800f3f2:	61a5      	str	r5, [r4, #24]
 800f3f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f3f8:	f7fb fb36 	bl	800aa68 <memset>
 800f3fc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f400:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f404:	4620      	mov	r0, r4
 800f406:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f408:	3468      	adds	r4, #104	; 0x68
 800f40a:	e7d9      	b.n	800f3c0 <__sfp+0x1c>
 800f40c:	2104      	movs	r1, #4
 800f40e:	4638      	mov	r0, r7
 800f410:	f7ff ff62 	bl	800f2d8 <__sfmoreglue>
 800f414:	4604      	mov	r4, r0
 800f416:	6030      	str	r0, [r6, #0]
 800f418:	2800      	cmp	r0, #0
 800f41a:	d1d5      	bne.n	800f3c8 <__sfp+0x24>
 800f41c:	f7ff ff78 	bl	800f310 <__sfp_lock_release>
 800f420:	230c      	movs	r3, #12
 800f422:	603b      	str	r3, [r7, #0]
 800f424:	e7ee      	b.n	800f404 <__sfp+0x60>
 800f426:	bf00      	nop
 800f428:	08010878 	.word	0x08010878
 800f42c:	ffff0001 	.word	0xffff0001

0800f430 <fiprintf>:
 800f430:	b40e      	push	{r1, r2, r3}
 800f432:	b503      	push	{r0, r1, lr}
 800f434:	4601      	mov	r1, r0
 800f436:	ab03      	add	r3, sp, #12
 800f438:	4805      	ldr	r0, [pc, #20]	; (800f450 <fiprintf+0x20>)
 800f43a:	f853 2b04 	ldr.w	r2, [r3], #4
 800f43e:	6800      	ldr	r0, [r0, #0]
 800f440:	9301      	str	r3, [sp, #4]
 800f442:	f000 f8a5 	bl	800f590 <_vfiprintf_r>
 800f446:	b002      	add	sp, #8
 800f448:	f85d eb04 	ldr.w	lr, [sp], #4
 800f44c:	b003      	add	sp, #12
 800f44e:	4770      	bx	lr
 800f450:	200001a0 	.word	0x200001a0

0800f454 <_fwalk_reent>:
 800f454:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f458:	4606      	mov	r6, r0
 800f45a:	4688      	mov	r8, r1
 800f45c:	2700      	movs	r7, #0
 800f45e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f462:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f466:	f1b9 0901 	subs.w	r9, r9, #1
 800f46a:	d505      	bpl.n	800f478 <_fwalk_reent+0x24>
 800f46c:	6824      	ldr	r4, [r4, #0]
 800f46e:	2c00      	cmp	r4, #0
 800f470:	d1f7      	bne.n	800f462 <_fwalk_reent+0xe>
 800f472:	4638      	mov	r0, r7
 800f474:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f478:	89ab      	ldrh	r3, [r5, #12]
 800f47a:	2b01      	cmp	r3, #1
 800f47c:	d907      	bls.n	800f48e <_fwalk_reent+0x3a>
 800f47e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f482:	3301      	adds	r3, #1
 800f484:	d003      	beq.n	800f48e <_fwalk_reent+0x3a>
 800f486:	4629      	mov	r1, r5
 800f488:	4630      	mov	r0, r6
 800f48a:	47c0      	blx	r8
 800f48c:	4307      	orrs	r7, r0
 800f48e:	3568      	adds	r5, #104	; 0x68
 800f490:	e7e9      	b.n	800f466 <_fwalk_reent+0x12>

0800f492 <__retarget_lock_init_recursive>:
 800f492:	4770      	bx	lr

0800f494 <__retarget_lock_acquire_recursive>:
 800f494:	4770      	bx	lr

0800f496 <__retarget_lock_release_recursive>:
 800f496:	4770      	bx	lr

0800f498 <memmove>:
 800f498:	4288      	cmp	r0, r1
 800f49a:	b510      	push	{r4, lr}
 800f49c:	eb01 0402 	add.w	r4, r1, r2
 800f4a0:	d902      	bls.n	800f4a8 <memmove+0x10>
 800f4a2:	4284      	cmp	r4, r0
 800f4a4:	4623      	mov	r3, r4
 800f4a6:	d807      	bhi.n	800f4b8 <memmove+0x20>
 800f4a8:	1e43      	subs	r3, r0, #1
 800f4aa:	42a1      	cmp	r1, r4
 800f4ac:	d008      	beq.n	800f4c0 <memmove+0x28>
 800f4ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f4b2:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f4b6:	e7f8      	b.n	800f4aa <memmove+0x12>
 800f4b8:	4601      	mov	r1, r0
 800f4ba:	4402      	add	r2, r0
 800f4bc:	428a      	cmp	r2, r1
 800f4be:	d100      	bne.n	800f4c2 <memmove+0x2a>
 800f4c0:	bd10      	pop	{r4, pc}
 800f4c2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f4c6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f4ca:	e7f7      	b.n	800f4bc <memmove+0x24>

0800f4cc <__malloc_lock>:
 800f4cc:	4801      	ldr	r0, [pc, #4]	; (800f4d4 <__malloc_lock+0x8>)
 800f4ce:	f7ff bfe1 	b.w	800f494 <__retarget_lock_acquire_recursive>
 800f4d2:	bf00      	nop
 800f4d4:	2000145c 	.word	0x2000145c

0800f4d8 <__malloc_unlock>:
 800f4d8:	4801      	ldr	r0, [pc, #4]	; (800f4e0 <__malloc_unlock+0x8>)
 800f4da:	f7ff bfdc 	b.w	800f496 <__retarget_lock_release_recursive>
 800f4de:	bf00      	nop
 800f4e0:	2000145c 	.word	0x2000145c

0800f4e4 <_realloc_r>:
 800f4e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4e8:	4680      	mov	r8, r0
 800f4ea:	4614      	mov	r4, r2
 800f4ec:	460e      	mov	r6, r1
 800f4ee:	b921      	cbnz	r1, 800f4fa <_realloc_r+0x16>
 800f4f0:	4611      	mov	r1, r2
 800f4f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f4f6:	f7fe bfc5 	b.w	800e484 <_malloc_r>
 800f4fa:	b92a      	cbnz	r2, 800f508 <_realloc_r+0x24>
 800f4fc:	f7fe ff5a 	bl	800e3b4 <_free_r>
 800f500:	4625      	mov	r5, r4
 800f502:	4628      	mov	r0, r5
 800f504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f508:	f000 fa9e 	bl	800fa48 <_malloc_usable_size_r>
 800f50c:	4284      	cmp	r4, r0
 800f50e:	4607      	mov	r7, r0
 800f510:	d802      	bhi.n	800f518 <_realloc_r+0x34>
 800f512:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f516:	d812      	bhi.n	800f53e <_realloc_r+0x5a>
 800f518:	4621      	mov	r1, r4
 800f51a:	4640      	mov	r0, r8
 800f51c:	f7fe ffb2 	bl	800e484 <_malloc_r>
 800f520:	4605      	mov	r5, r0
 800f522:	2800      	cmp	r0, #0
 800f524:	d0ed      	beq.n	800f502 <_realloc_r+0x1e>
 800f526:	42bc      	cmp	r4, r7
 800f528:	4622      	mov	r2, r4
 800f52a:	4631      	mov	r1, r6
 800f52c:	bf28      	it	cs
 800f52e:	463a      	movcs	r2, r7
 800f530:	f7fb fa8c 	bl	800aa4c <memcpy>
 800f534:	4631      	mov	r1, r6
 800f536:	4640      	mov	r0, r8
 800f538:	f7fe ff3c 	bl	800e3b4 <_free_r>
 800f53c:	e7e1      	b.n	800f502 <_realloc_r+0x1e>
 800f53e:	4635      	mov	r5, r6
 800f540:	e7df      	b.n	800f502 <_realloc_r+0x1e>

0800f542 <__sfputc_r>:
 800f542:	6893      	ldr	r3, [r2, #8]
 800f544:	b410      	push	{r4}
 800f546:	3b01      	subs	r3, #1
 800f548:	2b00      	cmp	r3, #0
 800f54a:	6093      	str	r3, [r2, #8]
 800f54c:	da07      	bge.n	800f55e <__sfputc_r+0x1c>
 800f54e:	6994      	ldr	r4, [r2, #24]
 800f550:	42a3      	cmp	r3, r4
 800f552:	db01      	blt.n	800f558 <__sfputc_r+0x16>
 800f554:	290a      	cmp	r1, #10
 800f556:	d102      	bne.n	800f55e <__sfputc_r+0x1c>
 800f558:	bc10      	pop	{r4}
 800f55a:	f000 b949 	b.w	800f7f0 <__swbuf_r>
 800f55e:	6813      	ldr	r3, [r2, #0]
 800f560:	1c58      	adds	r0, r3, #1
 800f562:	6010      	str	r0, [r2, #0]
 800f564:	7019      	strb	r1, [r3, #0]
 800f566:	4608      	mov	r0, r1
 800f568:	bc10      	pop	{r4}
 800f56a:	4770      	bx	lr

0800f56c <__sfputs_r>:
 800f56c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f56e:	4606      	mov	r6, r0
 800f570:	460f      	mov	r7, r1
 800f572:	4614      	mov	r4, r2
 800f574:	18d5      	adds	r5, r2, r3
 800f576:	42ac      	cmp	r4, r5
 800f578:	d101      	bne.n	800f57e <__sfputs_r+0x12>
 800f57a:	2000      	movs	r0, #0
 800f57c:	e007      	b.n	800f58e <__sfputs_r+0x22>
 800f57e:	463a      	mov	r2, r7
 800f580:	4630      	mov	r0, r6
 800f582:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f586:	f7ff ffdc 	bl	800f542 <__sfputc_r>
 800f58a:	1c43      	adds	r3, r0, #1
 800f58c:	d1f3      	bne.n	800f576 <__sfputs_r+0xa>
 800f58e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f590 <_vfiprintf_r>:
 800f590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f594:	460d      	mov	r5, r1
 800f596:	4614      	mov	r4, r2
 800f598:	4698      	mov	r8, r3
 800f59a:	4606      	mov	r6, r0
 800f59c:	b09d      	sub	sp, #116	; 0x74
 800f59e:	b118      	cbz	r0, 800f5a8 <_vfiprintf_r+0x18>
 800f5a0:	6983      	ldr	r3, [r0, #24]
 800f5a2:	b90b      	cbnz	r3, 800f5a8 <_vfiprintf_r+0x18>
 800f5a4:	f7ff fec6 	bl	800f334 <__sinit>
 800f5a8:	4b89      	ldr	r3, [pc, #548]	; (800f7d0 <_vfiprintf_r+0x240>)
 800f5aa:	429d      	cmp	r5, r3
 800f5ac:	d11b      	bne.n	800f5e6 <_vfiprintf_r+0x56>
 800f5ae:	6875      	ldr	r5, [r6, #4]
 800f5b0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f5b2:	07d9      	lsls	r1, r3, #31
 800f5b4:	d405      	bmi.n	800f5c2 <_vfiprintf_r+0x32>
 800f5b6:	89ab      	ldrh	r3, [r5, #12]
 800f5b8:	059a      	lsls	r2, r3, #22
 800f5ba:	d402      	bmi.n	800f5c2 <_vfiprintf_r+0x32>
 800f5bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f5be:	f7ff ff69 	bl	800f494 <__retarget_lock_acquire_recursive>
 800f5c2:	89ab      	ldrh	r3, [r5, #12]
 800f5c4:	071b      	lsls	r3, r3, #28
 800f5c6:	d501      	bpl.n	800f5cc <_vfiprintf_r+0x3c>
 800f5c8:	692b      	ldr	r3, [r5, #16]
 800f5ca:	b9eb      	cbnz	r3, 800f608 <_vfiprintf_r+0x78>
 800f5cc:	4629      	mov	r1, r5
 800f5ce:	4630      	mov	r0, r6
 800f5d0:	f000 f960 	bl	800f894 <__swsetup_r>
 800f5d4:	b1c0      	cbz	r0, 800f608 <_vfiprintf_r+0x78>
 800f5d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f5d8:	07dc      	lsls	r4, r3, #31
 800f5da:	d50e      	bpl.n	800f5fa <_vfiprintf_r+0x6a>
 800f5dc:	f04f 30ff 	mov.w	r0, #4294967295
 800f5e0:	b01d      	add	sp, #116	; 0x74
 800f5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5e6:	4b7b      	ldr	r3, [pc, #492]	; (800f7d4 <_vfiprintf_r+0x244>)
 800f5e8:	429d      	cmp	r5, r3
 800f5ea:	d101      	bne.n	800f5f0 <_vfiprintf_r+0x60>
 800f5ec:	68b5      	ldr	r5, [r6, #8]
 800f5ee:	e7df      	b.n	800f5b0 <_vfiprintf_r+0x20>
 800f5f0:	4b79      	ldr	r3, [pc, #484]	; (800f7d8 <_vfiprintf_r+0x248>)
 800f5f2:	429d      	cmp	r5, r3
 800f5f4:	bf08      	it	eq
 800f5f6:	68f5      	ldreq	r5, [r6, #12]
 800f5f8:	e7da      	b.n	800f5b0 <_vfiprintf_r+0x20>
 800f5fa:	89ab      	ldrh	r3, [r5, #12]
 800f5fc:	0598      	lsls	r0, r3, #22
 800f5fe:	d4ed      	bmi.n	800f5dc <_vfiprintf_r+0x4c>
 800f600:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f602:	f7ff ff48 	bl	800f496 <__retarget_lock_release_recursive>
 800f606:	e7e9      	b.n	800f5dc <_vfiprintf_r+0x4c>
 800f608:	2300      	movs	r3, #0
 800f60a:	9309      	str	r3, [sp, #36]	; 0x24
 800f60c:	2320      	movs	r3, #32
 800f60e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f612:	2330      	movs	r3, #48	; 0x30
 800f614:	f04f 0901 	mov.w	r9, #1
 800f618:	f8cd 800c 	str.w	r8, [sp, #12]
 800f61c:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 800f7dc <_vfiprintf_r+0x24c>
 800f620:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f624:	4623      	mov	r3, r4
 800f626:	469a      	mov	sl, r3
 800f628:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f62c:	b10a      	cbz	r2, 800f632 <_vfiprintf_r+0xa2>
 800f62e:	2a25      	cmp	r2, #37	; 0x25
 800f630:	d1f9      	bne.n	800f626 <_vfiprintf_r+0x96>
 800f632:	ebba 0b04 	subs.w	fp, sl, r4
 800f636:	d00b      	beq.n	800f650 <_vfiprintf_r+0xc0>
 800f638:	465b      	mov	r3, fp
 800f63a:	4622      	mov	r2, r4
 800f63c:	4629      	mov	r1, r5
 800f63e:	4630      	mov	r0, r6
 800f640:	f7ff ff94 	bl	800f56c <__sfputs_r>
 800f644:	3001      	adds	r0, #1
 800f646:	f000 80aa 	beq.w	800f79e <_vfiprintf_r+0x20e>
 800f64a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f64c:	445a      	add	r2, fp
 800f64e:	9209      	str	r2, [sp, #36]	; 0x24
 800f650:	f89a 3000 	ldrb.w	r3, [sl]
 800f654:	2b00      	cmp	r3, #0
 800f656:	f000 80a2 	beq.w	800f79e <_vfiprintf_r+0x20e>
 800f65a:	2300      	movs	r3, #0
 800f65c:	f04f 32ff 	mov.w	r2, #4294967295
 800f660:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f664:	f10a 0a01 	add.w	sl, sl, #1
 800f668:	9304      	str	r3, [sp, #16]
 800f66a:	9307      	str	r3, [sp, #28]
 800f66c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f670:	931a      	str	r3, [sp, #104]	; 0x68
 800f672:	4654      	mov	r4, sl
 800f674:	2205      	movs	r2, #5
 800f676:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f67a:	4858      	ldr	r0, [pc, #352]	; (800f7dc <_vfiprintf_r+0x24c>)
 800f67c:	f7fe f9c0 	bl	800da00 <memchr>
 800f680:	9a04      	ldr	r2, [sp, #16]
 800f682:	b9d8      	cbnz	r0, 800f6bc <_vfiprintf_r+0x12c>
 800f684:	06d1      	lsls	r1, r2, #27
 800f686:	bf44      	itt	mi
 800f688:	2320      	movmi	r3, #32
 800f68a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f68e:	0713      	lsls	r3, r2, #28
 800f690:	bf44      	itt	mi
 800f692:	232b      	movmi	r3, #43	; 0x2b
 800f694:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f698:	f89a 3000 	ldrb.w	r3, [sl]
 800f69c:	2b2a      	cmp	r3, #42	; 0x2a
 800f69e:	d015      	beq.n	800f6cc <_vfiprintf_r+0x13c>
 800f6a0:	4654      	mov	r4, sl
 800f6a2:	2000      	movs	r0, #0
 800f6a4:	f04f 0c0a 	mov.w	ip, #10
 800f6a8:	9a07      	ldr	r2, [sp, #28]
 800f6aa:	4621      	mov	r1, r4
 800f6ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f6b0:	3b30      	subs	r3, #48	; 0x30
 800f6b2:	2b09      	cmp	r3, #9
 800f6b4:	d94e      	bls.n	800f754 <_vfiprintf_r+0x1c4>
 800f6b6:	b1b0      	cbz	r0, 800f6e6 <_vfiprintf_r+0x156>
 800f6b8:	9207      	str	r2, [sp, #28]
 800f6ba:	e014      	b.n	800f6e6 <_vfiprintf_r+0x156>
 800f6bc:	eba0 0308 	sub.w	r3, r0, r8
 800f6c0:	fa09 f303 	lsl.w	r3, r9, r3
 800f6c4:	4313      	orrs	r3, r2
 800f6c6:	46a2      	mov	sl, r4
 800f6c8:	9304      	str	r3, [sp, #16]
 800f6ca:	e7d2      	b.n	800f672 <_vfiprintf_r+0xe2>
 800f6cc:	9b03      	ldr	r3, [sp, #12]
 800f6ce:	1d19      	adds	r1, r3, #4
 800f6d0:	681b      	ldr	r3, [r3, #0]
 800f6d2:	9103      	str	r1, [sp, #12]
 800f6d4:	2b00      	cmp	r3, #0
 800f6d6:	bfbb      	ittet	lt
 800f6d8:	425b      	neglt	r3, r3
 800f6da:	f042 0202 	orrlt.w	r2, r2, #2
 800f6de:	9307      	strge	r3, [sp, #28]
 800f6e0:	9307      	strlt	r3, [sp, #28]
 800f6e2:	bfb8      	it	lt
 800f6e4:	9204      	strlt	r2, [sp, #16]
 800f6e6:	7823      	ldrb	r3, [r4, #0]
 800f6e8:	2b2e      	cmp	r3, #46	; 0x2e
 800f6ea:	d10c      	bne.n	800f706 <_vfiprintf_r+0x176>
 800f6ec:	7863      	ldrb	r3, [r4, #1]
 800f6ee:	2b2a      	cmp	r3, #42	; 0x2a
 800f6f0:	d135      	bne.n	800f75e <_vfiprintf_r+0x1ce>
 800f6f2:	9b03      	ldr	r3, [sp, #12]
 800f6f4:	3402      	adds	r4, #2
 800f6f6:	1d1a      	adds	r2, r3, #4
 800f6f8:	681b      	ldr	r3, [r3, #0]
 800f6fa:	9203      	str	r2, [sp, #12]
 800f6fc:	2b00      	cmp	r3, #0
 800f6fe:	bfb8      	it	lt
 800f700:	f04f 33ff 	movlt.w	r3, #4294967295
 800f704:	9305      	str	r3, [sp, #20]
 800f706:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800f7e0 <_vfiprintf_r+0x250>
 800f70a:	2203      	movs	r2, #3
 800f70c:	4650      	mov	r0, sl
 800f70e:	7821      	ldrb	r1, [r4, #0]
 800f710:	f7fe f976 	bl	800da00 <memchr>
 800f714:	b140      	cbz	r0, 800f728 <_vfiprintf_r+0x198>
 800f716:	2340      	movs	r3, #64	; 0x40
 800f718:	eba0 000a 	sub.w	r0, r0, sl
 800f71c:	fa03 f000 	lsl.w	r0, r3, r0
 800f720:	9b04      	ldr	r3, [sp, #16]
 800f722:	3401      	adds	r4, #1
 800f724:	4303      	orrs	r3, r0
 800f726:	9304      	str	r3, [sp, #16]
 800f728:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f72c:	2206      	movs	r2, #6
 800f72e:	482d      	ldr	r0, [pc, #180]	; (800f7e4 <_vfiprintf_r+0x254>)
 800f730:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f734:	f7fe f964 	bl	800da00 <memchr>
 800f738:	2800      	cmp	r0, #0
 800f73a:	d03f      	beq.n	800f7bc <_vfiprintf_r+0x22c>
 800f73c:	4b2a      	ldr	r3, [pc, #168]	; (800f7e8 <_vfiprintf_r+0x258>)
 800f73e:	bb1b      	cbnz	r3, 800f788 <_vfiprintf_r+0x1f8>
 800f740:	9b03      	ldr	r3, [sp, #12]
 800f742:	3307      	adds	r3, #7
 800f744:	f023 0307 	bic.w	r3, r3, #7
 800f748:	3308      	adds	r3, #8
 800f74a:	9303      	str	r3, [sp, #12]
 800f74c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f74e:	443b      	add	r3, r7
 800f750:	9309      	str	r3, [sp, #36]	; 0x24
 800f752:	e767      	b.n	800f624 <_vfiprintf_r+0x94>
 800f754:	460c      	mov	r4, r1
 800f756:	2001      	movs	r0, #1
 800f758:	fb0c 3202 	mla	r2, ip, r2, r3
 800f75c:	e7a5      	b.n	800f6aa <_vfiprintf_r+0x11a>
 800f75e:	2300      	movs	r3, #0
 800f760:	f04f 0c0a 	mov.w	ip, #10
 800f764:	4619      	mov	r1, r3
 800f766:	3401      	adds	r4, #1
 800f768:	9305      	str	r3, [sp, #20]
 800f76a:	4620      	mov	r0, r4
 800f76c:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f770:	3a30      	subs	r2, #48	; 0x30
 800f772:	2a09      	cmp	r2, #9
 800f774:	d903      	bls.n	800f77e <_vfiprintf_r+0x1ee>
 800f776:	2b00      	cmp	r3, #0
 800f778:	d0c5      	beq.n	800f706 <_vfiprintf_r+0x176>
 800f77a:	9105      	str	r1, [sp, #20]
 800f77c:	e7c3      	b.n	800f706 <_vfiprintf_r+0x176>
 800f77e:	4604      	mov	r4, r0
 800f780:	2301      	movs	r3, #1
 800f782:	fb0c 2101 	mla	r1, ip, r1, r2
 800f786:	e7f0      	b.n	800f76a <_vfiprintf_r+0x1da>
 800f788:	ab03      	add	r3, sp, #12
 800f78a:	9300      	str	r3, [sp, #0]
 800f78c:	462a      	mov	r2, r5
 800f78e:	4630      	mov	r0, r6
 800f790:	4b16      	ldr	r3, [pc, #88]	; (800f7ec <_vfiprintf_r+0x25c>)
 800f792:	a904      	add	r1, sp, #16
 800f794:	f7fb fa0e 	bl	800abb4 <_printf_float>
 800f798:	4607      	mov	r7, r0
 800f79a:	1c78      	adds	r0, r7, #1
 800f79c:	d1d6      	bne.n	800f74c <_vfiprintf_r+0x1bc>
 800f79e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f7a0:	07d9      	lsls	r1, r3, #31
 800f7a2:	d405      	bmi.n	800f7b0 <_vfiprintf_r+0x220>
 800f7a4:	89ab      	ldrh	r3, [r5, #12]
 800f7a6:	059a      	lsls	r2, r3, #22
 800f7a8:	d402      	bmi.n	800f7b0 <_vfiprintf_r+0x220>
 800f7aa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f7ac:	f7ff fe73 	bl	800f496 <__retarget_lock_release_recursive>
 800f7b0:	89ab      	ldrh	r3, [r5, #12]
 800f7b2:	065b      	lsls	r3, r3, #25
 800f7b4:	f53f af12 	bmi.w	800f5dc <_vfiprintf_r+0x4c>
 800f7b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f7ba:	e711      	b.n	800f5e0 <_vfiprintf_r+0x50>
 800f7bc:	ab03      	add	r3, sp, #12
 800f7be:	9300      	str	r3, [sp, #0]
 800f7c0:	462a      	mov	r2, r5
 800f7c2:	4630      	mov	r0, r6
 800f7c4:	4b09      	ldr	r3, [pc, #36]	; (800f7ec <_vfiprintf_r+0x25c>)
 800f7c6:	a904      	add	r1, sp, #16
 800f7c8:	f7fb fc90 	bl	800b0ec <_printf_i>
 800f7cc:	e7e4      	b.n	800f798 <_vfiprintf_r+0x208>
 800f7ce:	bf00      	nop
 800f7d0:	08010cf4 	.word	0x08010cf4
 800f7d4:	08010d14 	.word	0x08010d14
 800f7d8:	08010cd4 	.word	0x08010cd4
 800f7dc:	08010c6c 	.word	0x08010c6c
 800f7e0:	08010c72 	.word	0x08010c72
 800f7e4:	08010c76 	.word	0x08010c76
 800f7e8:	0800abb5 	.word	0x0800abb5
 800f7ec:	0800f56d 	.word	0x0800f56d

0800f7f0 <__swbuf_r>:
 800f7f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f7f2:	460e      	mov	r6, r1
 800f7f4:	4614      	mov	r4, r2
 800f7f6:	4605      	mov	r5, r0
 800f7f8:	b118      	cbz	r0, 800f802 <__swbuf_r+0x12>
 800f7fa:	6983      	ldr	r3, [r0, #24]
 800f7fc:	b90b      	cbnz	r3, 800f802 <__swbuf_r+0x12>
 800f7fe:	f7ff fd99 	bl	800f334 <__sinit>
 800f802:	4b21      	ldr	r3, [pc, #132]	; (800f888 <__swbuf_r+0x98>)
 800f804:	429c      	cmp	r4, r3
 800f806:	d12b      	bne.n	800f860 <__swbuf_r+0x70>
 800f808:	686c      	ldr	r4, [r5, #4]
 800f80a:	69a3      	ldr	r3, [r4, #24]
 800f80c:	60a3      	str	r3, [r4, #8]
 800f80e:	89a3      	ldrh	r3, [r4, #12]
 800f810:	071a      	lsls	r2, r3, #28
 800f812:	d52f      	bpl.n	800f874 <__swbuf_r+0x84>
 800f814:	6923      	ldr	r3, [r4, #16]
 800f816:	b36b      	cbz	r3, 800f874 <__swbuf_r+0x84>
 800f818:	6923      	ldr	r3, [r4, #16]
 800f81a:	6820      	ldr	r0, [r4, #0]
 800f81c:	b2f6      	uxtb	r6, r6
 800f81e:	1ac0      	subs	r0, r0, r3
 800f820:	6963      	ldr	r3, [r4, #20]
 800f822:	4637      	mov	r7, r6
 800f824:	4283      	cmp	r3, r0
 800f826:	dc04      	bgt.n	800f832 <__swbuf_r+0x42>
 800f828:	4621      	mov	r1, r4
 800f82a:	4628      	mov	r0, r5
 800f82c:	f7ff fcee 	bl	800f20c <_fflush_r>
 800f830:	bb30      	cbnz	r0, 800f880 <__swbuf_r+0x90>
 800f832:	68a3      	ldr	r3, [r4, #8]
 800f834:	3001      	adds	r0, #1
 800f836:	3b01      	subs	r3, #1
 800f838:	60a3      	str	r3, [r4, #8]
 800f83a:	6823      	ldr	r3, [r4, #0]
 800f83c:	1c5a      	adds	r2, r3, #1
 800f83e:	6022      	str	r2, [r4, #0]
 800f840:	701e      	strb	r6, [r3, #0]
 800f842:	6963      	ldr	r3, [r4, #20]
 800f844:	4283      	cmp	r3, r0
 800f846:	d004      	beq.n	800f852 <__swbuf_r+0x62>
 800f848:	89a3      	ldrh	r3, [r4, #12]
 800f84a:	07db      	lsls	r3, r3, #31
 800f84c:	d506      	bpl.n	800f85c <__swbuf_r+0x6c>
 800f84e:	2e0a      	cmp	r6, #10
 800f850:	d104      	bne.n	800f85c <__swbuf_r+0x6c>
 800f852:	4621      	mov	r1, r4
 800f854:	4628      	mov	r0, r5
 800f856:	f7ff fcd9 	bl	800f20c <_fflush_r>
 800f85a:	b988      	cbnz	r0, 800f880 <__swbuf_r+0x90>
 800f85c:	4638      	mov	r0, r7
 800f85e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f860:	4b0a      	ldr	r3, [pc, #40]	; (800f88c <__swbuf_r+0x9c>)
 800f862:	429c      	cmp	r4, r3
 800f864:	d101      	bne.n	800f86a <__swbuf_r+0x7a>
 800f866:	68ac      	ldr	r4, [r5, #8]
 800f868:	e7cf      	b.n	800f80a <__swbuf_r+0x1a>
 800f86a:	4b09      	ldr	r3, [pc, #36]	; (800f890 <__swbuf_r+0xa0>)
 800f86c:	429c      	cmp	r4, r3
 800f86e:	bf08      	it	eq
 800f870:	68ec      	ldreq	r4, [r5, #12]
 800f872:	e7ca      	b.n	800f80a <__swbuf_r+0x1a>
 800f874:	4621      	mov	r1, r4
 800f876:	4628      	mov	r0, r5
 800f878:	f000 f80c 	bl	800f894 <__swsetup_r>
 800f87c:	2800      	cmp	r0, #0
 800f87e:	d0cb      	beq.n	800f818 <__swbuf_r+0x28>
 800f880:	f04f 37ff 	mov.w	r7, #4294967295
 800f884:	e7ea      	b.n	800f85c <__swbuf_r+0x6c>
 800f886:	bf00      	nop
 800f888:	08010cf4 	.word	0x08010cf4
 800f88c:	08010d14 	.word	0x08010d14
 800f890:	08010cd4 	.word	0x08010cd4

0800f894 <__swsetup_r>:
 800f894:	4b32      	ldr	r3, [pc, #200]	; (800f960 <__swsetup_r+0xcc>)
 800f896:	b570      	push	{r4, r5, r6, lr}
 800f898:	681d      	ldr	r5, [r3, #0]
 800f89a:	4606      	mov	r6, r0
 800f89c:	460c      	mov	r4, r1
 800f89e:	b125      	cbz	r5, 800f8aa <__swsetup_r+0x16>
 800f8a0:	69ab      	ldr	r3, [r5, #24]
 800f8a2:	b913      	cbnz	r3, 800f8aa <__swsetup_r+0x16>
 800f8a4:	4628      	mov	r0, r5
 800f8a6:	f7ff fd45 	bl	800f334 <__sinit>
 800f8aa:	4b2e      	ldr	r3, [pc, #184]	; (800f964 <__swsetup_r+0xd0>)
 800f8ac:	429c      	cmp	r4, r3
 800f8ae:	d10f      	bne.n	800f8d0 <__swsetup_r+0x3c>
 800f8b0:	686c      	ldr	r4, [r5, #4]
 800f8b2:	89a3      	ldrh	r3, [r4, #12]
 800f8b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f8b8:	0719      	lsls	r1, r3, #28
 800f8ba:	d42c      	bmi.n	800f916 <__swsetup_r+0x82>
 800f8bc:	06dd      	lsls	r5, r3, #27
 800f8be:	d411      	bmi.n	800f8e4 <__swsetup_r+0x50>
 800f8c0:	2309      	movs	r3, #9
 800f8c2:	6033      	str	r3, [r6, #0]
 800f8c4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f8c8:	f04f 30ff 	mov.w	r0, #4294967295
 800f8cc:	81a3      	strh	r3, [r4, #12]
 800f8ce:	e03e      	b.n	800f94e <__swsetup_r+0xba>
 800f8d0:	4b25      	ldr	r3, [pc, #148]	; (800f968 <__swsetup_r+0xd4>)
 800f8d2:	429c      	cmp	r4, r3
 800f8d4:	d101      	bne.n	800f8da <__swsetup_r+0x46>
 800f8d6:	68ac      	ldr	r4, [r5, #8]
 800f8d8:	e7eb      	b.n	800f8b2 <__swsetup_r+0x1e>
 800f8da:	4b24      	ldr	r3, [pc, #144]	; (800f96c <__swsetup_r+0xd8>)
 800f8dc:	429c      	cmp	r4, r3
 800f8de:	bf08      	it	eq
 800f8e0:	68ec      	ldreq	r4, [r5, #12]
 800f8e2:	e7e6      	b.n	800f8b2 <__swsetup_r+0x1e>
 800f8e4:	0758      	lsls	r0, r3, #29
 800f8e6:	d512      	bpl.n	800f90e <__swsetup_r+0x7a>
 800f8e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f8ea:	b141      	cbz	r1, 800f8fe <__swsetup_r+0x6a>
 800f8ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f8f0:	4299      	cmp	r1, r3
 800f8f2:	d002      	beq.n	800f8fa <__swsetup_r+0x66>
 800f8f4:	4630      	mov	r0, r6
 800f8f6:	f7fe fd5d 	bl	800e3b4 <_free_r>
 800f8fa:	2300      	movs	r3, #0
 800f8fc:	6363      	str	r3, [r4, #52]	; 0x34
 800f8fe:	89a3      	ldrh	r3, [r4, #12]
 800f900:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f904:	81a3      	strh	r3, [r4, #12]
 800f906:	2300      	movs	r3, #0
 800f908:	6063      	str	r3, [r4, #4]
 800f90a:	6923      	ldr	r3, [r4, #16]
 800f90c:	6023      	str	r3, [r4, #0]
 800f90e:	89a3      	ldrh	r3, [r4, #12]
 800f910:	f043 0308 	orr.w	r3, r3, #8
 800f914:	81a3      	strh	r3, [r4, #12]
 800f916:	6923      	ldr	r3, [r4, #16]
 800f918:	b94b      	cbnz	r3, 800f92e <__swsetup_r+0x9a>
 800f91a:	89a3      	ldrh	r3, [r4, #12]
 800f91c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f920:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f924:	d003      	beq.n	800f92e <__swsetup_r+0x9a>
 800f926:	4621      	mov	r1, r4
 800f928:	4630      	mov	r0, r6
 800f92a:	f000 f84d 	bl	800f9c8 <__smakebuf_r>
 800f92e:	89a0      	ldrh	r0, [r4, #12]
 800f930:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f934:	f010 0301 	ands.w	r3, r0, #1
 800f938:	d00a      	beq.n	800f950 <__swsetup_r+0xbc>
 800f93a:	2300      	movs	r3, #0
 800f93c:	60a3      	str	r3, [r4, #8]
 800f93e:	6963      	ldr	r3, [r4, #20]
 800f940:	425b      	negs	r3, r3
 800f942:	61a3      	str	r3, [r4, #24]
 800f944:	6923      	ldr	r3, [r4, #16]
 800f946:	b943      	cbnz	r3, 800f95a <__swsetup_r+0xc6>
 800f948:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f94c:	d1ba      	bne.n	800f8c4 <__swsetup_r+0x30>
 800f94e:	bd70      	pop	{r4, r5, r6, pc}
 800f950:	0781      	lsls	r1, r0, #30
 800f952:	bf58      	it	pl
 800f954:	6963      	ldrpl	r3, [r4, #20]
 800f956:	60a3      	str	r3, [r4, #8]
 800f958:	e7f4      	b.n	800f944 <__swsetup_r+0xb0>
 800f95a:	2000      	movs	r0, #0
 800f95c:	e7f7      	b.n	800f94e <__swsetup_r+0xba>
 800f95e:	bf00      	nop
 800f960:	200001a0 	.word	0x200001a0
 800f964:	08010cf4 	.word	0x08010cf4
 800f968:	08010d14 	.word	0x08010d14
 800f96c:	08010cd4 	.word	0x08010cd4

0800f970 <abort>:
 800f970:	2006      	movs	r0, #6
 800f972:	b508      	push	{r3, lr}
 800f974:	f000 f898 	bl	800faa8 <raise>
 800f978:	2001      	movs	r0, #1
 800f97a:	f7f5 fad2 	bl	8004f22 <_exit>

0800f97e <__swhatbuf_r>:
 800f97e:	b570      	push	{r4, r5, r6, lr}
 800f980:	460e      	mov	r6, r1
 800f982:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f986:	4614      	mov	r4, r2
 800f988:	2900      	cmp	r1, #0
 800f98a:	461d      	mov	r5, r3
 800f98c:	b096      	sub	sp, #88	; 0x58
 800f98e:	da08      	bge.n	800f9a2 <__swhatbuf_r+0x24>
 800f990:	2200      	movs	r2, #0
 800f992:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800f996:	602a      	str	r2, [r5, #0]
 800f998:	061a      	lsls	r2, r3, #24
 800f99a:	d410      	bmi.n	800f9be <__swhatbuf_r+0x40>
 800f99c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f9a0:	e00e      	b.n	800f9c0 <__swhatbuf_r+0x42>
 800f9a2:	466a      	mov	r2, sp
 800f9a4:	f000 f89c 	bl	800fae0 <_fstat_r>
 800f9a8:	2800      	cmp	r0, #0
 800f9aa:	dbf1      	blt.n	800f990 <__swhatbuf_r+0x12>
 800f9ac:	9a01      	ldr	r2, [sp, #4]
 800f9ae:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800f9b2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800f9b6:	425a      	negs	r2, r3
 800f9b8:	415a      	adcs	r2, r3
 800f9ba:	602a      	str	r2, [r5, #0]
 800f9bc:	e7ee      	b.n	800f99c <__swhatbuf_r+0x1e>
 800f9be:	2340      	movs	r3, #64	; 0x40
 800f9c0:	2000      	movs	r0, #0
 800f9c2:	6023      	str	r3, [r4, #0]
 800f9c4:	b016      	add	sp, #88	; 0x58
 800f9c6:	bd70      	pop	{r4, r5, r6, pc}

0800f9c8 <__smakebuf_r>:
 800f9c8:	898b      	ldrh	r3, [r1, #12]
 800f9ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f9cc:	079d      	lsls	r5, r3, #30
 800f9ce:	4606      	mov	r6, r0
 800f9d0:	460c      	mov	r4, r1
 800f9d2:	d507      	bpl.n	800f9e4 <__smakebuf_r+0x1c>
 800f9d4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800f9d8:	6023      	str	r3, [r4, #0]
 800f9da:	6123      	str	r3, [r4, #16]
 800f9dc:	2301      	movs	r3, #1
 800f9de:	6163      	str	r3, [r4, #20]
 800f9e0:	b002      	add	sp, #8
 800f9e2:	bd70      	pop	{r4, r5, r6, pc}
 800f9e4:	466a      	mov	r2, sp
 800f9e6:	ab01      	add	r3, sp, #4
 800f9e8:	f7ff ffc9 	bl	800f97e <__swhatbuf_r>
 800f9ec:	9900      	ldr	r1, [sp, #0]
 800f9ee:	4605      	mov	r5, r0
 800f9f0:	4630      	mov	r0, r6
 800f9f2:	f7fe fd47 	bl	800e484 <_malloc_r>
 800f9f6:	b948      	cbnz	r0, 800fa0c <__smakebuf_r+0x44>
 800f9f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f9fc:	059a      	lsls	r2, r3, #22
 800f9fe:	d4ef      	bmi.n	800f9e0 <__smakebuf_r+0x18>
 800fa00:	f023 0303 	bic.w	r3, r3, #3
 800fa04:	f043 0302 	orr.w	r3, r3, #2
 800fa08:	81a3      	strh	r3, [r4, #12]
 800fa0a:	e7e3      	b.n	800f9d4 <__smakebuf_r+0xc>
 800fa0c:	4b0d      	ldr	r3, [pc, #52]	; (800fa44 <__smakebuf_r+0x7c>)
 800fa0e:	62b3      	str	r3, [r6, #40]	; 0x28
 800fa10:	89a3      	ldrh	r3, [r4, #12]
 800fa12:	6020      	str	r0, [r4, #0]
 800fa14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fa18:	81a3      	strh	r3, [r4, #12]
 800fa1a:	9b00      	ldr	r3, [sp, #0]
 800fa1c:	6120      	str	r0, [r4, #16]
 800fa1e:	6163      	str	r3, [r4, #20]
 800fa20:	9b01      	ldr	r3, [sp, #4]
 800fa22:	b15b      	cbz	r3, 800fa3c <__smakebuf_r+0x74>
 800fa24:	4630      	mov	r0, r6
 800fa26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fa2a:	f000 f86b 	bl	800fb04 <_isatty_r>
 800fa2e:	b128      	cbz	r0, 800fa3c <__smakebuf_r+0x74>
 800fa30:	89a3      	ldrh	r3, [r4, #12]
 800fa32:	f023 0303 	bic.w	r3, r3, #3
 800fa36:	f043 0301 	orr.w	r3, r3, #1
 800fa3a:	81a3      	strh	r3, [r4, #12]
 800fa3c:	89a0      	ldrh	r0, [r4, #12]
 800fa3e:	4305      	orrs	r5, r0
 800fa40:	81a5      	strh	r5, [r4, #12]
 800fa42:	e7cd      	b.n	800f9e0 <__smakebuf_r+0x18>
 800fa44:	0800f2cd 	.word	0x0800f2cd

0800fa48 <_malloc_usable_size_r>:
 800fa48:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fa4c:	1f18      	subs	r0, r3, #4
 800fa4e:	2b00      	cmp	r3, #0
 800fa50:	bfbc      	itt	lt
 800fa52:	580b      	ldrlt	r3, [r1, r0]
 800fa54:	18c0      	addlt	r0, r0, r3
 800fa56:	4770      	bx	lr

0800fa58 <_raise_r>:
 800fa58:	291f      	cmp	r1, #31
 800fa5a:	b538      	push	{r3, r4, r5, lr}
 800fa5c:	4604      	mov	r4, r0
 800fa5e:	460d      	mov	r5, r1
 800fa60:	d904      	bls.n	800fa6c <_raise_r+0x14>
 800fa62:	2316      	movs	r3, #22
 800fa64:	6003      	str	r3, [r0, #0]
 800fa66:	f04f 30ff 	mov.w	r0, #4294967295
 800fa6a:	bd38      	pop	{r3, r4, r5, pc}
 800fa6c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fa6e:	b112      	cbz	r2, 800fa76 <_raise_r+0x1e>
 800fa70:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fa74:	b94b      	cbnz	r3, 800fa8a <_raise_r+0x32>
 800fa76:	4620      	mov	r0, r4
 800fa78:	f000 f830 	bl	800fadc <_getpid_r>
 800fa7c:	462a      	mov	r2, r5
 800fa7e:	4601      	mov	r1, r0
 800fa80:	4620      	mov	r0, r4
 800fa82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fa86:	f000 b817 	b.w	800fab8 <_kill_r>
 800fa8a:	2b01      	cmp	r3, #1
 800fa8c:	d00a      	beq.n	800faa4 <_raise_r+0x4c>
 800fa8e:	1c59      	adds	r1, r3, #1
 800fa90:	d103      	bne.n	800fa9a <_raise_r+0x42>
 800fa92:	2316      	movs	r3, #22
 800fa94:	6003      	str	r3, [r0, #0]
 800fa96:	2001      	movs	r0, #1
 800fa98:	e7e7      	b.n	800fa6a <_raise_r+0x12>
 800fa9a:	2400      	movs	r4, #0
 800fa9c:	4628      	mov	r0, r5
 800fa9e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800faa2:	4798      	blx	r3
 800faa4:	2000      	movs	r0, #0
 800faa6:	e7e0      	b.n	800fa6a <_raise_r+0x12>

0800faa8 <raise>:
 800faa8:	4b02      	ldr	r3, [pc, #8]	; (800fab4 <raise+0xc>)
 800faaa:	4601      	mov	r1, r0
 800faac:	6818      	ldr	r0, [r3, #0]
 800faae:	f7ff bfd3 	b.w	800fa58 <_raise_r>
 800fab2:	bf00      	nop
 800fab4:	200001a0 	.word	0x200001a0

0800fab8 <_kill_r>:
 800fab8:	b538      	push	{r3, r4, r5, lr}
 800faba:	2300      	movs	r3, #0
 800fabc:	4d06      	ldr	r5, [pc, #24]	; (800fad8 <_kill_r+0x20>)
 800fabe:	4604      	mov	r4, r0
 800fac0:	4608      	mov	r0, r1
 800fac2:	4611      	mov	r1, r2
 800fac4:	602b      	str	r3, [r5, #0]
 800fac6:	f7f5 fa1c 	bl	8004f02 <_kill>
 800faca:	1c43      	adds	r3, r0, #1
 800facc:	d102      	bne.n	800fad4 <_kill_r+0x1c>
 800face:	682b      	ldr	r3, [r5, #0]
 800fad0:	b103      	cbz	r3, 800fad4 <_kill_r+0x1c>
 800fad2:	6023      	str	r3, [r4, #0]
 800fad4:	bd38      	pop	{r3, r4, r5, pc}
 800fad6:	bf00      	nop
 800fad8:	20001458 	.word	0x20001458

0800fadc <_getpid_r>:
 800fadc:	f7f5 ba0a 	b.w	8004ef4 <_getpid>

0800fae0 <_fstat_r>:
 800fae0:	b538      	push	{r3, r4, r5, lr}
 800fae2:	2300      	movs	r3, #0
 800fae4:	4d06      	ldr	r5, [pc, #24]	; (800fb00 <_fstat_r+0x20>)
 800fae6:	4604      	mov	r4, r0
 800fae8:	4608      	mov	r0, r1
 800faea:	4611      	mov	r1, r2
 800faec:	602b      	str	r3, [r5, #0]
 800faee:	f7f5 fa66 	bl	8004fbe <_fstat>
 800faf2:	1c43      	adds	r3, r0, #1
 800faf4:	d102      	bne.n	800fafc <_fstat_r+0x1c>
 800faf6:	682b      	ldr	r3, [r5, #0]
 800faf8:	b103      	cbz	r3, 800fafc <_fstat_r+0x1c>
 800fafa:	6023      	str	r3, [r4, #0]
 800fafc:	bd38      	pop	{r3, r4, r5, pc}
 800fafe:	bf00      	nop
 800fb00:	20001458 	.word	0x20001458

0800fb04 <_isatty_r>:
 800fb04:	b538      	push	{r3, r4, r5, lr}
 800fb06:	2300      	movs	r3, #0
 800fb08:	4d05      	ldr	r5, [pc, #20]	; (800fb20 <_isatty_r+0x1c>)
 800fb0a:	4604      	mov	r4, r0
 800fb0c:	4608      	mov	r0, r1
 800fb0e:	602b      	str	r3, [r5, #0]
 800fb10:	f7f5 fa64 	bl	8004fdc <_isatty>
 800fb14:	1c43      	adds	r3, r0, #1
 800fb16:	d102      	bne.n	800fb1e <_isatty_r+0x1a>
 800fb18:	682b      	ldr	r3, [r5, #0]
 800fb1a:	b103      	cbz	r3, 800fb1e <_isatty_r+0x1a>
 800fb1c:	6023      	str	r3, [r4, #0]
 800fb1e:	bd38      	pop	{r3, r4, r5, pc}
 800fb20:	20001458 	.word	0x20001458

0800fb24 <_init>:
 800fb24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb26:	bf00      	nop
 800fb28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fb2a:	bc08      	pop	{r3}
 800fb2c:	469e      	mov	lr, r3
 800fb2e:	4770      	bx	lr

0800fb30 <_fini>:
 800fb30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb32:	bf00      	nop
 800fb34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fb36:	bc08      	pop	{r3}
 800fb38:	469e      	mov	lr, r3
 800fb3a:	4770      	bx	lr
 800fb3c:	0000      	movs	r0, r0
	...

0800fb40 <__HAL_GPIO_EXTI_Callback_veneer>:
 800fb40:	f85f f000 	ldr.w	pc, [pc]	; 800fb44 <__HAL_GPIO_EXTI_Callback_veneer+0x4>
 800fb44:	200003a9 	.word	0x200003a9

Disassembly of section .data:

20000000 <USB_rx_command_buffer>:
20000000:	20000728 00000000 0001001e              (.. ........

2000000c <amp_target_speed>:
2000000c:	2b8cbccc                                ...+

20000010 <ramp_target_speed>:
20000010:	3dcccccd                                ...=

20000014 <DDS_target_multipiller>:
20000014:	00000001                                ....

20000018 <DDS_clock_frequecny>:
20000018:	4b189680                                ...K

2000001c <Display_need_wakeup>:
2000001c:	                                         .

2000001d <CAL_STATE>:
2000001d:	                                         ...

20000020 <SystemCoreClock>:
20000020:	001fff68                                h...

20000024 <TMP117_DeviceID>:
20000024:	00000092                                ....

20000028 <uwTickFreq>:
20000028:	00000001                                ....

2000002c <uwTickPrio>:
2000002c:	00000010                                ....

20000030 <USBD_CDC>:
20000030:	080099bd 08009979 080098b5 00000000     ....y...........
20000040:	080097d1 0800986d 0800983d 00000000     ....m...=.......
	...
20000058:	0800980d 080097fd 0800981d 0800982d     ............-...

20000068 <USBD_CDC_CfgFSDesc>:
20000068:	00430209 c0000102 00040932 02020100     ..C.....2.......
20000078:	24050001 05011000 01000124 02022404     ...$....$....$..
20000088:	00062405 82050701 10000803 00010409     .$..............
20000098:	00000a02 01050700 00004002 02810507     .........@......
200000a8:	00000040                                @...

200000ac <USBD_CDC_CfgHSDesc>:
200000ac:	00430209 c0000102 00040932 02020100     ..C.....2.......
200000bc:	24050001 05011000 01000124 02022404     ...$....$....$..
200000cc:	00062405 82050701 10000803 00010409     .$..............
200000dc:	00000a02 01050700 00020002 02810507     ................
200000ec:	00000200                                ....

200000f0 <USBD_CDC_DeviceQualifierDesc>:
200000f0:	0200060a 40000000 00000001              .......@....

200000fc <USBD_CDC_OtherSpeedCfgDesc>:
200000fc:	00430709 c0040102 00040932 02020100     ..C.....2.......
2000010c:	24050001 05011000 01000124 02022404     ...$....$....$..
2000011c:	00062405 82050701 10000803 00010409     .$..............
2000012c:	00000a02 01050700 00004002 02810507     .........@......
2000013c:	00000040                                @...

20000140 <USBD_Interface_fops_FS>:
20000140:	0800a3e1 0800a3dd 0800a409 0800a425     ............%...

20000150 <FS_Desc>:
20000150:	0800a4c9 0800a4d5 0800a4e1 0800a4fd     ................
20000160:	0800a551 0800a519 0800a535              Q.......5...

2000016c <USBD_FS_DeviceDesc>:
2000016c:	02000112 40000202 57400483 02010200     .......@..@W....
2000017c:	00000103                                ....

20000180 <USBD_LangIDDesc>:
20000180:	04090304                                ....

20000184 <USBD_StringSerial>:
20000184:	0000031a 00000000 00000000 00000000     ................
	...

200001a0 <_impure_ptr>:
200001a0:	200001a4                                ... 

200001a4 <impure_data>:
200001a4:	00000000 08010cf4 08010d14 08010cd4     ................
	...

20000204 <numempty>:
20000204:	000000ff                                ....

20000208 <__global_locale>:
20000208:	00000043 00000000 00000000 00000000     C...............
	...
20000228:	00000043 00000000 00000000 00000000     C...............
	...
20000248:	00000043 00000000 00000000 00000000     C...............
	...
20000268:	00000043 00000000 00000000 00000000     C...............
	...
20000288:	00000043 00000000 00000000 00000000     C...............
	...
200002a8:	00000043 00000000 00000000 00000000     C...............
	...
200002c8:	00000043 00000000 00000000 00000000     C...............
	...
200002e8:	0800f0b1 0800d9dd 00000000 08010908     ................
200002f8:	08010afc 08010cd3 08010cd3 08010cd3     ................
20000308:	08010cd3 08010cd3 08010cd3 08010cd3     ................
20000318:	08010cd3 08010cd3 ffffffff ffffffff     ................
20000328:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000350:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000374 <DAC_Write_FAST>:
{
20000374:	b580      	push	{r7, lr}
20000376:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_RESET);
20000378:	2200      	movs	r2, #0
2000037a:	2110      	movs	r1, #16
2000037c:	4807      	ldr	r0, [pc, #28]	; (2000039c <DAC_Write_FAST+0x28>)
2000037e:	f000 f8c3 	bl	20000508 <__HAL_GPIO_WritePin_veneer>
	HAL_SPI_Transmit(&hspi1,(uint8_t *)DAC_tx_tmp_buffer,2,2);
20000382:	2302      	movs	r3, #2
20000384:	2202      	movs	r2, #2
20000386:	4906      	ldr	r1, [pc, #24]	; (200003a0 <DAC_Write_FAST+0x2c>)
20000388:	4806      	ldr	r0, [pc, #24]	; (200003a4 <DAC_Write_FAST+0x30>)
2000038a:	f000 f8b5 	bl	200004f8 <__HAL_SPI_Transmit_veneer>
	HAL_GPIO_WritePin(DAC_SYNC_GPIO_Port, DAC_SYNC_Pin, GPIO_PIN_SET);
2000038e:	2201      	movs	r2, #1
20000390:	2110      	movs	r1, #16
20000392:	4802      	ldr	r0, [pc, #8]	; (2000039c <DAC_Write_FAST+0x28>)
20000394:	f000 f8b8 	bl	20000508 <__HAL_GPIO_WritePin_veneer>
}
20000398:	bf00      	nop
2000039a:	bd80      	pop	{r7, pc}
2000039c:	40020000 	.word	0x40020000
200003a0:	2000074c 	.word	0x2000074c
200003a4:	2000078c 	.word	0x2000078c

200003a8 <HAL_GPIO_EXTI_Callback>:
{
200003a8:	b580      	push	{r7, lr}
200003aa:	b082      	sub	sp, #8
200003ac:	af00      	add	r7, sp, #0
200003ae:	4603      	mov	r3, r0
200003b0:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == CPU_IRQ_Pin) // CPU_IRQ signal from Timebase CPLD
200003b2:	88fb      	ldrh	r3, [r7, #6]
200003b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
200003b8:	d17d      	bne.n	200004b6 <HAL_GPIO_EXTI_Callback+0x10e>
		DAC_Write_FAST(); // Сначала стреляем, а потом уже разговариваем
200003ba:	f7ff ffdb 	bl	20000374 <DAC_Write_FAST>
		Ramp_dac_step_complete=1;
200003be:	4b45      	ldr	r3, [pc, #276]	; (200004d4 <HAL_GPIO_EXTI_Callback+0x12c>)
200003c0:	2201      	movs	r2, #1
200003c2:	701a      	strb	r2, [r3, #0]
		switch(DAC_code_direction)
200003c4:	4b44      	ldr	r3, [pc, #272]	; (200004d8 <HAL_GPIO_EXTI_Callback+0x130>)
200003c6:	781b      	ldrb	r3, [r3, #0]
200003c8:	2b02      	cmp	r3, #2
200003ca:	d02d      	beq.n	20000428 <HAL_GPIO_EXTI_Callback+0x80>
200003cc:	2b02      	cmp	r3, #2
200003ce:	dc57      	bgt.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
200003d0:	2b00      	cmp	r3, #0
200003d2:	d017      	beq.n	20000404 <HAL_GPIO_EXTI_Callback+0x5c>
200003d4:	2b01      	cmp	r3, #1
200003d6:	d153      	bne.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
			if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
200003d8:	4b40      	ldr	r3, [pc, #256]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
200003da:	681b      	ldr	r3, [r3, #0]
200003dc:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
200003e0:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
200003e4:	4a3e      	ldr	r2, [pc, #248]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003e6:	6812      	ldr	r2, [r2, #0]
200003e8:	4293      	cmp	r3, r2
200003ea:	d307      	bcc.n	200003fc <HAL_GPIO_EXTI_Callback+0x54>
				DAC_code+=DDS_target_multipiller;
200003ec:	4b3c      	ldr	r3, [pc, #240]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003ee:	681a      	ldr	r2, [r3, #0]
200003f0:	4b3a      	ldr	r3, [pc, #232]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
200003f2:	681b      	ldr	r3, [r3, #0]
200003f4:	4413      	add	r3, r2
200003f6:	4a3a      	ldr	r2, [pc, #232]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
200003f8:	6013      	str	r3, [r2, #0]
			break;
200003fa:	e041      	b.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
200003fc:	2000      	movs	r0, #0
200003fe:	f000 f87f 	bl	20000500 <__CPLD_control_veneer>
				return;
20000402:	e063      	b.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
			if(DAC_code>=DDS_target_multipiller)
20000404:	4b36      	ldr	r3, [pc, #216]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000406:	681a      	ldr	r2, [r3, #0]
20000408:	4b34      	ldr	r3, [pc, #208]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000040a:	681b      	ldr	r3, [r3, #0]
2000040c:	429a      	cmp	r2, r3
2000040e:	d307      	bcc.n	20000420 <HAL_GPIO_EXTI_Callback+0x78>
				DAC_code-=DDS_target_multipiller;
20000410:	4b33      	ldr	r3, [pc, #204]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000412:	681a      	ldr	r2, [r3, #0]
20000414:	4b31      	ldr	r3, [pc, #196]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000416:	681b      	ldr	r3, [r3, #0]
20000418:	1ad3      	subs	r3, r2, r3
2000041a:	4a31      	ldr	r2, [pc, #196]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000041c:	6013      	str	r3, [r2, #0]
			break;
2000041e:	e02f      	b.n	20000480 <HAL_GPIO_EXTI_Callback+0xd8>
				CPLD_control(CPLD_OFF_STATE); // Disable LDAC signal
20000420:	2000      	movs	r0, #0
20000422:	f000 f86d 	bl	20000500 <__CPLD_control_veneer>
				return;
20000426:	e051      	b.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
			if(DAC_code_direction_for_cycle_mode == 1)
20000428:	4b2e      	ldr	r3, [pc, #184]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
2000042a:	781b      	ldrb	r3, [r3, #0]
2000042c:	2b01      	cmp	r3, #1
2000042e:	d115      	bne.n	2000045c <HAL_GPIO_EXTI_Callback+0xb4>
				if(DAC_code<=(0xFFFFF-DDS_target_multipiller))
20000430:	4b2a      	ldr	r3, [pc, #168]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000432:	681b      	ldr	r3, [r3, #0]
20000434:	f5c3 237f 	rsb	r3, r3, #1044480	; 0xff000
20000438:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
2000043c:	4a28      	ldr	r2, [pc, #160]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000043e:	6812      	ldr	r2, [r2, #0]
20000440:	4293      	cmp	r3, r2
20000442:	d307      	bcc.n	20000454 <HAL_GPIO_EXTI_Callback+0xac>
					DAC_code+=DDS_target_multipiller;
20000444:	4b26      	ldr	r3, [pc, #152]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000446:	681a      	ldr	r2, [r3, #0]
20000448:	4b24      	ldr	r3, [pc, #144]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000044a:	681b      	ldr	r3, [r3, #0]
2000044c:	4413      	add	r3, r2
2000044e:	4a24      	ldr	r2, [pc, #144]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000450:	6013      	str	r3, [r2, #0]
			break;
20000452:	e014      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				} else  DAC_code_direction_for_cycle_mode=0;
20000454:	4b23      	ldr	r3, [pc, #140]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
20000456:	2200      	movs	r2, #0
20000458:	701a      	strb	r2, [r3, #0]
			break;
2000045a:	e010      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				if(DAC_code>=DDS_target_multipiller)
2000045c:	4b20      	ldr	r3, [pc, #128]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000045e:	681a      	ldr	r2, [r3, #0]
20000460:	4b1e      	ldr	r3, [pc, #120]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
20000462:	681b      	ldr	r3, [r3, #0]
20000464:	429a      	cmp	r2, r3
20000466:	d307      	bcc.n	20000478 <HAL_GPIO_EXTI_Callback+0xd0>
					DAC_code-=DDS_target_multipiller;
20000468:	4b1d      	ldr	r3, [pc, #116]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000046a:	681a      	ldr	r2, [r3, #0]
2000046c:	4b1b      	ldr	r3, [pc, #108]	; (200004dc <HAL_GPIO_EXTI_Callback+0x134>)
2000046e:	681b      	ldr	r3, [r3, #0]
20000470:	1ad3      	subs	r3, r2, r3
20000472:	4a1b      	ldr	r2, [pc, #108]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
20000474:	6013      	str	r3, [r2, #0]
			break;
20000476:	e002      	b.n	2000047e <HAL_GPIO_EXTI_Callback+0xd6>
				} else DAC_code_direction_for_cycle_mode=1;
20000478:	4b1a      	ldr	r3, [pc, #104]	; (200004e4 <HAL_GPIO_EXTI_Callback+0x13c>)
2000047a:	2201      	movs	r2, #1
2000047c:	701a      	strb	r2, [r3, #0]
			break;
2000047e:	bf00      	nop
		DAC_tx_buffer=0x01000000; // Write DAC-DATA
20000480:	4b19      	ldr	r3, [pc, #100]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
20000482:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
20000486:	601a      	str	r2, [r3, #0]
		DAC_tx_buffer+=(DAC_code & 0xFFFFF)<<4;
20000488:	4b15      	ldr	r3, [pc, #84]	; (200004e0 <HAL_GPIO_EXTI_Callback+0x138>)
2000048a:	681b      	ldr	r3, [r3, #0]
2000048c:	011b      	lsls	r3, r3, #4
2000048e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
20000492:	f023 030f 	bic.w	r3, r3, #15
20000496:	4a14      	ldr	r2, [pc, #80]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
20000498:	6812      	ldr	r2, [r2, #0]
2000049a:	4413      	add	r3, r2
2000049c:	4a12      	ldr	r2, [pc, #72]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
2000049e:	6013      	str	r3, [r2, #0]
		DAC_tx_tmp_buffer[0]=(DAC_tx_buffer & 0xFFFF0000)>>16;
200004a0:	4b11      	ldr	r3, [pc, #68]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
200004a2:	681b      	ldr	r3, [r3, #0]
200004a4:	0c1b      	lsrs	r3, r3, #16
200004a6:	b29a      	uxth	r2, r3
200004a8:	4b10      	ldr	r3, [pc, #64]	; (200004ec <HAL_GPIO_EXTI_Callback+0x144>)
200004aa:	801a      	strh	r2, [r3, #0]
		DAC_tx_tmp_buffer[1]=(DAC_tx_buffer & 0x0000FFFF);
200004ac:	4b0e      	ldr	r3, [pc, #56]	; (200004e8 <HAL_GPIO_EXTI_Callback+0x140>)
200004ae:	681b      	ldr	r3, [r3, #0]
200004b0:	b29a      	uxth	r2, r3
200004b2:	4b0e      	ldr	r3, [pc, #56]	; (200004ec <HAL_GPIO_EXTI_Callback+0x144>)
200004b4:	805a      	strh	r2, [r3, #2]
	if((GPIO_Pin == Start_button_Pin) || (GPIO_Pin == Encode_Push_Pin))Display_need_wakeup=1;
200004b6:	88fb      	ldrh	r3, [r7, #6]
200004b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
200004bc:	d003      	beq.n	200004c6 <HAL_GPIO_EXTI_Callback+0x11e>
200004be:	88fb      	ldrh	r3, [r7, #6]
200004c0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
200004c4:	d102      	bne.n	200004cc <HAL_GPIO_EXTI_Callback+0x124>
200004c6:	4b0a      	ldr	r3, [pc, #40]	; (200004f0 <HAL_GPIO_EXTI_Callback+0x148>)
200004c8:	2201      	movs	r2, #1
200004ca:	701a      	strb	r2, [r3, #0]
}
200004cc:	3708      	adds	r7, #8
200004ce:	46bd      	mov	sp, r7
200004d0:	bd80      	pop	{r7, pc}
200004d2:	bf00      	nop
200004d4:	20000789 	.word	0x20000789
200004d8:	20000784 	.word	0x20000784
200004dc:	20000014 	.word	0x20000014
200004e0:	20000780 	.word	0x20000780
200004e4:	20000785 	.word	0x20000785
200004e8:	20000748 	.word	0x20000748
200004ec:	2000074c 	.word	0x2000074c
200004f0:	2000001c 	.word	0x2000001c
200004f4:	00000000 	.word	0x00000000

200004f8 <__HAL_SPI_Transmit_veneer>:
200004f8:	f85f f000 	ldr.w	pc, [pc]	; 200004fc <__HAL_SPI_Transmit_veneer+0x4>
200004fc:	08007d25 	.word	0x08007d25

20000500 <__CPLD_control_veneer>:
20000500:	f85f f000 	ldr.w	pc, [pc]	; 20000504 <__CPLD_control_veneer+0x4>
20000504:	080017c1 	.word	0x080017c1

20000508 <__HAL_GPIO_WritePin_veneer>:
20000508:	f85f f000 	ldr.w	pc, [pc]	; 2000050c <__HAL_GPIO_WritePin_veneer+0x4>
2000050c:	08005c1d 	.word	0x08005c1d
